uint64_t sub_23C391CBC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B843C0);
  sub_23C3935DC(&qword_256B843C8, &qword_256B843C0, MEMORY[0x24BE2B5E8]);
  return sub_23C3F6780();
}

uint64_t SearchLandingView.init(store:canvasView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a5 = sub_23C391DB8;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_23C391D94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C391DB8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t SearchLandingView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v29 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84310);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_23C3F69C0();
  v6 = sub_23C3F70A4();
  v7 = sub_23C3F6CCC();
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - v8;
  v10 = sub_23C3F6804();
  v27 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v26 - v14;
  v16 = v2[1];
  v37 = *v2;
  v38 = v16;
  v39 = *((_QWORD *)v2 + 4);
  v17 = *(_QWORD *)(a1 + 24);
  v30 = v4;
  v31 = v17;
  v32 = &v37;
  v36[0] = sub_23C393020();
  v36[1] = v17;
  v35 = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v5, v36);
  v18 = MEMORY[0x24261DE88](MEMORY[0x24BDF5578], v6, &v35);
  sub_23C3F6CC0();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v4;
  *(_QWORD *)(v19 + 24) = v17;
  v20 = v38;
  *(_OWORD *)(v19 + 32) = v37;
  *(_OWORD *)(v19 + 48) = v20;
  *(_QWORD *)(v19 + 64) = v39;
  sub_23C39313C((uint64_t)&v37);
  v34 = v18;
  v21 = MEMORY[0x24261DE88](MEMORY[0x24BDF3F50], v7, &v34);
  sub_23C3F6C54();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
  v33[0] = v21;
  v33[1] = MEMORY[0x24BDF0910];
  MEMORY[0x24261DE88](MEMORY[0x24BDED308], v10, v33);
  v22 = v27;
  v23 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v23(v15, v13, v10);
  v24 = *(void (**)(char *, uint64_t))(v22 + 8);
  v24(v13, v10);
  v23(v29, v15, v10);
  return ((uint64_t (*)(char *, uint64_t))v24)(v15, v10);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24261DE7C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23C39209C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v41;
  char *v42;
  void (*v43)(uint64_t *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  _QWORD v79[2];
  uint64_t v80;
  _QWORD v81[2];
  _QWORD v82[2];
  __int128 v83;
  __int128 v84;
  uint64_t v85;

  v78 = a4;
  v62 = *(_QWORD *)(a2 - 8);
  v7 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v63 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v65 = (uint64_t *)((char *)&v60 - v9);
  v73 = (void (*)(uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(qword_256B84338);
  v66 = (uint64_t *)*((_QWORD *)v73 - 1);
  MEMORY[0x24BDAC7A8](v73);
  v64 = (uint64_t *)((char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B843D0);
  MEMORY[0x24BDAC7A8](v69);
  v70 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84310);
  MEMORY[0x24BDAC7A8](v12);
  v72 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84328);
  v68 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v67 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v12;
  v15 = sub_23C3F69C0();
  v76 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v75 = (char *)&v60 - v16;
  v17 = sub_23C3F70A4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v60 - v22;
  v24 = a1[1];
  v83 = *a1;
  v84 = v24;
  v85 = *((_QWORD *)a1 + 4);
  v77 = a3;
  type metadata accessor for SearchLandingView(0, a2, a3, v25);
  sub_23C391CBC();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  if ((v83 & 1) != 0)
    goto LABEL_5;
  v26 = a1[1];
  v83 = *a1;
  v84 = v26;
  v85 = *((_QWORD *)a1 + 4);
  sub_23C391CBC();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  v27 = v83;
  swift_bridgeObjectRelease();
  v28 = HIBYTE(*((_QWORD *)&v27 + 1)) & 0xFLL;
  if ((*((_QWORD *)&v27 + 1) & 0x2000000000000000) == 0)
    v28 = v27 & 0xFFFFFFFFFFFFLL;
  if (v28)
  {
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v21, 1, 1, v15);
    v29 = sub_23C393020();
    v30 = v77;
    v82[0] = v29;
    v82[1] = v77;
    MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v15, v82);
  }
  else
  {
    v34 = a1[1];
    v83 = *a1;
    v84 = v34;
    v85 = *((_QWORD *)a1 + 4);
    sub_23C391CBC();
    swift_getKeyPath();
    sub_23C3F6E4C();
    swift_release();
    v35 = swift_release();
    v36 = v83;
    if ((_BYTE)v84)
    {
      if (v84 == 1)
      {
        v37 = sub_23C393554(v83, *((uint64_t *)&v83 + 1), 1u);
        v38 = v63;
        (*((void (**)(uint64_t))a1 + 3))(v37);
        v39 = v62;
        v40 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v62 + 16);
        v41 = v65;
        v40(v65, v38, a2);
        v73 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
        v73(v38, a2);
        v40((uint64_t *)v38, (uint64_t)v41, a2);
        sub_23C393020();
        v42 = v75;
        v30 = v77;
        sub_23C3AD75C(v38, v74, a2);
        v43 = (void (*)(uint64_t *, uint64_t))v73;
        v73(v38, a2);
        v43(v65, a2);
      }
      else
      {
        v53 = v64;
        sub_23C3F678C();
        ((void (*)(char *, uint64_t *, void (*)(uint64_t, uint64_t)))v66[2])(v70, v53, v73);
        swift_storeEnumTagMultiPayload();
        sub_23C3935DC(&qword_256B84320, &qword_256B84328, MEMORY[0x24BDEFC28]);
        sub_23C3935DC(&qword_256B84330, qword_256B84338, MEMORY[0x24BDEBC00]);
        v54 = (uint64_t)v72;
        sub_23C3F69B4();
        sub_23C393020();
        v42 = v75;
        v30 = v77;
        sub_23C3AD698(v54, v74);
        sub_23C393574(v54);
        ((void (*)(uint64_t *, _QWORD))v66[1])(v64, v73);
      }
    }
    else
    {
      v66 = &v60;
      v44 = MEMORY[0x24BDAC7A8](v35);
      v65 = &v60 - 6;
      v45 = v77;
      v46 = MEMORY[0x24BDAC7A8](v44);
      v64 = &v60 - 8;
      *(&v60 - 6) = a2;
      *(&v60 - 5) = v45;
      MEMORY[0x24BDAC7A8](v46);
      v63 = v47;
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B843D8);
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B843E0);
      v48 = sub_23C3935DC(&qword_256B843E8, &qword_256B843D8, MEMORY[0x24BDF5428]);
      v49 = sub_23C3935DC(&qword_256B843F0, &qword_256B843E0, MEMORY[0x24BDF43B0]);
      v58 = v48;
      v59 = v49;
      v30 = v45;
      v57 = MEMORY[0x24BDF1F80];
      v56 = v61;
      v50 = v67;
      sub_23C3F69F0();
      sub_23C393554(v36, v63, 0);
      v51 = v71;
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v70, v50, v71);
      swift_storeEnumTagMultiPayload();
      v69 = sub_23C3935DC(&qword_256B84320, &qword_256B84328, MEMORY[0x24BDEFC28]);
      sub_23C3935DC(&qword_256B84330, qword_256B84338, MEMORY[0x24BDEBC00]);
      v52 = (uint64_t)v72;
      sub_23C3F69B4();
      sub_23C393020();
      v42 = v75;
      sub_23C3AD698(v52, v74);
      sub_23C393574(v52);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v51);
    }
    v79[0] = sub_23C393020();
    v79[1] = v30;
    MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v15, v79);
    v55 = v76;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v21, v42, v15);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v21, 0, 1, v15);
  }
  v31 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v31(v23, v21, v17);
  v32 = *(void (**)(char *, uint64_t))(v18 + 8);
  v32(v21, v17);
  v81[0] = sub_23C393020();
  v81[1] = v30;
  v80 = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v15, v81);
  MEMORY[0x24261DE88](MEMORY[0x24BDF5578], v17, &v80);
  v31(v78, v23, v17);
  return ((uint64_t (*)(char *, uint64_t))v32)(v23, v17);
}

uint64_t sub_23C392944@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23C39209C(*(__int128 **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C392950@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_23C3F6678();
  MEMORY[0x24BDAC7A8]();
  sub_23C3F6F3C();
  MEMORY[0x24BDAC7A8]();
  sub_23C3F6F30();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  type metadata accessor for SearchLandingView(0, a1, a2, v8);
  sub_23C391CBC();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  sub_23C3F6F60();
  sub_23C39365C();
  result = sub_23C3F6B70();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v10;
  *(_BYTE *)(a3 + 16) = v11 & 1;
  *(_QWORD *)(a3 + 24) = v12;
  return result;
}

uint64_t sub_23C392AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_23C392B14@<X0>(__int128 *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v26;

  sub_23C3F6678();
  MEMORY[0x24BDAC7A8]();
  sub_23C3F6F3C();
  MEMORY[0x24BDAC7A8]();
  sub_23C3F6F30();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  type metadata accessor for SearchLandingView(0, a2, a3, v10);
  sub_23C391CBC();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  sub_23C3F6F60();
  sub_23C39365C();
  v11 = sub_23C3F6B70();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v26 = *a1;
  sub_23C391CBC();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  if (v26 == 1)
  {
    swift_bridgeObjectRetain();
    v18 = sub_23C3F6B70();
    v19 = v22;
    v21 = v23;
    v20 = v24 & 1;
  }
  *(_QWORD *)a4 = v11;
  *(_QWORD *)(a4 + 8) = v13;
  *(_BYTE *)(a4 + 16) = v15 & 1;
  *(_QWORD *)(a4 + 24) = v17;
  *(_QWORD *)(a4 + 32) = v18;
  *(_QWORD *)(a4 + 40) = v19;
  *(_QWORD *)(a4 + 48) = v20;
  *(_QWORD *)(a4 + 56) = v21;
  sub_23C3936A0(v11, v13, v15 & 1);
  swift_bridgeObjectRetain();
  sub_23C3936B0(v18, v19, v20, v21);
  sub_23C3936E0(v18, v19, v20, v21);
  sub_23C393710(v11, v13, v15 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C392DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  sub_23C3F6678();
  MEMORY[0x24BDAC7A8]();
  sub_23C3F6F3C();
  MEMORY[0x24BDAC7A8]();
  sub_23C3F6F30();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  type metadata accessor for SearchLandingView(0, a2, a3, v8);
  sub_23C391CBC();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  sub_23C3F6F60();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 48) = v10;
  *(_QWORD *)(v9 + 64) = *(_QWORD *)(a1 + 32);
  sub_23C39313C(a1);
  sub_23C39365C();
  return sub_23C3F6D2C();
}

uint64_t sub_23C392FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SearchLandingView(0, a2, a3, a4);
  sub_23C391CBC();
  sub_23C3F6E64();
  return swift_release();
}

unint64_t sub_23C393020()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B84318;
  if (!qword_256B84318)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84310);
    v2[0] = sub_23C3935DC(&qword_256B84320, &qword_256B84328, MEMORY[0x24BDEFC28]);
    v2[1] = sub_23C3935DC(&qword_256B84330, qword_256B84338, MEMORY[0x24BDEBC00]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B84318);
  }
  return result;
}

uint64_t sub_23C3930BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SearchLandingView(0, a2, a3, a4);
  sub_23C391CBC();
  sub_23C3F6E64();
  return swift_release();
}

uint64_t sub_23C393128()
{
  return swift_release();
}

uint64_t sub_23C393130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23C3930BC(v4 + 32, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_23C39313C(uint64_t a1)
{
  sub_23C393178();
  swift_retain();
  return a1;
}

uint64_t sub_23C393178()
{
  return swift_retain();
}

uint64_t sub_23C393180()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3931BC()
{
  return sub_23C3F6BE8();
}

uint64_t sub_23C3931D8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for SearchItemPlaceholder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_23C393210()
{
  sub_23C393128();
  return swift_release();
}

uint64_t sub_23C393240(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C393178();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  return a1;
}

uint64_t sub_23C3932A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C393178();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C393128();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_23C39332C(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23C393128();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_23C393380(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23C3933C8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for SearchLandingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SearchLandingView);
}

uint64_t sub_23C39341C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84310);
  v2 = sub_23C3F69C0();
  v3 = sub_23C3F70A4();
  v4 = sub_23C3F6CCC();
  v5 = sub_23C3F6804();
  v10[0] = sub_23C393020();
  v10[1] = v1;
  v9 = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v2, v10);
  v8 = MEMORY[0x24261DE88](MEMORY[0x24BDF5578], v3, &v9);
  v7[0] = MEMORY[0x24261DE88](MEMORY[0x24BDF3F50], v4, &v8);
  v7[1] = MEMORY[0x24BDF0910];
  return MEMORY[0x24261DE88](MEMORY[0x24BDED308], v5, v7);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24261DE70]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_23C393554(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23C393574(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84310);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C3935B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C392950(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C3935C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C392B14(*(__int128 **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23C3935D0()
{
  uint64_t *v0;

  return sub_23C392DD8(v0[4], v0[2], v0[3]);
}

uint64_t sub_23C3935DC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24261DE88](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_2Tm()
{
  sub_23C393128();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C393650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23C392FC0(v4 + 32, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

unint64_t sub_23C39365C()
{
  unint64_t result;

  result = qword_256B843F8;
  if (!qword_256B843F8)
  {
    result = MEMORY[0x24261DE88](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256B843F8);
  }
  return result;
}

uint64_t sub_23C3936A0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_23C3936B0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23C3936A0(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23C3936E0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23C393710(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23C393710(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24261DDF8](a1, v6, a5);
}

uint64_t static SearchLayout.historyDisplayCount.getter()
{
  return 6;
}

double SearchLayout.historyItemLeadingPadding.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double SearchLayout.historyListHorizontalPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double SearchLayout.suggestionLeadingPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void SearchLayout.init(historyItemLeadingPadding:historyListHorizontalPadding:suggestionLeadingPadding:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
}

double static SearchLayout.default.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 4.0;
  *(_OWORD *)a1 = xmmword_23C3F7A40;
  *(_QWORD *)(a1 + 16) = 0x4018000000000000;
  return result;
}

unint64_t sub_23C393794(char a1)
{
  if (!a1)
    return 0xD000000000000019;
  if (a1 == 1)
    return 0xD00000000000001CLL;
  return 0xD000000000000018;
}

BOOL sub_23C3937F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23C393804()
{
  sub_23C3F72F0();
  sub_23C3F72FC();
  return sub_23C3F7320();
}

uint64_t sub_23C393848()
{
  return sub_23C3F72FC();
}

uint64_t sub_23C393870()
{
  sub_23C3F72F0();
  sub_23C3F72FC();
  return sub_23C3F7320();
}

unint64_t sub_23C3938B0()
{
  char *v0;

  return sub_23C393794(*v0);
}

uint64_t sub_23C3938B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C39427C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3938DC()
{
  return 0;
}

void sub_23C3938E8(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_23C3938F4()
{
  sub_23C393AF0();
  return sub_23C3F7344();
}

uint64_t sub_23C39391C()
{
  sub_23C393AF0();
  return sub_23C3F7350();
}

uint64_t SearchLayout.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84400);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v10 = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C393AF0();
  sub_23C3F7338();
  v14 = v9;
  v13 = 0;
  sub_23C393B34();
  sub_23C3F7284();
  if (!v2)
  {
    v14 = v8;
    v13 = 1;
    sub_23C3F7284();
    v14 = v10;
    v13 = 2;
    sub_23C3F7284();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_23C393AF0()
{
  unint64_t result;

  result = qword_256B84408;
  if (!qword_256B84408)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F7BF8, &type metadata for SearchLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84408);
  }
  return result;
}

unint64_t sub_23C393B34()
{
  unint64_t result;

  result = qword_256B84410;
  if (!qword_256B84410)
  {
    result = MEMORY[0x24261DE88](MEMORY[0x24BEE50C0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256B84410);
  }
  return result;
}

uint64_t SearchLayout.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84418);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C393AF0();
  sub_23C3F732C();
  if (!v2)
  {
    v14 = 0;
    sub_23C393D5C();
    sub_23C3F7218();
    v9 = v15;
    v14 = 1;
    sub_23C3F7218();
    v11 = v15;
    v14 = 2;
    sub_23C3F7218();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v15;
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_23C393D5C()
{
  unint64_t result;

  result = qword_256B84420;
  if (!qword_256B84420)
  {
    result = MEMORY[0x24261DE88](MEMORY[0x24BEE50E8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256B84420);
  }
  return result;
}

uint64_t sub_23C393DA0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SearchLayout.init(from:)(a1, a2);
}

uint64_t sub_23C393DB4(_QWORD *a1)
{
  return SearchLayout.encode(to:)(a1);
}

uint64_t SearchLayout.hash(into:)()
{
  sub_23C3F7314();
  sub_23C3F7314();
  return sub_23C3F7314();
}

uint64_t SearchLayout.hashValue.getter()
{
  sub_23C3F72F0();
  SearchLayout.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C393E6C()
{
  sub_23C3F72F0();
  SearchLayout.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C393EC0()
{
  sub_23C3F72F0();
  SearchLayout.hash(into:)();
  return sub_23C3F7320();
}

BOOL static SearchLayout.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

unint64_t sub_23C393F40()
{
  unint64_t result;

  result = qword_256B84428;
  if (!qword_256B84428)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchLayout, &type metadata for SearchLayout);
    atomic_store(result, (unint64_t *)&qword_256B84428);
  }
  return result;
}

BOOL sub_23C393F84(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SearchLayout(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SearchLayout(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SearchLayout()
{
  return &type metadata for SearchLayout;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SearchLayout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchLayout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C394110 + 4 * byte_23C3F7A55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C394144 + 4 * byte_23C3F7A50[v4]))();
}

uint64_t sub_23C394144(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C39414C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C394154);
  return result;
}

uint64_t sub_23C394160(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C394168);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C39416C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C394174(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C394180(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_23C39418C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SearchLayout.CodingKeys()
{
  return &type metadata for SearchLayout.CodingKeys;
}

unint64_t sub_23C3941A8()
{
  unint64_t result;

  result = qword_256B84430;
  if (!qword_256B84430)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F7BD0, &type metadata for SearchLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84430);
  }
  return result;
}

unint64_t sub_23C3941F0()
{
  unint64_t result;

  result = qword_256B84438;
  if (!qword_256B84438)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F7B40, &type metadata for SearchLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84438);
  }
  return result;
}

unint64_t sub_23C394238()
{
  unint64_t result;

  result = qword_256B84440;
  if (!qword_256B84440)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F7B68, &type metadata for SearchLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84440);
  }
  return result;
}

uint64_t sub_23C39427C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000019 && a2 == 0x800000023C400A80 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000023C400AA0 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023C400AC0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t SearchContentReferenceType.rawValue.getter(char a1)
{
  return *(_QWORD *)&aEditoriaeditor[8 * a1];
}

uint64_t sub_23C3943E0(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = SearchContentReferenceType.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == SearchContentReferenceType.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23C3F72A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23C394468@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s13FitnessSearch0B20ContentReferenceTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_23C394494@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = SearchContentReferenceType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23C3944BC()
{
  sub_23C39484C();
  return sub_23C3F6FA8();
}

uint64_t sub_23C394518()
{
  sub_23C39484C();
  return sub_23C3F6F9C();
}

uint64_t sub_23C394564()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_23C3F72F0();
  SearchContentReferenceType.rawValue.getter(v1);
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C3945C4()
{
  char *v0;

  SearchContentReferenceType.rawValue.getter(*v0);
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C394604()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_23C3F72F0();
  SearchContentReferenceType.rawValue.getter(v1);
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B20ContentReferenceTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_23C3F71AC();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

unint64_t sub_23C3946AC()
{
  unint64_t result;

  result = qword_256B84448;
  if (!qword_256B84448)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchContentReferenceType, &type metadata for SearchContentReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B84448);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SearchContentReferenceType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchContentReferenceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23C3947CC + 4 * byte_23C3F7C55[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23C394800 + 4 * byte_23C3F7C50[v4]))();
}

uint64_t sub_23C394800(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C394808(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C394810);
  return result;
}

uint64_t sub_23C39481C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C394824);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23C394828(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C394830(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchContentReferenceType()
{
  return &type metadata for SearchContentReferenceType;
}

unint64_t sub_23C39484C()
{
  unint64_t result;

  result = qword_256B84450;
  if (!qword_256B84450)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchContentReferenceType, &type metadata for SearchContentReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B84450);
  }
  return result;
}

uint64_t sub_23C394890()
{
  uint64_t v0;

  v0 = sub_23C3F6708();
  __swift_allocate_value_buffer(v0, qword_256B96FC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256B96FC0);
  return sub_23C3F66FC();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t SearchResultScope.datasetIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultScope.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultScope.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t SearchResultScope.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultScope.results.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall SearchResultScope.init(identifier:name:results:datasetIdentifier:index:)(FitnessSearch::SearchResultScope *__return_ptr retstr, Swift::String identifier, Swift::String name, Swift::OpaquePointer results, Swift::String_optional datasetIdentifier, Swift::Int index)
{
  retstr->datasetIdentifier = datasetIdentifier;
  retstr->identifier = identifier;
  retstr->index = index;
  retstr->name = name;
  retstr->results = results;
}

uint64_t sub_23C394A00(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C394A38 + 4 * byte_23C3F7E00[a1]))(0xD000000000000011, 0x800000023C400B00);
}

uint64_t sub_23C394A38()
{
  return 0x696669746E656469;
}

uint64_t sub_23C394A54()
{
  return 0x7865646E69;
}

uint64_t sub_23C394A68()
{
  return 1701667182;
}

uint64_t sub_23C394A78()
{
  return 0x73746C75736572;
}

uint64_t sub_23C394A90()
{
  unsigned __int8 *v0;

  return sub_23C394A00(*v0);
}

uint64_t sub_23C394A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C395CBC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C394ABC(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_23C394AC8()
{
  sub_23C394D30();
  return sub_23C3F7344();
}

uint64_t sub_23C394AF0()
{
  sub_23C394D30();
  return sub_23C3F7350();
}

uint64_t sub_23C394B18@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultScope.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84458);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v22 = v1[3];
  v23 = v8;
  v9 = v1[4];
  v20 = v1[5];
  v21 = v9;
  v10 = v1[6];
  v18 = v1[7];
  v19 = v10;
  v11 = a1[3];
  v12 = a1;
  v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_23C394D30();
  sub_23C3F7338();
  v29 = 0;
  sub_23C3F723C();
  if (!v2)
  {
    v15 = v18;
    v28 = 1;
    sub_23C3F7260();
    v27 = 2;
    sub_23C3F7278();
    v26 = 3;
    sub_23C3F7260();
    v24 = v15;
    v25 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84468);
    sub_23C3950EC(&qword_256B84470, &qword_256B84478, (uint64_t)&protocol conformance descriptor for SearchContentTile, MEMORY[0x24BEE12A0]);
    sub_23C3F7284();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

unint64_t sub_23C394D30()
{
  unint64_t result;

  result = qword_256B84460;
  if (!qword_256B84460)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F7FF8, &type metadata for SearchResultScope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84460);
  }
  return result;
}

uint64_t SearchResultScope.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84480);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C394D30();
  sub_23C3F732C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = 0;
  v9 = sub_23C3F71D0();
  v11 = v10;
  v26 = v9;
  v32 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23C3F71F4();
  v27 = v13;
  v24 = v12;
  v31 = 2;
  swift_bridgeObjectRetain();
  v25 = 0;
  v23 = sub_23C3F720C();
  v30 = 3;
  v21 = sub_23C3F71F4();
  v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B84468);
  v29 = 4;
  sub_23C3950EC(&qword_256B84488, &qword_256B84490, (uint64_t)&protocol conformance descriptor for SearchContentTile, MEMORY[0x24BEE12D0]);
  v22 = v16;
  swift_bridgeObjectRetain();
  sub_23C3F7218();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v28;
  swift_bridgeObjectRetain();
  v18 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v26;
  a2[1] = v11;
  a2[2] = v24;
  a2[3] = v18;
  v19 = v22;
  v20 = v21;
  a2[4] = v23;
  a2[5] = v20;
  a2[6] = v19;
  a2[7] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C3950EC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84468);
    v10 = sub_23C39650C(a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchContentTile, a3);
    result = MEMORY[0x24261DE88](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C395170@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SearchResultScope.init(from:)(a1, a2);
}

uint64_t sub_23C395184(_QWORD *a1)
{
  return SearchResultScope.encode(to:)(a1);
}

uint64_t SearchResultScope.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 56);
  if (*(_QWORD *)(v1 + 8))
  {
    sub_23C3F7308();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F72FC();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C39562C(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t SearchResultScope.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 56);
  sub_23C3F72F0();
  sub_23C3F7308();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F72FC();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C39562C((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C3953A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 56);
  sub_23C3F72F0();
  sub_23C3F7308();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F72FC();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C39562C((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C3954A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 16);
  result = sub_23C3F72FC();
  if (v4)
  {
    v6 = a2 + 48;
    do
    {
      v7 = *(_QWORD *)(v6 + 40);
      if (*(_QWORD *)(v6 - 8))
      {
        sub_23C3F7308();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23C3F6F6C();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23C3F7308();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      sub_23C3F6F6C();
      swift_bridgeObjectRelease();
      sub_23C3F72FC();
      swift_bridgeObjectRetain();
      sub_23C3F6F6C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23C39562C(a1, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
      v6 += 64;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_23C39562C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v3);
  v20 = (uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for SearchContentTile();
  v5 = *(_QWORD *)(v25 - 8);
  v6 = MEMORY[0x24BDAC7A8](v25);
  v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)(a2 + 16);
  result = sub_23C3F72FC();
  if (v11)
  {
    v13 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v14 = *(_QWORD *)(v5 + 72);
    v18 = v14;
    v19 = v10;
    do
    {
      sub_23C39654C(v13, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      sub_23C39654C((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = v20;
        sub_23C396590((uint64_t)v8, v20);
        sub_23C3F72FC();
        SearchItem.hash(into:)();
        sub_23C3965D4(v15, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
      }
      else
      {
        v16 = v8[6];
        v17 = v8[7];
        v21 = v8[5];
        v22 = v17;
        v23 = v8[8];
        sub_23C3F72FC();
        swift_bridgeObjectRetain();
        sub_23C3F6F6C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_23C3F6F6C();
        swift_bridgeObjectRelease();
        sub_23C3F6F6C();
        swift_bridgeObjectRelease();
        v24 = v16;
        sub_23C3F72FC();
        if (v16)
        {
          swift_bridgeObjectRetain();
          sub_23C3F6F6C();
          swift_bridgeObjectRelease();
        }
        v10 = v19;
        if (v23)
        {
          sub_23C3F7308();
          swift_bridgeObjectRetain();
          sub_23C3F6F6C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          sub_23C3F7308();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v14 = v18;
      }
      result = sub_23C3965D4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_23C39592C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = type metadata accessor for SearchHistoryItem();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_23C3F72FC();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    v11 = MEMORY[0x24BDCE930];
    do
    {
      sub_23C39654C(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      sub_23C3F6F6C();
      sub_23C3F6630();
      sub_23C39650C(qword_256B844C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v11);
      sub_23C3F6EE8();
      result = sub_23C3965D4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_23C395A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for SearchLandingSectionDescriptor();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  result = sub_23C3F72FC();
  if (v8)
  {
    v10 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v11 = *(_QWORD *)(v5 + 72);
    v12 = MEMORY[0x24BDCC5C0];
    do
    {
      sub_23C39654C(v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SearchLandingSectionDescriptor);
      sub_23C3F6F6C();
      sub_23C3F72FC();
      sub_23C3F65A0();
      sub_23C39650C(&qword_256B844B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], v12);
      sub_23C3F6EE8();
      sub_23C39562C(a1, *(_QWORD *)&v7[*(int *)(v4 + 28)]);
      result = sub_23C3965D4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SearchLandingSectionDescriptor);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_23C395B90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23C3F72FC();
  if (v3)
  {
    v5 = (_QWORD *)(a2 + 40);
    do
    {
      if (*v5)
      {
        sub_23C3F7308();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23C3F6F6C();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23C3F7308();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v5 += 7;
      swift_bridgeObjectRetain();
      sub_23C3F6F6C();
      swift_bridgeObjectRelease();
      sub_23C3F72FC();
      swift_bridgeObjectRetain();
      sub_23C3F6F6C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_23C395CBC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023C400B00 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7865646E69 && a2 == 0xE500000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t _s13FitnessSearch0B11ResultScopeV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v8 = a1[5];
  v7 = a1[6];
  v9 = a1[7];
  v10 = a2[1];
  v11 = a2[2];
  v13 = a2[3];
  v12 = a2[4];
  v15 = a2[5];
  v14 = a2[6];
  v16 = a2[7];
  if (v3)
  {
    if (!v10)
      return 0;
    if (*a1 != *a2 || v3 != v10)
    {
      v27 = a2[6];
      v28 = a2[7];
      v17 = a1[7];
      v18 = a1[4];
      v19 = sub_23C3F72A8();
      v5 = v18;
      v9 = v17;
      v14 = v27;
      v16 = v28;
      if ((v19 & 1) == 0)
        return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  if (v4 == v11 && v6 == v13)
  {
    if (v5 != v12)
      return 0;
  }
  else
  {
    v20 = v16;
    v21 = v9;
    v22 = v14;
    v23 = v5;
    if ((sub_23C3F72A8() & 1) == 0)
      return 0;
    v14 = v22;
    v9 = v21;
    v16 = v20;
    if (v23 != v12)
      return 0;
  }
  if (v8 == v15 && v7 == v14)
    return sub_23C3E9C1C(v9, v16);
  v24 = v9;
  v25 = sub_23C3F72A8();
  v9 = v24;
  if ((v25 & 1) != 0)
    return sub_23C3E9C1C(v9, v16);
  return 0;
}

uint64_t sub_23C39601C()
{
  return MEMORY[0x24BEE0D10];
}

unint64_t sub_23C39602C()
{
  unint64_t result;

  result = qword_256B84498;
  if (!qword_256B84498)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultScope, &type metadata for SearchResultScope);
    atomic_store(result, (unint64_t *)&qword_256B84498);
  }
  return result;
}

uint64_t destroy for SearchResultScope()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SearchResultScope(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SearchResultScope(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultScope(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultScope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultScope()
{
  return &type metadata for SearchResultScope;
}

uint64_t getEnumTagSinglePayload for SearchResultScope.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultScope.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23C3963B4 + 4 * byte_23C3F7E0A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23C3963E8 + 4 * byte_23C3F7E05[v4]))();
}

uint64_t sub_23C3963E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3963F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3963F8);
  return result;
}

uint64_t sub_23C396404(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C39640CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23C396410(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C396418(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultScope.CodingKeys()
{
  return &type metadata for SearchResultScope.CodingKeys;
}

unint64_t sub_23C396438()
{
  unint64_t result;

  result = qword_256B844A0;
  if (!qword_256B844A0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F7FD0, &type metadata for SearchResultScope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B844A0);
  }
  return result;
}

unint64_t sub_23C396480()
{
  unint64_t result;

  result = qword_256B844A8;
  if (!qword_256B844A8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F7F40, &type metadata for SearchResultScope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B844A8);
  }
  return result;
}

unint64_t sub_23C3964C8()
{
  unint64_t result;

  result = qword_256B844B0;
  if (!qword_256B844B0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F7F68, &type metadata for SearchResultScope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B844B0);
  }
  return result;
}

uint64_t sub_23C39650C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24261DE88](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C39654C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23C396590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3965D4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t SearchResultsState.datasetIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (*((_BYTE *)v0 + 56) != 1)
    return 0;
  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsState.term.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 56) != 1)
    return 0;
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23C3966A0()
{
  return swift_initClassMetadata2();
}

void sub_23C3966EC()
{
  sub_23C3969B8();
}

uint64_t sub_23C396724(uint64_t a1)
{
  void *v1;
  id v3;

  v3 = v1;
  return a1;
}

id sub_23C39673C()
{
  _QWORD *v0;
  id result;
  uint64_t (**v2)(id);
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  result = objc_msgSendSuper2(&v3, sel_viewDidLayoutSubviews);
  v2 = (uint64_t (**)(id))((char *)v0 + *(_QWORD *)(qword_256B96FD8 + (*MEMORY[0x24BEE4EA0] & *v0) + 16));
  if (*v2)
    return (id)(*v2)(result);
  return result;
}

void sub_23C3967B0(void *a1)
{
  id v1;

  v1 = a1;
  sub_23C39673C();

}

void sub_23C3967E4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23C396810()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23C39683C()
{
  _QWORD *v0;

  return sub_23C396A10(*(_QWORD *)((char *)v0 + *(_QWORD *)(qword_256B96FD8 + (*MEMORY[0x24BEE4EA0] & *v0) + 16)));
}

id sub_23C39686C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23C3968A0(_QWORD *a1)
{
  return sub_23C396A10(*(_QWORD *)((char *)a1 + *(_QWORD *)(qword_256B96FD8 + (*MEMORY[0x24BEE4EA0] & *a1) + 16)));
}

uint64_t type metadata accessor for ScrollObservingHostingController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScrollObservingHostingController);
}

uint64_t sub_23C3968DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  MEMORY[0x24BDAC7A8](a1);
  v3 = (_QWORD *)(v1 + *(_QWORD *)(v2 + 16));
  *v3 = v4;
  v3[1] = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - v7, v8, v9);
  return sub_23C3F6990();
}

uint64_t sub_23C396970(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_23C3968DC(a1);
}

void sub_23C3969B8()
{
  sub_23C3F717C();
  __break(1u);
}

uint64_t sub_23C396A10(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_23C396A20(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_23C3F6E10();
  }
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_23C3F6E10();
}

uint64_t sub_23C396BD4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B84658);
  sub_23C3935DC(&qword_256B84660, &qword_256B84658, MEMORY[0x24BE2B5E8]);
  return sub_23C3F6780();
}

uint64_t SearchView.init(store:resultsView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a5 = sub_23C391DB8;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = a3;
  *(_QWORD *)(a5 + 32) = a4;
  return result;
}

uint64_t sub_23C396CAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C396CD0()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v5;
  char v6;
  __int128 v7;

  v1 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v2) = *((_BYTE *)v0 + 16);
  v5 = *v0;
  v6 = v2;
  v7 = *(__int128 *)((char *)v0 + 24);
  sub_23C396BD4();
  swift_storeEnumTagMultiPayload();
  sub_23C3F6E64();
  swift_release();
  return sub_23C39A33C((uint64_t)v3);
}

uint64_t sub_23C396D80(uint64_t a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v7;
  char v8;
  __int128 v9;

  v3 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v4) = *((_BYTE *)v1 + 16);
  v7 = *v1;
  v8 = v4;
  v9 = *(__int128 *)((char *)v1 + 24);
  sub_23C396BD4();
  sub_23C39A678(a1, (uint64_t)v5);
  swift_storeEnumTagMultiPayload();
  sub_23C3F6E64();
  swift_release();
  return sub_23C39A33C((uint64_t)v5);
}

uint64_t SearchView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t OpaqueTypeConformance2;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _QWORD v66[2];
  _QWORD v67[2];
  __int128 v68;
  __int128 v69;
  uint64_t v70;

  v49 = a1;
  v51 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84548);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84550);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84558);
  v54 = *(_QWORD *)(a1 + 16);
  swift_getTupleTypeMetadata2();
  v3 = sub_23C3F6E04();
  v4 = MEMORY[0x24BDF5428];
  MEMORY[0x24261DE88](MEMORY[0x24BDF5428], v3);
  v5 = sub_23C3F675C();
  v53 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84560);
  v6 = MEMORY[0x24261DE88](MEMORY[0x24BDEB238], v5);
  *(_QWORD *)&v62 = v5;
  *((_QWORD *)&v62 + 1) = v53;
  *(_QWORD *)&v63 = v6;
  *((_QWORD *)&v63 + 1) = sub_23C3973F0();
  v7 = *((_QWORD *)&v63 + 1);
  v52 = *((_QWORD *)&v63 + 1);
  v8 = MEMORY[0x24BDF3908];
  MEMORY[0x24261DE40](255, &v62, MEMORY[0x24BDF3908], 0);
  *(_QWORD *)&v62 = v5;
  *((_QWORD *)&v62 + 1) = v53;
  *(_QWORD *)&v63 = v6;
  *((_QWORD *)&v63 + 1) = v7;
  swift_getOpaqueTypeConformance2();
  v9 = sub_23C3F6840();
  v10 = MEMORY[0x24261DE88](MEMORY[0x24BDEDA10], v9);
  *(_QWORD *)&v62 = v9;
  *((_QWORD *)&v62 + 1) = v10;
  MEMORY[0x24261DE40](255, &v62, MEMORY[0x24BDF31D0], 0);
  swift_getTupleTypeMetadata2();
  v11 = sub_23C3F6E04();
  v12 = MEMORY[0x24261DE88](v4, v11);
  *(_QWORD *)&v62 = v11;
  *((_QWORD *)&v62 + 1) = v12;
  MEMORY[0x24261DE40](255, &v62, MEMORY[0x24BE37998], 0);
  v13 = sub_23C3F69C0();
  v14 = sub_23C3F69C0();
  v15 = sub_23C397454();
  v16 = sub_23C397638();
  *(_QWORD *)&v62 = v11;
  *((_QWORD *)&v62 + 1) = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v67[0] = v16;
  v67[1] = OpaqueTypeConformance2;
  v18 = MEMORY[0x24BDEF3E0];
  v19 = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v13, v67);
  v66[0] = v15;
  v66[1] = v19;
  MEMORY[0x24261DE88](v18, v14, v66);
  v20 = sub_23C3F6D44();
  v43 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v43 - v21;
  v23 = MEMORY[0x24261DE88](MEMORY[0x24BDF4700], v20);
  *(_QWORD *)&v62 = v20;
  *((_QWORD *)&v62 + 1) = v23;
  v24 = MEMORY[0x24261DE40](0, &v62, MEMORY[0x24BE37C00], 0);
  v48 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v43 - v25;
  *(_QWORD *)&v62 = v20;
  *((_QWORD *)&v62 + 1) = v23;
  v45 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v62 = v24;
  *((_QWORD *)&v62 + 1) = v53;
  *(_QWORD *)&v63 = v45;
  *((_QWORD *)&v63 + 1) = v52;
  v27 = MEMORY[0x24261DE40](0, &v62, v8, 0);
  v47 = *(_QWORD *)(v27 - 8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v44 = (char *)&v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v46 = (uint64_t)&v43 - v30;
  v31 = v50[1];
  v68 = *v50;
  v69 = v31;
  v70 = *((_QWORD *)v50 + 4);
  v32 = *(_QWORD *)(v49 + 24);
  v55 = v54;
  v56 = v32;
  v57 = &v68;
  sub_23C3F6954();
  sub_23C3F6D38();
  __swift_instantiateConcreteTypeFromMangledName(qword_256B845D0);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_23C3F8160;
  *(_QWORD *)(v33 + 32) = 0x686372616553;
  *(_QWORD *)(v33 + 40) = 0xE600000000000000;
  sub_23C3F6B88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v20);
  v62 = v68;
  v63 = v69;
  *(_QWORD *)&v64 = v70;
  sub_23C396BD4();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  v58 = v62;
  v59 = v63;
  v60 = v64;
  v61 = v65;
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v54;
  *(_QWORD *)(v34 + 24) = v32;
  v35 = v69;
  *(_OWORD *)(v34 + 32) = v68;
  *(_OWORD *)(v34 + 48) = v35;
  *(_QWORD *)(v34 + 64) = v70;
  sub_23C39313C((uint64_t)&v68);
  v37 = (uint64_t)v44;
  v36 = v45;
  v39 = v52;
  v38 = v53;
  sub_23C3F6C6C();
  swift_release();
  sub_23C399FEC(v58, *((uint64_t *)&v58 + 1), v59, *((uint64_t *)&v59 + 1));
  (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v24);
  *(_QWORD *)&v62 = v24;
  *((_QWORD *)&v62 + 1) = v38;
  *(_QWORD *)&v63 = v36;
  *((_QWORD *)&v63 + 1) = v39;
  swift_getOpaqueTypeConformance2();
  v40 = v46;
  sub_23C39374C(v37, v27, v46);
  v41 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v41(v37, v27);
  sub_23C392AFC(v40, v27, v51);
  return ((uint64_t (*)(uint64_t, uint64_t))v41)(v40, v27);
}

unint64_t sub_23C3973F0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256B84568;
  if (!qword_256B84568)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84560);
    v2 = sub_23C39602C();
    result = MEMORY[0x24261DE88](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256B84568);
  }
  return result;
}

unint64_t sub_23C397454()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B84570;
  if (!qword_256B84570)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84548);
    v2[0] = sub_23C3974D8();
    v2[1] = sub_23C3935DC(&qword_256B84330, qword_256B84338, MEMORY[0x24BDEBC00]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B84570);
  }
  return result;
}

unint64_t sub_23C3974D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B84578;
  if (!qword_256B84578)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84580);
    v2[0] = sub_23C397544();
    v2[1] = sub_23C3975F4();
    result = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B84578);
  }
  return result;
}

unint64_t sub_23C397544()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B84588;
  if (!qword_256B84588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84590);
    v2[0] = sub_23C3975B0();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B84588);
  }
  return result;
}

unint64_t sub_23C3975B0()
{
  unint64_t result;

  result = qword_256B84598;
  if (!qword_256B84598)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB014, &type metadata for SearchHistoryView);
    atomic_store(result, (unint64_t *)&qword_256B84598);
  }
  return result;
}

unint64_t sub_23C3975F4()
{
  unint64_t result;

  result = qword_256B845A0;
  if (!qword_256B845A0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE818, &type metadata for SearchSuggesstionsView);
    atomic_store(result, (unint64_t *)&qword_256B845A0);
  }
  return result;
}

unint64_t sub_23C397638()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256B845A8;
  if (!qword_256B845A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84550);
    v2 = MEMORY[0x24BDEFC28];
    v3[0] = sub_23C3935DC(&qword_256B845B0, &qword_256B845B8, MEMORY[0x24BDEFC28]);
    v3[1] = sub_23C3935DC(&qword_256B845C0, &qword_256B845C8, v2);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256B845A8);
  }
  return result;
}

uint64_t sub_23C3976DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t OpaqueTypeConformance2;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  __int128 v105;
  char v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t);
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t (*v153)(uint64_t *);
  uint64_t v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  __int128 v169;
  _QWORD v170[2];
  _QWORD v171[2];
  unsigned __int8 v172;
  _BYTE v173[32];
  uint64_t (*v174)(uint64_t *);
  uint64_t v175;
  char v176;
  uint64_t (*v177)();
  uint64_t v178;
  uint64_t (*v179)();
  uint64_t v180;
  uint64_t (*v181)(uint64_t);
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int16 v201;
  uint64_t v202;
  unint64_t v203;
  _QWORD v204[2];
  _QWORD v205[2];
  _QWORD v206[2];
  _QWORD v207[2];
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char v215;

  v158 = a3;
  v167 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84558);
  v157 = a2;
  swift_getTupleTypeMetadata2();
  v6 = sub_23C3F6E04();
  v7 = MEMORY[0x24BDF5428];
  MEMORY[0x24261DE88](MEMORY[0x24BDF5428], v6);
  v8 = sub_23C3F675C();
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84560);
  v10 = MEMORY[0x24261DE88](MEMORY[0x24BDEB238], v8);
  v11 = sub_23C3973F0();
  *(_QWORD *)&v192 = v8;
  *((_QWORD *)&v192 + 1) = v9;
  *(_QWORD *)&v193 = v10;
  *((_QWORD *)&v193 + 1) = v11;
  MEMORY[0x24261DE40](255, &v192, MEMORY[0x24BDF3908], 0);
  *(_QWORD *)&v192 = v8;
  *((_QWORD *)&v192 + 1) = v9;
  *(_QWORD *)&v193 = v10;
  *((_QWORD *)&v193 + 1) = v11;
  swift_getOpaqueTypeConformance2();
  v12 = sub_23C3F6840();
  v13 = MEMORY[0x24261DE88](MEMORY[0x24BDEDA10], v12);
  *(_QWORD *)&v192 = v12;
  *((_QWORD *)&v192 + 1) = v13;
  MEMORY[0x24261DE40](255, &v192, MEMORY[0x24BDF31D0], 0);
  swift_getTupleTypeMetadata2();
  *(_QWORD *)&v169 = sub_23C3F6E04();
  *((_QWORD *)&v169 + 1) = MEMORY[0x24261DE88](v7, v169);
  v192 = v169;
  v14 = MEMORY[0x24261DE40](0, &v192, MEMORY[0x24BE37998], 0);
  v141 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v143 = (uint64_t)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v140 = (char *)&v137 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v142 = (uint64_t)&v137 - v19;
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B845C8);
  v139 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150);
  v138 = (char *)&v137 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84668);
  MEMORY[0x24BDAC7A8](v146);
  v147 = (char *)&v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84550);
  MEMORY[0x24BDAC7A8](v22);
  v149 = (char *)&v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B845B8);
  v145 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148);
  v144 = (char *)&v137 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = v22;
  v156 = v14;
  v25 = sub_23C3F69C0();
  *(_QWORD *)&v155 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v154 = (uint64_t)&v137 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v153 = (uint64_t (*)(uint64_t *))((char *)&v137 - v28);
  v162 = __swift_instantiateConcreteTypeFromMangledName(qword_256B84338);
  v151 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162);
  v30 = (char *)&v137 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84670);
  MEMORY[0x24BDAC7A8](v159);
  v160 = (char *)&v137 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84548);
  MEMORY[0x24BDAC7A8](v32);
  v161 = (char *)&v137 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = v34;
  v166 = v25;
  v35 = sub_23C3F69C0();
  v164 = *(_QWORD *)(v35 - 8);
  v165 = v35;
  MEMORY[0x24BDAC7A8](v35);
  v163 = (char *)&v137 - v36;
  v37 = *(_OWORD *)(a1 + 16);
  v192 = *(_OWORD *)a1;
  v193 = v37;
  *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
  sub_23C396BD4();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  v39 = v208;
  v38 = v209;
  v40 = v210;
  v41 = v211;
  v42 = v212;
  v43 = v214;
  if (!v215)
  {
    sub_23C39A378(v208, v209, v210, v211, v212, v213, v214, 0);
    sub_23C3F678C();
    v56 = v151;
    v57 = v162;
    (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v160, v30, v162);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84580);
    sub_23C3974D8();
    sub_23C3935DC(&qword_256B84330, qword_256B84338, MEMORY[0x24BDEBC00]);
    v58 = (uint64_t)v161;
    sub_23C3F69B4();
    sub_23C397454();
    v59 = sub_23C397638();
    v55 = v169;
    v192 = v169;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v204[0] = v59;
    v204[1] = OpaqueTypeConformance2;
    v61 = v166;
    MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v166, v204);
    v62 = (uint64_t)v163;
    sub_23C3AD698(v58, v168);
    sub_23C39AA6C(v58, &qword_256B84548);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v57);
LABEL_19:
    v79 = v167;
    v113 = v164;
    v112 = v165;
    goto LABEL_20;
  }
  if (v215 == 1)
  {
    v162 = v213;
    v44 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v44;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    sub_23C396BD4();
    swift_getKeyPath();
    sub_23C3F6E4C();
    swift_release();
    swift_release();
    if (v192 == 1 && v43)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v45 = sub_23C39A378(v39, v38, v40, v41, v42, v162, v43, 1);
      v161 = (char *)&v137;
      v46 = MEMORY[0x24BDAC7A8](v45);
      MEMORY[0x24BDAC7A8](v46);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B84678);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B843E0);
      sub_23C3935DC(&qword_256B84680, &qword_256B84678, MEMORY[0x24BDF5428]);
      sub_23C3935DC(&qword_256B843F0, &qword_256B843E0, MEMORY[0x24BDF43B0]);
      v47 = v144;
      sub_23C3F69F0();
      swift_bridgeObjectRelease();
      v48 = v145;
      v49 = v148;
      (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v147, v47, v148);
      swift_storeEnumTagMultiPayload();
      v50 = MEMORY[0x24BDEFC28];
      sub_23C3935DC(&qword_256B845B0, &qword_256B845B8, MEMORY[0x24BDEFC28]);
      sub_23C3935DC(&qword_256B845C0, &qword_256B845C8, v50);
      v51 = (uint64_t)v149;
      sub_23C3F69B4();
      sub_23C397638();
      v52 = v169;
      v192 = v169;
      swift_getOpaqueTypeConformance2();
      v53 = (uint64_t)v153;
      sub_23C3AD698(v51, v152);
      sub_23C39AA6C(v51, &qword_256B84550);
      v54 = *(void (**)(char *, uint64_t))(v48 + 8);
      v55 = v52;
      v54(v47, v49);
    }
    else if (*(_QWORD *)(v40 + 16))
    {
      sub_23C39A378(v39, v38, v40, v41, v42, v162, v43, 1);
      __swift_instantiateConcreteTypeFromMangledName(qword_256B845D0);
      v80 = swift_allocObject();
      *(_OWORD *)(v80 + 16) = xmmword_23C3F8160;
      *(_QWORD *)(v80 + 32) = 0x73746C75736552;
      *(_QWORD *)(v80 + 40) = 0xE700000000000000;
      MEMORY[0x24BDAC7A8](v80);
      v81 = v169;
      v82 = swift_checkMetadataState();
      v83 = (uint64_t)v140;
      v84 = *((_QWORD *)&v169 + 1);
      sub_23C3F66B4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v192 = v82;
      *((_QWORD *)&v192 + 1) = v84;
      swift_getOpaqueTypeConformance2();
      v85 = v142;
      v86 = v156;
      sub_23C39374C(v83, v156, v142);
      v87 = *(void (**)(uint64_t, uint64_t))(v141 + 8);
      v87(v83, v86);
      v88 = v143;
      sub_23C392AFC(v85, v86, v143);
      sub_23C397638();
      v53 = (uint64_t)v153;
      sub_23C3AD75C(v88, v152, v86);
      v87(v88, v86);
      v89 = v85;
      v55 = v81;
      v87(v89, v86);
    }
    else
    {
      swift_bridgeObjectRelease();
      v122 = v138;
      sub_23C3F69FC();
      sub_23C39A378(v39, v38, v40, v41, v42, v162, v43, 1);
      v123 = v139;
      v124 = v150;
      (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v147, v122, v150);
      swift_storeEnumTagMultiPayload();
      v125 = MEMORY[0x24BDEFC28];
      sub_23C3935DC(&qword_256B845B0, &qword_256B845B8, MEMORY[0x24BDEFC28]);
      sub_23C3935DC(&qword_256B845C0, &qword_256B845C8, v125);
      v126 = (uint64_t)v149;
      sub_23C3F69B4();
      sub_23C397638();
      v55 = v169;
      v192 = v169;
      swift_getOpaqueTypeConformance2();
      v53 = (uint64_t)v153;
      sub_23C3AD698(v126, v152);
      sub_23C39AA6C(v126, &qword_256B84550);
      (*(void (**)(char *, uint64_t))(v123 + 8))(v122, v124);
    }
    v127 = sub_23C397638();
    *(_QWORD *)&v192 = v55;
    *((_QWORD *)&v192 + 1) = *((_QWORD *)&v169 + 1);
    v128 = swift_getOpaqueTypeConformance2();
    v207[0] = v127;
    v207[1] = v128;
    v61 = v166;
    MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v166, v207);
    v129 = v154;
    sub_23C392AFC(v53, v61, v154);
    sub_23C397454();
    v62 = (uint64_t)v163;
    sub_23C3AD75C(v129, v168, v61);
    v130 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
    v130(v129, v61);
    v130(v53, v61);
    goto LABEL_19;
  }
  v63 = *(_OWORD *)(a1 + 16);
  v192 = *(_OWORD *)a1;
  v193 = v63;
  *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
  sub_23C396BD4();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  v65 = v202;
  v64 = v203;
  swift_bridgeObjectRelease();
  v66 = HIBYTE(v64) & 0xF;
  if ((v64 & 0x2000000000000000) == 0)
    v66 = v65 & 0xFFFFFFFFFFFFLL;
  if (v66)
  {
    v67 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v67;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    sub_23C396BD4();
    swift_getKeyPath();
    sub_23C3F6E4C();
    swift_release();
    swift_release();
    v68 = v191;
    if (v191)
    {
      v69 = v190;
      v70 = v189;
      swift_bridgeObjectRetain();
      sub_23C39A610(v70, v69, v68);
    }
    v71 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v71;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    sub_23C396BD4();
    swift_getKeyPath();
    sub_23C3F6E4C();
    swift_release();
    swift_release();
    v72 = *(_QWORD *)&v173[16];
    v73 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v73;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    sub_23C396BD4();
    swift_getKeyPath();
    sub_23C3F6E4C();
    swift_release();
    swift_release();
    v75 = *((_QWORD *)&v192 + 1);
    v74 = v192;
    v76 = swift_allocObject();
    v77 = v158;
    *(_QWORD *)(v76 + 16) = v157;
    *(_QWORD *)(v76 + 24) = v77;
    v78 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v76 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v76 + 48) = v78;
    *(_QWORD *)(v76 + 64) = *(_QWORD *)(a1 + 32);
    *(_QWORD *)v173 = v68;
    *(_QWORD *)&v173[8] = v72;
    *(_OWORD *)&v173[16] = __PAIR128__(v75, v74);
    v174 = sub_23C39A40C;
    v175 = v76;
    sub_23C39A418((uint64_t)v173);
    sub_23C39A424((uint64_t)v173, (uint64_t)v171);
    sub_23C39313C(a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84590);
    sub_23C397544();
    sub_23C3975F4();
    sub_23C3F69B4();
    v79 = v167;
  }
  else
  {
    v90 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v90;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    sub_23C396BD4();
    swift_getKeyPath();
    sub_23C3F6E4C();
    swift_release();
    swift_release();
    v156 = v189;
    v91 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v91;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    sub_23C396BD4();
    swift_getKeyPath();
    sub_23C3F6E4C();
    swift_release();
    swift_release();
    v155 = *(_OWORD *)v173;
    v92 = *(_QWORD *)&v173[16];
    v93 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v93;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    sub_23C396BD4();
    swift_getKeyPath();
    sub_23C3F6E70();
    swift_release();
    swift_release();
    v94 = v171[1];
    v153 = (uint64_t (*)(uint64_t *))v171[0];
    LODWORD(v154) = v172;
    v95 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v95;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    v96 = swift_allocObject();
    v98 = v157;
    v97 = v158;
    *(_QWORD *)(v96 + 16) = v157;
    *(_QWORD *)(v96 + 24) = v97;
    v99 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v96 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v96 + 48) = v99;
    *(_QWORD *)(v96 + 64) = *(_QWORD *)(a1 + 32);
    sub_23C39313C((uint64_t)&v192);
    v100 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v100;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    v101 = swift_allocObject();
    *(_QWORD *)(v101 + 16) = v98;
    *(_QWORD *)(v101 + 24) = v97;
    v102 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v101 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v101 + 48) = v102;
    *(_QWORD *)(v101 + 64) = *(_QWORD *)(a1 + 32);
    sub_23C39313C((uint64_t)&v192);
    v103 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v103;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    v104 = swift_allocObject();
    *(_QWORD *)(v104 + 16) = v98;
    *(_QWORD *)(v104 + 24) = v97;
    v105 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v104 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v104 + 48) = v105;
    *(_QWORD *)(v104 + 64) = *(_QWORD *)(a1 + 32);
    sub_23C39313C((uint64_t)&v192);
    v106 = sub_23C3F6A8C();
    v107 = *(_OWORD *)(a1 + 16);
    v192 = *(_OWORD *)a1;
    v193 = v107;
    *(_QWORD *)&v194 = *(_QWORD *)(a1 + 32);
    sub_23C396BD4();
    swift_getKeyPath();
    sub_23C3F6E4C();
    swift_release();
    swift_release();
    sub_23C3F6750();
    LOBYTE(v189) = 0;
    *(_QWORD *)v173 = v156;
    *(_OWORD *)&v173[8] = v155;
    *(_QWORD *)&v173[24] = v92;
    v174 = v153;
    v175 = v94;
    v176 = v154;
    v177 = sub_23C39A6E8;
    v178 = v96;
    v179 = sub_23C39A6C0;
    v180 = v101;
    v181 = sub_23C39A658;
    v182 = v104;
    v183 = v106;
    v184 = v108;
    v185 = v109;
    v186 = v110;
    v187 = v111;
    v188 = 0;
    sub_23C39A64C((uint64_t)v173);
    sub_23C39A424((uint64_t)v173, (uint64_t)v171);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84590);
    sub_23C397544();
    sub_23C3975F4();
    sub_23C3F69B4();
    v79 = v167;
  }
  v112 = v165;
  v61 = v166;
  v62 = (uint64_t)v163;
  v113 = v164;
  v114 = v160;
  v115 = v199;
  *((_OWORD *)v160 + 6) = v198;
  *((_OWORD *)v114 + 7) = v115;
  *((_OWORD *)v114 + 8) = v200;
  *((_WORD *)v114 + 72) = v201;
  v116 = v195;
  *((_OWORD *)v114 + 2) = v194;
  *((_OWORD *)v114 + 3) = v116;
  v117 = v197;
  *((_OWORD *)v114 + 4) = v196;
  *((_OWORD *)v114 + 5) = v117;
  v118 = v193;
  *(_OWORD *)v114 = v192;
  *((_OWORD *)v114 + 1) = v118;
  swift_storeEnumTagMultiPayload();
  sub_23C39A508((uint64_t)&v192, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23C39A46C);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B84580);
  sub_23C3974D8();
  sub_23C3935DC(&qword_256B84330, qword_256B84338, MEMORY[0x24BDEBC00]);
  v119 = (uint64_t)v161;
  sub_23C3F69B4();
  sub_23C397454();
  v120 = sub_23C397638();
  v55 = v169;
  *(_OWORD *)v173 = v169;
  v121 = swift_getOpaqueTypeConformance2();
  v170[0] = v120;
  v170[1] = v121;
  MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v61, v170);
  sub_23C3AD698(v119, v168);
  sub_23C39A508((uint64_t)&v192, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23C39A574);
  sub_23C39AA6C(v119, &qword_256B84548);
LABEL_20:
  v131 = sub_23C397454();
  v132 = sub_23C397638();
  *(_QWORD *)&v192 = v55;
  *((_QWORD *)&v192 + 1) = *((_QWORD *)&v169 + 1);
  v133 = swift_getOpaqueTypeConformance2();
  v206[0] = v132;
  v206[1] = v133;
  v134 = MEMORY[0x24BDEF3E0];
  v135 = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v61, v206);
  v205[0] = v131;
  v205[1] = v135;
  MEMORY[0x24261DE88](v134, v112, v205);
  sub_23C392AFC(v62, v112, v79);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 8))(v62, v112);
}

uint64_t sub_23C398A0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23C3976DC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_23C398A18(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *a1;
  v5 = a1[1];
  v8 = a1[2];
  v7 = a1[3];
  v9 = a1[4];
  v10 = a1[5];
  v11 = a1[6];
  sub_23C396BD4();
  *v4 = v6;
  v4[1] = v5;
  v4[2] = v8;
  v4[3] = v7;
  v4[4] = v9;
  v4[5] = v10;
  v4[6] = v11;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23C3F6E64();
  swift_release();
  return sub_23C39A33C((uint64_t)v4);
}

uint64_t sub_23C398AFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23C3F6918();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  result = sub_23C3F6B58();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v7;
  return result;
}

uint64_t sub_23C398BD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23C3F6918();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = sub_23C3F6B58();
  v22 = v5;
  v23 = v4;
  v24 = v6;
  v21 = v7 & 1;
  sub_23C39365C();
  swift_bridgeObjectRetain();
  v8 = sub_23C3F6B70();
  v10 = v9;
  v12 = v11 & 1;
  sub_23C3F6B10();
  v13 = sub_23C3F6B4C();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release();
  v17 &= 1u;
  sub_23C393710(v8, v10, v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v23;
  *(_QWORD *)(a1 + 8) = v22;
  *(_BYTE *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v24;
  *(_QWORD *)(a1 + 32) = v13;
  *(_QWORD *)(a1 + 40) = v15;
  *(_BYTE *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 56) = v19;
  sub_23C3936A0(v23, v22, v21);
  swift_bridgeObjectRetain();
  sub_23C3936A0(v13, v15, v17);
  swift_bridgeObjectRetain();
  sub_23C393710(v13, v15, v17);
  swift_bridgeObjectRelease();
  sub_23C393710(v23, v22, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C398DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;

  sub_23C3F6918();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 48) = v7;
  *(_QWORD *)(v6 + 64) = *(_QWORD *)(a1 + 32);
  sub_23C39313C(a1);
  return sub_23C3F6D20();
}

uint64_t sub_23C398E90()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _QWORD v5[2];

  v0 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C396BD4();
  sub_23C396BD4();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  v3 = v5[1];
  *(_QWORD *)v2 = v5[0];
  *((_QWORD *)v2 + 1) = v3;
  v2[16] = 3;
  swift_storeEnumTagMultiPayload();
  sub_23C3F6E64();
  swift_release();
  return sub_23C39A33C((uint64_t)v2);
}

uint64_t sub_23C398F70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD, _QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD);
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD);
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(_QWORD, _QWORD);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _QWORD v95[2];
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t *);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106[2];

  v84 = a4;
  v83 = a3;
  v80 = a5;
  v79 = sub_23C3F6A5C();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v77 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84558);
  swift_getTupleTypeMetadata2();
  v8 = sub_23C3F6E04();
  MEMORY[0x24261DE88](MEMORY[0x24BDF5428], v8);
  v9 = sub_23C3F675C();
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84560);
  v11 = MEMORY[0x24261DE88](MEMORY[0x24BDEB238], v9);
  v12 = sub_23C3973F0();
  *(_QWORD *)&v96 = v9;
  *((_QWORD *)&v96 + 1) = v10;
  *(_QWORD *)&v97 = v11;
  *((_QWORD *)&v97 + 1) = v12;
  v13 = MEMORY[0x24261DE40](255, &v96, MEMORY[0x24BDF3908], 0);
  *(_QWORD *)&v96 = v9;
  *((_QWORD *)&v96 + 1) = v10;
  *(_QWORD *)&v97 = v11;
  *((_QWORD *)&v97 + 1) = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v74 = v13;
  v72 = OpaqueTypeConformance2;
  v15 = sub_23C3F6840();
  v16 = MEMORY[0x24261DE88](MEMORY[0x24BDEDA10], v15);
  v73 = v15;
  *(_QWORD *)&v96 = v15;
  *((_QWORD *)&v96 + 1) = v16;
  v75 = v16;
  v71 = MEMORY[0x24261DE40](0, &v96, MEMORY[0x24BDF31D0], 0);
  v76 = *(_QWORD *)(v71 - 8);
  v17 = MEMORY[0x24BDAC7A8](v71);
  v90 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v91 = (uint64_t)&v66 - v19;
  v87 = sub_23C3F6654();
  v86 = *(_QWORD *)(v87 - 8);
  v20 = *(_QWORD *)(v86 + 64);
  v21 = MEMORY[0x24BDAC7A8](v87);
  v22 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v85 = (char *)&v66 - v23;
  sub_23C3F6648();
  v24 = *(_OWORD *)(a2 + 16);
  v96 = *(_OWORD *)a2;
  v97 = v24;
  v98 = *(_QWORD *)(a2 + 32);
  v25 = a1;
  swift_bridgeObjectRetain();
  sub_23C396BD4();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  *((_QWORD *)&v81 + 1) = v96;
  v26 = v97;
  v92 = *((_QWORD *)&v96 + 1);
  v28 = *((_QWORD *)&v97 + 1);
  v27 = v98;
  v30 = v99;
  v29 = v100;
  v31 = v101;
  v32 = swift_allocObject();
  v33 = v84;
  *(_QWORD *)(v32 + 16) = v83;
  *(_QWORD *)(v32 + 24) = v33;
  v34 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v32 + 48) = v34;
  v35 = *(_QWORD *)(a2 + 32);
  v89 = v32;
  *(_QWORD *)(v32 + 64) = v35;
  *(_QWORD *)&v81 = v25;
  if (v28)
  {
    v67 = v26;
    v70 = v28;
    v88 = v27;
    v69 = v30;
    v68 = v29;
    v82 = v31;
  }
  else if (v25[2])
  {
    v36 = v25[5];
    *((_QWORD *)&v81 + 1) = v25[4];
    v37 = v25[7];
    v67 = v25[6];
    v88 = v25[8];
    v38 = v25[10];
    v69 = v25[9];
    v39 = v25[11];
    v92 = v36;
    swift_bridgeObjectRetain();
    v70 = v37;
    swift_bridgeObjectRetain();
    v68 = v38;
    swift_bridgeObjectRetain();
    v82 = v39;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_QWORD *)&v81 + 1) = 0;
    v92 = 0;
    v67 = 0;
    v70 = 0;
    v88 = 0;
    v69 = 0;
    v68 = 0;
    v82 = 0;
  }
  v40 = v86;
  v41 = v87;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v22, v85, v87);
  v42 = v40;
  v43 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v44 = swift_allocObject();
  v45 = v84;
  *(_QWORD *)(v44 + 16) = v83;
  *(_QWORD *)(v44 + 24) = v45;
  (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v44 + v43, v22, v41);
  v46 = v44 + ((v20 + v43 + 7) & 0xFFFFFFFFFFFFFFF8);
  v47 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v46 = *(_OWORD *)a2;
  *(_OWORD *)(v46 + 16) = v47;
  *(_QWORD *)(v46 + 32) = *(_QWORD *)(a2 + 32);
  sub_23C39313C(a2);
  sub_23C39313C(a2);
  swift_checkMetadataState();
  *(_QWORD *)&v96 = sub_23C3F6834();
  *((_QWORD *)&v96 + 1) = v48;
  v49 = v77;
  sub_23C3F6A50();
  v50 = swift_checkMetadataState();
  v51 = (uint64_t)v90;
  v52 = v75;
  sub_23C3F6C30();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v49, v79);
  swift_release();
  *(_QWORD *)&v96 = v50;
  *((_QWORD *)&v96 + 1) = v52;
  v83 = swift_getOpaqueTypeConformance2();
  v53 = v71;
  sub_23C39374C(v51, v71, v91);
  v54 = v76;
  v84 = *(void (**)(_QWORD, _QWORD))(v76 + 8);
  v84(v51, v53);
  v55 = *((_QWORD *)&v81 + 1);
  v96 = v81;
  v56 = v92;
  v57 = v67;
  *(_QWORD *)&v97 = v92;
  *((_QWORD *)&v97 + 1) = v67;
  v58 = v70;
  v98 = v70;
  v99 = v88;
  v100 = v69;
  v101 = v68;
  v102 = v82;
  v103 = sub_23C39A720;
  v104 = v89;
  v105 = 0;
  v106[0] = (uint64_t)&v96;
  v59 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
  v60 = (uint64_t)v90;
  v59(v90, v91, v53);
  v106[1] = v60;
  swift_bridgeObjectRetain();
  sub_23C39A824(v55, v56, v57, v58);
  swift_retain();
  v95[0] = &type metadata for SearchScopesMenu;
  v95[1] = v53;
  v93 = sub_23C39A874();
  v94 = v83;
  sub_23C396A20(v106, 2uLL, (uint64_t)v95);
  v61 = (void (*)(char *, uint64_t))v84;
  v84(v91, v53);
  swift_bridgeObjectRelease();
  sub_23C399FEC(v55, v92, v57, v58);
  swift_release();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
  v61(v90, v53);
  v62 = *((_QWORD *)&v96 + 1);
  v63 = v97;
  v64 = v98;
  swift_bridgeObjectRelease();
  sub_23C399FEC(v62, v63, *((uint64_t *)&v63 + 1), v64);
  return swift_release();
}

uint64_t sub_23C399740(uint64_t *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v14 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v14);
  v3 = (uint64_t *)((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *a1;
  v4 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v9 = a1[4];
  v8 = a1[5];
  v11 = a1[6];
  v10 = a1[7];
  sub_23C396BD4();
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v7;
  v3[3] = v6;
  v3[4] = v9;
  v3[5] = v8;
  v3[6] = v11;
  v3[7] = v10;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23C3F6E64();
  swift_release();
  return sub_23C39A33C((uint64_t)v3);
}

uint64_t sub_23C399830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 *v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;

  v44 = a5;
  v59 = a6;
  v56 = sub_23C3F6654();
  v54 = *(_QWORD *)(v56 - 8);
  v57 = *(_QWORD *)(v54 + 64);
  MEMORY[0x24BDAC7A8](v56);
  v52 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23C3F681C();
  v48 = *(_QWORD *)(v50 - 8);
  v51 = *(_QWORD *)(v48 + 64);
  MEMORY[0x24BDAC7A8](v50);
  v43 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84558);
  swift_getTupleTypeMetadata2();
  v12 = sub_23C3F6E04();
  MEMORY[0x24261DE88](MEMORY[0x24BDF5428], v12);
  v13 = sub_23C3F675C();
  v58 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v41 = (char *)&v40 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84560);
  v47 = v15;
  v16 = MEMORY[0x24261DE88](MEMORY[0x24BDEB238], v13);
  v46 = v16;
  v45 = sub_23C3973F0();
  *(_QWORD *)&v69 = v13;
  *((_QWORD *)&v69 + 1) = v15;
  *(_QWORD *)&v70 = v16;
  *((_QWORD *)&v70 + 1) = v45;
  v53 = MEMORY[0x24261DE40](0, &v69, MEMORY[0x24BDF3908], 0);
  v55 = *(_QWORD *)(v53 - 8);
  v17 = MEMORY[0x24BDAC7A8](v53);
  v42 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v49 = (uint64_t)&v40 - v19;
  sub_23C3F6A80();
  v60 = a4;
  v61 = v44;
  v62 = a2;
  v63 = a3;
  v64 = a1;
  sub_23C3F6768();
  v20 = a3[1];
  v69 = *a3;
  v70 = v20;
  *(_QWORD *)&v71 = *((_QWORD *)a3 + 4);
  sub_23C396BD4();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  v65 = v69;
  v66 = v70;
  v67 = v71;
  v68 = v72;
  v21 = v48;
  v22 = v43;
  v23 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v43, a1, v50);
  v24 = v54;
  v25 = v52;
  v26 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v52, a2, v56);
  v27 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v28 = v24;
  v29 = (v51 + *(unsigned __int8 *)(v24 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v30 + v27, v22, v23);
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v30 + v29, v25, v26);
  v31 = (uint64_t)v42;
  v32 = v47;
  v33 = v46;
  v34 = v45;
  v35 = v41;
  sub_23C3F6C6C();
  swift_release();
  sub_23C399FEC(v65, *((uint64_t *)&v65 + 1), v66, *((uint64_t *)&v66 + 1));
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v13);
  *(_QWORD *)&v69 = v13;
  *((_QWORD *)&v69 + 1) = v32;
  *(_QWORD *)&v70 = v33;
  *((_QWORD *)&v70 + 1) = v34;
  swift_getOpaqueTypeConformance2();
  v36 = v49;
  v37 = v53;
  sub_23C39374C(v31, v53, v49);
  v38 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v38(v31, v37);
  sub_23C392AFC(v36, v37, v59);
  return ((uint64_t (*)(uint64_t, uint64_t))v38)(v36, v37);
}

uint64_t sub_23C399D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33[2];

  v27 = a3;
  v28 = a5;
  v26 = a1;
  v29 = a6;
  v8 = *(_QWORD *)(a4 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v26 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84558);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (uint64_t *)((char *)&v26 - v18);
  v20 = sub_23C3F6C9C();
  v21 = (char *)v19 + *(int *)(v14 + 52);
  v22 = sub_23C3F6654();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, v26, v22);
  *v19 = v20;
  (*(void (**)(uint64_t))(a2 + 24))(v27);
  v23 = v28;
  sub_23C39374C((uint64_t)v11, a4, (uint64_t)v13);
  v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v11, a4);
  sub_23C39AA24((uint64_t)v19, (uint64_t)v17);
  v33[0] = (uint64_t)v17;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, a4);
  v33[1] = (uint64_t)v11;
  v32[0] = v14;
  v32[1] = a4;
  v30 = sub_23C3935DC(&qword_256B846A0, &qword_256B84558, MEMORY[0x24BDF44C8]);
  v31 = v23;
  sub_23C396A20(v33, 2uLL, (uint64_t)v32);
  v24(v13, a4);
  sub_23C39AA6C((uint64_t)v19, &qword_256B84558);
  v24(v11, a4);
  return sub_23C39AA6C((uint64_t)v17, &qword_256B84558);
}

uint64_t sub_23C399EF8()
{
  sub_23C3F6654();
  sub_23C39A9DC();
  return sub_23C3F6810();
}

uint64_t sub_23C399F4C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  v0 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C396BD4();
  swift_storeEnumTagMultiPayload();
  sub_23C3F6E64();
  swift_release();
  return sub_23C39A33C((uint64_t)v2);
}

uint64_t sub_23C399FE0()
{
  return sub_23C399F4C();
}

uint64_t sub_23C399FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23C39A03C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for SearchView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SearchView);
}

uint64_t sub_23C39A080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  _QWORD v20[2];
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84548);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84550);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84558);
  swift_getTupleTypeMetadata2();
  v0 = sub_23C3F6E04();
  v1 = MEMORY[0x24BDF5428];
  MEMORY[0x24261DE88](MEMORY[0x24BDF5428], v0);
  v2 = sub_23C3F675C();
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84560);
  v4 = MEMORY[0x24261DE88](MEMORY[0x24BDEB238], v2);
  v5 = sub_23C3973F0();
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  MEMORY[0x24261DE40](255, &v22, MEMORY[0x24BDF3908], 0);
  v22 = v2;
  v23 = v3;
  v24 = v4;
  v25 = v5;
  swift_getOpaqueTypeConformance2();
  v6 = sub_23C3F6840();
  v7 = MEMORY[0x24261DE88](MEMORY[0x24BDEDA10], v6);
  v22 = v6;
  v23 = v7;
  MEMORY[0x24261DE40](255, &v22, MEMORY[0x24BDF31D0], 0);
  swift_getTupleTypeMetadata2();
  v8 = sub_23C3F6E04();
  v9 = MEMORY[0x24261DE88](v1, v8);
  v22 = v8;
  v23 = v9;
  MEMORY[0x24261DE40](255, &v22, MEMORY[0x24BE37998], 0);
  v10 = sub_23C3F69C0();
  v11 = sub_23C3F69C0();
  v12 = sub_23C397454();
  v13 = sub_23C397638();
  v22 = v8;
  v23 = v9;
  v21[0] = v13;
  v21[1] = swift_getOpaqueTypeConformance2();
  v14 = MEMORY[0x24BDEF3E0];
  v20[0] = v12;
  v20[1] = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v10, v21);
  MEMORY[0x24261DE88](v14, v11, v20);
  v15 = sub_23C3F6D44();
  v16 = MEMORY[0x24261DE88](MEMORY[0x24BDF4700], v15);
  v22 = v15;
  v23 = v16;
  v17 = MEMORY[0x24261DE40](255, &v22, MEMORY[0x24BE37C00], 0);
  v22 = v15;
  v23 = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v22 = v17;
  v23 = v3;
  v24 = OpaqueTypeConformance2;
  v25 = v5;
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C39A33C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C39A378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result;

  if (a8)
  {
    if (a8 != 1)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C39A3E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C398F70(*(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24), a1);
}

uint64_t sub_23C39A3F4@<X0>(uint64_t a1@<X8>)
{
  return sub_23C398BD0(a1);
}

uint64_t sub_23C39A3FC()
{
  uint64_t *v0;

  return sub_23C398DC8(v0[4], v0[2], v0[3]);
}

uint64_t sub_23C39A40C(uint64_t *a1)
{
  return sub_23C398A18(a1);
}

uint64_t sub_23C39A418(uint64_t result)
{
  *(_BYTE *)(result + 145) = 1;
  return result;
}

uint64_t sub_23C39A424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84688);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C39A46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, char a20)
{
  if ((a20 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_23C39A508(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_WORD *)(a1 + 144));
  return a1;
}

uint64_t sub_23C39A574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, char a20)
{
  swift_bridgeObjectRelease();
  swift_release();
  if ((a20 & 1) != 0)
    return swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23C39A610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23C39A64C(uint64_t result)
{
  *(_BYTE *)(result + 145) = 0;
  return result;
}

uint64_t sub_23C39A658(uint64_t a1)
{
  return sub_23C396D80(a1);
}

uint64_t sub_23C39A678(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchHistoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C39A6C0()
{
  return sub_23C396CD0();
}

uint64_t sub_23C39A6E8()
{
  return sub_23C396CD0();
}

uint64_t sub_23C39A710()
{
  return sub_23C398E90();
}

uint64_t sub_23C39A720(uint64_t *a1)
{
  return sub_23C399740(a1);
}

uint64_t sub_23C39A72C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23C3F6654();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  sub_23C393128();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C39A7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(sub_23C3F6654() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_23C399830(a1, v2 + v8, (__int128 *)(v2 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)), v5, v6, a2);
}

uint64_t sub_23C39A824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23C39A874()
{
  unint64_t result;

  result = qword_256B84690;
  if (!qword_256B84690)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE8A4, &type metadata for SearchScopesMenu);
    atomic_store(result, (unint64_t *)&qword_256B84690);
  }
  return result;
}

uint64_t sub_23C39A8B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23C399D00(v1[4], v1[5], v1[6], v1[2], v1[3], a1);
}

uint64_t sub_23C39A8C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_23C3F681C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_23C3F6654();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_23C39A97C()
{
  sub_23C3F681C();
  sub_23C3F6654();
  return sub_23C399EF8();
}

unint64_t sub_23C39A9DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B84698;
  if (!qword_256B84698)
  {
    v1 = sub_23C3F6654();
    result = MEMORY[0x24261DE88](MEMORY[0x24BDCEA88], v1);
    atomic_store(result, (unint64_t *)&qword_256B84698);
  }
  return result;
}

uint64_t sub_23C39AA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84558);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C39AA6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t SearchState.editorialContent.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_23C39AAEC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
  return v1;
}

uint64_t sub_23C39AAEC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t SearchState.editorialContent.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;

  result = sub_23C393554(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_BYTE *)(v3 + 16));
  *(_QWORD *)v3 = a1;
  *(_QWORD *)(v3 + 8) = a2;
  *(_BYTE *)(v3 + 16) = a3;
  return result;
}

uint64_t (*SearchState.editorialContent.modify())()
{
  return nullsub_1;
}

double SearchState.layout.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(double *)(a1 + 16) = result;
  return result;
}

double SearchState.layout.setter(uint64_t a1)
{
  uint64_t v1;
  double result;

  result = *(double *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(double *)(v1 + 40) = result;
  return result;
}

uint64_t (*SearchState.layout.modify())()
{
  return nullsub_1;
}

uint64_t SearchState.isInternalBuild.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t SearchState.isInternalBuild.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*SearchState.isInternalBuild.modify())()
{
  return nullsub_1;
}

uint64_t SearchState.isSearching.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t SearchState.isSearching.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = result;
  return result;
}

uint64_t (*SearchState.isSearching.modify())()
{
  return nullsub_1;
}

uint64_t SearchState.isShowingSpinner.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 50);
}

uint64_t SearchState.isShowingSpinner.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 50) = result;
  return result;
}

uint64_t (*SearchState.isShowingSpinner.modify())()
{
  return nullsub_1;
}

uint64_t SearchState.isSubscribed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t SearchState.isSubscribed.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 51) = result;
  return result;
}

uint64_t (*SearchState.isSubscribed.modify())()
{
  return nullsub_1;
}

uint64_t SearchState.locale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchState() + 40);
  v4 = sub_23C3F6678();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SearchState()
{
  uint64_t result;

  result = qword_256B847C0;
  if (!qword_256B847C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SearchState.locale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchState() + 40);
  v4 = sub_23C3F6678();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SearchState.locale.modify())(double)
{
  type metadata accessor for SearchState();
  return nullsub_1;
}

uint64_t SearchState.history.getter()
{
  type metadata accessor for SearchState();
  return swift_bridgeObjectRetain();
}

uint64_t SearchState.history.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for SearchState() + 44);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SearchState.history.modify())(double)
{
  type metadata accessor for SearchState();
  return nullsub_1;
}

uint64_t SearchState.platform.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SearchState() + 48));
}

uint64_t SearchState.platform.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SearchState();
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*SearchState.platform.modify())(double)
{
  type metadata accessor for SearchState();
  return nullsub_1;
}

uint64_t SearchState.results.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = v1 + *(int *)(type metadata accessor for SearchState() + 52);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  v11 = *(_BYTE *)(v3 + 56);
  *(_BYTE *)(a1 + 56) = v11;
  return sub_23C39AE54(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_23C39AE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result;

  if (a8)
  {
    if (a8 != 1)
      return result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

__n128 SearchState.results.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  v4 = v1 + *(int *)(type metadata accessor for SearchState() + 52);
  sub_23C39A378(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_BYTE *)(v4 + 56));
  *(_OWORD *)v4 = v8;
  *(_OWORD *)(v4 + 16) = v7;
  result = v6;
  *(__n128 *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 48) = v2;
  *(_BYTE *)(v4 + 56) = v3;
  return result;
}

uint64_t (*SearchState.results.modify())(double)
{
  type metadata accessor for SearchState();
  return nullsub_1;
}

uint64_t SearchState.searchText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchState() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchState.searchText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SearchState() + 56));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SearchState.searchText.modify())(double)
{
  type metadata accessor for SearchState();
  return nullsub_1;
}

uint64_t SearchState.selectedScope.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchState() + 60));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  return sub_23C39A824(v4, v5, v6, v7);
}

__n128 SearchState.selectedScope.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;
  __n128 v7;
  __n128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = a1[2];
  v2 = a1[3].n128_u64[0];
  v3 = a1[3].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for SearchState() + 60));
  sub_23C399FEC(v4->n128_u64[0], v4->n128_i64[1], v4[1].n128_i64[0], v4[1].n128_i64[1]);
  *v4 = v8;
  v4[1] = v7;
  result = v6;
  v4[2] = v6;
  v4[3].n128_u64[0] = v2;
  v4[3].n128_u64[1] = v3;
  return result;
}

uint64_t (*SearchState.selectedScope.modify())(double)
{
  type metadata accessor for SearchState();
  return nullsub_1;
}

uint64_t SearchState.showingHistoryDeletionDialog.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SearchState() + 64));
}

uint64_t SearchState.showingHistoryDeletionDialog.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SearchState();
  *(_BYTE *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*SearchState.showingHistoryDeletionDialog.modify())(double)
{
  type metadata accessor for SearchState();
  return nullsub_1;
}

uint64_t SearchState.suggestions.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchState() + 68));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_23C39B1C4(v4, v5, v6);
}

uint64_t sub_23C39B1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 SearchState.suggestions.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchState() + 68));
  sub_23C39A610(*v3, v3[1], v3[2]);
  result = v5;
  *(_OWORD *)v3 = v6;
  *((__n128 *)v3 + 1) = v5;
  v3[4] = v2;
  return result;
}

uint64_t (*SearchState.suggestions.modify())(double)
{
  type metadata accessor for SearchState();
  return nullsub_1;
}

double SearchState.init()@<D0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  double result;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 2;
  *(_OWORD *)(a1 + 24) = xmmword_23C3F7A40;
  *(_QWORD *)(a1 + 40) = 0x4018000000000000;
  v2 = (int *)type metadata accessor for SearchState();
  *(_DWORD *)(a1 + 48) = 0;
  sub_23C3F666C();
  *(_QWORD *)(a1 + v2[11]) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + v2[12]) = 0;
  v3 = a1 + v2[13];
  *(_QWORD *)(v3 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)v3 = 0u;
  *(_BYTE *)(v3 + 56) = 2;
  v5 = (_QWORD *)(a1 + v2[14]);
  *v5 = 0;
  v5[1] = 0xE000000000000000;
  v6 = (_OWORD *)(a1 + v2[15]);
  v6[2] = 0u;
  v6[3] = 0u;
  *v6 = 0u;
  v6[1] = 0u;
  *(_BYTE *)(a1 + v2[16]) = 0;
  v7 = a1 + v2[17];
  *(_QWORD *)(v7 + 32) = 0;
  *(_OWORD *)v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  return result;
}

uint64_t sub_23C39B354(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C39B38C + 4 * byte_23C3F8300[a1]))(0xD000000000000010, 0x800000023C400C20);
}

uint64_t sub_23C39B38C()
{
  return 0x74756F79616CLL;
}

uint64_t sub_23C39B3A0()
{
  return 0x6E7265746E497369;
}

uint64_t sub_23C39B3C4()
{
  return 0x6863726165537369;
}

uint64_t sub_23C39B4C4()
{
  return 0x6974736567677573;
}

uint64_t sub_23C39B4E4()
{
  unsigned __int8 *v0;

  return sub_23C39B354(*v0);
}

uint64_t sub_23C39B4EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C39DFE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C39B510(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_23C39B51C()
{
  sub_23C39B9DC();
  return sub_23C3F7344();
}

uint64_t sub_23C39B544()
{
  sub_23C39B9DC();
  return sub_23C3F7350();
}

uint64_t SearchState.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  int *v11;
  __int128 *v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B846A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C39B9DC();
  sub_23C3F7338();
  v9 = *((_BYTE *)v3 + 16);
  v23 = *v3;
  LOBYTE(v24) = v9;
  v27 = 0;
  sub_23C39BA20();
  sub_23C3F7284();
  if (!v2)
  {
    v10 = *((_QWORD *)v3 + 5);
    v23 = *(__int128 *)((char *)v3 + 24);
    *(_QWORD *)&v24 = v10;
    v27 = 1;
    sub_23C39BA64();
    sub_23C3F7284();
    LOBYTE(v23) = 2;
    sub_23C3F726C();
    LOBYTE(v23) = 3;
    sub_23C3F726C();
    LOBYTE(v23) = 4;
    sub_23C3F726C();
    LOBYTE(v23) = 5;
    sub_23C3F726C();
    v11 = (int *)type metadata accessor for SearchState();
    LOBYTE(v23) = 6;
    sub_23C3F6678();
    sub_23C39650C(&qword_256B846C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEC8]);
    sub_23C3F7284();
    *(_QWORD *)&v23 = *(_QWORD *)((char *)v3 + v11[11]);
    v27 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B846D0);
    sub_23C39C3F4(&qword_256B846D8, &qword_256B846E0, (uint64_t)&protocol conformance descriptor for SearchHistoryItem, MEMORY[0x24BEE12A0]);
    sub_23C3F7284();
    LOBYTE(v23) = *((_BYTE *)v3 + v11[12]);
    v27 = 8;
    sub_23C39BAA8();
    sub_23C3F7284();
    v12 = (__int128 *)((char *)v3 + v11[13]);
    v13 = *((_QWORD *)v12 + 6);
    v14 = *((_BYTE *)v12 + 56);
    v15 = v12[1];
    v23 = *v12;
    v24 = v15;
    v25 = v12[2];
    *(_QWORD *)&v26 = v13;
    BYTE8(v26) = v14;
    v27 = 9;
    sub_23C39BAEC();
    sub_23C3F7284();
    LOBYTE(v23) = 10;
    sub_23C3F7260();
    v16 = (__int128 *)((char *)v3 + v11[15]);
    v17 = v16[1];
    v23 = *v16;
    v24 = v17;
    v18 = v16[3];
    v25 = v16[2];
    v26 = v18;
    v27 = 11;
    sub_23C39BB30();
    sub_23C3F7254();
    LOBYTE(v23) = 12;
    sub_23C3F726C();
    v19 = (__int128 *)((char *)v3 + v11[17]);
    v20 = *((_QWORD *)v19 + 4);
    v21 = v19[1];
    v23 = *v19;
    v24 = v21;
    *(_QWORD *)&v25 = v20;
    v27 = 13;
    sub_23C39BB74();
    sub_23C3F7284();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C39B9DC()
{
  unint64_t result;

  result = qword_256B846B0;
  if (!qword_256B846B0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F85C4, &type metadata for SearchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B846B0);
  }
  return result;
}

unint64_t sub_23C39BA20()
{
  unint64_t result;

  result = qword_256B846B8;
  if (!qword_256B846B8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchEditorialContentState, &type metadata for SearchEditorialContentState);
    atomic_store(result, (unint64_t *)&qword_256B846B8);
  }
  return result;
}

unint64_t sub_23C39BA64()
{
  unint64_t result;

  result = qword_256B846C0;
  if (!qword_256B846C0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchLayout, &type metadata for SearchLayout);
    atomic_store(result, (unint64_t *)&qword_256B846C0);
  }
  return result;
}

unint64_t sub_23C39BAA8()
{
  unint64_t result;

  result = qword_256B846E8;
  if (!qword_256B846E8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchPlatform, &type metadata for SearchPlatform);
    atomic_store(result, (unint64_t *)&qword_256B846E8);
  }
  return result;
}

unint64_t sub_23C39BAEC()
{
  unint64_t result;

  result = qword_256B846F0;
  if (!qword_256B846F0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultsState, &type metadata for SearchResultsState);
    atomic_store(result, (unint64_t *)&qword_256B846F0);
  }
  return result;
}

unint64_t sub_23C39BB30()
{
  unint64_t result;

  result = qword_256B846F8;
  if (!qword_256B846F8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultScope, &type metadata for SearchResultScope);
    atomic_store(result, (unint64_t *)&qword_256B846F8);
  }
  return result;
}

unint64_t sub_23C39BB74()
{
  unint64_t result;

  result = qword_256B84700;
  if (!qword_256B84700)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchHintsState, &type metadata for SearchHintsState);
    atomic_store(result, (unint64_t *)&qword_256B84700);
  }
  return result;
}

uint64_t SearchState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  __int128 v44;
  _OWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  __int128 v60;
  _OWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char v68;

  v50 = a2;
  *(_QWORD *)&v56 = sub_23C3F6678();
  *(_QWORD *)&v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  *(_QWORD *)&v55 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84708);
  v57 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)&v62 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for SearchState();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 2;
  *(_OWORD *)(v9 + 24) = xmmword_23C3F7A40;
  *((_QWORD *)v9 + 5) = 0x4018000000000000;
  *((_DWORD *)v9 + 12) = 0;
  v53 = &v9[*(int *)(v7 + 40)];
  sub_23C3F666C();
  v52 = v6[11];
  *(_QWORD *)&v9[v52] = MEMORY[0x24BEE4AF8];
  v51 = v6[12];
  v9[v51] = 0;
  v10 = &v9[v6[13]];
  *((_QWORD *)v10 + 6) = 0;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *(_OWORD *)v10 = 0u;
  v10[56] = 2;
  v11 = &v9[v6[14]];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0xE000000000000000;
  v12 = (uint64_t *)&v9[v6[15]];
  *((_OWORD *)v12 + 2) = 0u;
  *((_OWORD *)v12 + 3) = 0u;
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v13 = v6[16];
  v9[v13] = 0;
  v14 = v6[17];
  v61 = v9;
  v15 = &v9[v14];
  *((_QWORD *)v15 + 4) = 0;
  *(_OWORD *)v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v16 = a1[3];
  v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23C39B9DC();
  v17 = v60;
  sub_23C3F732C();
  if (v17)
  {
    v27 = (uint64_t)v59;
    v45 = v61;
  }
  else
  {
    *(_QWORD *)&v60 = v10;
    v49 = v11;
    v48 = v12;
    v47 = v13;
    v46 = (uint64_t *)v15;
    v18 = v57;
    v68 = 0;
    sub_23C39C36C();
    sub_23C3F7218();
    v20 = v64;
    v21 = v61;
    *v61 = v63;
    *((_BYTE *)v21 + 16) = v20;
    v68 = 1;
    sub_23C39C3B0();
    sub_23C3F7218();
    v22 = v64;
    *(_OWORD *)((char *)v21 + 24) = v63;
    *((_QWORD *)v21 + 5) = v22;
    LOBYTE(v63) = 2;
    *((_BYTE *)v21 + 48) = sub_23C3F7200() & 1;
    LOBYTE(v63) = 3;
    *((_BYTE *)v21 + 49) = sub_23C3F7200() & 1;
    LOBYTE(v63) = 4;
    *((_BYTE *)v21 + 50) = sub_23C3F7200() & 1;
    LOBYTE(v63) = 5;
    *((_BYTE *)v21 + 51) = sub_23C3F7200() & 1;
    LOBYTE(v63) = 6;
    sub_23C39650C(&qword_256B84720, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEEE8]);
    v23 = v55;
    v24 = v56;
    sub_23C3F7218();
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 40))(v53, v23, v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B846D0);
    v68 = 7;
    sub_23C39C3F4(&qword_256B84728, &qword_256B84730, (uint64_t)&protocol conformance descriptor for SearchHistoryItem, MEMORY[0x24BEE12D0]);
    sub_23C3F7218();
    v25 = v63;
    v26 = v52;
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v21 + v26) = v25;
    v68 = 8;
    sub_23C39C478();
    sub_23C3F7218();
    *((_BYTE *)v21 + v51) = v63;
    v68 = 9;
    sub_23C39C4BC();
    sub_23C3F7218();
    v56 = v63;
    v55 = v64;
    v54 = v65;
    v28 = v66;
    v29 = v67;
    v30 = v60;
    sub_23C39A378(*(_QWORD *)v60, *(_QWORD *)(v60 + 8), *(_QWORD *)(v60 + 16), *(_QWORD *)(v60 + 24), *(_QWORD *)(v60 + 32), *(_QWORD *)(v60 + 40), *(_QWORD *)(v60 + 48), *(_BYTE *)(v60 + 56));
    v31 = v55;
    *(_OWORD *)v30 = v56;
    *(_OWORD *)(v30 + 16) = v31;
    *(_OWORD *)(v30 + 32) = v54;
    *(_QWORD *)(v30 + 48) = v28;
    *(_BYTE *)(v30 + 56) = v29;
    LOBYTE(v63) = 10;
    v32 = sub_23C3F71F4();
    v34 = v33;
    v35 = (uint64_t *)v49;
    swift_bridgeObjectRelease();
    *v35 = v32;
    v35[1] = v34;
    v68 = 11;
    sub_23C39C500();
    sub_23C3F71E8();
    v60 = v63;
    v56 = v64;
    v55 = v65;
    v36 = v66;
    v37 = v67;
    v38 = v48;
    sub_23C399FEC(*v48, v48[1], v48[2], v48[3]);
    v39 = v56;
    *(_OWORD *)v38 = v60;
    *((_OWORD *)v38 + 1) = v39;
    *((_OWORD *)v38 + 2) = v55;
    v38[6] = v36;
    v38[7] = v37;
    LOBYTE(v63) = 12;
    *((_BYTE *)v61 + v47) = sub_23C3F7200() & 1;
    v68 = 13;
    sub_23C39C544();
    v40 = v58;
    v41 = v62;
    sub_23C3F7218();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v41, v40);
    v62 = v63;
    v60 = v64;
    v42 = v65;
    v43 = v46;
    sub_23C39A610(*v46, v46[1], v46[2]);
    v44 = v60;
    *(_OWORD *)v43 = v62;
    *((_OWORD *)v43 + 1) = v44;
    v43[4] = v42;
    v45 = v61;
    sub_23C39C588((uint64_t)v61, v50);
    v27 = (uint64_t)v59;
  }
  __swift_destroy_boxed_opaque_existential_1(v27);
  return sub_23C39C330((uint64_t)v45);
}

uint64_t sub_23C39C330(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23C39C36C()
{
  unint64_t result;

  result = qword_256B84710;
  if (!qword_256B84710)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchEditorialContentState, &type metadata for SearchEditorialContentState);
    atomic_store(result, (unint64_t *)&qword_256B84710);
  }
  return result;
}

unint64_t sub_23C39C3B0()
{
  unint64_t result;

  result = qword_256B84718;
  if (!qword_256B84718)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchLayout, &type metadata for SearchLayout);
    atomic_store(result, (unint64_t *)&qword_256B84718);
  }
  return result;
}

uint64_t sub_23C39C3F4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B846D0);
    v10 = sub_23C39650C(a2, (uint64_t (*)(uint64_t))type metadata accessor for SearchHistoryItem, a3);
    result = MEMORY[0x24261DE88](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C39C478()
{
  unint64_t result;

  result = qword_256B84738;
  if (!qword_256B84738)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchPlatform, &type metadata for SearchPlatform);
    atomic_store(result, (unint64_t *)&qword_256B84738);
  }
  return result;
}

unint64_t sub_23C39C4BC()
{
  unint64_t result;

  result = qword_256B84740;
  if (!qword_256B84740)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultsState, &type metadata for SearchResultsState);
    atomic_store(result, (unint64_t *)&qword_256B84740);
  }
  return result;
}

unint64_t sub_23C39C500()
{
  unint64_t result;

  result = qword_256B84748;
  if (!qword_256B84748)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultScope, &type metadata for SearchResultScope);
    atomic_store(result, (unint64_t *)&qword_256B84748);
  }
  return result;
}

unint64_t sub_23C39C544()
{
  unint64_t result;

  result = qword_256B84750;
  if (!qword_256B84750)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchHintsState, &type metadata for SearchHintsState);
    atomic_store(result, (unint64_t *)&qword_256B84750);
  }
  return result;
}

uint64_t sub_23C39C588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C39C5CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchState.init(from:)(a1, a2);
}

uint64_t sub_23C39C5E0(_QWORD *a1)
{
  return SearchState.encode(to:)(a1);
}

uint64_t SearchState.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v2 = v1;
  v4 = *(_QWORD *)v1;
  v5 = *(_QWORD *)(v1 + 8);
  if (*(_BYTE *)(v1 + 16))
  {
    if (*(_BYTE *)(v1 + 16) == 1)
    {
      sub_23C3F72FC();
      swift_bridgeObjectRetain();
      sub_23C395A50(a1, v4);
      sub_23C393554(v4, v5, 1u);
    }
    else
    {
      sub_23C3F72FC();
    }
  }
  else
  {
    sub_23C3F72FC();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    sub_23C393554(v4, v5, 0);
  }
  SearchLayout.hash(into:)();
  sub_23C3F7308();
  sub_23C3F7308();
  sub_23C3F7308();
  sub_23C3F7308();
  v6 = (int *)type metadata accessor for SearchState();
  sub_23C3F6678();
  sub_23C39650C(&qword_256B84758, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDCEED0]);
  sub_23C3F6EE8();
  v7 = *(_QWORD *)(v1 + v6[11]);
  swift_bridgeObjectRetain();
  sub_23C39592C(a1, v7);
  swift_bridgeObjectRelease();
  sub_23C3F72FC();
  v8 = v2 + v6[13];
  v9 = *(_QWORD *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = *(_QWORD *)(v8 + 24);
  v14 = *(_QWORD *)(v8 + 32);
  v13 = *(_QWORD *)(v8 + 40);
  v15 = *(_QWORD *)(v8 + 48);
  v16 = *(unsigned __int8 *)(v8 + 56);
  if (v16)
  {
    if (v16 == 1)
    {
      sub_23C3F72FC();
      SearchResult.hash(into:)(a1);
    }
    else
    {
      sub_23C3F72FC();
    }
  }
  else
  {
    v24 = v15;
    sub_23C3F72FC();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
    sub_23C39A378(v9, v10, v11, v12, v14, v13, v24, 0);
  }
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  v17 = (_QWORD *)(v2 + v6[15]);
  if (v17[3])
  {
    v18 = v17[1];
    v19 = v17[7];
    sub_23C3F7308();
    sub_23C3F7308();
    if (v18)
    {
      swift_bridgeObjectRetain();
      sub_23C3F6F6C();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
    sub_23C3F72FC();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23C39562C(a1, v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  sub_23C3F7308();
  v20 = v2 + v6[17];
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
    return sub_23C3F72FC();
  v22 = *(_QWORD *)(v20 + 8);
  sub_23C3F72FC();
  sub_23C3F7308();
  if (v22)
  {
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23C395B90(a1, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t SearchState.hashValue.getter()
{
  _BYTE v1[72];

  sub_23C3F72F0();
  SearchState.hash(into:)((uint64_t)v1);
  return sub_23C3F7320();
}

uint64_t sub_23C39CA9C()
{
  _BYTE v1[72];

  sub_23C3F72F0();
  SearchState.hash(into:)((uint64_t)v1);
  return sub_23C3F7320();
}

uint64_t sub_23C39CADC()
{
  _BYTE v1[72];

  sub_23C3F72F0();
  SearchState.hash(into:)((uint64_t)v1);
  return sub_23C3F7320();
}

BOOL _s13FitnessSearch0B5StateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v9;
  BOOL v10;
  int *v14;
  __int128 *v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  __int128 *v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 *v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a1 + 16) == 1)
    {
      if (v7 != 1 || (sub_23C3E9238(v4, *(_QWORD *)a2) & 1) == 0)
        return 0;
    }
    else if (v7 != 2 || (v6 | v5) != 0)
    {
      return 0;
    }
  }
  else
  {
    if (*(_BYTE *)(a2 + 16))
      return 0;
    if (v4 != v5 || *(_QWORD *)(a1 + 8) != v6)
    {
      v9 = sub_23C3F72A8();
      v10 = 0;
      if ((v9 & 1) == 0)
        return v10;
    }
  }
  if (*(double *)(a1 + 24) != *(double *)(a2 + 24)
    || *(double *)(a1 + 32) != *(double *)(a2 + 32)
    || *(double *)(a1 + 40) != *(double *)(a2 + 40))
  {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
    return 0;
  if (*(unsigned __int8 *)(a1 + 49) != *(unsigned __int8 *)(a2 + 49))
    return 0;
  if (*(unsigned __int8 *)(a1 + 50) != *(unsigned __int8 *)(a2 + 50))
    return 0;
  if (*(unsigned __int8 *)(a1 + 51) != *(unsigned __int8 *)(a2 + 51))
    return 0;
  v14 = (int *)type metadata accessor for SearchState();
  if ((MEMORY[0x24261CE38](a1 + v14[10], a2 + v14[10]) & 1) == 0)
    return 0;
  if ((sub_23C3E90AC(*(_QWORD *)(a1 + v14[11]), *(_QWORD *)(a2 + v14[11])) & 1) == 0)
    return 0;
  if (*(unsigned __int8 *)(a1 + v14[12]) != *(unsigned __int8 *)(a2 + v14[12]))
    return 0;
  v15 = (__int128 *)(a1 + v14[13]);
  v16 = *((_QWORD *)v15 + 6);
  v17 = *((_BYTE *)v15 + 56);
  v18 = v15[1];
  v69 = *v15;
  v70 = v18;
  v71 = v15[2];
  v72 = v16;
  LOBYTE(v73) = v17;
  v19 = (__int128 *)(a2 + v14[13]);
  v20 = *((_QWORD *)v19 + 6);
  v21 = *((_BYTE *)v19 + 56);
  v22 = v19[1];
  v64 = *v19;
  v65 = v22;
  v66 = v19[2];
  v67 = v20;
  LOBYTE(v68) = v21;
  if ((static SearchResultsState.== infix(_:_:)(&v69, &v64) & 1) == 0)
    return 0;
  v23 = v14[14];
  v24 = *(_QWORD *)(a1 + v23);
  v25 = *(_QWORD *)(a1 + v23 + 8);
  v26 = (_QWORD *)(a2 + v23);
  if (v24 == *v26 && v25 == v26[1] || (v27 = sub_23C3F72A8(), v10 = 0, (v27 & 1) != 0))
  {
    v28 = v14[15];
    v30 = *(_QWORD *)(a1 + v28);
    v29 = *(_QWORD *)(a1 + v28 + 8);
    v31 = *(_QWORD *)(a1 + v28 + 16);
    v32 = *(_QWORD *)(a1 + v28 + 24);
    v34 = *(_QWORD *)(a1 + v28 + 32);
    v33 = *(_QWORD *)(a1 + v28 + 40);
    v36 = *(_QWORD *)(a1 + v28 + 48);
    v35 = *(_QWORD *)(a1 + v28 + 56);
    v37 = (uint64_t *)(a2 + v28);
    v39 = *v37;
    v38 = v37[1];
    v41 = v37[2];
    v40 = v37[3];
    v42 = v37[4];
    v43 = v37[5];
    v44 = v37[6];
    v45 = v37[7];
    if (v32)
    {
      *(_QWORD *)&v69 = v30;
      *((_QWORD *)&v69 + 1) = v29;
      *(_QWORD *)&v70 = v31;
      *((_QWORD *)&v70 + 1) = v32;
      *(_QWORD *)&v71 = v34;
      *((_QWORD *)&v71 + 1) = v33;
      v72 = v36;
      v73 = v35;
      v63 = v36;
      v61 = v34;
      v62 = v33;
      v59 = v30;
      v60 = v31;
      if (v40)
      {
        *(_QWORD *)&v64 = v39;
        *((_QWORD *)&v64 + 1) = v38;
        *(_QWORD *)&v65 = v41;
        *((_QWORD *)&v65 + 1) = v40;
        *(_QWORD *)&v66 = v42;
        *((_QWORD *)&v66 + 1) = v43;
        v67 = v44;
        v68 = v45;
        v46 = v29;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v57 = static SearchResultScope.== infix(_:_:)(&v69, &v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23C399FEC(v59, v46, v60, v32);
        if ((v57 & 1) == 0)
          return 0;
LABEL_42:
        if (*(unsigned __int8 *)(a1 + v14[16]) == *(unsigned __int8 *)(a2 + v14[16]))
        {
          v47 = v14[17];
          v48 = *(_QWORD *)(a1 + v47 + 32);
          v49 = *(_OWORD *)(a1 + v47 + 16);
          v69 = *(_OWORD *)(a1 + v47);
          v70 = v49;
          *(_QWORD *)&v71 = v48;
          v50 = (__int128 *)(a2 + v47);
          v51 = *((_QWORD *)v50 + 4);
          v52 = v50[1];
          v64 = *v50;
          v65 = v52;
          *(_QWORD *)&v66 = v51;
          return _s13FitnessSearch0B10HintsStateO2eeoiySbAC_ACtFZ_0((uint64_t *)&v69, (uint64_t *)&v64);
        }
        return 0;
      }
      v53 = v29;
      v54 = v45;
      v58 = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55 = swift_bridgeObjectRetain();
      v44 = v58;
      v30 = v59;
      v45 = v54;
      v29 = v53;
      v35 = v55;
      v36 = v63;
      v34 = v61;
      v33 = v62;
      v31 = v60;
    }
    else if (!v40)
    {
      goto LABEL_42;
    }
    *(_QWORD *)&v69 = v30;
    *((_QWORD *)&v69 + 1) = v29;
    *(_QWORD *)&v70 = v31;
    *((_QWORD *)&v70 + 1) = v32;
    *(_QWORD *)&v71 = v34;
    *((_QWORD *)&v71 + 1) = v33;
    v72 = v36;
    v73 = v35;
    v74 = v39;
    v75 = v38;
    v76 = v41;
    v77 = v40;
    v78 = v42;
    v79 = v43;
    v80 = v44;
    v81 = v45;
    sub_23C39A824(v39, v38, v41, v40);
    sub_23C39E570((uint64_t *)&v69);
    return 0;
  }
  return v10;
}

uint64_t sub_23C39CEFC()
{
  return sub_23C39650C((unint64_t *)&qword_256B84760, (uint64_t (*)(uint64_t))type metadata accessor for SearchState, (uint64_t)&protocol conformance descriptor for SearchState);
}

unint64_t initializeBufferWithCopyOfBuffer for SearchState(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v48;
  char v49;
  int *v50;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v36 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 16);
    sub_23C39AAEC(*(_QWORD *)a2, v8, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    v10 = a3[10];
    v11 = a1 + v10;
    v12 = a2 + v10;
    v13 = sub_23C3F6678();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    v14 = a3[12];
    *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
    *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
    v15 = a3[13];
    v16 = a1 + v15;
    v17 = a2 + v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v48 = *(_QWORD *)v17;
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = *(_QWORD *)(v17 + 40);
    v50 = a3;
    v24 = *(_QWORD *)(v17 + 48);
    v49 = *(_BYTE *)(v17 + 56);
    swift_bridgeObjectRetain();
    sub_23C39AE54(v18, v19, v20, v21, v22, v23, v24, v49);
    *(_QWORD *)v16 = v48;
    *(_QWORD *)(v16 + 8) = v19;
    *(_QWORD *)(v16 + 16) = v20;
    *(_QWORD *)(v16 + 24) = v21;
    *(_QWORD *)(v16 + 32) = v22;
    *(_QWORD *)(v16 + 40) = v23;
    *(_QWORD *)(v16 + 48) = v24;
    *(_BYTE *)(v16 + 56) = v49;
    v25 = v50[14];
    v26 = v50[15];
    v27 = (_QWORD *)(a1 + v25);
    v28 = (_QWORD *)(a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = a1 + v26;
    v31 = a2 + v26;
    v32 = *(_QWORD *)(a2 + v26 + 24);
    swift_bridgeObjectRetain();
    if (v32)
    {
      v33 = *(_QWORD *)(v31 + 8);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_QWORD *)(v30 + 8) = v33;
      *(_QWORD *)(v30 + 16) = *(_QWORD *)(v31 + 16);
      *(_QWORD *)(v30 + 24) = v32;
      *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
      v34 = *(_QWORD *)(v31 + 48);
      v35 = *(_QWORD *)(v31 + 56);
      *(_QWORD *)(v30 + 48) = v34;
      *(_QWORD *)(v30 + 56) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v37 = *(_OWORD *)(v31 + 16);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *(_OWORD *)(v30 + 16) = v37;
      v38 = *(_OWORD *)(v31 + 48);
      *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
      *(_OWORD *)(v30 + 48) = v38;
    }
    v39 = v50[17];
    *(_BYTE *)(a1 + v50[16]) = *(_BYTE *)(a2 + v50[16]);
    v40 = (_QWORD *)(a1 + v39);
    v41 = (_QWORD *)(a2 + v39);
    v42 = v41[2];
    if (v42)
    {
      v43 = v41[1];
      *v40 = *v41;
      v40[1] = v43;
      v44 = v41[3];
      v45 = v41[4];
      v40[2] = v42;
      v40[3] = v44;
      v40[4] = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v46 = *((_OWORD *)v41 + 1);
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v46;
      v40[4] = v41[4];
    }
  }
  return a1;
}

uint64_t destroy for SearchState(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_23C393554(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  v4 = a1 + a2[10];
  v5 = sub_23C3F6678();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[13];
  sub_23C39A378(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_BYTE *)(v6 + 56));
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[15] + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[17] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SearchState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v45;
  uint64_t v46;
  int *v47;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_23C39AAEC(*(_QWORD *)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v9 = a3[10];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23C3F6678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v47 = a3;
  v13 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[13];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = *(_QWORD *)(v16 + 24);
  v21 = *(_QWORD *)(v16 + 32);
  v22 = *(_QWORD *)(v16 + 40);
  v45 = *(_QWORD *)v16;
  v46 = *(_QWORD *)(v16 + 48);
  LOBYTE(v10) = *(_BYTE *)(v16 + 56);
  swift_bridgeObjectRetain();
  sub_23C39AE54(v17, v18, v19, v20, v21, v22, v46, v10);
  *(_QWORD *)v15 = v45;
  *(_QWORD *)(v15 + 8) = v18;
  *(_QWORD *)(v15 + 16) = v19;
  *(_QWORD *)(v15 + 24) = v20;
  *(_QWORD *)(v15 + 32) = v21;
  *(_QWORD *)(v15 + 40) = v22;
  *(_QWORD *)(v15 + 48) = v46;
  *(_BYTE *)(v15 + 56) = v10;
  v23 = v47[14];
  v24 = v47[15];
  v25 = (_QWORD *)(a1 + v23);
  v26 = (_QWORD *)(a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a1 + v24;
  v29 = a2 + v24;
  v30 = *(_QWORD *)(a2 + v24 + 24);
  swift_bridgeObjectRetain();
  if (v30)
  {
    v31 = *(_QWORD *)(v29 + 8);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_QWORD *)(v28 + 8) = v31;
    *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
    *(_QWORD *)(v28 + 24) = v30;
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
    v32 = *(_QWORD *)(v29 + 48);
    v33 = *(_QWORD *)(v29 + 56);
    *(_QWORD *)(v28 + 48) = v32;
    *(_QWORD *)(v28 + 56) = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v34 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v34;
    v35 = *(_OWORD *)(v29 + 48);
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
    *(_OWORD *)(v28 + 48) = v35;
  }
  v36 = v47[17];
  *(_BYTE *)(a1 + v47[16]) = *(_BYTE *)(a2 + v47[16]);
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  v39 = v38[2];
  if (v39)
  {
    v40 = v38[1];
    *v37 = *v38;
    v37[1] = v40;
    v41 = v38[3];
    v42 = v38[4];
    v37[2] = v39;
    v37[3] = v41;
    v37[4] = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v43 = *((_OWORD *)v38 + 1);
    *(_OWORD *)v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v43;
    v37[4] = v38[4];
  }
  return a1;
}

uint64_t assignWithCopy for SearchState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v58;
  int *v59;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_23C39AAEC(*(_QWORD *)a2, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v11 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v8;
  sub_23C393554(v9, v10, v11);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  v12 = a3[10];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23C3F6678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = a3;
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v16 = a3[13];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)v18;
  v20 = *(_QWORD *)(v18 + 8);
  v21 = *(_QWORD *)(v18 + 16);
  v22 = *(_QWORD *)(v18 + 24);
  v23 = *(_QWORD *)(v18 + 32);
  v24 = *(_QWORD *)(v18 + 40);
  v25 = *(_QWORD *)(v18 + 48);
  v58 = *(_BYTE *)(v18 + 56);
  sub_23C39AE54(*(_QWORD *)v18, v20, v21, v22, v23, v24, v25, v58);
  v26 = *(_QWORD *)v17;
  v27 = *(_QWORD *)(v17 + 8);
  v28 = *(_QWORD *)(v17 + 16);
  v29 = *(_QWORD *)(v17 + 24);
  v30 = *(_QWORD *)(v17 + 32);
  v31 = *(_QWORD *)(v17 + 40);
  v32 = *(_QWORD *)(v17 + 48);
  *(_QWORD *)v17 = v19;
  *(_QWORD *)(v17 + 8) = v20;
  *(_QWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 24) = v22;
  *(_QWORD *)(v17 + 32) = v23;
  *(_QWORD *)(v17 + 40) = v24;
  *(_QWORD *)(v17 + 48) = v25;
  v33 = *(_BYTE *)(v17 + 56);
  *(_BYTE *)(v17 + 56) = v58;
  sub_23C39A378(v26, v27, v28, v29, v30, v31, v32, v33);
  v34 = v59[14];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v59[15];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = *(_QWORD *)(a1 + v37 + 24);
  v41 = *(_QWORD *)(a2 + v37 + 24);
  if (v40)
  {
    if (v41)
    {
      *v38 = *v39;
      v38[1] = v39[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v38[2] = v39[2];
      v38[3] = v39[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v38[4] = v39[4];
      v38[5] = v39[5];
      v38[6] = v39[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v38[7] = v39[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23C39D838((uint64_t)v38);
      v42 = *((_OWORD *)v39 + 3);
      v44 = *(_OWORD *)v39;
      v43 = *((_OWORD *)v39 + 1);
      *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
      *((_OWORD *)v38 + 3) = v42;
      *(_OWORD *)v38 = v44;
      *((_OWORD *)v38 + 1) = v43;
    }
  }
  else if (v41)
  {
    *v38 = *v39;
    v38[1] = v39[1];
    v38[2] = v39[2];
    v38[3] = v39[3];
    v38[4] = v39[4];
    v38[5] = v39[5];
    v38[6] = v39[6];
    v38[7] = v39[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v45 = *(_OWORD *)v39;
    v46 = *((_OWORD *)v39 + 1);
    v47 = *((_OWORD *)v39 + 3);
    *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
    *((_OWORD *)v38 + 3) = v47;
    *(_OWORD *)v38 = v45;
    *((_OWORD *)v38 + 1) = v46;
  }
  *(_BYTE *)(a1 + v59[16]) = *(_BYTE *)(a2 + v59[16]);
  v48 = v59[17];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  v51 = *(_QWORD *)(a1 + v48 + 16);
  v52 = *(_QWORD *)(a2 + v48 + 16);
  if (v51)
  {
    if (v52)
    {
      *v49 = *v50;
      v49[1] = v50[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v49[2] = v50[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v49[3] = v50[3];
      v49[4] = v50[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23C39D86C((uint64_t)v49);
      v53 = v50[4];
      v54 = *((_OWORD *)v50 + 1);
      *(_OWORD *)v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v54;
      v49[4] = v53;
    }
  }
  else if (v52)
  {
    *v49 = *v50;
    v49[1] = v50[1];
    v49[2] = v50[2];
    v49[3] = v50[3];
    v49[4] = v50[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v55 = *(_OWORD *)v50;
    v56 = *((_OWORD *)v50 + 1);
    v49[4] = v50[4];
    *(_OWORD *)v49 = v55;
    *((_OWORD *)v49 + 1) = v56;
  }
  return a1;
}

uint64_t sub_23C39D838(uint64_t a1)
{
  destroy for SearchResultScope();
  return a1;
}

uint64_t sub_23C39D86C(uint64_t a1)
{
  destroy for SearchHintsResult();
  return a1;
}

uint64_t initializeWithTake for SearchState(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v6 = a3[10];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23C3F6678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  v11 = a3[13];
  v12 = a3[14];
  v13 = (_OWORD *)(a1 + v11);
  v14 = (_OWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v13[2] = v14[2];
  *(_OWORD *)((char *)v13 + 41) = *(_OWORD *)((char *)v14 + 41);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v16 = a3[15];
  v17 = a3[16];
  v18 = (_OWORD *)(a1 + v16);
  v19 = (_OWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v22 = a3[17];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(_QWORD *)(v23 + 32) = *(_QWORD *)(v24 + 32);
  return a1;
}

uint64_t assignWithTake for SearchState(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C393554(v7, v8, v9);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  v11 = a3[10];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + 40) = v10;
  v14 = sub_23C3F6678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v15 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)(v17 + 48);
  v19 = *(_BYTE *)(v17 + 56);
  v20 = *(_QWORD *)v16;
  v21 = *(_QWORD *)(v16 + 8);
  v22 = *(_QWORD *)(v16 + 16);
  v23 = *(_QWORD *)(v16 + 24);
  v24 = *(_QWORD *)(v16 + 32);
  v25 = *(_QWORD *)(v16 + 40);
  v26 = *(_QWORD *)(v16 + 48);
  v27 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v27;
  v28 = *(_BYTE *)(v16 + 56);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 48) = v18;
  *(_BYTE *)(v16 + 56) = v19;
  sub_23C39A378(v20, v21, v22, v23, v24, v25, v26, v28);
  v29 = a3[14];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[15];
  v35 = a1 + v34;
  v36 = a2 + v34;
  if (*(_QWORD *)(a1 + v34 + 24))
  {
    if (*(_QWORD *)(v36 + 24))
    {
      v37 = *(_QWORD *)(v36 + 8);
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *(_QWORD *)(v35 + 8) = v37;
      swift_bridgeObjectRelease();
      v38 = *(_QWORD *)(v36 + 24);
      *(_QWORD *)(v35 + 16) = *(_QWORD *)(v36 + 16);
      *(_QWORD *)(v35 + 24) = v38;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
      *(_QWORD *)(v35 + 48) = *(_QWORD *)(v36 + 48);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v35 + 56) = *(_QWORD *)(v36 + 56);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23C39D838(v35);
  }
  v39 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v39;
  v40 = *(_OWORD *)(v36 + 48);
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
  *(_OWORD *)(v35 + 48) = v40;
LABEL_6:
  v41 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v42 = a1 + v41;
  v43 = a2 + v41;
  if (!*(_QWORD *)(a1 + v41 + 16))
  {
LABEL_10:
    v46 = *(_OWORD *)(v43 + 16);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *(_OWORD *)(v42 + 16) = v46;
    *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
    return a1;
  }
  if (!*(_QWORD *)(v43 + 16))
  {
    sub_23C39D86C(a1 + v41);
    goto LABEL_10;
  }
  v44 = *(_QWORD *)(v43 + 8);
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_QWORD *)(v42 + 8) = v44;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(v43 + 16);
  swift_bridgeObjectRelease();
  v45 = *(_QWORD *)(v43 + 32);
  *(_QWORD *)(v42 + 24) = *(_QWORD *)(v43 + 24);
  *(_QWORD *)(v42 + 32) = v45;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C39DBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23C3F6678();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 40), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C39DC64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23C3F6678();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 40), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

uint64_t sub_23C39DCE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C3F6678();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SearchState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_23C39DE88 + 4 * byte_23C3F8313[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_23C39DEBC + 4 * byte_23C3F830E[v4]))();
}

uint64_t sub_23C39DEBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C39DEC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C39DECCLL);
  return result;
}

uint64_t sub_23C39DED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C39DEE0);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_23C39DEE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C39DEEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchState.CodingKeys()
{
  return &type metadata for SearchState.CodingKeys;
}

unint64_t sub_23C39DF0C()
{
  unint64_t result;

  result = qword_256B84828;
  if (!qword_256B84828)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F859C, &type metadata for SearchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84828);
  }
  return result;
}

unint64_t sub_23C39DF54()
{
  unint64_t result;

  result = qword_256B84830;
  if (!qword_256B84830)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F850C, &type metadata for SearchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84830);
  }
  return result;
}

unint64_t sub_23C39DF9C()
{
  unint64_t result;

  result = qword_256B84838;
  if (!qword_256B84838)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8534, &type metadata for SearchState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84838);
  }
  return result;
}

uint64_t sub_23C39DFE0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023C400C20 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E7265746E497369 && a2 == 0xEF646C6975426C61 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6863726165537369 && a2 == 0xEB00000000676E69 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023C400C40 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x79726F74736968 && a2 == 0xE700000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6554686372616573 && a2 == 0xEA00000000007478 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xED000065706F6353 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000023C400C60 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEB00000000736E6FLL)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v5 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t *sub_23C39E570(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  sub_23C399FEC(*a1, a1[1], a1[2], a1[3]);
  sub_23C399FEC(v2, v3, v4, v5);
  return a1;
}

uint64_t SearchHint.datasetIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchHint.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchHint.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t SearchHint.searchQuery.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall SearchHint.init(label:searchQuery:datasetIdentifier:index:)(FitnessSearch::SearchHint *__return_ptr retstr, Swift::String label, Swift::String searchQuery, Swift::String_optional datasetIdentifier, Swift::Int index)
{
  retstr->datasetIdentifier = datasetIdentifier;
  retstr->label = label;
  retstr->index = index;
  retstr->searchQuery = searchQuery;
}

uint64_t sub_23C39E69C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C39E6D4 + 4 * byte_23C3F8658[a1]))(0xD000000000000011, 0x800000023C400B00);
}

uint64_t sub_23C39E6D4()
{
  return 0x6C6562616CLL;
}

uint64_t sub_23C39E6E8()
{
  return 0x7865646E69;
}

uint64_t sub_23C39E6FC()
{
  return 0x7551686372616573;
}

uint64_t sub_23C39E71C()
{
  unsigned __int8 *v0;

  return sub_23C39E69C(*v0);
}

uint64_t sub_23C39E724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C39F4A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C39E748(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23C39E754()
{
  sub_23C39E950();
  return sub_23C3F7344();
}

uint64_t sub_23C39E77C()
{
  sub_23C39E950();
  return sub_23C3F7350();
}

uint64_t sub_23C39E7A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = *(_QWORD *)(v1 + 40);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SearchHint.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[6];
  char v16;
  char v17;
  char v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84840);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v15[4] = v1[3];
  v15[5] = v8;
  v9 = v1[4];
  v15[2] = v1[5];
  v15[3] = v9;
  v15[1] = v1[6];
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_23C39E950();
  sub_23C3F7338();
  v19 = 0;
  sub_23C3F723C();
  if (!v2)
  {
    v18 = 1;
    sub_23C3F7260();
    v17 = 2;
    sub_23C3F7278();
    v16 = 3;
    sub_23C3F7260();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

unint64_t sub_23C39E950()
{
  unint64_t result;

  result = qword_256B84848;
  if (!qword_256B84848)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F883C, &type metadata for SearchHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84848);
  }
  return result;
}

uint64_t SearchHint.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84850);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C39E950();
  sub_23C3F732C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v9 = sub_23C3F71D0();
  v11 = v10;
  v24 = v9;
  v27 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23C3F71F4();
  v14 = v13;
  v22 = v12;
  v26 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v21 = sub_23C3F720C();
  v25 = 3;
  v15 = sub_23C3F71F4();
  v18 = v17;
  v19 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v20;
  a2[4] = v21;
  a2[5] = v19;
  a2[6] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C39EC00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SearchHint.init(from:)(a1, a2);
}

uint64_t sub_23C39EC14(_QWORD *a1)
{
  return SearchHint.encode(to:)(a1);
}

uint64_t SearchHint.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_23C3F7308();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F72FC();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t SearchHint.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23C3F72F0();
  sub_23C3F7308();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F72FC();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C39EDF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23C3F72F0();
  sub_23C3F7308();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F72FC();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B4HintV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  char v17;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  v12 = a2[4];
  v13 = a2[5];
  v14 = a2[6];
  if (!v3)
  {
    if (!v9)
      goto LABEL_8;
    return 0;
  }
  if (!v9)
    return 0;
  if (*a1 == *a2 && v3 == v9 || (v15 = sub_23C3F72A8(), result = 0, (v15 & 1) != 0))
  {
LABEL_8:
    if (v4 == v10 && v5 == v11)
    {
      if (v6 != v12)
        return 0;
    }
    else
    {
      v17 = sub_23C3F72A8();
      result = 0;
      if ((v17 & 1) == 0 || v6 != v12)
        return result;
    }
    if (v7 == v13 && v8 == v14)
      return 1;
    else
      return sub_23C3F72A8();
  }
  return result;
}

unint64_t sub_23C39EFF4()
{
  unint64_t result;

  result = qword_256B84858;
  if (!qword_256B84858)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchHint, &type metadata for SearchHint);
    atomic_store(result, (unint64_t *)&qword_256B84858);
  }
  return result;
}

uint64_t destroy for SearchHint()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchHint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SearchHint(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SearchHint(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchHint(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchHint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchHint()
{
  return &type metadata for SearchHint;
}

uint64_t getEnumTagSinglePayload for SearchQueryMethod(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchHint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C39F350 + 4 * byte_23C3F8661[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C39F384 + 4 * byte_23C3F865C[v4]))();
}

uint64_t sub_23C39F384(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C39F38C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C39F394);
  return result;
}

uint64_t sub_23C39F3A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C39F3A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C39F3AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C39F3B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchHint.CodingKeys()
{
  return &type metadata for SearchHint.CodingKeys;
}

unint64_t sub_23C39F3D4()
{
  unint64_t result;

  result = qword_256B84860;
  if (!qword_256B84860)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8814, &type metadata for SearchHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84860);
  }
  return result;
}

unint64_t sub_23C39F41C()
{
  unint64_t result;

  result = qword_256B84868;
  if (!qword_256B84868)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8784, &type metadata for SearchHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84868);
  }
  return result;
}

unint64_t sub_23C39F464()
{
  unint64_t result;

  result = qword_256B84870;
  if (!qword_256B84870)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F87AC, &type metadata for SearchHint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84870);
  }
  return result;
}

uint64_t sub_23C39F4A8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023C400B00 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7865646E69 && a2 == 0xE500000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7551686372616573 && a2 == 0xEB00000000797265)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t SearchScopeCategory.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C39F68C + 4 * byte_23C3F8890[a1]))(0xD000000000000010, 0x800000023C4009B0);
}

uint64_t sub_23C39F68C()
{
  return 0x6F772D6F69647561;
}

uint64_t sub_23C39F6B0()
{
  return 0x697461746964656DLL;
}

uint64_t sub_23C39F6D0()
{
  return 0x6974696C61646F6DLL;
}

uint64_t sub_23C39F6EC()
{
  return 1701736302;
}

uint64_t sub_23C39F6FC()
{
  return 0x6C75736552706F74;
}

uint64_t sub_23C39F71C()
{
  return 0x7372656E69617274;
}

uint64_t sub_23C39F734()
{
  return 0x2D72656E69617274;
}

uint64_t sub_23C39F754()
{
  return 0x7374756F6B726F77;
}

uint64_t sub_23C39F76C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = SearchScopeCategory.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == SearchScopeCategory.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23C3F72A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23C39F7F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s13FitnessSearch0B13ScopeCategoryO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_23C39F820@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = SearchScopeCategory.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23C39F848()
{
  sub_23C39FB48();
  return sub_23C3F6FA8();
}

uint64_t sub_23C39F8A4()
{
  sub_23C39FB48();
  return sub_23C3F6F9C();
}

uint64_t sub_23C39F8F0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23C3F72F0();
  SearchScopeCategory.rawValue.getter(v1);
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C39F950()
{
  unsigned __int8 *v0;

  SearchScopeCategory.rawValue.getter(*v0);
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C39F990()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23C3F72F0();
  SearchScopeCategory.rawValue.getter(v1);
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B13ScopeCategoryO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_23C3F71AC();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

unint64_t sub_23C39FA38()
{
  unint64_t result;

  result = qword_256B84878;
  if (!qword_256B84878)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchScopeCategory, &type metadata for SearchScopeCategory);
    atomic_store(result, (unint64_t *)&qword_256B84878);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchScopeCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23C39FAC8 + 4 * byte_23C3F889E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23C39FAFC + 4 * byte_23C3F8899[v4]))();
}

uint64_t sub_23C39FAFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C39FB04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C39FB0CLL);
  return result;
}

uint64_t sub_23C39FB18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C39FB20);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23C39FB24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C39FB2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchScopeCategory()
{
  return &type metadata for SearchScopeCategory;
}

unint64_t sub_23C39FB48()
{
  unint64_t result;

  result = qword_256B84880;
  if (!qword_256B84880)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchScopeCategory, &type metadata for SearchScopeCategory);
    atomic_store(result, (unint64_t *)&qword_256B84880);
  }
  return result;
}

uint64_t SearchResultsRequest.term.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResultsRequest.method.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SearchResultsRequest.mode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t SearchResultsRequest.init(term:method:mode:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 17) = a4 & 1;
  return result;
}

uint64_t sub_23C39FBDC(char a1)
{
  return *(_QWORD *)&aTerm_5[8 * a1];
}

uint64_t sub_23C39FBFC()
{
  char *v0;

  return sub_23C39FBDC(*v0);
}

uint64_t sub_23C39FC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3A089C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C39FC28()
{
  sub_23C39FDFC();
  return sub_23C3F7344();
}

uint64_t sub_23C39FC50()
{
  sub_23C39FDFC();
  return sub_23C3F7350();
}

uint64_t SearchResultsRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84888);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + 16);
  v16 = *(unsigned __int8 *)(v1 + 17);
  v17 = v8;
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_23C39FDFC();
  sub_23C3F7338();
  v22 = 0;
  sub_23C3F7260();
  if (!v2)
  {
    v13 = v16;
    v21 = v17;
    v20 = 1;
    sub_23C39FE40();
    sub_23C3F7284();
    v19 = v13;
    v18 = 2;
    sub_23C39FE84();
    sub_23C3F7284();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

unint64_t sub_23C39FDFC()
{
  unint64_t result;

  result = qword_256B84890;
  if (!qword_256B84890)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8B78, &type metadata for SearchResultsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84890);
  }
  return result;
}

unint64_t sub_23C39FE40()
{
  unint64_t result;

  result = qword_256B84898;
  if (!qword_256B84898)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchQueryMethod, &type metadata for SearchQueryMethod);
    atomic_store(result, (unint64_t *)&qword_256B84898);
  }
  return result;
}

unint64_t sub_23C39FE84()
{
  unint64_t result;

  result = qword_256B848A0;
  if (!qword_256B848A0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultsRequest.QueryMode, &type metadata for SearchResultsRequest.QueryMode);
    atomic_store(result, (unint64_t *)&qword_256B848A0);
  }
  return result;
}

uint64_t SearchResultsRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  int v15;
  char v16;
  char v17;
  char v18;
  unsigned __int8 v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B848A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C39FDFC();
  sub_23C3F732C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v9 = sub_23C3F71F4();
  v11 = v10;
  v18 = 1;
  sub_23C3A00B8();
  swift_bridgeObjectRetain();
  sub_23C3F7218();
  v15 = v19;
  v16 = 2;
  sub_23C3A00FC();
  sub_23C3F7218();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v17;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v15;
  *(_BYTE *)(a2 + 17) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_23C3A00B8()
{
  unint64_t result;

  result = qword_256B848B0;
  if (!qword_256B848B0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchQueryMethod, &type metadata for SearchQueryMethod);
    atomic_store(result, (unint64_t *)&qword_256B848B0);
  }
  return result;
}

unint64_t sub_23C3A00FC()
{
  unint64_t result;

  result = qword_256B848B8;
  if (!qword_256B848B8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultsRequest.QueryMode, &type metadata for SearchResultsRequest.QueryMode);
    atomic_store(result, (unint64_t *)&qword_256B848B8);
  }
  return result;
}

uint64_t sub_23C3A0140@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchResultsRequest.init(from:)(a1, a2);
}

uint64_t sub_23C3A0154(_QWORD *a1)
{
  return SearchResultsRequest.encode(to:)(a1);
}

uint64_t SearchResultsRequest.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t SearchResultsRequest.hashValue.getter()
{
  sub_23C3F72F0();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C3A0330()
{
  sub_23C3F72F0();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B14ResultsRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  int v3;
  char v4;
  int v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *(_BYTE *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 17);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = 0, (sub_23C3F72A8() & 1) != 0))
  {
    if ((sub_23C3E8FA4(v2, v4) & 1) != 0)
    {
      if (v3)
        v8 = 0x6E656D6572636E69;
      else
        v8 = 0x6574656C706D6F63;
      if (v3)
        v9 = 0xEB000000006C6174;
      else
        v9 = 0xE800000000000000;
      if (v5)
        v10 = 0x6E656D6572636E69;
      else
        v10 = 0x6574656C706D6F63;
      if (v5)
        v11 = 0xEB000000006C6174;
      else
        v11 = 0xE800000000000000;
      if (v8 == v10 && v9 == v11)
        v7 = 1;
      else
        v7 = sub_23C3F72A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
  }
  return v7 & 1;
}

unint64_t sub_23C3A0520()
{
  unint64_t result;

  result = qword_256B848C0;
  if (!qword_256B848C0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultsRequest, &type metadata for SearchResultsRequest);
    atomic_store(result, (unint64_t *)&qword_256B848C0);
  }
  return result;
}

uint64_t destroy for SearchContentType()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13FitnessSearch20SearchResultsRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultsRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SearchResultsRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResultsRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsRequest()
{
  return &type metadata for SearchResultsRequest;
}

uint64_t storeEnumTagSinglePayload for SearchResultsRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C3A0744 + 4 * byte_23C3F89C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C3A0778 + 4 * asc_23C3F89C0[v4]))();
}

uint64_t sub_23C3A0778(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3A0780(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3A0788);
  return result;
}

uint64_t sub_23C3A0794(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3A079CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3A07A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3A07A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsRequest.CodingKeys()
{
  return &type metadata for SearchResultsRequest.CodingKeys;
}

unint64_t sub_23C3A07C8()
{
  unint64_t result;

  result = qword_256B848C8;
  if (!qword_256B848C8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8B50, &type metadata for SearchResultsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B848C8);
  }
  return result;
}

unint64_t sub_23C3A0810()
{
  unint64_t result;

  result = qword_256B848D0;
  if (!qword_256B848D0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8AC0, &type metadata for SearchResultsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B848D0);
  }
  return result;
}

unint64_t sub_23C3A0858()
{
  unint64_t result;

  result = qword_256B848D8;
  if (!qword_256B848D8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8AE8, &type metadata for SearchResultsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B848D8);
  }
  return result;
}

uint64_t sub_23C3A089C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1836213620 && a2 == 0xE400000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F6874656DLL && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

BOOL static SearchContentAssetLoadStatus.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23C3A09C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C3A0A00 + 4 * byte_23C3F8C40[a1]))(0xD000000000000013, 0x800000023C400C80);
}

uint64_t sub_23C3A0A00()
{
  return 0x4C676E69646E6570;
}

uint64_t sub_23C3A0A20()
{
  return 0x676E6964616F6CLL;
}

uint64_t sub_23C3A0A68()
{
  return 0x646573756170;
}

uint64_t sub_23C3A0A7C()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_23C3A0A98()
{
  return 0x64656C696166;
}

uint64_t sub_23C3A0AAC()
{
  return 0x696C6C65636E6163;
}

uint64_t sub_23C3A0AC8()
{
  return 0;
}

void sub_23C3A0AD4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_23C3A0AE0()
{
  sub_23C3A148C();
  return sub_23C3F7344();
}

uint64_t sub_23C3A0B08()
{
  sub_23C3A148C();
  return sub_23C3F7350();
}

uint64_t sub_23C3A0B38()
{
  unsigned __int8 *v0;

  return sub_23C3A09C8(*v0);
}

uint64_t sub_23C3A0B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3A17AC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C3A0B64(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_23C3A0B70()
{
  sub_23C3A1448();
  return sub_23C3F7344();
}

uint64_t sub_23C3A0B98()
{
  sub_23C3A1448();
  return sub_23C3F7350();
}

uint64_t sub_23C3A0BC0()
{
  sub_23C3A1558();
  return sub_23C3F7344();
}

uint64_t sub_23C3A0BE8()
{
  sub_23C3A1558();
  return sub_23C3F7350();
}

uint64_t sub_23C3A0C10()
{
  sub_23C3A1514();
  return sub_23C3F7344();
}

uint64_t sub_23C3A0C38()
{
  sub_23C3A1514();
  return sub_23C3F7350();
}

uint64_t sub_23C3A0C60()
{
  sub_23C3A1668();
  return sub_23C3F7344();
}

uint64_t sub_23C3A0C88()
{
  sub_23C3A1668();
  return sub_23C3F7350();
}

uint64_t sub_23C3A0CB0()
{
  sub_23C3A159C();
  return sub_23C3F7344();
}

uint64_t sub_23C3A0CD8()
{
  sub_23C3A159C();
  return sub_23C3F7350();
}

uint64_t sub_23C3A0D00()
{
  sub_23C3A15E0();
  return sub_23C3F7344();
}

uint64_t sub_23C3A0D28()
{
  sub_23C3A15E0();
  return sub_23C3F7350();
}

uint64_t sub_23C3A0D50()
{
  sub_23C3A14D0();
  return sub_23C3F7344();
}

uint64_t sub_23C3A0D78()
{
  sub_23C3A14D0();
  return sub_23C3F7350();
}

uint64_t sub_23C3A0DA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_23C3A0DCC()
{
  sub_23C3A16AC();
  return sub_23C3F7344();
}

uint64_t sub_23C3A0DF4()
{
  sub_23C3A16AC();
  return sub_23C3F7350();
}

uint64_t sub_23C3A0E1C()
{
  sub_23C3A1624();
  return sub_23C3F7344();
}

uint64_t sub_23C3A0E44()
{
  sub_23C3A1624();
  return sub_23C3F7350();
}

void SearchContentAssetLoadStatus.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B848E0);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B848E8);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B848F0);
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v28 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B848F8);
  v26 = *(_QWORD *)(v9 - 8);
  v27 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v25 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84900);
  v23 = *(_QWORD *)(v11 - 8);
  v24 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v22 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84908);
  v20 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v19 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84910);
  v17[2] = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v17[1] = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84918);
  MEMORY[0x24BDAC7A8](v17[0]);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84920);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84928);
  v38 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  MEMORY[0x24BDAC7A8](v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3A1448();
  sub_23C3F7338();
  __asm { BR              X10 }
}

uint64_t sub_23C3A1180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 89) = 0;
  sub_23C3A16AC();
  v5 = *(_QWORD *)(v4 - 104);
  sub_23C3F7230();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v2, v5);
}

unint64_t sub_23C3A1448()
{
  unint64_t result;

  result = qword_256B84930;
  if (!qword_256B84930)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F94D0, &type metadata for SearchContentAssetLoadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84930);
  }
  return result;
}

unint64_t sub_23C3A148C()
{
  unint64_t result;

  result = qword_256B84938;
  if (!qword_256B84938)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9480, &type metadata for SearchContentAssetLoadStatus.CancellingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84938);
  }
  return result;
}

unint64_t sub_23C3A14D0()
{
  unint64_t result;

  result = qword_256B84940;
  if (!qword_256B84940)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9430, &type metadata for SearchContentAssetLoadStatus.PendingCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84940);
  }
  return result;
}

unint64_t sub_23C3A1514()
{
  unint64_t result;

  result = qword_256B84948;
  if (!qword_256B84948)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F93E0, &type metadata for SearchContentAssetLoadStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84948);
  }
  return result;
}

unint64_t sub_23C3A1558()
{
  unint64_t result;

  result = qword_256B84950;
  if (!qword_256B84950)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9390, &type metadata for SearchContentAssetLoadStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84950);
  }
  return result;
}

unint64_t sub_23C3A159C()
{
  unint64_t result;

  result = qword_256B84958;
  if (!qword_256B84958)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9340, &type metadata for SearchContentAssetLoadStatus.PausedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84958);
  }
  return result;
}

unint64_t sub_23C3A15E0()
{
  unint64_t result;

  result = qword_256B84960;
  if (!qword_256B84960)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F92F0, &type metadata for SearchContentAssetLoadStatus.PausingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84960);
  }
  return result;
}

unint64_t sub_23C3A1624()
{
  unint64_t result;

  result = qword_256B84968;
  if (!qword_256B84968)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F92A0, &type metadata for SearchContentAssetLoadStatus.PendingPauseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84968);
  }
  return result;
}

unint64_t sub_23C3A1668()
{
  unint64_t result;

  result = qword_256B84970;
  if (!qword_256B84970)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9250, &type metadata for SearchContentAssetLoadStatus.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84970);
  }
  return result;
}

unint64_t sub_23C3A16AC()
{
  unint64_t result;

  result = qword_256B84978;
  if (!qword_256B84978)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9200, &type metadata for SearchContentAssetLoadStatus.PendingLoadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84978);
  }
  return result;
}

uint64_t SearchContentAssetLoadStatus.init(from:)(_QWORD *a1)
{
  return sub_23C3A1B38(a1);
}

uint64_t sub_23C3A1704@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23C3A1B38(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23C3A172C(_QWORD *a1)
{
  unsigned __int8 *v1;

  SearchContentAssetLoadStatus.encode(to:)(a1, *v1);
}

uint64_t SearchContentAssetLoadStatus.hash(into:)()
{
  return sub_23C3F72FC();
}

uint64_t SearchContentAssetLoadStatus.hashValue.getter()
{
  sub_23C3F72F0();
  sub_23C3F72FC();
  return sub_23C3F7320();
}

uint64_t sub_23C3A17AC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x4C676E69646E6570 && a2 == 0xEB0000000064616FLL;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x50676E69646E6570 && a2 == 0xEC00000065737561 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E6973756170 && a2 == 0xE700000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646573756170 && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023C400C80 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C6C65636E6163 && a2 == 0xEA0000000000676ELL)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_23C3A1B38(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD v31[7];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A30);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v54 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A38);
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v53 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A40);
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v52 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A48);
  v37 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v50 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A50);
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v51 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A58);
  v35 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v49 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A60);
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v48 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A68);
  v31[6] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v47 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A70);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A78);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23C3A1448();
  v23 = v56;
  sub_23C3F732C();
  if (!v23)
  {
    v31[4] = v17;
    v31[2] = v15;
    v31[3] = v14;
    v56 = v19;
    v31[5] = 0;
    v24 = v21;
    v25 = sub_23C3F7224();
    if (*(_QWORD *)(v25 + 16) == 1)
    {
      v26 = (char *)&loc_23C3A1EC4 + 4 * byte_23C3F8C52[*(unsigned __int8 *)(v25 + 32)];
      v31[1] = *(unsigned __int8 *)(v25 + 32);
      __asm { BR              X9 }
    }
    v27 = sub_23C3F7104();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v29 = &type metadata for SearchContentAssetLoadStatus;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
}

unint64_t sub_23C3A22D8()
{
  unint64_t result;

  result = qword_256B84980;
  if (!qword_256B84980)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchContentAssetLoadStatus, &type metadata for SearchContentAssetLoadStatus);
    atomic_store(result, (unint64_t *)&qword_256B84980);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus()
{
  return &type metadata for SearchContentAssetLoadStatus;
}

uint64_t _s13FitnessSearch28SearchContentAssetLoadStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_23C3A2380 + 4 * byte_23C3F8C60[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_23C3A23B4 + 4 * byte_23C3F8C5B[v4]))();
}

uint64_t sub_23C3A23B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3A23BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3A23C4);
  return result;
}

uint64_t sub_23C3A23D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3A23D8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_23C3A23DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3A23E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus.CodingKeys()
{
  return &type metadata for SearchContentAssetLoadStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus.PendingLoadCodingKeys()
{
  return &type metadata for SearchContentAssetLoadStatus.PendingLoadCodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus.LoadingCodingKeys()
{
  return &type metadata for SearchContentAssetLoadStatus.LoadingCodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus.PendingPauseCodingKeys()
{
  return &type metadata for SearchContentAssetLoadStatus.PendingPauseCodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus.PausingCodingKeys()
{
  return &type metadata for SearchContentAssetLoadStatus.PausingCodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus.PausedCodingKeys()
{
  return &type metadata for SearchContentAssetLoadStatus.PausedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus.CompletedCodingKeys()
{
  return &type metadata for SearchContentAssetLoadStatus.CompletedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus.FailedCodingKeys()
{
  return &type metadata for SearchContentAssetLoadStatus.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus.PendingCancellationCodingKeys()
{
  return &type metadata for SearchContentAssetLoadStatus.PendingCancellationCodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentAssetLoadStatus.CancellingCodingKeys()
{
  return &type metadata for SearchContentAssetLoadStatus.CancellingCodingKeys;
}

unint64_t sub_23C3A2494()
{
  unint64_t result;

  result = qword_256B84988;
  if (!qword_256B84988)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F91D8, &type metadata for SearchContentAssetLoadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84988);
  }
  return result;
}

unint64_t sub_23C3A24DC()
{
  unint64_t result;

  result = qword_256B84990;
  if (!qword_256B84990)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F90F8, &type metadata for SearchContentAssetLoadStatus.PendingLoadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84990);
  }
  return result;
}

unint64_t sub_23C3A2524()
{
  unint64_t result;

  result = qword_256B84998;
  if (!qword_256B84998)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9120, &type metadata for SearchContentAssetLoadStatus.PendingLoadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84998);
  }
  return result;
}

unint64_t sub_23C3A256C()
{
  unint64_t result;

  result = qword_256B849A0;
  if (!qword_256B849A0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F90A8, &type metadata for SearchContentAssetLoadStatus.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849A0);
  }
  return result;
}

unint64_t sub_23C3A25B4()
{
  unint64_t result;

  result = qword_256B849A8;
  if (!qword_256B849A8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F90D0, &type metadata for SearchContentAssetLoadStatus.LoadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849A8);
  }
  return result;
}

unint64_t sub_23C3A25FC()
{
  unint64_t result;

  result = qword_256B849B0;
  if (!qword_256B849B0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9058, &type metadata for SearchContentAssetLoadStatus.PendingPauseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849B0);
  }
  return result;
}

unint64_t sub_23C3A2644()
{
  unint64_t result;

  result = qword_256B849B8;
  if (!qword_256B849B8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9080, &type metadata for SearchContentAssetLoadStatus.PendingPauseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849B8);
  }
  return result;
}

unint64_t sub_23C3A268C()
{
  unint64_t result;

  result = qword_256B849C0;
  if (!qword_256B849C0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9008, &type metadata for SearchContentAssetLoadStatus.PausingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849C0);
  }
  return result;
}

unint64_t sub_23C3A26D4()
{
  unint64_t result;

  result = qword_256B849C8;
  if (!qword_256B849C8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9030, &type metadata for SearchContentAssetLoadStatus.PausingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849C8);
  }
  return result;
}

unint64_t sub_23C3A271C()
{
  unint64_t result;

  result = qword_256B849D0;
  if (!qword_256B849D0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8FB8, &type metadata for SearchContentAssetLoadStatus.PausedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849D0);
  }
  return result;
}

unint64_t sub_23C3A2764()
{
  unint64_t result;

  result = qword_256B849D8;
  if (!qword_256B849D8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8FE0, &type metadata for SearchContentAssetLoadStatus.PausedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849D8);
  }
  return result;
}

unint64_t sub_23C3A27AC()
{
  unint64_t result;

  result = qword_256B849E0;
  if (!qword_256B849E0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8F68, &type metadata for SearchContentAssetLoadStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849E0);
  }
  return result;
}

unint64_t sub_23C3A27F4()
{
  unint64_t result;

  result = qword_256B849E8;
  if (!qword_256B849E8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8F90, &type metadata for SearchContentAssetLoadStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849E8);
  }
  return result;
}

unint64_t sub_23C3A283C()
{
  unint64_t result;

  result = qword_256B849F0;
  if (!qword_256B849F0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8F18, &type metadata for SearchContentAssetLoadStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849F0);
  }
  return result;
}

unint64_t sub_23C3A2884()
{
  unint64_t result;

  result = qword_256B849F8;
  if (!qword_256B849F8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8F40, &type metadata for SearchContentAssetLoadStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B849F8);
  }
  return result;
}

unint64_t sub_23C3A28CC()
{
  unint64_t result;

  result = qword_256B84A00;
  if (!qword_256B84A00)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8EC8, &type metadata for SearchContentAssetLoadStatus.PendingCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84A00);
  }
  return result;
}

unint64_t sub_23C3A2914()
{
  unint64_t result;

  result = qword_256B84A08;
  if (!qword_256B84A08)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8EF0, &type metadata for SearchContentAssetLoadStatus.PendingCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84A08);
  }
  return result;
}

unint64_t sub_23C3A295C()
{
  unint64_t result;

  result = qword_256B84A10;
  if (!qword_256B84A10)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8E78, &type metadata for SearchContentAssetLoadStatus.CancellingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84A10);
  }
  return result;
}

unint64_t sub_23C3A29A4()
{
  unint64_t result;

  result = qword_256B84A18;
  if (!qword_256B84A18)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F8EA0, &type metadata for SearchContentAssetLoadStatus.CancellingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84A18);
  }
  return result;
}

unint64_t sub_23C3A29EC()
{
  unint64_t result;

  result = qword_256B84A20;
  if (!qword_256B84A20)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9148, &type metadata for SearchContentAssetLoadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84A20);
  }
  return result;
}

unint64_t sub_23C3A2A34()
{
  unint64_t result;

  result = qword_256B84A28;
  if (!qword_256B84A28)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9170, &type metadata for SearchContentAssetLoadStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84A28);
  }
  return result;
}

uint64_t sub_23C3A2A8C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LocalizationBundle()
{
  return objc_opt_self();
}

BOOL SearchState.isFetching.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for SearchState() + 52) + 56) == 0;
}

Swift::Bool __swiftcall SearchState.isFetching(term:)(Swift::String term)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;

  object = term._object;
  countAndFlagsBits = term._countAndFlagsBits;
  v4 = v1 + *(int *)(type metadata accessor for SearchState() + 52);
  if (*(_BYTE *)(v4 + 56))
    return 0;
  if (*(_QWORD *)v4 == countAndFlagsBits && *(_QWORD *)(v4 + 8) == (_QWORD)object)
    return 1;
  else
    return sub_23C3F72A8();
}

uint64_t SearchState.withLocale(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_23C39C588(v2, a2);
  v5 = a2 + *(int *)(type metadata accessor for SearchState() + 40);
  v6 = sub_23C3F6678();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(v5, a1, v6);
}

uint64_t SearchState.withResults(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 24);
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_BYTE *)(a1 + 56);
  sub_23C39C588(v2, a2);
  v10 = a2 + *(int *)(type metadata accessor for SearchState() + 52);
  v18 = *(_QWORD *)(v10 + 8);
  v19 = *(_QWORD *)v10;
  v16 = *(_QWORD *)(v10 + 24);
  v17 = *(_QWORD *)(v10 + 16);
  v14 = *(_QWORD *)(v10 + 40);
  v15 = *(_QWORD *)(v10 + 32);
  v13 = *(_QWORD *)(v10 + 48);
  v11 = *(_BYTE *)(v10 + 56);
  sub_23C39AE54(v4, v21, v20, v5, v6, v7, v8, v9);
  result = sub_23C39A378(v19, v18, v17, v16, v15, v14, v13, v11);
  *(_QWORD *)v10 = v4;
  *(_QWORD *)(v10 + 8) = v21;
  *(_QWORD *)(v10 + 16) = v20;
  *(_QWORD *)(v10 + 24) = v5;
  *(_QWORD *)(v10 + 32) = v6;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v8;
  *(_BYTE *)(v10 + 56) = v9;
  return result;
}

__n128 SearchState.withLayout(_:)@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v4 = a1[1].n128_u64[0];
  sub_23C39C588(v2, a2);
  result = v6;
  *(__n128 *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 40) = v4;
  return result;
}

uint64_t SearchState.withPlatform(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_23C39C588(v2, a2);
  result = type metadata accessor for SearchState();
  *(_BYTE *)(a2 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t SearchState.withSubscription(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23C39C588(v2, a2);
  *(_BYTE *)(a2 + 51) = a1;
  return result;
}

uint64_t SearchState.withIsInternalBuild(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23C39C588(v2, a2);
  *(_BYTE *)(a2 + 48) = a1;
  return result;
}

Swift::Void __swiftcall SearchState.clearResults()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for SearchState();
  v2 = v0 + *(int *)(v1 + 52);
  sub_23C39A378(*(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_BYTE *)(v2 + 56));
  *(_QWORD *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)v2 = 0u;
  *(_BYTE *)(v2 + 56) = 2;
  v3 = v0 + *(int *)(v1 + 60);
  sub_23C399FEC(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
}

uint64_t SearchState.searchQuery.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = 0;
  v2 = v0 + *(int *)(type metadata accessor for SearchState() + 52);
  if (*(_BYTE *)(v2 + 56) == 1)
  {
    v1 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRetain();
  }
  return v1;
}

unint64_t SearchState.pageState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;

  result = type metadata accessor for SearchState();
  if (*(_BYTE *)(v1 + *(int *)(result + 48)) != 2)
  {
    if (*(_BYTE *)(v1 + 49))
    {
      v16 = (uint64_t *)(v1 + *(int *)(result + 52));
      v17 = *v16;
      v18 = v16[1];
      v19 = (_QWORD *)v16[2];
      if (*((_BYTE *)v16 + 56))
      {
        if (*((_BYTE *)v16 + 56) == 1)
        {
          v21 = v16[3];
          v20 = v16[4];
          v22 = (uint64_t *)(v1 + *(int *)(result + 60));
          v23 = *v22;
          v24 = v22[1];
          v25 = v22[2];
          v26 = v22[3];
          v27 = *v22;
          v28 = v24;
          v29 = v25;
          v30 = v26;
          v31 = v22[4];
          v32 = v22[5];
          v33 = v22[6];
          v34 = v22[7];
          if (!v26)
          {
            if (v19[2])
            {
              v28 = v19[5];
              v41 = v19[4];
              v30 = v19[7];
              v40 = v19[6];
              v31 = v19[8];
              v32 = v19[9];
              v33 = v19[10];
              v34 = v19[11];
              v44 = v22[1];
              v46 = *v22;
              v48 = v20;
              v43 = v22[2];
              v42 = v21;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v29 = v40;
              v27 = v41;
              v21 = v42;
              v25 = v43;
              v24 = v44;
              v23 = v46;
              v20 = v48;
            }
            else
            {
              v27 = 0;
              v28 = 0;
              v29 = 0;
              v30 = 0;
              v31 = 0;
              v32 = 0;
              v33 = 0;
              v34 = 0;
            }
          }
          *(_QWORD *)a1 = v21;
          *(_QWORD *)(a1 + 8) = v20;
          *(_QWORD *)(a1 + 16) = v17;
          *(_QWORD *)(a1 + 24) = v18;
          *(_QWORD *)(a1 + 32) = v27;
          *(_QWORD *)(a1 + 40) = v28;
          *(_QWORD *)(a1 + 48) = v29;
          *(_QWORD *)(a1 + 56) = v30;
          *(_QWORD *)(a1 + 64) = v31;
          *(_QWORD *)(a1 + 72) = v32;
          *(_QWORD *)(a1 + 80) = v33;
          *(_QWORD *)(a1 + 88) = v34;
          *(_BYTE *)(a1 + 96) = 2;
          sub_23C39A824(v23, v24, v25, v26);
          swift_bridgeObjectRetain();
          return swift_bridgeObjectRetain();
        }
        v35 = v1 + *(int *)(result + 68);
        if (*(_QWORD *)(v35 + 16))
        {
          v37 = v35 + 24;
          v36 = *(_QWORD *)(v35 + 24);
          result = *(_QWORD *)(v37 + 8);
        }
        else
        {
          v38 = (uint64_t *)(v1 + *(int *)(result + 56));
          v36 = *v38;
          result = v38[1];
          v39 = HIBYTE(result) & 0xF;
          if ((result & 0x2000000000000000) == 0)
            v39 = v36 & 0xFFFFFFFFFFFFLL;
          if (!v39)
          {
            *(_QWORD *)a1 = 2;
            *(_OWORD *)(a1 + 8) = 0u;
            *(_OWORD *)(a1 + 24) = 0u;
            *(_OWORD *)(a1 + 40) = 0u;
            *(_OWORD *)(a1 + 56) = 0u;
            *(_OWORD *)(a1 + 72) = 0u;
            *(_QWORD *)(a1 + 88) = 0;
            goto LABEL_14;
          }
        }
        *(_QWORD *)a1 = v36;
        *(_QWORD *)(a1 + 8) = result;
        *(_OWORD *)(a1 + 16) = 0u;
        *(_OWORD *)(a1 + 32) = 0u;
        *(_OWORD *)(a1 + 48) = 0u;
        *(_OWORD *)(a1 + 64) = 0u;
        *(_OWORD *)(a1 + 80) = 0u;
        *(_BYTE *)(a1 + 96) = 0;
      }
      else
      {
        *(_QWORD *)a1 = v17;
        *(_QWORD *)(a1 + 8) = v18;
        *(_QWORD *)(a1 + 16) = v19;
        *(_OWORD *)(a1 + 24) = 0u;
        *(_OWORD *)(a1 + 40) = 0u;
        *(_OWORD *)(a1 + 56) = 0u;
        *(_OWORD *)(a1 + 72) = 0u;
        *(_QWORD *)(a1 + 88) = 0;
        *(_BYTE *)(a1 + 96) = 1;
      }
      return swift_bridgeObjectRetain();
    }
LABEL_13:
    *(_QWORD *)a1 = 1;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_QWORD *)(a1 + 88) = 0;
LABEL_14:
    *(_BYTE *)(a1 + 96) = 3;
    return result;
  }
  if (!*(_BYTE *)(v1 + 49))
    goto LABEL_13;
  v4 = (uint64_t *)(v1 + *(int *)(result + 52));
  v6 = *v4;
  v5 = v4[1];
  v7 = v4[2];
  if (*((_BYTE *)v4 + 56))
  {
    if (*((_BYTE *)v4 + 56) == 1)
    {
      v9 = v4[3];
      v8 = v4[4];
      if (*(_QWORD *)(v7 + 16))
      {
        v10 = *(_QWORD *)(v7 + 32);
        v11 = *(_QWORD *)(v7 + 56);
        v45 = *(_OWORD *)(v7 + 40);
        v47 = *(_OWORD *)(v7 + 64);
        v12 = *(_QWORD *)(v7 + 80);
        v13 = *(_QWORD *)(v7 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14 = v45;
        v15 = v47;
      }
      else
      {
        v10 = 0;
        v11 = 0;
        v12 = 0;
        v13 = 0;
        v14 = 0uLL;
        v15 = 0uLL;
      }
      *(_QWORD *)a1 = v9;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = v10;
      *(_OWORD *)(a1 + 40) = v14;
      *(_QWORD *)(a1 + 56) = v11;
      *(_OWORD *)(a1 + 64) = v15;
      *(_QWORD *)(a1 + 80) = v12;
      *(_QWORD *)(a1 + 88) = v13;
      *(_BYTE *)(a1 + 96) = 2;
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    goto LABEL_13;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_QWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 96) = 1;
  return swift_bridgeObjectRetain();
}

void SearchState.description.getter()
{
  uint64_t v0;

  SearchState.pageState.getter((uint64_t)&v0);
  __asm { BR              X10 }
}

uint64_t sub_23C3A3274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v14 = v0;
  v13 = v1;
  sub_23C3F6F84();
  sub_23C3A3530(v4, v2, v9, v6, v13, v14, v3, v5, v10, v11, v7, v8, 0);
  sub_23C3F6F84();
  return 0x2873746E6948;
}

void sub_23C3A3460()
{
  JUMPOUT(0x23C3A3440);
}

uint64_t sub_23C3A3530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t result;

  if (a13 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_23C399FEC(a5, a6, a7, a8);
  }
  else if (a13 <= 1u)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23C3A360C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C3A3644 + 4 * byte_23C3F9580[a1]))(0xD000000000000012, 0x800000023C400D20);
}

uint64_t sub_23C3A3644(uint64_t a1)
{
  return a1 - 1;
}

unint64_t sub_23C3A37EC(unsigned __int8 a1)
{
  return ((unint64_t)a1 << 8) + 12383;
}

uint64_t sub_23C3A3800(char a1)
{
  if ((a1 & 1) != 0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_23C3A3818()
{
  sub_23C3A5CC4();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3840()
{
  sub_23C3A5CC4();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3868()
{
  sub_23C3A5C80();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3890()
{
  sub_23C3A5C80();
  return sub_23C3F7350();
}

uint64_t sub_23C3A38B8()
{
  unsigned __int8 *v0;

  return sub_23C3A360C(*v0);
}

uint64_t sub_23C3A38C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3ABB74(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C3A38E4(_BYTE *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_23C3A38F0()
{
  sub_23C3A5664();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3918()
{
  sub_23C3A5664();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3940()
{
  sub_23C3A5C3C();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3968()
{
  sub_23C3A5C3C();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3990()
{
  return 1;
}

uint64_t sub_23C3A39A4()
{
  sub_23C3A5BF8();
  return sub_23C3F7344();
}

uint64_t sub_23C3A39CC()
{
  sub_23C3A5BF8();
  return sub_23C3F7350();
}

uint64_t sub_23C3A39F4()
{
  sub_23C3A5BB4();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3A1C()
{
  sub_23C3A5BB4();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3A44()
{
  sub_23C3A5B70();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3A6C()
{
  sub_23C3A5B70();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3A94()
{
  sub_23C3A5B2C();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3ABC()
{
  sub_23C3A5B2C();
  return sub_23C3F7350();
}

unint64_t sub_23C3A3AE4()
{
  unsigned __int8 *v0;

  return sub_23C3A37EC(*v0);
}

uint64_t sub_23C3A3AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3AC318(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3A3B10()
{
  sub_23C3A5AA4();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3B38()
{
  sub_23C3A5AA4();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3B60()
{
  sub_23C3A5AE8();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3B88()
{
  sub_23C3A5AE8();
  return sub_23C3F7350();
}

BOOL sub_23C3A3BB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23C3A3BC8()
{
  char *v0;

  return sub_23C3A3800(*v0);
}

uint64_t sub_23C3A3BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3AC414(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C3A3BF4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23C3A3C00()
{
  sub_23C3A5A60();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3C28()
{
  sub_23C3A5A60();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3C50()
{
  sub_23C3A5A1C();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3C78()
{
  sub_23C3A5A1C();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3CA0()
{
  sub_23C3A5994();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3CC8()
{
  sub_23C3A5994();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3CF0()
{
  sub_23C3A5950();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3D18()
{
  sub_23C3A5950();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3D40()
{
  sub_23C3A590C();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3D68()
{
  sub_23C3A590C();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3D90()
{
  sub_23C3A5884();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3DB8()
{
  sub_23C3A5884();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3DE0()
{
  sub_23C3A57B8();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3E08()
{
  sub_23C3A57B8();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3E30()
{
  sub_23C3F72F0();
  sub_23C3F72FC();
  return sub_23C3F7320();
}

uint64_t sub_23C3A3E70()
{
  return sub_23C3F72FC();
}

uint64_t sub_23C3A3E94()
{
  sub_23C3F72F0();
  sub_23C3F72FC();
  return sub_23C3F7320();
}

uint64_t sub_23C3A3ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3AC4CC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C3A3EF8()
{
  sub_23C3A5774();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3F20()
{
  sub_23C3A5774();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3F48()
{
  sub_23C3A5730();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3F70()
{
  sub_23C3A5730();
  return sub_23C3F7350();
}

uint64_t sub_23C3A3F98()
{
  sub_23C3A56EC();
  return sub_23C3F7344();
}

uint64_t sub_23C3A3FC0()
{
  sub_23C3A56EC();
  return sub_23C3F7350();
}

void SearchAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD v29[10];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B20);
  v72 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v70 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B28);
  v65 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v64 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B30);
  v29[6] = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v66 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B38);
  v29[7] = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v74 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B40);
  v29[3] = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v60 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B48);
  v29[2] = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v58 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B50);
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v54 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B58);
  v29[5] = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v63 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B60);
  v29[1] = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v52 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for SearchHistoryItem();
  MEMORY[0x24BDAC7A8](v49);
  v51 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B68);
  v29[0] = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v50 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B70);
  v29[4] = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v61 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B78);
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v44 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B80);
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v43 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B88);
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v40 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B90);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v36 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84B98);
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v34 = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84BA0);
  v32 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v31 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84BA8);
  v29[9] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29[8] = (char *)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84BB0);
  MEMORY[0x24BDAC7A8](v22);
  v23 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84BB8);
  v76 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v27 = (char *)v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3A5664();
  v78 = v27;
  sub_23C3F7338();
  sub_23C3A56A8(v77, (uint64_t)v25);
  v28 = (char *)sub_23C3A46F4 + 4 * word_23C3F9594[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C3A46F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v0 - 152) = 3;
  sub_23C3A5BF8();
  v1 = *(_QWORD *)(v0 - 528);
  v3 = *(_QWORD *)(v0 - 168);
  v2 = *(_QWORD *)(v0 - 160);
  sub_23C3F7230();
  v4 = *(_QWORD *)(v0 - 504);
  sub_23C3F726C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 520) + 8))(v1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 192) + 8))(v3, v2);
}

uint64_t type metadata accessor for SearchAction()
{
  uint64_t result;

  result = qword_256B84DB8;
  if (!qword_256B84DB8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C3A5664()
{
  unint64_t result;

  result = qword_256B84BC0;
  if (!qword_256B84BC0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FABDC, &type metadata for SearchAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84BC0);
  }
  return result;
}

uint64_t sub_23C3A56A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C3A56EC()
{
  unint64_t result;

  result = qword_256B84BC8;
  if (!qword_256B84BC8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FAB8C, &type metadata for SearchAction.ViewDidDisappearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84BC8);
  }
  return result;
}

unint64_t sub_23C3A5730()
{
  unint64_t result;

  result = qword_256B84BD0;
  if (!qword_256B84BD0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FAB3C, &type metadata for SearchAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84BD0);
  }
  return result;
}

unint64_t sub_23C3A5774()
{
  unint64_t result;

  result = qword_256B84BD8;
  if (!qword_256B84BD8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FAAEC, &type metadata for SearchAction.TextChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84BD8);
  }
  return result;
}

unint64_t sub_23C3A57B8()
{
  unint64_t result;

  result = qword_256B84BE0;
  if (!qword_256B84BE0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FAA9C, &type metadata for SearchAction.SuggestionsFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84BE0);
  }
  return result;
}

unint64_t sub_23C3A57FC()
{
  unint64_t result;

  result = qword_256B84BE8;
  if (!qword_256B84BE8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchHintsResult, &type metadata for SearchHintsResult);
    atomic_store(result, (unint64_t *)&qword_256B84BE8);
  }
  return result;
}

unint64_t sub_23C3A5840()
{
  unint64_t result;

  result = qword_256B84BF0;
  if (!qword_256B84BF0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchSession, &type metadata for SearchSession);
    atomic_store(result, (unint64_t *)&qword_256B84BF0);
  }
  return result;
}

unint64_t sub_23C3A5884()
{
  unint64_t result;

  result = qword_256B84BF8;
  if (!qword_256B84BF8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FAA4C, &type metadata for SearchAction.SuggestionSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84BF8);
  }
  return result;
}

unint64_t sub_23C3A58C8()
{
  unint64_t result;

  result = qword_256B84C00;
  if (!qword_256B84C00)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchHint, &type metadata for SearchHint);
    atomic_store(result, (unint64_t *)&qword_256B84C00);
  }
  return result;
}

unint64_t sub_23C3A590C()
{
  unint64_t result;

  result = qword_256B84C08;
  if (!qword_256B84C08)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA9FC, &type metadata for SearchAction.ScopeSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C08);
  }
  return result;
}

unint64_t sub_23C3A5950()
{
  unint64_t result;

  result = qword_256B84C10;
  if (!qword_256B84C10)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA9AC, &type metadata for SearchAction.ScopeChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C10);
  }
  return result;
}

unint64_t sub_23C3A5994()
{
  unint64_t result;

  result = qword_256B84C18;
  if (!qword_256B84C18)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA95C, &type metadata for SearchAction.ResultsFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C18);
  }
  return result;
}

unint64_t sub_23C3A59D8()
{
  unint64_t result;

  result = qword_256B84C20;
  if (!qword_256B84C20)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResult, &type metadata for SearchResult);
    atomic_store(result, (unint64_t *)&qword_256B84C20);
  }
  return result;
}

unint64_t sub_23C3A5A1C()
{
  unint64_t result;

  result = qword_256B84C28;
  if (!qword_256B84C28)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA90C, &type metadata for SearchAction.RecentQuerySelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C28);
  }
  return result;
}

unint64_t sub_23C3A5A60()
{
  unint64_t result;

  result = qword_256B84C30;
  if (!qword_256B84C30)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA8BC, &type metadata for SearchAction.QuerySubmittedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C30);
  }
  return result;
}

unint64_t sub_23C3A5AA4()
{
  unint64_t result;

  result = qword_256B84C38;
  if (!qword_256B84C38)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA86C, &type metadata for SearchAction.IncrementalFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C38);
  }
  return result;
}

unint64_t sub_23C3A5AE8()
{
  unint64_t result;

  result = qword_256B84C40;
  if (!qword_256B84C40)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA81C, &type metadata for SearchAction.IntentRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C40);
  }
  return result;
}

unint64_t sub_23C3A5B2C()
{
  unint64_t result;

  result = qword_256B84C48;
  if (!qword_256B84C48)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA7CC, &type metadata for SearchAction.HistoryFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C48);
  }
  return result;
}

unint64_t sub_23C3A5B70()
{
  unint64_t result;

  result = qword_256B84C50;
  if (!qword_256B84C50)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA77C, &type metadata for SearchAction.HistoryClearButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C50);
  }
  return result;
}

unint64_t sub_23C3A5BB4()
{
  unint64_t result;

  result = qword_256B84C58;
  if (!qword_256B84C58)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA72C, &type metadata for SearchAction.HistoryClearActionConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C58);
  }
  return result;
}

unint64_t sub_23C3A5BF8()
{
  unint64_t result;

  result = qword_256B84C60;
  if (!qword_256B84C60)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA6DC, &type metadata for SearchAction.FocusChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C60);
  }
  return result;
}

unint64_t sub_23C3A5C3C()
{
  unint64_t result;

  result = qword_256B84C68;
  if (!qword_256B84C68)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA68C, &type metadata for SearchAction.DictationEndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C68);
  }
  return result;
}

unint64_t sub_23C3A5C80()
{
  unint64_t result;

  result = qword_256B84C70;
  if (!qword_256B84C70)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA63C, &type metadata for SearchAction.ClearButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C70);
  }
  return result;
}

unint64_t sub_23C3A5CC4()
{
  unint64_t result;

  result = qword_256B84C78;
  if (!qword_256B84C78)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA5EC, &type metadata for SearchAction.CancelButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84C78);
  }
  return result;
}

uint64_t SearchAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t *v60;
  _QWORD v62[24];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  _QWORD *v113;
  uint64_t v114;

  v105 = a2;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84C80);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v109 = (char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84C88);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v103 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84C90);
  v62[21] = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v104 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84C98);
  v62[13] = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v108 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CA0);
  v62[20] = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v100 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CA8);
  v62[19] = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79);
  v99 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CB0);
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v96 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CB8);
  v62[12] = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v101 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CC0);
  v62[17] = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v97 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CC8);
  v62[18] = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v98 = (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CD0);
  v62[11] = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v102 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CD8);
  v62[15] = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v94 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CE0);
  v62[16] = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v95 = (char *)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CE8);
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v106 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CF0);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v92 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84CF8);
  v62[14] = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v93 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84D00);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v91 = (char *)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84D08);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v90 = (char *)v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84D10);
  v62[23] = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v89 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84D18);
  v110 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v23 = (char *)v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for SearchAction();
  v24 = MEMORY[0x24BDAC7A8](v111);
  v62[10] = (char *)v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v62[7] = (char *)v62 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v62[9] = (char *)v62 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v62[8] = (char *)v62 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v62[6] = (char *)v62 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v62[22] = (char *)v62 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v62[5] = (char *)v62 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)v62 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38);
  v43 = (char *)v62 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41);
  v46 = (char *)v62 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44);
  v49 = (char *)v62 - v48;
  MEMORY[0x24BDAC7A8](v47);
  v51 = (char *)v62 - v50;
  v52 = a1[3];
  v113 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v52);
  sub_23C3A5664();
  v112 = v23;
  v53 = v114;
  sub_23C3F732C();
  if (!v53)
  {
    v62[1] = v49;
    v62[2] = v43;
    v62[3] = v46;
    v62[0] = v40;
    v114 = 0;
    v62[4] = v51;
    v54 = v110;
    v55 = v107;
    v56 = v112;
    v57 = sub_23C3F7224();
    if (*(_QWORD *)(v57 + 16) == 1)
      __asm { BR              X10 }
    v58 = sub_23C3F7104();
    swift_allocError();
    v60 = v59;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v60 = v111;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v58 - 8) + 104))(v60, *MEMORY[0x24BEE26D0], v58);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v55);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
}

uint64_t sub_23C3A7BF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_23C3A7C34()
{
  unint64_t result;

  result = qword_256B84D20;
  if (!qword_256B84D20)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchHintsResult, &type metadata for SearchHintsResult);
    atomic_store(result, (unint64_t *)&qword_256B84D20);
  }
  return result;
}

unint64_t sub_23C3A7C78()
{
  unint64_t result;

  result = qword_256B84D28;
  if (!qword_256B84D28)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchSession, &type metadata for SearchSession);
    atomic_store(result, (unint64_t *)&qword_256B84D28);
  }
  return result;
}

unint64_t sub_23C3A7CBC()
{
  unint64_t result;

  result = qword_256B84D30;
  if (!qword_256B84D30)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchHint, &type metadata for SearchHint);
    atomic_store(result, (unint64_t *)&qword_256B84D30);
  }
  return result;
}

unint64_t sub_23C3A7D00()
{
  unint64_t result;

  result = qword_256B84D38;
  if (!qword_256B84D38)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResult, &type metadata for SearchResult);
    atomic_store(result, (unint64_t *)&qword_256B84D38);
  }
  return result;
}

uint64_t sub_23C3A7D44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchAction.init(from:)(a1, a2);
}

void sub_23C3A7D58(_QWORD *a1)
{
  SearchAction.encode(to:)(a1);
}

void SearchAction.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for SearchHistoryItem();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v2);
  sub_23C3A56A8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_23C3A7E40 + 4 * word_23C3F95E0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C3A7E40()
{
  sub_23C3F72FC();
  return sub_23C3F7308();
}

uint64_t SearchAction.hashValue.getter()
{
  sub_23C3F72F0();
  SearchAction.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3A84D4()
{
  sub_23C3F72F0();
  SearchAction.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3A8514()
{
  sub_23C3F72F0();
  SearchAction.hash(into:)();
  return sub_23C3F7320();
}

void _s13FitnessSearch0B6ActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  char *v23;
  _BYTE v24[168];
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;

  v31 = a1;
  v32 = (_BYTE *)a2;
  v25 = type metadata accessor for SearchHistoryItem();
  MEMORY[0x24BDAC7A8](v25);
  v26 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for SearchAction();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v27 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v4);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v28 = &v24[-v8];
  v9 = MEMORY[0x24BDAC7A8](v7);
  v29 = &v24[-v10];
  v11 = MEMORY[0x24BDAC7A8](v9);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v30 = &v24[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84F90);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = &v24[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_23C3A56A8(v31, (uint64_t)v21);
  v31 = v22;
  sub_23C3A56A8((uint64_t)v32, v22);
  v32 = v21;
  v23 = (char *)sub_23C3A87AC + 4 * word_23C3F9606[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C3A87AC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(v1 - 224);
  sub_23C3A56A8(v2, (uint64_t)v0);
  v3 = *(_BYTE **)(v1 - 232);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23C3AC544(v2);
    v5 = 0;
  }
  else
  {
    v4 = *v0 ^ *v3;
    sub_23C3965D4(v2, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
    v5 = v4 ^ 1;
  }
  return v5 & 1;
}

uint64_t sub_23C3A96F4()
{
  return sub_23C39650C(&qword_256B84D40, (uint64_t (*)(uint64_t))type metadata accessor for SearchAction, (uint64_t)&protocol conformance descriptor for SearchAction);
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 0xAu:
        v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        v11 = a2[3];
        a1[2] = a2[2];
        a1[3] = v11;
        v12 = a2[5];
        a1[4] = a2[4];
        a1[5] = v12;
        v13 = a2[7];
        a1[6] = a2[6];
        a1[7] = v13;
        v14 = a2[9];
        a1[8] = a2[8];
        a1[9] = v14;
        v15 = a2[11];
        a1[10] = a2[10];
        a1[11] = v15;
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        v16 = a2[14];
        a1[13] = a2[13];
        a1[14] = v16;
        v17 = a2[16];
        a1[15] = a2[15];
        a1[16] = v17;
        v18 = a2[17];
        v19 = a2[18];
        a1[17] = v18;
        a1[18] = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        v22 = *(int *)(type metadata accessor for SearchHistoryItem() + 20);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = sub_23C3F6630();
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v23, v24, v25);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        v28 = a2[3];
        a1[2] = a2[2];
        a1[3] = v28;
        v29 = a2[5];
        a1[4] = a2[4];
        a1[5] = v29;
        a1[6] = a2[6];
        *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
        v30 = a2[9];
        a1[8] = a2[8];
        a1[9] = v30;
        v31 = a2[11];
        a1[10] = a2[10];
        a1[11] = v31;
        v32 = a2[12];
        v33 = a2[13];
        a1[12] = v32;
        a1[13] = v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v34 = a2[1];
        *a1 = *a2;
        a1[1] = v34;
        v35 = a2[3];
        a1[2] = a2[2];
        a1[3] = v35;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v37 = a2[6];
        v36 = a2[7];
        a1[6] = v37;
        a1[7] = v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v38 = a2[1];
        *a1 = *a2;
        a1[1] = v38;
        v39 = a2[3];
        a1[2] = a2[2];
        a1[3] = v39;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v40 = a2[1];
        *a1 = *a2;
        a1[1] = v40;
        v41 = a2[3];
        a1[2] = a2[2];
        a1[3] = v41;
        a1[4] = a2[4];
        *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
        v42 = a2[7];
        a1[6] = a2[6];
        a1[7] = v42;
        v43 = a2[9];
        a1[8] = a2[8];
        a1[9] = v43;
        v44 = a2[10];
        v45 = a2[11];
        a1[10] = v44;
        a1[11] = v45;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SearchAction(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
    case 2:
    case 4:
    case 10:
      goto LABEL_8;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 5:
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(type metadata accessor for SearchHistoryItem() + 20);
      v4 = sub_23C3F6630();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_8:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for SearchAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 2u:
    case 0xAu:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 3u:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      v9 = a2[5];
      a1[4] = a2[4];
      a1[5] = v9;
      v10 = a2[7];
      a1[6] = a2[6];
      a1[7] = v10;
      v11 = a2[9];
      a1[8] = a2[8];
      a1[9] = v11;
      v12 = a2[11];
      a1[10] = a2[10];
      a1[11] = v12;
      *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
      v13 = a2[14];
      a1[13] = a2[13];
      a1[14] = v13;
      v14 = a2[16];
      a1[15] = a2[15];
      a1[16] = v14;
      v15 = a2[17];
      v16 = a2[18];
      a1[17] = v15;
      a1[18] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 4u:
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 5u:
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      v19 = *(int *)(type metadata accessor for SearchHistoryItem() + 20);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_23C3F6630();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      goto LABEL_12;
    case 6u:
      v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      v25 = a2[3];
      a1[2] = a2[2];
      a1[3] = v25;
      v26 = a2[5];
      a1[4] = a2[4];
      a1[5] = v26;
      a1[6] = a2[6];
      *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
      v27 = a2[9];
      a1[8] = a2[8];
      a1[9] = v27;
      v28 = a2[11];
      a1[10] = a2[10];
      a1[11] = v28;
      v29 = a2[12];
      v30 = a2[13];
      a1[12] = v29;
      a1[13] = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 7u:
      v31 = a2[1];
      *a1 = *a2;
      a1[1] = v31;
      v32 = a2[3];
      a1[2] = a2[2];
      a1[3] = v32;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v34 = a2[6];
      v33 = a2[7];
      a1[6] = v34;
      a1[7] = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 8u:
      v35 = a2[1];
      *a1 = *a2;
      a1[1] = v35;
      v36 = a2[3];
      a1[2] = a2[2];
      a1[3] = v36;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 9u:
      v37 = a2[1];
      *a1 = *a2;
      a1[1] = v37;
      v38 = a2[3];
      a1[2] = a2[2];
      a1[3] = v38;
      a1[4] = a2[4];
      *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
      v39 = a2[7];
      a1[6] = a2[6];
      a1[7] = v39;
      v40 = a2[9];
      a1[8] = a2[8];
      a1[9] = v40;
      v41 = a2[10];
      v42 = a2[11];
      a1[10] = v41;
      a1[11] = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for SearchAction(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_23C3965D4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 2u:
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        *((_BYTE *)a1 + 96) = *((_BYTE *)a2 + 96);
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        a1[16] = a2[16];
        a1[17] = a2[17];
        a1[18] = a2[18];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        v6 = *(int *)(type metadata accessor for SearchHistoryItem() + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_23C3F6630();
        v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        goto LABEL_13;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for SearchAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 5)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for SearchHistoryItem() + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23C3F6630();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for SearchAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_23C3965D4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for SearchHistoryItem() + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23C3F6630();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchContentTile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for SearchContentTile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23C3AA668()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23C3AA678()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SearchHistoryItem();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SearchAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_23C3AA818 + 4 * byte_23C3F9659[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_23C3AA84C + 4 * byte_23C3F9654[v4]))();
}

uint64_t sub_23C3AA84C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3AA854(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3AA85CLL);
  return result;
}

uint64_t sub_23C3AA868(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3AA870);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_23C3AA874(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3AA87C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchAction.CodingKeys()
{
  return &type metadata for SearchAction.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.CancelButtonTappedCodingKeys()
{
  return &type metadata for SearchAction.CancelButtonTappedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.ClearButtonTappedCodingKeys()
{
  return &type metadata for SearchAction.ClearButtonTappedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.DictationEndedCodingKeys()
{
  return &type metadata for SearchAction.DictationEndedCodingKeys;
}

uint64_t sub_23C3AA8D4()
{
  return 0;
}

ValueMetadata *type metadata accessor for SearchAction.FocusChangedCodingKeys()
{
  return &type metadata for SearchAction.FocusChangedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.HistoryClearActionConfirmedCodingKeys()
{
  return &type metadata for SearchAction.HistoryClearActionConfirmedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.HistoryClearButtonTappedCodingKeys()
{
  return &type metadata for SearchAction.HistoryClearButtonTappedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.HistoryFetchCompletedCodingKeys()
{
  return &type metadata for SearchAction.HistoryFetchCompletedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.IntentRequestedCodingKeys()
{
  return &type metadata for SearchAction.IntentRequestedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SearchAction.IncrementalFetchCompletedCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C3AA978 + 4 * byte_23C3F9663[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C3AA9AC + 4 * byte_23C3F965E[v4]))();
}

uint64_t sub_23C3AA9AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3AA9B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3AA9BCLL);
  return result;
}

uint64_t sub_23C3AA9C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3AA9D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3AA9D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3AA9DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchAction.IncrementalFetchCompletedCodingKeys()
{
  return &type metadata for SearchAction.IncrementalFetchCompletedCodingKeys;
}

_BYTE *sub_23C3AAA00(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SearchAction.QuerySubmittedCodingKeys()
{
  return &type metadata for SearchAction.QuerySubmittedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.RecentQuerySelectedCodingKeys()
{
  return &type metadata for SearchAction.RecentQuerySelectedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.ResultsFetchCompletedCodingKeys()
{
  return &type metadata for SearchAction.ResultsFetchCompletedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.ScopeChangedCodingKeys()
{
  return &type metadata for SearchAction.ScopeChangedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.ScopeSelectedCodingKeys()
{
  return &type metadata for SearchAction.ScopeSelectedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.SuggestionSelectedCodingKeys()
{
  return &type metadata for SearchAction.SuggestionSelectedCodingKeys;
}

uint64_t _s9QueryModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13FitnessSearch12SearchActionO24QuerySubmittedCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3AAB48 + 4 * byte_23C3F966D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C3AAB7C + 4 * byte_23C3F9668[v4]))();
}

uint64_t sub_23C3AAB7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3AAB84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3AAB8CLL);
  return result;
}

uint64_t sub_23C3AAB98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3AABA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C3AABA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3AABAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchAction.SuggestionsFetchCompletedCodingKeys()
{
  return &type metadata for SearchAction.SuggestionsFetchCompletedCodingKeys;
}

uint64_t getEnumTagSinglePayload for SearchPageState.SuggestionsCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s13FitnessSearch12SearchActionO22FocusChangedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C3AAC58 + 4 * byte_23C3F9672[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3AAC78 + 4 * byte_23C3F9677[v4]))();
}

_BYTE *sub_23C3AAC58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3AAC78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3AAC80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3AAC88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3AAC90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3AAC98(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchAction.TextChangedCodingKeys()
{
  return &type metadata for SearchAction.TextChangedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.ViewDidAppearCodingKeys()
{
  return &type metadata for SearchAction.ViewDidAppearCodingKeys;
}

ValueMetadata *type metadata accessor for SearchAction.ViewDidDisappearCodingKeys()
{
  return &type metadata for SearchAction.ViewDidDisappearCodingKeys;
}

unint64_t sub_23C3AACD8()
{
  unint64_t result;

  result = qword_256B84DF0;
  if (!qword_256B84DF0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9BFC, &type metadata for SearchAction.TextChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84DF0);
  }
  return result;
}

unint64_t sub_23C3AAD20()
{
  unint64_t result;

  result = qword_256B84DF8;
  if (!qword_256B84DF8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9CB4, &type metadata for SearchAction.SuggestionsFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84DF8);
  }
  return result;
}

unint64_t sub_23C3AAD68()
{
  unint64_t result;

  result = qword_256B84E00;
  if (!qword_256B84E00)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9D6C, &type metadata for SearchAction.SuggestionSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E00);
  }
  return result;
}

unint64_t sub_23C3AADB0()
{
  unint64_t result;

  result = qword_256B84E08;
  if (!qword_256B84E08)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9E24, &type metadata for SearchAction.ScopeSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E08);
  }
  return result;
}

unint64_t sub_23C3AADF8()
{
  unint64_t result;

  result = qword_256B84E10;
  if (!qword_256B84E10)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9F2C, &type metadata for SearchAction.ResultsFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E10);
  }
  return result;
}

unint64_t sub_23C3AAE40()
{
  unint64_t result;

  result = qword_256B84E18;
  if (!qword_256B84E18)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9FE4, &type metadata for SearchAction.RecentQuerySelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E18);
  }
  return result;
}

unint64_t sub_23C3AAE88()
{
  unint64_t result;

  result = qword_256B84E20;
  if (!qword_256B84E20)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA09C, &type metadata for SearchAction.QuerySubmittedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E20);
  }
  return result;
}

unint64_t sub_23C3AAED0()
{
  unint64_t result;

  result = qword_256B84E28;
  if (!qword_256B84E28)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA154, &type metadata for SearchAction.IncrementalFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E28);
  }
  return result;
}

unint64_t sub_23C3AAF18()
{
  unint64_t result;

  result = qword_256B84E30;
  if (!qword_256B84E30)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA20C, &type metadata for SearchAction.IntentRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E30);
  }
  return result;
}

unint64_t sub_23C3AAF60()
{
  unint64_t result;

  result = qword_256B84E38;
  if (!qword_256B84E38)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA2C4, &type metadata for SearchAction.HistoryFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E38);
  }
  return result;
}

unint64_t sub_23C3AAFA8()
{
  unint64_t result;

  result = qword_256B84E40;
  if (!qword_256B84E40)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA41C, &type metadata for SearchAction.FocusChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E40);
  }
  return result;
}

unint64_t sub_23C3AAFF0()
{
  unint64_t result;

  result = qword_256B84E48;
  if (!qword_256B84E48)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA5C4, &type metadata for SearchAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E48);
  }
  return result;
}

unint64_t sub_23C3AB038()
{
  unint64_t result;

  result = qword_256B84E50;
  if (!qword_256B84E50)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA4E4, &type metadata for SearchAction.CancelButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E50);
  }
  return result;
}

unint64_t sub_23C3AB080()
{
  unint64_t result;

  result = qword_256B84E58;
  if (!qword_256B84E58)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA50C, &type metadata for SearchAction.CancelButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E58);
  }
  return result;
}

unint64_t sub_23C3AB0C8()
{
  unint64_t result;

  result = qword_256B84E60;
  if (!qword_256B84E60)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA494, &type metadata for SearchAction.ClearButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E60);
  }
  return result;
}

unint64_t sub_23C3AB110()
{
  unint64_t result;

  result = qword_256B84E68;
  if (!qword_256B84E68)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA4BC, &type metadata for SearchAction.ClearButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E68);
  }
  return result;
}

unint64_t sub_23C3AB158()
{
  unint64_t result;

  result = qword_256B84E70;
  if (!qword_256B84E70)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA444, &type metadata for SearchAction.DictationEndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E70);
  }
  return result;
}

unint64_t sub_23C3AB1A0()
{
  unint64_t result;

  result = qword_256B84E78;
  if (!qword_256B84E78)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA46C, &type metadata for SearchAction.DictationEndedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E78);
  }
  return result;
}

unint64_t sub_23C3AB1E8()
{
  unint64_t result;

  result = qword_256B84E80;
  if (!qword_256B84E80)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA38C, &type metadata for SearchAction.FocusChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E80);
  }
  return result;
}

unint64_t sub_23C3AB230()
{
  unint64_t result;

  result = qword_256B84E88;
  if (!qword_256B84E88)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA3B4, &type metadata for SearchAction.FocusChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E88);
  }
  return result;
}

unint64_t sub_23C3AB278()
{
  unint64_t result;

  result = qword_256B84E90;
  if (!qword_256B84E90)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA33C, &type metadata for SearchAction.HistoryClearActionConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E90);
  }
  return result;
}

unint64_t sub_23C3AB2C0()
{
  unint64_t result;

  result = qword_256B84E98;
  if (!qword_256B84E98)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA364, &type metadata for SearchAction.HistoryClearActionConfirmedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84E98);
  }
  return result;
}

unint64_t sub_23C3AB308()
{
  unint64_t result;

  result = qword_256B84EA0;
  if (!qword_256B84EA0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA2EC, &type metadata for SearchAction.HistoryClearButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84EA0);
  }
  return result;
}

unint64_t sub_23C3AB350()
{
  unint64_t result;

  result = qword_256B84EA8;
  if (!qword_256B84EA8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA314, &type metadata for SearchAction.HistoryClearButtonTappedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84EA8);
  }
  return result;
}

unint64_t sub_23C3AB398()
{
  unint64_t result;

  result = qword_256B84EB0;
  if (!qword_256B84EB0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA234, &type metadata for SearchAction.HistoryFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84EB0);
  }
  return result;
}

unint64_t sub_23C3AB3E0()
{
  unint64_t result;

  result = qword_256B84EB8;
  if (!qword_256B84EB8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA25C, &type metadata for SearchAction.HistoryFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84EB8);
  }
  return result;
}

unint64_t sub_23C3AB428()
{
  unint64_t result;

  result = qword_256B84EC0;
  if (!qword_256B84EC0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA17C, &type metadata for SearchAction.IntentRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84EC0);
  }
  return result;
}

unint64_t sub_23C3AB470()
{
  unint64_t result;

  result = qword_256B84EC8;
  if (!qword_256B84EC8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA1A4, &type metadata for SearchAction.IntentRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84EC8);
  }
  return result;
}

unint64_t sub_23C3AB4B8()
{
  unint64_t result;

  result = qword_256B84ED0;
  if (!qword_256B84ED0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA0C4, &type metadata for SearchAction.IncrementalFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84ED0);
  }
  return result;
}

unint64_t sub_23C3AB500()
{
  unint64_t result;

  result = qword_256B84ED8;
  if (!qword_256B84ED8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA0EC, &type metadata for SearchAction.IncrementalFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84ED8);
  }
  return result;
}

unint64_t sub_23C3AB548()
{
  unint64_t result;

  result = qword_256B84EE0;
  if (!qword_256B84EE0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA00C, &type metadata for SearchAction.QuerySubmittedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84EE0);
  }
  return result;
}

unint64_t sub_23C3AB590()
{
  unint64_t result;

  result = qword_256B84EE8;
  if (!qword_256B84EE8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA034, &type metadata for SearchAction.QuerySubmittedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84EE8);
  }
  return result;
}

unint64_t sub_23C3AB5D8()
{
  unint64_t result;

  result = qword_256B84EF0;
  if (!qword_256B84EF0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9F54, &type metadata for SearchAction.RecentQuerySelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84EF0);
  }
  return result;
}

unint64_t sub_23C3AB620()
{
  unint64_t result;

  result = qword_256B84EF8;
  if (!qword_256B84EF8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9F7C, &type metadata for SearchAction.RecentQuerySelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84EF8);
  }
  return result;
}

unint64_t sub_23C3AB668()
{
  unint64_t result;

  result = qword_256B84F00;
  if (!qword_256B84F00)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9E9C, &type metadata for SearchAction.ResultsFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F00);
  }
  return result;
}

unint64_t sub_23C3AB6B0()
{
  unint64_t result;

  result = qword_256B84F08;
  if (!qword_256B84F08)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9EC4, &type metadata for SearchAction.ResultsFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F08);
  }
  return result;
}

unint64_t sub_23C3AB6F8()
{
  unint64_t result;

  result = qword_256B84F10;
  if (!qword_256B84F10)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9E4C, &type metadata for SearchAction.ScopeChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F10);
  }
  return result;
}

unint64_t sub_23C3AB740()
{
  unint64_t result;

  result = qword_256B84F18;
  if (!qword_256B84F18)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9E74, &type metadata for SearchAction.ScopeChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F18);
  }
  return result;
}

unint64_t sub_23C3AB788()
{
  unint64_t result;

  result = qword_256B84F20;
  if (!qword_256B84F20)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9D94, &type metadata for SearchAction.ScopeSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F20);
  }
  return result;
}

unint64_t sub_23C3AB7D0()
{
  unint64_t result;

  result = qword_256B84F28;
  if (!qword_256B84F28)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9DBC, &type metadata for SearchAction.ScopeSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F28);
  }
  return result;
}

unint64_t sub_23C3AB818()
{
  unint64_t result;

  result = qword_256B84F30;
  if (!qword_256B84F30)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9CDC, &type metadata for SearchAction.SuggestionSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F30);
  }
  return result;
}

unint64_t sub_23C3AB860()
{
  unint64_t result;

  result = qword_256B84F38;
  if (!qword_256B84F38)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9D04, &type metadata for SearchAction.SuggestionSelectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F38);
  }
  return result;
}

unint64_t sub_23C3AB8A8()
{
  unint64_t result;

  result = qword_256B84F40;
  if (!qword_256B84F40)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9C24, &type metadata for SearchAction.SuggestionsFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F40);
  }
  return result;
}

unint64_t sub_23C3AB8F0()
{
  unint64_t result;

  result = qword_256B84F48;
  if (!qword_256B84F48)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9C4C, &type metadata for SearchAction.SuggestionsFetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F48);
  }
  return result;
}

unint64_t sub_23C3AB938()
{
  unint64_t result;

  result = qword_256B84F50;
  if (!qword_256B84F50)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9B6C, &type metadata for SearchAction.TextChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F50);
  }
  return result;
}

unint64_t sub_23C3AB980()
{
  unint64_t result;

  result = qword_256B84F58;
  if (!qword_256B84F58)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9B94, &type metadata for SearchAction.TextChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F58);
  }
  return result;
}

unint64_t sub_23C3AB9C8()
{
  unint64_t result;

  result = qword_256B84F60;
  if (!qword_256B84F60)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9B1C, &type metadata for SearchAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F60);
  }
  return result;
}

unint64_t sub_23C3ABA10()
{
  unint64_t result;

  result = qword_256B84F68;
  if (!qword_256B84F68)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9B44, &type metadata for SearchAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F68);
  }
  return result;
}

unint64_t sub_23C3ABA58()
{
  unint64_t result;

  result = qword_256B84F70;
  if (!qword_256B84F70)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9ACC, &type metadata for SearchAction.ViewDidDisappearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F70);
  }
  return result;
}

unint64_t sub_23C3ABAA0()
{
  unint64_t result;

  result = qword_256B84F78;
  if (!qword_256B84F78)
  {
    result = MEMORY[0x24261DE88](&unk_23C3F9AF4, &type metadata for SearchAction.ViewDidDisappearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F78);
  }
  return result;
}

unint64_t sub_23C3ABAE8()
{
  unint64_t result;

  result = qword_256B84F80;
  if (!qword_256B84F80)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA534, &type metadata for SearchAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F80);
  }
  return result;
}

unint64_t sub_23C3ABB30()
{
  unint64_t result;

  result = qword_256B84F88;
  if (!qword_256B84F88)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FA55C, &type metadata for SearchAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84F88);
  }
  return result;
}

uint64_t sub_23C3ABB74(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x800000023C400D20 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023C400D40 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F69746174636964 && a2 == 0xEE006465646E456ELL || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168437375636F66 && a2 == 0xEC0000006465676ELL || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023C400D60 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023C400D80 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023C400DA0 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6552746E65746E69 && a2 == 0xEF64657473657571 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023C400DC0 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6275537972657571 && a2 == 0xEE0064657474696DLL || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023C400DE0 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023C400E00 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x61684365706F6373 && a2 == 0xEC0000006465676ELL || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6C655365706F6373 && a2 == 0xED00006465746365 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023C400E20 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023C400E40 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6E61684374786574 && a2 == 0xEB00000000646567 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x4164694477656976 && a2 == 0xED00007261657070 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023C400E60)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    v5 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 18;
    else
      return 19;
  }
}

uint64_t sub_23C3AC318(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 12895 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23C3AC414(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C3AC4CC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23C3AC538()
{
  return 12383;
}

uint64_t sub_23C3AC544(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84F90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SearchArtworkFlavorDescriptor.family.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchArtworkFlavorDescriptor.flavor.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchArtworkFlavorDescriptor.variant.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall SearchArtworkFlavorDescriptor.init(family:flavor:variant:)(FitnessSearch::SearchArtworkFlavorDescriptor *__return_ptr retstr, Swift::String family, Swift::String flavor, Swift::String variant)
{
  retstr->family = family;
  retstr->flavor = flavor;
  retstr->variant = variant;
}

uint64_t sub_23C3AC630(char a1)
{
  return *(_QWORD *)&aFamily_0[8 * a1];
}

uint64_t sub_23C3AC650()
{
  char *v0;

  return sub_23C3AC630(*v0);
}

uint64_t sub_23C3AC658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3AD31C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3AC67C()
{
  sub_23C3AC834();
  return sub_23C3F7344();
}

uint64_t sub_23C3AC6A4()
{
  sub_23C3AC834();
  return sub_23C3F7350();
}

uint64_t SearchArtworkFlavorDescriptor.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84F98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3AC834();
  sub_23C3F7338();
  v14 = 0;
  v9 = v11[5];
  sub_23C3F7260();
  if (!v9)
  {
    v13 = 1;
    sub_23C3F7260();
    v12 = 2;
    sub_23C3F7260();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C3AC834()
{
  unint64_t result;

  result = qword_256B84FA0;
  if (!qword_256B84FA0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FAE34, &type metadata for SearchArtworkFlavorDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84FA0);
  }
  return result;
}

uint64_t SearchArtworkFlavorDescriptor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84FA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3AC834();
  sub_23C3F732C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_23C3F71F4();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23C3F71F4();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_23C3F71F4();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C3ACAB4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SearchArtworkFlavorDescriptor.init(from:)(a1, a2);
}

uint64_t sub_23C3ACAC8(_QWORD *a1)
{
  return SearchArtworkFlavorDescriptor.encode(to:)(a1);
}

uint64_t SearchArtworkFlavorDescriptor.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t SearchArtworkFlavorDescriptor.hashValue.getter()
{
  sub_23C3F72F0();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C3ACC2C()
{
  sub_23C3F72F0();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C3ACCDC()
{
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C3ACD78()
{
  sub_23C3F72F0();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B23ArtworkFlavorDescriptorV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_23C3F72A8(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_23C3F72A8(), result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
        return 1;
      else
        return sub_23C3F72A8();
    }
  }
  return result;
}

unint64_t sub_23C3ACF18()
{
  unint64_t result;

  result = qword_256B84FB0;
  if (!qword_256B84FB0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchArtworkFlavorDescriptor, &type metadata for SearchArtworkFlavorDescriptor);
    atomic_store(result, (unint64_t *)&qword_256B84FB0);
  }
  return result;
}

uint64_t destroy for SearchArtworkFlavorDescriptor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SearchArtworkFlavorDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SearchArtworkFlavorDescriptor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for SearchArtworkFlavorDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchArtworkFlavorDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchArtworkFlavorDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchArtworkFlavorDescriptor()
{
  return &type metadata for SearchArtworkFlavorDescriptor;
}

uint64_t storeEnumTagSinglePayload for SearchArtworkFlavorDescriptor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C3AD1C4 + 4 * byte_23C3FAC75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C3AD1F8 + 4 * byte_23C3FAC70[v4]))();
}

uint64_t sub_23C3AD1F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3AD200(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3AD208);
  return result;
}

uint64_t sub_23C3AD214(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3AD21CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3AD220(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3AD228(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchArtworkFlavorDescriptor.CodingKeys()
{
  return &type metadata for SearchArtworkFlavorDescriptor.CodingKeys;
}

unint64_t sub_23C3AD248()
{
  unint64_t result;

  result = qword_256B84FB8;
  if (!qword_256B84FB8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FAE0C, &type metadata for SearchArtworkFlavorDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84FB8);
  }
  return result;
}

unint64_t sub_23C3AD290()
{
  unint64_t result;

  result = qword_256B84FC0;
  if (!qword_256B84FC0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FAD7C, &type metadata for SearchArtworkFlavorDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B84FC0);
  }
  return result;
}

unint64_t sub_23C3AD2D8()
{
  unint64_t result;

  result = qword_256B84FC8[0];
  if (!qword_256B84FC8[0])
  {
    result = MEMORY[0x24261DE88](&unk_23C3FADA4, &type metadata for SearchArtworkFlavorDescriptor.CodingKeys);
    atomic_store(result, qword_256B84FC8);
  }
  return result;
}

uint64_t sub_23C3AD31C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x796C696D6166 && a2 == 0xE600000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F76616C66 && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E6169726176 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23C3AD450()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23C3AD458(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_23C3AD464(uint64_t a1)
{
  sub_23C3AD4A0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23C3AD4A0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_23C3AD4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_23C3AD458(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C3AD53C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_23C3AD458(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_23C3AD4A0(v6, v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23C3AD5E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_23C3AD4A0(v6, v7);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  swift_release();
  v8 = a2[7];
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  *(_QWORD *)(a1 + 56) = v8;
  swift_release();
  return a1;
}

void type metadata accessor for TVSearchableView()
{
  JUMPOUT(0x24261DDF8);
}

uint64_t sub_23C3AD664()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3AD698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v6;

  sub_23C3F69A8();
  MEMORY[0x24BDAC7A8]();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v6 - v4, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_23C3F69B4();
}

uint64_t sub_23C3AD75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;

  sub_23C3F69A8();
  MEMORY[0x24BDAC7A8]();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v7 - v5, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_23C3F69B4();
}

uint64_t sub_23C3AD820@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[2];
  __int128 v60;

  v45 = a2;
  v38 = a1[2];
  v4 = sub_23C3F69C0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84550);
  v42 = a1[3];
  v5 = sub_23C3F69C0();
  v6 = sub_23C3F69C0();
  v7 = sub_23C3F69C0();
  v8 = sub_23C3F6CCC();
  v44 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)&v36 - v9;
  v59[0] = a1[4];
  v10 = v59[0];
  v59[1] = MEMORY[0x24BDF5138];
  v11 = MEMORY[0x24BDEF3E0];
  v12 = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v4, v59);
  v13 = sub_23C397638();
  v36 = a1[5];
  v58[0] = v13;
  v58[1] = v36;
  v14 = MEMORY[0x24261DE88](v11, v5, v58);
  v57[0] = v12;
  v57[1] = v14;
  v56[0] = MEMORY[0x24261DE88](v11, v6, v57);
  v56[1] = v10;
  v55 = MEMORY[0x24261DE88](v11, v7, v56);
  v40 = v8;
  v39 = MEMORY[0x24261DE88](MEMORY[0x24BDF3F50], v8, &v55);
  v51 = v8;
  v52 = MEMORY[0x24BEE1328];
  v53 = v39;
  v54 = MEMORY[0x24BEE1340];
  v15 = MEMORY[0x24261DE40](0, &v51, MEMORY[0x24BDF38E8], 0);
  v43 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v41 = (uint64_t)&v36 - v19;
  v20 = v38;
  v21 = v42;
  v46 = v38;
  v47 = v42;
  v22 = v36;
  v48 = v10;
  v49 = v36;
  v50 = v2;
  sub_23C3F6CC0();
  v23 = *(_QWORD *)v2;
  LOBYTE(v7) = *(_BYTE *)(v2 + 8);
  sub_23C3AD458(*(_QWORD *)v2, v7);
  v24 = sub_23C3AF33C(v23, v7);
  sub_23C3AD4A0(v23, v7);
  LOBYTE(v51) = v24 & 1;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v20;
  *(_QWORD *)(v25 + 24) = v21;
  *(_QWORD *)(v25 + 32) = v10;
  *(_QWORD *)(v25 + 40) = v22;
  v26 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)v2;
  *(_OWORD *)(v25 + 64) = v26;
  v27 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v25 + 80) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v25 + 96) = v27;
  v60 = v26;
  sub_23C3AD458(v23, v7);
  sub_23C3AF544((uint64_t)&v60);
  swift_retain();
  swift_retain();
  v28 = v40;
  v29 = MEMORY[0x24BEE1328];
  v30 = v39;
  v31 = MEMORY[0x24BEE1340];
  v32 = v37;
  sub_23C3F6C60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v28);
  v51 = v28;
  v52 = v29;
  v53 = v30;
  v54 = v31;
  swift_getOpaqueTypeConformance2();
  v33 = v41;
  sub_23C39374C((uint64_t)v18, v15, v41);
  v34 = *(void (**)(char *, uint64_t))(v43 + 8);
  v34(v18, v15);
  sub_23C392AFC(v33, v15, v45);
  return ((uint64_t (*)(uint64_t, uint64_t))v34)(v33, v15);
}

uint64_t sub_23C3ADC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v63[11];
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[2];
  _QWORD v95[2];
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  _QWORD v100[2];

  v89 = a5;
  v81 = a4;
  v8 = a1;
  v84 = a6;
  v63[8] = *(_QWORD *)(a3 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v68 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v63[9] = (char *)v63 - v11;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B845C8);
  v69 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v63[10] = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84668);
  MEMORY[0x24BDAC7A8](v64);
  v65 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84550);
  MEMORY[0x24BDAC7A8](v14);
  v67 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B845B8);
  v63[7] = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v63[6] = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = v14;
  v78 = a3;
  v17 = sub_23C3F69C0();
  v73 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v71 = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v74 = (char *)v63 - v20;
  v21 = sub_23C3F69C0();
  v76 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v77 = (char *)v63 - v23;
  v79 = *(_QWORD *)(a2 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v86 = (char *)v63 - v28;
  v87 = v27;
  v80 = v17;
  v29 = sub_23C3F69C0();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)v63 - v34;
  v88 = a2;
  v83 = sub_23C3F69C0();
  v85 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v82 = (char *)v63 - v36;
  v37 = *(_QWORD *)v8;
  v38 = v8;
  v39 = *(_BYTE *)(v8 + 8);
  sub_23C3AD458(*(_QWORD *)v8, v39);
  LOBYTE(v8) = sub_23C3AF33C(v37, v39);
  v40 = sub_23C3AD4A0(v37, v39);
  if ((v8 & 1) != 0)
  {
    v63[2] = v26;
    v63[3] = v35;
    v72 = v33;
    v63[4] = v29;
    v63[5] = v30;
    v90 = v88;
    v91 = v78;
    v92 = v81;
    v93 = v89;
    type metadata accessor for TVSearchableView();
  }
  v41 = MEMORY[0x24BDF5138];
  (*(void (**)(uint64_t))(v38 + 32))(v40);
  v42 = (uint64_t)v86;
  v43 = v88;
  v44 = v81;
  sub_23C39374C((uint64_t)v26, v88, (uint64_t)v86);
  v45 = *(void (**)(char *, uint64_t))(v79 + 8);
  v45(v26, v43);
  sub_23C392AFC(v42, v43, (uint64_t)v26);
  v100[0] = v44;
  v100[1] = v41;
  v46 = MEMORY[0x24BDEF3E0];
  v47 = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v87, v100);
  v48 = sub_23C397638();
  v49 = v89;
  v99[0] = v48;
  v99[1] = v89;
  v50 = v80;
  v51 = MEMORY[0x24261DE88](v46, v80, v99);
  v98[0] = v47;
  v98[1] = v51;
  MEMORY[0x24261DE88](v46, v29, v98);
  v52 = v82;
  sub_23C3AD75C((uint64_t)v26, v29, v43);
  v53 = v26;
  v54 = (uint64_t)v52;
  v45(v53, v43);
  v45(v86, v43);
  v55 = v44;
  v56 = v49;
  v57 = v83;
  v58 = v84;
  v97[0] = v44;
  v97[1] = MEMORY[0x24BDF5138];
  v59 = MEMORY[0x24BDEF3E0];
  v60 = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v87, v97);
  v96[0] = sub_23C397638();
  v96[1] = v56;
  v61 = MEMORY[0x24261DE88](v59, v50, v96);
  v95[0] = v60;
  v95[1] = v61;
  v94[0] = MEMORY[0x24261DE88](v59, v29, v95);
  v94[1] = v55;
  MEMORY[0x24261DE88](v59, v57, v94);
  sub_23C392AFC(v54, v57, v58);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 8))(v54, v57);
}

void sub_23C3AE9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;

  v0 = sub_23C3F6678();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23C3F6F3C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23C3F6F30();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  type metadata accessor for TVSearchableView();
}

uint64_t sub_23C3AEAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  swift_getKeyPath();
  swift_retain();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 - 112) = sub_23C3F6F60();
  *(_QWORD *)(v1 - 104) = v2;
  sub_23C39365C();
  result = sub_23C3F6B70();
  *(_QWORD *)v0 = result;
  *(_QWORD *)(v0 + 8) = v4;
  *(_BYTE *)(v0 + 16) = v5 & 1;
  *(_QWORD *)(v0 + 24) = v6;
  return result;
}

void sub_23C3AEB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;

  v0 = sub_23C3F6678();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23C3F6F3C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23C3F6F30();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  type metadata accessor for TVSearchableView();
}

uint64_t sub_23C3AEC94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_getKeyPath();
  swift_retain();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  *(_QWORD *)(v2 - 112) = sub_23C3F6F60();
  *(_QWORD *)(v2 - 104) = v3;
  sub_23C39365C();
  v4 = sub_23C3F6B70();
  *(_QWORD *)(v2 - 144) = v5;
  *(_QWORD *)(v2 - 136) = v4;
  *(_QWORD *)(v2 - 152) = v6;
  v8 = v7 & 1;
  *(_QWORD *)(v2 - 112) = v0;
  *(_QWORD *)(v2 - 104) = v1;
  swift_bridgeObjectRetain();
  v9 = sub_23C3F6B70();
  v11 = v10;
  v13 = v12 & 1;
  sub_23C3F6B10();
  v14 = sub_23C3F6B4C();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_release();
  v18 &= 1u;
  sub_23C393710(v9, v11, v13);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v2 - 112) = v8;
  v22 = *(_QWORD *)(v2 - 136);
  v21 = *(_QWORD *)(v2 - 128);
  v24 = *(_QWORD *)(v2 - 152);
  v23 = *(_QWORD *)(v2 - 144);
  *(_QWORD *)v21 = v22;
  *(_QWORD *)(v21 + 8) = v24;
  *(_BYTE *)(v21 + 16) = v8;
  *(_QWORD *)(v21 + 24) = v23;
  *(_QWORD *)(v21 + 32) = v14;
  *(_QWORD *)(v21 + 40) = v16;
  *(_BYTE *)(v21 + 48) = v18;
  *(_QWORD *)(v21 + 56) = v20;
  sub_23C3936A0(v22, v24, v8);
  swift_bridgeObjectRetain();
  sub_23C3936A0(v14, v16, v18);
  swift_bridgeObjectRetain();
  sub_23C393710(v14, v16, v18);
  swift_bridgeObjectRelease();
  sub_23C393710(v22, v24, *(_BYTE *)(v2 - 112));
  return swift_bridgeObjectRelease();
}

void sub_23C3AEE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjCClassFromMetadata;
  id v3;

  v0 = sub_23C3F6678();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23C3F6F3C();
  MEMORY[0x24BDAC7A8](v1);
  sub_23C3F6F30();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  type metadata accessor for TVSearchableView();
}

uint64_t sub_23C3AEF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  swift_getKeyPath();
  swift_retain();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  *(_QWORD *)(v5 - 152) = sub_23C3F6F60();
  *(_QWORD *)(v5 - 144) = v6;
  *(_QWORD *)(v5 - 96) = *(_QWORD *)v1;
  *(_BYTE *)(v5 - 88) = *(_BYTE *)(v1 + 8);
  *(_OWORD *)(v5 - 128) = *(_OWORD *)(v1 + 16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 - 168);
  *(_QWORD *)(v7 + 24) = v4;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v2;
  v8 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)v1;
  *(_OWORD *)(v7 + 64) = v8;
  v9 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v7 + 96) = v9;
  *(_QWORD *)(v7 + 160) = *(_QWORD *)(v0 + 48);
  v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v7 + 128) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v7 + 144) = v10;
  *(_OWORD *)(v7 + 112) = *(_OWORD *)v0;
  sub_23C3AF890(v5 - 96);
  sub_23C3AF544(v5 - 128);
  swift_retain();
  swift_retain();
  sub_23C3AF8BC(v0);
  sub_23C39365C();
  return sub_23C3F6D2C();
}

void sub_23C3AF098()
{
  uint64_t v0;

  v0 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for TVSearchableView();
}

uint64_t sub_23C3AF118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v1 + 8) = v2;
  *(_BYTE *)(v1 + 16) = 3;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23C3F6E64();
  swift_release();
  return sub_23C39A33C(v1);
}

void sub_23C3AF180()
{
  uint64_t v0;

  v0 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for TVSearchableView();
}

uint64_t sub_23C3AF204()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_23C3F6E64();
  swift_release();
  return sub_23C39A33C((uint64_t)v1);
}

uint64_t sub_23C3AF258@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t KeyPath;
  uint64_t result;
  uint64_t v12;

  KeyPath = swift_getKeyPath();
  sub_23C3935DC(&qword_256B85050, &qword_256B85058, MEMORY[0x24BE2B5E8]);
  result = sub_23C3F67E0();
  *(_QWORD *)a5 = KeyPath;
  *(_BYTE *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 16) = result;
  *(_QWORD *)(a5 + 24) = v12;
  *(_QWORD *)(a5 + 32) = a1;
  *(_QWORD *)(a5 + 40) = a2;
  *(_QWORD *)(a5 + 48) = a3;
  *(_QWORD *)(a5 + 56) = a4;
  return result;
}

uint64_t sub_23C3AF2F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23C3AD820(a1, a2);
}

uint64_t sub_23C3AF32C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23C3ADC1C(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_23C3AF33C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_23C3F6900();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_23C3F7068();
  v9 = sub_23C3F6A68();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_23C3BD414(1819242306, 0xE400000000000000, &v15);
    sub_23C3F70B0();
    _os_log_impl(&dword_23C390000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v12, -1, -1);
    MEMORY[0x24261DF18](v11, -1, -1);
  }

  sub_23C3F68F4();
  swift_getAtKeyPath();
  sub_23C3AD4A0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_23C3AF4F4()
{
  uint64_t v0;

  sub_23C3AD4A0(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23C3AF534()
{
  sub_23C3AF180();
}

uint64_t sub_23C3AF544(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_23C3AF56C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v2 = v1;
  v4 = sub_23C3F6900();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85060);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C3AFA94(v2, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_23C3F67F8();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = sub_23C3F7068();
    v14 = sub_23C3F6A68();
    v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19[1] = a1;
      v18 = v17;
      v20 = v17;
      *(_DWORD *)v16 = 136315138;
      v19[2] = sub_23C3BD414(0x5463696D616E7944, 0xEF657A6953657079, &v20);
      sub_23C3F70B0();
      _os_log_impl(&dword_23C390000, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v18, -1, -1);
      MEMORY[0x24261DF18](v16, -1, -1);
    }

    sub_23C3F68F4();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_23C3AF7A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B84550);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23C3AF7E8()
{
  sub_23C3AE9CC();
}

void sub_23C3AF7F8()
{
  sub_23C3AEB80();
}

void sub_23C3AF80C()
{
  sub_23C3AEE40();
}

uint64_t sub_23C3AF81C()
{
  uint64_t v0;

  sub_23C3AD4A0(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23C3AF87C()
{
  sub_23C3AF098();
}

uint64_t sub_23C3AF890(uint64_t a1)
{
  sub_23C3AD458(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_23C3AF8BC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23C3AF90C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C3F6870();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23C3AF938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = sub_23C3F69C0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B84550);
  v4 = sub_23C3F69C0();
  v5 = sub_23C3F69C0();
  v6 = sub_23C3F69C0();
  v7 = sub_23C3F6CCC();
  v15[0] = v1;
  v15[1] = MEMORY[0x24BDF5138];
  v8 = MEMORY[0x24BDEF3E0];
  v9 = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v3, v15);
  v14[0] = sub_23C397638();
  v14[1] = v2;
  v13[0] = v9;
  v13[1] = MEMORY[0x24261DE88](v8, v4, v14);
  v12[0] = MEMORY[0x24261DE88](v8, v5, v13);
  v12[1] = v1;
  v11 = MEMORY[0x24261DE88](v8, v6, v12);
  MEMORY[0x24261DE88](MEMORY[0x24BDF3F50], v7, &v11);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3AFA94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for SearchHistoryView()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for SearchHistoryView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 96);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 96) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SearchHistoryView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for SearchHistoryView(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchHistoryView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchHistoryView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchHistoryView()
{
  return &type metadata for SearchHistoryView;
}

uint64_t sub_23C3AFE18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3AFE28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[6];
  uint64_t v35;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85068);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85070);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85078);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v26 - v15;
  v17 = *(_OWORD *)(v1 + 16);
  v34[0] = *(_OWORD *)v1;
  v34[1] = v17;
  v35 = *(_QWORD *)(v1 + 96);
  v18 = *(_OWORD *)(v1 + 80);
  v34[4] = *(_OWORD *)(v1 + 64);
  v34[5] = v18;
  v19 = *(_OWORD *)(v1 + 48);
  v34[2] = *(_OWORD *)(v1 + 32);
  v34[3] = v19;
  if (*(_QWORD *)(*(_QWORD *)&v34[0] + 16))
  {
    v29 = v14;
    v20 = sub_23C3F6A80();
    v30 = v5;
    MEMORY[0x24BDAC7A8](v20);
    v27 = v7;
    *(&v26 - 2) = (uint64_t)v34;
    v31 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85080);
    v28 = v3;
    sub_23C3935DC(&qword_256B85088, &qword_256B85080, MEMORY[0x24BDF5428]);
    sub_23C3F6768();
    __swift_instantiateConcreteTypeFromMangledName(qword_256B845D0);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_23C3F8160;
    *(_QWORD *)(v21 + 32) = 0x79726F74736948;
    *(_QWORD *)(v21 + 40) = 0xE700000000000000;
    v22 = sub_23C3935DC(&qword_256B85090, &qword_256B85070, MEMORY[0x24BDEB238]);
    sub_23C3F6B94();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v6);
    v23 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v16, v13, v10);
    (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 16))(v30, v16, v10);
    swift_storeEnumTagMultiPayload();
    v32 = v6;
    v33 = v22;
    swift_getOpaqueTypeConformance2();
    sub_23C3F69B4();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v16, v10);
  }
  else
  {
    *v5 = sub_23C3F6C9C();
    swift_storeEnumTagMultiPayload();
    v25 = sub_23C3935DC(&qword_256B85090, &qword_256B85070, MEMORY[0x24BDEB238]);
    v32 = v6;
    v33 = v25;
    swift_getOpaqueTypeConformance2();
    return sub_23C3F69B4();
  }
}

uint64_t sub_23C3B0194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;

  v2 = a1;
  v52 = a1;
  v59 = a2;
  v57 = sub_23C3F69E4();
  MEMORY[0x24BDAC7A8](v57);
  v55 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23C3F6D8C();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (_OWORD *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85098);
  v58 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v50 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B850A0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B850A8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B850B0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v50 - v21;
  *(_QWORD *)v13 = sub_23C3F690C();
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B850B8);
  sub_23C3B0650(v2, (uint64_t)&v13[*(int *)(v23 + 44)]);
  LOBYTE(v2) = sub_23C3F6AA4();
  sub_23C3F6750();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_23C3B26F0((uint64_t)v13, (uint64_t)v16, &qword_256B850A0);
  v32 = &v16[*(int *)(v14 + 36)];
  *v32 = v2;
  *((_QWORD *)v32 + 1) = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v29;
  *((_QWORD *)v32 + 4) = v31;
  v32[40] = 0;
  sub_23C39AA6C((uint64_t)v13, &qword_256B850A0);
  LOBYTE(v13) = sub_23C3F6AB0();
  sub_23C3F6750();
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  sub_23C3B26F0((uint64_t)v16, (uint64_t)v20, &qword_256B850A8);
  v41 = &v20[*(int *)(v17 + 36)];
  *v41 = (char)v13;
  *((_QWORD *)v41 + 1) = v34;
  *((_QWORD *)v41 + 2) = v36;
  *((_QWORD *)v41 + 3) = v38;
  *((_QWORD *)v41 + 4) = v40;
  v41[40] = 0;
  sub_23C39AA6C((uint64_t)v16, &qword_256B850A8);
  sub_23C3B2564((uint64_t)v20, (uint64_t)v22, &qword_256B850B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B850C0);
  sub_23C3F6D98();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_23C3F8160;
  *v6 = xmmword_23C3FAFE0;
  (*(void (**)(_OWORD *, _QWORD, uint64_t))(v53 + 104))(v6, *MEMORY[0x24BDF4D40], v54);
  sub_23C3F6DA4();
  v60 = v52;
  sub_23C3F6954();
  v61 = 0;
  sub_23C39650C(&qword_256B850C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF998], MEMORY[0x24BDEF9B8]);
  sub_23C3F735C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B850D0);
  sub_23C3B1C88();
  v42 = v51;
  sub_23C3F6DEC();
  sub_23C3B26F0((uint64_t)v22, (uint64_t)v20, &qword_256B850B0);
  v43 = v58;
  v44 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v45 = v56;
  v44(v56, v42, v7);
  v46 = v59;
  sub_23C3B26F0((uint64_t)v20, v59, &qword_256B850B0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B850F0);
  v44((char *)(v46 + *(int *)(v47 + 48)), v45, v7);
  v48 = *(void (**)(char *, uint64_t))(v43 + 8);
  v48(v42, v7);
  sub_23C39AA6C((uint64_t)v22, &qword_256B850B0);
  v48(v45, v7);
  return sub_23C39AA6C((uint64_t)v20, &qword_256B850B0);
}

id sub_23C3B0650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  void *v30;
  uint64_t v31;
  id result;
  void (*v33)(_QWORD);
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t KeyPath;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  int v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  unsigned int v79;
  void (*v80)(char *, _QWORD, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  char v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  _OWORD v116[9];
  _OWORD v117[9];

  v103 = a1;
  v93 = a2;
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B843E0);
  v100 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v99 = (char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85168);
  v83 = *(_QWORD *)(v3 - 8);
  v84 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v101 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85170);
  MEMORY[0x24BDAC7A8](v85);
  v88 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85178);
  v90 = *(_QWORD *)(v92 - 8);
  v6 = MEMORY[0x24BDAC7A8](v92);
  v91 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v87 = (char *)&v77 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v89 = (char *)&v77 - v10;
  v11 = sub_23C3F693C();
  v96 = *(_QWORD *)(v11 - 8);
  v97 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v95 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23C3F6B04();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85180);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v86 = (uint64_t)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v94 = (char *)&v77 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v102 = (uint64_t)&v77 - v22;
  sub_23C3F6918();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v24 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v25 = sub_23C3F6B58();
  v27 = v26;
  v29 = v28;
  v30 = (void *)objc_opt_self();
  v31 = *MEMORY[0x24BEBE1D8];
  v98 = v30;
  result = objc_msgSend(v30, sel__preferredFontForTextStyle_variant_, v31, 1024);
  if (result)
  {
    sub_23C3F6B34();
    v33 = *(void (**)(_QWORD))(v14 + 104);
    v79 = *MEMORY[0x24BDF17C8];
    v80 = (void (*)(char *, _QWORD, uint64_t))v33;
    v33(v16);
    sub_23C3F6B1C();
    swift_release();
    v34 = *(void (**)(char *, uint64_t))(v14 + 8);
    v81 = v16;
    v82 = v13;
    v78 = v34;
    v34(v16, v13);
    v35 = sub_23C3F6B4C();
    v37 = v36;
    v39 = v38;
    v41 = v40;
    swift_release();
    v39 &= 1u;
    sub_23C393710(v25, v27, v29 & 1);
    swift_bridgeObjectRelease();
    v42 = sub_23C3F6DD4();
    sub_23C3B0F58(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v117, 0.0, 1, 0.0, 1, v42, v43, v35, v37, v39, v41);
    sub_23C393710(v35, v37, v39);
    swift_bridgeObjectRelease();
    v113 = v117[6];
    v114 = v117[7];
    v115 = v117[8];
    v109 = v117[2];
    v110 = v117[3];
    v111 = v117[4];
    v112 = v117[5];
    v107 = v117[0];
    v108 = v117[1];
    v44 = v95;
    sub_23C3F6930();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85188);
    sub_23C3B24C4();
    v45 = (uint64_t)v94;
    sub_23C3F6C24();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v44, v97);
    v116[6] = v113;
    v116[7] = v114;
    v116[8] = v115;
    v116[2] = v109;
    v116[3] = v110;
    v116[4] = v111;
    v116[5] = v112;
    v116[0] = v107;
    v116[1] = v108;
    sub_23C3B2528((uint64_t)v116);
    sub_23C3B2564(v45, v102, &qword_256B85180);
    v46 = swift_allocObject();
    v47 = v103;
    v48 = *(_OWORD *)(v103 + 80);
    *(_OWORD *)(v46 + 80) = *(_OWORD *)(v103 + 64);
    *(_OWORD *)(v46 + 96) = v48;
    *(_QWORD *)(v46 + 112) = *(_QWORD *)(v47 + 96);
    v49 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)(v46 + 16) = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 32) = v49;
    v50 = *(_OWORD *)(v47 + 48);
    *(_OWORD *)(v46 + 48) = *(_OWORD *)(v47 + 32);
    *(_OWORD *)(v46 + 64) = v50;
    sub_23C3B21C4(v47);
    v51 = v99;
    sub_23C3F6D08();
    __swift_instantiateConcreteTypeFromMangledName(qword_256B845D0);
    v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_23C3F8160;
    *(_QWORD *)(v52 + 32) = 0x7261656C43;
    *(_QWORD *)(v52 + 40) = 0xE500000000000000;
    v53 = sub_23C3935DC(&qword_256B843F0, &qword_256B843E0, MEMORY[0x24BDF43B0]);
    v54 = v101;
    v55 = v104;
    v97 = v53;
    sub_23C3F6BA0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v51, v55);
    result = objc_msgSend(v98, sel__preferredFontForTextStyle_variant_, *MEMORY[0x24BEBE220], 1024);
    if (result)
    {
      sub_23C3F6B34();
      v57 = v81;
      v56 = v82;
      v80(v81, v79, v82);
      v58 = sub_23C3F6B1C();
      swift_release();
      v78(v57, v56);
      KeyPath = swift_getKeyPath();
      v61 = v83;
      v60 = v84;
      v62 = (uint64_t)v88;
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v88, v54, v84);
      v63 = (uint64_t *)(v62 + *(int *)(v85 + 36));
      *v63 = KeyPath;
      v63[1] = v58;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v54, v60);
      v101 = (char *)sub_23C3F6918();
      LODWORD(v100) = v64;
      v105 = *(_OWORD *)(v103 + 32);
      v106 = *(_BYTE *)(v103 + 48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85198);
      v65 = sub_23C3F6D50();
      v99 = (char *)&v77;
      MEMORY[0x24BDAC7A8](v65);
      sub_23C3B2624();
      v66 = v87;
      sub_23C3F6C0C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_23C39AA6C(v62, &qword_256B85170);
      v68 = v89;
      v67 = v90;
      v69 = v92;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v66, v92);
      v70 = v102;
      v71 = v86;
      sub_23C3B26F0(v102, v86, &qword_256B85180);
      v72 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
      v73 = v91;
      v72(v91, v68, v69);
      v74 = v93;
      sub_23C3B26F0(v71, v93, &qword_256B85180);
      v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B851B8);
      v72((char *)(v74 + *(int *)(v75 + 48)), v73, v69);
      v76 = *(void (**)(char *, uint64_t))(v67 + 8);
      v76(v68, v69);
      sub_23C39AA6C(v70, &qword_256B85180);
      v76(v73, v69);
      return (id)sub_23C39AA6C(v71, &qword_256B85180);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23C3B0F58@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23C3F7068();
    v31 = (void *)sub_23C3F6A68();
    sub_23C3F66E4();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  sub_23C3F684C();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_23C3936A0(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23C3B1138@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  _OWORD *v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23C3F7068();
    v23 = (void *)sub_23C3F6A68();
    sub_23C3F66E4();

  }
  sub_23C3F684C();
  v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  a9[4] = v13[4];
  *(_OWORD *)((char *)a9 + 73) = *(_OWORD *)((char *)v13 + 73);
  v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[10] = v31;
  a9[11] = v32;
  a9[12] = v33;
  a9[6] = v27;
  a9[7] = v28;
  a9[8] = v29;
  a9[9] = v30;
  return sub_23C3B2ABC((uint64_t)v13);
}

uint64_t sub_23C3B12EC@<X0>(uint64_t a1@<X8>)
{
  return sub_23C3B1514(a1);
}

uint64_t sub_23C3B1300(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _QWORD v16[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B851C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23C3F6678();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23C3F6F3C();
  MEMORY[0x24BDAC7A8](v6);
  sub_23C3F6F30();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23C3F666C();
  v16[1] = sub_23C3F6F60();
  v16[2] = v9;
  sub_23C3F6738();
  v10 = sub_23C3F6744();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 0, 1, v10);
  v11 = swift_allocObject();
  v12 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v11 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v11 + 96) = v12;
  *(_QWORD *)(v11 + 112) = *(_QWORD *)(a1 + 96);
  v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v11 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v11 + 32) = v13;
  v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v11 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v11 + 64) = v14;
  sub_23C3B21C4(a1);
  sub_23C39365C();
  return sub_23C3F6D14();
}

uint64_t sub_23C3B14F8@<X0>(uint64_t a1@<X8>)
{
  return sub_23C3B1514(a1);
}

uint64_t sub_23C3B1514@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  sub_23C3F6918();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  result = sub_23C3F6B58();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6 & 1;
  *(_QWORD *)(a1 + 24) = v7;
  return result;
}

uint64_t sub_23C3B15D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v13;

  v2 = *(_QWORD *)a1;
  v13 = v2;
  if (*(_QWORD *)(v2 + 16) >= 6uLL)
    v3 = 6;
  else
    v3 = *(_QWORD *)(v2 + 16);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SearchHistoryItem() - 8) + 80);
  v5 = v2 + ((v4 + 32) & ~v4);
  v6 = swift_bridgeObjectRetain();
  sub_23C3B1E00(v6, v5, 0, (2 * v3) | 1);
  sub_23C3B2108((uint64_t)&v13);
  swift_getKeyPath();
  v7 = swift_allocObject();
  v8 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(a1 + 96);
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v9;
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v7 + 64) = v10;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23C3B2140;
  *(_QWORD *)(v11 + 24) = v7;
  sub_23C3B21C4(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B850F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85100);
  sub_23C3935DC(&qword_256B85108, &qword_256B850F8, MEMORY[0x24BEE12D8]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B850E0);
  sub_23C3935DC(&qword_256B850E8, &qword_256B850E0, MEMORY[0x24BDF43B0]);
  swift_getOpaqueTypeConformance2();
  return sub_23C3F6D74();
}

uint64_t sub_23C3B17A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[8];

  v22[1] = a4;
  v7 = type metadata accessor for SearchHistoryItem();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B850E0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C39654C(a2, (uint64_t)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
  v14 = (*(unsigned __int8 *)(v8 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v15 = swift_allocObject();
  v16 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v15 + 96) = v16;
  *(_QWORD *)(v15 + 112) = *(_QWORD *)(a3 + 96);
  v17 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v15 + 32) = v17;
  v18 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v15 + 64) = v18;
  sub_23C3B22F4((uint64_t)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  v22[4] = a3;
  v22[5] = a2;
  sub_23C3B21C4(a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85118);
  sub_23C3B237C();
  sub_23C3F6D08();
  __swift_instantiateConcreteTypeFromMangledName(qword_256B845D0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_23C3F8160;
  v22[7] = a1;
  *(_QWORD *)(v19 + 32) = sub_23C3F729C();
  *(_QWORD *)(v19 + 40) = v20;
  sub_23C3935DC(&qword_256B850E8, &qword_256B850E0, MEMORY[0x24BDF43B0]);
  sub_23C3F6BA0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_23C3B19A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  char *v23;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a1;
  v37 = a3;
  v4 = sub_23C3F6924();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23C3F6828();
  MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SearchHistoryItemView();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85130);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a2;
  v17 = a2[1];
  *v12 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85060);
  swift_storeEnumTagMultiPayload();
  v18 = (char *)v12 + *(int *)(v10 + 20);
  v19 = v35;
  *(_OWORD *)v18 = *(_OWORD *)(v35 + 8);
  *((_QWORD *)v18 + 2) = *(_QWORD *)(v19 + 24);
  v20 = (uint64_t *)((char *)v12 + *(int *)(v10 + 24));
  *v20 = v16;
  v20[1] = v17;
  v21 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  swift_bridgeObjectRetain();
  v22 = MEMORY[0x24261D45C](objc_msgSend(v21, sel_initWithRed_green_blue_alpha_, 0.0784313725, 0.0784313725, 0.0784313725, 1.0));
  LOBYTE(v16) = sub_23C3F6A98();
  sub_23C39654C((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItemView);
  v23 = &v15[*(int *)(v13 + 36)];
  *(_QWORD *)v23 = v22;
  v23[8] = v16;
  sub_23C3965D4((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItemView);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDEEB68], v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&v9[*(int *)(v36 + 20)], v7, v4);
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)v9 = _Q0;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85118);
  v30 = v37;
  v31 = v37 + *(int *)(v29 + 36);
  v32 = MEMORY[0x24BDED998];
  sub_23C39654C((uint64_t)v9, v31, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B85158) + 36)) = 256;
  sub_23C3B26F0((uint64_t)v15, v30, &qword_256B85130);
  sub_23C3965D4((uint64_t)v9, (uint64_t (*)(_QWORD))v32);
  return sub_23C39AA6C((uint64_t)v15, &qword_256B85130);
}

uint64_t sub_23C3B1C78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C3B0194(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23C3B1C80()
{
  uint64_t v0;

  return sub_23C3B15D0(*(_QWORD *)(v0 + 16));
}

unint64_t sub_23C3B1C88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_256B850D8;
  if (!qword_256B850D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B850D0);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B850E0);
    v2[2] = sub_23C3935DC(&qword_256B850E8, &qword_256B850E0, MEMORY[0x24BDF43B0]);
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24261DE88](MEMORY[0x24BDF4A08], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B850D8);
  }
  return result;
}

uint64_t sub_23C3B1D34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_23C3F67F8();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23C3F6888();
}

uint64_t sub_23C3B1DB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C3F68C4();
  *a1 = result;
  return result;
}

uint64_t sub_23C3B1DD8()
{
  swift_retain();
  return sub_23C3F68D0();
}

size_t sub_23C3B1E00(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  size_t result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a2;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85110);
  v7 = MEMORY[0x24BDAC7A8](v47);
  v45 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (_QWORD *)((char *)v42 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v48 = v13;
  v49 = (uint64_t)v42 - v12;
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = a4 >> 1;
  v42[1] = a1;
  result = swift_unknownObjectRetain();
  v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (a4 >> 1 == a3)
  {
    v18 = 0;
LABEL_28:
    result = swift_unknownObjectRelease();
    v39 = v17[3];
    if (v39 < 2)
      return (size_t)v17;
    v40 = v39 >> 1;
    v26 = __OFSUB__(v40, v18);
    v41 = v40 - v18;
    if (!v26)
    {
      v17[2] = v41;
      return (size_t)v17;
    }
  }
  else
  {
    v19 = 0;
    v18 = 0;
    v43 = (v14 + 32) & ~v14;
    v20 = MEMORY[0x24BEE4AF8] + v43;
    v42[2] = v14 | 7;
    v44 = a3 - v15;
    v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (a3 + v19 < v15)
    {
      v22 = type metadata accessor for SearchHistoryItem();
      v23 = v47;
      v24 = (uint64_t)&v45[*(int *)(v47 + 48)];
      result = sub_23C39654C(v46 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * (a3 + v19), v24, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      if (__OFADD__(v19, 1))
        goto LABEL_33;
      v25 = (uint64_t)v11 + *(int *)(v23 + 48);
      *v11 = v19;
      sub_23C3B22F4(v24, v25);
      result = sub_23C3B2564((uint64_t)v11, v49, &qword_256B85110);
      if (v18)
      {
        v17 = v21;
        v26 = __OFSUB__(v18--, 1);
        if (v26)
          goto LABEL_34;
      }
      else
      {
        v27 = v21[3];
        if ((uint64_t)((v27 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_35;
        v28 = v27 & 0xFFFFFFFFFFFFFFFELL;
        if (v28 <= 1)
          v29 = 1;
        else
          v29 = v28;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256B85160);
        v30 = *(_QWORD *)(v48 + 72);
        v31 = v43;
        v17 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v17);
        if (!v30)
          goto LABEL_36;
        v32 = result - v31;
        if (result - v31 == 0x8000000000000000 && v30 == -1)
          goto LABEL_37;
        v34 = v32 / v30;
        v17[2] = v29;
        v17[3] = 2 * (v32 / v30);
        v35 = (char *)v17 + v31;
        v36 = v21[3] >> 1;
        v37 = v36 * v30;
        if (v21[2])
        {
          if (v17 < v21 || v35 >= (char *)v21 + v43 + v37)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v17 != v21)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v21[2] = 0;
        }
        v20 = (uint64_t)&v35[v37];
        v38 = (v34 & 0x7FFFFFFFFFFFFFFFLL) - v36;
        result = swift_release();
        v26 = __OFSUB__(v38, 1);
        v18 = v38 - 1;
        if (v26)
          goto LABEL_34;
      }
      result = sub_23C3B2564(v49, v20, &qword_256B85110);
      v20 += *(_QWORD *)(v48 + 72);
      ++v19;
      v21 = v17;
      if (!(v44 + v19))
        goto LABEL_28;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23C3B2108(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23C3B2130@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23C3B2140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23C3B17A0(a1, a2, v3 + 16, a3);
}

uint64_t sub_23C3B2148()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C3B216C(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85110);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_23C3B21C4(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23C3B2238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for SearchHistoryItem();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 120) & ~v2;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 20);
  v5 = sub_23C3F6630();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_23C3B22F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchHistoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3B2338()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SearchHistoryItem() - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 104))(v0 + ((v1 + 120) & ~v1));
}

uint64_t sub_23C3B2374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C3B19A4(*(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

unint64_t sub_23C3B237C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B85120;
  if (!qword_256B85120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85118);
    v2[0] = sub_23C3B2400();
    v2[1] = sub_23C3935DC(&qword_256B85150, &qword_256B85158, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B85120);
  }
  return result;
}

unint64_t sub_23C3B2400()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B85128;
  if (!qword_256B85128)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85130);
    v2[0] = sub_23C39650C(&qword_256B85138, (uint64_t (*)(uint64_t))type metadata accessor for SearchHistoryItemView, (uint64_t)&unk_23C3FCBD8);
    v2[1] = sub_23C3935DC(&qword_256B85140, &qword_256B85148, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B85128);
  }
  return result;
}

uint64_t sub_23C3B249C()
{
  return sub_23C3F687C();
}

unint64_t sub_23C3B24C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B85190;
  if (!qword_256B85190)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85188);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B85190);
  }
  return result;
}

uint64_t sub_23C3B2528(uint64_t a1)
{
  sub_23C393710(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23C3B2564(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23C3B25AC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 72))();
}

uint64_t sub_23C3B25CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C3F68C4();
  *a1 = result;
  return result;
}

uint64_t sub_23C3B25F4()
{
  swift_retain();
  return sub_23C3F68D0();
}

uint64_t sub_23C3B261C()
{
  uint64_t v0;

  return sub_23C3B1300(*(_QWORD *)(v0 + 16));
}

unint64_t sub_23C3B2624()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256B851A0;
  if (!qword_256B851A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85170);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B843E0);
    v2[3] = sub_23C3935DC(&qword_256B843F0, &qword_256B843E0, MEMORY[0x24BDF43B0]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23C3935DC(&qword_256B851A8, &qword_256B851B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B851A0);
  }
  return result;
}

uint64_t sub_23C3B26F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C3B2784()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_23C3B27A4(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = (uint64_t)(v2 + 4);
    v6 = result + 56;
    v24 = v1;
    while (1)
    {
      v7 = *(_QWORD *)(v6 - 24);
      v8 = *(_QWORD *)v6;
      v25 = *(_OWORD *)(v6 + 8);
      v26 = *(_OWORD *)(v6 - 16);
      v9 = *(_QWORD *)(v6 + 24);
      v10 = *(_QWORD *)(v6 + 32);
      if (v3)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = swift_bridgeObjectRetain();
        v11 = __OFSUB__(v3--, 1);
        if (v11)
          goto LABEL_28;
      }
      else
      {
        v12 = v2[3];
        if ((uint64_t)((v12 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_29;
        v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
        if (v13 <= 1)
          v14 = 1;
        else
          v14 = v13;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256B851C8);
        v15 = (_QWORD *)swift_allocObject();
        v16 = (uint64_t)(_swift_stdlib_malloc_size(v15) - 32) / 72;
        v15[2] = v14;
        v15[3] = 2 * v16;
        v17 = v15 + 4;
        v18 = v2[3] >> 1;
        v5 = (uint64_t)&v15[9 * v18 + 4];
        v19 = (v16 & 0x7FFFFFFFFFFFFFFFLL) - v18;
        if (v2[2])
        {
          v20 = v15 < v2 || v17 >= &v2[9 * v18 + 4];
          if (v20 || v15 != v2)
            memmove(v17, v2 + 4, 72 * v18);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        result = swift_release();
        v2 = v15;
        v1 = v24;
        v11 = __OFSUB__(v19, 1);
        v3 = v19 - 1;
        if (v11)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
      }
      *(_QWORD *)v5 = v4;
      *(_QWORD *)(v5 + 8) = v7;
      *(_OWORD *)(v5 + 16) = v26;
      *(_QWORD *)(v5 + 32) = v8;
      *(_OWORD *)(v5 + 40) = v25;
      *(_QWORD *)(v5 + 56) = v9;
      *(_QWORD *)(v5 + 64) = v10;
      v5 += 72;
      v6 += 64;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  v3 = 0;
LABEL_24:
  v21 = v2[3];
  if (v21 >= 2)
  {
    v22 = v21 >> 1;
    v11 = __OFSUB__(v22, v3);
    v23 = v22 - v3;
    if (v11)
      goto LABEL_30;
    v2[2] = v23;
  }
  return (uint64_t)v2;
}

unint64_t sub_23C3B2A08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256B851D0;
  if (!qword_256B851D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B851D8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85070);
    v2[3] = sub_23C3935DC(&qword_256B85090, &qword_256B85070, MEMORY[0x24BDEB238]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDF3E20];
    result = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B851D0);
  }
  return result;
}

uint64_t sub_23C3B2ABC(uint64_t a1)
{
  sub_23C3936A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t getEnumTagSinglePayload for TVSearchViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TVSearchViewModifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3B2BF8 + 4 * byte_23C3FB105[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C3B2C2C + 4 * byte_23C3FB100[v4]))();
}

uint64_t sub_23C3B2C2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3B2C34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3B2C3CLL);
  return result;
}

uint64_t sub_23C3B2C48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3B2C50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C3B2C54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3B2C5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TVSearchViewModifier()
{
  return &type metadata for TVSearchViewModifier;
}

uint64_t sub_23C3B2C78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3B2C90()
{
  return sub_23C3F67B0();
}

uint64_t sub_23C3B2CA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B851E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_23C3B2CE8(char a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = a1;
  return MEMORY[0x24261D420](&v4, a2, &type metadata for TVSearchViewModifier, a3);
}

unint64_t sub_23C3B2D1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B851E8;
  if (!qword_256B851E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B851E0);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDEFB78], v1);
    atomic_store(result, (unint64_t *)&qword_256B851E8);
  }
  return result;
}

__n128 SearchLandingFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  v2 = *(_OWORD *)(a1 + 112);
  a2[6] = *(_OWORD *)(a1 + 96);
  a2[7] = v2;
  v3 = *(_OWORD *)(a1 + 144);
  a2[8] = *(_OWORD *)(a1 + 128);
  a2[9] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  a2[2] = *(_OWORD *)(a1 + 32);
  a2[3] = v4;
  v5 = *(_OWORD *)(a1 + 80);
  a2[4] = *(_OWORD *)(a1 + 64);
  a2[5] = v5;
  result = *(__n128 *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v7;
  return result;
}

uint64_t SearchLandingFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, char a6)
{
  __int128 *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned __int8 v32;
  int *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  int *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  int *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t *v84;
  char v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;

  v84 = a3;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B851F0);
  v11 = *(_QWORD *)(v83 - 8);
  v12 = MEMORY[0x24BDAC7A8](v83);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v82 - v16;
  result = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v82 - v19;
  v21 = v6[7];
  v92 = v6[6];
  v93 = v21;
  v22 = v6[9];
  v94 = v6[8];
  v95 = v22;
  v23 = v6[3];
  v88 = v6[2];
  v89 = v23;
  v24 = v6[5];
  v90 = v6[4];
  v91 = v24;
  v25 = v6[1];
  v86 = *v6;
  v87 = v25;
  if (a6)
  {
    if (a6 == 1)
    {
      v26 = *(_QWORD *)a2;
      v27 = *(_QWORD *)(a2 + 8);
      v28 = *(_BYTE *)(a2 + 16);
      swift_bridgeObjectRetain();
      result = sub_23C393554(v26, v27, v28);
      *(_QWORD *)a2 = a4;
      *(_QWORD *)(a2 + 8) = a5;
      *(_BYTE *)(a2 + 16) = 0;
      return result;
    }
    if (a4 | a5)
    {
      if (*(_BYTE *)(a2 + 16) == 1)
        return result;
      v52 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B851F8);
      v53 = &v20[v52[16]];
      v54 = &v20[v52[20]];
      v55 = &v20[v52[24]];
      v85 = 1;
      sub_23C3B34BC();
      sub_23C3F70C8();
      v56 = *MEMORY[0x24BE2B580];
      v57 = sub_23C3F6E40();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v53, v56, v57);
      *(_QWORD *)v55 = &unk_256B85228;
      *((_QWORD *)v55 + 1) = 0;
      sub_23C3F702C();
      v58 = *MEMORY[0x24BE2B558];
      v59 = sub_23C3F6E34();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v54, v58, v59);
      v60 = v83;
      (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v20, *MEMORY[0x24BE2B438], v83);
      v61 = v84;
      v62 = *v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v62 = sub_23C3B446C(0, *(_QWORD *)(v62 + 16) + 1, 1, v62, &qword_256B85270, &qword_256B851F0);
      v64 = *(_QWORD *)(v62 + 16);
      v63 = *(_QWORD *)(v62 + 24);
      if (v64 >= v63 >> 1)
        v62 = sub_23C3B446C(v63 > 1, v64 + 1, 1, v62, &qword_256B85270, &qword_256B851F0);
      *(_QWORD *)(v62 + 16) = v64 + 1;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))(v62+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v64, v20, v60);
    }
    else
    {
      sub_23C393554(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
      *(_QWORD *)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
      *(_BYTE *)(a2 + 16) = 2;
      v65 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B851F8);
      v66 = &v17[v65[16]];
      v67 = &v17[v65[20]];
      v68 = &v17[v65[24]];
      v85 = 0;
      sub_23C3B34BC();
      sub_23C3F70C8();
      v69 = *MEMORY[0x24BE2B580];
      v70 = sub_23C3F6E40();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 104))(v66, v69, v70);
      v71 = (_OWORD *)swift_allocObject();
      v72 = v93;
      v71[7] = v92;
      v71[8] = v72;
      v73 = v95;
      v71[9] = v94;
      v71[10] = v73;
      v74 = v89;
      v71[3] = v88;
      v71[4] = v74;
      v75 = v91;
      v71[5] = v90;
      v71[6] = v75;
      v76 = v87;
      v71[1] = v86;
      v71[2] = v76;
      *(_QWORD *)v68 = &unk_256B85220;
      *((_QWORD *)v68 + 1) = v71;
      sub_23C3B3C08((uint64_t)&v86);
      sub_23C3F702C();
      v77 = *MEMORY[0x24BE2B558];
      v78 = sub_23C3F6E34();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 104))(v67, v77, v78);
      v79 = v83;
      (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v17, *MEMORY[0x24BE2B438], v83);
      v61 = v84;
      v62 = *v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v62 = sub_23C3B446C(0, *(_QWORD *)(v62 + 16) + 1, 1, v62, &qword_256B85270, &qword_256B851F0);
      v81 = *(_QWORD *)(v62 + 16);
      v80 = *(_QWORD *)(v62 + 24);
      if (v81 >= v80 >> 1)
        v62 = sub_23C3B446C(v80 > 1, v81 + 1, 1, v62, &qword_256B85270, &qword_256B851F0);
      *(_QWORD *)(v62 + 16) = v81 + 1;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))(v62+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v81, v17, v79);
    }
    *v61 = v62;
  }
  else
  {
    v29 = *(_QWORD *)(a4 + 16);
    v31 = *(_QWORD *)a2;
    v30 = *(_QWORD *)(a2 + 8);
    v32 = *(_BYTE *)(a2 + 16);
    swift_bridgeObjectRetain();
    if (!v29)
    {
      sub_23C393554(v31, v30, v32);
      v32 = 0;
      v30 = 0x800000023C400F10;
      *(_QWORD *)a2 = 0xD000000000000014;
      *(_QWORD *)(a2 + 8) = 0x800000023C400F10;
      *(_BYTE *)(a2 + 16) = 0;
      v31 = 0xD000000000000014;
    }
    sub_23C393554(v31, v30, v32);
    *(_QWORD *)a2 = a4;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 1;
    v33 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256B851F8);
    v34 = &v14[v33[16]];
    v35 = &v14[v33[20]];
    v36 = &v14[v33[24]];
    v85 = 2;
    sub_23C3B34BC();
    sub_23C3F70C8();
    v37 = *MEMORY[0x24BE2B580];
    v38 = sub_23C3F6E40();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v34, v37, v38);
    v39 = (_OWORD *)swift_allocObject();
    v40 = v93;
    v39[7] = v92;
    v39[8] = v40;
    v41 = v95;
    v39[9] = v94;
    v39[10] = v41;
    v42 = v89;
    v39[3] = v88;
    v39[4] = v42;
    v43 = v91;
    v39[5] = v90;
    v39[6] = v43;
    v44 = v87;
    v39[1] = v86;
    v39[2] = v44;
    *(_QWORD *)v36 = &unk_256B85210;
    *((_QWORD *)v36 + 1) = v39;
    sub_23C3B3C08((uint64_t)&v86);
    sub_23C3F702C();
    v45 = *MEMORY[0x24BE2B558];
    v46 = sub_23C3F6E34();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v35, v45, v46);
    v47 = v83;
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x24BE2B438], v83);
    v48 = v84;
    v49 = *v84;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v49 = sub_23C3B446C(0, *(_QWORD *)(v49 + 16) + 1, 1, v49, &qword_256B85270, &qword_256B851F0);
    v51 = *(_QWORD *)(v49 + 16);
    v50 = *(_QWORD *)(v49 + 24);
    if (v51 >= v50 >> 1)
      v49 = sub_23C3B446C(v50 > 1, v51 + 1, 1, v49, &qword_256B85270, &qword_256B851F0);
    *(_QWORD *)(v49 + 16) = v51 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))(v49+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v51, v14, v47);
    *v48 = v49;
  }
  return result;
}

unint64_t sub_23C3B34BC()
{
  unint64_t result;

  result = qword_256B85200;
  if (!qword_256B85200)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB24C, &type metadata for SearchLandingFeature.TaskIdentifier);
    atomic_store(result, &qword_256B85200);
  }
  return result;
}

uint64_t sub_23C3B3500()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 40) = sub_23C3F7020();
  *(_QWORD *)(v0 + 48) = sub_23C3F7014();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 2;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85260);
  *v1 = v0;
  v1[1] = sub_23C3B359C;
  return sub_23C3F6E28();
}

uint64_t sub_23C3B359C()
{
  swift_task_dealloc();
  sub_23C3F6FF0();
  return swift_task_switch();
}

uint64_t sub_23C3B360C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3B3640(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2[13] = a1;
  v2[14] = sub_23C3F7020();
  v2[15] = sub_23C3F7014();
  v6 = (uint64_t (*)(void))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v4 = (_QWORD *)swift_task_alloc();
  v2[16] = v4;
  *v4 = v2;
  v4[1] = sub_23C3B36B8;
  return v6();
}

uint64_t sub_23C3B36B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v4 = *v2;
  *(_QWORD *)(v4 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    *(_QWORD *)(v4 + 176) = sub_23C3F6FF0();
    *(_QWORD *)(v4 + 184) = v5;
    return swift_task_switch();
  }
  else
  {
    *(_QWORD *)(v4 + 64) = a1;
    *(_QWORD *)(v4 + 144) = a1;
    *(_QWORD *)(v4 + 72) = 0;
    *(_BYTE *)(v4 + 80) = 0;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 152) = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85260);
    *v7 = v4;
    v7[1] = sub_23C3B3798;
    return sub_23C3F6E28();
  }
}

uint64_t sub_23C3B3798()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_23C3F6FF0();
  return swift_task_switch();
}

uint64_t sub_23C3B3818()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3B384C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23C3B38A0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3B38E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  if (qword_256B842E0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 136);
  v2 = sub_23C3F6708();
  __swift_project_value_buffer(v2, (uint64_t)qword_256B96FC0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23C3F66F0();
  v6 = sub_23C3F705C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 136);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v12;
    sub_23C3F70B0();
    *v10 = v12;

    _os_log_impl(&dword_23C390000, v5, v6, "Failed to fetch landing page: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v10, -1, -1);
    MEMORY[0x24261DF18](v9, -1, -1);
  }
  else
  {

  }
  swift_getErrorValue();
  v13 = sub_23C3F72B4();
  *(_QWORD *)(v0 + 160) = v14;
  *(_QWORD *)(v0 + 40) = v13;
  *(_QWORD *)(v0 + 48) = v14;
  *(_BYTE *)(v0 + 56) = 1;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85260);
  *v15 = v0;
  v15[1] = sub_23C3B384C;
  return sub_23C3F6E28();
}

uint64_t sub_23C3B3B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  sub_23C3F7020();
  *(_QWORD *)(v2 + 24) = sub_23C3F7014();
  sub_23C3F6FF0();
  return swift_task_switch();
}

uint64_t sub_23C3B3B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_release();
  (*(void (**)(uint64_t))(v1 + 112))(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3B3BB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C3B47A4;
  return sub_23C3B3B08(a1, v1 + 16);
}

uint64_t sub_23C3B3C08(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C3B3CC0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  return SearchLandingFeature.reduce(localState:sharedState:sideEffects:action:)(a1, a2, a3, *(_QWORD *)a4, *(_QWORD *)(a4 + 8), *(_BYTE *)(a4 + 16));
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C3B3D40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C3B3D94;
  return sub_23C3B3640(a1, v1 + 16);
}

uint64_t sub_23C3B3D94()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t sub_23C3B3DE0()
{
  unint64_t result;

  result = qword_256B85230;
  if (!qword_256B85230)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchLandingAction, &type metadata for SearchLandingAction);
    atomic_store(result, (unint64_t *)&qword_256B85230);
  }
  return result;
}

unint64_t sub_23C3B3E28()
{
  unint64_t result;

  result = qword_256B85238;
  if (!qword_256B85238)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchLandingAction, &type metadata for SearchLandingAction);
    atomic_store(result, (unint64_t *)&qword_256B85238);
  }
  return result;
}

unint64_t sub_23C3B3E70()
{
  unint64_t result;

  result = qword_256B85240;
  if (!qword_256B85240)
  {
    result = MEMORY[0x24261DE88](MEMORY[0x24BE2B430], MEMORY[0x24BE2B428]);
    atomic_store(result, (unint64_t *)&qword_256B85240);
  }
  return result;
}

unint64_t sub_23C3B3EB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B84760;
  if (!qword_256B84760)
  {
    v1 = type metadata accessor for SearchState();
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchState, v1);
    atomic_store(result, (unint64_t *)&qword_256B84760);
  }
  return result;
}

uint64_t destroy for SearchEnvironment()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for SearchEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  v3 = *(_QWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SearchEnvironment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_release();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_release();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

_OWORD *assignWithTake for SearchEnvironment(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  a1[9] = a2[9];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEnvironment(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchLandingFeature()
{
  return &type metadata for SearchLandingFeature;
}

uint64_t storeEnumTagSinglePayload for SearchLandingFeature.TaskIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C3B4390 + 4 * byte_23C3FB185[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C3B43C4 + 4 * byte_23C3FB180[v4]))();
}

uint64_t sub_23C3B43C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3B43CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3B43D4);
  return result;
}

uint64_t sub_23C3B43E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3B43E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3B43EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3B43F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchLandingFeature.TaskIdentifier()
{
  return &type metadata for SearchLandingFeature.TaskIdentifier;
}

unint64_t sub_23C3B4414()
{
  unint64_t result;

  result = qword_256B85248;
  if (!qword_256B85248)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB224, &type metadata for SearchLandingFeature.TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B85248);
  }
  return result;
}

uint64_t sub_23C3B4458(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C3B446C(a1, a2, a3, a4, &qword_256B85250, &qword_256B85258);
}

uint64_t sub_23C3B446C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_23C3F7170();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_23C3B468C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_23C3B4678(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23C3B446C(a1, a2, a3, a4, &qword_256B85278, &qword_256B85280);
}

uint64_t sub_23C3B468C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_23C3F71A0();
  __break(1u);
  return result;
}

uint64_t SearchResultsRequest.QueryMode.init(rawValue:)()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_23C3F71AC();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t SearchResultsRequest.QueryMode.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E656D6572636E69;
  else
    return 0x6574656C706D6F63;
}

uint64_t sub_23C3B4838(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = SearchResultsRequest.QueryMode.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == SearchResultsRequest.QueryMode.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23C3F72A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23C3B48C0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23C3F71AC();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_23C3B491C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = SearchResultsRequest.QueryMode.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23C3B4944()
{
  sub_23C3B4BFC();
  return sub_23C3F6FA8();
}

uint64_t sub_23C3B49A0()
{
  sub_23C3B4BFC();
  return sub_23C3F6F9C();
}

unint64_t sub_23C3B49F0()
{
  unint64_t result;

  result = qword_256B85288;
  if (!qword_256B85288)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultsRequest.QueryMode, &type metadata for SearchResultsRequest.QueryMode);
    atomic_store(result, (unint64_t *)&qword_256B85288);
  }
  return result;
}

uint64_t sub_23C3B4A34()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_23C3F72F0();
  SearchResultsRequest.QueryMode.rawValue.getter(v1);
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C3B4A94()
{
  char *v0;

  SearchResultsRequest.QueryMode.rawValue.getter(*v0);
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C3B4AD4()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_23C3F72F0();
  SearchResultsRequest.QueryMode.rawValue.getter(v1);
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t _s9QueryModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3B4B7C + 4 * byte_23C3FB291[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C3B4BB0 + 4 * byte_23C3FB28C[v4]))();
}

uint64_t sub_23C3B4BB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3B4BB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3B4BC0);
  return result;
}

uint64_t sub_23C3B4BCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3B4BD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C3B4BD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3B4BE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsRequest.QueryMode()
{
  return &type metadata for SearchResultsRequest.QueryMode;
}

unint64_t sub_23C3B4BFC()
{
  unint64_t result;

  result = qword_256B85290;
  if (!qword_256B85290)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultsRequest.QueryMode, &type metadata for SearchResultsRequest.QueryMode);
    atomic_store(result, (unint64_t *)&qword_256B85290);
  }
  return result;
}

uint64_t SearchItemPlaceholder.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchItemPlaceholder.referenceIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchItemPlaceholder.referenceType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SearchItemPlaceholder.type.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = *(_QWORD *)(v1 + 40);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SearchItemPlaceholder.editorialCardIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 SearchItemPlaceholder.init(identifier:type:referenceIdentifier:referenceType:editorialCardIdentifier:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  __n128 result;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a4;
  *(_QWORD *)(a9 + 24) = a5;
  *(_BYTE *)(a9 + 32) = a6;
  result = *a3;
  *(__n128 *)(a9 + 40) = *a3;
  *(_QWORD *)(a9 + 56) = a7;
  *(_QWORD *)(a9 + 64) = a8;
  return result;
}

uint64_t sub_23C3B4CF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C3B4D2C + 4 * byte_23C3FB3A0[a1]))(0xD000000000000013, 0x800000023C401030);
}

uint64_t sub_23C3B4D2C()
{
  return 0x696669746E656469;
}

uint64_t sub_23C3B4D48()
{
  return 0x636E657265666572;
}

uint64_t sub_23C3B4D6C()
{
  return 1701869940;
}

uint64_t sub_23C3B4D7C(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_23C3B4D94()
{
  unsigned __int8 *v0;

  return sub_23C3B4CF4(*v0);
}

uint64_t sub_23C3B4D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3B5D5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3B4DC0()
{
  sub_23C3B500C();
  return sub_23C3F7344();
}

uint64_t sub_23C3B4DE8()
{
  sub_23C3B500C();
  return sub_23C3F7350();
}

uint64_t SearchItemPlaceholder.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85298);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v18 = *(_QWORD *)(v1 + 24);
  v19 = v7;
  v23 = *(unsigned __int8 *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v16 = *(_QWORD *)(v1 + 48);
  v17 = v8;
  v9 = *(_QWORD *)(v1 + 64);
  v15[1] = *(_QWORD *)(v1 + 56);
  v15[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3B500C();
  sub_23C3F7338();
  LOBYTE(v21) = 0;
  v10 = v20;
  sub_23C3F7260();
  if (!v10)
  {
    v11 = v23;
    v13 = v16;
    v12 = v17;
    LOBYTE(v21) = 1;
    sub_23C3F7260();
    LOBYTE(v21) = v11;
    v24 = 2;
    sub_23C3B5050();
    sub_23C3F7284();
    v21 = v12;
    v22 = v13;
    v24 = 3;
    sub_23C3B5094();
    sub_23C3F7284();
    LOBYTE(v21) = 4;
    sub_23C3F723C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C3B500C()
{
  unint64_t result;

  result = qword_256B852A0;
  if (!qword_256B852A0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB55C, &type metadata for SearchItemPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B852A0);
  }
  return result;
}

unint64_t sub_23C3B5050()
{
  unint64_t result;

  result = qword_256B852A8;
  if (!qword_256B852A8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchContentReferenceType, &type metadata for SearchContentReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B852A8);
  }
  return result;
}

unint64_t sub_23C3B5094()
{
  unint64_t result;

  result = qword_256B852B0;
  if (!qword_256B852B0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchContentType, &type metadata for SearchContentType);
    atomic_store(result, (unint64_t *)&qword_256B852B0);
  }
  return result;
}

uint64_t SearchItemPlaceholder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B852B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3B500C();
  sub_23C3F732C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v29) = 0;
  v9 = sub_23C3F71F4();
  v11 = v10;
  v27 = v9;
  LOBYTE(v29) = 1;
  swift_bridgeObjectRetain();
  v12 = sub_23C3F71F4();
  v28 = v13;
  v25 = v12;
  v32 = 2;
  sub_23C3B5420();
  swift_bridgeObjectRetain();
  v26 = 0;
  sub_23C3F7218();
  v14 = v29;
  v32 = 3;
  sub_23C3B5464();
  sub_23C3F7218();
  v31 = v14;
  v23 = v29;
  v24 = v30;
  LOBYTE(v29) = 4;
  swift_bridgeObjectRetain();
  v16 = sub_23C3F71D0();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20 = v16;
  v19(v8, v5);
  swift_bridgeObjectRetain();
  v21 = v28;
  *(_QWORD *)a2 = v27;
  *(_QWORD *)(a2 + 8) = v11;
  v22 = v24;
  *(_QWORD *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v21;
  *(_BYTE *)(a2 + 32) = v31;
  *(_QWORD *)(a2 + 40) = v23;
  *(_QWORD *)(a2 + 48) = v22;
  *(_QWORD *)(a2 + 56) = v20;
  *(_QWORD *)(a2 + 64) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23C3B5420()
{
  unint64_t result;

  result = qword_256B852C0;
  if (!qword_256B852C0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchContentReferenceType, &type metadata for SearchContentReferenceType);
    atomic_store(result, (unint64_t *)&qword_256B852C0);
  }
  return result;
}

unint64_t sub_23C3B5464()
{
  unint64_t result;

  result = qword_256B852C8;
  if (!qword_256B852C8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchContentType, &type metadata for SearchContentType);
    atomic_store(result, (unint64_t *)&qword_256B852C8);
  }
  return result;
}

uint64_t sub_23C3B54A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchItemPlaceholder.init(from:)(a1, a2);
}

uint64_t sub_23C3B54BC(_QWORD *a1)
{
  return SearchItemPlaceholder.encode(to:)(a1);
}

uint64_t SearchItemPlaceholder.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_23C3F72FC();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
    if (v2)
    {
LABEL_3:
      sub_23C3F7308();
      swift_bridgeObjectRetain();
      sub_23C3F6F6C();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_23C3F72FC();
    if (v2)
      goto LABEL_3;
  }
  return sub_23C3F7308();
}

uint64_t SearchItemPlaceholder.hashValue.getter()
{
  sub_23C3F72F0();
  SearchItemPlaceholder.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3B569C()
{
  sub_23C3F72F0();
  SearchItemPlaceholder.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3B5704()
{
  sub_23C3F72F0();
  SearchItemPlaceholder.hash(into:)();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B15ItemPlaceholderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a2 + 64);
  v19 = *(_QWORD *)(a1 + 64);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_23C3F72A8(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v3 == v8 || (v14 = sub_23C3F72A8(), result = 0, (v14 & 1) != 0))
    {
      if ((sub_23C3E9028(v4, v9) & 1) != 0)
      {
        if (v5)
        {
          if (!v10)
            return 0;
          if (v6 != v11 || v5 != v10)
          {
            v15 = sub_23C3F72A8();
            result = 0;
            if ((v15 & 1) == 0)
              return result;
          }
        }
        else
        {
          if (v10)
            return 0;
          swift_bridgeObjectRelease_n();
        }
        if (v19)
        {
          if (v18 && (v17 == v16 && v19 == v18 || (sub_23C3F72A8() & 1) != 0))
            return 1;
        }
        else if (!v18)
        {
          return 1;
        }
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_23C3B58E4()
{
  unint64_t result;

  result = qword_256B852D0;
  if (!qword_256B852D0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchItemPlaceholder, &type metadata for SearchItemPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B852D0);
  }
  return result;
}

uint64_t destroy for SearchItemPlaceholder()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchItemPlaceholder(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchItemPlaceholder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SearchItemPlaceholder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchItemPlaceholder(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchItemPlaceholder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchItemPlaceholder()
{
  return &type metadata for SearchItemPlaceholder;
}

uint64_t storeEnumTagSinglePayload for SearchItemPlaceholder.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23C3B5C04 + 4 * byte_23C3FB3AA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23C3B5C38 + 4 * byte_23C3FB3A5[v4]))();
}

uint64_t sub_23C3B5C38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3B5C40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3B5C48);
  return result;
}

uint64_t sub_23C3B5C54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3B5C5CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23C3B5C60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3B5C68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchItemPlaceholder.CodingKeys()
{
  return &type metadata for SearchItemPlaceholder.CodingKeys;
}

unint64_t sub_23C3B5C88()
{
  unint64_t result;

  result = qword_256B852D8;
  if (!qword_256B852D8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB534, &type metadata for SearchItemPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B852D8);
  }
  return result;
}

unint64_t sub_23C3B5CD0()
{
  unint64_t result;

  result = qword_256B852E0;
  if (!qword_256B852E0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB4A4, &type metadata for SearchItemPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B852E0);
  }
  return result;
}

unint64_t sub_23C3B5D18()
{
  unint64_t result;

  result = qword_256B852E8;
  if (!qword_256B852E8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB4CC, &type metadata for SearchItemPlaceholder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B852E8);
  }
  return result;
}

uint64_t sub_23C3B5D5C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023C401030 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006570795465 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023C401050)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t SearchContentTile.type.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SearchContentTile();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C3B607C(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23C396590((uint64_t)v9, (uint64_t)v6);
    v10 = &v6[*(int *)(v4 + 96)];
    v12 = *(_QWORD *)v10;
    v11 = *((_QWORD *)v10 + 1);
    swift_bridgeObjectRetain();
    result = sub_23C3B60C0((uint64_t)v6);
  }
  else
  {
    v12 = *((_QWORD *)v9 + 5);
    v11 = *((_QWORD *)v9 + 6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  *a1 = v12;
  a1[1] = v11;
  return result;
}

uint64_t sub_23C3B607C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchContentTile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3B60C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SearchContentTile.referenceIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SearchContentTile();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C3B607C(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23C396590((uint64_t)v7, (uint64_t)v4);
    v8 = *(_QWORD *)&v4[*(int *)(v2 + 60)];
    swift_bridgeObjectRetain();
    sub_23C3B60C0((uint64_t)v4);
  }
  else
  {
    v8 = *((_QWORD *)v7 + 2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t SearchContentTile.referenceType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SearchContentTile();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C3B607C(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23C396590((uint64_t)v7, (uint64_t)v4);
    v8 = v4[*(int *)(v2 + 64)];
    sub_23C3B60C0((uint64_t)v4);
  }
  else
  {
    v8 = v7[32];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

__n128 TVSearchFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  v2 = *(_OWORD *)(a1 + 112);
  a2[6] = *(_OWORD *)(a1 + 96);
  a2[7] = v2;
  v3 = *(_OWORD *)(a1 + 144);
  a2[8] = *(_OWORD *)(a1 + 128);
  a2[9] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  a2[2] = *(_OWORD *)(a1 + 32);
  a2[3] = v4;
  v5 = *(_OWORD *)(a1 + 80);
  a2[4] = *(_OWORD *)(a1 + 64);
  a2[5] = v5;
  result = *(__n128 *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v7;
  return result;
}

void TVSearchFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  char *v37;
  _QWORD v38[14];
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;

  v49 = a3;
  v50 = a2;
  v46 = a1;
  v6 = type metadata accessor for SearchHistoryItem();
  v39 = *(_QWORD *)(v6 - 8);
  v7 = *(_QWORD *)(v39 + 64);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)v38 - v9;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85258);
  v47 = *(_QWORD *)(v48 - 8);
  v10 = MEMORY[0x24BDAC7A8](v48);
  v43 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)v38 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v38[9] = (char *)v38 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v38[10] = (char *)v38 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v38[11] = (char *)v38 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v38[13] = (char *)v38 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v38[12] = (char *)v38 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v26);
  v27 = type metadata accessor for SearchAction();
  v28 = MEMORY[0x24BDAC7A8](v27);
  v45 = (char *)v38 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v30 = v4[7];
  v57 = v4[6];
  v58 = v30;
  v31 = v4[9];
  v59 = v4[8];
  v60 = v31;
  v32 = v4[3];
  v53 = v4[2];
  v54 = v32;
  v33 = v4[5];
  v55 = v4[4];
  v56 = v33;
  v34 = v4[1];
  v51 = *v4;
  v52 = v34;
  sub_23C39654C(a4, (uint64_t)v38 - v35, v36);
  v44 = v27;
  v37 = (char *)sub_23C3B661C + 4 * word_23C3FB670[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23C3B661C()
{
  uint64_t v0;
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;

  v2 = *v1;
  if (qword_256B842E0 != -1)
    swift_once();
  v3 = sub_23C3F6708();
  __swift_project_value_buffer(v3, (uint64_t)qword_256B96FC0);
  v4 = sub_23C3F66F0();
  v5 = sub_23C3F7050();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 232);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 67109120;
    *(_DWORD *)(v0 + 256) = v2;
    sub_23C3F70B0();
    _os_log_impl(&dword_23C390000, v4, v5, "[Focus] isSearching: %{BOOL}d", v8, 8u);
    MEMORY[0x24261DF18](v8, -1, -1);
  }

  *(_BYTE *)(v7 + 49) = v2;
  if ((v2 & 1) == 0)
  {
    v9 = (uint64_t *)(*(_QWORD *)(v0 + 232) + *(int *)(type metadata accessor for SearchState() + 68));
    sub_23C39A610(*v9, v9[1], v9[2]);
    v9[4] = 0;
    *(_OWORD *)v9 = 0u;
    *((_OWORD *)v9 + 1) = 0u;
  }
}

uint64_t sub_23C3B9130(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2[2] = a1;
  v2[3] = type metadata accessor for SearchAction();
  v2[4] = swift_task_alloc();
  v2[5] = sub_23C3F7020();
  v2[6] = sub_23C3F7014();
  v6 = (uint64_t (*)(void))(**(int **)(a2 + 80) + *(_QWORD *)(a2 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  v2[7] = v4;
  *v4 = v2;
  v4[1] = sub_23C3B91CC;
  return v6();
}

uint64_t sub_23C3B91CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 72) = sub_23C3F6FF0();
  *(_QWORD *)(v2 + 80) = v3;
  return swift_task_switch();
}

uint64_t sub_23C3B9258()
{
  uint64_t v0;
  _QWORD *v1;

  **(_QWORD **)(v0 + 32) = MEMORY[0x24BEE4AF8];
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
  *v1 = v0;
  v1[1] = sub_23C3B92D4;
  return sub_23C3F6E28();
}

uint64_t sub_23C3B92D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3B9334(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2[2] = a1;
  v2[3] = type metadata accessor for SearchAction();
  v2[4] = swift_task_alloc();
  v2[5] = sub_23C3F7020();
  v2[6] = sub_23C3F7014();
  v6 = (uint64_t (*)(void))(**(int **)(a2 + 80) + *(_QWORD *)(a2 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  v2[7] = v4;
  *v4 = v2;
  v4[1] = sub_23C3B93D0;
  return v6();
}

uint64_t sub_23C3B93D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 72) = sub_23C3F6FF0();
  *(_QWORD *)(v2 + 80) = v3;
  return swift_task_switch();
}

uint64_t sub_23C3B945C()
{
  uint64_t v0;
  _QWORD *v1;

  **(_QWORD **)(v0 + 32) = MEMORY[0x24BEE4AF8];
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
  *v1 = v0;
  v1[1] = sub_23C3B94D8;
  return sub_23C3F6E28();
}

uint64_t sub_23C3B94D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3B9538()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3B9578()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3B95B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v6 + 114) = a4;
  *(_QWORD *)(v6 + 216) = a3;
  *(_QWORD *)(v6 + 224) = a5;
  *(_QWORD *)(v6 + 200) = a1;
  *(_QWORD *)(v6 + 208) = a2;
  *(_BYTE *)(v6 + 115) = *(_BYTE *)a6;
  v7 = *(_QWORD *)(a6 + 8);
  *(_QWORD *)(v6 + 232) = a6;
  *(_QWORD *)(v6 + 240) = v7;
  *(_OWORD *)(v6 + 248) = *(_OWORD *)(a6 + 16);
  *(_QWORD *)(v6 + 264) = *(_QWORD *)(a6 + 32);
  *(_OWORD *)(v6 + 272) = *(_OWORD *)(a6 + 40);
  v8 = sub_23C3F6654();
  *(_QWORD *)(v6 + 288) = v8;
  *(_QWORD *)(v6 + 296) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 304) = swift_task_alloc();
  v9 = sub_23C3F6FFC();
  *(_QWORD *)(v6 + 312) = v9;
  *(_QWORD *)(v6 + 320) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 328) = swift_task_alloc();
  *(_QWORD *)(v6 + 336) = type metadata accessor for SearchAction();
  *(_QWORD *)(v6 + 344) = swift_task_alloc();
  sub_23C3F7020();
  *(_QWORD *)(v6 + 352) = sub_23C3F7014();
  *(_QWORD *)(v6 + 360) = sub_23C3F6FF0();
  *(_QWORD *)(v6 + 368) = v10;
  return swift_task_switch();
}

uint64_t sub_23C3B96C8()
{
  uint64_t v0;
  uint64_t v1;
  int **v2;
  unsigned __int8 v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(int ***)(v0 + 224);
  v3 = *(_BYTE *)(v0 + 114);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *v2;
  *(_QWORD *)(v0 + 376) = v2[6];
  *(_QWORD *)(v0 + 384) = v2[7];
  *(_QWORD *)(v0 + 392) = v2[8];
  *(_QWORD *)(v0 + 400) = v2[9];
  *(_QWORD *)(v0 + 96) = v4;
  *(_QWORD *)(v0 + 104) = v1;
  *(_WORD *)(v0 + 112) = v3;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v6;
  *v6 = v0;
  v6[1] = sub_23C3B9780;
  return v8(v0 + 16, v0 + 96);
}

uint64_t sub_23C3B9780()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23C3B97EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)();
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];

  v1 = *(void **)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 424) = v2;
  *(_QWORD *)(v0 + 432) = v4;
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 440) = v6;
  *(_QWORD *)(v0 + 448) = v8;
  sub_23C3F7038();
  if (!v1)
  {
    v18 = *(_QWORD *)(v0 + 344);
    v19 = *(char **)(v0 + 232);
    v20 = *v19;
    v21 = *((_QWORD *)v19 + 1);
    v22 = *((_QWORD *)v19 + 2);
    v23 = *((_QWORD *)v19 + 3);
    v24 = *((_QWORD *)v19 + 4);
    *(_QWORD *)v18 = v3;
    *(_QWORD *)(v18 + 8) = v2;
    *(_QWORD *)(v18 + 16) = v4;
    *(_QWORD *)(v18 + 24) = v5;
    *(_QWORD *)(v18 + 32) = v6;
    *(_QWORD *)(v18 + 40) = v7;
    *(_QWORD *)(v18 + 48) = v8;
    *(_BYTE *)(v18 + 56) = v20;
    *(_QWORD *)(v18 + 64) = v21;
    *(_QWORD *)(v18 + 72) = v22;
    *(_QWORD *)(v18 + 80) = v23;
    *(_QWORD *)(v18 + 88) = v24;
    *(_QWORD *)(v18 + 96) = v3;
    *(_QWORD *)(v18 + 104) = v2;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v25;
    *(_QWORD *)(v0 + 464) = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    v26 = sub_23C3B9ED0;
LABEL_16:
    *v25 = v0;
    v25[1] = v26;
    return sub_23C3F6E28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 520) = v1;
  *(_QWORD *)(v0 + 128) = v1;
  v9 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85380);
  if ((swift_dynamicCast() & 1) == 0)
  {

    if (qword_256B842E0 != -1)
      swift_once();
    v27 = sub_23C3F6708();
    __swift_project_value_buffer(v27, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain();
    v28 = v1;
    swift_bridgeObjectRetain();
    v29 = v1;
    v30 = sub_23C3F66F0();
    v31 = sub_23C3F705C();
    v32 = os_log_type_enabled(v30, v31);
    v33 = *(_QWORD *)(v0 + 216);
    if (v32)
    {
      v55 = *(_QWORD *)(v0 + 208);
      v34 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v59[0] = v57;
      *(_DWORD *)v34 = 141558531;
      *(_QWORD *)(v0 + 136) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v34 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 144) = sub_23C3BD414(v55, v33, v59);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 22) = 2112;
      v36 = v1;
      v37 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 152) = v37;
      sub_23C3F70B0();
      *v35 = v37;

      _os_log_impl(&dword_23C390000, v30, v31, "Failed to fetch results for %{private,mask.hash}s: %@", (uint8_t *)v34, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v35, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v57, -1, -1);
      MEMORY[0x24261DF18](v34, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v39 = *(_QWORD *)(v0 + 344);
    v40 = *(_QWORD *)(v0 + 296);
    v41 = *(_QWORD *)(v0 + 304);
    v50 = *(_QWORD *)(v0 + 288);
    v54 = *(_QWORD *)(v0 + 272);
    v56 = *(_QWORD *)(v0 + 280);
    v52 = *(_OWORD *)(v0 + 240);
    v53 = *(_OWORD *)(v0 + 256);
    v51 = *(_BYTE *)(v0 + 115);
    v58 = *(_QWORD *)(v0 + 232);
    v42 = *(_QWORD *)(v0 + 208);
    v43 = *(_QWORD *)(v0 + 216);
    swift_getErrorValue();
    v44 = sub_23C3F72B4();
    v46 = v45;
    sub_23C3F6648();
    v47 = sub_23C3F663C();
    v49 = v48;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v50);
    *(_QWORD *)v39 = v47;
    *(_QWORD *)(v39 + 8) = v49;
    *(_QWORD *)(v39 + 16) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v39 + 24) = v42;
    *(_QWORD *)(v39 + 32) = v43;
    *(_QWORD *)(v39 + 40) = v44;
    *(_QWORD *)(v39 + 48) = v46;
    *(_BYTE *)(v39 + 56) = v51;
    *(_OWORD *)(v39 + 64) = v52;
    *(_OWORD *)(v39 + 80) = v53;
    *(_QWORD *)(v39 + 96) = v54;
    *(_QWORD *)(v39 + 104) = v56;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_23C3BF0D0(v58);
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 528) = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    v26 = sub_23C3BA244;
    goto LABEL_16;
  }
  swift_release();

  if (qword_256B842E0 != -1)
    swift_once();
  v10 = sub_23C3F6708();
  __swift_project_value_buffer(v10, (uint64_t)qword_256B96FC0);
  swift_bridgeObjectRetain_n();
  v11 = sub_23C3F66F0();
  v12 = sub_23C3F7050();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 216);
  if (v13)
  {
    v15 = *(_QWORD *)(v0 + 208);
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v59[0] = v17;
    *(_DWORD *)v16 = 141558275;
    *(_QWORD *)(v0 + 160) = 1752392040;
    sub_23C3F70B0();
    *(_WORD *)(v16 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 168) = sub_23C3BD414(v15, v14, v59);
    sub_23C3F70B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23C390000, v11, v12, "[Cancellation] Results for %{private,mask.hash}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v17, -1, -1);
    MEMORY[0x24261DF18](v16, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3B9ED0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 344);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3B9F30()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 432) + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    v4 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0 + 392) + *(_QWORD *)(v0 + 392));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v2;
    *v2 = v0;
    v2[1] = sub_23C3BA010;
    return v4(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23C3BA010()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v2 = *v1;
  *(_QWORD *)(v2 + 480) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(void))(**(int **)(v2 + 376) + *(_QWORD *)(v2 + 376));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 488) = v4;
  *v4 = v2;
  v4[1] = sub_23C3BA0B0;
  return v5();
}

uint64_t sub_23C3BA0B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 496) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 504) = a1;
  return swift_task_switch();
}

uint64_t sub_23C3BA124()
{
  uint64_t v0;
  _QWORD *v1;

  **(_QWORD **)(v0 + 344) = *(_QWORD *)(v0 + 504);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 512) = v1;
  *v1 = v0;
  v1[1] = sub_23C3BA190;
  return sub_23C3F6E28();
}

uint64_t sub_23C3BA190()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 344);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3BA1F0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3BA244()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 344);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3BA2A4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 520);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3BA304()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 416);
  *(_QWORD *)(v0 + 128) = v1;
  *(_QWORD *)(v0 + 520) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85380);
  if (swift_dynamicCast())
  {
    swift_release();

    if (qword_256B842E0 != -1)
      swift_once();
    v3 = sub_23C3F6708();
    __swift_project_value_buffer(v3, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain_n();
    v4 = sub_23C3F66F0();
    v5 = sub_23C3F7050();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v0 + 216);
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 208);
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v44 = v10;
      *(_DWORD *)v9 = 141558275;
      *(_QWORD *)(v0 + 160) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v9 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 168) = sub_23C3BD414(v8, v7, &v44);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23C390000, v4, v5, "[Cancellation] Results for %{private,mask.hash}s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v10, -1, -1);
      MEMORY[0x24261DF18](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {

    if (qword_256B842E0 != -1)
      swift_once();
    v11 = sub_23C3F6708();
    __swift_project_value_buffer(v11, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain();
    v12 = v1;
    swift_bridgeObjectRetain();
    v13 = v1;
    v14 = sub_23C3F66F0();
    v15 = sub_23C3F705C();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 216);
    if (v16)
    {
      v40 = *(_QWORD *)(v0 + 208);
      v18 = swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v44 = v42;
      *(_DWORD *)v18 = 141558531;
      *(_QWORD *)(v0 + 136) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v18 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 144) = sub_23C3BD414(v40, v17, &v44);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2112;
      v20 = v1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 152) = v21;
      sub_23C3F70B0();
      *v19 = v21;

      _os_log_impl(&dword_23C390000, v14, v15, "Failed to fetch results for %{private,mask.hash}s: %@", (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v19, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v42, -1, -1);
      MEMORY[0x24261DF18](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v23 = *(_QWORD *)(v0 + 344);
    v24 = *(_QWORD *)(v0 + 296);
    v25 = *(_QWORD *)(v0 + 304);
    v35 = *(_QWORD *)(v0 + 288);
    v39 = *(_QWORD *)(v0 + 272);
    v41 = *(_QWORD *)(v0 + 280);
    v37 = *(_OWORD *)(v0 + 240);
    v38 = *(_OWORD *)(v0 + 256);
    v36 = *(_BYTE *)(v0 + 115);
    v43 = *(_QWORD *)(v0 + 232);
    v26 = *(_QWORD *)(v0 + 208);
    v27 = *(_QWORD *)(v0 + 216);
    swift_getErrorValue();
    v28 = sub_23C3F72B4();
    v30 = v29;
    sub_23C3F6648();
    v31 = sub_23C3F663C();
    v33 = v32;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v35);
    *(_QWORD *)v23 = v31;
    *(_QWORD *)(v23 + 8) = v33;
    *(_QWORD *)(v23 + 16) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v23 + 24) = v26;
    *(_QWORD *)(v23 + 32) = v27;
    *(_QWORD *)(v23 + 40) = v28;
    *(_QWORD *)(v23 + 48) = v30;
    *(_BYTE *)(v23 + 56) = v36;
    *(_OWORD *)(v23 + 64) = v37;
    *(_OWORD *)(v23 + 80) = v38;
    *(_QWORD *)(v23 + 96) = v39;
    *(_QWORD *)(v23 + 104) = v41;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_23C3BF0D0(v43);
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 528) = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    *v34 = v0;
    v34[1] = sub_23C3BA244;
    return sub_23C3F6E28();
  }
}

uint64_t sub_23C3BA908()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 480);
  swift_release();
  if (qword_256B842E0 != -1)
    swift_once();
  v2 = sub_23C3F6708();
  __swift_project_value_buffer(v2, (uint64_t)qword_256B96FC0);
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_23C3F66F0();
  v6 = sub_23C3F705C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 216);
  if (v7)
  {
    v15 = *(_QWORD *)(v0 + 208);
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v16 = v11;
    *(_DWORD *)v9 = 141558531;
    *(_QWORD *)(v0 + 176) = 1752392040;
    sub_23C3F70B0();
    *(_WORD *)(v9 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = sub_23C3BD414(v15, v8, &v16);
    sub_23C3F70B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2112;
    v12 = v1;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 192) = v13;
    sub_23C3F70B0();
    *v10 = v13;

    _os_log_impl(&dword_23C390000, v5, v6, "Failed to update history with '%{private,mask.hash}s': %@", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v11, -1, -1);
    MEMORY[0x24261DF18](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3BABD8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 496);
  swift_release();
  if (qword_256B842E0 != -1)
    swift_once();
  v2 = sub_23C3F6708();
  __swift_project_value_buffer(v2, (uint64_t)qword_256B96FC0);
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_23C3F66F0();
  v6 = sub_23C3F705C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 216);
  if (v7)
  {
    v15 = *(_QWORD *)(v0 + 208);
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v16 = v11;
    *(_DWORD *)v9 = 141558531;
    *(_QWORD *)(v0 + 176) = 1752392040;
    sub_23C3F70B0();
    *(_WORD *)(v9 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = sub_23C3BD414(v15, v8, &v16);
    sub_23C3F70B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2112;
    v12 = v1;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 192) = v13;
    sub_23C3F70B0();
    *v10 = v13;

    _os_log_impl(&dword_23C390000, v5, v6, "Failed to update history with '%{private,mask.hash}s': %@", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v11, -1, -1);
    MEMORY[0x24261DF18](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3BAEA8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for SearchAction();
  v2[5] = swift_task_alloc();
  sub_23C3F7020();
  v2[6] = sub_23C3F7014();
  v2[7] = sub_23C3F6FF0();
  v2[8] = v3;
  return swift_task_switch();
}

uint64_t sub_23C3BAF38()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[5];
  v2 = (_QWORD *)v0[3];
  v3 = v2[1];
  *(_QWORD *)v1 = *v2;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[9] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
  *v4 = v0;
  v4[1] = sub_23C3BAFC4;
  return sub_23C3F6E28();
}

uint64_t sub_23C3BAFC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3BB024()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3BB060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 + 1024) = a5;
  *(_QWORD *)(v5 + 1016) = a4;
  *(_QWORD *)(v5 + 1008) = a3;
  *(_QWORD *)(v5 + 1000) = a2;
  *(_QWORD *)(v5 + 992) = a1;
  *(_BYTE *)(v5 + 897) = *(_BYTE *)a5;
  *(_QWORD *)(v5 + 1032) = *(_QWORD *)(a5 + 8);
  *(_OWORD *)(v5 + 1040) = *(_OWORD *)(a5 + 16);
  *(_QWORD *)(v5 + 1056) = *(_QWORD *)(a5 + 32);
  *(_OWORD *)(v5 + 1064) = *(_OWORD *)(a5 + 40);
  v6 = sub_23C3F6654();
  *(_QWORD *)(v5 + 1080) = v6;
  *(_QWORD *)(v5 + 1088) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 1096) = swift_task_alloc();
  v7 = sub_23C3F6FFC();
  *(_QWORD *)(v5 + 1104) = v7;
  *(_QWORD *)(v5 + 1112) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 1120) = swift_task_alloc();
  *(_QWORD *)(v5 + 1128) = type metadata accessor for SearchAction();
  *(_QWORD *)(v5 + 1136) = swift_task_alloc();
  sub_23C3F7020();
  *(_QWORD *)(v5 + 1144) = sub_23C3F7014();
  *(_QWORD *)(v5 + 1152) = sub_23C3F6FF0();
  *(_QWORD *)(v5 + 1160) = v8;
  return swift_task_switch();
}

uint64_t sub_23C3BB180()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int *v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t);

  v1 = *(_OWORD **)(v0 + 1016);
  v2 = *(_QWORD *)(v0 + 1008);
  v3 = *(_QWORD *)(v0 + 1000);
  v4 = swift_allocObject();
  *(_QWORD *)(v0 + 1168) = v4;
  v5 = v1[1];
  *(_OWORD *)(v4 + 16) = *v1;
  *(_OWORD *)(v4 + 32) = v5;
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[5];
  *(_OWORD *)(v4 + 80) = v1[4];
  *(_OWORD *)(v4 + 96) = v8;
  *(_OWORD *)(v4 + 48) = v6;
  *(_OWORD *)(v4 + 64) = v7;
  v9 = v1[6];
  v10 = v1[7];
  v11 = v1[9];
  *(_OWORD *)(v4 + 144) = v1[8];
  *(_OWORD *)(v4 + 160) = v11;
  *(_OWORD *)(v4 + 112) = v9;
  *(_OWORD *)(v4 + 128) = v10;
  *(_QWORD *)(v4 + 176) = v3;
  *(_QWORD *)(v4 + 184) = v2;
  swift_bridgeObjectRetain();
  sub_23C3B3C08((uint64_t)v1);
  swift_retain();
  swift_asyncLet_begin();
  v12 = *(int **)v1;
  *(_QWORD *)(v0 + 872) = v3;
  *(_QWORD *)(v0 + 880) = v2;
  *(_WORD *)(v0 + 888) = 258;
  v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)v12 + *v12);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1176) = v13;
  *v13 = v0;
  v13[1] = sub_23C3BB2B0;
  return v15(v0 + 696, v0 + 872);
}

uint64_t sub_23C3BB2B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23C3BB31C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1184);
  *(_QWORD *)(v0 + 1192) = *(_QWORD *)(v0 + 696);
  *(_QWORD *)(v0 + 1200) = *(_QWORD *)(v0 + 704);
  *(_QWORD *)(v0 + 1208) = *(_QWORD *)(v0 + 712);
  *(_QWORD *)(v0 + 1216) = *(_QWORD *)(v0 + 720);
  *(_QWORD *)(v0 + 1224) = *(_QWORD *)(v0 + 728);
  *(_QWORD *)(v0 + 1232) = *(_QWORD *)(v0 + 736);
  *(_QWORD *)(v0 + 1240) = *(_QWORD *)(v0 + 744);
  sub_23C3F7038();
  *(_QWORD *)(v0 + 1248) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_asyncLet_finish();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 1024);
    *(_BYTE *)(v0 + 898) = *(_BYTE *)v3;
    *(_QWORD *)(v0 + 1256) = *(_QWORD *)(v3 + 8);
    *(_QWORD *)(v0 + 1264) = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v0 + 1272) = *(_QWORD *)(v3 + 24);
    *(_QWORD *)(v0 + 1280) = *(_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_asyncLet_get_throwing();
  }
}

uint64_t sub_23C3BB458()
{
  void *v0;

  if (v0)

  return swift_task_switch();
}

uint64_t sub_23C3BB4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(v0 + 792);
  v2 = *(_QWORD *)(v0 + 800);
  v3 = *(_QWORD *)(v0 + 808);
  v4 = *(_QWORD *)(v0 + 816);
  v5 = *(_QWORD *)(v0 + 824);
  v6 = *(_QWORD *)(v0 + 1280);
  v7 = *(_QWORD *)(v0 + 1272);
  v8 = *(_OWORD *)(v0 + 1256);
  v9 = *(_BYTE *)(v0 + 898);
  v10 = *(_QWORD *)(v0 + 1224);
  v11 = *(_OWORD *)(v0 + 1208);
  v12 = *(_QWORD *)(v0 + 1200);
  v13 = *(_QWORD *)(v0 + 1192);
  v14 = *(_QWORD *)(v0 + 1136);
  v15 = *(_OWORD *)(v0 + 1232);
  *(_QWORD *)v14 = v13;
  *(_QWORD *)(v14 + 8) = v12;
  *(_OWORD *)(v14 + 16) = v11;
  *(_QWORD *)(v14 + 32) = v10;
  *(_OWORD *)(v14 + 40) = v15;
  *(_QWORD *)(v14 + 56) = v1;
  *(_QWORD *)(v14 + 64) = v2;
  *(_QWORD *)(v14 + 72) = v3;
  *(_QWORD *)(v14 + 80) = v4;
  *(_QWORD *)(v14 + 88) = v5;
  *(_BYTE *)(v14 + 96) = v9;
  *(_OWORD *)(v14 + 104) = v8;
  *(_QWORD *)(v14 + 120) = v7;
  *(_QWORD *)(v14 + 128) = v6;
  *(_QWORD *)(v14 + 136) = v13;
  *(_QWORD *)(v14 + 144) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1288) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
  *v16 = v0;
  v16[1] = sub_23C3BB698;
  return sub_23C3F6E28();
}

uint64_t sub_23C3BB5B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 1008);
  v2 = *(_QWORD *)(v0 + 1000);
  v3 = *(_QWORD *)(v0 + 1280);
  v4 = *(_QWORD *)(v0 + 1272);
  v5 = *(_OWORD *)(v0 + 1256);
  v6 = *(_BYTE *)(v0 + 898);
  v7 = *(_QWORD *)(v0 + 1224);
  v8 = *(_OWORD *)(v0 + 1208);
  v9 = *(_QWORD *)(v0 + 1200);
  v10 = *(_QWORD *)(v0 + 1192);
  v11 = *(_QWORD *)(v0 + 1136);
  v12 = *(_OWORD *)(v0 + 1232);
  *(_QWORD *)v11 = v10;
  *(_QWORD *)(v11 + 8) = v9;
  *(_OWORD *)(v11 + 16) = v8;
  *(_QWORD *)(v11 + 32) = v7;
  *(_OWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 56) = 0;
  *(_QWORD *)(v11 + 64) = 0;
  *(_QWORD *)(v11 + 72) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v11 + 80) = v2;
  *(_QWORD *)(v11 + 88) = v1;
  *(_BYTE *)(v11 + 96) = v6;
  *(_OWORD *)(v11 + 104) = v5;
  *(_QWORD *)(v11 + 120) = v4;
  *(_QWORD *)(v11 + 128) = v3;
  *(_QWORD *)(v11 + 136) = v10;
  *(_QWORD *)(v11 + 144) = v9;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1288) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
  *v13 = v0;
  v13[1] = sub_23C3BB698;
  return sub_23C3F6E28();
}

uint64_t sub_23C3BB698()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1136);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_asyncLet_finish();
}

uint64_t sub_23C3BB718()
{
  return swift_task_switch();
}

uint64_t sub_23C3BB72C()
{
  uint64_t v0;

  swift_release();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3BB790()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 1136);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3BB7F4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 1296);
  swift_release();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3BB860()
{
  return swift_asyncLet_finish();
}

uint64_t sub_23C3BB878()
{
  return swift_task_switch();
}

uint64_t sub_23C3BB88C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(void **)(v0 + 1184);
  *(_QWORD *)(v0 + 1296) = v1;
  swift_release();
  *(_QWORD *)(v0 + 976) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85380);
  if (swift_dynamicCast())
  {
    swift_release();

    if (qword_256B842E0 != -1)
      swift_once();
    v3 = sub_23C3F6708();
    __swift_project_value_buffer(v3, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain_n();
    v4 = sub_23C3F66F0();
    v5 = sub_23C3F7050();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v0 + 1008);
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 1000);
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v42 = v10;
      *(_DWORD *)v9 = 141558275;
      *(_QWORD *)(v0 + 960) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v9 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 968) = sub_23C3BD414(v8, v7, &v42);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23C390000, v4, v5, "[Cancellation] Incremental results for %{private,mask.hash}s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v10, -1, -1);
      MEMORY[0x24261DF18](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1112) + 8))(*(_QWORD *)(v0 + 1120), *(_QWORD *)(v0 + 1104));

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {

    if (qword_256B842E0 != -1)
      swift_once();
    v11 = sub_23C3F6708();
    __swift_project_value_buffer(v11, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain();
    v12 = v1;
    swift_bridgeObjectRetain();
    v13 = v1;
    v14 = sub_23C3F66F0();
    v15 = sub_23C3F705C();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 1008);
    if (v16)
    {
      v18 = *(_QWORD *)(v0 + 1000);
      v19 = swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v42 = v21;
      *(_DWORD *)v19 = 141558531;
      *(_QWORD *)(v0 + 984) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v19 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 904) = sub_23C3BD414(v18, v17, &v42);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 22) = 2112;
      v22 = v1;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 952) = v23;
      sub_23C3F70B0();
      *v20 = v23;

      _os_log_impl(&dword_23C390000, v14, v15, "Failed to fetch incremental results for %{private,mask.hash}s: %@", (uint8_t *)v19, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v20, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v21, -1, -1);
      MEMORY[0x24261DF18](v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v25 = *(_QWORD *)(v0 + 1136);
    v26 = *(_QWORD *)(v0 + 1096);
    v27 = *(_QWORD *)(v0 + 1088);
    v28 = *(_QWORD *)(v0 + 1080);
    v39 = *(_QWORD *)(v0 + 1064);
    v40 = *(_QWORD *)(v0 + 1072);
    v37 = *(_OWORD *)(v0 + 1032);
    v38 = *(_OWORD *)(v0 + 1048);
    v36 = *(_BYTE *)(v0 + 897);
    v41 = *(_QWORD *)(v0 + 1024);
    v29 = *(_QWORD *)(v0 + 1008);
    v30 = *(_QWORD *)(v0 + 1000);
    sub_23C3F6648();
    v31 = sub_23C3F663C();
    v33 = v32;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    *(_QWORD *)v25 = v31;
    *(_QWORD *)(v25 + 8) = v33;
    v34 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v25 + 24) = v30;
    *(_QWORD *)(v25 + 32) = v29;
    *(_OWORD *)(v25 + 40) = 0u;
    *(_OWORD *)(v25 + 56) = 0u;
    *(_QWORD *)(v25 + 72) = v34;
    *(_QWORD *)(v25 + 80) = v30;
    *(_QWORD *)(v25 + 88) = v29;
    *(_BYTE *)(v25 + 96) = v36;
    LODWORD(v34) = *(_DWORD *)(v0 + 890);
    *(_DWORD *)(v25 + 100) = *(_DWORD *)(v0 + 893);
    *(_DWORD *)(v25 + 97) = v34;
    *(_OWORD *)(v25 + 104) = v37;
    *(_OWORD *)(v25 + 120) = v38;
    *(_QWORD *)(v25 + 136) = v39;
    *(_QWORD *)(v25 + 144) = v40;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain_n();
    sub_23C3BF0D0(v41);
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1304) = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    *v35 = v0;
    v35[1] = sub_23C3BB790;
    return sub_23C3F6E28();
  }
}

uint64_t sub_23C3BBEAC()
{
  return swift_task_switch();
}

uint64_t sub_23C3BBEC0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(void **)(v0 + 1248);
  *(_QWORD *)(v0 + 1296) = v1;
  swift_release();
  *(_QWORD *)(v0 + 976) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85380);
  if (swift_dynamicCast())
  {
    swift_release();

    if (qword_256B842E0 != -1)
      swift_once();
    v3 = sub_23C3F6708();
    __swift_project_value_buffer(v3, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain_n();
    v4 = sub_23C3F66F0();
    v5 = sub_23C3F7050();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v0 + 1008);
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 1000);
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v42 = v10;
      *(_DWORD *)v9 = 141558275;
      *(_QWORD *)(v0 + 960) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v9 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 968) = sub_23C3BD414(v8, v7, &v42);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23C390000, v4, v5, "[Cancellation] Incremental results for %{private,mask.hash}s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v10, -1, -1);
      MEMORY[0x24261DF18](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1112) + 8))(*(_QWORD *)(v0 + 1120), *(_QWORD *)(v0 + 1104));

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {

    if (qword_256B842E0 != -1)
      swift_once();
    v11 = sub_23C3F6708();
    __swift_project_value_buffer(v11, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain();
    v12 = v1;
    swift_bridgeObjectRetain();
    v13 = v1;
    v14 = sub_23C3F66F0();
    v15 = sub_23C3F705C();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 1008);
    if (v16)
    {
      v18 = *(_QWORD *)(v0 + 1000);
      v19 = swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v42 = v21;
      *(_DWORD *)v19 = 141558531;
      *(_QWORD *)(v0 + 984) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v19 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 904) = sub_23C3BD414(v18, v17, &v42);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 22) = 2112;
      v22 = v1;
      v23 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 952) = v23;
      sub_23C3F70B0();
      *v20 = v23;

      _os_log_impl(&dword_23C390000, v14, v15, "Failed to fetch incremental results for %{private,mask.hash}s: %@", (uint8_t *)v19, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v20, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v21, -1, -1);
      MEMORY[0x24261DF18](v19, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v25 = *(_QWORD *)(v0 + 1136);
    v26 = *(_QWORD *)(v0 + 1096);
    v27 = *(_QWORD *)(v0 + 1088);
    v28 = *(_QWORD *)(v0 + 1080);
    v39 = *(_QWORD *)(v0 + 1064);
    v40 = *(_QWORD *)(v0 + 1072);
    v37 = *(_OWORD *)(v0 + 1032);
    v38 = *(_OWORD *)(v0 + 1048);
    v36 = *(_BYTE *)(v0 + 897);
    v41 = *(_QWORD *)(v0 + 1024);
    v29 = *(_QWORD *)(v0 + 1008);
    v30 = *(_QWORD *)(v0 + 1000);
    sub_23C3F6648();
    v31 = sub_23C3F663C();
    v33 = v32;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    *(_QWORD *)v25 = v31;
    *(_QWORD *)(v25 + 8) = v33;
    v34 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v25 + 24) = v30;
    *(_QWORD *)(v25 + 32) = v29;
    *(_OWORD *)(v25 + 40) = 0u;
    *(_OWORD *)(v25 + 56) = 0u;
    *(_QWORD *)(v25 + 72) = v34;
    *(_QWORD *)(v25 + 80) = v30;
    *(_QWORD *)(v25 + 88) = v29;
    *(_BYTE *)(v25 + 96) = v36;
    LODWORD(v34) = *(_DWORD *)(v0 + 890);
    *(_DWORD *)(v25 + 100) = *(_DWORD *)(v0 + 893);
    *(_DWORD *)(v25 + 97) = v34;
    *(_OWORD *)(v25 + 104) = v37;
    *(_OWORD *)(v25 + 120) = v38;
    *(_QWORD *)(v25 + 136) = v39;
    *(_QWORD *)(v25 + 144) = v40;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain_n();
    sub_23C3BF0D0(v41);
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1304) = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    *v35 = v0;
    v35[1] = sub_23C3BB790;
    return sub_23C3F6E28();
  }
}

uint64_t sub_23C3BC4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_23C3B3D94;
  return v10(a1, a3, a4);
}

uint64_t sub_23C3BC55C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v2[8] = a1;
  v2[9] = type metadata accessor for SearchAction();
  v2[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B853A0);
  v2[11] = swift_task_alloc();
  v4 = sub_23C3F6558();
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = sub_23C3F7080();
  v2[16] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B853A8);
  v2[17] = v5;
  v2[18] = *(_QWORD *)(v5 - 8);
  v2[19] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B853B0);
  v2[20] = v6;
  v2[21] = *(_QWORD *)(v6 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = sub_23C3F7020();
  v2[25] = sub_23C3F7014();
  v9 = (uint64_t (*)(void))(**(int **)(a2 + 128) + *(_QWORD *)(a2 + 128));
  v7 = (_QWORD *)swift_task_alloc();
  v2[26] = v7;
  *v7 = v2;
  v7[1] = sub_23C3BC6D0;
  return v9();
}

uint64_t sub_23C3BC6D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 216) = a1;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 224) = sub_23C3F6FF0();
  *(_QWORD *)(v2 + 232) = v3;
  return swift_task_switch();
}

uint64_t sub_23C3BC750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 216);
  if (v1)
  {
    v2 = qword_256B842E0;
    swift_retain();
    if (v2 != -1)
      swift_once();
    v3 = sub_23C3F6708();
    __swift_project_value_buffer(v3, (uint64_t)qword_256B96FC0);
    v4 = sub_23C3F66F0();
    v5 = sub_23C3F7050();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_23C390000, v4, v5, "[Dictation] Dictation monitoring", v6, 2u);
      MEMORY[0x24261DF18](v6, -1, -1);
    }
    v7 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 136);

    *(_QWORD *)(v0 + 48) = v1;
    sub_23C3F708C();
    sub_23C39650C(&qword_256B853C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0040], MEMORY[0x24BDD0050]);
    swift_retain();
    sub_23C3F7164();
    sub_23C3F7128();
    sub_23C3F7044();
    sub_23C3F7140();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
    sub_23C3F714C();
    v10 = sub_23C3F7014();
    *(_QWORD *)(v0 + 240) = v10;
    if (v10)
    {
      swift_getObjectType();
      v11 = sub_23C3F6FF0();
      v13 = v12;
    }
    else
    {
      v11 = 0;
      v13 = 0;
    }
    *(_QWORD *)(v0 + 248) = v11;
    *(_QWORD *)(v0 + 256) = v13;
    return swift_task_switch();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23C3BC9FC()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 264) = sub_23C3F7134();
  sub_23C39650C(&qword_256B853C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0028], MEMORY[0x24BDD0038]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v1;
  *v1 = v0;
  v1[1] = sub_23C3BCAA4;
  return sub_23C3F7008();
}

uint64_t sub_23C3BCAA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 264))(v2 + 16, 0);
  return swift_task_switch();
}

uint64_t sub_23C3BCB14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  _QWORD *v12;
  int *v13;

  v1 = v0[12];
  v2 = v0[13];
  v3 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23C3BF260(v3);
    swift_release();
    return swift_task_switch();
  }
  else
  {
    v6 = v0[22];
    v5 = v0[23];
    v7 = v0[20];
    v8 = v0[21];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[14], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
    v9 = (int *)sub_23C3F7140();
    v0[35] = v10;
    v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v0[36] = v11;
    v11(v6, v7);
    v13 = (int *)((char *)v9 + *v9);
    v12 = (_QWORD *)swift_task_alloc();
    v0[37] = v12;
    *v12 = v0;
    v12[1] = sub_23C3BCD14;
    return ((uint64_t (*)(_QWORD *, _QWORD))v13)(v0 + 39, v0[14]);
  }
}

uint64_t sub_23C3BCC54()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 264))(v0 + 16, 1);
}

uint64_t sub_23C3BCC64()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3BCD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23C3BCD94()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 312) = 0;
  swift_release();
  *(_BYTE *)(v0 + 313) = *(_BYTE *)(v0 + 312);
  return swift_task_switch();
}

uint64_t sub_23C3BCDD8()
{
  uint64_t v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 313) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
    swift_release_n();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    *v2 = v0;
    v2[1] = sub_23C3BCEF8;
    return sub_23C3F6E28();
  }
}

uint64_t sub_23C3BCEF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3BCF58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23C3F7014();
  v0[30] = v1;
  if (v1)
  {
    swift_getObjectType();
    v2 = sub_23C3F6FF0();
    v4 = v3;
  }
  else
  {
    v2 = 0;
    v4 = 0;
  }
  v0[31] = v2;
  v0[32] = v4;
  return swift_task_switch();
}

uint64_t sub_23C3BCFC4()
{
  uint64_t v0;

  return sub_23C3BF2A0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23C3BCFD0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2[3] = a1;
  v2[4] = type metadata accessor for SearchAction();
  v2[5] = swift_task_alloc();
  v2[6] = sub_23C3F7020();
  v2[7] = sub_23C3F7014();
  v6 = (uint64_t (*)(void))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v4 = (_QWORD *)swift_task_alloc();
  v2[8] = v4;
  *v4 = v2;
  v4[1] = sub_23C3BD06C;
  return v6();
}

uint64_t sub_23C3BD06C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_23C3F6FF0();
  }
  else
  {
    v4[10] = a1;
    v4[11] = sub_23C3F6FF0();
    v4[12] = v5;
  }
  return swift_task_switch();
}

uint64_t sub_23C3BD118()
{
  uint64_t v0;
  _QWORD *v1;

  **(_QWORD **)(v0 + 40) = *(_QWORD *)(v0 + 80);
  swift_storeEnumTagMultiPayload();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
  *v1 = v0;
  v1[1] = sub_23C3BD190;
  return sub_23C3F6E28();
}

uint64_t sub_23C3BD190()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3BD1F0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3BD22C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;

  swift_release();
  if (qword_256B842E0 != -1)
    swift_once();
  v1 = *(void **)(v0 + 72);
  v2 = sub_23C3F6708();
  __swift_project_value_buffer(v2, (uint64_t)qword_256B96FC0);
  v3 = v1;
  v4 = v1;
  v5 = sub_23C3F66F0();
  v6 = sub_23C3F705C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 72);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v12;
    sub_23C3F70B0();
    *v10 = v12;

    _os_log_impl(&dword_23C390000, v5, v6, "Failed to fetch history: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v10, -1, -1);
    MEMORY[0x24261DF18](v9, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3BD414(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23C3BD4E4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23C3BF118((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23C3BF118((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_23C3BD4E4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23C3F70BC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23C3BD69C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23C3F7110();
  if (!v8)
  {
    sub_23C3F7170();
    __break(1u);
LABEL_17:
    result = sub_23C3F71A0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23C3BD69C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23C3BD730(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23C3BD908(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23C3BD908(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23C3BD730(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23C3BD8A4(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23C3F70E0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23C3F7170();
      __break(1u);
LABEL_10:
      v2 = sub_23C3F6F90();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23C3F71A0();
    __break(1u);
LABEL_14:
    result = sub_23C3F7170();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23C3BD8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85388);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23C3BD908(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85388);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23C3F71A0();
  __break(1u);
  return result;
}

unint64_t sub_23C3BDA54()
{
  unint64_t result;

  result = qword_256B852F0;
  if (!qword_256B852F0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB848, &type metadata for TaskIdentifier);
    atomic_store(result, &qword_256B852F0);
  }
  return result;
}

uint64_t sub_23C3BDA9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C3B47A4;
  return sub_23C3BC55C(a1, v1 + 16);
}

uint64_t sub_23C3BDAF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C3B47A4;
  return sub_23C3BCFD0(a1, v1 + 16);
}

uint64_t sub_23C3BDB48()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C3BDBD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23C3B47A4;
  return sub_23C3BB060(a1, v4, v5, v1 + 32, v1 + 192);
}

uint64_t sub_23C3BDC4C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for SearchHistoryItem() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23C3C7008(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23C3BDCCC(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23C3BDCCC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v130 = type metadata accessor for SearchHistoryItem();
  v123 = *(_QWORD *)(v130 - 8);
  v3 = MEMORY[0x24BDAC7A8](v130);
  v120 = (uint64_t)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v131 = (uint64_t)&v116 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v128 = (uint64_t)&v116 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v127 = (uint64_t)&v116 - v9;
  v10 = a1[1];
  result = sub_23C3F7290();
  if (result >= v10)
  {
    if (v10 < 0)
      goto LABEL_139;
    if (v10)
      return sub_23C3BE690(0, v10, 1, a1);
    return result;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_147;
  v129 = a1;
  v117 = result;
  v124 = v1;
  if (v10 < 2)
  {
    v16 = (char *)MEMORY[0x24BEE4AF8];
    v122 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
    v116 = MEMORY[0x24BEE4AF8];
    if (v10 != 1)
    {
      v18 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_105:
      v108 = v16;
      if (v18 >= 2)
      {
        v109 = *v129;
        do
        {
          v110 = v18 - 2;
          if (v18 < 2)
            goto LABEL_134;
          if (!v109)
            goto LABEL_146;
          v111 = *(_QWORD *)&v108[16 * v110 + 32];
          v112 = *(_QWORD *)&v108[16 * v18 + 24];
          v113 = v124;
          sub_23C3BE8BC(v109 + *(_QWORD *)(v123 + 72) * v111, v109 + *(_QWORD *)(v123 + 72) * *(_QWORD *)&v108[16 * v18 + 16], v109 + *(_QWORD *)(v123 + 72) * v112, v122);
          v124 = v113;
          if (v113)
            break;
          if (v112 < v111)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v108 = sub_23C3C67B0((uint64_t)v108);
          if (v110 >= *((_QWORD *)v108 + 2))
            goto LABEL_136;
          v114 = &v108[16 * v110 + 32];
          *(_QWORD *)v114 = v111;
          *((_QWORD *)v114 + 1) = v112;
          v115 = *((_QWORD *)v108 + 2);
          if (v18 > v115)
            goto LABEL_137;
          memmove(&v108[16 * v18 + 16], &v108[16 * v18 + 32], 16 * (v115 - v18));
          *((_QWORD *)v108 + 2) = v115 - 1;
          v18 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v116 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_23C3F6FE4();
    *(_QWORD *)(v14 + 16) = v13;
    v15 = *(unsigned __int8 *)(v123 + 80);
    v116 = v14;
    v122 = v14 + ((v15 + 32) & ~v15);
  }
  v17 = 0;
  v16 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v19 = v17;
    v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      goto LABEL_24;
    }
    v21 = *v129;
    v22 = *(_QWORD *)(v123 + 72);
    v23 = v127;
    sub_23C39654C(*v129 + v22 * v20, v127, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
    v24 = v21 + v22 * v17;
    v25 = v128;
    sub_23C39654C(v24, v128, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
    LODWORD(v126) = sub_23C3F6618();
    sub_23C3965D4(v25, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
    sub_23C3965D4(v23, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
    v17 = v19 + 2;
    v125 = v21;
    v132 = v22;
    if (v19 + 2 >= v10)
      goto LABEL_21;
    v121 = v19;
    v118 = v16;
    v26 = v22 * v20;
    v27 = v21;
    v28 = v22 * v17;
    do
    {
      v29 = v10;
      v30 = v127;
      sub_23C39654C(v27 + v28, v127, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      v31 = v128;
      sub_23C39654C(v27 + v26, v128, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      v32 = sub_23C3F6618();
      sub_23C3965D4(v31, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      sub_23C3965D4(v30, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      if (((v126 ^ v32) & 1) != 0)
      {
        v16 = v118;
        v19 = v121;
        v10 = v29;
        v22 = v132;
        if ((v126 & 1) != 0)
          goto LABEL_42;
        goto LABEL_24;
      }
      ++v17;
      v22 = v132;
      v27 += v132;
      v10 = v29;
    }
    while (v29 != v17);
    v17 = v29;
    v16 = v118;
    v19 = v121;
LABEL_21:
    if ((v126 & 1) == 0)
      goto LABEL_24;
LABEL_42:
    if (v17 < v19)
      goto LABEL_140;
    if (v19 < v17)
      break;
LABEL_24:
    v33 = v129;
    if (v17 < v10)
      goto LABEL_25;
LABEL_57:
    if (v17 < v19)
      goto LABEL_133;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_23C3C65AC(0, *((_QWORD *)v16 + 2) + 1, 1, v16);
    v57 = *((_QWORD *)v16 + 2);
    v56 = *((_QWORD *)v16 + 3);
    v18 = v57 + 1;
    if (v57 >= v56 >> 1)
      v16 = sub_23C3C65AC((char *)(v56 > 1), v57 + 1, 1, v16);
    *((_QWORD *)v16 + 2) = v18;
    v58 = v16 + 32;
    v59 = &v16[16 * v57 + 32];
    *(_QWORD *)v59 = v19;
    *((_QWORD *)v59 + 1) = v17;
    if (v57)
    {
      while (1)
      {
        v60 = v18 - 1;
        if (v18 >= 4)
        {
          v65 = &v58[16 * v18];
          v66 = *((_QWORD *)v65 - 8);
          v67 = *((_QWORD *)v65 - 7);
          v71 = __OFSUB__(v67, v66);
          v68 = v67 - v66;
          if (v71)
            goto LABEL_122;
          v70 = *((_QWORD *)v65 - 6);
          v69 = *((_QWORD *)v65 - 5);
          v71 = __OFSUB__(v69, v70);
          v63 = v69 - v70;
          v64 = v71;
          if (v71)
            goto LABEL_123;
          v72 = v18 - 2;
          v73 = &v58[16 * v18 - 32];
          v75 = *(_QWORD *)v73;
          v74 = *((_QWORD *)v73 + 1);
          v71 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          if (v71)
            goto LABEL_125;
          v71 = __OFADD__(v63, v76);
          v77 = v63 + v76;
          if (v71)
            goto LABEL_128;
          if (v77 >= v68)
          {
            v95 = &v58[16 * v60];
            v97 = *(_QWORD *)v95;
            v96 = *((_QWORD *)v95 + 1);
            v71 = __OFSUB__(v96, v97);
            v98 = v96 - v97;
            if (v71)
              goto LABEL_132;
            v88 = v63 < v98;
            goto LABEL_94;
          }
        }
        else
        {
          if (v18 != 3)
          {
            v89 = *((_QWORD *)v16 + 4);
            v90 = *((_QWORD *)v16 + 5);
            v71 = __OFSUB__(v90, v89);
            v82 = v90 - v89;
            v83 = v71;
            goto LABEL_88;
          }
          v62 = *((_QWORD *)v16 + 4);
          v61 = *((_QWORD *)v16 + 5);
          v71 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          v64 = v71;
        }
        if ((v64 & 1) != 0)
          goto LABEL_124;
        v72 = v18 - 2;
        v78 = &v58[16 * v18 - 32];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v81 = __OFSUB__(v79, v80);
        v82 = v79 - v80;
        v83 = v81;
        if (v81)
          goto LABEL_127;
        v84 = &v58[16 * v60];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v71 = __OFSUB__(v85, v86);
        v87 = v85 - v86;
        if (v71)
          goto LABEL_130;
        if (__OFADD__(v82, v87))
          goto LABEL_131;
        if (v82 + v87 >= v63)
        {
          v88 = v63 < v87;
LABEL_94:
          if (v88)
            v60 = v72;
          goto LABEL_96;
        }
LABEL_88:
        if ((v83 & 1) != 0)
          goto LABEL_126;
        v91 = &v58[16 * v60];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v71 = __OFSUB__(v92, v93);
        v94 = v92 - v93;
        if (v71)
          goto LABEL_129;
        if (v94 < v82)
          goto LABEL_14;
LABEL_96:
        v99 = v16;
        v100 = v60 - 1;
        if (v60 - 1 >= v18)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v129)
          goto LABEL_144;
        v101 = v17;
        v102 = &v58[16 * v100];
        v103 = *(_QWORD *)v102;
        v104 = &v58[16 * v60];
        v105 = *((_QWORD *)v104 + 1);
        v106 = v124;
        sub_23C3BE8BC(*v129 + *(_QWORD *)(v123 + 72) * *(_QWORD *)v102, *v129 + *(_QWORD *)(v123 + 72) * *(_QWORD *)v104, *v129 + *(_QWORD *)(v123 + 72) * v105, v122);
        v124 = v106;
        if (v106)
          goto LABEL_116;
        if (v105 < v103)
          goto LABEL_119;
        if (v60 > *((_QWORD *)v99 + 2))
          goto LABEL_120;
        *(_QWORD *)v102 = v103;
        *(_QWORD *)&v58[16 * v100 + 8] = v105;
        v107 = *((_QWORD *)v99 + 2);
        if (v60 >= v107)
          goto LABEL_121;
        v16 = v99;
        v18 = v107 - 1;
        memmove(&v58[16 * v60], v104 + 16, 16 * (v107 - 1 - v60));
        *((_QWORD *)v99 + 2) = v107 - 1;
        v88 = v107 > 2;
        v17 = v101;
        if (!v88)
          goto LABEL_14;
      }
    }
    v18 = 1;
LABEL_14:
    v10 = v129[1];
    if (v17 >= v10)
      goto LABEL_105;
  }
  v126 = v10;
  v118 = v16;
  v48 = 0;
  v49 = v22 * (v17 - 1);
  v50 = v17 * v22;
  v51 = v19;
  v121 = v19;
  v52 = v19 * v22;
  v33 = v129;
  do
  {
    if (v51 != v17 + v48 - 1)
    {
      v53 = v125;
      if (!v125)
        goto LABEL_145;
      v54 = v125 + v52;
      v55 = v125 + v49;
      sub_23C3B22F4(v125 + v52, v120);
      if (v52 < v49 || v54 >= v53 + v50)
      {
        swift_arrayInitWithTakeFrontToBack();
        v22 = v132;
      }
      else
      {
        v22 = v132;
        if (v52 != v49)
          swift_arrayInitWithTakeBackToFront();
      }
      sub_23C3B22F4(v120, v55);
      v33 = v129;
    }
    ++v51;
    --v48;
    v49 -= v22;
    v50 -= v22;
    v52 += v22;
  }
  while (v51 < v17 + v48);
  v16 = v118;
  v10 = v126;
  v19 = v121;
  if (v17 >= v126)
    goto LABEL_57;
LABEL_25:
  if (__OFSUB__(v17, v19))
    goto LABEL_138;
  if (v17 - v19 >= v117)
    goto LABEL_57;
  if (__OFADD__(v19, v117))
    goto LABEL_141;
  if (v19 + v117 >= v10)
    v34 = v10;
  else
    v34 = v19 + v117;
  if (v34 >= v19)
  {
    if (v17 != v34)
    {
      v118 = v16;
      v119 = v34;
      v35 = *(_QWORD *)(v123 + 72);
      v132 = v35 * (v17 - 1);
      v125 = v35;
      v36 = v17 * v35;
      v121 = v19;
      do
      {
        v38 = 0;
        v39 = v19;
        v126 = v17;
        while (1)
        {
          v40 = *v33;
          v41 = v36;
          v42 = v36 + v38 + *v33;
          v43 = v127;
          v44 = v33;
          sub_23C39654C(v42, v127, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
          v45 = v128;
          sub_23C39654C(v132 + v38 + v40, v128, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
          LOBYTE(v40) = sub_23C3F6618();
          sub_23C3965D4(v45, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
          sub_23C3965D4(v43, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
          if ((v40 & 1) == 0)
            break;
          v46 = *v44;
          if (!*v44)
            goto LABEL_143;
          v36 = v41;
          v47 = v46 + v132 + v38;
          sub_23C3B22F4(v46 + v41 + v38, v131);
          swift_arrayInitWithTakeFrontToBack();
          sub_23C3B22F4(v131, v47);
          v37 = v126;
          v38 -= v125;
          ++v39;
          v33 = v129;
          if (v126 == v39)
            goto LABEL_35;
        }
        v37 = v126;
        v36 = v41;
        v33 = v44;
LABEL_35:
        v17 = v37 + 1;
        v132 += v125;
        v36 += v125;
        v19 = v121;
      }
      while (v17 != v119);
      v17 = v119;
      v16 = v118;
    }
    goto LABEL_57;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_23C3F7170();
  __break(1u);
  return result;
}

uint64_t sub_23C3BE690(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v25 = a1;
  v28 = type metadata accessor for SearchHistoryItem();
  v7 = MEMORY[0x24BDAC7A8](v28);
  v29 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v15 = (char *)&v23 - v14;
  v27 = a3;
  v24 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v31 = v16 * (v27 - 1);
    v26 = v16;
    v30 = v16 * v27;
LABEL_5:
    v17 = 0;
    v18 = v25;
    while (1)
    {
      v19 = *a4;
      sub_23C39654C(v30 + v17 + *a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      sub_23C39654C(v31 + v17 + v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      LOBYTE(v19) = sub_23C3F6618();
      sub_23C3965D4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      result = sub_23C3965D4((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v31 += v26;
        v30 += v26;
        if (++v27 == v24)
          return result;
        goto LABEL_5;
      }
      v20 = *a4;
      if (!*a4)
        break;
      v21 = a4;
      v22 = v20 + v31 + v17;
      sub_23C3B22F4(v20 + v30 + v17, v29);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23C3B22F4(v29, v22);
      v17 -= v26;
      ++v18;
      a4 = v21;
      if (v27 == v18)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23C3BE8BC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v44 = type metadata accessor for SearchHistoryItem();
  v8 = MEMORY[0x24BDAC7A8](v44);
  v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v47 = a1;
  v46 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v25 = a4 + v18;
      v45 = a4 + v18;
      v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = -v13;
        v41 = a4;
        v42 = a1;
        do
        {
          v28 = a3 + v27;
          sub_23C39654C(v25 + v27, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
          v29 = a2 + v27;
          v30 = a3;
          v31 = (uint64_t)v11;
          v32 = v43;
          sub_23C39654C(a2 + v27, v43, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
          v33 = sub_23C3F6618();
          v34 = v32;
          v11 = (char *)v31;
          sub_23C3965D4(v34, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
          sub_23C3965D4(v31, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == a2;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
            }
            v47 += v27;
          }
          else
          {
            v38 = v45;
            v45 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              v29 = a2;
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == v38;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
              v29 = a2;
            }
          }
          v25 = v45;
          if (v45 <= v37)
            break;
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v42 = a4 + v17;
    v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = v43;
      do
      {
        sub_23C39654C(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
        sub_23C39654C(a4, v20, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
        v21 = sub_23C3F6618();
        sub_23C3965D4(v20, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
        sub_23C3965D4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
        v22 = v47;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v47 < a2 || v47 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v24 = v46 + v13;
          if (v47 < v46 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v46 = v24;
          v23 = a2;
        }
        v47 = v22 + v13;
        a4 = v46;
        if (v46 >= v42)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_23C3C66A4(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_64:
  result = sub_23C3F71A0();
  __break(1u);
  return result;
}

uint64_t sub_23C3BED6C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23C3C6CC0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23C3BED88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for SearchHistoryItem();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_23C3F6630();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_23C3BEE14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SearchHistoryItem() - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23C3B47A4;
  return sub_23C3BAEA8(a1, v5);
}

uint64_t sub_23C3BEE80()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C3BEF0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = v1 + 40;
  v7 = v1 + 200;
  v8 = *(_BYTE *)(v1 + 32);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23C3B47A4;
  return sub_23C3B95B8(a1, v4, v5, v8, v6, v7);
}

uint64_t sub_23C3BEF90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C3B3D94;
  return sub_23C3B9334(a1, v1 + 16);
}

uint64_t sub_23C3BEFE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C3B47A4;
  return sub_23C3B9130(a1, v1 + 16);
}

uint64_t sub_23C3BF03C()
{
  return sub_23C39650C(&qword_256B85368, (uint64_t (*)(uint64_t))type metadata accessor for SearchAction, (uint64_t)&protocol conformance descriptor for SearchAction);
}

uint64_t sub_23C3BF068()
{
  return sub_23C39650C(&qword_256B85370, (uint64_t (*)(uint64_t))type metadata accessor for SearchAction, (uint64_t)&protocol conformance descriptor for SearchAction);
}

uint64_t sub_23C3BF094()
{
  return sub_23C39650C((unint64_t *)&qword_256B84760, (uint64_t (*)(uint64_t))type metadata accessor for SearchState, (uint64_t)&protocol conformance descriptor for SearchState);
}

ValueMetadata *type metadata accessor for TVSearchFeature()
{
  return &type metadata for TVSearchFeature;
}

uint64_t sub_23C3BF0D0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23C3BF118(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23C3BF154()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C3BF1C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(v1 + 176);
  v5 = *(_QWORD *)(v1 + 184);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23C3B47A4;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v1 + 48) + *(_QWORD *)(v1 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_23C3B3D94;
  return v9(a1, v4, v5);
}

uint64_t sub_23C3BF260(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B853A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C3BF2A0(uint64_t (*a1)(void))
{
  return a1();
}

void SearchAction.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for SearchHistoryItem();
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v2);
  sub_23C3A56A8(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_23C3BF38C + 4 * word_23C3FB714[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23C3BF38C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
  sub_23C3F70D4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 - 96) = 0x4364657375636F66;
  *(_QWORD *)(v0 - 88) = 0xEF286465676E6168;
  sub_23C3F6F84();
  swift_bridgeObjectRelease();
  sub_23C3F6F84();
  return *(_QWORD *)(v0 - 96);
}

uint64_t sub_23C3BFB60(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchHistoryItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C3BFBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23C3F6708();
  __swift_allocate_value_buffer(v0, qword_256B853D0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256B853D0);
  if (qword_256B842E0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_256B96FC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static SearchFeature.searchLogger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256B842E8 != -1)
    swift_once();
  v2 = sub_23C3F6708();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256B853D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

__n128 SearchFeature.init(environment:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  v2 = *(_OWORD *)(a1 + 112);
  a2[6] = *(_OWORD *)(a1 + 96);
  a2[7] = v2;
  v3 = *(_OWORD *)(a1 + 144);
  a2[8] = *(_OWORD *)(a1 + 128);
  a2[9] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  a2[2] = *(_OWORD *)(a1 + 32);
  a2[3] = v4;
  v5 = *(_OWORD *)(a1 + 80);
  a2[4] = *(_OWORD *)(a1 + 64);
  a2[5] = v5;
  result = *(__n128 *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v7;
  return result;
}

uint64_t sub_23C3BFCCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 8);
  if (*(_BYTE *)(v1 + 64))
  {
    v4 = *(_QWORD *)(v1 + 24);
    v5 = *(_QWORD *)(v1 + 56);
    if (*(_BYTE *)(v1 + 64) == 1)
    {
      sub_23C3F72FC();
      if (v4)
      {
        sub_23C3F7308();
        sub_23C3F7308();
        if (v3)
        {
          swift_bridgeObjectRetain();
          sub_23C3F6F6C();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRetain();
        sub_23C3F6F6C();
        swift_bridgeObjectRelease();
        sub_23C3F72FC();
        swift_bridgeObjectRetain();
        sub_23C3F6F6C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_23C39562C(a1, v5);
        return swift_bridgeObjectRelease();
      }
      else
      {
        return sub_23C3F7308();
      }
    }
    else
    {
      return sub_23C3F72FC();
    }
  }
  else
  {
    sub_23C3F72FC();
    return sub_23C3F6F6C();
  }
}

uint64_t sub_23C3BFF14()
{
  __int128 *v0;
  char v1;
  __int128 v2;
  __int128 v3;
  _BYTE v5[72];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;

  v1 = *((_BYTE *)v0 + 64);
  v2 = v0[1];
  v6 = *v0;
  v7 = v2;
  v3 = v0[3];
  v8 = v0[2];
  v9 = v3;
  v10 = v1;
  sub_23C3F72F0();
  sub_23C3BFCCC((uint64_t)v5);
  return sub_23C3F7320();
}

uint64_t sub_23C3BFF70()
{
  __int128 *v0;
  char v1;
  __int128 v2;
  __int128 v3;
  _BYTE v5[72];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;

  v1 = *((_BYTE *)v0 + 64);
  v2 = v0[1];
  v6 = *v0;
  v7 = v2;
  v3 = v0[3];
  v8 = v0[2];
  v9 = v3;
  v10 = v1;
  sub_23C3F72F0();
  sub_23C3BFCCC((uint64_t)v5);
  return sub_23C3F7320();
}

void SearchFeature.reduce(localState:sharedState:sideEffects:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  char *v40;
  _QWORD v41[21];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v43 = a3;
  v44 = a2;
  v41[18] = a1;
  v6 = type metadata accessor for SearchHistoryItem();
  MEMORY[0x24BDAC7A8](v6);
  v42 = type metadata accessor for SearchState();
  v7 = MEMORY[0x24BDAC7A8](v42);
  v41[8] = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85258);
  v41[19] = *(_QWORD *)(v9 - 8);
  v41[20] = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v41[15] = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v41[13] = (char *)v41 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v41[6] = (char *)v41 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v41[7] = (char *)v41 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v41[10] = (char *)v41 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v41[14] = (char *)v41 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v41[9] = (char *)v41 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v41[12] = (char *)v41 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v41[11] = (char *)v41 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v29 = MEMORY[0x24BDAC7A8](v28);
  MEMORY[0x24BDAC7A8](v29);
  v30 = type metadata accessor for SearchAction();
  v31 = MEMORY[0x24BDAC7A8](v30);
  v41[17] = (char *)v41 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = v4[7];
  v51 = v4[6];
  v52 = v33;
  v34 = v4[9];
  v53 = v4[8];
  v54 = v34;
  v35 = v4[3];
  v47 = v4[2];
  v48 = v35;
  v36 = v4[5];
  v49 = v4[4];
  v50 = v36;
  v37 = v4[1];
  v45 = *v4;
  v46 = v37;
  sub_23C39654C(a4, (uint64_t)v41 - v38, v39);
  v41[16] = v30;
  v40 = (char *)sub_23C3C02D8 + 4 * word_23C3FB770[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23C3C02D8()
{
  uint64_t v0;
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;

  v2 = *v1;
  if (qword_256B842E0 != -1)
    swift_once();
  v3 = sub_23C3F6708();
  __swift_project_value_buffer(v3, (uint64_t)qword_256B96FC0);
  v4 = sub_23C3F66F0();
  v5 = sub_23C3F7050();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 184);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v8 = 67109120;
    *(_DWORD *)(v0 + 208) = v2;
    sub_23C3F70B0();
    _os_log_impl(&dword_23C390000, v4, v5, "[Focus] isSearching: %{BOOL}d", v8, 8u);
    MEMORY[0x24261DF18](v8, -1, -1);
  }

  *(_BYTE *)(v7 + 49) = v2;
  if ((v2 & 1) == 0)
  {
    v9 = (uint64_t *)(*(_QWORD *)(v0 + 184) + *(int *)(*(_QWORD *)(v0 + 168) + 68));
    sub_23C39A610(*v9, v9[1], v9[2]);
    v9[4] = 0;
    *(_OWORD *)v9 = 0u;
    *((_OWORD *)v9 + 1) = 0u;
  }
}

uint64_t sub_23C3C32AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v6 + 114) = a5;
  *(_QWORD *)(v6 + 216) = a3;
  *(_QWORD *)(v6 + 224) = a4;
  *(_QWORD *)(v6 + 200) = a1;
  *(_QWORD *)(v6 + 208) = a2;
  *(_BYTE *)(v6 + 115) = *(_BYTE *)a6;
  v7 = *(_QWORD *)(a6 + 8);
  *(_QWORD *)(v6 + 232) = a6;
  *(_QWORD *)(v6 + 240) = v7;
  *(_OWORD *)(v6 + 248) = *(_OWORD *)(a6 + 16);
  *(_QWORD *)(v6 + 264) = *(_QWORD *)(a6 + 32);
  *(_OWORD *)(v6 + 272) = *(_OWORD *)(a6 + 40);
  v8 = sub_23C3F6654();
  *(_QWORD *)(v6 + 288) = v8;
  *(_QWORD *)(v6 + 296) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 304) = swift_task_alloc();
  v9 = sub_23C3F6FFC();
  *(_QWORD *)(v6 + 312) = v9;
  *(_QWORD *)(v6 + 320) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 328) = swift_task_alloc();
  *(_QWORD *)(v6 + 336) = type metadata accessor for SearchAction();
  *(_QWORD *)(v6 + 344) = swift_task_alloc();
  sub_23C3F7020();
  *(_QWORD *)(v6 + 352) = sub_23C3F7014();
  *(_QWORD *)(v6 + 360) = sub_23C3F6FF0();
  *(_QWORD *)(v6 + 368) = v10;
  return swift_task_switch();
}

uint64_t sub_23C3C33BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  int **v4;
  int *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 114);
  v3 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(int ***)(v0 + 208);
  v5 = *v4;
  *(_QWORD *)(v0 + 376) = v4[6];
  *(_QWORD *)(v0 + 384) = v4[7];
  *(_QWORD *)(v0 + 392) = v4[8];
  *(_QWORD *)(v0 + 400) = v4[9];
  ((void (*)(void))v4[12])();
  *(_QWORD *)(v0 + 96) = v3;
  *(_QWORD *)(v0 + 104) = v2;
  *(_BYTE *)(v0 + 112) = v1;
  *(_BYTE *)(v0 + 113) = 0;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v6;
  *v6 = v0;
  v6[1] = sub_23C3C3490;
  return v8(v0 + 16, v0 + 96);
}

uint64_t sub_23C3C3490()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23C3C34FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)();
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];

  v1 = *(void **)(v0 + 416);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 424) = v2;
  *(_QWORD *)(v0 + 432) = v4;
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 440) = v6;
  *(_QWORD *)(v0 + 448) = v8;
  sub_23C3F7038();
  if (!v1)
  {
    v18 = *(_QWORD *)(v0 + 344);
    v19 = *(char **)(v0 + 232);
    v20 = *v19;
    v21 = *((_QWORD *)v19 + 1);
    v22 = *((_QWORD *)v19 + 2);
    v23 = *((_QWORD *)v19 + 3);
    v24 = *((_QWORD *)v19 + 4);
    *(_QWORD *)v18 = v3;
    *(_QWORD *)(v18 + 8) = v2;
    *(_QWORD *)(v18 + 16) = v4;
    *(_QWORD *)(v18 + 24) = v5;
    *(_QWORD *)(v18 + 32) = v6;
    *(_QWORD *)(v18 + 40) = v7;
    *(_QWORD *)(v18 + 48) = v8;
    *(_BYTE *)(v18 + 56) = v20;
    *(_QWORD *)(v18 + 64) = v21;
    *(_QWORD *)(v18 + 72) = v22;
    *(_QWORD *)(v18 + 80) = v23;
    *(_QWORD *)(v18 + 88) = v24;
    *(_QWORD *)(v18 + 96) = v3;
    *(_QWORD *)(v18 + 104) = v2;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 456) = v25;
    *(_QWORD *)(v0 + 464) = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    v26 = sub_23C3C3BE0;
LABEL_16:
    *v25 = v0;
    v25[1] = v26;
    return sub_23C3F6E28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 520) = v1;
  *(_QWORD *)(v0 + 128) = v1;
  v9 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85380);
  if ((swift_dynamicCast() & 1) == 0)
  {

    if (qword_256B842E0 != -1)
      swift_once();
    v27 = sub_23C3F6708();
    __swift_project_value_buffer(v27, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain();
    v28 = v1;
    swift_bridgeObjectRetain();
    v29 = v1;
    v30 = sub_23C3F66F0();
    v31 = sub_23C3F705C();
    v32 = os_log_type_enabled(v30, v31);
    v33 = *(_QWORD *)(v0 + 224);
    if (v32)
    {
      v55 = *(_QWORD *)(v0 + 216);
      v34 = swift_slowAlloc();
      v35 = (_QWORD *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v59[0] = v57;
      *(_DWORD *)v34 = 141558531;
      *(_QWORD *)(v0 + 136) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v34 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 144) = sub_23C3BD414(v55, v33, v59);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 22) = 2112;
      v36 = v1;
      v37 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 152) = v37;
      sub_23C3F70B0();
      *v35 = v37;

      _os_log_impl(&dword_23C390000, v30, v31, "Failed to fetch results for '%{private,mask.hash}s': %@", (uint8_t *)v34, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v35, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v57, -1, -1);
      MEMORY[0x24261DF18](v34, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v39 = *(_QWORD *)(v0 + 344);
    v40 = *(_QWORD *)(v0 + 296);
    v41 = *(_QWORD *)(v0 + 304);
    v50 = *(_QWORD *)(v0 + 288);
    v54 = *(_QWORD *)(v0 + 272);
    v56 = *(_QWORD *)(v0 + 280);
    v52 = *(_OWORD *)(v0 + 240);
    v53 = *(_OWORD *)(v0 + 256);
    v51 = *(_BYTE *)(v0 + 115);
    v42 = *(_QWORD *)(v0 + 224);
    v58 = *(_QWORD *)(v0 + 232);
    v43 = *(_QWORD *)(v0 + 216);
    swift_getErrorValue();
    v44 = sub_23C3F72B4();
    v46 = v45;
    sub_23C3F6648();
    v47 = sub_23C3F663C();
    v49 = v48;
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v50);
    *(_QWORD *)v39 = v47;
    *(_QWORD *)(v39 + 8) = v49;
    *(_QWORD *)(v39 + 16) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v39 + 24) = v43;
    *(_QWORD *)(v39 + 32) = v42;
    *(_QWORD *)(v39 + 40) = v44;
    *(_QWORD *)(v39 + 48) = v46;
    *(_BYTE *)(v39 + 56) = v51;
    *(_OWORD *)(v39 + 64) = v52;
    *(_OWORD *)(v39 + 80) = v53;
    *(_QWORD *)(v39 + 96) = v54;
    *(_QWORD *)(v39 + 104) = v56;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_23C3BF0D0(v58);
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 528) = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    v26 = sub_23C3BA244;
    goto LABEL_16;
  }
  swift_release();

  if (qword_256B842E0 != -1)
    swift_once();
  v10 = sub_23C3F6708();
  __swift_project_value_buffer(v10, (uint64_t)qword_256B96FC0);
  swift_bridgeObjectRetain_n();
  v11 = sub_23C3F66F0();
  v12 = sub_23C3F7050();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(_QWORD *)(v0 + 224);
  if (v13)
  {
    v15 = *(_QWORD *)(v0 + 216);
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v59[0] = v17;
    *(_DWORD *)v16 = 141558275;
    *(_QWORD *)(v0 + 160) = 1752392040;
    sub_23C3F70B0();
    *(_WORD *)(v16 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 168) = sub_23C3BD414(v15, v14, v59);
    sub_23C3F70B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23C390000, v11, v12, "[Cancellation] Results for '%{private,mask.hash}s'", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v17, -1, -1);
    MEMORY[0x24261DF18](v16, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3C3BE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 344);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3C3C40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 432) + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    v4 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0 + 392) + *(_QWORD *)(v0 + 392));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v2;
    *v2 = v0;
    v2[1] = sub_23C3C3D20;
    return v4(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23C3C3D20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v2 = *v1;
  *(_QWORD *)(v2 + 480) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = (uint64_t (*)(void))(**(int **)(v2 + 376) + *(_QWORD *)(v2 + 376));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 488) = v4;
  *v4 = v2;
  v4[1] = sub_23C3C3DC0;
  return v5();
}

uint64_t sub_23C3C3DC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 496) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 504) = a1;
  return swift_task_switch();
}

uint64_t sub_23C3C3E34()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 416);
  *(_QWORD *)(v0 + 128) = v1;
  *(_QWORD *)(v0 + 520) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85380);
  if (swift_dynamicCast())
  {
    swift_release();

    if (qword_256B842E0 != -1)
      swift_once();
    v3 = sub_23C3F6708();
    __swift_project_value_buffer(v3, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain_n();
    v4 = sub_23C3F66F0();
    v5 = sub_23C3F7050();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v0 + 224);
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 216);
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v44 = v10;
      *(_DWORD *)v9 = 141558275;
      *(_QWORD *)(v0 + 160) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v9 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 168) = sub_23C3BD414(v8, v7, &v44);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23C390000, v4, v5, "[Cancellation] Results for '%{private,mask.hash}s'", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v10, -1, -1);
      MEMORY[0x24261DF18](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {

    if (qword_256B842E0 != -1)
      swift_once();
    v11 = sub_23C3F6708();
    __swift_project_value_buffer(v11, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain();
    v12 = v1;
    swift_bridgeObjectRetain();
    v13 = v1;
    v14 = sub_23C3F66F0();
    v15 = sub_23C3F705C();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 224);
    if (v16)
    {
      v40 = *(_QWORD *)(v0 + 216);
      v18 = swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v44 = v42;
      *(_DWORD *)v18 = 141558531;
      *(_QWORD *)(v0 + 136) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v18 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 144) = sub_23C3BD414(v40, v17, &v44);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2112;
      v20 = v1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 152) = v21;
      sub_23C3F70B0();
      *v19 = v21;

      _os_log_impl(&dword_23C390000, v14, v15, "Failed to fetch results for '%{private,mask.hash}s': %@", (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v19, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v42, -1, -1);
      MEMORY[0x24261DF18](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v23 = *(_QWORD *)(v0 + 344);
    v24 = *(_QWORD *)(v0 + 296);
    v25 = *(_QWORD *)(v0 + 304);
    v35 = *(_QWORD *)(v0 + 288);
    v39 = *(_QWORD *)(v0 + 272);
    v41 = *(_QWORD *)(v0 + 280);
    v37 = *(_OWORD *)(v0 + 240);
    v38 = *(_OWORD *)(v0 + 256);
    v36 = *(_BYTE *)(v0 + 115);
    v26 = *(_QWORD *)(v0 + 224);
    v43 = *(_QWORD *)(v0 + 232);
    v27 = *(_QWORD *)(v0 + 216);
    swift_getErrorValue();
    v28 = sub_23C3F72B4();
    v30 = v29;
    sub_23C3F6648();
    v31 = sub_23C3F663C();
    v33 = v32;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v35);
    *(_QWORD *)v23 = v31;
    *(_QWORD *)(v23 + 8) = v33;
    *(_QWORD *)(v23 + 16) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v23 + 24) = v27;
    *(_QWORD *)(v23 + 32) = v26;
    *(_QWORD *)(v23 + 40) = v28;
    *(_QWORD *)(v23 + 48) = v30;
    *(_BYTE *)(v23 + 56) = v36;
    *(_OWORD *)(v23 + 64) = v37;
    *(_OWORD *)(v23 + 80) = v38;
    *(_QWORD *)(v23 + 96) = v39;
    *(_QWORD *)(v23 + 104) = v41;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_23C3BF0D0(v43);
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 528) = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    *v34 = v0;
    v34[1] = sub_23C3BA244;
    return sub_23C3F6E28();
  }
}

uint64_t sub_23C3C4438()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 480);
  swift_release();
  if (qword_256B842E0 != -1)
    swift_once();
  v2 = sub_23C3F6708();
  __swift_project_value_buffer(v2, (uint64_t)qword_256B96FC0);
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_23C3F66F0();
  v6 = sub_23C3F705C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 224);
  if (v7)
  {
    v15 = *(_QWORD *)(v0 + 216);
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v16 = v11;
    *(_DWORD *)v9 = 141558531;
    *(_QWORD *)(v0 + 176) = 1752392040;
    sub_23C3F70B0();
    *(_WORD *)(v9 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = sub_23C3BD414(v15, v8, &v16);
    sub_23C3F70B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2112;
    v12 = v1;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 192) = v13;
    sub_23C3F70B0();
    *v10 = v13;

    _os_log_impl(&dword_23C390000, v5, v6, "Failed to update history with '%{private,mask.hash}s': %@", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v11, -1, -1);
    MEMORY[0x24261DF18](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3C4708()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)(v0 + 496);
  swift_release();
  if (qword_256B842E0 != -1)
    swift_once();
  v2 = sub_23C3F6708();
  __swift_project_value_buffer(v2, (uint64_t)qword_256B96FC0);
  swift_bridgeObjectRetain();
  v3 = v1;
  swift_bridgeObjectRetain();
  v4 = v1;
  v5 = sub_23C3F66F0();
  v6 = sub_23C3F705C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 224);
  if (v7)
  {
    v15 = *(_QWORD *)(v0 + 216);
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v16 = v11;
    *(_DWORD *)v9 = 141558531;
    *(_QWORD *)(v0 + 176) = 1752392040;
    sub_23C3F70B0();
    *(_WORD *)(v9 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = sub_23C3BD414(v15, v8, &v16);
    sub_23C3F70B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2112;
    v12 = v1;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 192) = v13;
    sub_23C3F70B0();
    *v10 = v13;

    _os_log_impl(&dword_23C390000, v5, v6, "Failed to update history with '%{private,mask.hash}s': %@", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v11, -1, -1);
    MEMORY[0x24261DF18](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3C49D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v5 + 120) = a4;
  *(_QWORD *)(v5 + 128) = a5;
  *(_QWORD *)(v5 + 104) = a1;
  *(_QWORD *)(v5 + 112) = a3;
  *(_BYTE *)(v5 + 296) = *(_BYTE *)a5;
  *(_QWORD *)(v5 + 136) = *(_QWORD *)(a5 + 8);
  *(_OWORD *)(v5 + 144) = *(_OWORD *)(a5 + 16);
  *(_QWORD *)(v5 + 160) = *(_QWORD *)(a5 + 32);
  *(_OWORD *)(v5 + 168) = *(_OWORD *)(a5 + 40);
  v9 = sub_23C3F6FFC();
  *(_QWORD *)(v5 + 184) = v9;
  *(_QWORD *)(v5 + 192) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 200) = swift_task_alloc();
  *(_QWORD *)(v5 + 208) = type metadata accessor for SearchAction();
  *(_QWORD *)(v5 + 216) = swift_task_alloc();
  *(_QWORD *)(v5 + 224) = sub_23C3F7020();
  *(_QWORD *)(v5 + 232) = sub_23C3F7014();
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 240) = v10;
  *v10 = v5;
  v10[1] = sub_23C3C4AF0;
  return v12(v5 + 16, a3, a4);
}

uint64_t sub_23C3C4AF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc();
  v3 = sub_23C3F6FF0();
  if (!v0)
  {
    *(_QWORD *)(v2 + 256) = v3;
    *(_QWORD *)(v2 + 264) = v4;
  }
  return swift_task_switch();
}

uint64_t sub_23C3C4B78()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t (*v35)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49[2];

  v1 = *(void **)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  sub_23C3F7038();
  if (v1)
  {
    v7 = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (*(_QWORD *)(v4 + 16))
    {
      v28 = *(_QWORD *)(v0 + 216);
      v29 = *(_QWORD *)(v0 + 128);
      v30 = *(_QWORD *)(v29 + 24);
      v31 = *(_QWORD *)(v29 + 32);
      v32 = *(_QWORD *)(v29 + 8);
      v33 = *(_QWORD *)(v29 + 16);
      LOBYTE(v29) = *(_BYTE *)v29;
      *(_QWORD *)v28 = v3;
      *(_QWORD *)(v28 + 8) = v2;
      *(_QWORD *)(v28 + 16) = v4;
      *(_QWORD *)(v28 + 24) = v5;
      *(_QWORD *)(v28 + 32) = v6;
      *(_BYTE *)(v28 + 40) = v29;
      *(_QWORD *)(v28 + 48) = v32;
      *(_QWORD *)(v28 + 56) = v33;
      *(_QWORD *)(v28 + 64) = v30;
      *(_QWORD *)(v28 + 72) = v31;
      *(_QWORD *)(v28 + 80) = v3;
      *(_QWORD *)(v28 + 88) = v2;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 272) = v34;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
      v35 = sub_23C3C5220;
LABEL_18:
      *v34 = v0;
      v34[1] = v35;
      return sub_23C3F6E28();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23C3C772C();
    v7 = (void *)swift_allocError();
    swift_willThrow();
  }
  *(_QWORD *)(v0 + 280) = v7;
  *(_QWORD *)(v0 + 56) = v7;
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85380);
  if (!swift_dynamicCast())
  {

    if (qword_256B842E0 != -1)
      swift_once();
    v17 = sub_23C3F6708();
    __swift_project_value_buffer(v17, (uint64_t)qword_256B96FC0);
    v18 = v7;
    swift_bridgeObjectRetain();
    v19 = v7;
    swift_bridgeObjectRetain();
    v20 = sub_23C3F66F0();
    v21 = sub_23C3F705C();
    v22 = os_log_type_enabled(v20, v21);
    v23 = *(_QWORD *)(v0 + 120);
    if (v22)
    {
      v45 = *(_QWORD *)(v0 + 112);
      v24 = swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v49[0] = v46;
      *(_DWORD *)v24 = 141558531;
      *(_QWORD *)(v0 + 64) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v24 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 72) = sub_23C3BD414(v45, v23, v49);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 22) = 2112;
      v26 = v7;
      v27 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 80) = v27;
      sub_23C3F70B0();
      *v25 = v27;

      _os_log_impl(&dword_23C390000, v20, v21, "Failed to fetch suggestions for %{private,mask.hash}s: %@", (uint8_t *)v24, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v25, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v46, -1, -1);
      MEMORY[0x24261DF18](v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v37 = *(_QWORD *)(v0 + 216);
    v39 = *(_QWORD *)(v0 + 168);
    v38 = *(_QWORD *)(v0 + 176);
    v47 = *(_OWORD *)(v0 + 136);
    v48 = *(_OWORD *)(v0 + 152);
    v40 = *(_BYTE *)(v0 + 296);
    v42 = *(_QWORD *)(v0 + 120);
    v41 = *(_QWORD *)(v0 + 128);
    v43 = *(_QWORD *)(v0 + 112);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85460);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_23C3F8160;
    *(_QWORD *)(v44 + 32) = 0;
    *(_QWORD *)(v44 + 40) = 0;
    *(_QWORD *)(v44 + 48) = v43;
    *(_QWORD *)(v44 + 56) = v42;
    *(_QWORD *)(v44 + 64) = 0;
    *(_QWORD *)(v44 + 72) = v43;
    *(_QWORD *)(v44 + 80) = v42;
    *(_QWORD *)v37 = 0;
    *(_QWORD *)(v37 + 8) = 0;
    *(_QWORD *)(v37 + 16) = v44;
    *(_QWORD *)(v37 + 24) = v43;
    *(_QWORD *)(v37 + 32) = v42;
    *(_BYTE *)(v37 + 40) = v40;
    *(_OWORD *)(v37 + 48) = v47;
    *(_OWORD *)(v37 + 64) = v48;
    *(_QWORD *)(v37 + 80) = v39;
    *(_QWORD *)(v37 + 88) = v38;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain_n();
    sub_23C3BF0D0(v41);
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    v35 = sub_23C3C52C8;
    goto LABEL_18;
  }
  swift_release();

  if (qword_256B842E0 != -1)
    swift_once();
  v9 = sub_23C3F6708();
  __swift_project_value_buffer(v9, (uint64_t)qword_256B96FC0);
  swift_bridgeObjectRetain_n();
  v10 = sub_23C3F66F0();
  v11 = sub_23C3F7050();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 120);
  if (v12)
  {
    v14 = *(_QWORD *)(v0 + 112);
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v49[0] = v16;
    *(_DWORD *)v15 = 141558275;
    *(_QWORD *)(v0 + 88) = 1752392040;
    sub_23C3F70B0();
    *(_WORD *)(v15 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 96) = sub_23C3BD414(v14, v13, v49);
    sub_23C3F70B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23C390000, v10, v11, "[Cancellation] Suggestions for %{private,mask.hash}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24261DF18](v16, -1, -1);
    MEMORY[0x24261DF18](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3C5220()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3C5280()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3C52C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  sub_23C3F6FF0();
  return swift_task_switch();
}

uint64_t sub_23C3C5354()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 280);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3C53A8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v1 = *(void **)(v0 + 248);
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 280) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85380);
  if (swift_dynamicCast())
  {
    swift_release();

    if (qword_256B842E0 != -1)
      swift_once();
    v3 = sub_23C3F6708();
    __swift_project_value_buffer(v3, (uint64_t)qword_256B96FC0);
    swift_bridgeObjectRetain_n();
    v4 = sub_23C3F66F0();
    v5 = sub_23C3F7050();
    v6 = os_log_type_enabled(v4, v5);
    v7 = *(_QWORD *)(v0 + 120);
    if (v6)
    {
      v8 = *(_QWORD *)(v0 + 112);
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v36 = v10;
      *(_DWORD *)v9 = 141558275;
      *(_QWORD *)(v0 + 88) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v9 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 96) = sub_23C3BD414(v8, v7, &v36);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23C390000, v4, v5, "[Cancellation] Suggestions for %{private,mask.hash}s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v10, -1, -1);
      MEMORY[0x24261DF18](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {

    if (qword_256B842E0 != -1)
      swift_once();
    v11 = sub_23C3F6708();
    __swift_project_value_buffer(v11, (uint64_t)qword_256B96FC0);
    v12 = v1;
    swift_bridgeObjectRetain();
    v13 = v1;
    swift_bridgeObjectRetain();
    v14 = sub_23C3F66F0();
    v15 = sub_23C3F705C();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(_QWORD *)(v0 + 120);
    if (v16)
    {
      v32 = *(_QWORD *)(v0 + 112);
      v18 = swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v36 = v33;
      *(_DWORD *)v18 = 141558531;
      *(_QWORD *)(v0 + 64) = 1752392040;
      sub_23C3F70B0();
      *(_WORD *)(v18 + 12) = 2081;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 72) = sub_23C3BD414(v32, v17, &v36);
      sub_23C3F70B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 22) = 2112;
      v20 = v1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 80) = v21;
      sub_23C3F70B0();
      *v19 = v21;

      _os_log_impl(&dword_23C390000, v14, v15, "Failed to fetch suggestions for %{private,mask.hash}s: %@", (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85268);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v19, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24261DF18](v33, -1, -1);
      MEMORY[0x24261DF18](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v23 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 168);
    v24 = *(_QWORD *)(v0 + 176);
    v34 = *(_OWORD *)(v0 + 136);
    v35 = *(_OWORD *)(v0 + 152);
    v26 = *(_BYTE *)(v0 + 296);
    v28 = *(_QWORD *)(v0 + 120);
    v27 = *(_QWORD *)(v0 + 128);
    v29 = *(_QWORD *)(v0 + 112);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85460);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_23C3F8160;
    *(_QWORD *)(v30 + 32) = 0;
    *(_QWORD *)(v30 + 40) = 0;
    *(_QWORD *)(v30 + 48) = v29;
    *(_QWORD *)(v30 + 56) = v28;
    *(_QWORD *)(v30 + 64) = 0;
    *(_QWORD *)(v30 + 72) = v29;
    *(_QWORD *)(v30 + 80) = v28;
    *(_QWORD *)v23 = 0;
    *(_QWORD *)(v23 + 8) = 0;
    *(_QWORD *)(v23 + 16) = v30;
    *(_QWORD *)(v23 + 24) = v29;
    *(_QWORD *)(v23 + 32) = v28;
    *(_BYTE *)(v23 + 40) = v26;
    *(_OWORD *)(v23 + 48) = v34;
    *(_OWORD *)(v23 + 64) = v35;
    *(_QWORD *)(v23 + 80) = v25;
    *(_QWORD *)(v23 + 88) = v24;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain_n();
    sub_23C3BF0D0(v27);
    v31 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    *v31 = v0;
    v31[1] = sub_23C3C52C8;
    return sub_23C3F6E28();
  }
}

uint64_t sub_23C3C5950(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(void);

  v2[8] = a1;
  v2[9] = type metadata accessor for SearchAction();
  v2[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B853A0);
  v2[11] = swift_task_alloc();
  v4 = sub_23C3F6558();
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = sub_23C3F7080();
  v2[16] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B853A8);
  v2[17] = v5;
  v2[18] = *(_QWORD *)(v5 - 8);
  v2[19] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B853B0);
  v2[20] = v6;
  v2[21] = *(_QWORD *)(v6 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = sub_23C3F7020();
  v2[25] = sub_23C3F7014();
  v9 = (uint64_t (*)(void))(**(int **)(a2 + 128) + *(_QWORD *)(a2 + 128));
  v7 = (_QWORD *)swift_task_alloc();
  v2[26] = v7;
  *v7 = v2;
  v7[1] = sub_23C3C5AC4;
  return v9();
}

uint64_t sub_23C3C5AC4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 216) = a1;
  swift_task_dealloc();
  *(_QWORD *)(v2 + 224) = sub_23C3F6FF0();
  *(_QWORD *)(v2 + 232) = v3;
  return swift_task_switch();
}

uint64_t sub_23C3C5B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 216);
  if (v1)
  {
    if (qword_256B842E0 != -1)
      swift_once();
    v2 = sub_23C3F6708();
    __swift_project_value_buffer(v2, (uint64_t)qword_256B96FC0);
    v3 = sub_23C3F66F0();
    v4 = sub_23C3F7050();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_23C390000, v3, v4, "[Dictation] Dictation monitoring", v5, 2u);
      MEMORY[0x24261DF18](v5, -1, -1);
    }
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 136);

    *(_QWORD *)(v0 + 48) = v1;
    sub_23C3F708C();
    sub_23C39650C(&qword_256B853C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0040], MEMORY[0x24BDD0050]);
    swift_retain();
    sub_23C3F7164();
    sub_23C3F7128();
    sub_23C3F7044();
    sub_23C3F7140();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    sub_23C3F714C();
    v9 = sub_23C3F7014();
    *(_QWORD *)(v0 + 240) = v9;
    if (v9)
    {
      swift_getObjectType();
      v10 = sub_23C3F6FF0();
      v12 = v11;
    }
    else
    {
      v10 = 0;
      v12 = 0;
    }
    *(_QWORD *)(v0 + 248) = v10;
    *(_QWORD *)(v0 + 256) = v12;
    return swift_task_switch();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23C3C5DE8()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 264) = sub_23C3F7134();
  sub_23C39650C(&qword_256B853C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0028], MEMORY[0x24BDD0038]);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v1;
  *v1 = v0;
  v1[1] = sub_23C3C5E90;
  return sub_23C3F7008();
}

uint64_t sub_23C3C5E90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    (*(void (**)(uint64_t, _QWORD))(v2 + 264))(v2 + 16, 0);
  return swift_task_switch();
}

uint64_t sub_23C3C5F00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  _QWORD *v12;
  int *v13;

  v1 = v0[12];
  v2 = v0[13];
  v3 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_23C3BF260(v3);
    swift_release();
    return swift_task_switch();
  }
  else
  {
    v6 = v0[22];
    v5 = v0[23];
    v7 = v0[20];
    v8 = v0[21];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[14], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
    v9 = (int *)sub_23C3F7140();
    v0[35] = v10;
    v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v0[36] = v11;
    v11(v6, v7);
    v13 = (int *)((char *)v9 + *v9);
    v12 = (_QWORD *)swift_task_alloc();
    v0[37] = v12;
    *v12 = v0;
    v12[1] = sub_23C3C60EC;
    return ((uint64_t (*)(_QWORD *, _QWORD))v13)(v0 + 39, v0[14]);
  }
}

uint64_t sub_23C3C6040()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3C60EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_23C3C616C()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 312) = 0;
  swift_release();
  *(_BYTE *)(v0 + 313) = *(_BYTE *)(v0 + 312);
  return swift_task_switch();
}

uint64_t sub_23C3C61B0()
{
  uint64_t v0;
  _QWORD *v2;

  if (*(_BYTE *)(v0 + 313) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 160));
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85378);
    *v2 = v0;
    v2[1] = sub_23C3C62CC;
    return sub_23C3F6E28();
  }
}

uint64_t sub_23C3C62CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_task_dealloc();
  sub_23C3965D4(v1, (uint64_t (*)(_QWORD))type metadata accessor for SearchAction);
  return swift_task_switch();
}

uint64_t sub_23C3C632C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_23C3F7014();
  v0[30] = v1;
  if (v1)
  {
    swift_getObjectType();
    v2 = sub_23C3F6FF0();
    v4 = v3;
  }
  else
  {
    v2 = 0;
    v4 = 0;
  }
  v0[31] = v2;
  v0[32] = v4;
  return swift_task_switch();
}

uint64_t sub_23C3C63A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C3B47A4;
  return sub_23C3BCFD0(a1, v1 + 16);
}

uint64_t sub_23C3C63FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C3B47A4;
  return sub_23C3C5950(a1, v1 + 16);
}

uint64_t sub_23C3C6450()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C3C64DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 176);
  v5 = *(_QWORD *)(v1 + 184);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23C3B47A4;
  return sub_23C3C49D8(a1, v1 + 16, v4, v5, v1 + 192);
}

uint64_t sub_23C3C6558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C3B47A4;
  return sub_23C3B3B08(a1, v1 + 16);
}

char *sub_23C3C65AC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85450);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23C3C66A4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for SearchHistoryItem();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_23C3F71A0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_23C3C67B0(uint64_t a1)
{
  return sub_23C3C65AC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23C3C67C4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C3C6850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = v1 + 16;
  v5 = *(_QWORD *)(v1 + 176);
  v6 = *(_QWORD *)(v1 + 184);
  v7 = v1 + 200;
  v8 = *(_BYTE *)(v1 + 192);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23C3B47A4;
  return sub_23C3C32AC(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_23C3C68D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23C3B3D94;
  return sub_23C3B9334(a1, v1 + 16);
}

ValueMetadata *type metadata accessor for SearchFeature()
{
  return &type metadata for SearchFeature;
}

uint64_t sub_23C3C6938(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9 == 1)
    return sub_23C39A824(result, a2, a3, a4);
  if (!a9)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for TaskIdentifier(uint64_t a1)
{
  return sub_23C3C6990(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t sub_23C3C6990(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9 == 1)
    return sub_23C399FEC(result, a2, a3, a4);
  if (!a9)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for TaskIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_23C3C6938(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for TaskIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_23C3C6938(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  sub_23C3C6990(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for TaskIdentifier(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_BYTE *)(a2 + 64);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 64) = v3;
  sub_23C3C6990(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TaskIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TaskIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t sub_23C3C6C24(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 64) <= 1u)
    return *(unsigned __int8 *)(a1 + 64);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23C3C6C3C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_QWORD *)(result + 56) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TaskIdentifier()
{
  return &type metadata for TaskIdentifier;
}

unint64_t sub_23C3C6C7C()
{
  unint64_t result;

  result = qword_256B85448;
  if (!qword_256B85448)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB820, &type metadata for TaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B85448);
  }
  return result;
}

uint64_t sub_23C3C6CC0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_256B845D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23C3F71A0();
  __break(1u);
  return result;
}

uint64_t sub_23C3C6E28(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85458);
  v10 = *(_QWORD *)(type metadata accessor for SearchHistoryItem() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(type metadata accessor for SearchHistoryItem() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_23C3F71A0();
  __break(1u);
  return result;
}

uint64_t sub_23C3C7008(_QWORD *a1)
{
  return sub_23C3C6E28(0, a1[2], 0, a1);
}

uint64_t sub_23C3C701C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[8];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[8];
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 64);
  v12 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v14 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a2 + 48);
  v18 = *(_QWORD *)(a2 + 56);
  v19 = *(unsigned __int8 *)(a2 + 64);
  v75[0] = *(_QWORD *)a1;
  v75[1] = v2;
  v75[2] = v4;
  v75[3] = v5;
  v75[4] = v7;
  v75[5] = v6;
  v75[6] = v8;
  v75[7] = v9;
  v76 = v10;
  v77 = v12;
  v78 = v11;
  v79 = v14;
  v80 = v13;
  v81 = v16;
  v82 = v15;
  v83 = v17;
  v84 = v18;
  v85 = v19;
  if (v10)
  {
    if (v10 == 1)
    {
      if (v19 == 1)
      {
        v52 = v8;
        v54 = v7;
        v56 = v6;
        v48 = v15;
        v50 = v4;
        v45 = v17;
        v46 = v18;
        if (v5)
        {
          v59 = v3;
          v60 = v2;
          v61 = v4;
          v62 = v5;
          v63 = v7;
          v64 = v6;
          v65 = v8;
          v66 = v9;
          if (v13)
          {
            v58[0] = v12;
            v58[1] = v11;
            v58[2] = v14;
            v58[3] = v13;
            v58[4] = v16;
            v58[5] = v15;
            v58[6] = v17;
            v58[7] = v18;
            v20 = 1;
            sub_23C3C6938(v3, v2, v4, v5, v7, v6, v8, v9, 1);
            sub_23C3C6938(v12, v11, v14, v13, v16, v48, v45, v46, 1);
            sub_23C3C6938(v3, v2, v50, v5, v54, v56, v52, v9, 1);
            sub_23C3C6938(v12, v11, v14, v13, v16, v48, v45, v46, 1);
            sub_23C3C6938(v3, v2, v50, v5, v54, v56, v52, v9, 1);
            v43 = static SearchResultScope.== infix(_:_:)(&v59, v58);
            sub_23C3C7688((uint64_t)v75);
            sub_23C3C6990(v12, v11, v14, v13, v16, v48, v45, v46, 1);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23C3C6990(v3, v2, v50, v5, v54, v56, v52, v9, 1);
            if ((v43 & 1) != 0)
              return v20 & 1;
            goto LABEL_62;
          }
          v42 = v14;
          v44 = v16;
          v31 = v17;
          v32 = v18;
          sub_23C3C6938(v3, v2, v4, v5, v7, v6, v8, v9, 1);
          sub_23C3C6938(v12, v11, v14, 0, v44, v48, v31, v32, 1);
          v27 = v50;
          sub_23C3C6938(v3, v2, v50, v5, v54, v56, v52, v9, 1);
          sub_23C3C6938(v12, v11, v42, 0, v44, v48, v45, v32, 1);
          sub_23C3C6938(v3, v2, v50, v5, v54, v56, v52, v9, 1);
          sub_23C3C7688((uint64_t)v75);
          swift_bridgeObjectRelease();
          v28 = v52;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v23 = v14;
          v42 = v14;
          v44 = v16;
          v24 = v15;
          v25 = v18;
          sub_23C39A824(v12, v11, v23, v13);
          v20 = 1;
          v26 = v25;
          v27 = v50;
          sub_23C3C6938(v12, v11, v42, v13, v44, v24, v45, v26, 1);
          v28 = v52;
          sub_23C3C6938(v3, v2, v50, 0, v54, v56, v52, v9, 1);
          sub_23C3C7688((uint64_t)v75);
          if (!v13)
            return v20 & 1;
        }
        v59 = v3;
        v60 = v2;
        v61 = v27;
        v62 = v5;
        v63 = v54;
        v64 = v56;
        v65 = v28;
        v66 = v9;
        v67 = v12;
        v68 = v11;
        v69 = v42;
        v70 = v13;
        v71 = v44;
        v72 = v48;
        v73 = v45;
        v74 = v46;
        sub_23C39E570(&v59);
LABEL_62:
        v20 = 0;
        return v20 & 1;
      }
      goto LABEL_61;
    }
    v21 = v7 | v6 | v8;
    if (v4 | v2 | v3 | v5 | v21 | v9)
    {
      v22 = v4 | v2 | v5 | v21 | v9;
      if (v3 != 1 || v22)
      {
        if (v3 != 2 || v22)
        {
          if (v3 != 3 || v22)
          {
            if (v3 != 4 || v22)
            {
              if (v3 != 5 || v22)
              {
                if (v3 != 6 || v22)
                {
                  if (v3 != 7 || v22)
                  {
                    if (v19 != 2 || v12 != 8)
                      goto LABEL_61;
                  }
                  else if (v19 != 2 || v12 != 7)
                  {
                    goto LABEL_61;
                  }
                }
                else if (v19 != 2 || v12 != 6)
                {
                  goto LABEL_61;
                }
              }
              else if (v19 != 2 || v12 != 5)
              {
                goto LABEL_61;
              }
            }
            else if (v19 != 2 || v12 != 4)
            {
              goto LABEL_61;
            }
          }
          else if (v19 != 2 || v12 != 3)
          {
            goto LABEL_61;
          }
        }
        else if (v19 != 2 || v12 != 2)
        {
          goto LABEL_61;
        }
      }
      else if (v19 != 2 || v12 != 1)
      {
        goto LABEL_61;
      }
      if (v14 | v11 | v13 | v16 | v15 | v17 | v18)
      {
LABEL_61:
        v33 = v11;
        v34 = v4;
        v35 = v14;
        v36 = v13;
        v37 = v7;
        v38 = v16;
        v39 = v6;
        v40 = v8;
        sub_23C3C6938(v12, v33, v35, v36, v38, v15, v17, v18, v19);
        sub_23C3C6938(v3, v2, v34, v5, v37, v39, v40, v9, v10);
        sub_23C3C7688((uint64_t)v75);
        goto LABEL_62;
      }
    }
    else if (v19 != 2 || v14 | v11 | v12 | v13 | v16 | v15 | v17 | v18)
    {
      goto LABEL_61;
    }
    sub_23C3C7688((uint64_t)v75);
    v20 = 1;
  }
  else
  {
    if (v19)
      goto LABEL_61;
    v51 = v4;
    v53 = v8;
    v55 = v7;
    v57 = v6;
    if (v3 == v12 && v2 == v11)
    {
      v20 = 1;
    }
    else
    {
      v47 = v18;
      v49 = v15;
      v29 = v17;
      v30 = sub_23C3F72A8();
      v18 = v47;
      v15 = v49;
      v17 = v29;
      v20 = v30;
    }
    sub_23C3C6938(v12, v11, v14, v13, v16, v15, v17, v18, 0);
    sub_23C3C6938(v3, v2, v51, v5, v55, v57, v53, v9, 0);
    sub_23C3C7688((uint64_t)v75);
  }
  return v20 & 1;
}

uint64_t sub_23C3C7688(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  sub_23C3C6990(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  sub_23C3C6990(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

unint64_t sub_23C3C772C()
{
  unint64_t result;

  result = qword_256B85468;
  if (!qword_256B85468)
  {
    result = MEMORY[0x24261DE88](&unk_23C400570, &type metadata for SearchSuggestionError);
    atomic_store(result, (unint64_t *)&qword_256B85468);
  }
  return result;
}

BOOL static SearchPlatform.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23C3C7784(char a1)
{
  return *(_QWORD *)&aPhone_0[8 * a1];
}

uint64_t sub_23C3C77A4()
{
  char *v0;

  return sub_23C3C7784(*v0);
}

uint64_t sub_23C3C77AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3C7D40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3C77D0()
{
  sub_23C3C7B74();
  return sub_23C3F7344();
}

uint64_t sub_23C3C77F8()
{
  sub_23C3C7B74();
  return sub_23C3F7350();
}

uint64_t sub_23C3C7820()
{
  sub_23C3C7C40();
  return sub_23C3F7344();
}

uint64_t sub_23C3C7848()
{
  sub_23C3C7C40();
  return sub_23C3F7350();
}

uint64_t sub_23C3C7870()
{
  sub_23C3C7BFC();
  return sub_23C3F7344();
}

uint64_t sub_23C3C7898()
{
  sub_23C3C7BFC();
  return sub_23C3F7350();
}

uint64_t sub_23C3C78C0()
{
  sub_23C3C7BB8();
  return sub_23C3F7344();
}

uint64_t sub_23C3C78E8()
{
  sub_23C3C7BB8();
  return sub_23C3F7350();
}

uint64_t SearchPlatform.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  char v27;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85478);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85480);
  v18 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85488);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85490);
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3C7B74();
  sub_23C3F7338();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      v26 = 1;
      sub_23C3C7BFC();
      sub_23C3F7230();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    }
    else
    {
      v27 = 2;
      sub_23C3C7BB8();
      v15 = v20;
      sub_23C3F7230();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v22);
    }
  }
  else
  {
    v25 = 0;
    sub_23C3C7C40();
    sub_23C3F7230();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v12);
}

unint64_t sub_23C3C7B74()
{
  unint64_t result;

  result = qword_256B85498;
  if (!qword_256B85498)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBC48, &type metadata for SearchPlatform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85498);
  }
  return result;
}

unint64_t sub_23C3C7BB8()
{
  unint64_t result;

  result = qword_256B854A0;
  if (!qword_256B854A0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBBF8, &type metadata for SearchPlatform.TvCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854A0);
  }
  return result;
}

unint64_t sub_23C3C7BFC()
{
  unint64_t result;

  result = qword_256B854A8;
  if (!qword_256B854A8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBBA8, &type metadata for SearchPlatform.TabletCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854A8);
  }
  return result;
}

unint64_t sub_23C3C7C40()
{
  unint64_t result;

  result = qword_256B854B0;
  if (!qword_256B854B0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBB58, &type metadata for SearchPlatform.PhoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854B0);
  }
  return result;
}

_QWORD *SearchPlatform.init(from:)(_QWORD *a1)
{
  return sub_23C3C7E5C(a1);
}

_QWORD *sub_23C3C7C98@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_23C3C7E5C(a1);
  if (!v2)
    *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_23C3C7CC0(_QWORD *a1)
{
  unsigned __int8 *v1;

  return SearchPlatform.encode(to:)(a1, *v1);
}

uint64_t SearchPlatform.hash(into:)()
{
  return sub_23C3F72FC();
}

uint64_t SearchPlatform.hashValue.getter()
{
  sub_23C3F72F0();
  sub_23C3F72FC();
  return sub_23C3F7320();
}

uint64_t sub_23C3C7D40(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x656E6F6870 && a2 == 0xE500000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74656C626174 && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 30324 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

_QWORD *sub_23C3C7E5C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  char v31;
  char v32;
  char v33;

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85508);
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85510);
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85518);
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85520);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3C7B74();
  v11 = (uint64_t)v30;
  sub_23C3F732C();
  if (v11)
    goto LABEL_7;
  v21 = v4;
  v22 = v8;
  v12 = v29;
  v30 = a1;
  v13 = v10;
  v14 = sub_23C3F7224();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v18 = sub_23C3F7104();
    swift_allocError();
    v10 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v10 = &type metadata for SearchPlatform;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v10, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
    a1 = v30;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v10 = (_QWORD *)*(unsigned __int8 *)(v14 + 32);
  if (*(_BYTE *)(v14 + 32))
  {
    if ((_DWORD)v10 == 1)
    {
      v32 = 1;
      sub_23C3C7BFC();
      v16 = v28;
      sub_23C3F71B8();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v26);
    }
    else
    {
      v33 = 2;
      sub_23C3C7BB8();
      sub_23C3F71B8();
      v17 = v22;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v27);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v13, v15);
  }
  else
  {
    v31 = 0;
    sub_23C3C7C40();
    sub_23C3F71B8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v13, v7);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v10;
}

unint64_t sub_23C3C8238()
{
  unint64_t result;

  result = qword_256B854B8;
  if (!qword_256B854B8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchPlatform, &type metadata for SearchPlatform);
    atomic_store(result, (unint64_t *)&qword_256B854B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchPlatform()
{
  return &type metadata for SearchPlatform;
}

uint64_t _s13FitnessSearch14SearchPlatformOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C3C82E0 + 4 * byte_23C3FB895[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C3C8314 + 4 * byte_23C3FB890[v4]))();
}

uint64_t sub_23C3C8314(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3C831C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3C8324);
  return result;
}

uint64_t sub_23C3C8330(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3C8338);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3C833C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3C8344(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchPlatform.CodingKeys()
{
  return &type metadata for SearchPlatform.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchPlatform.PhoneCodingKeys()
{
  return &type metadata for SearchPlatform.PhoneCodingKeys;
}

ValueMetadata *type metadata accessor for SearchPlatform.TabletCodingKeys()
{
  return &type metadata for SearchPlatform.TabletCodingKeys;
}

ValueMetadata *type metadata accessor for SearchPlatform.TvCodingKeys()
{
  return &type metadata for SearchPlatform.TvCodingKeys;
}

unint64_t sub_23C3C8394()
{
  unint64_t result;

  result = qword_256B854C0;
  if (!qword_256B854C0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBB30, &type metadata for SearchPlatform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854C0);
  }
  return result;
}

unint64_t sub_23C3C83DC()
{
  unint64_t result;

  result = qword_256B854C8;
  if (!qword_256B854C8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBA50, &type metadata for SearchPlatform.PhoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854C8);
  }
  return result;
}

unint64_t sub_23C3C8424()
{
  unint64_t result;

  result = qword_256B854D0;
  if (!qword_256B854D0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBA78, &type metadata for SearchPlatform.PhoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854D0);
  }
  return result;
}

unint64_t sub_23C3C846C()
{
  unint64_t result;

  result = qword_256B854D8;
  if (!qword_256B854D8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBA00, &type metadata for SearchPlatform.TabletCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854D8);
  }
  return result;
}

unint64_t sub_23C3C84B4()
{
  unint64_t result;

  result = qword_256B854E0;
  if (!qword_256B854E0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBA28, &type metadata for SearchPlatform.TabletCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854E0);
  }
  return result;
}

unint64_t sub_23C3C84FC()
{
  unint64_t result;

  result = qword_256B854E8;
  if (!qword_256B854E8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB9B0, &type metadata for SearchPlatform.TvCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854E8);
  }
  return result;
}

unint64_t sub_23C3C8544()
{
  unint64_t result;

  result = qword_256B854F0;
  if (!qword_256B854F0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB9D8, &type metadata for SearchPlatform.TvCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854F0);
  }
  return result;
}

unint64_t sub_23C3C858C()
{
  unint64_t result;

  result = qword_256B854F8;
  if (!qword_256B854F8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBAA0, &type metadata for SearchPlatform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B854F8);
  }
  return result;
}

unint64_t sub_23C3C85D4()
{
  unint64_t result;

  result = qword_256B85500;
  if (!qword_256B85500)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBAC8, &type metadata for SearchPlatform.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85500);
  }
  return result;
}

uint64_t static SearchHistoryItem.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_23C3F72A8() & 1) == 0)
    return 0;
  type metadata accessor for SearchHistoryItem();
  return sub_23C3F6624();
}

uint64_t type metadata accessor for SearchHistoryItem()
{
  uint64_t result;

  result = qword_256B855B0;
  if (!qword_256B855B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SearchHistoryItem.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchHistoryItem.dateCreated.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchHistoryItem() + 20);
  v4 = sub_23C3F6630();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchHistoryItem.init(term:dateCreated:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for SearchHistoryItem() + 20);
  v6 = sub_23C3F6630();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t sub_23C3C8780(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6165724365746164;
  else
    return 1836213620;
}

uint64_t sub_23C3C87B8()
{
  char *v0;

  return sub_23C3C8780(*v0);
}

uint64_t sub_23C3C87C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3C9528(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3C87E4()
{
  sub_23C3C8994();
  return sub_23C3F7344();
}

uint64_t sub_23C3C880C()
{
  sub_23C3C8994();
  return sub_23C3F7350();
}

uint64_t sub_23C3C8834@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SearchHistoryItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85528);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3C8994();
  sub_23C3F7338();
  v8[15] = 0;
  sub_23C3F7260();
  if (!v1)
  {
    type metadata accessor for SearchHistoryItem();
    v8[14] = 1;
    sub_23C3F6630();
    sub_23C39650C(&qword_256B85538, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23C3F7284();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_23C3C8994()
{
  unint64_t result;

  result = qword_256B85530;
  if (!qword_256B85530)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBED4, &type metadata for SearchHistoryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85530);
  }
  return result;
}

uint64_t SearchHistoryItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v22 = a2;
  v4 = sub_23C3F6630();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85540);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SearchHistoryItem();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3C8994();
  sub_23C3F732C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = a1;
  v21 = v6;
  v12 = v11;
  v14 = v23;
  v13 = v24;
  v15 = v25;
  v16 = v26;
  v28 = 0;
  *v12 = sub_23C3F71F4();
  v12[1] = v17;
  v27 = 1;
  sub_23C39650C(&qword_256B85548, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23C3F7218();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v16);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v12 + *(int *)(v9 + 20), v14, v15);
  sub_23C39A678((uint64_t)v12, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_23C3BFB60((uint64_t)v12);
}

uint64_t sub_23C3C8C20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchHistoryItem.init(from:)(a1, a2);
}

uint64_t sub_23C3C8C34(_QWORD *a1)
{
  return SearchHistoryItem.encode(to:)(a1);
}

uint64_t sub_23C3C8C48(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_23C3F72A8() & 1) != 0)
    return sub_23C3F6624();
  else
    return 0;
}

uint64_t SearchHistoryItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  type metadata accessor for SearchHistoryItem();
  sub_23C3F6630();
  sub_23C39650C(qword_256B844C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_23C3F6EE8();
}

uint64_t SearchHistoryItem.hashValue.getter()
{
  sub_23C3F72F0();
  sub_23C3F6F6C();
  type metadata accessor for SearchHistoryItem();
  sub_23C3F6630();
  sub_23C39650C(qword_256B844C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23C3F6EE8();
  return sub_23C3F7320();
}

uint64_t sub_23C3C8DD0()
{
  sub_23C3F72F0();
  sub_23C3F6F6C();
  sub_23C3F6630();
  sub_23C39650C(qword_256B844C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23C3F6EE8();
  return sub_23C3F7320();
}

uint64_t sub_23C3C8E54()
{
  sub_23C3F6F6C();
  sub_23C3F6630();
  sub_23C39650C(qword_256B844C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  return sub_23C3F6EE8();
}

uint64_t sub_23C3C8EC4()
{
  sub_23C3F72F0();
  sub_23C3F6F6C();
  sub_23C3F6630();
  sub_23C39650C(qword_256B844C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23C3F6EE8();
  return sub_23C3F7320();
}

uint64_t sub_23C3C8F44()
{
  return sub_23C39650C(&qword_256B85550, (uint64_t (*)(uint64_t))type metadata accessor for SearchHistoryItem, (uint64_t)&protocol conformance descriptor for SearchHistoryItem);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchHistoryItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23C3F6630();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for SearchHistoryItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23C3F6630();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for SearchHistoryItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23C3F6630();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for SearchHistoryItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23C3F6630();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for SearchHistoryItem(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23C3F6630();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for SearchHistoryItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23C3F6630();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchHistoryItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C3C9214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23C3F6630();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SearchHistoryItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C3C929C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23C3F6630();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23C3C9310()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C3F6630();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchHistoryItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3C93D0 + 4 * byte_23C3FBCD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C3C9404 + 4 * byte_23C3FBCD0[v4]))();
}

uint64_t sub_23C3C9404(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3C940C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3C9414);
  return result;
}

uint64_t sub_23C3C9420(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3C9428);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C3C942C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3C9434(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchHistoryItem.CodingKeys()
{
  return &type metadata for SearchHistoryItem.CodingKeys;
}

unint64_t sub_23C3C9454()
{
  unint64_t result;

  result = qword_256B855E8;
  if (!qword_256B855E8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBEAC, &type metadata for SearchHistoryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B855E8);
  }
  return result;
}

unint64_t sub_23C3C949C()
{
  unint64_t result;

  result = qword_256B855F0;
  if (!qword_256B855F0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBE1C, &type metadata for SearchHistoryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B855F0);
  }
  return result;
}

unint64_t sub_23C3C94E4()
{
  unint64_t result;

  result = qword_256B855F8;
  if (!qword_256B855F8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FBE44, &type metadata for SearchHistoryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B855F8);
  }
  return result;
}

uint64_t sub_23C3C9528(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1836213620 && a2 == 0xE400000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6165724365746164 && a2 == 0xEB00000000646574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C3C9614(char a1)
{
  if ((a1 & 1) != 0)
    return 1701603700;
  else
    return 0x6C6F686563616C70;
}

uint64_t sub_23C3C964C()
{
  char *v0;

  return sub_23C3C9614(*v0);
}

uint64_t sub_23C3C9654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3CCDA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3C9678()
{
  sub_23C3C9B28();
  return sub_23C3F7344();
}

uint64_t sub_23C3C96A0()
{
  sub_23C3C9B28();
  return sub_23C3F7350();
}

uint64_t sub_23C3C96C8()
{
  sub_23C3C9BB0();
  return sub_23C3F7344();
}

uint64_t sub_23C3C96F0()
{
  sub_23C3C9BB0();
  return sub_23C3F7350();
}

uint64_t sub_23C3C9718()
{
  sub_23C3C9B6C();
  return sub_23C3F7344();
}

uint64_t sub_23C3C9740()
{
  sub_23C3C9B6C();
  return sub_23C3F7350();
}

uint64_t SearchContentTile.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85600);
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v29 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v27);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85608);
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SearchContentTile();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85610);
  v32 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3C9B28();
  sub_23C3F7338();
  sub_23C3B607C(v42, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23C3A7BF0((uint64_t)v10, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
    LOBYTE(v33) = 1;
    sub_23C3C9B6C();
    v14 = v29;
    sub_23C3F7230();
    sub_23C39650C(&qword_256B85628, (uint64_t (*)(uint64_t))type metadata accessor for SearchItem, (uint64_t)&protocol conformance descriptor for SearchItem);
    v15 = v31;
    sub_23C3F7284();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v15);
    sub_23C3965D4((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v13, v11);
  }
  else
  {
    v17 = *(_QWORD *)v10;
    v42 = *((_QWORD *)v10 + 1);
    v18 = v42;
    v19 = *((_QWORD *)v10 + 3);
    v30 = *((_QWORD *)v10 + 2);
    v31 = v17;
    v20 = v10[32];
    v21 = *((_QWORD *)v10 + 6);
    v29 = (char *)*((_QWORD *)v10 + 5);
    v22 = *((_QWORD *)v10 + 7);
    v23 = *((_QWORD *)v10 + 8);
    v27 = v22;
    LOBYTE(v33) = 0;
    sub_23C3C9BB0();
    sub_23C3F7230();
    v33 = v31;
    v34 = v18;
    v35 = v30;
    v36 = v19;
    v37 = v20;
    v38 = v29;
    v39 = v21;
    v40 = v27;
    v41 = v23;
    sub_23C3C9BF4();
    v24 = v28;
    sub_23C3F7284();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for SearchContentTile()
{
  uint64_t result;

  result = qword_256B85718;
  if (!qword_256B85718)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C3C9B28()
{
  unint64_t result;

  result = qword_256B85618;
  if (!qword_256B85618)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC330, &type metadata for SearchContentTile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85618);
  }
  return result;
}

unint64_t sub_23C3C9B6C()
{
  unint64_t result;

  result = qword_256B85620;
  if (!qword_256B85620)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC2E0, &type metadata for SearchContentTile.TileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85620);
  }
  return result;
}

unint64_t sub_23C3C9BB0()
{
  unint64_t result;

  result = qword_256B85630;
  if (!qword_256B85630)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC290, &type metadata for SearchContentTile.PlaceholderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85630);
  }
  return result;
}

unint64_t sub_23C3C9BF4()
{
  unint64_t result;

  result = qword_256B85638;
  if (!qword_256B85638)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchItemPlaceholder, &type metadata for SearchItemPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B85638);
  }
  return result;
}

uint64_t SearchContentTile.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _OWORD *v37;
  uint64_t v38;
  _OWORD *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85640);
  v4 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  v46 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85648);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v48 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85650);
  v47 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SearchContentTile();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v39 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v39 - v18;
  v20 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23C3C9B28();
  v21 = v57;
  sub_23C3F732C();
  if (v21)
    goto LABEL_10;
  v39 = v17;
  v40 = v19;
  v41 = v14;
  v22 = v48;
  v23 = v49;
  v57 = v11;
  v24 = sub_23C3F7224();
  if (*(_QWORD *)(v24 + 16) != 1)
  {
    v29 = sub_23C3F7104();
    swift_allocError();
    v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v31 = v57;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x24BEE26D0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v8);
LABEL_10:
    v27 = (uint64_t)v50;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  if ((*(_BYTE *)(v24 + 32) & 1) != 0)
  {
    LOBYTE(v51) = 1;
    sub_23C3C9B6C();
    sub_23C3F71B8();
    type metadata accessor for SearchItem();
    sub_23C39650C(&qword_256B85658, (uint64_t (*)(uint64_t))type metadata accessor for SearchItem, (uint64_t)&protocol conformance descriptor for SearchItem);
    v25 = (uint64_t)v41;
    v26 = v45;
    sub_23C3F7218();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v8);
    v27 = (uint64_t)v50;
    swift_storeEnumTagMultiPayload();
    v28 = v25;
  }
  else
  {
    LOBYTE(v51) = 0;
    sub_23C3C9BB0();
    sub_23C3F71B8();
    sub_23C3CA0F8();
    v33 = v44;
    sub_23C3F7218();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v8);
    v27 = (uint64_t)v50;
    v34 = v52;
    v35 = v53;
    v36 = v54;
    v37 = v39;
    *v39 = v51;
    *((_QWORD *)v37 + 2) = v34;
    *((_QWORD *)v37 + 3) = v35;
    *((_BYTE *)v37 + 32) = v36;
    *(_OWORD *)((char *)v37 + 40) = v55;
    *(_OWORD *)((char *)v37 + 56) = v56;
    swift_storeEnumTagMultiPayload();
    v28 = (uint64_t)v37;
  }
  v38 = (uint64_t)v40;
  sub_23C3A7BF0(v28, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
  sub_23C3A7BF0(v38, v42, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

unint64_t sub_23C3CA0F8()
{
  unint64_t result;

  result = qword_256B85660;
  if (!qword_256B85660)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchItemPlaceholder, &type metadata for SearchItemPlaceholder);
    atomic_store(result, (unint64_t *)&qword_256B85660);
  }
  return result;
}

uint64_t sub_23C3CA13C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchContentTile.init(from:)(a1, a2);
}

uint64_t sub_23C3CA150(_QWORD *a1)
{
  return SearchContentTile.encode(to:)(a1);
}

uint64_t SearchContentTile.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SearchContentTile();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C3B607C(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23C3A7BF0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
    sub_23C3F72FC();
    SearchItem.hash(into:)();
    return sub_23C3965D4((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
  }
  else
  {
    v10 = *(_QWORD *)v7;
    v9 = *((_QWORD *)v7 + 1);
    v12 = *((_QWORD *)v7 + 2);
    v11 = *((_QWORD *)v7 + 3);
    v13 = v7[32];
    v15 = *((_QWORD *)v7 + 5);
    v14 = *((_QWORD *)v7 + 6);
    v16 = *((_QWORD *)v7 + 8);
    v17[0] = *((_QWORD *)v7 + 7);
    sub_23C3F72FC();
    v17[1] = v10;
    v17[2] = v9;
    v17[3] = v12;
    v17[4] = v11;
    v18 = v13;
    v19 = v15;
    v20 = v14;
    v21 = v17[0];
    v22 = v16;
    SearchItemPlaceholder.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t SearchContentTile.hashValue.getter()
{
  sub_23C3F72F0();
  SearchContentTile.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3CA320()
{
  sub_23C3F72F0();
  SearchContentTile.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3CA360()
{
  sub_23C3F72F0();
  SearchContentTile.hash(into:)();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B11ContentTileO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v36;
  _QWORD v37[4];
  char v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[4];
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37[-2] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SearchContentTile();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37[-2] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v37[-2] - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85798);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v37[-2] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_23C3B607C(a1, (uint64_t)v16);
  sub_23C3B607C(a2, v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23C3B607C((uint64_t)v16, (uint64_t)v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23C3A7BF0(v17, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
      v18 = static SearchItem.== infix(_:_:)(v10, v6);
      sub_23C3965D4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
      sub_23C3965D4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
LABEL_9:
      sub_23C3965D4((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      return v18 & 1;
    }
    sub_23C3965D4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
  }
  else
  {
    sub_23C3B607C((uint64_t)v16, (uint64_t)v12);
    v19 = *((_QWORD *)v12 + 1);
    v20 = *((_QWORD *)v12 + 3);
    v21 = *((_QWORD *)v12 + 6);
    v22 = *((_QWORD *)v12 + 8);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v23 = *((_QWORD *)v12 + 7);
      v24 = *((_QWORD *)v12 + 5);
      v25 = v12[32];
      v26 = *((_QWORD *)v12 + 2);
      v27 = *(_QWORD *)v12;
      v28 = *(_QWORD *)v17;
      v29 = *(_QWORD *)(v17 + 8);
      v30 = *(_QWORD *)(v17 + 16);
      v31 = *(_QWORD *)(v17 + 24);
      v32 = *(_BYTE *)(v17 + 32);
      v33 = *(_QWORD *)(v17 + 40);
      v34 = *(_QWORD *)(v17 + 64);
      v42[0] = v27;
      v42[1] = v19;
      v42[2] = v26;
      v42[3] = v20;
      v43 = v25;
      v44 = v24;
      v45 = v21;
      v46 = v23;
      v47 = v22;
      v37[0] = v28;
      v37[1] = v29;
      v37[2] = v30;
      v37[3] = v31;
      v38 = v32;
      v39 = v33;
      v36 = *(_OWORD *)(v17 + 48);
      v40 = v36;
      v41 = v34;
      v18 = _s13FitnessSearch0B15ItemPlaceholderV2eeoiySbAC_ACtFZ_0((uint64_t)v42, (uint64_t)v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23C3CCE90((uint64_t)v16);
  v18 = 0;
  return v18 & 1;
}

uint64_t sub_23C3CA674()
{
  return sub_23C39650C(&qword_256B85668, (uint64_t (*)(uint64_t))type metadata accessor for SearchContentTile, (uint64_t)&protocol conformance descriptor for SearchContentTile);
}

uint64_t initializeBufferWithCopyOfBuffer for SearchContentTile(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int *v44;
  unsigned int (**v45)(const void *, uint64_t, int *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (**v61)(const void *, uint64_t, int *);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  char *v91;
  char *__dst;
  unsigned int (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  char *v95;
  unsigned int (*v96)(char *, uint64_t, uint64_t);
  unsigned int (**v97)(const void *, uint64_t, int *);
  void *v98;
  uint64_t v99;
  uint64_t v100;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
      if (swift_getEnumCaseMultiPayload() == 1)
        v6 = (uint64_t *)&unk_256B85680;
      else
        v6 = (uint64_t *)&unk_256B85678;
      v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      v8 = (int *)type metadata accessor for SearchItem();
      *(_BYTE *)(a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
      *(_BYTE *)(a1 + v8[6]) = *((_BYTE *)a2 + v8[6]);
      *(_QWORD *)(a1 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
      v9 = v8[8];
      v10 = (void *)(a1 + v9);
      v11 = (char *)a2 + v9;
      v12 = sub_23C3F65A0();
      v13 = *(_QWORD *)(v12 - 8);
      v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      v100 = v13;
      if (v96(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      v21 = v8[9];
      v22 = (_QWORD *)(a1 + v21);
      v23 = (uint64_t *)((char *)a2 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      *(_QWORD *)(a1 + v8[10]) = *(uint64_t *)((char *)a2 + v8[10]);
      v25 = v8[11];
      v26 = (_QWORD *)(a1 + v25);
      v27 = (uint64_t *)((char *)a2 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      *(_BYTE *)(a1 + v8[12]) = *((_BYTE *)a2 + v8[12]);
      *(_BYTE *)(a1 + v8[13]) = *((_BYTE *)a2 + v8[13]);
      v29 = v8[14];
      v30 = (_QWORD *)(a1 + v29);
      v31 = (uint64_t *)((char *)a2 + v29);
      v32 = v31[1];
      *v30 = *v31;
      v30[1] = v32;
      v33 = v8[15];
      v34 = (_QWORD *)(a1 + v33);
      v35 = (uint64_t *)((char *)a2 + v33);
      v36 = v35[1];
      *v34 = *v35;
      v34[1] = v36;
      *(_BYTE *)(a1 + v8[16]) = *((_BYTE *)a2 + v8[16]);
      v37 = v8[17];
      v38 = (void *)(a1 + v37);
      v39 = (char *)a2 + v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v96(v39, 1, v12))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v100 + 16))(v38, v39, v12);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v38, 0, 1, v12);
      }
      v41 = v8[18];
      v42 = (char *)(a1 + v41);
      v43 = (char *)a2 + v41;
      v44 = (int *)type metadata accessor for SearchArtwork();
      v45 = (unsigned int (**)(const void *, uint64_t, int *))*((_QWORD *)v44 - 1);
      v99 = v12;
      if (v45[6](v43, 1, v44))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        v47 = sub_23C3F6684();
        v48 = *(_QWORD *)(v47 - 8);
        v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
        v97 = v45;
        v94 = v47;
        v89 = v48;
        if (v93(v43, 1, v47))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v42, v43, v47);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v42, 0, 1, v47);
        }
        v50 = v44[5];
        v51 = &v42[v50];
        v52 = &v43[v50];
        v53 = v42;
        v54 = *((_QWORD *)v52 + 1);
        *(_QWORD *)v51 = *(_QWORD *)v52;
        *((_QWORD *)v51 + 1) = v54;
        v55 = *((_QWORD *)v52 + 3);
        *((_QWORD *)v51 + 2) = *((_QWORD *)v52 + 2);
        *((_QWORD *)v51 + 3) = v55;
        v56 = *((_QWORD *)v52 + 5);
        *((_QWORD *)v51 + 4) = *((_QWORD *)v52 + 4);
        *((_QWORD *)v51 + 5) = v56;
        *(_QWORD *)&v53[v44[6]] = *(_QWORD *)&v43[v44[6]];
        v57 = v44[7];
        v95 = v53;
        v91 = &v43[v57];
        __dst = &v53[v57];
        v58 = sub_23C3F660C();
        v59 = *(_QWORD *)(v58 - 8);
        v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v90(v91, 1, v58))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
          memcpy(__dst, v91, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v59 + 16))(__dst, v91, v58);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v58);
        }
        v61 = v97;
        v62 = v44[8];
        v63 = &v95[v62];
        v64 = &v43[v62];
        if (v93(&v43[v62], 1, v94))
        {
          v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
          memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v63, v64, v94);
          v61 = v97;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v63, 0, 1, v94);
        }
        *(_QWORD *)&v95[v44[9]] = *(_QWORD *)&v43[v44[9]];
        ((void (*)(char *, _QWORD, uint64_t, int *))v61[7])(v95, 0, 1, v44);
      }
      v66 = v8[19];
      v67 = (_QWORD *)(a1 + v66);
      v68 = (uint64_t *)((char *)a2 + v66);
      v69 = v68[1];
      *v67 = *v68;
      v67[1] = v69;
      v70 = v8[20];
      v71 = (_QWORD *)(a1 + v70);
      v72 = (uint64_t *)((char *)a2 + v70);
      v73 = v72[1];
      *v71 = *v72;
      v71[1] = v73;
      v74 = v8[21];
      v75 = (_QWORD *)(a1 + v74);
      v76 = (uint64_t *)((char *)a2 + v74);
      v77 = v76[1];
      *v75 = *v76;
      v75[1] = v77;
      v78 = v8[22];
      v98 = (void *)(a1 + v78);
      v79 = (char *)a2 + v78;
      v80 = sub_23C3F660C();
      v81 = *(_QWORD *)(v80 - 8);
      v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v82(v79, 1, v80))
      {
        v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
        memcpy(v98, v79, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v81 + 16))(v98, v79, v80);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v98, 0, 1, v80);
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 16))(a1 + v8[23], (uint64_t)a2 + v8[23], v99);
      v84 = v8[24];
      v85 = (_QWORD *)(a1 + v84);
      v86 = (uint64_t *)((char *)a2 + v84);
      v87 = v86[1];
      *v85 = *v86;
      v85[1] = v87;
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v16;
      v17 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v17;
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      v18 = a2[6];
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = v18;
      v19 = a2[7];
      v20 = a2[8];
      *(_QWORD *)(a1 + 56) = v19;
      *(_QWORD *)(a1 + 64) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SearchContentTile(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
    if (swift_getEnumCaseMultiPayload() == 1)
      v2 = (uint64_t *)&unk_256B85680;
    else
      v2 = (uint64_t *)&unk_256B85678;
    v3 = __swift_instantiateConcreteTypeFromMangledName(v2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = (int *)type metadata accessor for SearchItem();
    v5 = a1 + v4[8];
    v6 = sub_23C3F65A0();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = a1 + v4[17];
    if (!v8(v9, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
    v10 = a1 + v4[18];
    v11 = type metadata accessor for SearchArtwork();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      v12 = sub_23C3F6684();
      v13 = *(_QWORD *)(v12 - 8);
      v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
      if (!v23(v10, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
      v22 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v10 + *(int *)(v11 + 28);
      v15 = sub_23C3F660C();
      v16 = *(_QWORD *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      v17 = v10 + *(int *)(v11 + 32);
      if (!v23(v17, 1, v12))
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v17, v12);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = a1 + v4[22];
    v19 = sub_23C3F660C();
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1 + v4[23], v6);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchContentTile(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  const void *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(const void *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v83;
  uint64_t v84;
  char *__dst;
  uint64_t v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  unsigned int (*v90)(const void *, uint64_t, uint64_t);
  char *v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
    if (swift_getEnumCaseMultiPayload() == 1)
      v4 = (uint64_t *)&unk_256B85680;
    else
      v4 = (uint64_t *)&unk_256B85678;
    v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
    v6 = (int *)type metadata accessor for SearchItem();
    *(_BYTE *)(a1 + v6[5]) = *(_BYTE *)(a2 + v6[5]);
    *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
    *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
    v7 = v6[8];
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    v10 = sub_23C3F65A0();
    v11 = *(_QWORD *)(v10 - 8);
    v90 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    v94 = v11;
    if (v90(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v17 = v6[9];
    v18 = (_QWORD *)(a1 + v17);
    v19 = (_QWORD *)(a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
    v21 = v6[11];
    v22 = (_QWORD *)(a1 + v21);
    v23 = (_QWORD *)(a2 + v21);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    *(_BYTE *)(a1 + v6[12]) = *(_BYTE *)(a2 + v6[12]);
    *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
    v25 = v6[14];
    v26 = (_QWORD *)(a1 + v25);
    v27 = (_QWORD *)(a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = v6[15];
    v30 = (_QWORD *)(a1 + v29);
    v31 = (_QWORD *)(a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    *(_BYTE *)(a1 + v6[16]) = *(_BYTE *)(a2 + v6[16]);
    v33 = v6[17];
    v34 = (void *)(a1 + v33);
    v35 = (const void *)(a2 + v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v93 = v10;
    if (v90(v35, 1, v10))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v34, v35, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v34, 0, 1, v10);
    }
    v37 = v6[18];
    v38 = (char *)(a1 + v37);
    v39 = (char *)(a2 + v37);
    v40 = (int *)type metadata accessor for SearchArtwork();
    v41 = *((_QWORD *)v40 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v41 + 48))(v39, 1, v40))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v43 = sub_23C3F6684();
      v44 = *(_QWORD *)(v43 - 8);
      v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
      v89 = v41;
      v86 = v43;
      v84 = v44;
      if (v88(v39, 1, v43))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v38, v39, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v38, 0, 1, v43);
      }
      v46 = v40[5];
      v47 = &v38[v46];
      v48 = &v39[v46];
      v49 = *((_QWORD *)v48 + 1);
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = v49;
      v50 = *((_QWORD *)v48 + 3);
      *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
      *((_QWORD *)v47 + 3) = v50;
      v51 = *((_QWORD *)v48 + 5);
      *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
      *((_QWORD *)v47 + 5) = v51;
      *(_QWORD *)&v38[v40[6]] = *(_QWORD *)&v39[v40[6]];
      v52 = v40[7];
      v91 = v38;
      __dst = &v38[v52];
      v53 = &v39[v52];
      v54 = sub_23C3F660C();
      v83 = *(_QWORD *)(v54 - 8);
      v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v87(v53, 1, v54))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
        memcpy(__dst, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 16))(__dst, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(__dst, 0, 1, v54);
      }
      v56 = v40[8];
      v57 = &v91[v56];
      v58 = &v39[v56];
      if (v88(&v39[v56], 1, v86))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v57, v58, v86);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v57, 0, 1, v86);
      }
      *(_QWORD *)&v91[v40[9]] = *(_QWORD *)&v39[v40[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v89 + 56))(v91, 0, 1, v40);
    }
    v60 = v6[19];
    v61 = (_QWORD *)(a1 + v60);
    v62 = (_QWORD *)(a2 + v60);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    v64 = v6[20];
    v65 = (_QWORD *)(a1 + v64);
    v66 = (_QWORD *)(a2 + v64);
    v67 = v66[1];
    *v65 = *v66;
    v65[1] = v67;
    v68 = v6[21];
    v69 = (_QWORD *)(a1 + v68);
    v70 = (_QWORD *)(a2 + v68);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    v72 = v6[22];
    v92 = (void *)(a1 + v72);
    v73 = (const void *)(a2 + v72);
    v74 = sub_23C3F660C();
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v75 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76(v73, 1, v74))
    {
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
      memcpy(v92, v73, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v75 + 16))(v92, v73, v74);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v92, 0, 1, v74);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(a1 + v6[23], a2 + v6[23], v93);
    v78 = v6[24];
    v79 = (_QWORD *)(a1 + v78);
    v80 = (_QWORD *)(a2 + v78);
    v81 = v80[1];
    *v79 = *v80;
    v79[1] = v81;
  }
  else
  {
    v13 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v13;
    v14 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v14;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v15 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v15;
    v16 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for SearchContentTile(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(const void *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  char *v73;
  unsigned int (*__dst)(const void *, uint64_t, uint64_t);
  char *__dsta;
  void *__dstb;
  uint64_t v77;
  uint64_t v78;

  if (a1 != a2)
  {
    sub_23C3965D4(a1, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
      if (swift_getEnumCaseMultiPayload() == 1)
        v4 = (uint64_t *)&unk_256B85680;
      else
        v4 = (uint64_t *)&unk_256B85678;
      v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
      v6 = (int *)type metadata accessor for SearchItem();
      *(_BYTE *)(a1 + v6[5]) = *(_BYTE *)(a2 + v6[5]);
      *(_BYTE *)(a1 + v6[6]) = *(_BYTE *)(a2 + v6[6]);
      *(_QWORD *)(a1 + v6[7]) = *(_QWORD *)(a2 + v6[7]);
      v7 = v6[8];
      v8 = (void *)(a1 + v7);
      v9 = (const void *)(a2 + v7);
      v10 = sub_23C3F65A0();
      v11 = *(_QWORD *)(v10 - 8);
      __dst = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      v78 = v11;
      if (__dst(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = v6[9];
      v14 = (_QWORD *)(a1 + v13);
      v15 = (_QWORD *)(a2 + v13);
      *v14 = *v15;
      v14[1] = v15[1];
      *(_QWORD *)(a1 + v6[10]) = *(_QWORD *)(a2 + v6[10]);
      v16 = v6[11];
      v17 = (_QWORD *)(a1 + v16);
      v18 = (_QWORD *)(a2 + v16);
      *v17 = *v18;
      v17[1] = v18[1];
      *(_BYTE *)(a1 + v6[12]) = *(_BYTE *)(a2 + v6[12]);
      *(_BYTE *)(a1 + v6[13]) = *(_BYTE *)(a2 + v6[13]);
      v19 = v6[14];
      v20 = (_QWORD *)(a1 + v19);
      v21 = (_QWORD *)(a2 + v19);
      *v20 = *v21;
      v20[1] = v21[1];
      v22 = v6[15];
      v23 = (_QWORD *)(a1 + v22);
      v24 = (_QWORD *)(a2 + v22);
      *v23 = *v24;
      v23[1] = v24[1];
      *(_BYTE *)(a1 + v6[16]) = *(_BYTE *)(a2 + v6[16]);
      v25 = v6[17];
      v26 = (void *)(a1 + v25);
      v27 = (const void *)(a2 + v25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v77 = v10;
      if (__dst(v27, 1, v10))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v78 + 16))(v26, v27, v10);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v26, 0, 1, v10);
      }
      v29 = v6[18];
      v30 = (char *)(a1 + v29);
      v31 = (char *)(a2 + v29);
      v32 = (int *)type metadata accessor for SearchArtwork();
      v33 = *((_QWORD *)v32 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v35 = sub_23C3F6684();
        v36 = *(_QWORD *)(v35 - 8);
        v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
        v72 = v35;
        v68 = v36;
        if (v71(v31, 1, v35))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v30, v31, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v30, 0, 1, v35);
        }
        v38 = v32[5];
        v39 = &v30[v38];
        v40 = &v31[v38];
        *(_QWORD *)v39 = *(_QWORD *)v40;
        *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
        *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
        *((_QWORD *)v39 + 3) = *((_QWORD *)v40 + 3);
        *((_QWORD *)v39 + 4) = *((_QWORD *)v40 + 4);
        *((_QWORD *)v39 + 5) = *((_QWORD *)v40 + 5);
        *(_QWORD *)&v30[v32[6]] = *(_QWORD *)&v31[v32[6]];
        v41 = v32[7];
        v73 = v30;
        __dsta = &v30[v41];
        v70 = &v31[v41];
        v42 = sub_23C3F660C();
        v43 = *(_QWORD *)(v42 - 8);
        v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v69(v70, 1, v42))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
          memcpy(__dsta, v70, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dsta, v70, v42);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dsta, 0, 1, v42);
        }
        v45 = v32[8];
        v46 = &v73[v45];
        v47 = &v31[v45];
        if (v71(&v31[v45], 1, v72))
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v46, v47, v72);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v46, 0, 1, v72);
        }
        *(_QWORD *)&v73[v32[9]] = *(_QWORD *)&v31[v32[9]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v33 + 56))(v73, 0, 1, v32);
      }
      v49 = v6[19];
      v50 = (_QWORD *)(a1 + v49);
      v51 = (_QWORD *)(a2 + v49);
      *v50 = *v51;
      v50[1] = v51[1];
      v52 = v6[20];
      v53 = (_QWORD *)(a1 + v52);
      v54 = (_QWORD *)(a2 + v52);
      *v53 = *v54;
      v53[1] = v54[1];
      v55 = v6[21];
      v56 = (_QWORD *)(a1 + v55);
      v57 = (_QWORD *)(a2 + v55);
      *v56 = *v57;
      v56[1] = v57[1];
      v58 = v6[22];
      __dstb = (void *)(a1 + v58);
      v59 = (const void *)(a2 + v58);
      v60 = sub_23C3F660C();
      v61 = *(_QWORD *)(v60 - 8);
      v62 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v61 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v62(v59, 1, v60))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
        memcpy(__dstb, v59, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v61 + 16))(__dstb, v59, v60);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dstb, 0, 1, v60);
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(a1 + v6[23], a2 + v6[23], v77);
      v64 = v6[24];
      v65 = (_QWORD *)(a1 + v64);
      v66 = (_QWORD *)(a2 + v64);
      *v65 = *v66;
      v65[1] = v66[1];
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *initializeWithTake for SearchContentTile(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = (uint64_t *)&unk_256B85680;
    else
      v6 = (uint64_t *)&unk_256B85678;
    v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
    v8 = (int *)type metadata accessor for SearchItem();
    a1[v8[5]] = a2[v8[5]];
    a1[v8[6]] = a2[v8[6]];
    *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
    v9 = v8[8];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_23C3F65A0();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
    *(_QWORD *)&a1[v8[10]] = *(_QWORD *)&a2[v8[10]];
    *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
    a1[v8[12]] = a2[v8[12]];
    a1[v8[13]] = a2[v8[13]];
    *(_OWORD *)&a1[v8[14]] = *(_OWORD *)&a2[v8[14]];
    *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
    a1[v8[16]] = a2[v8[16]];
    v16 = v8[17];
    v17 = &a1[v16];
    v18 = &a2[v16];
    if (v14(&a2[v16], 1, v12))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v18, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    v20 = v8[18];
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = (int *)type metadata accessor for SearchArtwork();
    v24 = *((_QWORD *)v23 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v55 = v13;
      v51 = v12;
      v26 = sub_23C3F6684();
      v27 = *(_QWORD *)(v26 - 8);
      v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      v54 = v24;
      v53 = v26;
      v50 = v27;
      if (v52(v22, 1, v26))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v21, v22, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v21, 0, 1, v26);
      }
      v29 = v23[5];
      v30 = &v21[v29];
      v31 = &v22[v29];
      v32 = *((_OWORD *)v31 + 1);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v32;
      *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
      *(_QWORD *)&v21[v23[6]] = *(_QWORD *)&v22[v23[6]];
      v33 = v23[7];
      v34 = &v21[v33];
      v35 = &v22[v33];
      v36 = sub_23C3F660C();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = v23[8];
      v40 = &v21[v39];
      v41 = &v22[v39];
      v13 = v55;
      if (v52(&v22[v39], 1, v53))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v40, v41, v53);
        v13 = v55;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v40, 0, 1, v53);
      }
      v12 = v51;
      *(_QWORD *)&v21[v23[9]] = *(_QWORD *)&v22[v23[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v54 + 56))(v21, 0, 1, v23);
    }
    *(_OWORD *)&a1[v8[19]] = *(_OWORD *)&a2[v8[19]];
    *(_OWORD *)&a1[v8[20]] = *(_OWORD *)&a2[v8[20]];
    *(_OWORD *)&a1[v8[21]] = *(_OWORD *)&a2[v8[21]];
    v43 = v8[22];
    v44 = &a1[v43];
    v45 = &a2[v43];
    v46 = sub_23C3F660C();
    v47 = *(_QWORD *)(v46 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32))(&a1[v8[23]], &a2[v8[23]], v12);
    *(_OWORD *)&a1[v8[24]] = *(_OWORD *)&a2[v8[24]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *assignWithTake for SearchContentTile(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *__dst;

  if (a1 != a2)
  {
    sub_23C3965D4((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
      if (swift_getEnumCaseMultiPayload() == 1)
        v6 = (uint64_t *)&unk_256B85680;
      else
        v6 = (uint64_t *)&unk_256B85678;
      v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
      v8 = (int *)type metadata accessor for SearchItem();
      a1[v8[5]] = a2[v8[5]];
      a1[v8[6]] = a2[v8[6]];
      *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
      v9 = v8[8];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = sub_23C3F65A0();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      if (v14(v11, 1, v12))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      *(_OWORD *)&a1[v8[9]] = *(_OWORD *)&a2[v8[9]];
      *(_QWORD *)&a1[v8[10]] = *(_QWORD *)&a2[v8[10]];
      *(_OWORD *)&a1[v8[11]] = *(_OWORD *)&a2[v8[11]];
      a1[v8[12]] = a2[v8[12]];
      a1[v8[13]] = a2[v8[13]];
      *(_OWORD *)&a1[v8[14]] = *(_OWORD *)&a2[v8[14]];
      *(_OWORD *)&a1[v8[15]] = *(_OWORD *)&a2[v8[15]];
      a1[v8[16]] = a2[v8[16]];
      v16 = v8[17];
      v17 = &a1[v16];
      v18 = &a2[v16];
      if (v14(&a2[v16], 1, v12))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v18, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
      }
      v20 = v8[18];
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = (int *)type metadata accessor for SearchArtwork();
      v24 = *((_QWORD *)v23 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        __dst = v21;
        v56 = v12;
        v26 = sub_23C3F6684();
        v27 = *(_QWORD *)(v26 - 8);
        v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
        v55 = v13;
        v57 = v24;
        v54 = v26;
        v52 = v27;
        if (v53(v22, 1, v26))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
          v29 = __dst;
          memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 32))(__dst, v22, v26);
          v30 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
          v29 = __dst;
          v30(__dst, 0, 1, v26);
        }
        v31 = v23[5];
        v32 = &v29[v31];
        v33 = &v22[v31];
        v34 = *((_OWORD *)v33 + 1);
        *(_OWORD *)v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v34;
        *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
        *(_QWORD *)&v29[v23[6]] = *(_QWORD *)&v22[v23[6]];
        v35 = v23[7];
        v36 = &v29[v35];
        v37 = &v22[v35];
        v38 = sub_23C3F660C();
        v39 = *(_QWORD *)(v38 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
        {
          v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
        }
        v41 = v23[8];
        v42 = &v29[v41];
        v43 = &v22[v41];
        if (v53(&v22[v41], 1, v54))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v42, v43, v54);
          v29 = __dst;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v42, 0, 1, v54);
        }
        v12 = v56;
        *(_QWORD *)&v29[v23[9]] = *(_QWORD *)&v22[v23[9]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v57 + 56))(v29, 0, 1, v23);
        v13 = v55;
      }
      *(_OWORD *)&a1[v8[19]] = *(_OWORD *)&a2[v8[19]];
      *(_OWORD *)&a1[v8[20]] = *(_OWORD *)&a2[v8[20]];
      *(_OWORD *)&a1[v8[21]] = *(_OWORD *)&a2[v8[21]];
      v45 = v8[22];
      v46 = &a1[v45];
      v47 = &a2[v45];
      v48 = sub_23C3F660C();
      v49 = *(_QWORD *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
      }
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 32))(&a1[v8[23]], &a2[v8[23]], v12);
      *(_OWORD *)&a1[v8[24]] = *(_OWORD *)&a2[v8[24]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23C3CC934()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SearchItem();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchContentTile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3CC9F0 + 4 * byte_23C3FBF35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C3CCA24 + 4 * byte_23C3FBF30[v4]))();
}

uint64_t sub_23C3CCA24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3CCA2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3CCA34);
  return result;
}

uint64_t sub_23C3CCA40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3CCA48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C3CCA4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3CCA54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchContentTile.CodingKeys()
{
  return &type metadata for SearchContentTile.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentTile.PlaceholderCodingKeys()
{
  return &type metadata for SearchContentTile.PlaceholderCodingKeys;
}

uint64_t _s13FitnessSearch17SearchContentTileO21PlaceholderCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C3CCAC4 + 4 * byte_23C3FBF3A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3CCAE4 + 4 * byte_23C3FBF3F[v4]))();
}

_BYTE *sub_23C3CCAC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3CCAE4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3CCAEC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3CCAF4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3CCAFC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3CCB04(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchContentTile.TileCodingKeys()
{
  return &type metadata for SearchContentTile.TileCodingKeys;
}

unint64_t sub_23C3CCB24()
{
  unint64_t result;

  result = qword_256B85750;
  if (!qword_256B85750)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC0F8, &type metadata for SearchContentTile.TileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85750);
  }
  return result;
}

unint64_t sub_23C3CCB6C()
{
  unint64_t result;

  result = qword_256B85758;
  if (!qword_256B85758)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC1B0, &type metadata for SearchContentTile.PlaceholderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85758);
  }
  return result;
}

unint64_t sub_23C3CCBB4()
{
  unint64_t result;

  result = qword_256B85760;
  if (!qword_256B85760)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC268, &type metadata for SearchContentTile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85760);
  }
  return result;
}

unint64_t sub_23C3CCBFC()
{
  unint64_t result;

  result = qword_256B85768;
  if (!qword_256B85768)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC120, &type metadata for SearchContentTile.PlaceholderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85768);
  }
  return result;
}

unint64_t sub_23C3CCC44()
{
  unint64_t result;

  result = qword_256B85770;
  if (!qword_256B85770)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC148, &type metadata for SearchContentTile.PlaceholderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85770);
  }
  return result;
}

unint64_t sub_23C3CCC8C()
{
  unint64_t result;

  result = qword_256B85778;
  if (!qword_256B85778)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC068, &type metadata for SearchContentTile.TileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85778);
  }
  return result;
}

unint64_t sub_23C3CCCD4()
{
  unint64_t result;

  result = qword_256B85780;
  if (!qword_256B85780)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC090, &type metadata for SearchContentTile.TileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85780);
  }
  return result;
}

unint64_t sub_23C3CCD1C()
{
  unint64_t result;

  result = qword_256B85788;
  if (!qword_256B85788)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC1D8, &type metadata for SearchContentTile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85788);
  }
  return result;
}

unint64_t sub_23C3CCD64()
{
  unint64_t result;

  result = qword_256B85790;
  if (!qword_256B85790)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC200, &type metadata for SearchContentTile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85790);
  }
  return result;
}

uint64_t sub_23C3CCDA8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C6F686563616C70 && a2 == 0xEB00000000726564;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701603700 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C3CCE90(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85798);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::String __swiftcall SearchPageState.pageIdentifier(for:)(FitnessSearch::SearchPlatform a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  Swift::String result;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = v1[8];
  v11 = v1[9];
  v13 = v1[10];
  v12 = v1[11];
  v14 = *((unsigned __int8 *)v1 + 96);
  if (a1 != FitnessSearch_SearchPlatform_tv)
    __asm { BR              X5 }
  v15 = 0xD000000000000010;
  if (v14 >= 2)
  {
    if ((_DWORD)v14 == 2)
    {
      if (v8)
      {
        v16 = (void *)0x800000023C4013D0;
      }
      else
      {
        v15 = 0x746C757365526F4ELL;
        v16 = (void *)0xE900000000000073;
      }
    }
    else
    {
      v16 = (void *)0xED0000676E69646ELL;
      v15 = 0x614C686372616553;
      if (v2 | v3 | v4 | v5 | v7 | v6 | v9 | v8 | v10 | v11 | v13 | v12
        && (v3 != 1 || (v4 | v2 | v5 | v7 | v6 | v9 | v8 | v10 | v11 | v13 | v12) != 0))
      {
        v15 = 0x6F46686372616553;
        v16 = (void *)0xEB00000000737563;
      }
    }
  }
  else
  {
    v16 = (void *)0x800000023C4013D0;
  }
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

BOOL static SearechContentMediaType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_23C3CD16C(char a1)
{
  return *(_QWORD *)&aGuidedruguided[8 * a1];
}

uint64_t sub_23C3CD18C()
{
  char *v0;

  return sub_23C3CD16C(*v0);
}

uint64_t sub_23C3CD194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3CD844(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3CD1B8()
{
  sub_23C3CD634();
  return sub_23C3F7344();
}

uint64_t sub_23C3CD1E0()
{
  sub_23C3CD634();
  return sub_23C3F7350();
}

uint64_t sub_23C3CD208()
{
  sub_23C3CD744();
  return sub_23C3F7344();
}

uint64_t sub_23C3CD230()
{
  sub_23C3CD744();
  return sub_23C3F7350();
}

uint64_t sub_23C3CD258()
{
  sub_23C3CD700();
  return sub_23C3F7344();
}

uint64_t sub_23C3CD280()
{
  sub_23C3CD700();
  return sub_23C3F7350();
}

uint64_t sub_23C3CD2A8()
{
  sub_23C3CD678();
  return sub_23C3F7344();
}

uint64_t sub_23C3CD2D0()
{
  sub_23C3CD678();
  return sub_23C3F7350();
}

uint64_t sub_23C3CD2F8()
{
  sub_23C3CD6BC();
  return sub_23C3F7344();
}

uint64_t sub_23C3CD320()
{
  sub_23C3CD6BC();
  return sub_23C3F7350();
}

void SearechContentMediaType.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[10];
  uint64_t v11;

  v11 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B857A0);
  v10[7] = *(_QWORD *)(v3 - 8);
  v10[8] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v10[6] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B857A8);
  v10[4] = *(_QWORD *)(v5 - 8);
  v10[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v10[3] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B857B0);
  v10[1] = *(_QWORD *)(v7 - 8);
  v10[2] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B857B8);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B857C0);
  v10[9] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3CD634();
  sub_23C3F7338();
  __asm { BR              X10 }
}

uint64_t sub_23C3CD500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 0;
  sub_23C3CD744();
  sub_23C3F7230();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v0);
}

unint64_t sub_23C3CD634()
{
  unint64_t result;

  result = qword_256B857C8;
  if (!qword_256B857C8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC830, &type metadata for SearechContentMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B857C8);
  }
  return result;
}

unint64_t sub_23C3CD678()
{
  unint64_t result;

  result = qword_256B857D0;
  if (!qword_256B857D0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC7E0, &type metadata for SearechContentMediaType.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B857D0);
  }
  return result;
}

unint64_t sub_23C3CD6BC()
{
  unint64_t result;

  result = qword_256B857D8;
  if (!qword_256B857D8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC790, &type metadata for SearechContentMediaType.VideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B857D8);
  }
  return result;
}

unint64_t sub_23C3CD700()
{
  unint64_t result;

  result = qword_256B857E0;
  if (!qword_256B857E0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC740, &type metadata for SearechContentMediaType.GuidedWalkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B857E0);
  }
  return result;
}

unint64_t sub_23C3CD744()
{
  unint64_t result;

  result = qword_256B857E8;
  if (!qword_256B857E8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC6F0, &type metadata for SearechContentMediaType.GuidedRunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B857E8);
  }
  return result;
}

uint64_t SearechContentMediaType.init(from:)(_QWORD *a1)
{
  return sub_23C3CD9F0(a1);
}

uint64_t sub_23C3CD79C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23C3CD9F0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_23C3CD7C4(_QWORD *a1)
{
  unsigned __int8 *v1;

  SearechContentMediaType.encode(to:)(a1, *v1);
}

uint64_t SearechContentMediaType.hash(into:)()
{
  return sub_23C3F72FC();
}

uint64_t SearechContentMediaType.hashValue.getter()
{
  sub_23C3F72F0();
  sub_23C3F72FC();
  return sub_23C3F7320();
}

uint64_t sub_23C3CD844(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x7552646564697567 && a2 == 0xE90000000000006ELL;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6157646564697567 && a2 == 0xEA00000000006B6CLL || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F65646976 && a2 == 0xE500000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697461746964656DLL && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C3CD9F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[12];
  _QWORD *v24;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85850);
  v23[10] = *(_QWORD *)(v2 - 8);
  v23[11] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v23[9] = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85858);
  v23[5] = *(_QWORD *)(v4 - 8);
  v23[6] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v23[8] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85860);
  v23[3] = *(_QWORD *)(v6 - 8);
  v23[4] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v23[7] = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85868);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85870);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23C3CD634();
  v17 = v25;
  sub_23C3F732C();
  if (!v17)
  {
    v23[1] = v8;
    v23[2] = v11;
    v23[0] = v9;
    v25 = v13;
    v18 = sub_23C3F7224();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X9 }
    v19 = sub_23C3F7104();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v21 = &type metadata for SearechContentMediaType;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v12;
}

void sub_23C3CDD14()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 67) = 1;
  sub_23C3CD700();
  sub_23C3F71B8();
  if (!v0)
    JUMPOUT(0x23C3CDDE8);
  JUMPOUT(0x23C3CDCC8);
}

void sub_23C3CDD58()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 66) = 2;
  sub_23C3CD6BC();
  sub_23C3F71B8();
  if (!v0)
    JUMPOUT(0x23C3CDD98);
  JUMPOUT(0x23C3CDCC8);
}

void sub_23C3CDDA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = 3;
  sub_23C3CD678();
  sub_23C3F71B8();
  if (!v0)
    JUMPOUT(0x23C3CDDE8);
  JUMPOUT(0x23C3CDCC8);
}

unint64_t sub_23C3CDE18()
{
  unint64_t result;

  result = qword_256B857F0;
  if (!qword_256B857F0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearechContentMediaType, &type metadata for SearechContentMediaType);
    atomic_store(result, (unint64_t *)&qword_256B857F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearechContentMediaType()
{
  return &type metadata for SearechContentMediaType;
}

uint64_t _s13FitnessSearch23SearechContentMediaTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C3CDEC0 + 4 * byte_23C3FC39D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C3CDEF4 + 4 * byte_23C3FC398[v4]))();
}

uint64_t sub_23C3CDEF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3CDEFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3CDF04);
  return result;
}

uint64_t sub_23C3CDF10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3CDF18);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C3CDF1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3CDF24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearechContentMediaType.CodingKeys()
{
  return &type metadata for SearechContentMediaType.CodingKeys;
}

ValueMetadata *type metadata accessor for SearechContentMediaType.GuidedRunCodingKeys()
{
  return &type metadata for SearechContentMediaType.GuidedRunCodingKeys;
}

ValueMetadata *type metadata accessor for SearechContentMediaType.GuidedWalkCodingKeys()
{
  return &type metadata for SearechContentMediaType.GuidedWalkCodingKeys;
}

ValueMetadata *type metadata accessor for SearechContentMediaType.VideoCodingKeys()
{
  return &type metadata for SearechContentMediaType.VideoCodingKeys;
}

ValueMetadata *type metadata accessor for SearechContentMediaType.MeditationCodingKeys()
{
  return &type metadata for SearechContentMediaType.MeditationCodingKeys;
}

unint64_t sub_23C3CDF84()
{
  unint64_t result;

  result = qword_256B857F8;
  if (!qword_256B857F8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC6C8, &type metadata for SearechContentMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B857F8);
  }
  return result;
}

unint64_t sub_23C3CDFCC()
{
  unint64_t result;

  result = qword_256B85800;
  if (!qword_256B85800)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC5E8, &type metadata for SearechContentMediaType.GuidedRunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85800);
  }
  return result;
}

unint64_t sub_23C3CE014()
{
  unint64_t result;

  result = qword_256B85808;
  if (!qword_256B85808)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC610, &type metadata for SearechContentMediaType.GuidedRunCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85808);
  }
  return result;
}

unint64_t sub_23C3CE05C()
{
  unint64_t result;

  result = qword_256B85810;
  if (!qword_256B85810)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC598, &type metadata for SearechContentMediaType.GuidedWalkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85810);
  }
  return result;
}

unint64_t sub_23C3CE0A4()
{
  unint64_t result;

  result = qword_256B85818;
  if (!qword_256B85818)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC5C0, &type metadata for SearechContentMediaType.GuidedWalkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85818);
  }
  return result;
}

unint64_t sub_23C3CE0EC()
{
  unint64_t result;

  result = qword_256B85820;
  if (!qword_256B85820)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC548, &type metadata for SearechContentMediaType.VideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85820);
  }
  return result;
}

unint64_t sub_23C3CE134()
{
  unint64_t result;

  result = qword_256B85828;
  if (!qword_256B85828)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC570, &type metadata for SearechContentMediaType.VideoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85828);
  }
  return result;
}

unint64_t sub_23C3CE17C()
{
  unint64_t result;

  result = qword_256B85830;
  if (!qword_256B85830)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC4F8, &type metadata for SearechContentMediaType.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85830);
  }
  return result;
}

unint64_t sub_23C3CE1C4()
{
  unint64_t result;

  result = qword_256B85838;
  if (!qword_256B85838)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC520, &type metadata for SearechContentMediaType.MeditationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85838);
  }
  return result;
}

unint64_t sub_23C3CE20C()
{
  unint64_t result;

  result = qword_256B85840;
  if (!qword_256B85840)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC638, &type metadata for SearechContentMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85840);
  }
  return result;
}

unint64_t sub_23C3CE254()
{
  unint64_t result;

  result = qword_256B85848;
  if (!qword_256B85848)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FC660, &type metadata for SearechContentMediaType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85848);
  }
  return result;
}

uint64_t SearchLandingSectionDescriptor.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchLandingSectionDescriptor.layout.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SearchLandingSectionDescriptor.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchLandingSectionDescriptor() + 24);
  v4 = sub_23C3F65A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SearchLandingSectionDescriptor()
{
  uint64_t result;

  result = qword_256B85910;
  if (!qword_256B85910)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SearchLandingSectionDescriptor.items.getter()
{
  type metadata accessor for SearchLandingSectionDescriptor();
  return swift_bridgeObjectRetain();
}

uint64_t SearchLandingSectionDescriptor.init(identifier:title:layout:items:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(a6 + 16) = a4 & 1;
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  v9 = type metadata accessor for SearchLandingSectionDescriptor();
  *(_QWORD *)(a6 + *(int *)(v9 + 28)) = a5;
  v10 = a6 + *(int *)(v9 + 24);
  v11 = sub_23C3F65A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a3, v11);
}

uint64_t sub_23C3CE3DC(char a1)
{
  return *(_QWORD *)&aIdentifilayout[8 * a1];
}

uint64_t sub_23C3CE3FC()
{
  char *v0;

  return sub_23C3CE3DC(*v0);
}

uint64_t sub_23C3CE404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3CF628(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3CE428()
{
  sub_23C3CE680();
  return sub_23C3F7344();
}

uint64_t sub_23C3CE450()
{
  sub_23C3CE680();
  return sub_23C3F7350();
}

uint64_t SearchLandingSectionDescriptor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85878);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3CE680();
  sub_23C3F7338();
  v16 = 0;
  sub_23C3F7260();
  if (!v2)
  {
    v15 = *(_BYTE *)(v3 + 16);
    v14 = 1;
    sub_23C3CE6C4();
    sub_23C3F7284();
    v9 = type metadata accessor for SearchLandingSectionDescriptor();
    v13 = 2;
    sub_23C3F65A0();
    sub_23C39650C(&qword_256B85890, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5B8]);
    sub_23C3F7284();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 28));
    v11[15] = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84468);
    sub_23C3950EC(&qword_256B84470, &qword_256B84478, (uint64_t)&protocol conformance descriptor for SearchContentTile, MEMORY[0x24BEE12A0]);
    sub_23C3F7284();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C3CE680()
{
  unint64_t result;

  result = qword_256B85880;
  if (!qword_256B85880)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FCAC4, &type metadata for SearchLandingSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85880);
  }
  return result;
}

unint64_t sub_23C3CE6C4()
{
  unint64_t result;

  result = qword_256B85888;
  if (!qword_256B85888)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchLandingSectionLayout, &type metadata for SearchLandingSectionLayout);
    atomic_store(result, (unint64_t *)&qword_256B85888);
  }
  return result;
}

uint64_t SearchLandingSectionDescriptor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v21 = a2;
  v3 = sub_23C3F65A0();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85898);
  v6 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SearchLandingSectionDescriptor();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_23C3CE680();
  v13 = v26;
  sub_23C3F732C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v26 = v5;
  v14 = v6;
  v15 = v22;
  v16 = v23;
  v32 = 0;
  *(_QWORD *)v11 = sub_23C3F71F4();
  *((_QWORD *)v11 + 1) = v17;
  v30 = 1;
  sub_23C3CEA5C();
  sub_23C3F7218();
  v11[16] = v31;
  v29 = 2;
  sub_23C39650C(&qword_256B858A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5D0]);
  v18 = v26;
  sub_23C3F7218();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v11[*(int *)(v9 + 24)], v18, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B84468);
  v28 = 3;
  sub_23C3950EC(&qword_256B84488, &qword_256B84490, (uint64_t)&protocol conformance descriptor for SearchContentTile, MEMORY[0x24BEE12D0]);
  sub_23C3F7218();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v24);
  *(_QWORD *)&v11[*(int *)(v9 + 28)] = v27;
  sub_23C3CEAA0((uint64_t)v11, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_23C3CEAE4((uint64_t)v11);
}

unint64_t sub_23C3CEA5C()
{
  unint64_t result;

  result = qword_256B858A0;
  if (!qword_256B858A0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchLandingSectionLayout, &type metadata for SearchLandingSectionLayout);
    atomic_store(result, (unint64_t *)&qword_256B858A0);
  }
  return result;
}

uint64_t sub_23C3CEAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchLandingSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3CEAE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchLandingSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C3CEB20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchLandingSectionDescriptor.init(from:)(a1, a2);
}

uint64_t sub_23C3CEB34(_QWORD *a1)
{
  return SearchLandingSectionDescriptor.encode(to:)(a1);
}

uint64_t SearchLandingSectionDescriptor.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F72FC();
  v3 = type metadata accessor for SearchLandingSectionDescriptor();
  sub_23C3F65A0();
  sub_23C39650C(&qword_256B844B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  sub_23C3F6EE8();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 28));
  swift_bridgeObjectRetain();
  sub_23C39562C(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t SearchLandingSectionDescriptor.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_23C3F72F0();
  sub_23C3F6F6C();
  sub_23C3F72FC();
  v1 = type metadata accessor for SearchLandingSectionDescriptor();
  sub_23C3F65A0();
  sub_23C39650C(&qword_256B844B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  sub_23C3F6EE8();
  sub_23C39562C((uint64_t)v3, *(_QWORD *)(v0 + *(int *)(v1 + 28)));
  return sub_23C3F7320();
}

uint64_t sub_23C3CECD0(uint64_t a1)
{
  uint64_t v1;
  _BYTE v4[72];

  sub_23C3F72F0();
  sub_23C3F6F6C();
  sub_23C3F72FC();
  sub_23C3F65A0();
  sub_23C39650C(&qword_256B844B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  sub_23C3F6EE8();
  sub_23C39562C((uint64_t)v4, *(_QWORD *)(v1 + *(int *)(a1 + 28)));
  return sub_23C3F7320();
}

uint64_t sub_23C3CED7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23C3F6F6C();
  sub_23C3F72FC();
  sub_23C3F65A0();
  sub_23C39650C(&qword_256B844B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  sub_23C3F6EE8();
  return sub_23C39562C(a1, *(_QWORD *)(v2 + *(int *)(a2 + 28)));
}

uint64_t sub_23C3CEE10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v5[72];

  sub_23C3F72F0();
  sub_23C3F6F6C();
  sub_23C3F72FC();
  sub_23C3F65A0();
  sub_23C39650C(&qword_256B844B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  sub_23C3F6EE8();
  sub_23C39562C((uint64_t)v5, *(_QWORD *)(v2 + *(int *)(a2 + 28)));
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B24LandingSectionDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if ((v4 || (sub_23C3F72A8() & 1) != 0)
    && *(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16)
    && (v5 = type metadata accessor for SearchLandingSectionDescriptor(), (sub_23C3F657C() & 1) != 0))
  {
    return sub_23C3E9C1C(*(_QWORD *)(a1 + *(int *)(v5 + 28)), *(_QWORD *)(a2 + *(int *)(v5 + 28)));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23C3CEF58()
{
  return sub_23C39650C(&qword_256B858B0, (uint64_t (*)(uint64_t))type metadata accessor for SearchLandingSectionDescriptor, (uint64_t)&protocol conformance descriptor for SearchLandingSectionDescriptor);
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchLandingSectionDescriptor(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 24);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23C3F65A0();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SearchLandingSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23C3F65A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchLandingSectionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C3F65A0();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchLandingSectionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23C3F65A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchLandingSectionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23C3F65A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for SearchLandingSectionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23C3F65A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchLandingSectionDescriptor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C3CF300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23C3F65A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SearchLandingSectionDescriptor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C3CF388(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23C3F65A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23C3CF3FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23C3F65A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchLandingSectionDescriptor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C3CF4D0 + 4 * byte_23C3FC8D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C3CF504 + 4 * byte_23C3FC8D0[v4]))();
}

uint64_t sub_23C3CF504(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3CF50C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3CF514);
  return result;
}

uint64_t sub_23C3CF520(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3CF528);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C3CF52C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3CF534(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchLandingSectionDescriptor.CodingKeys()
{
  return &type metadata for SearchLandingSectionDescriptor.CodingKeys;
}

unint64_t sub_23C3CF554()
{
  unint64_t result;

  result = qword_256B85950;
  if (!qword_256B85950)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FCA9C, &type metadata for SearchLandingSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85950);
  }
  return result;
}

unint64_t sub_23C3CF59C()
{
  unint64_t result;

  result = qword_256B85958;
  if (!qword_256B85958)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FCA0C, &type metadata for SearchLandingSectionDescriptor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85958);
  }
  return result;
}

unint64_t sub_23C3CF5E4()
{
  unint64_t result;

  result = qword_256B85960;
  if (!qword_256B85960)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FCA34, &type metadata for SearchLandingSectionDescriptor.CodingKeys);
    atomic_store(result, &qword_256B85960);
  }
  return result;
}

uint64_t sub_23C3CF628(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

__n128 SearchEnvironment.init(fetchSearchResults:fetchSearchLandingSectionDescriptors:fetchSearchSuggestions:fetchSearchHistory:insertSearchHistory:clearSearchHistory:dismissKeyboard:refreshCanvas:makeDidFinishedDictationStream:clearCanvasState:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __n128 a14, uint64_t a15, uint64_t a16)
{
  __n128 result;

  result = a14;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(_OWORD *)(a9 + 80) = a11;
  *(_OWORD *)(a9 + 96) = a12;
  *(_OWORD *)(a9 + 112) = a13;
  *(__n128 *)(a9 + 128) = a14;
  *(_QWORD *)(a9 + 144) = a15;
  *(_QWORD *)(a9 + 152) = a16;
  return result;
}

uint64_t static SearchEnvironment.default(term:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *a3 = &unk_256B85970;
  a3[1] = v6;
  a3[2] = &unk_256B85978;
  a3[3] = 0;
  a3[4] = &unk_256B85988;
  a3[5] = v7;
  a3[6] = &unk_256B85990;
  a3[7] = 0;
  a3[8] = &unk_256B85998;
  a3[9] = 0;
  a3[10] = &unk_256B859A0;
  a3[11] = 0;
  a3[12] = nullsub_1;
  a3[13] = 0;
  a3[14] = nullsub_1;
  a3[15] = 0;
  a3[16] = &unk_256B859A8;
  a3[17] = 0;
  a3[18] = nullsub_1;
  a3[19] = 0;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23C3CF8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a1;
  v5 = sub_23C3F6654();
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23C3CF934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v6 = *(uint64_t **)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  sub_23C3F6648();
  v7 = sub_23C3F663C();
  v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v10 = MEMORY[0x24BEE4AF8];
  *v6 = v7;
  v6[1] = v9;
  v6[2] = v10;
  v6[3] = v5;
  v6[5] = 0;
  v6[6] = 0;
  v6[4] = v4;
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23C3CF9D0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C3CF9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_23C3B47A4;
  return sub_23C3CF8D0(a1, a2, v7, v6);
}

uint64_t sub_23C3CFA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23C3CFA7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = v0[3];
  v1 = v0[4];
  v3 = (_QWORD *)v0[2];
  *v3 = 0;
  v3[1] = 0;
  v3[2] = MEMORY[0x24BEE4AF8];
  v3[3] = v2;
  v3[4] = v1;
  v5 = (uint64_t (*)(void))v0[1];
  swift_bridgeObjectRetain();
  return v5();
}

uint64_t sub_23C3CFAD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23C3B3D94;
  v6[3] = v5;
  v6[4] = v4;
  v6[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23C3CFB40()
{
  uint64_t v0;

  return sub_23C3CFC20(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x24BEE4AF8]);
}

uint64_t sub_23C3CFB58()
{
  uint64_t v0;

  return sub_23C3CFC14(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23C3CFB68()
{
  uint64_t v0;

  sub_23C3F7020();
  *(_QWORD *)(v0 + 16) = sub_23C3F7014();
  sub_23C3F6FF0();
  return swift_task_switch();
}

uint64_t sub_23C3CFBD0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

ValueMetadata *type metadata accessor for SearchEnvironment()
{
  return &type metadata for SearchEnvironment;
}

uint64_t sub_23C3CFC14(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23C3CFC20(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

unint64_t static SearchConstants.scopesShelfIdentifier.getter()
{
  return 0xD000000000000014;
}

void sub_23C3CFC58()
{
  qword_256B859B0 = 0x6948686372616553;
  *(_QWORD *)algn_256B859B8 = 0xEF736D657449746ELL;
}

uint64_t static SearchConstants.suggestionsShelfIdentifier.getter()
{
  return sub_23C3CFD34(&qword_256B842F0, &qword_256B859B0);
}

void sub_23C3CFCA8()
{
  qword_256B859C0 = 0x6C75736552706F74;
  *(_QWORD *)algn_256B859C8 = 0xEA00000000007374;
}

uint64_t static SearchConstants.topResultIdentifier.getter()
{
  return sub_23C3CFD34(&qword_256B842F8, &qword_256B859C0);
}

void sub_23C3CFCF0()
{
  qword_256B859D0 = 0x7372656E69617274;
  *(_QWORD *)algn_256B859D8 = 0xE800000000000000;
}

uint64_t static SearchConstants.trainersIdentifier.getter()
{
  return sub_23C3CFD34(&qword_256B84300, &qword_256B859D0);
}

uint64_t sub_23C3CFD34(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

ValueMetadata *type metadata accessor for SearchConstants()
{
  return &type metadata for SearchConstants;
}

uint64_t *sub_23C3CFD94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85060);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23C3F67F8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
    v13 = (uint64_t *)((char *)a1 + v10);
    v14 = (uint64_t *)((char *)a2 + v10);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23C3CFE90(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85060);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_23C3F67F8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23C3CFF04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85060);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23C3F67F8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v7;
  v10 = (char *)a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
  v11 = (_QWORD *)((char *)a1 + v8);
  v12 = (_QWORD *)((char *)a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23C3CFFD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  if (a1 != a2)
  {
    sub_23C39AA6C((uint64_t)a1, &qword_256B85060);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85060);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23C3F67F8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_23C3D00DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85060);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23C3F67F8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_23C3D019C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_23C39AA6C((uint64_t)a1, &qword_256B85060);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85060);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23C3F67F8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
  v12 = &a1[v9];
  v13 = &a2[v9];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23C3D0284()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C3D0290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B859E0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23C3D0314()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C3D0320(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256B859E0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SearchHistoryItemView()
{
  uint64_t result;

  result = qword_256B85A40;
  if (!qword_256B85A40)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23C3D03DC()
{
  unint64_t v0;

  sub_23C3D0458();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23C3D0458()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B85A50)
  {
    sub_23C3F67F8();
    v0 = sub_23C3F6774();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B85A50);
  }
}

uint64_t sub_23C3D04AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3D04BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t *v41;
  unsigned __int8 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a1;
  v2 = sub_23C3F6B04();
  v69 = *(_QWORD *)(v2 - 8);
  v70 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v68 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85A88);
  MEMORY[0x24BDAC7A8](v62);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85A90);
  MEMORY[0x24BDAC7A8](v59);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85A98);
  MEMORY[0x24BDAC7A8](v61);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23C3F67F8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v58 - v15;
  v17 = type metadata accessor for SearchHistoryItemView();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85AA0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v58 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v58 - v23;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85AA8);
  MEMORY[0x24BDAC7A8](v60);
  v66 = (uint64_t)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85AB0);
  MEMORY[0x24BDAC7A8](v63);
  v67 = (uint64_t)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85AB8);
  MEMORY[0x24BDAC7A8](v64);
  v65 = (uint64_t)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C3D157C(v1, (uint64_t)v19);
  sub_23C3AF56C((uint64_t)v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, *MEMORY[0x24BDECEA0], v10);
  v28 = sub_23C3F67EC();
  v29 = *(void (**)(char *, uint64_t))(v11 + 8);
  v29(v14, v10);
  v29(v16, v10);
  if ((v28 & 1) != 0)
  {
    *(_QWORD *)v9 = sub_23C3F690C();
    *((_QWORD *)v9 + 1) = 0;
    v9[16] = 0;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85AD8);
    sub_23C3D0B3C((uint64_t)v19, (uint64_t)&v9[*(int *)(v30 + 44)]);
    v31 = &qword_256B85A98;
    sub_23C3B26F0((uint64_t)v9, (uint64_t)v7, &qword_256B85A98);
    swift_storeEnumTagMultiPayload();
    sub_23C3935DC(&qword_256B85AC8, &qword_256B85A98, MEMORY[0x24BDF4498]);
    sub_23C3935DC(&qword_256B85AD0, &qword_256B85A88, MEMORY[0x24BDF4700]);
    v32 = (uint64_t)v58;
    sub_23C3F69B4();
    v33 = (uint64_t)v9;
  }
  else
  {
    *(_QWORD *)v5 = sub_23C3F6960();
    *((_QWORD *)v5 + 1) = 0;
    v5[16] = 0;
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85AC0);
    sub_23C3D0B3C((uint64_t)v19, (uint64_t)&v5[*(int *)(v34 + 44)]);
    v31 = &qword_256B85A88;
    sub_23C3B26F0((uint64_t)v5, (uint64_t)v7, &qword_256B85A88);
    swift_storeEnumTagMultiPayload();
    sub_23C3935DC(&qword_256B85AC8, &qword_256B85A98, MEMORY[0x24BDF4498]);
    sub_23C3935DC(&qword_256B85AD0, &qword_256B85A88, MEMORY[0x24BDF4700]);
    v32 = (uint64_t)v58;
    sub_23C3F69B4();
    v33 = (uint64_t)v5;
  }
  sub_23C39AA6C(v33, v31);
  sub_23C3B2564(v32, (uint64_t)v24, &qword_256B85AA0);
  sub_23C3D15C0((uint64_t)v19);
  sub_23C3F6AEC();
  v36 = v68;
  v35 = v69;
  v37 = v70;
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v68, *MEMORY[0x24BDF17C8], v70);
  v38 = sub_23C3F6B1C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  KeyPath = swift_getKeyPath();
  v40 = v66;
  sub_23C3B26F0((uint64_t)v24, v66, &qword_256B85AA0);
  v41 = (uint64_t *)(v40 + *(int *)(v60 + 36));
  *v41 = KeyPath;
  v41[1] = v38;
  sub_23C39AA6C((uint64_t)v24, &qword_256B85AA0);
  LOBYTE(v38) = sub_23C3F6AB0();
  v42 = sub_23C3F6AA4();
  v43 = sub_23C3F6AC8();
  sub_23C3F6AC8();
  if (sub_23C3F6AC8() != v38)
    v43 = sub_23C3F6AC8();
  sub_23C3F6AC8();
  if (sub_23C3F6AC8() != v42)
    v43 = sub_23C3F6AC8();
  sub_23C3F6750();
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v52 = v67;
  sub_23C3B26F0(v40, v67, &qword_256B85AA8);
  v53 = v52 + *(int *)(v63 + 36);
  *(_BYTE *)v53 = v43;
  *(_QWORD *)(v53 + 8) = v45;
  *(_QWORD *)(v53 + 16) = v47;
  *(_QWORD *)(v53 + 24) = v49;
  *(_QWORD *)(v53 + 32) = v51;
  *(_BYTE *)(v53 + 40) = 0;
  sub_23C39AA6C(v40, &qword_256B85AA8);
  v54 = sub_23C3F6AD4();
  v55 = v65;
  sub_23C3B26F0(v52, v65, &qword_256B85AB0);
  v56 = v55 + *(int *)(v64 + 36);
  *(_BYTE *)v56 = v54;
  *(_OWORD *)(v56 + 8) = 0u;
  *(_OWORD *)(v56 + 24) = 0u;
  *(_BYTE *)(v56 + 40) = 1;
  sub_23C39AA6C(v52, &qword_256B85AB0);
  return sub_23C3B2564(v55, v71, &qword_256B85AB8);
}

uint64_t sub_23C3D0B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  void (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  char v119;
  _BYTE v120[7];
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  _OWORD v137[13];
  uint64_t v138;
  uint64_t v139;
  char v140;
  _BYTE v141[7];
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  char v168;

  v4 = sub_23C3F67F8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v115 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v114 = (uint64_t)&v102 - v8;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85AE0);
  MEMORY[0x24BDAC7A8](v105);
  v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85AE8);
  v107 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v12 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85AF0);
  MEMORY[0x24BDAC7A8](v104);
  v14 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85AF8);
  MEMORY[0x24BDAC7A8](v106);
  v109 = (uint64_t)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85B00);
  MEMORY[0x24BDAC7A8](v108);
  v113 = (uint64_t)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85B08);
  v17 = MEMORY[0x24BDAC7A8](v111);
  v19 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v110 = (uint64_t)&v102 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v102 - v22;
  *(_QWORD *)&v137[0] = sub_23C3F6CD8();
  v24 = *MEMORY[0x24BDECF38];
  v112 = v5;
  v117 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v117(v10, v24, v4);
  sub_23C3D17A4(&qword_256B85B10, MEMORY[0x24BDECF78]);
  result = sub_23C3F6F24();
  if ((result & 1) != 0)
  {
    v102 = v19;
    v103 = a2;
    v116 = v23;
    sub_23C3935DC(&qword_256B85B18, &qword_256B85AE0, MEMORY[0x24BEE30C8]);
    sub_23C3F6BF4();
    sub_23C39AA6C((uint64_t)v10, &qword_256B85AE0);
    swift_release();
    v26 = sub_23C3F6CB4();
    KeyPath = swift_getKeyPath();
    v28 = v107;
    v29 = v118;
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v14, v12, v118);
    v30 = (uint64_t *)&v14[*(int *)(v104 + 36)];
    *v30 = KeyPath;
    v30[1] = v26;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
    LOBYTE(v26) = sub_23C3F6ABC();
    v107 = type metadata accessor for SearchHistoryItemView();
    v105 = *(int *)(v107 + 20);
    sub_23C3F6750();
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v38 = v37;
    v39 = v109;
    sub_23C3B26F0((uint64_t)v14, v109, &qword_256B85AF0);
    v40 = v39 + *(int *)(v106 + 36);
    *(_BYTE *)v40 = v26;
    *(_QWORD *)(v40 + 8) = v32;
    *(_QWORD *)(v40 + 16) = v34;
    *(_QWORD *)(v40 + 24) = v36;
    *(_QWORD *)(v40 + 32) = v38;
    *(_BYTE *)(v40 + 40) = 0;
    sub_23C39AA6C((uint64_t)v14, &qword_256B85AF0);
    v41 = sub_23C3F6AB0();
    v42 = v114;
    sub_23C3AF56C(v114);
    v44 = v115;
    LODWORD(v106) = *MEMORY[0x24BDECEA0];
    v43 = v106;
    v117(v115, v106, v4);
    sub_23C3F67EC();
    v118 = a1;
    v45 = *(void (**)(char *, uint64_t))(v112 + 8);
    v45(v44, v4);
    v45((char *)v42, v4);
    sub_23C3F6750();
    v47 = v46;
    v49 = v48;
    v51 = v50;
    v53 = v52;
    v54 = v113;
    sub_23C3B26F0(v39, v113, &qword_256B85AF8);
    v55 = v54 + *(int *)(v108 + 36);
    *(_BYTE *)v55 = v41;
    *(_QWORD *)(v55 + 8) = v47;
    *(_QWORD *)(v55 + 16) = v49;
    *(_QWORD *)(v55 + 24) = v51;
    *(_QWORD *)(v55 + 32) = v53;
    *(_BYTE *)(v55 + 40) = 0;
    sub_23C39AA6C(v39, &qword_256B85AF8);
    v56 = sub_23C3F6AD4();
    sub_23C3AF56C(v42);
    v57 = v43;
    v58 = v117;
    v117(v44, v57, v4);
    sub_23C3F67EC();
    v45(v44, v4);
    v45((char *)v42, v4);
    sub_23C3F6750();
    v60 = v59;
    v62 = v61;
    v64 = v63;
    v66 = v65;
    v67 = v110;
    sub_23C3B26F0(v54, v110, &qword_256B85B00);
    v68 = v67 + *(int *)(v111 + 36);
    *(_BYTE *)v68 = v56;
    *(_QWORD *)(v68 + 8) = v60;
    *(_QWORD *)(v68 + 16) = v62;
    *(_QWORD *)(v68 + 24) = v64;
    *(_QWORD *)(v68 + 32) = v66;
    *(_BYTE *)(v68 + 40) = 0;
    sub_23C39AA6C(v54, &qword_256B85B00);
    sub_23C3B2564(v67, (uint64_t)v116, &qword_256B85B08);
    v69 = (_QWORD *)(v118 + *(int *)(v107 + 24));
    v70 = v69[1];
    *(_QWORD *)&v137[0] = *v69;
    *((_QWORD *)&v137[0] + 1) = v70;
    sub_23C39365C();
    swift_bridgeObjectRetain();
    v71 = sub_23C3F6B70();
    v112 = v72;
    v113 = v73;
    v75 = v74;
    LOBYTE(v54) = sub_23C3F6ABC();
    sub_23C3AF56C(v42);
    v58(v44, v106, v4);
    sub_23C3F67EC();
    v45(v44, v4);
    v45((char *)v42, v4);
    v75 &= 1u;
    sub_23C3F6750();
    v77 = v76;
    v79 = v78;
    v81 = v80;
    v83 = v82;
    v84 = swift_getKeyPath();
    v85 = v112;
    v157 = v71;
    v158 = v112;
    v159 = v75;
    v160 = v113;
    v161 = v54;
    v162 = v77;
    v163 = v79;
    v164 = v81;
    v165 = v83;
    v166 = 0;
    v167 = v84;
    v168 = 0;
    sub_23C3F6DD4();
    sub_23C3B1138(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v144, 0.0, 1, 0.0, 1);
    sub_23C393710(v71, v85, v75);
    swift_release();
    swift_bridgeObjectRelease();
    v86 = sub_23C3D1420();
    v87 = swift_getKeyPath();
    v119 = 0;
    v118 = sub_23C3F6CA8();
    v88 = swift_getKeyPath();
    v89 = v119;
    v90 = (uint64_t)v116;
    v91 = (uint64_t)v102;
    sub_23C3B26F0((uint64_t)v116, (uint64_t)v102, &qword_256B85B08);
    v92 = v103;
    sub_23C3B26F0(v91, v103, &qword_256B85B08);
    v93 = v92 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B85B20) + 48);
    v131 = v154;
    v132 = v155;
    v133 = v156;
    v127 = v150;
    v128 = v151;
    v129 = v152;
    v130 = v153;
    v125 = v148;
    v126 = v149;
    v123 = v146;
    v124 = v147;
    v121 = v144;
    v122 = v145;
    *(_QWORD *)&v134 = v87;
    *((_QWORD *)&v134 + 1) = v86;
    LOBYTE(v92) = v89;
    LOBYTE(v135) = v89;
    *(_DWORD *)((char *)&v135 + 1) = *(_DWORD *)v120;
    DWORD1(v135) = *(_DWORD *)&v120[3];
    v94 = v118;
    *((_QWORD *)&v135 + 1) = v88;
    v136 = v118;
    *(_QWORD *)(v93 + 240) = v118;
    v95 = v130;
    *(_OWORD *)(v93 + 128) = v129;
    *(_OWORD *)(v93 + 144) = v95;
    v96 = v132;
    *(_OWORD *)(v93 + 160) = v131;
    *(_OWORD *)(v93 + 176) = v96;
    v97 = v126;
    *(_OWORD *)(v93 + 64) = v125;
    *(_OWORD *)(v93 + 80) = v97;
    v98 = v128;
    *(_OWORD *)(v93 + 96) = v127;
    *(_OWORD *)(v93 + 112) = v98;
    v99 = v122;
    *(_OWORD *)v93 = v121;
    *(_OWORD *)(v93 + 16) = v99;
    v100 = v124;
    *(_OWORD *)(v93 + 32) = v123;
    *(_OWORD *)(v93 + 48) = v100;
    v101 = v134;
    *(_OWORD *)(v93 + 192) = v133;
    *(_OWORD *)(v93 + 208) = v101;
    *(_OWORD *)(v93 + 224) = v135;
    sub_23C3D16B4((uint64_t)&v121);
    sub_23C39AA6C(v90, &qword_256B85B08);
    v137[10] = v154;
    v137[11] = v155;
    v137[12] = v156;
    v137[6] = v150;
    v137[7] = v151;
    v137[8] = v152;
    v137[9] = v153;
    v137[2] = v146;
    v137[3] = v147;
    v137[4] = v148;
    v137[5] = v149;
    v137[0] = v144;
    v137[1] = v145;
    v138 = v87;
    v139 = v86;
    v140 = v92;
    *(_DWORD *)v141 = *(_DWORD *)v120;
    *(_DWORD *)&v141[3] = *(_DWORD *)&v120[3];
    v142 = v88;
    v143 = v94;
    sub_23C3D172C((uint64_t)v137);
    return sub_23C39AA6C(v91, &qword_256B85B08);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23C3D1420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, _QWORD, uint64_t);
  char v8;
  void (*v9)(char *, uint64_t);
  char v11;
  uint64_t v12;

  v0 = sub_23C3F67F8();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v12 - v5;
  sub_23C3AF56C((uint64_t)&v12 - v5);
  v7 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v7(v4, *MEMORY[0x24BDECF18], v0);
  v8 = sub_23C3F67EC();
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v4, v0);
  v9(v6, v0);
  if ((v8 & 1) != 0)
    return 1;
  sub_23C3AF56C((uint64_t)v6);
  v7(v4, *MEMORY[0x24BDECEA0], v0);
  sub_23C3D17A4(&qword_256B85B28, MEMORY[0x24BDECF70]);
  v11 = sub_23C3F6F0C();
  v9(v4, v0);
  v9(v6, v0);
  if ((v11 & 1) != 0)
    return 3;
  else
    return 2;
}

uint64_t sub_23C3D157C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchHistoryItemView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3D15C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchHistoryItemView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C3D160C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23C3F68AC();
  *a1 = result;
  return result;
}

uint64_t sub_23C3D1634()
{
  return sub_23C3F68B8();
}

uint64_t sub_23C3D1658@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_23C3F68DC();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23C3D1688()
{
  return sub_23C3F68E8();
}

uint64_t sub_23C3D16B4(uint64_t a1)
{
  sub_23C3936A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C3D172C(uint64_t a1)
{
  sub_23C393710(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_23C3D17A4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_23C3F67F8();
    result = MEMORY[0x24261DE88](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C3D17E4()
{
  return sub_23C3D182C(&qword_256B85B30, &qword_256B85AB8, sub_23C3D1810);
}

uint64_t sub_23C3D1810()
{
  return sub_23C3D182C(&qword_256B85B38, &qword_256B85AB0, (uint64_t (*)(void))sub_23C3D1898);
}

uint64_t sub_23C3D182C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C3D1898()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B85B40;
  if (!qword_256B85B40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85AA8);
    v2[0] = sub_23C3D191C();
    v2[1] = sub_23C3935DC(&qword_256B851A8, &qword_256B851B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B85B40);
  }
  return result;
}

unint64_t sub_23C3D191C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B85B48;
  if (!qword_256B85B48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85AA0);
    v2[0] = sub_23C3935DC(&qword_256B85AC8, &qword_256B85A98, MEMORY[0x24BDF4498]);
    v2[1] = sub_23C3935DC(&qword_256B85AD0, &qword_256B85A88, MEMORY[0x24BDF4700]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B85B48);
  }
  return result;
}

uint64_t sub_23C3D19B8(char a1)
{
  return *(_QWORD *)&aIdle_0[8 * a1];
}

uint64_t sub_23C3D19D8()
{
  char *v0;

  return sub_23C3D19B8(*v0);
}

uint64_t sub_23C3D19E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3D4BC0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C3D1A04(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_23C3D1A10()
{
  sub_23C3D22F8();
  return sub_23C3F7344();
}

uint64_t sub_23C3D1A38()
{
  sub_23C3D22F8();
  return sub_23C3F7350();
}

uint64_t sub_23C3D1A60()
{
  sub_23C3D2380();
  return sub_23C3F7344();
}

uint64_t sub_23C3D1A88()
{
  sub_23C3D2380();
  return sub_23C3F7350();
}

uint64_t sub_23C3D1AB0()
{
  sub_23C3D2408();
  return sub_23C3F7344();
}

uint64_t sub_23C3D1AD8()
{
  sub_23C3D2408();
  return sub_23C3F7350();
}

uint64_t sub_23C3D1B00()
{
  sub_23C3D2490();
  return sub_23C3F7344();
}

uint64_t sub_23C3D1B28()
{
  sub_23C3D2490();
  return sub_23C3F7350();
}

uint64_t sub_23C3D1B50()
{
  sub_23C3D244C();
  return sub_23C3F7344();
}

uint64_t sub_23C3D1B78()
{
  sub_23C3D244C();
  return sub_23C3F7350();
}

uint64_t sub_23C3D1BA0()
{
  sub_23C3D233C();
  return sub_23C3F7344();
}

uint64_t sub_23C3D1BC8()
{
  sub_23C3D233C();
  return sub_23C3F7350();
}

uint64_t sub_23C3D1BF0()
{
  sub_23C3D23C4();
  return sub_23C3F7344();
}

uint64_t sub_23C3D1C18()
{
  sub_23C3D23C4();
  return sub_23C3F7350();
}

void SearchPageState.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85B50);
  v21 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v26 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85B58);
  v20 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v24 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85B60);
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85B68);
  v18 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v17 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85B70);
  v15[1] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v15[0] = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85B78);
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85B80);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v9 = v1[1];
  v40 = *v1;
  v41 = v9;
  v10 = v1[2];
  v36 = v1[3];
  v37 = v10;
  v11 = v1[4];
  v12 = v1[5];
  v32 = v1[6];
  v33 = v11;
  v13 = v1[7];
  v34 = v1[8];
  v35 = v12;
  v30 = v1[9];
  v31 = v13;
  v29 = v1[10];
  v28 = v1[11];
  v14 = *((unsigned __int8 *)v1 + 96);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3D22F8();
  sub_23C3F7338();
  __asm { BR              X9 }
}

uint64_t sub_23C3D1F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 152) = 3;
  sub_23C3D23C4();
  v3 = *(_QWORD *)(v2 - 184);
  sub_23C3F7230();
  v4 = *(_QWORD *)(v2 - 312);
  sub_23C3F7260();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 320) + 8))(v0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v1, v3);
}

unint64_t sub_23C3D22F8()
{
  unint64_t result;

  result = qword_256B85B88;
  if (!qword_256B85B88)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD474, &type metadata for SearchPageState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85B88);
  }
  return result;
}

unint64_t sub_23C3D233C()
{
  unint64_t result;

  result = qword_256B85B90;
  if (!qword_256B85B90)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD424, &type metadata for SearchPageState.ResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85B90);
  }
  return result;
}

unint64_t sub_23C3D2380()
{
  unint64_t result;

  result = qword_256B85B98;
  if (!qword_256B85B98)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD3D4, &type metadata for SearchPageState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85B98);
  }
  return result;
}

unint64_t sub_23C3D23C4()
{
  unint64_t result;

  result = qword_256B85BA0;
  if (!qword_256B85BA0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD384, &type metadata for SearchPageState.SuggestionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85BA0);
  }
  return result;
}

unint64_t sub_23C3D2408()
{
  unint64_t result;

  result = qword_256B85BA8;
  if (!qword_256B85BA8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD334, &type metadata for SearchPageState.HistoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85BA8);
  }
  return result;
}

unint64_t sub_23C3D244C()
{
  unint64_t result;

  result = qword_256B85BB0;
  if (!qword_256B85BB0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD2E4, &type metadata for SearchPageState.LandingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85BB0);
  }
  return result;
}

unint64_t sub_23C3D2490()
{
  unint64_t result;

  result = qword_256B85BB8;
  if (!qword_256B85BB8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD294, &type metadata for SearchPageState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85BB8);
  }
  return result;
}

uint64_t SearchPageState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[6];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;

  v29 = a2;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85BC0);
  v21[4] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v33 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85BC8);
  v21[3] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v32 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85BD0);
  v21[2] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85BD8);
  v23 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v30 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85BE0);
  v21[5] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v28 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85BE8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85BF0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23C3D22F8();
  v15 = v35;
  sub_23C3F732C();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v35 = v11;
    v16 = sub_23C3F7224();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X10 }
    v17 = sub_23C3F7104();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v19 = &type metadata for SearchPageState;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t sub_23C3D2E90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchPageState.init(from:)(a1, a2);
}

void sub_23C3D2EA4(_QWORD *a1)
{
  SearchPageState.encode(to:)(a1);
}

void SearchPageState.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_23C3D2F10()
{
  sub_23C3F72FC();
  return sub_23C3F6F6C();
}

uint64_t sub_23C3D2F48()
{
  sub_23C3F72FC();
  sub_23C3F6F6C();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t SearchPageState.hashValue.getter()
{
  sub_23C3F72F0();
  SearchPageState.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3D31E4()
{
  sub_23C3F72F0();
  SearchPageState.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3D324C()
{
  sub_23C3F72F0();
  SearchPageState.hash(into:)();
  return sub_23C3F7320();
}

void _s13FitnessSearch0B9PageStateO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23C3D334C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[312];

  if (a8)
  {
    v43 = v13;
    v41 = v21;
    v42 = a3;
    v25 = v19;
    v26 = v18;
    v28 = v20;
    v29 = v15;
    v30 = v10;
    v31 = v11;
    v32 = v9;
    v33 = v17;
    v34 = v16;
    v35 = v12;
    v36 = v8;
    sub_23C3D4E18(v25, v26, v28, v29, a4, a5, a6, a7, v41, v42, v22, v43, a8);
    sub_23C3D4E18(v14, a2, v34, v33, v30, v32, v36, v54, v31, v35, v56, v55, a1);
    sub_23C3D4EF0((uint64_t)v57);
    v23 = 0;
  }
  else
  {
    v48 = v8;
    v52 = v10;
    v53 = v9;
    v50 = v12;
    v51 = v11;
    if (v14 == v19 && a2 == v18)
    {
      v23 = 1;
    }
    else
    {
      v44 = a3;
      v46 = v17;
      v47 = a4;
      v45 = a7;
      v38 = a6;
      v39 = a5;
      v40 = sub_23C3F72A8();
      a3 = v44;
      a5 = v39;
      a6 = v38;
      v17 = v46;
      a4 = v47;
      a7 = v45;
      v23 = v40;
    }
    sub_23C3D4E18(v19, v18, v20, v15, a4, a5, a6, a7, v21, a3, v22, v13, 0);
    sub_23C3D4E18(v14, a2, v16, v17, v52, v53, v48, v54, v51, v50, v56, v55, 0);
    sub_23C3D4EF0((uint64_t)v57);
  }
  return v23 & 1;
}

unint64_t sub_23C3D3CC0()
{
  unint64_t result;

  result = qword_256B85BF8;
  if (!qword_256B85BF8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchPageState, &type metadata for SearchPageState);
    atomic_store(result, (unint64_t *)&qword_256B85BF8);
  }
  return result;
}

uint64_t destroy for SearchPageState(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 96);
  if (v2 >= 3)
    v2 = *(_DWORD *)result + 3;
  if (v2 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(v1 + 56);
    if (!result)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (v2 > 1)
  {
    return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchPageState(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = *(unsigned __int8 *)(a2 + 96);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v7;
    v8 = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v8;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      v11 = *(_QWORD *)(a2 + 80);
      v10 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v11;
      *(_QWORD *)(a1 + 88) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v16;
      v17 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v17;
    }
    *(_BYTE *)(a1 + 96) = 2;
  }
  else if (v4 == 1)
  {
    v12 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v12;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_BYTE *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
  }
  else if (v4)
  {
    v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    v15 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v15;
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for SearchPageState(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  if ((__int128 *)a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 96);
  if (v4 >= 3)
    v4 = *(_DWORD *)a1 + 3;
  if (v4 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 56))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
    }
  }
  else if (v4 <= 1)
  {
    goto LABEL_9;
  }
  v5 = *((unsigned __int8 *)a2 + 96);
  if (v5 >= 3)
    v5 = *(_DWORD *)a2 + 3;
  if (v5 == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    v6 = *((_QWORD *)a2 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v12 = a2[2];
      v13 = a2[3];
      v14 = a2[5];
      *(_OWORD *)(a1 + 64) = a2[4];
      *(_OWORD *)(a1 + 80) = v14;
      *(_OWORD *)(a1 + 32) = v12;
      *(_OWORD *)(a1 + 48) = v13;
    }
    *(_BYTE *)(a1 + 96) = 2;
  }
  else if (v5 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_BYTE *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
  }
  else if (v5)
  {
    v7 = *a2;
    v8 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)a1 = v7;
    v9 = a2[3];
    v10 = a2[4];
    v11 = a2[5];
    *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    *(_OWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 48) = v9;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_BYTE *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for SearchPageState(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  if (a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 96);
  if (v4 >= 3)
    v4 = *(_DWORD *)a1 + 3;
  if (v4 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 56))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
    }
  }
  else if (v4 <= 1)
  {
    goto LABEL_9;
  }
  v5 = *(unsigned __int8 *)(a2 + 96);
  if (v5 >= 3)
    v5 = *(_DWORD *)a2 + 3;
  if (v5 == 2)
  {
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    v7 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v7;
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 96) = 2;
  }
  else if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_BYTE *)(a1 + 96) = 1;
  }
  else if (v5)
  {
    v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v11;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 96) = 0;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchPageState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 97))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 >= 4)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SearchPageState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 96) = 0;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_BYTE *)(result + 96) = -(char)a2;
  }
  return result;
}

uint64_t sub_23C3D4298(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 96);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_23C3D42B4(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 2)
  {
    v2 = a2 - 3;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 96) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SearchPageState()
{
  return &type metadata for SearchPageState;
}

uint64_t getEnumTagSinglePayload for SearchPageState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchPageState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23C3D43CC + 4 * byte_23C3FCD0B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23C3D4400 + 4 * byte_23C3FCD06[v4]))();
}

uint64_t sub_23C3D4400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3D4408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3D4410);
  return result;
}

uint64_t sub_23C3D441C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3D4424);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23C3D4428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3D4430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchPageState.CodingKeys()
{
  return &type metadata for SearchPageState.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchPageState.IdleCodingKeys()
{
  return &type metadata for SearchPageState.IdleCodingKeys;
}

ValueMetadata *type metadata accessor for SearchPageState.LandingCodingKeys()
{
  return &type metadata for SearchPageState.LandingCodingKeys;
}

ValueMetadata *type metadata accessor for SearchPageState.HistoryCodingKeys()
{
  return &type metadata for SearchPageState.HistoryCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SearchPageState.SuggestionsCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C3D44BC + 4 * byte_23C3FCD10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3D44DC + 4 * byte_23C3FCD15[v4]))();
}

_BYTE *sub_23C3D44BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3D44DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3D44E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3D44EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3D44F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3D44FC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchPageState.SuggestionsCodingKeys()
{
  return &type metadata for SearchPageState.SuggestionsCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SearchPageState.FetchingCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3D4564 + 4 * byte_23C3FCD1F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C3D4598 + 4 * byte_23C3FCD1A[v4]))();
}

uint64_t sub_23C3D4598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3D45A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3D45A8);
  return result;
}

uint64_t sub_23C3D45B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3D45BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C3D45C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3D45C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchPageState.FetchingCodingKeys()
{
  return &type metadata for SearchPageState.FetchingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SearchPageState.ResultsCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C3D4630 + 4 * byte_23C3FCD29[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C3D4664 + 4 * byte_23C3FCD24[v4]))();
}

uint64_t sub_23C3D4664(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3D466C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3D4674);
  return result;
}

uint64_t sub_23C3D4680(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3D4688);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3D468C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3D4694(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchPageState.ResultsCodingKeys()
{
  return &type metadata for SearchPageState.ResultsCodingKeys;
}

unint64_t sub_23C3D46B4()
{
  unint64_t result;

  result = qword_256B85C00;
  if (!qword_256B85C00)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FCF54, &type metadata for SearchPageState.ResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C00);
  }
  return result;
}

unint64_t sub_23C3D46FC()
{
  unint64_t result;

  result = qword_256B85C08;
  if (!qword_256B85C08)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD00C, &type metadata for SearchPageState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C08);
  }
  return result;
}

unint64_t sub_23C3D4744()
{
  unint64_t result;

  result = qword_256B85C10;
  if (!qword_256B85C10)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD0C4, &type metadata for SearchPageState.SuggestionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C10);
  }
  return result;
}

unint64_t sub_23C3D478C()
{
  unint64_t result;

  result = qword_256B85C18;
  if (!qword_256B85C18)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD26C, &type metadata for SearchPageState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C18);
  }
  return result;
}

unint64_t sub_23C3D47D4()
{
  unint64_t result;

  result = qword_256B85C20;
  if (!qword_256B85C20)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD18C, &type metadata for SearchPageState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C20);
  }
  return result;
}

unint64_t sub_23C3D481C()
{
  unint64_t result;

  result = qword_256B85C28;
  if (!qword_256B85C28)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD1B4, &type metadata for SearchPageState.IdleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C28);
  }
  return result;
}

unint64_t sub_23C3D4864()
{
  unint64_t result;

  result = qword_256B85C30;
  if (!qword_256B85C30)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD13C, &type metadata for SearchPageState.LandingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C30);
  }
  return result;
}

unint64_t sub_23C3D48AC()
{
  unint64_t result;

  result = qword_256B85C38;
  if (!qword_256B85C38)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD164, &type metadata for SearchPageState.LandingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C38);
  }
  return result;
}

unint64_t sub_23C3D48F4()
{
  unint64_t result;

  result = qword_256B85C40;
  if (!qword_256B85C40)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD0EC, &type metadata for SearchPageState.HistoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C40);
  }
  return result;
}

unint64_t sub_23C3D493C()
{
  unint64_t result;

  result = qword_256B85C48;
  if (!qword_256B85C48)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD114, &type metadata for SearchPageState.HistoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C48);
  }
  return result;
}

unint64_t sub_23C3D4984()
{
  unint64_t result;

  result = qword_256B85C50;
  if (!qword_256B85C50)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD034, &type metadata for SearchPageState.SuggestionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C50);
  }
  return result;
}

unint64_t sub_23C3D49CC()
{
  unint64_t result;

  result = qword_256B85C58;
  if (!qword_256B85C58)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD05C, &type metadata for SearchPageState.SuggestionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C58);
  }
  return result;
}

unint64_t sub_23C3D4A14()
{
  unint64_t result;

  result = qword_256B85C60;
  if (!qword_256B85C60)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FCF7C, &type metadata for SearchPageState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C60);
  }
  return result;
}

unint64_t sub_23C3D4A5C()
{
  unint64_t result;

  result = qword_256B85C68;
  if (!qword_256B85C68)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FCFA4, &type metadata for SearchPageState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C68);
  }
  return result;
}

unint64_t sub_23C3D4AA4()
{
  unint64_t result;

  result = qword_256B85C70;
  if (!qword_256B85C70)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FCEC4, &type metadata for SearchPageState.ResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C70);
  }
  return result;
}

unint64_t sub_23C3D4AEC()
{
  unint64_t result;

  result = qword_256B85C78;
  if (!qword_256B85C78)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FCEEC, &type metadata for SearchPageState.ResultsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C78);
  }
  return result;
}

unint64_t sub_23C3D4B34()
{
  unint64_t result;

  result = qword_256B85C80;
  if (!qword_256B85C80)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD1DC, &type metadata for SearchPageState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C80);
  }
  return result;
}

unint64_t sub_23C3D4B7C()
{
  unint64_t result;

  result = qword_256B85C88;
  if (!qword_256B85C88)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD204, &type metadata for SearchPageState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85C88);
  }
  return result;
}

uint64_t sub_23C3D4BC0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701602409 && a2 == 0xE400000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E616CLL && a2 == 0xE700000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79726F74736968 && a2 == 0xE700000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEB00000000736E6FLL || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23C3D4E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t result;

  if (a13 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_23C39A824(a5, a6, a7, a8);
  }
  else if (a13 <= 1u)
  {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23C3D4EF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *(_QWORD *)(a1 + 104);
  v2 = *(_QWORD *)(a1 + 120);
  v13 = *(_QWORD *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(_QWORD *)(a1 + 136);
  v5 = *(_QWORD *)(a1 + 144);
  v6 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 160);
  v12 = *(_OWORD *)(a1 + 168);
  v9 = *(_QWORD *)(a1 + 184);
  v8 = *(_QWORD *)(a1 + 192);
  v10 = *(_BYTE *)(a1 + 200);
  sub_23C3A3530(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
  sub_23C3A3530(v14, v13, v2, v3, v4, v5, v6, v7, v12, *((uint64_t *)&v12 + 1), v9, v8, v10);
  return a1;
}

uint64_t sub_23C3D4FC8(char a1)
{
  return *(_QWORD *)&aError_1[8 * a1];
}

uint64_t sub_23C3D4FE8()
{
  char *v0;

  return sub_23C3D4FC8(*v0);
}

uint64_t sub_23C3D4FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3D5964(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3D5014()
{
  sub_23C3D5854();
  return sub_23C3F7344();
}

uint64_t sub_23C3D503C()
{
  sub_23C3D5854();
  return sub_23C3F7350();
}

uint64_t sub_23C3D5064()
{
  sub_23C3D5920();
  return sub_23C3F7344();
}

uint64_t sub_23C3D508C()
{
  sub_23C3D5920();
  return sub_23C3F7350();
}

uint64_t sub_23C3D50B4()
{
  sub_23C3D58DC();
  return sub_23C3F7344();
}

uint64_t sub_23C3D50DC()
{
  sub_23C3D58DC();
  return sub_23C3F7350();
}

uint64_t sub_23C3D5104()
{
  sub_23C3D5898();
  return sub_23C3F7344();
}

uint64_t sub_23C3D512C()
{
  sub_23C3D5898();
  return sub_23C3F7350();
}

uint64_t SearchEditorialContentState.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  char v34;
  char v35;

  v32 = a4;
  v25 = a3;
  v28 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85C90);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85C98);
  v26 = *(_QWORD *)(v8 - 8);
  v27 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85CA0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85CA8);
  v29 = *(_QWORD *)(v15 - 8);
  v30 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3D5854();
  sub_23C3F7338();
  if ((_BYTE)v32)
  {
    if (v32 == 1)
    {
      v34 = 1;
      sub_23C3D58DC();
      v18 = v30;
      sub_23C3F7230();
      v31 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85CC8);
      sub_23C3D6624(&qword_256B85CD0, &qword_256B85CD8, (uint64_t)&protocol conformance descriptor for SearchLandingSectionDescriptor, MEMORY[0x24BEE12A0]);
      v19 = v27;
      sub_23C3F7284();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v17, v18);
    }
    else
    {
      v35 = 2;
      sub_23C3D5898();
      v22 = v30;
      sub_23C3F7230();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v17, v22);
    }
  }
  else
  {
    v33 = 0;
    sub_23C3D5920();
    v21 = v30;
    sub_23C3F7230();
    sub_23C3F7260();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v17, v21);
  }
}

uint64_t SearchEditorialContentState.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_23C3D5AA0(a1);
  if (v1)
    return v3;
  return result;
}

uint64_t sub_23C3D5494@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_23C3D5AA0(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_23C3D54C0(_QWORD *a1)
{
  uint64_t v1;

  return SearchEditorialContentState.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t SearchEditorialContentState.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    if (a4 == 1)
    {
      sub_23C3F72FC();
      return sub_23C395A50(a1, a2);
    }
    else
    {
      return sub_23C3F72FC();
    }
  }
  else
  {
    sub_23C3F72FC();
    return sub_23C3F6F6C();
  }
}

uint64_t SearchEditorialContentState.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE v6[72];

  sub_23C3F72F0();
  if (a3)
  {
    sub_23C3F72FC();
    if (a3 == 1)
      sub_23C395A50((uint64_t)v6, a1);
  }
  else
  {
    sub_23C3F72FC();
    sub_23C3F6F6C();
  }
  return sub_23C3F7320();
}

uint64_t sub_23C3D5600()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 16);
  sub_23C3F72F0();
  if (v2)
  {
    sub_23C3F72FC();
    if (v2 == 1)
      sub_23C395A50((uint64_t)v4, v1);
  }
  else
  {
    sub_23C3F72FC();
    sub_23C3F6F6C();
  }
  return sub_23C3F7320();
}

uint64_t sub_23C3D5698(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 16))
  {
    if (*(_BYTE *)(v1 + 16) == 1)
    {
      sub_23C3F72FC();
      return sub_23C395A50(a1, v3);
    }
    else
    {
      return sub_23C3F72FC();
    }
  }
  else
  {
    sub_23C3F72FC();
    return sub_23C3F6F6C();
  }
}

uint64_t sub_23C3D572C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 16);
  sub_23C3F72F0();
  if (v2)
  {
    sub_23C3F72FC();
    if (v2 == 1)
      sub_23C395A50((uint64_t)v4, v1);
  }
  else
  {
    sub_23C3F72FC();
    sub_23C3F6F6C();
  }
  return sub_23C3F7320();
}

uint64_t sub_23C3D57C0(uint64_t a1, uint64_t a2)
{
  return _s13FitnessSearch0B21EditorialContentStateO2eeoiySbAC_ACtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t _s13FitnessSearch0B21EditorialContentStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
        return sub_23C3E9238(a1, a4);
    }
    else if (a6 == 2 && !(a5 | a4))
    {
      return 1;
    }
    return 0;
  }
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_23C3F72A8();
}

unint64_t sub_23C3D5854()
{
  unint64_t result;

  result = qword_256B85CB0;
  if (!qword_256B85CB0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDA1C, &type metadata for SearchEditorialContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85CB0);
  }
  return result;
}

unint64_t sub_23C3D5898()
{
  unint64_t result;

  result = qword_256B85CB8;
  if (!qword_256B85CB8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD9CC, &type metadata for SearchEditorialContentState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85CB8);
  }
  return result;
}

unint64_t sub_23C3D58DC()
{
  unint64_t result;

  result = qword_256B85CC0;
  if (!qword_256B85CC0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD97C, &type metadata for SearchEditorialContentState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85CC0);
  }
  return result;
}

unint64_t sub_23C3D5920()
{
  unint64_t result;

  result = qword_256B85CE0;
  if (!qword_256B85CE0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD92C, &type metadata for SearchEditorialContentState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85CE0);
  }
  return result;
}

uint64_t sub_23C3D5964(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x726F727265 && a2 == 0xE500000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23C3D5AA0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85D48);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v38 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85D50);
  v5 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  v34 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v37 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85D58);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85D60);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23C3D5854();
  v16 = v40;
  sub_23C3F732C();
  if (v16)
    goto LABEL_9;
  v32 = v8;
  v17 = v7;
  v18 = v37;
  v19 = v38;
  v40 = v12;
  v20 = v14;
  v21 = sub_23C3F7224();
  if (*(_QWORD *)(v21 + 16) != 1)
  {
    v8 = sub_23C3F7104();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v25 = &type metadata for SearchEditorialContentState;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v8);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v11);
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
    return v8;
  }
  v22 = *(unsigned __int8 *)(v21 + 32);
  if (*(_BYTE *)(v21 + 32))
  {
    if (v22 == 1)
    {
      v43 = 1;
      sub_23C3D58DC();
      sub_23C3F71B8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256B85CC8);
      sub_23C3D6624(&qword_256B85D68, &qword_256B85D70, (uint64_t)&protocol conformance descriptor for SearchLandingSectionDescriptor, MEMORY[0x24BEE12D0]);
      v23 = v33;
      sub_23C3F7218();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v23);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v11);
      v8 = v41;
    }
    else
    {
      v44 = 2;
      sub_23C3D5898();
      sub_23C3F71B8();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v11);
      v8 = 0;
    }
    v31 = (uint64_t)v39;
  }
  else
  {
    v42 = 0;
    sub_23C3D5920();
    v26 = v10;
    sub_23C3F71B8();
    LODWORD(v38) = v22;
    v27 = v17;
    v28 = sub_23C3F71F4();
    v29 = v40;
    v8 = v28;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v11);
    v31 = (uint64_t)v39;
  }
  __swift_destroy_boxed_opaque_existential_1(v31);
  return v8;
}

unint64_t sub_23C3D5F68()
{
  unint64_t result;

  result = qword_256B85CE8;
  if (!qword_256B85CE8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchEditorialContentState, &type metadata for SearchEditorialContentState);
    atomic_store(result, (unint64_t *)&qword_256B85CE8);
  }
  return result;
}

uint64_t destroy for SearchEditorialContentState(uint64_t a1)
{
  return sub_23C393554(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13FitnessSearch27SearchEditorialContentStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23C39AAEC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SearchEditorialContentState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23C39AAEC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23C393554(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SearchEditorialContentState(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23C393554(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEditorialContentState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchEditorialContentState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23C3D6140(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23C3D6158(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SearchEditorialContentState()
{
  return &type metadata for SearchEditorialContentState;
}

uint64_t storeEnumTagSinglePayload for SearchEditorialContentState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C3D61CC + 4 * byte_23C3FD575[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C3D6200 + 4 * byte_23C3FD570[v4]))();
}

uint64_t sub_23C3D6200(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3D6208(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3D6210);
  return result;
}

uint64_t sub_23C3D621C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3D6224);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3D6228(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3D6230(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchEditorialContentState.CodingKeys()
{
  return &type metadata for SearchEditorialContentState.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchEditorialContentState.ErrorCodingKeys()
{
  return &type metadata for SearchEditorialContentState.ErrorCodingKeys;
}

uint64_t _s13FitnessSearch27SearchEditorialContentStateO15ErrorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C3D62A0 + 4 * byte_23C3FD57A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3D62C0 + 4 * byte_23C3FD57F[v4]))();
}

_BYTE *sub_23C3D62A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3D62C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3D62C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3D62D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3D62D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3D62E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchEditorialContentState.FetchedCodingKeys()
{
  return &type metadata for SearchEditorialContentState.FetchedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchEditorialContentState.FetchingCodingKeys()
{
  return &type metadata for SearchEditorialContentState.FetchingCodingKeys;
}

unint64_t sub_23C3D6310()
{
  unint64_t result;

  result = qword_256B85CF0;
  if (!qword_256B85CF0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD794, &type metadata for SearchEditorialContentState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85CF0);
  }
  return result;
}

unint64_t sub_23C3D6358()
{
  unint64_t result;

  result = qword_256B85CF8;
  if (!qword_256B85CF8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD84C, &type metadata for SearchEditorialContentState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85CF8);
  }
  return result;
}

unint64_t sub_23C3D63A0()
{
  unint64_t result;

  result = qword_256B85D00;
  if (!qword_256B85D00)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD904, &type metadata for SearchEditorialContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D00);
  }
  return result;
}

unint64_t sub_23C3D63E8()
{
  unint64_t result;

  result = qword_256B85D08;
  if (!qword_256B85D08)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD7BC, &type metadata for SearchEditorialContentState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D08);
  }
  return result;
}

unint64_t sub_23C3D6430()
{
  unint64_t result;

  result = qword_256B85D10;
  if (!qword_256B85D10)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD7E4, &type metadata for SearchEditorialContentState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D10);
  }
  return result;
}

unint64_t sub_23C3D6478()
{
  unint64_t result;

  result = qword_256B85D18;
  if (!qword_256B85D18)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD704, &type metadata for SearchEditorialContentState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D18);
  }
  return result;
}

unint64_t sub_23C3D64C0()
{
  unint64_t result;

  result = qword_256B85D20;
  if (!qword_256B85D20)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD72C, &type metadata for SearchEditorialContentState.FetchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D20);
  }
  return result;
}

unint64_t sub_23C3D6508()
{
  unint64_t result;

  result = qword_256B85D28;
  if (!qword_256B85D28)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD6B4, &type metadata for SearchEditorialContentState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D28);
  }
  return result;
}

unint64_t sub_23C3D6550()
{
  unint64_t result;

  result = qword_256B85D30;
  if (!qword_256B85D30)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD6DC, &type metadata for SearchEditorialContentState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D30);
  }
  return result;
}

unint64_t sub_23C3D6598()
{
  unint64_t result;

  result = qword_256B85D38;
  if (!qword_256B85D38)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD874, &type metadata for SearchEditorialContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D38);
  }
  return result;
}

unint64_t sub_23C3D65E0()
{
  unint64_t result;

  result = qword_256B85D40;
  if (!qword_256B85D40)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FD89C, &type metadata for SearchEditorialContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D40);
  }
  return result;
}

uint64_t sub_23C3D6624(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85CC8);
    v10 = sub_23C3D66A0(a2, a3);
    result = MEMORY[0x24261DE88](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C3D66A0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SearchLandingSectionDescriptor();
    result = MEMORY[0x24261DE88](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23C3D66E4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7247746C75736572;
  else
    return 0x6169726F74696465;
}

uint64_t sub_23C3D6728()
{
  char *v0;

  return sub_23C3D66E4(*v0);
}

uint64_t sub_23C3D6730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3D76E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3D6754()
{
  sub_23C3D7084();
  return sub_23C3F7344();
}

uint64_t sub_23C3D677C()
{
  sub_23C3D7084();
  return sub_23C3F7350();
}

uint64_t sub_23C3D67A4()
{
  sub_23C3D710C();
  return sub_23C3F7344();
}

uint64_t sub_23C3D67CC()
{
  sub_23C3D710C();
  return sub_23C3F7350();
}

uint64_t sub_23C3D67F4()
{
  sub_23C3D70C8();
  return sub_23C3F7344();
}

uint64_t sub_23C3D681C()
{
  sub_23C3D70C8();
  return sub_23C3F7350();
}

uint64_t SearchContentType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85D78);
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85D80);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85D88);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1[1];
  v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3D7084();
  sub_23C3F7338();
  if (v12)
  {
    v23 = 1;
    sub_23C3D70C8();
    sub_23C3F7230();
    v13 = v20;
    sub_23C3F7260();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v13);
  }
  else
  {
    v22 = 0;
    sub_23C3D710C();
    sub_23C3F7230();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v9);
}

uint64_t SearchContentType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  _QWORD *v35;
  char v36;
  char v37;

  v33 = a2;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85DA8);
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85DB0);
  v4 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85DB8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3D7084();
  v11 = v35;
  sub_23C3F732C();
  if (v11)
    goto LABEL_9;
  v12 = v34;
  v29 = v8;
  v35 = a1;
  v13 = sub_23C3F7224();
  v14 = v7;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v19 = sub_23C3F7104();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v21 = &type metadata for SearchContentType;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v14);
    a1 = v35;
LABEL_9:
    v22 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v22);
  }
  if ((*(_BYTE *)(v13 + 32) & 1) != 0)
  {
    v37 = 1;
    sub_23C3D70C8();
    sub_23C3F71B8();
    v15 = v7;
    v16 = v30;
    v17 = sub_23C3F71F4();
    v18 = v29;
    v24 = v17;
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v15);
  }
  else
  {
    v36 = 0;
    sub_23C3D710C();
    sub_23C3F71B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v7);
    v24 = 0;
    v26 = 0;
  }
  v27 = v33;
  *v33 = v24;
  v27[1] = v26;
  v22 = (uint64_t)v35;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_23C3D6DEC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SearchContentType.init(from:)(a1, a2);
}

uint64_t sub_23C3D6E00(_QWORD *a1)
{
  return SearchContentType.encode(to:)(a1);
}

uint64_t SearchContentType.hash(into:)()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_23C3F72FC();
  sub_23C3F72FC();
  return sub_23C3F6F6C();
}

uint64_t SearchContentType.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23C3F72F0();
  sub_23C3F72FC();
  if (v1)
    sub_23C3F6F6C();
  return sub_23C3F7320();
}

uint64_t sub_23C3D6EE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23C3F72F0();
  sub_23C3F72FC();
  if (v1)
    sub_23C3F6F6C();
  return sub_23C3F7320();
}

uint64_t sub_23C3D6F50()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_23C3F72FC();
  sub_23C3F72FC();
  return sub_23C3F6F6C();
}

uint64_t sub_23C3D6FB4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23C3F72F0();
  sub_23C3F72FC();
  if (v1)
    sub_23C3F6F6C();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B11ContentTypeO2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      if (*a1 != *a2 || v3 != v4)
        return sub_23C3F72A8();
      return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

unint64_t sub_23C3D7084()
{
  unint64_t result;

  result = qword_256B85D90;
  if (!qword_256B85D90)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDE38, &type metadata for SearchContentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D90);
  }
  return result;
}

unint64_t sub_23C3D70C8()
{
  unint64_t result;

  result = qword_256B85D98;
  if (!qword_256B85D98)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDDE8, &type metadata for SearchContentType.ResultGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85D98);
  }
  return result;
}

unint64_t sub_23C3D710C()
{
  unint64_t result;

  result = qword_256B85DA0;
  if (!qword_256B85DA0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDD98, &type metadata for SearchContentType.EditorialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85DA0);
  }
  return result;
}

unint64_t sub_23C3D7154()
{
  unint64_t result;

  result = qword_256B85DC0;
  if (!qword_256B85DC0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchContentType, &type metadata for SearchContentType);
    atomic_store(result, (unint64_t *)&qword_256B85DC0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchContentType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SearchContentType(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for SearchContentType(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchContentType(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SearchContentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_23C3D72E4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23C3D72FC(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchContentType()
{
  return &type metadata for SearchContentType;
}

uint64_t storeEnumTagSinglePayload for SearchContentType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3D7378 + 4 * byte_23C3FDAA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C3D73AC + 4 * byte_23C3FDAA0[v4]))();
}

uint64_t sub_23C3D73AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3D73B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3D73BCLL);
  return result;
}

uint64_t sub_23C3D73C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3D73D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C3D73D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3D73DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchContentType.CodingKeys()
{
  return &type metadata for SearchContentType.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchContentType.EditorialCodingKeys()
{
  return &type metadata for SearchContentType.EditorialCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SearchContentType.ResultGroupCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C3D7448 + 4 * byte_23C3FDAAA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3D7468 + 4 * byte_23C3FDAAF[v4]))();
}

_BYTE *sub_23C3D7448(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3D7468(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3D7470(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3D7478(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3D7480(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3D7488(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchContentType.ResultGroupCodingKeys()
{
  return &type metadata for SearchContentType.ResultGroupCodingKeys;
}

unint64_t sub_23C3D74A8()
{
  unint64_t result;

  result = qword_256B85DC8;
  if (!qword_256B85DC8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDC68, &type metadata for SearchContentType.ResultGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85DC8);
  }
  return result;
}

unint64_t sub_23C3D74F0()
{
  unint64_t result;

  result = qword_256B85DD0;
  if (!qword_256B85DD0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDD70, &type metadata for SearchContentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85DD0);
  }
  return result;
}

unint64_t sub_23C3D7538()
{
  unint64_t result;

  result = qword_256B85DD8;
  if (!qword_256B85DD8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDC90, &type metadata for SearchContentType.EditorialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85DD8);
  }
  return result;
}

unint64_t sub_23C3D7580()
{
  unint64_t result;

  result = qword_256B85DE0;
  if (!qword_256B85DE0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDCB8, &type metadata for SearchContentType.EditorialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85DE0);
  }
  return result;
}

unint64_t sub_23C3D75C8()
{
  unint64_t result;

  result = qword_256B85DE8;
  if (!qword_256B85DE8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDBD8, &type metadata for SearchContentType.ResultGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85DE8);
  }
  return result;
}

unint64_t sub_23C3D7610()
{
  unint64_t result;

  result = qword_256B85DF0;
  if (!qword_256B85DF0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDC00, &type metadata for SearchContentType.ResultGroupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85DF0);
  }
  return result;
}

unint64_t sub_23C3D7658()
{
  unint64_t result;

  result = qword_256B85DF8;
  if (!qword_256B85DF8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDCE0, &type metadata for SearchContentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85DF8);
  }
  return result;
}

unint64_t sub_23C3D76A0()
{
  unint64_t result;

  result = qword_256B85E00;
  if (!qword_256B85E00)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDD08, &type metadata for SearchContentType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85E00);
  }
  return result;
}

uint64_t sub_23C3D76E4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6169726F74696465 && a2 == 0xE90000000000006CLL;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7247746C75736572 && a2 == 0xEB0000000070756FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

ValueMetadata *type metadata accessor for SearchSuggestionLabelStyle()
{
  return &type metadata for SearchSuggestionLabelStyle;
}

uint64_t sub_23C3D77F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3D7808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t KeyPath;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a1;
  v1 = sub_23C3F6A2C();
  v34 = *(_QWORD *)(v1 - 8);
  v35 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v33 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)&v31 - v4;
  v5 = sub_23C3F6CE4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23C3F6A14();
  v9 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85E20);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v31 - v16;
  sub_23C3F6A20();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDF40B8], v5);
  KeyPath = swift_getKeyPath();
  v19 = (uint64_t *)&v15[*(int *)(v12 + 36)];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85E28);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v19 + *(int *)(v20 + 28), v8, v5);
  *v19 = KeyPath;
  v21 = v31;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v31);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  sub_23C3D7C54((uint64_t)v15, (uint64_t)v17);
  v22 = v32;
  sub_23C3F6A38();
  sub_23C3B26F0((uint64_t)v17, (uint64_t)v15, &qword_256B85E20);
  v23 = v33;
  v24 = v34;
  v25 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v26 = v35;
  v25(v33, v22, v35);
  v27 = v36;
  sub_23C3B26F0((uint64_t)v15, v36, &qword_256B85E20);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85E30);
  v25((char *)(v27 + *(int *)(v28 + 48)), v23, v26);
  v29 = *(void (**)(char *, uint64_t))(v24 + 8);
  v29(v22, v26);
  sub_23C39AA6C((uint64_t)v17, &qword_256B85E20);
  v29(v23, v26);
  return sub_23C39AA6C((uint64_t)v15, &qword_256B85E20);
}

uint64_t sub_23C3D7AC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t *v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85E08);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v4 = sub_23C3F690C();
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85E10);
  sub_23C3D7808((uint64_t)&v4[*(int *)(v5 + 44)]);
  v6 = sub_23C3F6AEC();
  KeyPath = swift_getKeyPath();
  sub_23C3B26F0((uint64_t)v4, a1, &qword_256B85E08);
  v8 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B85E18) + 36));
  *v8 = KeyPath;
  v8[1] = v6;
  return sub_23C39AA6C((uint64_t)v4, &qword_256B85E08);
}

uint64_t sub_23C3D7BB4()
{
  return sub_23C3F6858();
}

uint64_t sub_23C3D7BD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_23C3F6CE4();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23C3F6864();
}

uint64_t sub_23C3D7C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85E20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23C3D7CA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B85E38;
  if (!qword_256B85E38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85E18);
    v2[0] = sub_23C3935DC(&qword_256B85E40, &qword_256B85E08, MEMORY[0x24BDF4498]);
    v2[1] = sub_23C3935DC(&qword_256B851A8, &qword_256B851B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B85E38);
  }
  return result;
}

uint64_t SearchItem.artworkDescriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C3B26F0(v1, a1, &qword_256B85670);
}

uint64_t SearchItem.assetLoadState.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SearchItem() + 20));
}

uint64_t SearchItem.bookmarked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SearchItem() + 24));
}

uint64_t SearchItem.completedCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchItem() + 28));
}

uint64_t SearchItem.detail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SearchItem();
  return sub_23C3B26F0(v1 + *(int *)(v3 + 32), a1, &qword_256B85688);
}

uint64_t SearchItem.editorialCardIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchItem() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchItem.healthKitActivityTypes.getter()
{
  type metadata accessor for SearchItem();
  return swift_bridgeObjectRetain();
}

uint64_t SearchItem.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchItem() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchItem.isIncompletePlanWorkout.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SearchItem() + 48));
}

uint64_t SearchItem.mediaType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SearchItem() + 52));
}

uint64_t SearchItem.recencyTag.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchItem() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchItem.referenceIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchItem() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchItem.referenceType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SearchItem() + 64));
}

uint64_t SearchItem.subtitle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SearchItem();
  return sub_23C3B26F0(v1 + *(int *)(v3 + 68), a1, &qword_256B85688);
}

uint64_t SearchItem.streamingArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SearchItem();
  return sub_23C3B26F0(v1 + *(int *)(v3 + 72), a1, &qword_256B856A0);
}

uint64_t SearchItem.streamingArtworkCropCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchItem() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchItem.streamingSubtitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchItem() + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchItem.streamingTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchItem() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchItem.streamingURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SearchItem();
  return sub_23C3B26F0(v1 + *(int *)(v3 + 88), a1, &qword_256B85698);
}

uint64_t SearchItem.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SearchItem() + 92);
  v4 = sub_23C3F65A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SearchItem.type.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SearchItem() + 96));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t SearchItem.init(identifier:type:referenceIdentifier:editorialCardIdentifier:referenceType:artworkDescriptor:assetLoadState:bookmarked:title:subtitle:detail:healthKitActivityTypes:mediaType:completedCount:isIncompletePlanWorkout:recencyTag:streamingArtwork:streamingArtworkCropCode:streamingTitle:streamingSubtitle:streamingURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  _QWORD *v41;
  uint64_t v49;
  uint64_t v50;

  v49 = a3[1];
  v50 = *a3;
  sub_23C3B2564(a10, a9, &qword_256B85670);
  v30 = (int *)type metadata accessor for SearchItem();
  *(_BYTE *)(a9 + v30[5]) = a11;
  *(_BYTE *)(a9 + v30[6]) = a12;
  *(_QWORD *)(a9 + v30[7]) = a18;
  sub_23C3B2564(a15, a9 + v30[8], &qword_256B85688);
  v31 = (_QWORD *)(a9 + v30[9]);
  *v31 = a6;
  v31[1] = a7;
  *(_QWORD *)(a9 + v30[10]) = a16;
  v32 = (_QWORD *)(a9 + v30[11]);
  *v32 = a1;
  v32[1] = a2;
  *(_BYTE *)(a9 + v30[12]) = a19;
  *(_BYTE *)(a9 + v30[13]) = a17;
  v33 = (_QWORD *)(a9 + v30[14]);
  *v33 = a20;
  v33[1] = a21;
  v34 = (_QWORD *)(a9 + v30[15]);
  *v34 = a4;
  v34[1] = a5;
  *(_BYTE *)(a9 + v30[16]) = a8;
  sub_23C3B2564(a14, a9 + v30[17], &qword_256B85688);
  sub_23C3B2564(a22, a9 + v30[18], &qword_256B856A0);
  v35 = (_QWORD *)(a9 + v30[19]);
  *v35 = a23;
  v35[1] = a24;
  v36 = (_QWORD *)(a9 + v30[20]);
  *v36 = a27;
  v36[1] = a28;
  v37 = (_QWORD *)(a9 + v30[21]);
  *v37 = a25;
  v37[1] = a26;
  sub_23C3B2564(a29, a9 + v30[22], &qword_256B85698);
  v38 = a9 + v30[23];
  v39 = sub_23C3F65A0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v38, a13, v39);
  v41 = (_QWORD *)(a9 + v30[24]);
  *v41 = v50;
  v41[1] = v49;
  return result;
}

uint64_t sub_23C3D83A4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C3D83DC + 4 * byte_23C3FDF48[a1]))(0xD000000000000011, 0x800000023C401410);
}

uint64_t sub_23C3D83DC()
{
  return 0x616F4C7465737361;
}

uint64_t sub_23C3D8400()
{
  return 0x6B72616D6B6F6F62;
}

uint64_t sub_23C3D841C()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_23C3D8440()
{
  return 0x6C6961746564;
}

uint64_t sub_23C3D8454(uint64_t a1)
{
  return a1 + 6;
}

uint64_t sub_23C3D8560()
{
  return 0x6E696D6165727473;
}

uint64_t sub_23C3D8594()
{
  return 0x656C746974;
}

uint64_t sub_23C3D85A8()
{
  return 1701869940;
}

uint64_t sub_23C3D85B8()
{
  unsigned __int8 *v0;

  return sub_23C3D83A4(*v0);
}

uint64_t sub_23C3D85C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3DE3EC(a1, a2);
  *a3 = result;
  return result;
}

void sub_23C3D85E4(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_23C3D85F0()
{
  sub_23C3DB21C();
  return sub_23C3F7344();
}

uint64_t sub_23C3D8618()
{
  sub_23C3DB21C();
  return sub_23C3F7350();
}

uint64_t SearchItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85E48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3DB21C();
  sub_23C3F7338();
  LOBYTE(v13) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
  sub_23C3DB2E8(&qword_256B85E58, MEMORY[0x24BE35058]);
  sub_23C3F7284();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for SearchItem();
    LOBYTE(v13) = *(_BYTE *)(v3 + v9[5]);
    v14 = 1;
    sub_23C3DB260();
    sub_23C3F7254();
    LOBYTE(v13) = 2;
    sub_23C3F7248();
    LOBYTE(v13) = 3;
    sub_23C3F7278();
    LOBYTE(v13) = 4;
    sub_23C3F65A0();
    sub_23C39650C(&qword_256B85890, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5B8]);
    sub_23C3F7254();
    LOBYTE(v13) = 5;
    sub_23C3F723C();
    *(_QWORD *)&v13 = *(_QWORD *)(v3 + v9[10]);
    v14 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85E68);
    sub_23C3DB370(&qword_256B85E70, MEMORY[0x24BEE1E90], MEMORY[0x24BEE12A0]);
    sub_23C3F7284();
    LOBYTE(v13) = 7;
    sub_23C3F7260();
    LOBYTE(v13) = 8;
    sub_23C3F7248();
    LOBYTE(v13) = *(_BYTE *)(v3 + v9[13]);
    v14 = 9;
    sub_23C3DB2A4();
    sub_23C3F7254();
    LOBYTE(v13) = 10;
    sub_23C3F723C();
    LOBYTE(v13) = 11;
    sub_23C3F7260();
    LOBYTE(v13) = *(_BYTE *)(v3 + v9[16]);
    v14 = 12;
    sub_23C3B5050();
    sub_23C3F7284();
    LOBYTE(v13) = 13;
    sub_23C3F7254();
    v12 = v3 + v9[18];
    LOBYTE(v13) = 14;
    type metadata accessor for SearchArtwork();
    sub_23C39650C(&qword_256B85E80, (uint64_t (*)(uint64_t))type metadata accessor for SearchArtwork, (uint64_t)&protocol conformance descriptor for SearchArtwork);
    sub_23C3F7254();
    LOBYTE(v13) = 15;
    sub_23C3F723C();
    LOBYTE(v13) = 16;
    sub_23C3F723C();
    LOBYTE(v13) = 17;
    sub_23C3F723C();
    v12 = v3 + v9[22];
    LOBYTE(v13) = 18;
    sub_23C3F660C();
    sub_23C39650C(&qword_256B85E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C3F7254();
    LOBYTE(v13) = 19;
    sub_23C3F7284();
    v13 = *(_OWORD *)(v3 + v9[24]);
    v14 = 20;
    sub_23C3B5094();
    sub_23C3F7284();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SearchItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  __int128 v64;
  char v65;

  v54 = a2;
  v57 = sub_23C3F65A0();
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v52 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
  MEMORY[0x24BDAC7A8](v4);
  v53 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
  MEMORY[0x24BDAC7A8](v6);
  v56 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v52 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85E90);
  v17 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = (int *)type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v63);
  v62 = (uint64_t)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_23C3DB21C();
  v58 = v19;
  v22 = v61;
  sub_23C3F732C();
  if (v22)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  v23 = v13;
  v24 = v17;
  LOBYTE(v64) = 0;
  sub_23C3DB2E8(&qword_256B85E98, MEMORY[0x24BE35060]);
  sub_23C3F7218();
  v25 = v62;
  sub_23C3B2564((uint64_t)v16, v62, &qword_256B85670);
  v65 = 1;
  sub_23C3DB32C();
  sub_23C3F71E8();
  v26 = v63;
  *(_BYTE *)(v25 + v63[5]) = v64;
  LOBYTE(v64) = 2;
  *(_BYTE *)(v25 + v26[6]) = sub_23C3F71DC();
  LOBYTE(v64) = 3;
  *(_QWORD *)(v25 + v26[7]) = sub_23C3F720C();
  LOBYTE(v64) = 4;
  v27 = (uint64_t)v23;
  v28 = sub_23C39650C(&qword_256B858A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5D0]);
  sub_23C3F71E8();
  sub_23C3B2564(v27, v25 + v26[8], &qword_256B85688);
  LOBYTE(v64) = 5;
  v29 = sub_23C3F71D0();
  v61 = v28;
  v30 = (uint64_t *)(v25 + v26[9]);
  *v30 = v29;
  v30[1] = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85E68);
  v65 = 6;
  sub_23C3DB370(&qword_256B85EA8, MEMORY[0x24BEE1EB8], MEMORY[0x24BEE12D0]);
  sub_23C3F7218();
  *(_QWORD *)(v25 + v26[10]) = v64;
  LOBYTE(v64) = 7;
  v32 = sub_23C3F71F4();
  v33 = (uint64_t *)(v25 + v26[11]);
  *v33 = v32;
  v33[1] = v34;
  LOBYTE(v64) = 8;
  *(_BYTE *)(v25 + v26[12]) = sub_23C3F71DC();
  v65 = 9;
  sub_23C3DB3D0();
  sub_23C3F71E8();
  *(_BYTE *)(v62 + v63[13]) = v64;
  LOBYTE(v64) = 10;
  v35 = sub_23C3F71D0();
  v36 = (uint64_t *)(v62 + v63[14]);
  *v36 = v35;
  v36[1] = v37;
  LOBYTE(v64) = 11;
  v38 = sub_23C3F71F4();
  v39 = (uint64_t *)(v62 + v63[15]);
  *v39 = v38;
  v39[1] = v40;
  v65 = 12;
  sub_23C3B5420();
  sub_23C3F7218();
  *(_BYTE *)(v62 + v63[16]) = v64;
  LOBYTE(v64) = 13;
  sub_23C3F71E8();
  sub_23C3B2564((uint64_t)v11, v62 + v63[17], &qword_256B85688);
  type metadata accessor for SearchArtwork();
  LOBYTE(v64) = 14;
  sub_23C39650C(&qword_256B85EB8, (uint64_t (*)(uint64_t))type metadata accessor for SearchArtwork, (uint64_t)&protocol conformance descriptor for SearchArtwork);
  sub_23C3F71E8();
  sub_23C3B2564(v56, v62 + v63[18], &qword_256B856A0);
  LOBYTE(v64) = 15;
  v41 = sub_23C3F71D0();
  v42 = (uint64_t *)(v62 + v63[19]);
  *v42 = v41;
  v42[1] = v43;
  LOBYTE(v64) = 16;
  v44 = sub_23C3F71D0();
  v45 = (uint64_t *)(v62 + v63[20]);
  *v45 = v44;
  v45[1] = v46;
  LOBYTE(v64) = 17;
  v47 = sub_23C3F71D0();
  v48 = (uint64_t *)(v62 + v63[21]);
  *v48 = v47;
  v48[1] = v49;
  sub_23C3F660C();
  LOBYTE(v64) = 18;
  sub_23C39650C(&qword_256B85EC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  sub_23C3F71E8();
  sub_23C3B2564(v53, v62 + v63[22], &qword_256B85698);
  LOBYTE(v64) = 19;
  sub_23C3F7218();
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v62 + v63[23], v52, v57);
  v65 = 20;
  sub_23C3B5464();
  sub_23C3F7218();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v58, v59);
  v50 = v62;
  *(_OWORD *)(v62 + v63[24]) = v64;
  sub_23C3DB414(v50, v54);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  return sub_23C3965D4(v50, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
}

uint64_t sub_23C3D984C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchItem.init(from:)(a1, a2);
}

uint64_t sub_23C3D9860(_QWORD *a1)
{
  return SearchItem.encode(to:)(a1);
}

uint64_t SearchItem.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);

  v1 = v0;
  v2 = sub_23C3F660C();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SearchArtwork();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v36 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
  MEMORY[0x24BDAC7A8](v8);
  v38 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23C3F65A0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v35 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
  sub_23C3F669C();
  v20 = (int *)type metadata accessor for SearchItem();
  if (*(_BYTE *)(v0 + v20[5]) == 9)
  {
    sub_23C3F7308();
  }
  else
  {
    sub_23C3F7308();
    sub_23C3F72FC();
  }
  if (*(_BYTE *)(v0 + v20[6]) != 2)
    sub_23C3F7308();
  sub_23C3F7308();
  sub_23C3F72FC();
  sub_23C3B26F0(v0 + v20[8], (uint64_t)v19, &qword_256B85688);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v22 = v21(v19, 1, v10);
  v44 = v21;
  if (v22 == 1)
  {
    sub_23C3F7308();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v19, v10);
    sub_23C3F7308();
    sub_23C39650C(&qword_256B844B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
    sub_23C3F6EE8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (*(_QWORD *)(v1 + v20[9] + 8))
  {
    sub_23C3F7308();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  v23 = *(_QWORD *)(v1 + v20[10]);
  sub_23C3F72FC();
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v25 = v23 + 32;
    do
    {
      v25 += 8;
      sub_23C3F72FC();
      --v24;
    }
    while (v24);
  }
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v1 + v20[12]) != 2)
    sub_23C3F7308();
  sub_23C3F7308();
  if (*(_BYTE *)(v1 + v20[13]) == 4)
  {
    sub_23C3F7308();
  }
  else
  {
    sub_23C3F7308();
    sub_23C3F72FC();
  }
  if (*(_QWORD *)(v1 + v20[14] + 8))
  {
    sub_23C3F7308();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3B26F0(v1 + v20[17], (uint64_t)v17, &qword_256B85688);
  if (v44(v17, 1, v10) == 1)
  {
    sub_23C3F7308();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
    sub_23C3F7308();
    sub_23C39650C(&qword_256B844B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
    sub_23C3F6EE8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v27 = v42;
  v26 = v43;
  v28 = v40;
  v29 = (uint64_t)v41;
  v31 = v38;
  v30 = v39;
  sub_23C3B26F0(v1 + v20[18], v38, &qword_256B856A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v31, 1, v28) == 1)
  {
    sub_23C3F7308();
  }
  else
  {
    v32 = v36;
    sub_23C3DB458(v31, v36);
    sub_23C3F7308();
    SearchArtwork.hash(into:)();
    sub_23C3965D4(v32, (uint64_t (*)(_QWORD))type metadata accessor for SearchArtwork);
  }
  if (*(_QWORD *)(v1 + v20[19] + 8))
  {
    sub_23C3F7308();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  if (*(_QWORD *)(v1 + v20[20] + 8))
  {
    sub_23C3F7308();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  if (*(_QWORD *)(v1 + v20[21] + 8))
  {
    sub_23C3F7308();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  sub_23C3B26F0(v1 + v20[22], v29, &qword_256B85698);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v29, 1, v26) == 1)
  {
    sub_23C3F7308();
  }
  else
  {
    v33 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v37, v29, v26);
    sub_23C3F7308();
    sub_23C39650C(&qword_256B85EC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C3F6EE8();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v33, v26);
  }
  sub_23C39650C(&qword_256B844B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C0]);
  sub_23C3F6EE8();
  if (!*(_QWORD *)(v1 + v20[24] + 8))
    return sub_23C3F72FC();
  sub_23C3F72FC();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t SearchItem.hashValue.getter()
{
  sub_23C3F72F0();
  SearchItem.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3DA0C8()
{
  sub_23C3F72F0();
  SearchItem.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3DA108()
{
  sub_23C3F72F0();
  SearchItem.hash(into:)();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B4ItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  int *v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t result;
  uint64_t v50;
  int v51;
  int v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  int *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  int *v83;
  char v84;
  char v85;
  uint64_t v86;
  int v87;
  int v88;
  _BOOL4 v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  char v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  char v104;
  char v105;
  uint64_t v106;
  int *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char v117;
  void (*v118)(char *, uint64_t);
  int *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned int (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  BOOL v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  BOOL v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  char v137;
  char v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int *v146;
  char v147;
  char v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int *v156;
  char v157;
  char v158;
  uint64_t v159;
  int *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unsigned int (*v164)(uint64_t, uint64_t, uint64_t);
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  unsigned int (*v177)(uint64_t, uint64_t, uint64_t);
  uint64_t v178;
  int *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;

  v189 = sub_23C3F660C();
  v185 = *(_QWORD *)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  v182 = (char *)&v176 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85FF8);
  MEMORY[0x24BDAC7A8](v183);
  v188 = (uint64_t)&v176 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v184 = (uint64_t)&v176 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v186 = (uint64_t)&v176 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v187 = (uint64_t)&v176 - v11;
  v12 = type metadata accessor for SearchArtwork();
  v192 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v190 = (uint64_t)&v176 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86000);
  MEMORY[0x24BDAC7A8](v191);
  v197 = (uint64_t)&v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v193 = (uint64_t)&v176 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v195 = (uint64_t)&v176 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v196 = (uint64_t)&v176 - v20;
  v21 = sub_23C3F65A0();
  v22 = *(_QWORD *)(v21 - 8);
  v201 = v21;
  v202 = v22;
  MEMORY[0x24BDAC7A8](v21);
  v200 = (char *)&v176 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86008);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v199 = (uint64_t)&v176 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v176 - v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v194 = (uint64_t)&v176 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v176 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32);
  v198 = (uint64_t)&v176 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v176 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37);
  v42 = (char *)&v176 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v176 - v43;
  sub_23C39650C(&qword_256B85F48, (uint64_t (*)(uint64_t))type metadata accessor for SearchArtwork, (uint64_t)&protocol conformance descriptor for SearchArtwork);
  if ((sub_23C3F6690() & 1) == 0)
    return 0;
  v45 = (int *)type metadata accessor for SearchItem();
  v46 = v45[5];
  v47 = *(unsigned __int8 *)(a1 + v46);
  v48 = *(unsigned __int8 *)(a2 + v46);
  if (v47 == 9)
  {
    if (v48 != 9)
      return 0;
  }
  else
  {
    result = 0;
    if (v48 == 9 || v47 != v48)
      return result;
  }
  v50 = v45[6];
  v51 = *(unsigned __int8 *)(a1 + v50);
  v52 = *(unsigned __int8 *)(a2 + v50);
  if (v51 == 2)
  {
    if (v52 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v53 = (v51 & 1) == 0;
    if (v52 == 2 || ((v53 ^ v52) & 1) == 0)
      return result;
  }
  if (*(_QWORD *)(a1 + v45[7]) != *(_QWORD *)(a2 + v45[7]))
    return 0;
  v54 = v45[8];
  v180 = a1;
  v55 = a1 + v54;
  v56 = v45;
  sub_23C3B26F0(v55, (uint64_t)v44, &qword_256B85688);
  v179 = v56;
  v57 = v56[8];
  v178 = a2;
  sub_23C3B26F0(a2 + v57, (uint64_t)v42, &qword_256B85688);
  v58 = (uint64_t)&v28[*(int *)(v24 + 48)];
  sub_23C3B26F0((uint64_t)v44, (uint64_t)v28, &qword_256B85688);
  v181 = v58;
  sub_23C3B26F0((uint64_t)v42, v58, &qword_256B85688);
  v59 = v201;
  v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v202 + 48);
  if (v60((uint64_t)v28, 1, v201) == 1)
  {
    sub_23C39AA6C((uint64_t)v42, &qword_256B85688);
    sub_23C39AA6C((uint64_t)v44, &qword_256B85688);
    if (v60(v181, 1, v59) == 1)
    {
      v177 = v60;
      sub_23C39AA6C((uint64_t)v28, &qword_256B85688);
      goto LABEL_23;
    }
LABEL_18:
    v62 = &qword_256B86008;
    v63 = (uint64_t)v28;
    goto LABEL_19;
  }
  sub_23C3B26F0((uint64_t)v28, (uint64_t)v39, &qword_256B85688);
  v61 = v181;
  if (v60(v181, 1, v59) == 1)
  {
    sub_23C39AA6C((uint64_t)v42, &qword_256B85688);
    sub_23C39AA6C((uint64_t)v44, &qword_256B85688);
    (*(void (**)(char *, uint64_t))(v202 + 8))(v39, v59);
    goto LABEL_18;
  }
  v177 = v60;
  v64 = v200;
  (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v200, v61, v59);
  sub_23C39650C(&qword_256B86018, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C8]);
  LODWORD(v181) = sub_23C3F6F24();
  v65 = *(void (**)(char *, uint64_t))(v202 + 8);
  v65(v64, v59);
  sub_23C39AA6C((uint64_t)v42, &qword_256B85688);
  sub_23C39AA6C((uint64_t)v44, &qword_256B85688);
  v65(v39, v59);
  sub_23C39AA6C((uint64_t)v28, &qword_256B85688);
  if ((v181 & 1) == 0)
    return 0;
LABEL_23:
  v66 = v179;
  v67 = v179[9];
  v68 = v180;
  v69 = (_QWORD *)(v180 + v67);
  v70 = *(_QWORD *)(v180 + v67 + 8);
  v71 = v178;
  v72 = (_QWORD *)(v178 + v67);
  v73 = v72[1];
  if (!v70)
  {
    if (v73)
      return 0;
    goto LABEL_30;
  }
  if (!v73)
    return 0;
  if (*v69 == *v72 && v70 == v73
    || (v74 = sub_23C3F72A8(), v66 = v179, v68 = v180, v75 = v74, result = 0, (v75 & 1) != 0))
  {
LABEL_30:
    v76 = v68;
    v77 = v66;
    if (!sub_23C3EAE28(*(_QWORD **)(v68 + v66[10]), *(_QWORD **)(v71 + v66[10])))
      return 0;
    v78 = v77[11];
    v79 = *(_QWORD *)(v76 + v78);
    v80 = *(_QWORD *)(v76 + v78 + 8);
    v81 = (_QWORD *)(v71 + v78);
    if (v79 != *v81 || (v82 = v76, v83 = v77, v80 != v81[1]))
    {
      v84 = sub_23C3F72A8();
      v83 = v179;
      v82 = v180;
      v85 = v84;
      result = 0;
      if ((v85 & 1) == 0)
        return result;
    }
    v86 = v83[12];
    v87 = *(unsigned __int8 *)(v82 + v86);
    v88 = *(unsigned __int8 *)(v71 + v86);
    if (v87 == 2)
    {
      if (v88 != 2)
        return 0;
    }
    else
    {
      result = 0;
      v89 = (v87 & 1) == 0;
      if (v88 == 2 || ((v89 ^ v88) & 1) == 0)
        return result;
    }
    v90 = v83[13];
    v91 = *(unsigned __int8 *)(v82 + v90);
    v92 = *(unsigned __int8 *)(v71 + v90);
    if (v91 == 4)
    {
      if (v92 != 4)
        return 0;
    }
    else
    {
      result = 0;
      if (v92 == 4 || v91 != v92)
        return result;
    }
    v93 = v83[14];
    v94 = (_QWORD *)(v82 + v93);
    v95 = *(_QWORD *)(v82 + v93 + 8);
    v96 = (_QWORD *)(v71 + v93);
    v97 = v96[1];
    if (v95)
    {
      if (!v97)
        return 0;
      if (*v94 != *v96 || v95 != v97)
      {
        v98 = sub_23C3F72A8();
        v83 = v179;
        v82 = v180;
        v99 = v98;
        result = 0;
        if ((v99 & 1) == 0)
          return result;
      }
    }
    else if (v97)
    {
      return 0;
    }
    v100 = v83[15];
    v101 = *(_QWORD *)(v82 + v100);
    v102 = *(_QWORD *)(v82 + v100 + 8);
    v103 = (_QWORD *)(v71 + v100);
    if (v101 != *v103 || v102 != v103[1])
    {
      v104 = sub_23C3F72A8();
      v83 = v179;
      v82 = v180;
      v105 = v104;
      result = 0;
      if ((v105 & 1) == 0)
        return result;
    }
    v106 = v82;
    v107 = v83;
    if ((sub_23C3E9028(*(_BYTE *)(v82 + v83[16]), *(_BYTE *)(v71 + v83[16])) & 1) == 0)
      return 0;
    v108 = v198;
    sub_23C3B26F0(v106 + v107[17], v198, &qword_256B85688);
    sub_23C3B26F0(v71 + v107[17], (uint64_t)v34, &qword_256B85688);
    v109 = *(int *)(v24 + 48);
    v110 = v199;
    v111 = v199 + v109;
    sub_23C3B26F0(v108, v199, &qword_256B85688);
    sub_23C3B26F0((uint64_t)v34, v111, &qword_256B85688);
    v112 = v201;
    v113 = v177;
    if (v177(v110, 1, v201) == 1)
    {
      sub_23C39AA6C((uint64_t)v34, &qword_256B85688);
      sub_23C39AA6C(v108, &qword_256B85688);
      if (v113(v111, 1, v112) == 1)
      {
        sub_23C39AA6C(v110, &qword_256B85688);
LABEL_62:
        v119 = v179;
        v120 = v196;
        sub_23C3B26F0(v180 + v179[18], v196, &qword_256B856A0);
        v121 = v195;
        sub_23C3B26F0(v178 + v119[18], v195, &qword_256B856A0);
        v122 = v197;
        v123 = v197 + *(int *)(v191 + 48);
        sub_23C3B26F0(v120, v197, &qword_256B856A0);
        sub_23C3B26F0(v121, v123, &qword_256B856A0);
        v124 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v192 + 48);
        if (v124(v122, 1, v12) == 1)
        {
          sub_23C39AA6C(v195, &qword_256B856A0);
          sub_23C39AA6C(v196, &qword_256B856A0);
          if (v124(v123, 1, v12) == 1)
          {
            sub_23C39AA6C(v197, &qword_256B856A0);
LABEL_69:
            v128 = v179[19];
            v129 = (_QWORD *)(v180 + v128);
            v130 = *(_QWORD *)(v180 + v128 + 8);
            v131 = (_QWORD *)(v178 + v128);
            v132 = v131[1];
            if (v130)
            {
              if (!v132)
                return 0;
              v133 = *v129 == *v131;
              v134 = v178;
              v135 = v180;
              v136 = v179;
              if (!v133 || v130 != v132)
              {
                v137 = sub_23C3F72A8();
                v136 = v179;
                v135 = v180;
                v138 = v137;
                result = 0;
                if ((v138 & 1) == 0)
                  return result;
              }
            }
            else
            {
              v134 = v178;
              v135 = v180;
              v136 = v179;
              if (v132)
                return 0;
            }
            v139 = v136[20];
            v140 = (_QWORD *)(v135 + v139);
            v141 = *(_QWORD *)(v135 + v139 + 8);
            v142 = (_QWORD *)(v134 + v139);
            v143 = v142[1];
            if (v141)
            {
              if (!v143)
                return 0;
              v133 = *v140 == *v142;
              v144 = v178;
              v145 = v180;
              v146 = v179;
              if (!v133 || v141 != v143)
              {
                v147 = sub_23C3F72A8();
                v146 = v179;
                v145 = v180;
                v148 = v147;
                result = 0;
                if ((v148 & 1) == 0)
                  return result;
              }
            }
            else
            {
              v144 = v178;
              v145 = v180;
              v146 = v179;
              if (v143)
                return 0;
            }
            v149 = v146[21];
            v150 = (_QWORD *)(v145 + v149);
            v151 = *(_QWORD *)(v145 + v149 + 8);
            v152 = (_QWORD *)(v144 + v149);
            v153 = v152[1];
            if (v151)
            {
              if (!v153)
                return 0;
              v133 = *v150 == *v152;
              v154 = v178;
              v155 = v180;
              v156 = v179;
              if (!v133 || v151 != v153)
              {
                v157 = sub_23C3F72A8();
                v156 = v179;
                v155 = v180;
                v158 = v157;
                result = 0;
                if ((v158 & 1) == 0)
                  return result;
              }
            }
            else
            {
              v154 = v178;
              v155 = v180;
              v156 = v179;
              if (v153)
                return 0;
            }
            v159 = v187;
            v160 = v156;
            sub_23C3B26F0(v155 + v156[22], v187, &qword_256B85698);
            v161 = v186;
            sub_23C3B26F0(v154 + v160[22], v186, &qword_256B85698);
            v162 = v188;
            v163 = v188 + *(int *)(v183 + 48);
            sub_23C3B26F0(v159, v188, &qword_256B85698);
            sub_23C3B26F0(v161, v163, &qword_256B85698);
            v164 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v185 + 48);
            if (v164(v162, 1, v189) == 1)
            {
              sub_23C39AA6C(v186, &qword_256B85698);
              sub_23C39AA6C(v187, &qword_256B85698);
              if (v164(v163, 1, v189) == 1)
              {
                sub_23C39AA6C(v188, &qword_256B85698);
                goto LABEL_100;
              }
              goto LABEL_98;
            }
            sub_23C3B26F0(v188, v184, &qword_256B85698);
            if (v164(v163, 1, v189) == 1)
            {
              sub_23C39AA6C(v186, &qword_256B85698);
              sub_23C39AA6C(v187, &qword_256B85698);
              (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v184, v189);
LABEL_98:
              v62 = &qword_256B85FF8;
              v63 = v188;
              goto LABEL_19;
            }
            v165 = v185;
            v166 = v182;
            v167 = v189;
            (*(void (**)(char *, uint64_t, uint64_t))(v185 + 32))(v182, v163, v189);
            sub_23C39650C(&qword_256B86010, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
            v168 = v184;
            v169 = sub_23C3F6F24();
            v170 = *(void (**)(char *, uint64_t))(v165 + 8);
            v170(v166, v167);
            sub_23C39AA6C(v186, &qword_256B85698);
            sub_23C39AA6C(v187, &qword_256B85698);
            v170((char *)v168, v167);
            sub_23C39AA6C(v188, &qword_256B85698);
            if ((v169 & 1) != 0)
            {
LABEL_100:
              if ((sub_23C3F657C() & 1) != 0)
              {
                v171 = v179[24];
                v172 = (_QWORD *)(v180 + v171);
                v173 = *(_QWORD *)(v180 + v171 + 8);
                v174 = (_QWORD *)(v178 + v171);
                v175 = v174[1];
                if (v173)
                {
                  if (v175 && (*v172 == *v174 && v173 == v175 || (sub_23C3F72A8() & 1) != 0))
                    return 1;
                }
                else if (!v175)
                {
                  swift_bridgeObjectRelease_n();
                  return 1;
                }
              }
            }
            return 0;
          }
        }
        else
        {
          sub_23C3B26F0(v197, v193, &qword_256B856A0);
          if (v124(v123, 1, v12) != 1)
          {
            v125 = v190;
            sub_23C3DB458(v123, v190);
            v126 = v193;
            v127 = _s13FitnessSearch0B7ArtworkV2eeoiySbAC_ACtFZ_0(v193, v125);
            sub_23C3965D4(v125, (uint64_t (*)(_QWORD))type metadata accessor for SearchArtwork);
            sub_23C39AA6C(v195, &qword_256B856A0);
            sub_23C39AA6C(v196, &qword_256B856A0);
            sub_23C3965D4(v126, (uint64_t (*)(_QWORD))type metadata accessor for SearchArtwork);
            sub_23C39AA6C(v197, &qword_256B856A0);
            if (!v127)
              return 0;
            goto LABEL_69;
          }
          sub_23C39AA6C(v195, &qword_256B856A0);
          sub_23C39AA6C(v196, &qword_256B856A0);
          sub_23C3965D4(v193, (uint64_t (*)(_QWORD))type metadata accessor for SearchArtwork);
        }
        v62 = &qword_256B86000;
        v63 = v197;
LABEL_19:
        sub_23C39AA6C(v63, v62);
        return 0;
      }
    }
    else
    {
      v114 = v194;
      sub_23C3B26F0(v110, v194, &qword_256B85688);
      if (v113(v111, 1, v112) != 1)
      {
        v115 = v202;
        v116 = v200;
        (*(void (**)(char *, uint64_t, uint64_t))(v202 + 32))(v200, v111, v112);
        sub_23C39650C(&qword_256B86018, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC5C8]);
        v117 = sub_23C3F6F24();
        v118 = *(void (**)(char *, uint64_t))(v115 + 8);
        v118(v116, v112);
        sub_23C39AA6C((uint64_t)v34, &qword_256B85688);
        sub_23C39AA6C(v108, &qword_256B85688);
        v118((char *)v114, v112);
        sub_23C39AA6C(v110, &qword_256B85688);
        if ((v117 & 1) == 0)
          return 0;
        goto LABEL_62;
      }
      sub_23C39AA6C((uint64_t)v34, &qword_256B85688);
      sub_23C39AA6C(v108, &qword_256B85688);
      (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v114, v112);
    }
    v62 = &qword_256B86008;
    v63 = v110;
    goto LABEL_19;
  }
  return result;
}

uint64_t type metadata accessor for SearchItem()
{
  uint64_t result;

  result = qword_256B85F30;
  if (!qword_256B85F30)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23C3DB21C()
{
  unint64_t result;

  result = qword_256B85E50;
  if (!qword_256B85E50)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE234, &type metadata for SearchItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85E50);
  }
  return result;
}

unint64_t sub_23C3DB260()
{
  unint64_t result;

  result = qword_256B85E60;
  if (!qword_256B85E60)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchContentAssetLoadStatus, &type metadata for SearchContentAssetLoadStatus);
    atomic_store(result, (unint64_t *)&qword_256B85E60);
  }
  return result;
}

unint64_t sub_23C3DB2A4()
{
  unint64_t result;

  result = qword_256B85E78;
  if (!qword_256B85E78)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearechContentMediaType, &type metadata for SearechContentMediaType);
    atomic_store(result, (unint64_t *)&qword_256B85E78);
  }
  return result;
}

uint64_t sub_23C3DB2E8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85670);
    result = MEMORY[0x24261DE88](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C3DB32C()
{
  unint64_t result;

  result = qword_256B85EA0;
  if (!qword_256B85EA0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchContentAssetLoadStatus, &type metadata for SearchContentAssetLoadStatus);
    atomic_store(result, (unint64_t *)&qword_256B85EA0);
  }
  return result;
}

uint64_t sub_23C3DB370(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B85E68);
    v8 = a2;
    result = MEMORY[0x24261DE88](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C3DB3D0()
{
  unint64_t result;

  result = qword_256B85EB0;
  if (!qword_256B85EB0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearechContentMediaType, &type metadata for SearechContentMediaType);
    atomic_store(result, (unint64_t *)&qword_256B85EB0);
  }
  return result;
}

uint64_t sub_23C3DB414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3DB458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3DB49C()
{
  return sub_23C39650C(&qword_256B85ED0, (uint64_t (*)(uint64_t))type metadata accessor for SearchItem, (uint64_t)&protocol conformance descriptor for SearchItem);
}

_QWORD *initializeBufferWithCopyOfBuffer for SearchItem(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  char *__dst;
  uint64_t v90;
  unsigned int (*v91)(char *, uint64_t, uint64_t);
  unsigned int (*v92)(char *, uint64_t, uint64_t);
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
    if (swift_getEnumCaseMultiPayload() == 1)
      v7 = (uint64_t *)&unk_256B85680;
    else
      v7 = (uint64_t *)&unk_256B85678;
    v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
    v9 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v10 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_23C3F65A0();
    v14 = *(_QWORD *)(v13 - 8);
    v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v98 = v14;
    if (v94(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v17 = a3[9];
    v18 = a3[10];
    v19 = (_QWORD *)((char *)a1 + v17);
    v20 = (_QWORD *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
    v22 = a3[11];
    v23 = a3[12];
    v24 = (_QWORD *)((char *)a1 + v22);
    v25 = (_QWORD *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
    v27 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v28 = (_QWORD *)((char *)a1 + v27);
    v29 = (_QWORD *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[15];
    v32 = a3[16];
    v33 = (_QWORD *)((char *)a1 + v31);
    v34 = (_QWORD *)((char *)a2 + v31);
    v35 = *v34;
    v36 = v34[1];
    LOBYTE(v34) = *((_BYTE *)a2 + v32);
    *v33 = v35;
    v33[1] = v36;
    *((_BYTE *)a1 + v32) = (_BYTE)v34;
    v37 = a3[17];
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v97 = v13;
    if (v94(v39, 1, v13))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v38, v39, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v13);
    }
    v41 = a3[18];
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    v44 = (int *)type metadata accessor for SearchArtwork();
    v45 = *((_QWORD *)v44 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v45 + 48))(v43, 1, v44))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v47 = sub_23C3F6684();
      v48 = *(_QWORD *)(v47 - 8);
      v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
      v93 = v45;
      v90 = v47;
      v88 = v48;
      if (v92(v43, 1, v47))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v42, v43, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v42, 0, 1, v47);
      }
      v50 = v44[5];
      v51 = &v42[v50];
      v52 = &v43[v50];
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      v54 = *((_QWORD *)v52 + 3);
      *((_QWORD *)v51 + 2) = *((_QWORD *)v52 + 2);
      *((_QWORD *)v51 + 3) = v54;
      v55 = *((_QWORD *)v52 + 5);
      *((_QWORD *)v51 + 4) = *((_QWORD *)v52 + 4);
      *((_QWORD *)v51 + 5) = v55;
      *(_QWORD *)&v42[v44[6]] = *(_QWORD *)&v43[v44[6]];
      v56 = v44[7];
      v95 = v42;
      __dst = &v42[v56];
      v57 = &v43[v56];
      v58 = sub_23C3F660C();
      v87 = *(_QWORD *)(v58 - 8);
      v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v91(v57, 1, v58))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
        memcpy(__dst, v57, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(__dst, v57, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(__dst, 0, 1, v58);
      }
      v60 = v44[8];
      v61 = &v95[v60];
      v62 = &v43[v60];
      if (v92(&v43[v60], 1, v90))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v61, v62, v90);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v61, 0, 1, v90);
      }
      *(_QWORD *)&v95[v44[9]] = *(_QWORD *)&v43[v44[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v93 + 56))(v95, 0, 1, v44);
    }
    v64 = a3[19];
    v65 = a3[20];
    v66 = (_QWORD *)((char *)a1 + v64);
    v67 = (_QWORD *)((char *)a2 + v64);
    v68 = v67[1];
    *v66 = *v67;
    v66[1] = v68;
    v69 = (_QWORD *)((char *)a1 + v65);
    v70 = (_QWORD *)((char *)a2 + v65);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    v72 = a3[21];
    v73 = a3[22];
    v74 = (_QWORD *)((char *)a1 + v72);
    v75 = (_QWORD *)((char *)a2 + v72);
    v76 = v75[1];
    *v74 = *v75;
    v74[1] = v76;
    v96 = (char *)a1 + v73;
    v77 = (char *)a2 + v73;
    v78 = sub_23C3F660C();
    v79 = *(_QWORD *)(v78 - 8);
    v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v80(v77, 1, v78))
    {
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
      memcpy(v96, v77, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v96, v77, v78);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v96, 0, 1, v78);
    }
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))((char *)a1 + a3[23], (char *)a2 + a3[23], v97);
    v82 = a3[24];
    v83 = (_QWORD *)((char *)a1 + v82);
    v84 = (_QWORD *)((char *)a2 + v82);
    v85 = v84[1];
    *v83 = *v84;
    v83[1] = v85;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchItem(uint64_t a1, int *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = (uint64_t *)&unk_256B85680;
  else
    v4 = (uint64_t *)&unk_256B85678;
  v5 = __swift_instantiateConcreteTypeFromMangledName(v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  v6 = a1 + a2[8];
  v7 = sub_23C3F65A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + a2[17];
  if (!v9(v10, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  v11 = a1 + a2[18];
  v12 = type metadata accessor for SearchArtwork();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    v13 = sub_23C3F6684();
    v14 = *(_QWORD *)(v13 - 8);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v24(v11, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
    v23 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v11 + *(int *)(v12 + 28);
    v16 = sub_23C3F660C();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v11 + *(int *)(v12 + 32);
    if (!v24(v18, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v18, v13);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = a1 + a2[22];
  v20 = sub_23C3F660C();
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1 + a2[23], v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(const void *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  char *__dst;
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  unsigned int (*v92)(const void *, uint64_t, uint64_t);
  char *v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = (uint64_t *)&unk_256B85680;
  else
    v6 = (uint64_t *)&unk_256B85678;
  v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_23C3F65A0();
  v13 = *(_QWORD *)(v12 - 8);
  v92 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  v96 = v13;
  if (v92(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[9];
  v16 = a3[10];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v20 = a3[11];
  v21 = a3[12];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v25 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = a3[15];
  v30 = a3[16];
  v31 = (_QWORD *)(a1 + v29);
  v32 = (uint64_t *)(a2 + v29);
  v33 = *v32;
  v34 = v32[1];
  LOBYTE(v32) = *(_BYTE *)(a2 + v30);
  *v31 = v33;
  v31[1] = v34;
  *(_BYTE *)(a1 + v30) = (_BYTE)v32;
  v35 = a3[17];
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v95 = v12;
  if (v92(v37, 1, v12))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v36, v37, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v36, 0, 1, v12);
  }
  v39 = a3[18];
  v40 = (char *)(a1 + v39);
  v41 = (char *)(a2 + v39);
  v42 = (int *)type metadata accessor for SearchArtwork();
  v43 = *((_QWORD *)v42 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v43 + 48))(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = sub_23C3F6684();
    v46 = *(_QWORD *)(v45 - 8);
    v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    v90 = v45;
    v91 = v43;
    v86 = v46;
    if (v89(v41, 1, v45))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v40, v41, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v40, 0, 1, v45);
    }
    v48 = v42[5];
    v49 = &v40[v48];
    v50 = &v41[v48];
    v51 = *((_QWORD *)v50 + 1);
    *(_QWORD *)v49 = *(_QWORD *)v50;
    *((_QWORD *)v49 + 1) = v51;
    v52 = *((_QWORD *)v50 + 3);
    *((_QWORD *)v49 + 2) = *((_QWORD *)v50 + 2);
    *((_QWORD *)v49 + 3) = v52;
    v53 = *((_QWORD *)v50 + 5);
    *((_QWORD *)v49 + 4) = *((_QWORD *)v50 + 4);
    *((_QWORD *)v49 + 5) = v53;
    *(_QWORD *)&v40[v42[6]] = *(_QWORD *)&v41[v42[6]];
    v54 = v42[7];
    v93 = v40;
    __dst = &v40[v54];
    v55 = &v41[v54];
    v56 = sub_23C3F660C();
    v85 = *(_QWORD *)(v56 - 8);
    v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v87(v55, 1, v56))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
      memcpy(__dst, v55, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(__dst, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dst, 0, 1, v56);
    }
    v58 = v42[8];
    v59 = &v93[v58];
    v60 = &v41[v58];
    if (v89(&v41[v58], 1, v90))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v59, v60, v90);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v59, 0, 1, v90);
    }
    *(_QWORD *)&v93[v42[9]] = *(_QWORD *)&v41[v42[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v91 + 56))(v93, 0, 1, v42);
  }
  v62 = a3[19];
  v63 = a3[20];
  v64 = (_QWORD *)(a1 + v62);
  v65 = (_QWORD *)(a2 + v62);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  v67 = (_QWORD *)(a1 + v63);
  v68 = (_QWORD *)(a2 + v63);
  v69 = v68[1];
  *v67 = *v68;
  v67[1] = v69;
  v70 = a3[21];
  v71 = a3[22];
  v72 = (_QWORD *)(a1 + v70);
  v73 = (_QWORD *)(a2 + v70);
  v74 = v73[1];
  *v72 = *v73;
  v72[1] = v74;
  v94 = (void *)(a1 + v71);
  v75 = (const void *)(a2 + v71);
  v76 = sub_23C3F660C();
  v77 = *(_QWORD *)(v76 - 8);
  v78 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v77 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v78(v75, 1, v76))
  {
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    memcpy(v94, v75, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v77 + 16))(v94, v75, v76);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v94, 0, 1, v76);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(a1 + a3[23], a2 + a3[23], v95);
  v80 = a3[24];
  v81 = (_QWORD *)(a1 + v80);
  v82 = (_QWORD *)(a2 + v80);
  v83 = v82[1];
  *v81 = *v82;
  v81[1] = v83;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, int *);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  void *v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(void *, uint64_t, uint64_t);
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v107;
  int *v108;
  char *__dst;
  unsigned int (*v110)(char *, uint64_t, uint64_t);
  uint64_t (*v111)(char *, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;

  if (a1 != a2)
  {
    sub_23C39AA6C(a1, &qword_256B85670);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = (uint64_t *)&unk_256B85680;
    else
      v6 = (uint64_t *)&unk_256B85678;
    v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v8 = a3[8];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_23C3F65A0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_11:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_12:
  v17 = a3[9];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[11];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v23 = a3[14];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[15];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v29 = a3[17];
  v30 = (void *)(a1 + v29);
  v31 = (void *)(a2 + v29);
  v32 = v13((void *)(a1 + v29), 1, v11);
  v33 = v13(v31, 1, v11);
  v120 = v12;
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v30, v31, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v30, 0, 1, v11);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v30, v11);
LABEL_17:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v30, v31, v11);
LABEL_18:
  v35 = a3[18];
  v36 = (char *)(a1 + v35);
  v37 = (char *)(a2 + v35);
  v38 = (int *)type metadata accessor for SearchArtwork();
  v39 = *((_QWORD *)v38 - 1);
  v40 = *(uint64_t (**)(char *, uint64_t, int *))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (v42)
    {
      sub_23C3965D4((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for SearchArtwork);
      goto LABEL_24;
    }
    v47 = sub_23C3F6684();
    v112 = *(_QWORD *)(v47 - 8);
    v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
    v49 = v48(v36, 1, v47);
    v113 = v47;
    v111 = v48;
    v50 = v48(v37, 1, v47);
    v117 = v11;
    if (v49)
    {
      if (!v50)
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v36, v37, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v36, 0, 1, v47);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v50)
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v36, v37, v47);
LABEL_41:
        v66 = v38[5];
        v67 = v36;
        v68 = &v36[v66];
        v69 = v37;
        v70 = &v37[v66];
        *(_QWORD *)v68 = *(_QWORD *)v70;
        *((_QWORD *)v68 + 1) = *((_QWORD *)v70 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v68 + 2) = *((_QWORD *)v70 + 2);
        *((_QWORD *)v68 + 3) = *((_QWORD *)v70 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_QWORD *)v68 + 4) = *((_QWORD *)v70 + 4);
        *((_QWORD *)v68 + 5) = *((_QWORD *)v70 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v67[v38[6]] = *(_QWORD *)&v69[v38[6]];
        v71 = v38[7];
        v115 = v67;
        v72 = &v67[v71];
        v119 = v69;
        v73 = &v69[v71];
        v74 = sub_23C3F660C();
        v75 = *(_QWORD *)(v74 - 8);
        v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
        LODWORD(v69) = v76(v72, 1, v74);
        v77 = v76(v73, 1, v74);
        if ((_DWORD)v69)
        {
          if (!v77)
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
            goto LABEL_47;
          }
        }
        else
        {
          if (!v77)
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 24))(v72, v73, v74);
LABEL_47:
            v79 = v38[8];
            v80 = &v115[v79];
            v81 = &v119[v79];
            v82 = v111(&v115[v79], 1, v113);
            v83 = v111(v81, 1, v113);
            if (v82)
            {
              if (!v83)
              {
                (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v80, v81, v113);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v80, 0, 1, v113);
LABEL_53:
                v11 = v117;
                *(_QWORD *)&v115[v38[9]] = *(_QWORD *)&v119[v38[9]];
                goto LABEL_54;
              }
            }
            else
            {
              if (!v83)
              {
                (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v80, v81, v113);
                goto LABEL_53;
              }
              (*(void (**)(char *, uint64_t))(v112 + 8))(v80, v113);
            }
            v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
            memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
            goto LABEL_53;
          }
          (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v74);
        }
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        goto LABEL_47;
      }
      (*(void (**)(char *, uint64_t))(v112 + 8))(v36, v47);
    }
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_41;
  }
  if (v42)
  {
LABEL_24:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_54;
  }
  v43 = sub_23C3F6684();
  v44 = *(_QWORD *)(v43 - 8);
  v110 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  v116 = v11;
  v107 = v44;
  if (v110(v37, 1, v43))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v36, v37, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v36, 0, 1, v43);
  }
  v51 = v38[5];
  v52 = &v36[v51];
  v53 = &v37[v51];
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
  *((_QWORD *)v52 + 2) = *((_QWORD *)v53 + 2);
  *((_QWORD *)v52 + 3) = *((_QWORD *)v53 + 3);
  *((_QWORD *)v52 + 4) = *((_QWORD *)v53 + 4);
  *((_QWORD *)v52 + 5) = *((_QWORD *)v53 + 5);
  *(_QWORD *)&v36[v38[6]] = *(_QWORD *)&v37[v38[6]];
  v54 = v38[7];
  v114 = v36;
  v108 = v38;
  __dst = &v36[v54];
  v118 = v37;
  v55 = &v37[v54];
  v56 = sub_23C3F660C();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v58(v55, 1, v56))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    memcpy(__dst, v55, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(__dst, v55, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v56);
  }
  v60 = v39;
  v61 = v108[8];
  v62 = &v114[v61];
  v63 = &v37[v61];
  v11 = v116;
  if (v110(&v118[v61], 1, v43))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v62, v63, v43);
    v60 = v39;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v62, 0, 1, v43);
  }
  *(_QWORD *)&v114[v108[9]] = *(_QWORD *)&v118[v108[9]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v60 + 56))(v114, 0, 1, v108);
LABEL_54:
  v85 = a3[19];
  v86 = (_QWORD *)(a1 + v85);
  v87 = (_QWORD *)(a2 + v85);
  *v86 = *v87;
  v86[1] = v87[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v88 = a3[20];
  v89 = (_QWORD *)(a1 + v88);
  v90 = (_QWORD *)(a2 + v88);
  *v89 = *v90;
  v89[1] = v90[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v91 = a3[21];
  v92 = (_QWORD *)(a1 + v91);
  v93 = (_QWORD *)(a2 + v91);
  *v92 = *v93;
  v92[1] = v93[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94 = a3[22];
  v95 = (void *)(a1 + v94);
  v96 = (void *)(a2 + v94);
  v97 = sub_23C3F660C();
  v98 = *(_QWORD *)(v97 - 8);
  v99 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v98 + 48);
  v100 = v99(v95, 1, v97);
  v101 = v99(v96, 1, v97);
  if (!v100)
  {
    if (!v101)
    {
      (*(void (**)(void *, void *, uint64_t))(v98 + 24))(v95, v96, v97);
      goto LABEL_60;
    }
    (*(void (**)(void *, uint64_t))(v98 + 8))(v95, v97);
    goto LABEL_59;
  }
  if (v101)
  {
LABEL_59:
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    goto LABEL_60;
  }
  (*(void (**)(void *, void *, uint64_t))(v98 + 16))(v95, v96, v97);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
LABEL_60:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 24))(a1 + a3[23], a2 + a3[23], v11);
  v103 = a3[24];
  v104 = (_QWORD *)(a1 + v103);
  v105 = (_QWORD *)(a2 + v103);
  *v104 = *v105;
  v104[1] = v105[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = (uint64_t *)&unk_256B85680;
  else
    v6 = (uint64_t *)&unk_256B85678;
  v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  swift_storeEnumTagMultiPayload();
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_23C3F65A0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[17];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  if (v14((const void *)(a2 + v20), 1, v12))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v21, v22, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
  }
  v24 = a3[18];
  v25 = (char *)(a1 + v24);
  v26 = (char *)(a2 + v24);
  v27 = (int *)type metadata accessor for SearchArtwork();
  v28 = *((_QWORD *)v27 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v57 = v12;
    v30 = sub_23C3F6684();
    v31 = *(_QWORD *)(v30 - 8);
    v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    v59 = v28;
    v60 = v13;
    v58 = v30;
    v55 = v31;
    if (v56(v26, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v25, v26, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v25, 0, 1, v30);
    }
    v33 = v27[5];
    v34 = &v25[v33];
    v35 = &v26[v33];
    v36 = *((_OWORD *)v35 + 1);
    *(_OWORD *)v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v36;
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *(_QWORD *)&v25[v27[6]] = *(_QWORD *)&v26[v27[6]];
    v37 = v27[7];
    v38 = &v25[v37];
    v39 = &v26[v37];
    v40 = sub_23C3F660C();
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v43 = v27[8];
    v44 = &v25[v43];
    v45 = &v26[v43];
    if (v56(&v26[v43], 1, v58))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v44, v45, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v44, 0, 1, v58);
    }
    v12 = v57;
    *(_QWORD *)&v25[v27[9]] = *(_QWORD *)&v26[v27[9]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v59 + 56))(v25, 0, 1, v27);
    v13 = v60;
  }
  v47 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v47) = *(_OWORD *)(a2 + v47);
  v48 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  v49 = (void *)(a1 + v48);
  v50 = (const void *)(a2 + v48);
  v51 = sub_23C3F660C();
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v52 + 32))(v49, v50, v51);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(a1 + a3[23], a2 + a3[23], v12);
  *(_OWORD *)(a1 + a3[24]) = *(_OWORD *)(a2 + a3[24]);
  return a1;
}

uint64_t assignWithTake for SearchItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int *v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, int *);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(void);
  int v61;
  void (*v62)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  int v89;
  size_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  int v94;
  int v95;
  size_t v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(void *, uint64_t, uint64_t);
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v128;
  uint64_t v129;
  void (**__src)(void *, const void *, void *);
  char *__srca;
  void *v132;
  int v133;
  char *v134;
  unsigned int (*v135)(char *, uint64_t, uint64_t);
  uint64_t (*v136)(void);
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  if (a1 != a2)
  {
    sub_23C39AA6C(a1, &qword_256B85670);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
    if (swift_getEnumCaseMultiPayload() == 1)
      v6 = (uint64_t *)&unk_256B85680;
    else
      v6 = (uint64_t *)&unk_256B85678;
    v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_23C3F65A0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_11:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_12:
  v18 = a3[9];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v23 = a3[11];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  v28 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v28) = *(_BYTE *)(a2 + v28);
  v29 = a3[14];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[15];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v40 = (void *)(a1 + v39);
  v41 = (void *)(a2 + v39);
  v42 = v14((void *)(a1 + v39), 1, v12);
  v43 = v14(v41, 1, v12);
  v141 = v13;
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v40, v41, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v40, 0, 1, v12);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v43)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v40, v12);
LABEL_17:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v40, v41, v12);
LABEL_18:
  v45 = a3[18];
  v46 = (char *)(a1 + v45);
  v47 = (char *)(a2 + v45);
  v48 = (int *)type metadata accessor for SearchArtwork();
  v49 = *((_QWORD *)v48 - 1);
  v50 = *(uint64_t (**)(char *, uint64_t, int *))(v49 + 48);
  v51 = v50(v46, 1, v48);
  v52 = v50(v47, 1, v48);
  if (!v51)
  {
    if (v52)
    {
      sub_23C3965D4((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for SearchArtwork);
      goto LABEL_24;
    }
    v58 = sub_23C3F6684();
    v59 = *(_QWORD *)(v58 - 8);
    v60 = *(uint64_t (**)(void))(v59 + 48);
    v133 = ((uint64_t (*)(char *, uint64_t, uint64_t))v60)(v46, 1, v58);
    v136 = v60;
    v61 = ((uint64_t (*)(char *, uint64_t, uint64_t))v60)(v47, 1, v58);
    v137 = v58;
    v140 = v12;
    v129 = v59;
    if (v133)
    {
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v46, v47, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v58);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v61)
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v46, v47, v58);
LABEL_41:
        v78 = v48[5];
        v79 = &v46[v78];
        v80 = &v47[v78];
        v81 = *(_QWORD *)&v47[v78 + 8];
        *(_QWORD *)v79 = *(_QWORD *)&v47[v78];
        *((_QWORD *)v79 + 1) = v81;
        swift_bridgeObjectRelease();
        v82 = *((_QWORD *)v80 + 3);
        *((_QWORD *)v79 + 2) = *((_QWORD *)v80 + 2);
        *((_QWORD *)v79 + 3) = v82;
        swift_bridgeObjectRelease();
        v83 = *((_QWORD *)v80 + 5);
        *((_QWORD *)v79 + 4) = *((_QWORD *)v80 + 4);
        *((_QWORD *)v79 + 5) = v83;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v46[v48[6]] = *(_QWORD *)&v47[v48[6]];
        v84 = v48[7];
        v85 = &v46[v84];
        v86 = &v47[v84];
        v87 = sub_23C3F660C();
        v128 = *(_QWORD *)(v87 - 8);
        v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v128 + 48);
        v134 = v85;
        LODWORD(v85) = v88(v85, 1, v87);
        v89 = v88(v86, 1, v87);
        if ((_DWORD)v85)
        {
          if (v89)
          {
            v90 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B85698) - 8) + 64);
            v91 = v134;
LABEL_46:
            memcpy(v91, v86, v90);
            goto LABEL_50;
          }
          (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v134, v86, v87);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v134, 0, 1, v87);
        }
        else
        {
          if (v89)
          {
            (*(void (**)(char *, uint64_t))(v128 + 8))(v134, v87);
            v90 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B85698) - 8) + 64);
            v91 = v134;
            goto LABEL_46;
          }
          (*(void (**)(char *, char *, uint64_t))(v128 + 40))(v134, v86, v87);
        }
LABEL_50:
        v92 = v48[8];
        v93 = &v47[v92];
        __srca = &v46[v92];
        v94 = v136();
        v95 = ((uint64_t (*)(char *, uint64_t, uint64_t))v136)(v93, 1, v137);
        if (v94)
        {
          if (!v95)
          {
            (*(void (**)(char *, char *, uint64_t))(v129 + 32))(__srca, v93, v137);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(__srca, 0, 1, v137);
            goto LABEL_58;
          }
          v96 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B85690) - 8) + 64);
          v97 = __srca;
        }
        else
        {
          if (!v95)
          {
            (*(void (**)(char *, char *, uint64_t))(v129 + 40))(__srca, v93, v137);
            goto LABEL_58;
          }
          (*(void (**)(char *, uint64_t))(v129 + 8))(__srca, v137);
          v96 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B85690) - 8) + 64);
          v97 = __srca;
        }
        memcpy(v97, v93, v96);
LABEL_58:
        *(_QWORD *)&v46[v48[9]] = *(_QWORD *)&v47[v48[9]];
        v12 = v140;
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v59 + 8))(v46, v58);
    }
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    goto LABEL_41;
  }
  if (v52)
  {
LABEL_24:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_59;
  }
  v53 = sub_23C3F6684();
  v54 = *(_QWORD *)(v53 - 8);
  v135 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v139 = v12;
  __src = (void (**)(void *, const void *, void *))v54;
  v132 = (void *)v53;
  if (v135(v47, 1, v53))
  {
    v55 = v47;
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v46, v47, v53);
    v62 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56);
    v55 = v47;
    v62(v46, 0, 1, v53);
  }
  v63 = v48[5];
  v64 = &v46[v63];
  v65 = &v55[v63];
  v66 = *((_OWORD *)v65 + 1);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  *((_OWORD *)v64 + 1) = v66;
  *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
  *(_QWORD *)&v46[v48[6]] = *(_QWORD *)&v55[v48[6]];
  v67 = v48[7];
  v68 = &v46[v67];
  v138 = v55;
  v69 = &v55[v67];
  v70 = sub_23C3F660C();
  v71 = *(_QWORD *)(v70 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
  {
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  v73 = v48[8];
  v74 = &v46[v73];
  v75 = &v138[v73];
  v12 = v139;
  if (v135(&v138[v73], 1, (uint64_t)v132))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    __src[4](v74, v75, v132);
    ((void (*)(char *, _QWORD, uint64_t, void *))__src[7])(v74, 0, 1, v132);
  }
  *(_QWORD *)&v46[v48[9]] = *(_QWORD *)&v138[v48[9]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v49 + 56))(v46, 0, 1, v48);
LABEL_59:
  v98 = a3[19];
  v99 = (_QWORD *)(a1 + v98);
  v100 = (uint64_t *)(a2 + v98);
  v102 = *v100;
  v101 = v100[1];
  *v99 = v102;
  v99[1] = v101;
  swift_bridgeObjectRelease();
  v103 = a3[20];
  v104 = (_QWORD *)(a1 + v103);
  v105 = (uint64_t *)(a2 + v103);
  v107 = *v105;
  v106 = v105[1];
  *v104 = v107;
  v104[1] = v106;
  swift_bridgeObjectRelease();
  v108 = a3[21];
  v109 = (_QWORD *)(a1 + v108);
  v110 = (uint64_t *)(a2 + v108);
  v112 = *v110;
  v111 = v110[1];
  *v109 = v112;
  v109[1] = v111;
  swift_bridgeObjectRelease();
  v113 = a3[22];
  v114 = (void *)(a1 + v113);
  v115 = (void *)(a2 + v113);
  v116 = sub_23C3F660C();
  v117 = *(_QWORD *)(v116 - 8);
  v118 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v117 + 48);
  v119 = v118(v114, 1, v116);
  v120 = v118(v115, 1, v116);
  if (!v119)
  {
    if (!v120)
    {
      (*(void (**)(void *, void *, uint64_t))(v117 + 40))(v114, v115, v116);
      goto LABEL_65;
    }
    (*(void (**)(void *, uint64_t))(v117 + 8))(v114, v116);
    goto LABEL_64;
  }
  if (v120)
  {
LABEL_64:
    v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    goto LABEL_65;
  }
  (*(void (**)(void *, void *, uint64_t))(v117 + 32))(v114, v115, v116);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
LABEL_65:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 40))(a1 + a3[23], a2 + a3[23], v12);
  v122 = a3[24];
  v123 = (_QWORD *)(a1 + v122);
  v124 = (uint64_t *)(a2 + v122);
  v126 = *v124;
  v125 = v124[1];
  *v123 = v126;
  v123[1] = v125;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C3DDD34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[8];
LABEL_14:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
    v12 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v16;
      v13 = a3[18];
    }
    else
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
      v12 = *(_QWORD *)(v17 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v17;
        v13 = a3[22];
      }
      else
      {
        v8 = sub_23C3F65A0();
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[23];
      }
    }
    goto LABEL_14;
  }
  v14 = *(_QWORD *)(a1 + a3[10]);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C3DDE64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85670);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85688);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[8];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[10]) = (a2 - 1);
        return result;
      }
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B856A0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[18];
      }
      else
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[22];
        }
        else
        {
          v10 = sub_23C3F65A0();
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[23];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23C3DDF84()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_23C3DE0F4();
  if (v0 <= 0x3F)
  {
    sub_23C3DE16C(319, &qword_256B85F50, (void (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    if (v1 <= 0x3F)
    {
      sub_23C3DE16C(319, &qword_256B85F58, (void (*)(uint64_t))type metadata accessor for SearchArtwork);
      if (v2 <= 0x3F)
      {
        sub_23C3DE16C(319, qword_256B85F60, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
        if (v3 <= 0x3F)
        {
          sub_23C3F65A0();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_23C3DE0F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256B85F40)
  {
    type metadata accessor for SearchArtwork();
    sub_23C39650C(&qword_256B85F48, (uint64_t (*)(uint64_t))type metadata accessor for SearchArtwork, (uint64_t)&protocol conformance descriptor for SearchArtwork);
    v0 = sub_23C3F66A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256B85F40);
  }
}

void sub_23C3DE16C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23C3F70A4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t getEnumTagSinglePayload for SearchItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_23C3DE294 + 4 * byte_23C3FDF62[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_23C3DE2C8 + 4 * byte_23C3FDF5D[v4]))();
}

uint64_t sub_23C3DE2C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3DE2D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3DE2D8);
  return result;
}

uint64_t sub_23C3DE2E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3DE2ECLL);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_23C3DE2F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3DE2F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchItem.CodingKeys()
{
  return &type metadata for SearchItem.CodingKeys;
}

unint64_t sub_23C3DE318()
{
  unint64_t result;

  result = qword_256B85FE0;
  if (!qword_256B85FE0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE20C, &type metadata for SearchItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85FE0);
  }
  return result;
}

unint64_t sub_23C3DE360()
{
  unint64_t result;

  result = qword_256B85FE8;
  if (!qword_256B85FE8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE17C, &type metadata for SearchItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85FE8);
  }
  return result;
}

unint64_t sub_23C3DE3A8()
{
  unint64_t result;

  result = qword_256B85FF0;
  if (!qword_256B85FF0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE1A4, &type metadata for SearchItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B85FF0);
  }
  return result;
}

uint64_t sub_23C3DE3EC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023C401410 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x616F4C7465737361 && a2 == 0xEE00657461745364 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xEA00000000006465 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574656C706D6F63 && a2 == 0xEE00746E756F4364 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6961746564 && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023C401050 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023C401430 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023C401450 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x5479636E65636572 && a2 == 0xEA00000000006761 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023C401030 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xED00006570795465 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023C401470 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023C401490 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023C4014B0 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6E696D6165727473 && a2 == 0xEE00656C74695467 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6E696D6165727473 && a2 == 0xEC0000004C525567 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    v5 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 20;
    else
      return 21;
  }
}

uint64_t static SearchHintsResult.empty(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = MEMORY[0x24BEE4AF8];
  a3[3] = a1;
  a3[4] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t static SearchHintsResult.default(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85460);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23C3F8160;
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 48) = a1;
  *(_QWORD *)(v6 + 56) = a2;
  *(_QWORD *)(v6 + 64) = 0;
  *(_QWORD *)(v6 + 72) = a1;
  *(_QWORD *)(v6 + 80) = a2;
  *a3 = 0;
  a3[1] = 0;
  a3[2] = v6;
  a3[3] = a1;
  a3[4] = a2;
  return swift_bridgeObjectRetain_n();
}

uint64_t SearchHintsResult.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchHintsResult.hints.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchHintsResult.term.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall SearchHintsResult.init(hints:term:identifier:)(FitnessSearch::SearchHintsResult *__return_ptr retstr, Swift::OpaquePointer hints, Swift::String term, Swift::String_optional identifier)
{
  retstr->identifier = identifier;
  retstr->hints = hints;
  retstr->term = term;
}

uint64_t sub_23C3DECE0(char a1)
{
  return *(_QWORD *)&aIdentifihints[8 * a1];
}

uint64_t sub_23C3DED00()
{
  char *v0;

  return sub_23C3DECE0(*v0);
}

uint64_t sub_23C3DED08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3DFA18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3DED2C()
{
  sub_23C3DF584();
  return sub_23C3F7344();
}

uint64_t sub_23C3DED54()
{
  sub_23C3DF584();
  return sub_23C3F7350();
}

uint64_t SearchHintsResult.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86020);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v10[2] = v1[3];
  v11 = v7;
  v10[1] = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3DF584();
  sub_23C3F7338();
  v16 = 0;
  v8 = v12;
  sub_23C3F723C();
  if (!v8)
  {
    v13 = v11;
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B86030);
    sub_23C3DF5C8(&qword_256B86038, (uint64_t (*)(void))sub_23C3A58C8, MEMORY[0x24BEE12A0]);
    sub_23C3F7284();
    v14 = 2;
    sub_23C3F7260();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SearchHintsResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86040);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3DF584();
  sub_23C3F732C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = 0;
  v9 = sub_23C3F71D0();
  v11 = v10;
  v20 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86030);
  v23 = 1;
  sub_23C3DF5C8(&qword_256B86048, (uint64_t (*)(void))sub_23C3A7CBC, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_23C3F7218();
  v22 = 2;
  v19 = v21;
  swift_bridgeObjectRetain();
  v12 = sub_23C3F71F4();
  v14 = v13;
  v15 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v19;
  *a2 = v20;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v15;
  a2[4] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C3DF190@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SearchHintsResult.init(from:)(a1, a2);
}

uint64_t sub_23C3DF1A4(_QWORD *a1)
{
  return SearchHintsResult.encode(to:)(a1);
}

uint64_t SearchHintsResult.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v1 + 8))
  {
    sub_23C3F7308();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  swift_bridgeObjectRetain();
  sub_23C395B90(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t SearchHintsResult.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_23C3F72F0();
  sub_23C3F7308();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23C395B90((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C3DF340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v1 + 8))
  {
    sub_23C3F7308();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  swift_bridgeObjectRetain();
  sub_23C395B90(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C3DF3F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_23C3F72F0();
  sub_23C3F7308();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23C395B90((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B11HintsResultV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  if (!v3)
  {
    if (v7)
      return 0;
    goto LABEL_10;
  }
  if (!v7)
    return 0;
  v11 = *a1 == *a2 && v3 == v7;
  if (v11 || (v12 = sub_23C3F72A8(), result = 0, (v12 & 1) != 0))
  {
LABEL_10:
    if ((sub_23C3EAE94(v4, v8) & 1) != 0)
    {
      if (v5 == v9 && v6 == v10)
        return 1;
      else
        return sub_23C3F72A8();
    }
    return 0;
  }
  return result;
}

unint64_t sub_23C3DF584()
{
  unint64_t result;

  result = qword_256B86028;
  if (!qword_256B86028)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE4D8, &type metadata for SearchHintsResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86028);
  }
  return result;
}

uint64_t sub_23C3DF5C8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86030);
    v8 = a2();
    result = MEMORY[0x24261DE88](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C3DF634()
{
  unint64_t result;

  result = qword_256B86050;
  if (!qword_256B86050)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchHintsResult, &type metadata for SearchHintsResult);
    atomic_store(result, (unint64_t *)&qword_256B86050);
  }
  return result;
}

uint64_t destroy for SearchHintsResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SearchHintsResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SearchHintsResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchHintsResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchHintsResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchHintsResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchHintsResult()
{
  return &type metadata for SearchHintsResult;
}

uint64_t storeEnumTagSinglePayload for SearchHintsResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C3DF8C0 + 4 * byte_23C3FE325[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C3DF8F4 + 4 * byte_23C3FE320[v4]))();
}

uint64_t sub_23C3DF8F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3DF8FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3DF904);
  return result;
}

uint64_t sub_23C3DF910(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3DF918);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3DF91C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3DF924(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchHintsResult.CodingKeys()
{
  return &type metadata for SearchHintsResult.CodingKeys;
}

unint64_t sub_23C3DF944()
{
  unint64_t result;

  result = qword_256B86058;
  if (!qword_256B86058)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE4B0, &type metadata for SearchHintsResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86058);
  }
  return result;
}

unint64_t sub_23C3DF98C()
{
  unint64_t result;

  result = qword_256B86060;
  if (!qword_256B86060)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE420, &type metadata for SearchHintsResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86060);
  }
  return result;
}

unint64_t sub_23C3DF9D4()
{
  unint64_t result;

  result = qword_256B86068;
  if (!qword_256B86068)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE448, &type metadata for SearchHintsResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86068);
  }
  return result;
}

uint64_t sub_23C3DFA18(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E6968 && a2 == 0xE500000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1836213620 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t SearchHintsState.term.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 16))
    return 0;
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall SearchHintsState.containsMatchingHint(label:)(Swift::String label)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  _QWORD *i;
  BOOL v7;

  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  object = label._object;
  countAndFlagsBits = label._countAndFlagsBits;
  for (i = (_QWORD *)(v2 + 56); ; i += 7)
  {
    v7 = *(i - 1) == countAndFlagsBits && *i == (_QWORD)object;
    if (v7 || (sub_23C3F72A8() & 1) != 0)
      break;
    if (!--v3)
      return 0;
  }
  return 1;
}

uint64_t SearchHintsState.datasetIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if (!v0[2])
    return 0;
  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchArtwork.backgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C3B26F0(v1, a1, &qword_256B85690);
}

uint64_t SearchArtwork.flavorDescriptor.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for SearchArtwork() + 20));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchArtwork()
{
  uint64_t result;

  result = qword_256B86118;
  if (!qword_256B86118)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SearchArtwork.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchArtwork() + 24));
}

uint64_t SearchArtwork.templateURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SearchArtwork();
  return sub_23C3B26F0(v1 + *(int *)(v3 + 28), a1, &qword_256B85698);
}

uint64_t SearchArtwork.textColor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SearchArtwork();
  return sub_23C3B26F0(v1 + *(int *)(v3 + 32), a1, &qword_256B85690);
}

uint64_t SearchArtwork.width.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SearchArtwork() + 36));
}

uint64_t SearchArtwork.init(backgroundColor:flavorDescriptor:height:templateURL:textColor:width:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  __int128 v18;

  v17 = a2[1];
  v18 = *a2;
  v12 = *((_QWORD *)a2 + 4);
  v13 = *((_QWORD *)a2 + 5);
  sub_23C3B2564(a1, a7, &qword_256B85690);
  v14 = (int *)type metadata accessor for SearchArtwork();
  v15 = a7 + v14[5];
  *(_OWORD *)v15 = v18;
  *(_OWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = v12;
  *(_QWORD *)(v15 + 40) = v13;
  *(_QWORD *)(a7 + v14[6]) = a3;
  sub_23C3B2564(a4, a7 + v14[7], &qword_256B85698);
  result = sub_23C3B2564(a5, a7 + v14[8], &qword_256B85690);
  *(_QWORD *)(a7 + v14[9]) = a6;
  return result;
}

uint64_t sub_23C3DFE90(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C3DFEC8 + 4 * byte_23C3FE568[a1]))(0xD000000000000010, 0x800000023C4014D0);
}

uint64_t sub_23C3DFEC8()
{
  return 0x756F72676B636162;
}

uint64_t sub_23C3DFEEC()
{
  return 0x746867696568;
}

uint64_t sub_23C3DFF00()
{
  return 0x6574616C706D6574;
}

uint64_t sub_23C3DFF20()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_23C3DFF3C()
{
  return 0x6874646977;
}

uint64_t sub_23C3DFF50()
{
  unsigned __int8 *v0;

  return sub_23C3DFE90(*v0);
}

uint64_t sub_23C3DFF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3E2930(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3DFF7C()
{
  sub_23C3E028C();
  return sub_23C3F7344();
}

uint64_t sub_23C3DFFA4()
{
  sub_23C3E028C();
  return sub_23C3F7350();
}

uint64_t sub_23C3DFFCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C3B26F0(v1, a1, &qword_256B85690);
}

uint64_t sub_23C3DFFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23C3B26F0(v2 + *(int *)(a1 + 28), a2, &qword_256B85698);
}

uint64_t SearchArtwork.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86070);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3E028C();
  sub_23C3F7338();
  LOBYTE(v17) = 0;
  sub_23C3F6684();
  sub_23C39650C(&qword_256B86080, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB0]);
  sub_23C3F7254();
  if (!v2)
  {
    v9 = type metadata accessor for SearchArtwork();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 20));
    v11 = *v10;
    v12 = v10[1];
    v14 = *((_QWORD *)v10 + 4);
    v13 = *((_QWORD *)v10 + 5);
    v17 = v11;
    v18 = v12;
    v19 = v14;
    v20 = v13;
    v21 = 1;
    sub_23C3E02D0();
    sub_23C3F7284();
    LOBYTE(v17) = 2;
    sub_23C3F7278();
    v16[1] = v3 + *(int *)(v9 + 28);
    LOBYTE(v17) = 3;
    sub_23C3F660C();
    sub_23C39650C(&qword_256B85E88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_23C3F7254();
    LOBYTE(v17) = 4;
    sub_23C3F7254();
    LOBYTE(v17) = 5;
    sub_23C3F7278();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_23C3E028C()
{
  unint64_t result;

  result = qword_256B86078;
  if (!qword_256B86078)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE79C, &type metadata for SearchArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86078);
  }
  return result;
}

unint64_t sub_23C3E02D0()
{
  unint64_t result;

  result = qword_256B86088;
  if (!qword_256B86088)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchArtworkFlavorDescriptor, &type metadata for SearchArtworkFlavorDescriptor);
    atomic_store(result, (unint64_t *)&qword_256B86088);
  }
  return result;
}

uint64_t SearchArtwork.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)&v29 - v10;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86090);
  v11 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (int *)type metadata accessor for SearchArtwork();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_23C3E028C();
  v33 = v13;
  v18 = v36;
  sub_23C3F732C();
  if (v18)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  v29 = v9;
  v30 = v5;
  v36 = v11;
  sub_23C3F6684();
  LOBYTE(v37) = 0;
  sub_23C39650C(&qword_256B86098, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC8]);
  v19 = (uint64_t)v32;
  v20 = v33;
  sub_23C3F71E8();
  sub_23C3B2564(v19, (uint64_t)v16, &qword_256B85690);
  v41 = 1;
  sub_23C3E07E8();
  sub_23C3F7218();
  v21 = v38;
  v22 = v39;
  v23 = v40;
  v24 = &v16[v14[5]];
  *(_OWORD *)v24 = v37;
  *((_OWORD *)v24 + 1) = v21;
  *((_QWORD *)v24 + 4) = v22;
  *((_QWORD *)v24 + 5) = v23;
  LOBYTE(v37) = 2;
  *(_QWORD *)&v16[v14[6]] = sub_23C3F720C();
  sub_23C3F660C();
  LOBYTE(v37) = 3;
  sub_23C39650C(&qword_256B85EC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
  v25 = (uint64_t)v30;
  sub_23C3F71E8();
  sub_23C3B2564(v25, (uint64_t)&v16[v14[7]], &qword_256B85698);
  LOBYTE(v37) = 4;
  v26 = (uint64_t)v29;
  sub_23C3F71E8();
  sub_23C3B2564(v26, (uint64_t)&v16[v14[8]], &qword_256B85690);
  LOBYTE(v37) = 5;
  v27 = sub_23C3F720C();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v34);
  *(_QWORD *)&v16[v14[9]] = v27;
  sub_23C3E082C((uint64_t)v16, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return sub_23C3E0870((uint64_t)v16);
}

unint64_t sub_23C3E07E8()
{
  unint64_t result;

  result = qword_256B860A0;
  if (!qword_256B860A0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchArtworkFlavorDescriptor, &type metadata for SearchArtworkFlavorDescriptor);
    atomic_store(result, (unint64_t *)&qword_256B860A0);
  }
  return result;
}

uint64_t sub_23C3E082C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchArtwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3E0870(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SearchArtwork();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C3E08AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchArtwork.init(from:)(a1, a2);
}

uint64_t sub_23C3E08C0(_QWORD *a1)
{
  return SearchArtwork.encode(to:)(a1);
}

uint64_t SearchArtwork.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  v1 = v0;
  v2 = sub_23C3F660C();
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
  MEMORY[0x24BDAC7A8](v4);
  v27 = (uint64_t)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23C3F6684();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v29 = (uint64_t)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - v13;
  sub_23C3B26F0(v1, (uint64_t)&v26 - v13, &qword_256B85690);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v15 = v28(v14, 1, v6);
  v32 = v9;
  v33 = v7;
  if (v15 == 1)
  {
    sub_23C3F7308();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v14, v6);
    sub_23C3F7308();
    sub_23C39650C(&qword_256B860A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C3F6EE8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v16 = type metadata accessor for SearchArtwork();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  sub_23C3F72FC();
  v17 = v27;
  sub_23C3B26F0(v1 + *(int *)(v16 + 28), v27, &qword_256B85698);
  v19 = v30;
  v18 = v31;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v17, 1, v31) == 1)
  {
    sub_23C3F7308();
  }
  else
  {
    v20 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v26, v17, v18);
    sub_23C3F7308();
    sub_23C39650C(&qword_256B85EC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23C3F6EE8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v18);
  }
  v21 = v29;
  sub_23C3B26F0(v1 + *(int *)(v16 + 32), v29, &qword_256B85690);
  v22 = v28((char *)v21, 1, v6);
  v24 = v32;
  v23 = v33;
  if (v22 == 1)
  {
    sub_23C3F7308();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v32, v21, v6);
    sub_23C3F7308();
    sub_23C39650C(&qword_256B860A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FB8]);
    sub_23C3F6EE8();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v6);
  }
  return sub_23C3F72FC();
}

uint64_t SearchArtwork.hashValue.getter()
{
  sub_23C3F72F0();
  SearchArtwork.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3E0D08()
{
  sub_23C3F72F0();
  SearchArtwork.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3E0D48()
{
  sub_23C3F72F0();
  SearchArtwork.hash(into:)();
  return sub_23C3F7320();
}

BOOL _s13FitnessSearch0B7ArtworkV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t *v37;
  uint64_t v38;
  _BOOL8 result;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  uint64_t v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t v111;

  v106 = sub_23C3F660C();
  v104 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v97 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85FF8);
  MEMORY[0x24BDAC7A8](v103);
  v105 = (uint64_t)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v101 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v107 = (uint64_t)&v93 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v108 = (uint64_t)&v93 - v11;
  v12 = sub_23C3F6684();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v109 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86180);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v102 = (uint64_t)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v93 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v96 = (uint64_t)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v99 = (uint64_t)&v93 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v100 = (uint64_t)&v93 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v93 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v93 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v93 - v33;
  sub_23C3B26F0(a1, (uint64_t)&v93 - v33, &qword_256B85690);
  v111 = a2;
  sub_23C3B26F0(a2, (uint64_t)v32, &qword_256B85690);
  v98 = v15;
  v35 = (uint64_t)&v19[*(int *)(v15 + 48)];
  sub_23C3B26F0((uint64_t)v34, (uint64_t)v19, &qword_256B85690);
  sub_23C3B26F0((uint64_t)v32, v35, &qword_256B85690);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v36((uint64_t)v19, 1, v12) == 1)
  {
    v110 = v36;
    sub_23C39AA6C((uint64_t)v32, &qword_256B85690);
    sub_23C39AA6C((uint64_t)v34, &qword_256B85690);
    if (v110(v35, 1, v12) == 1)
    {
      v95 = v13;
      sub_23C39AA6C((uint64_t)v19, &qword_256B85690);
      goto LABEL_11;
    }
LABEL_6:
    v37 = &qword_256B86180;
    v38 = (uint64_t)v19;
    goto LABEL_7;
  }
  sub_23C3B26F0((uint64_t)v19, (uint64_t)v29, &qword_256B85690);
  if (v36(v35, 1, v12) == 1)
  {
    sub_23C39AA6C((uint64_t)v32, &qword_256B85690);
    sub_23C39AA6C((uint64_t)v34, &qword_256B85690);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v29, v12);
    goto LABEL_6;
  }
  v110 = v36;
  v40 = v12;
  v41 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v109, v35, v40);
  sub_23C39650C(&qword_256B86188, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC0]);
  LODWORD(v94) = sub_23C3F6F24();
  v42 = a1;
  v95 = v13;
  v43 = *(void (**)(char *, uint64_t))(v13 + 8);
  v44 = v41;
  v12 = v40;
  v43(v44, v40);
  sub_23C39AA6C((uint64_t)v32, &qword_256B85690);
  sub_23C39AA6C((uint64_t)v34, &qword_256B85690);
  v43(v29, v40);
  a1 = v42;
  sub_23C39AA6C((uint64_t)v19, &qword_256B85690);
  if ((v94 & 1) == 0)
    return 0;
LABEL_11:
  v45 = type metadata accessor for SearchArtwork();
  v93 = a1;
  v94 = (int *)v45;
  v46 = *(int *)(v45 + 20);
  v47 = *(_QWORD *)(a1 + v46);
  v48 = *(_QWORD *)(a1 + v46 + 8);
  v49 = *(_QWORD *)(a1 + v46 + 16);
  v50 = *(_QWORD *)(a1 + v46 + 24);
  v51 = *(_QWORD *)(a1 + v46 + 32);
  v52 = *(_QWORD *)(a1 + v46 + 40);
  v53 = (_QWORD *)(v111 + v46);
  v54 = v53[2];
  v55 = v53[3];
  v56 = v53[4];
  v57 = v53[5];
  if (v47 == *v53 && v48 == v53[1] || (v58 = sub_23C3F72A8(), result = 0, (v58 & 1) != 0))
  {
    if (v49 == v54 && v50 == v55 || (v59 = sub_23C3F72A8(), result = 0, (v59 & 1) != 0))
    {
      if (v51 == v56 && v52 == v57 || (v60 = sub_23C3F72A8(), result = 0, (v60 & 1) != 0))
      {
        v62 = v93;
        v61 = v94;
        v63 = v111;
        if (*(_QWORD *)(v93 + v94[6]) != *(_QWORD *)(v111 + v94[6]))
          return 0;
        v64 = v108;
        sub_23C3B26F0(v93 + v94[7], v108, &qword_256B85698);
        v65 = v107;
        sub_23C3B26F0(v63 + v61[7], v107, &qword_256B85698);
        v66 = v105;
        v67 = v105 + *(int *)(v103 + 48);
        sub_23C3B26F0(v64, v105, &qword_256B85698);
        sub_23C3B26F0(v65, v67, &qword_256B85698);
        v68 = v104;
        v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
        v70 = v106;
        if (v69(v66, 1, v106) == 1)
        {
          sub_23C39AA6C(v65, &qword_256B85698);
          sub_23C39AA6C(v64, &qword_256B85698);
          v71 = v69(v67, 1, v70);
          v72 = v95;
          if (v71 == 1)
          {
            sub_23C39AA6C(v66, &qword_256B85698);
LABEL_28:
            v79 = v72;
            v80 = v94;
            v81 = v100;
            sub_23C3B26F0(v62 + v94[8], v100, &qword_256B85690);
            v82 = v99;
            sub_23C3B26F0(v63 + v80[8], v99, &qword_256B85690);
            v83 = v102;
            v84 = v102 + *(int *)(v98 + 48);
            sub_23C3B26F0(v81, v102, &qword_256B85690);
            sub_23C3B26F0(v82, v84, &qword_256B85690);
            v85 = v110;
            if (v110(v83, 1, v12) == 1)
            {
              sub_23C39AA6C(v82, &qword_256B85690);
              sub_23C39AA6C(v81, &qword_256B85690);
              if (v85(v84, 1, v12) == 1)
              {
                sub_23C39AA6C(v102, &qword_256B85690);
                return *(_QWORD *)(v62 + v80[9]) == *(_QWORD *)(v63 + v80[9]);
              }
            }
            else
            {
              v86 = v85;
              v87 = v96;
              sub_23C3B26F0(v102, v96, &qword_256B85690);
              if (v86(v84, 1, v12) != 1)
              {
                v88 = v82;
                v89 = v12;
                v90 = v109;
                (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v109, v84, v89);
                sub_23C39650C(&qword_256B86188, (uint64_t (*)(uint64_t))MEMORY[0x24BE34FA0], MEMORY[0x24BE34FC0]);
                LODWORD(v110) = sub_23C3F6F24();
                v91 = v81;
                v92 = *(void (**)(char *, uint64_t))(v79 + 8);
                v92(v90, v89);
                sub_23C39AA6C(v88, &qword_256B85690);
                sub_23C39AA6C(v91, &qword_256B85690);
                v80 = v94;
                v92((char *)v87, v89);
                sub_23C39AA6C(v102, &qword_256B85690);
                if ((v110 & 1) != 0)
                  return *(_QWORD *)(v62 + v80[9]) == *(_QWORD *)(v63 + v80[9]);
                return 0;
              }
              sub_23C39AA6C(v82, &qword_256B85690);
              sub_23C39AA6C(v81, &qword_256B85690);
              (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v87, v12);
            }
            v37 = &qword_256B86180;
            v38 = v102;
            goto LABEL_7;
          }
        }
        else
        {
          v73 = v101;
          sub_23C3B26F0(v66, v101, &qword_256B85698);
          v74 = v69(v67, 1, v70);
          v72 = v95;
          if (v74 != 1)
          {
            v75 = v73;
            v76 = v97;
            (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v97, v67, v70);
            sub_23C39650C(&qword_256B86010, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
            v77 = v75;
            LODWORD(v103) = sub_23C3F6F24();
            v78 = *(void (**)(char *, uint64_t))(v68 + 8);
            v78(v76, v70);
            sub_23C39AA6C(v107, &qword_256B85698);
            sub_23C39AA6C(v108, &qword_256B85698);
            v78((char *)v77, v70);
            sub_23C39AA6C(v66, &qword_256B85698);
            if ((v103 & 1) == 0)
              return 0;
            goto LABEL_28;
          }
          sub_23C39AA6C(v107, &qword_256B85698);
          sub_23C39AA6C(v108, &qword_256B85698);
          (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v73, v70);
        }
        v37 = &qword_256B85FF8;
        v38 = v66;
LABEL_7:
        sub_23C39AA6C(v38, v37);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_23C3E1714()
{
  return sub_23C39650C(&qword_256B85EB8, (uint64_t (*)(uint64_t))type metadata accessor for SearchArtwork, (uint64_t)&protocol conformance descriptor for SearchArtwork);
}

uint64_t sub_23C3E1740()
{
  return sub_23C39650C(&qword_256B85E80, (uint64_t (*)(uint64_t))type metadata accessor for SearchArtwork, (uint64_t)&protocol conformance descriptor for SearchArtwork);
}

uint64_t sub_23C3E176C()
{
  return sub_23C39650C(&qword_256B860B0, (uint64_t (*)(uint64_t))type metadata accessor for SearchArtwork, (uint64_t)&protocol conformance descriptor for SearchArtwork);
}

uint64_t sub_23C3E1798()
{
  return sub_23C39650C(&qword_256B860B8, (uint64_t (*)(uint64_t))type metadata accessor for SearchArtwork, (uint64_t)&protocol conformance descriptor for SearchArtwork);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchArtwork(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  char *__dst;
  unsigned int (*v33)(uint64_t *, uint64_t, uint64_t);
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23C3F6684();
    v8 = *(_QWORD *)(v7 - 8);
    v33 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    v34 = v7;
    v31 = v8;
    if (v33(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = a3[6];
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    v17 = v14[4];
    v18 = v14[5];
    v19 = *(uint64_t *)((char *)a2 + v12);
    v13[4] = v17;
    v13[5] = v18;
    *(uint64_t *)((char *)a1 + v12) = v19;
    v20 = a3[7];
    __dst = (char *)a1 + v20;
    v21 = (char *)a2 + v20;
    v22 = sub_23C3F660C();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
      memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    }
    v26 = a3[8];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    if (v33((uint64_t *)((char *)a2 + v26), 1, v34))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v27, v28, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v34);
    }
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  }
  return a1;
}

uint64_t destroy for SearchArtwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = sub_23C3F6684();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_23C3F660C();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = a1 + *(int *)(a2 + 32);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v10, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  return result;
}

char *initializeWithCopy for SearchArtwork(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  int *v33;

  v6 = sub_23C3F6684();
  v7 = *(_QWORD *)(v6 - 8);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v32 = v6;
  v30 = v7;
  if (v31(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = *((_QWORD *)v12 + 3);
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  *((_QWORD *)v11 + 3) = v14;
  v15 = *((_QWORD *)v12 + 4);
  v16 = *((_QWORD *)v12 + 5);
  v17 = *(_QWORD *)&a2[v10];
  *((_QWORD *)v11 + 4) = v15;
  *((_QWORD *)v11 + 5) = v16;
  *(_QWORD *)&a1[v10] = v17;
  v33 = a3;
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23C3F660C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v25 = v33[8];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v31(&a2[v25], 1, v32))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v26, v27, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v32);
  }
  *(_QWORD *)&a1[v33[9]] = *(_QWORD *)&a2[v33[9]];
  return a1;
}

char *assignWithCopy for SearchArtwork(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v31;
  int *v32;

  v6 = sub_23C3F6684();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v31 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)&a2[v12];
  *((_QWORD *)v13 + 1) = *(_QWORD *)&a2[v12 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  *((_QWORD *)v13 + 5) = *((_QWORD *)v14 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v32 = a3;
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_23C3F660C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  v24 = v32[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = v8(&a1[v24], 1, v6);
  v28 = v8(v26, 1, v6);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v25, v26, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v6);
    goto LABEL_18;
  }
  if (v28)
  {
LABEL_18:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v25, v26, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v25, 0, 1, v6);
LABEL_19:
  *(_QWORD *)&a1[v32[9]] = *(_QWORD *)&a2[v32[9]];
  return a1;
}

char *initializeWithTake for SearchArtwork(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = sub_23C3F6684();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = a3[6];
  v12 = &a1[v10];
  v13 = &a2[v10];
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  v15 = *((_OWORD *)v13 + 2);
  v16 = *(_QWORD *)&a2[v11];
  *((_OWORD *)v12 + 2) = v15;
  *(_QWORD *)&a1[v11] = v16;
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23C3F660C();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v23 = a3[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  if (v8(&a2[v23], 1, v6))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v24, v25, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v24, 0, 1, v6);
  }
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *assignWithTake for SearchArtwork(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v34;
  int *v35;

  v6 = sub_23C3F6684();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v34 = v7;
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)&a2[v12 + 8];
  *(_QWORD *)v13 = *(_QWORD *)&a2[v12];
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v14 + 3);
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = v16;
  swift_bridgeObjectRelease();
  v17 = *((_QWORD *)v14 + 5);
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  *((_QWORD *)v13 + 5) = v17;
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v35 = a3;
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = sub_23C3F660C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
LABEL_13:
  v27 = v35[8];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = v8(&a1[v27], 1, v6);
  v31 = v8(v29, 1, v6);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v28, v29, v6);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v6);
    goto LABEL_18;
  }
  if (v31)
  {
LABEL_18:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v28, v29, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v28, 0, 1, v6);
LABEL_19:
  *(_QWORD *)&a1[v35[9]] = *(_QWORD *)&a2[v35[9]];
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchArtwork()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C3E2554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchArtwork()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23C3E2614(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85690);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85698);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23C3E26C4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23C3DE16C(319, qword_256B86128, (void (*)(uint64_t))MEMORY[0x24BE34FA0]);
  if (v0 <= 0x3F)
  {
    sub_23C3DE16C(319, qword_256B85F60, (void (*)(uint64_t))MEMORY[0x24BDCDAC0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for SearchArtwork.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23C3E27D8 + 4 * byte_23C3FE573[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23C3E280C + 4 * byte_23C3FE56E[v4]))();
}

uint64_t sub_23C3E280C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3E2814(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3E281CLL);
  return result;
}

uint64_t sub_23C3E2828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3E2830);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23C3E2834(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3E283C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchArtwork.CodingKeys()
{
  return &type metadata for SearchArtwork.CodingKeys;
}

unint64_t sub_23C3E285C()
{
  unint64_t result;

  result = qword_256B86168;
  if (!qword_256B86168)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE774, &type metadata for SearchArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86168);
  }
  return result;
}

unint64_t sub_23C3E28A4()
{
  unint64_t result;

  result = qword_256B86170;
  if (!qword_256B86170)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE6E4, &type metadata for SearchArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86170);
  }
  return result;
}

unint64_t sub_23C3E28EC()
{
  unint64_t result;

  result = qword_256B86178;
  if (!qword_256B86178)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FE70C, &type metadata for SearchArtwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86178);
  }
  return result;
}

uint64_t sub_23C3E2930(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023C4014D0 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xEB000000004C5255 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t destroy for SearchSuggesstionsView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SearchSuggesstionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SearchSuggesstionsView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SearchSuggesstionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchSuggesstionsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchSuggesstionsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSuggesstionsView()
{
  return &type metadata for SearchSuggesstionsView;
}

uint64_t sub_23C3E2DC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3E2DD8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _OWORD *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30[8];
  uint64_t v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B861B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86208);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C3E3C98((uint64_t)a1, (uint64_t)v30);
  sub_23C3E3C98((uint64_t)v30, (uint64_t)&v31);
  if (v31)
  {
    v28 = v31;
    v29 = a1[1];
    v24 = v5;
    v12 = (_OWORD *)swift_allocObject();
    v23 = v4;
    v13 = a1[1];
    v12[1] = *a1;
    v12[2] = v13;
    v12[3] = a1[2];
    sub_23C3E3D1C((uint64_t)v30);
    sub_23C3E3D1C((uint64_t)v30);
    sub_23C3E3D44((uint64_t)&v29);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B86030);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B86218);
    sub_23C3935DC(&qword_256B86220, &qword_256B86030, MEMORY[0x24BEE12D8]);
    v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B861C0);
    v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B861C8);
    v25 = a2;
    v16 = v15;
    v17 = sub_23C3E3AF4();
    v26 = v16;
    v27 = v17;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v26 = v14;
    v27 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    sub_23C3E3D6C();
    sub_23C3F6D80();
    __swift_instantiateConcreteTypeFromMangledName(qword_256B845D0);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_23C3F8160;
    *(_QWORD *)(v19 + 32) = 0x6974736567677553;
    *(_QWORD *)(v19 + 40) = 0xEB00000000736E6FLL;
    sub_23C3E3A38();
    v20 = v23;
    sub_23C3F6B94();
    a2 = v25;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v11, v8);
    v21 = 0;
  }
  else
  {
    v21 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, v21, 1, v8);
}

uint64_t sub_23C3E30A8@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;

  v51 = a3;
  v5 = sub_23C3F6EDC();
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86230);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B861C0);
  v12 = *(_QWORD *)(v11 - 8);
  v49 = v11;
  v50 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v46 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[1];
  v63 = *a1;
  v64 = v14;
  v15 = a1[2];
  v44 = a1[1];
  v45 = v63;
  v65 = v15;
  v66 = *((_QWORD *)a1 + 6);
  v16 = v66;
  v43 = a1[2];
  v17 = *(_QWORD *)(a2 + 16);
  v18 = *(_QWORD *)(a2 + 24);
  sub_23C3E3C98(a2, (uint64_t)&v62);
  v19 = swift_allocObject();
  v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v19 + 32) = v20;
  v21 = v63;
  v22 = v64;
  *(_OWORD *)(v19 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v19 + 64) = v21;
  v23 = v65;
  *(_OWORD *)(v19 + 80) = v22;
  *(_OWORD *)(v19 + 96) = v23;
  *(_QWORD *)(v19 + 112) = v66;
  sub_23C3E3E44((uint64_t)&v63);
  swift_bridgeObjectRetain_n();
  sub_23C3E3E44((uint64_t)&v63);
  sub_23C3E3D1C((uint64_t)&v62);
  swift_retain();
  v24 = sub_23C3F6ABC();
  sub_23C3F6750();
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v67 = 0;
  v33 = sub_23C3F6948();
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = 0;
  v52 = v45;
  v53 = v44;
  v54 = v43;
  *(_QWORD *)&v55 = v16;
  *((_QWORD *)&v55 + 1) = v17;
  *(_QWORD *)&v56 = v18;
  *((_QWORD *)&v56 + 1) = sub_23C3E3DFC;
  *(_QWORD *)&v57 = v19;
  BYTE8(v57) = v24;
  *(_QWORD *)&v58 = v26;
  *((_QWORD *)&v58 + 1) = v28;
  *(_QWORD *)&v59 = v30;
  *((_QWORD *)&v59 + 1) = v32;
  LOBYTE(v60) = v67;
  *((_QWORD *)&v60 + 1) = v33;
  *(_QWORD *)&v61 = sub_23C3E3E9C;
  *((_QWORD *)&v61 + 1) = v34;
  v68 = v63;
  v69 = v64;
  v70 = v65;
  *(_QWORD *)&v71 = v66;
  sub_23C3E3480(&v68);
  v35 = sub_23C3F6EB8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v10, 0, 1, v35);
  sub_23C3F6EC4();
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B861C8);
  v37 = sub_23C3E3AF4();
  v38 = v46;
  sub_23C3F6B7C();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v48);
  sub_23C3E3EA4((uint64_t)v10);
  v74 = v58;
  v75 = v59;
  v76 = v60;
  v77 = v61;
  v70 = v54;
  v71 = v55;
  v72 = v56;
  v73 = v57;
  v68 = v52;
  v69 = v53;
  sub_23C3E3EE4((uint64_t)&v68);
  __swift_instantiateConcreteTypeFromMangledName(qword_256B845D0);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_23C3F8160;
  *(_QWORD *)&v52 = v65;
  *(_QWORD *)(v39 + 32) = sub_23C3F729C();
  *(_QWORD *)(v39 + 40) = v40;
  *(_QWORD *)&v52 = v36;
  *((_QWORD *)&v52 + 1) = v37;
  swift_getOpaqueTypeConformance2();
  v41 = v49;
  sub_23C3F6BA0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v38, v41);
}

uint64_t sub_23C3E3480(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_23C3F6E88();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23C3F6EA0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  swift_bridgeObjectRetain();
  sub_23C3F6E94();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86238);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23C3FE7F0;
  *(_QWORD *)(inited + 32) = 1701667182;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v8 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 72) = v8;
  strcpy((char *)(inited + 80), "impressionType");
  *(_BYTE *)(inited + 95) = -18;
  strcpy((char *)(inited + 96), "hintListItem");
  *(_BYTE *)(inited + 109) = 0;
  *(_WORD *)(inited + 110) = -5120;
  *(_QWORD *)(inited + 120) = v8;
  *(_QWORD *)(inited + 128) = 0x6973736572706D69;
  *(_QWORD *)(inited + 168) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 136) = 0xEF7865646E496E6FLL;
  *(_QWORD *)(inited + 144) = v6;
  swift_bridgeObjectRetain();
  sub_23C3E3660(inited);
  sub_23C3F6E7C();
  v9 = MEMORY[0x24BEE4AF8];
  sub_23C3E3F58(MEMORY[0x24BEE4AF8]);
  sub_23C3E3F58(v9);
  return sub_23C3F6EAC();
}

unint64_t sub_23C3E3660(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86240);
  v2 = sub_23C3F7194();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23C3E408C(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_23C3E4228(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23C3E4294);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23C3E40D4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23C3E3794@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[3];

  v19 = a1;
  v2 = sub_23C3F67D4();
  v17 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86190);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86198);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1[1];
  v25[0] = *v1;
  v25[1] = v12;
  v25[2] = v1[2];
  v20 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B861A0);
  sub_23C3E39AC();
  sub_23C3F6B40();
  sub_23C3F67C8();
  v13 = sub_23C3935DC(&qword_256B861F8, &qword_256B86190, MEMORY[0x24BDF1A30]);
  v14 = MEMORY[0x24BDEC720];
  sub_23C3F6C78();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v21 = v5;
  v22 = v2;
  v23 = v13;
  v24 = v14;
  swift_getOpaqueTypeConformance2();
  sub_23C3E3C54();
  sub_23C3F6BC4();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t sub_23C3E39A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C3E2DD8(*(_OWORD **)(v1 + 16), a1);
}

unint64_t sub_23C3E39AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_256B861A8;
  if (!qword_256B861A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B861A0);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B861B0);
    v2[2] = sub_23C3E3A38();
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24261DE88](MEMORY[0x24BDF5578], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B861A8);
  }
  return result;
}

unint64_t sub_23C3E3A38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_256B861B8;
  if (!qword_256B861B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B861B0);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B861C0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B861C8);
    sub_23C3E3AF4();
    v3[1] = v2;
    v3[2] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24261DE88](MEMORY[0x24BDF4A08], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256B861B8);
  }
  return result;
}

unint64_t sub_23C3E3AF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B861D0;
  if (!qword_256B861D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B861C8);
    v2[0] = sub_23C3E3B60();
    v2[1] = sub_23C3E3C10();
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B861D0);
  }
  return result;
}

unint64_t sub_23C3E3B60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B861D8;
  if (!qword_256B861D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B861E0);
    v2[0] = sub_23C3E3BCC();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B861D8);
  }
  return result;
}

unint64_t sub_23C3E3BCC()
{
  unint64_t result;

  result = qword_256B861E8;
  if (!qword_256B861E8)
  {
    result = MEMORY[0x24261DE88](&unk_23C400268, &type metadata for SearchSuggestionView);
    atomic_store(result, (unint64_t *)&qword_256B861E8);
  }
  return result;
}

unint64_t sub_23C3E3C10()
{
  unint64_t result;

  result = qword_256B861F0;
  if (!qword_256B861F0)
  {
    result = MEMORY[0x24261DE88](MEMORY[0x24BDF08D8], MEMORY[0x24BDF08E8]);
    atomic_store(result, (unint64_t *)&qword_256B861F0);
  }
  return result;
}

unint64_t sub_23C3E3C54()
{
  unint64_t result;

  result = qword_256B86200;
  if (!qword_256B86200)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FDEAC, &type metadata for SearchSuggestionLabelStyle);
    atomic_store(result, (unint64_t *)&qword_256B86200);
  }
  return result;
}

uint64_t sub_23C3E3C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86210);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3E3CE0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C3E3D14@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23C3E30A8(a1, v2 + 16, a2);
}

uint64_t sub_23C3E3D1C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23C3E3D44(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_23C3E3D6C()
{
  unint64_t result;

  result = qword_256B86228;
  if (!qword_256B86228)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchHint, &type metadata for SearchHint);
    atomic_store(result, (unint64_t *)&qword_256B86228);
  }
  return result;
}

uint64_t sub_23C3E3DB0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23C3E3DFC()
{
  uint64_t v0;
  uint64_t (*v1)(_OWORD *);
  __int128 v2;
  _OWORD v4[3];
  uint64_t v5;

  v1 = *(uint64_t (**)(_OWORD *))(v0 + 48);
  v2 = *(_OWORD *)(v0 + 80);
  v4[0] = *(_OWORD *)(v0 + 64);
  v4[1] = v2;
  v4[2] = *(_OWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 112);
  return v1(v4);
}

uint64_t sub_23C3E3E44(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23C3E3E8C()
{
  return swift_deallocObject();
}

uint64_t sub_23C3E3E9C()
{
  uint64_t v0;

  return nullsub_1(*(double *)(v0 + 16));
}

uint64_t sub_23C3E3EA4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86230);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C3E3EE4(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23C3E3F58(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86240);
  v2 = sub_23C3F7194();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23C3E408C(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_23C3E4228(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23C3E40E4);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23C3E40D4(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23C3E408C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_23C3E40D4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_23C3E40E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_23C3F72A8() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_23C3F72A8() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_23C3F72A8() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_23C3E4228(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_23C3F72F0();
  sub_23C3F6F6C();
  v5 = sub_23C3F7320();
  return a3(a1, a2, v5);
}

unint64_t sub_23C3E4294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23C3F72A8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23C3F72A8() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_23C3E4374()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86198);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86190);
  sub_23C3F67D4();
  sub_23C3935DC(&qword_256B861F8, &qword_256B86190, MEMORY[0x24BDF1A30]);
  swift_getOpaqueTypeConformance2();
  sub_23C3E3C54();
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for SearchScopesMenu(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t initializeWithCopy for SearchScopesMenu(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    v7 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v8;
    v9 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v9;
  }
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SearchScopesMenu(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = (__int128 *)(a2 + 1);
  v6 = a2[4];
  if (a1[4])
  {
    if (v6)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23C39D838((uint64_t)(a1 + 1));
      v7 = *(_OWORD *)(a2 + 7);
      v9 = *v5;
      v8 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 7) = v7;
      *v4 = v9;
      *(_OWORD *)(a1 + 3) = v8;
    }
  }
  else if (v6)
  {
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 3);
    v12 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 7) = v12;
    *v4 = v10;
    *(_OWORD *)(a1 + 3) = v11;
  }
  v13 = a2[10];
  a1[9] = a2[9];
  a1[10] = v13;
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for SearchScopesMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 32);
  if (!v4)
  {
    sub_23C39D838(a1 + 8);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v6;
    v7 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v7;
    goto LABEL_6;
  }
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchScopesMenu(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchScopesMenu(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchScopesMenu()
{
  return &type metadata for SearchScopesMenu;
}

uint64_t sub_23C3E4874()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3E4884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v56 = a3;
  v5 = sub_23C3F6DBC();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v53 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86250);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86258);
  MEMORY[0x24BDAC7A8](v50);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86260);
  MEMORY[0x24BDAC7A8](v51);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86268);
  MEMORY[0x24BDAC7A8](v52);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C3F6A74();
  v57 = a2;
  v58 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86270);
  v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86278);
  v18 = sub_23C3935DC(&qword_256B86280, &qword_256B86278, MEMORY[0x24BDF4498]);
  v59 = v17;
  v60 = v18;
  swift_getOpaqueTypeConformance2();
  sub_23C3F6768();
  v19 = sub_23C3F6AA4();
  v20 = sub_23C3F6AB0();
  v21 = sub_23C3F6AC8();
  sub_23C3F6AC8();
  if (sub_23C3F6AC8() != v19)
    v21 = sub_23C3F6AC8();
  sub_23C3F6AC8();
  if (sub_23C3F6AC8() != v20)
    v21 = sub_23C3F6AC8();
  sub_23C3F6750();
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v7);
  v30 = &v12[*(int *)(v50 + 36)];
  *v30 = v21;
  *((_QWORD *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v31 = sub_23C3F6ABC();
  v32 = sub_23C3F6AD4();
  v33 = sub_23C3F6AC8();
  sub_23C3F6AC8();
  if (sub_23C3F6AC8() != v31)
    v33 = sub_23C3F6AC8();
  sub_23C3F6AC8();
  if (sub_23C3F6AC8() != v32)
    v33 = sub_23C3F6AC8();
  sub_23C3F6750();
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;
  sub_23C3B26F0((uint64_t)v12, (uint64_t)v14, &qword_256B86258);
  v42 = &v14[*(int *)(v51 + 36)];
  *v42 = v33;
  *((_QWORD *)v42 + 1) = v35;
  *((_QWORD *)v42 + 2) = v37;
  *((_QWORD *)v42 + 3) = v39;
  *((_QWORD *)v42 + 4) = v41;
  v42[40] = 0;
  sub_23C39AA6C((uint64_t)v12, &qword_256B86258);
  v43 = v53;
  sub_23C3F6DB0();
  v44 = sub_23C3F6A98();
  v45 = &v16[*(int *)(v52 + 36)];
  v47 = v54;
  v46 = v55;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v45, v43, v55);
  v45[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B86288) + 36)] = v44;
  sub_23C3B26F0((uint64_t)v14, (uint64_t)v16, &qword_256B86260);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v46);
  sub_23C39AA6C((uint64_t)v14, &qword_256B86260);
  return sub_23C3B2564((uint64_t)v16, v56, &qword_256B86268);
}

uint64_t sub_23C3E4CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v4 = sub_23C3F6EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86230);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86278);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = sub_23C3F690C();
  *((_QWORD *)v13 + 1) = 0x4024000000000000;
  v13[16] = 0;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86290);
  sub_23C3E4E6C(a1, a2, &v13[*(int *)(v14 + 44)]);
  sub_23C3E6394();
  v15 = sub_23C3F6EB8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 0, 1, v15);
  sub_23C3F6ED0();
  sub_23C3935DC(&qword_256B86280, &qword_256B86278, MEMORY[0x24BDF4498]);
  sub_23C3F6B7C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_23C39AA6C((uint64_t)v10, &qword_256B86230);
  return sub_23C39AA6C((uint64_t)v13, &qword_256B86278);
}

uint64_t sub_23C3E4E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v32 = a2;
  v35 = a3;
  v4 = sub_23C3F681C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86298);
  v34 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = swift_bridgeObjectRetain();
  v14 = sub_23C3B27A4(v13);
  swift_bridgeObjectRelease();
  v38 = v14;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v4);
  v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16 + v15, (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v17 = (_OWORD *)(v16 + ((v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  v18 = *(_OWORD *)(a1 + 48);
  v17[2] = *(_OWORD *)(a1 + 32);
  v17[3] = v18;
  v19 = *(_OWORD *)(a1 + 80);
  v17[4] = *(_OWORD *)(a1 + 64);
  v17[5] = v19;
  v20 = *(_OWORD *)(a1 + 16);
  *v17 = *(_OWORD *)a1;
  v17[1] = v20;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_23C3E678C;
  *(_QWORD *)(v21 + 24) = v16;
  sub_23C3E6604((_QWORD *)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B862A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B862A8);
  sub_23C3935DC(&qword_256B862B0, &qword_256B862A0, MEMORY[0x24BEE12D8]);
  sub_23C3E6840();
  v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B862C0);
  v23 = sub_23C3E6884();
  v36 = v22;
  v37 = v23;
  swift_getOpaqueTypeConformance2();
  sub_23C3F6D74();
  v24 = v34;
  v25 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v25(v10, v12, v7);
  v26 = v35;
  *v35 = 0x4024000000000000;
  *((_BYTE *)v26 + 8) = 0;
  v27 = (char *)v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86328);
  v25(&v27[*(int *)(v28 + 48)], v10, v7);
  v29 = *(void (**)(char *, uint64_t))(v24 + 8);
  v29(v12, v7);
  return ((uint64_t (*)(char *, uint64_t))v29)(v10, v7);
}

uint64_t sub_23C3E512C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  __int128 v37;
  __int128 v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  char *v118;
  __int128 *v119;
  _OWORD v120[4];
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;

  v111 = a1;
  v117 = a5;
  v8 = sub_23C3F6EDC();
  v114 = *(_QWORD *)(v8 - 8);
  v115 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v113 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86230);
  MEMORY[0x24BDAC7A8](v10);
  v112 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_23C3F6B04();
  v103 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v101 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_23C3F6978();
  v116 = *(_QWORD **)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v91 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23C3F681C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B862F0);
  v92 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v19 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86330);
  v95 = *(_QWORD *)(v20 - 8);
  v96 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v118 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B862E8);
  MEMORY[0x24BDAC7A8](v94);
  v97 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B862D0);
  MEMORY[0x24BDAC7A8](v98);
  v99 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86338);
  v102 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v100 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B862C0);
  MEMORY[0x24BDAC7A8](v109);
  v110 = (char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B862A8);
  v107 = *(_QWORD *)(v26 - 8);
  v108 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v106 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a2[1];
  v132 = *a2;
  v133 = v28;
  v29 = a2[3];
  v134 = a2[2];
  v135 = v29;
  v30 = *(_QWORD *)a2;
  v87 = *((_QWORD *)a2 + 1);
  v88 = v30;
  v31 = *((_QWORD *)a2 + 2);
  v85 = *((_QWORD *)a2 + 3);
  v86 = v31;
  v32 = *((_QWORD *)a2 + 4);
  v83 = *((_QWORD *)a2 + 5);
  v84 = v32;
  v89 = a2[3];
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a3, v14);
  v33 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v34 = (v16 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v35 + v33, v17, v14);
  v36 = (_OWORD *)(v35 + v34);
  v37 = v133;
  *v36 = v132;
  v36[1] = v37;
  v38 = v135;
  v36[2] = v134;
  v36[3] = v38;
  v39 = (_OWORD *)(v35 + ((v34 + 71) & 0xFFFFFFFFFFFFFFF8));
  v40 = *(_OWORD *)(a4 + 16);
  *v39 = *(_OWORD *)a4;
  v39[1] = v40;
  v41 = *(_OWORD *)(a4 + 80);
  v39[4] = *(_OWORD *)(a4 + 64);
  v39[5] = v41;
  v42 = *(_OWORD *)(a4 + 48);
  v39[2] = *(_OWORD *)(a4 + 32);
  v39[3] = v42;
  v119 = &v132;
  sub_23C3E6C08((uint64_t)&v132);
  sub_23C3E6604((_QWORD *)a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86340);
  sub_23C3E6C58();
  sub_23C3F6D08();
  v43 = v91;
  sub_23C3F696C();
  sub_23C3935DC(&qword_256B862F8, &qword_256B862F0, MEMORY[0x24BDF43B0]);
  sub_23C3E6A98();
  v44 = v90;
  v45 = v93;
  sub_23C3F6BC4();
  ((void (*)(char *, uint64_t))v116[1])(v43, v45);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v19, v44);
  v47 = *(_QWORD *)(a4 + 8);
  v46 = *(_QWORD *)(a4 + 16);
  v48 = *(_QWORD *)(a4 + 24);
  v49 = *(_QWORD *)(a4 + 32);
  v51 = *(_QWORD *)(a4 + 40);
  v50 = *(_QWORD *)(a4 + 48);
  v53 = *(_QWORD *)(a4 + 56);
  v52 = *(_QWORD *)(a4 + 64);
  v116 = (_QWORD *)a4;
  if (!v49)
  {
    *(_QWORD *)&v121 = v47;
    *((_QWORD *)&v121 + 1) = v46;
    v122 = (unint64_t)v48;
    *(_QWORD *)&v123 = v51;
    *((_QWORD *)&v123 + 1) = v50;
    *(_QWORD *)&v124 = v53;
    *((_QWORD *)&v124 + 1) = v52;
    v125 = v88;
    v126 = v87;
    v127 = v86;
    v128 = v85;
    v129 = v84;
    v130 = v83;
    v131 = v89;
    sub_23C3E6C08((uint64_t)&v132);
    sub_23C39E570((uint64_t *)&v121);
    goto LABEL_5;
  }
  *(_QWORD *)&v121 = v47;
  *((_QWORD *)&v121 + 1) = v46;
  *(_QWORD *)&v122 = v48;
  *((_QWORD *)&v122 + 1) = v49;
  *(_QWORD *)&v123 = v51;
  *((_QWORD *)&v123 + 1) = v50;
  *(_QWORD *)&v124 = v53;
  *((_QWORD *)&v124 + 1) = v52;
  v120[0] = v132;
  v120[1] = v133;
  v120[2] = v134;
  v120[3] = v135;
  sub_23C39A824(v47, v46, v48, v49);
  sub_23C39A824(v47, v46, v48, v49);
  LODWORD(v93) = _s13FitnessSearch0B11ResultScopeV2eeoiySbAC_ACtFZ_0(&v121, v120);
  v91 = (char *)*((_QWORD *)&v122 + 1);
  v92 = *((_QWORD *)&v121 + 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23C399FEC(v47, v46, v48, v49);
  if ((v93 & 1) == 0)
  {
LABEL_5:
    v54 = sub_23C3F6CA8();
    goto LABEL_6;
  }
  v54 = sub_23C3F6C90();
LABEL_6:
  v55 = v54;
  KeyPath = swift_getKeyPath();
  v58 = v95;
  v57 = v96;
  v59 = (uint64_t)v97;
  v60 = v118;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v97, v118, v96);
  v61 = (uint64_t *)(v59 + *(int *)(v94 + 36));
  *v61 = KeyPath;
  v61[1] = v55;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v57);
  sub_23C3F6B28();
  sub_23C3F6AF8();
  swift_release();
  v62 = v103;
  v63 = v101;
  v64 = v105;
  (*(void (**)(char *, _QWORD, uint64_t))(v103 + 104))(v101, *MEMORY[0x24BDF17C8], v105);
  v65 = sub_23C3F6B1C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
  v66 = swift_getKeyPath();
  v67 = v99;
  sub_23C3B26F0(v59, v99, &qword_256B862E8);
  v68 = (uint64_t *)(v67 + *(int *)(v98 + 36));
  *v68 = v66;
  v68[1] = v65;
  sub_23C39AA6C(v59, &qword_256B862E8);
  v121 = v132;
  v122 = v133;
  v123 = v134;
  v124 = v135;
  v69 = (uint64_t)v112;
  sub_23C3E5D34(v111, (uint64_t)&v121);
  v70 = sub_23C3F6EB8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v69, 0, 1, v70);
  v71 = v113;
  sub_23C3F6EC4();
  sub_23C3E6930();
  v72 = v100;
  sub_23C3F6B7C();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v71, v115);
  sub_23C39AA6C(v69, &qword_256B86230);
  sub_23C39AA6C(v67, &qword_256B862D0);
  v73 = sub_23C3F6DC8();
  v75 = v74;
  v76 = (uint64_t)v110;
  v77 = (uint64_t)&v110[*(int *)(v109 + 36)];
  sub_23C3E5F18(v116, (uint64_t)&v132, v77);
  v78 = (uint64_t *)(v77 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B86320) + 36));
  *v78 = v73;
  v78[1] = v75;
  (*(void (**)(uint64_t, char *, uint64_t))(v102 + 32))(v76, v72, v104);
  __swift_instantiateConcreteTypeFromMangledName(qword_256B845D0);
  v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = xmmword_23C3FE870;
  *(_QWORD *)(v79 + 32) = 0x65706F6353;
  *(_QWORD *)(v79 + 40) = 0xE500000000000000;
  v80 = *((_QWORD *)&v133 + 1);
  *(_QWORD *)(v79 + 48) = v133;
  *(_QWORD *)(v79 + 56) = v80;
  sub_23C3E6884();
  swift_bridgeObjectRetain();
  v81 = v106;
  sub_23C3F6BA0();
  swift_bridgeObjectRelease();
  sub_23C39AA6C(v76, &qword_256B862C0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v107 + 32))(v117, v81, v108);
}

uint64_t sub_23C3E59FC()
{
  sub_23C3F6DE0();
  sub_23C3F67BC();
  return swift_release();
}

uint64_t sub_23C3E5A74(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v5;
  __int128 v6;
  uint64_t (*v7)(__int128 *);
  __int128 v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v5 = a2[1];
  v11 = *a2;
  v12 = v5;
  v6 = a2[3];
  v13 = a2[2];
  v14 = v6;
  sub_23C3E6840();
  sub_23C3F6810();
  v7 = *(uint64_t (**)(__int128 *))(a3 + 72);
  v8 = a2[1];
  v11 = *a2;
  v12 = v8;
  v9 = a2[3];
  v13 = a2[2];
  v14 = v9;
  return v7(&v11);
}

uint64_t sub_23C3E5B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[16];
  uint64_t v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86368);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86358);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = a1;
  sub_23C3F6CF0();
  LOBYTE(a1) = sub_23C3F6AE0();
  sub_23C3F6750();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v5 + 16))(v10, v7, v4);
  v19 = &v10[*(int *)(v8 + 36)];
  *v19 = a1;
  *((_QWORD *)v19 + 1) = v12;
  *((_QWORD *)v19 + 2) = v14;
  *((_QWORD *)v19 + 3) = v16;
  *((_QWORD *)v19 + 4) = v18;
  v19[40] = 0;
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  LOBYTE(v4) = sub_23C3F6A8C();
  sub_23C3F6750();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_23C3B26F0((uint64_t)v10, a2, &qword_256B86358);
  v28 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B86340) + 36);
  *(_BYTE *)v28 = v4;
  *(_QWORD *)(v28 + 8) = v21;
  *(_QWORD *)(v28 + 16) = v23;
  *(_QWORD *)(v28 + 24) = v25;
  *(_QWORD *)(v28 + 32) = v27;
  *(_BYTE *)(v28 + 40) = 0;
  return sub_23C39AA6C((uint64_t)v10, &qword_256B86358);
}

uint64_t sub_23C3E5CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_23C39365C();
  swift_bridgeObjectRetain();
  result = sub_23C3F6B70();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_23C3E5D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_23C3F6E88();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23C3F6EA0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_23C3F6E94();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86238);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23C3FE7F0;
  *(_QWORD *)(inited + 32) = 1701667182;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v9 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = 0x6973736572706D69;
  v10 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 88) = 0xEF7865646E496E6FLL;
  *(_QWORD *)(inited + 96) = a1;
  *(_QWORD *)(inited + 120) = v10;
  strcpy((char *)(inited + 128), "impressionType");
  *(_QWORD *)(inited + 168) = v9;
  *(_BYTE *)(inited + 143) = -18;
  *(_QWORD *)(inited + 144) = 0x7265746C6966;
  *(_QWORD *)(inited + 152) = 0xE600000000000000;
  swift_bridgeObjectRetain();
  sub_23C3E3660(inited);
  sub_23C3F6E7C();
  v11 = MEMORY[0x24BEE4AF8];
  sub_23C3E3F58(MEMORY[0x24BEE4AF8]);
  sub_23C3E3F58(v11);
  return sub_23C3F6EAC();
}

uint64_t sub_23C3E5F18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[4];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;

  v51 = a3;
  v47 = *(_QWORD *)a2;
  v46 = *(_QWORD *)(a2 + 8);
  v45 = *(char **)(a2 + 16);
  v44 = *(_QWORD *)(a2 + 24);
  v43 = *(_QWORD *)(a2 + 32);
  v42 = *(_QWORD *)(a2 + 40);
  v48 = *(_OWORD *)(a2 + 48);
  v5 = sub_23C3F6D68();
  MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86370);
  MEMORY[0x24BDAC7A8](v39);
  v41 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86378);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v10 = a1[2];
  v13 = a1[3];
  v12 = a1[4];
  v15 = a1[5];
  v14 = a1[6];
  v17 = a1[7];
  v16 = a1[8];
  if (v12)
  {
    v45 = v9;
    v53 = v11;
    v54 = v10;
    v55 = v13;
    v56 = v12;
    v57 = v15;
    v58 = v14;
    v59 = v17;
    v60 = v16;
    v18 = *(_OWORD *)(a2 + 16);
    v52[0] = *(_OWORD *)a2;
    v52[1] = v18;
    v19 = *(_OWORD *)(a2 + 48);
    v52[2] = *(_OWORD *)(a2 + 32);
    v52[3] = v19;
    sub_23C39A824(v11, v10, v13, v12);
    sub_23C39A824(v11, v10, v13, v12);
    LODWORD(v48) = _s13FitnessSearch0B11ResultScopeV2eeoiySbAC_ACtFZ_0(&v53, v52);
    v47 = v54;
    v46 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23C399FEC(v11, v10, v13, v12);
    v20 = 1;
    v21 = v51;
    v22 = v50;
    if ((v48 & 1) != 0)
    {
      v23 = *MEMORY[0x24BDEEB68];
      v24 = sub_23C3F6924();
      v25 = (uint64_t)v40;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v40, v23, v24);
      v26 = MEMORY[0x24261D45C](objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.650980392, 1.0, 0.0, 1.0));
      v27 = v41;
      sub_23C3E6DA0(v25, v41);
      v28 = v39;
      *(_QWORD *)(v27 + *(int *)(v39 + 52)) = v26;
      *(_WORD *)(v27 + *(int *)(v28 + 56)) = 256;
      sub_23C3E6DE4(v25);
      v29 = sub_23C3F6DF8();
      v30 = sub_23C3F6A44();
      sub_23C3F6E1C();
      v32 = v31;
      v34 = v33;
      v35 = (uint64_t)v45;
      sub_23C3B26F0(v27, (uint64_t)v45, &qword_256B86370);
      v36 = v35 + *(int *)(v22 + 36);
      *(_QWORD *)v36 = 0x656C7573706163;
      *(_QWORD *)(v36 + 8) = 0xE700000000000000;
      *(_QWORD *)(v36 + 16) = v29;
      *(_DWORD *)(v36 + 24) = v30;
      *(_QWORD *)(v36 + 32) = v32;
      *(_QWORD *)(v36 + 40) = v34;
      *(_BYTE *)(v36 + 48) = 1;
      sub_23C39AA6C(v27, &qword_256B86370);
      sub_23C3B2564(v35, v21, &qword_256B86378);
      v20 = 0;
    }
  }
  else
  {
    v53 = a1[1];
    v54 = v10;
    v55 = v13;
    v56 = 0;
    v57 = v15;
    v58 = v14;
    v59 = v17;
    v60 = v16;
    v61 = v47;
    v62 = v46;
    v63 = (uint64_t)v45;
    v64 = v44;
    v65 = v43;
    v66 = v42;
    v67 = v48;
    sub_23C3E6C08(a2);
    sub_23C39E570(&v53);
    v20 = 1;
    v21 = v51;
    v22 = v50;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v21, v20, 1, v22);
}

uint64_t sub_23C3E6394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_23C3F6E88();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23C3F6EA0();
  MEMORY[0x24BDAC7A8](v1);
  sub_23C3F6E94();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86238);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23C3FE870;
  *(_QWORD *)(inited + 32) = 1701667182;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v3 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0xD000000000000014;
  *(_QWORD *)(inited + 56) = 0x800000023C4013F0;
  *(_QWORD *)(inited + 72) = v3;
  strcpy((char *)(inited + 80), "impressionType");
  *(_QWORD *)(inited + 120) = v3;
  *(_BYTE *)(inited + 95) = -18;
  *(_QWORD *)(inited + 96) = 0x666C656873;
  *(_QWORD *)(inited + 104) = 0xE500000000000000;
  sub_23C3E3660(inited);
  sub_23C3F6E7C();
  v4 = MEMORY[0x24BEE4AF8];
  sub_23C3E3F58(MEMORY[0x24BEE4AF8]);
  sub_23C3E3F58(v4);
  return sub_23C3F6EAC();
}

_QWORD *sub_23C3E652C@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t (*v6)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];

  v3 = v1[3];
  v11[2] = v1[2];
  v11[3] = v3;
  v4 = v1[5];
  v11[4] = v1[4];
  v11[5] = v4;
  v5 = v1[1];
  v11[0] = *v1;
  v11[1] = v5;
  v6 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))swift_allocObject();
  v7 = v1[3];
  *((_OWORD *)v6 + 3) = v1[2];
  *((_OWORD *)v6 + 4) = v7;
  v8 = v1[5];
  *((_OWORD *)v6 + 5) = v1[4];
  *((_OWORD *)v6 + 6) = v8;
  v9 = v1[1];
  *((_OWORD *)v6 + 1) = *v1;
  *((_OWORD *)v6 + 2) = v9;
  *a1 = sub_23C3E65FC;
  a1[1] = v6;
  return sub_23C3E6604(v11);
}

uint64_t sub_23C3E65A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C3E65FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23C3E4884(a1, v2 + 16, a2);
}

_QWORD *sub_23C3E6604(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  swift_bridgeObjectRetain();
  sub_23C39A824(v2, v3, v4, v5);
  swift_retain();
  return a1;
}

uint64_t sub_23C3E668C()
{
  uint64_t v0;

  return sub_23C3E4CA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23C3E6694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C3F6894();
  *a1 = result;
  return result;
}

uint64_t sub_23C3E66BC()
{
  swift_retain();
  return sub_23C3F68A0();
}

uint64_t sub_23C3E66E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23C3F681C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v4 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C3E678C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(sub_23C3F681C() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_23C3E512C(a1, a2, v3 + v8, v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8), a3);
}

uint64_t sub_23C3E67F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C3E6818(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD *))(v1 + 16))(*a1, a1 + 1);
}

unint64_t sub_23C3E6840()
{
  unint64_t result;

  result = qword_256B862B8;
  if (!qword_256B862B8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultScope, &type metadata for SearchResultScope);
    atomic_store(result, (unint64_t *)&qword_256B862B8);
  }
  return result;
}

unint64_t sub_23C3E6884()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256B862C8;
  if (!qword_256B862C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B862C0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B862D0);
    v2[3] = sub_23C3E6930();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23C3935DC(&qword_256B86318, &qword_256B86320, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B862C8);
  }
  return result;
}

unint64_t sub_23C3E6930()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B862D8;
  if (!qword_256B862D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B862D0);
    v2[0] = sub_23C3E69B4();
    v2[1] = sub_23C3935DC(&qword_256B851A8, &qword_256B851B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B862D8);
  }
  return result;
}

unint64_t sub_23C3E69B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256B862E0;
  if (!qword_256B862E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B862E8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B862F0);
    v2[3] = sub_23C3F6978();
    v2[4] = sub_23C3935DC(&qword_256B862F8, &qword_256B862F0, MEMORY[0x24BDF43B0]);
    v2[5] = sub_23C3E6A98();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23C3935DC(&qword_256B86308, &qword_256B86310, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B862E0);
  }
  return result;
}

unint64_t sub_23C3E6A98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B86300;
  if (!qword_256B86300)
  {
    v1 = sub_23C3F6978();
    result = MEMORY[0x24261DE88](MEMORY[0x24BDEF108], v1);
    atomic_store(result, (unint64_t *)&qword_256B86300);
  }
  return result;
}

uint64_t sub_23C3E6AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23C3F681C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 71) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v4 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C3E6BB4()
{
  sub_23C3F681C();
  return sub_23C3E59FC();
}

uint64_t sub_23C3E6C00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C3E5B00(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23C3E6C08(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_23C3E6C58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B86348;
  if (!qword_256B86348)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86340);
    v2[0] = sub_23C3E6CC4();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B86348);
  }
  return result;
}

unint64_t sub_23C3E6CC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B86350;
  if (!qword_256B86350)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86358);
    v2[0] = sub_23C3935DC(&qword_256B86360, &qword_256B86368, MEMORY[0x24BDF41A8]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B86350);
  }
  return result;
}

uint64_t sub_23C3E6D48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C3F6894();
  *a1 = result;
  return result;
}

uint64_t sub_23C3E6D70()
{
  swift_retain();
  return sub_23C3F68A0();
}

uint64_t sub_23C3E6DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23C3F6D68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3E6DE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23C3F6D68();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23C3E6E20@<X0>(uint64_t a1@<X8>)
{
  return sub_23C3E5CCC(a1);
}

uint64_t sub_23C3E6E28()
{
  uint64_t v0;

  return sub_23C3E5A74(*(_QWORD *)(v0 + 16), *(__int128 **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23C3E6E44()
{
  return sub_23C3935DC(&qword_256B86380, &qword_256B86388, MEMORY[0x24BDEDA10]);
}

BOOL static SearchLandingSectionLayout.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23C3E6E80(char a1)
{
  if ((a1 & 1) != 0)
    return 1684632167;
  else
    return 0x6E6F676F6874726FLL;
}

uint64_t sub_23C3E6EB4()
{
  char *v0;

  return sub_23C3E6E80(*v0);
}

uint64_t sub_23C3E6EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3E7330(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3E6EE0()
{
  sub_23C3E71A0();
  return sub_23C3F7344();
}

uint64_t sub_23C3E6F08()
{
  sub_23C3E71A0();
  return sub_23C3F7350();
}

uint64_t sub_23C3E6F30()
{
  sub_23C3E71E4();
  return sub_23C3F7344();
}

uint64_t sub_23C3E6F58()
{
  sub_23C3E71E4();
  return sub_23C3F7350();
}

uint64_t sub_23C3E6F80()
{
  sub_23C3E7228();
  return sub_23C3F7344();
}

uint64_t sub_23C3E6FA8()
{
  sub_23C3E7228();
  return sub_23C3F7350();
}

uint64_t SearchLandingSectionLayout.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;

  v17 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86390);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86398);
  v6 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B863A0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3E71A0();
  sub_23C3F7338();
  if ((v17 & 1) != 0)
  {
    v19 = 1;
    sub_23C3E71E4();
    sub_23C3F7230();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    v18 = 0;
    sub_23C3E7228();
    sub_23C3F7230();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_23C3E71A0()
{
  unint64_t result;

  result = qword_256B863A8;
  if (!qword_256B863A8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEC9C, &type metadata for SearchLandingSectionLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B863A8);
  }
  return result;
}

unint64_t sub_23C3E71E4()
{
  unint64_t result;

  result = qword_256B863B0;
  if (!qword_256B863B0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEC4C, &type metadata for SearchLandingSectionLayout.GridCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B863B0);
  }
  return result;
}

unint64_t sub_23C3E7228()
{
  unint64_t result;

  result = qword_256B863B8;
  if (!qword_256B863B8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEBFC, &type metadata for SearchLandingSectionLayout.OrthogonalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B863B8);
  }
  return result;
}

uint64_t SearchLandingSectionLayout.init(from:)(_QWORD *a1)
{
  return sub_23C3E7410(a1) & 1;
}

uint64_t sub_23C3E7284@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23C3E7410(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_23C3E72B0(_QWORD *a1)
{
  unsigned __int8 *v1;

  return SearchLandingSectionLayout.encode(to:)(a1, *v1);
}

uint64_t SearchLandingSectionLayout.hash(into:)()
{
  return sub_23C3F72FC();
}

uint64_t SearchLandingSectionLayout.hashValue.getter()
{
  sub_23C3F72F0();
  sub_23C3F72FC();
  return sub_23C3F7320();
}

uint64_t sub_23C3E7330(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6E6F676F6874726FLL && a2 == 0xEA00000000006C61;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632167 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23C3E7410(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  char v28;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86400);
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86408);
  v3 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86410);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3E71A0();
  v10 = v26;
  sub_23C3F732C();
  if (v10)
    goto LABEL_7;
  v11 = v5;
  v12 = v25;
  v21 = a1;
  v26 = v7;
  v13 = sub_23C3F7224();
  v14 = v6;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v16 = sub_23C3F7104();
    swift_allocError();
    v17 = v9;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v19 = &type metadata for SearchLandingSectionLayout;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v6);
    a1 = v21;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v13 + 32);
  if ((v6 & 1) != 0)
  {
    v28 = 1;
    sub_23C3E71E4();
    sub_23C3F71B8();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v24);
  }
  else
  {
    v27 = 0;
    sub_23C3E7228();
    sub_23C3F71B8();
    v15 = v26;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v23);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v6;
}

unint64_t sub_23C3E7740()
{
  unint64_t result;

  result = qword_256B863C0;
  if (!qword_256B863C0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchLandingSectionLayout, &type metadata for SearchLandingSectionLayout);
    atomic_store(result, (unint64_t *)&qword_256B863C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchLandingSectionLayout()
{
  return &type metadata for SearchLandingSectionLayout;
}

uint64_t _s13FitnessSearch26SearchLandingSectionLayoutOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3E77E4 + 4 * byte_23C3FE985[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C3E7818 + 4 * byte_23C3FE980[v4]))();
}

uint64_t sub_23C3E7818(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3E7820(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3E7828);
  return result;
}

uint64_t sub_23C3E7834(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3E783CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C3E7840(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3E7848(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchLandingSectionLayout.CodingKeys()
{
  return &type metadata for SearchLandingSectionLayout.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchLandingSectionLayout.OrthogonalCodingKeys()
{
  return &type metadata for SearchLandingSectionLayout.OrthogonalCodingKeys;
}

ValueMetadata *type metadata accessor for SearchLandingSectionLayout.GridCodingKeys()
{
  return &type metadata for SearchLandingSectionLayout.GridCodingKeys;
}

unint64_t sub_23C3E7888()
{
  unint64_t result;

  result = qword_256B863C8;
  if (!qword_256B863C8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEBD4, &type metadata for SearchLandingSectionLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B863C8);
  }
  return result;
}

unint64_t sub_23C3E78D0()
{
  unint64_t result;

  result = qword_256B863D0;
  if (!qword_256B863D0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEAF4, &type metadata for SearchLandingSectionLayout.OrthogonalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B863D0);
  }
  return result;
}

unint64_t sub_23C3E7918()
{
  unint64_t result;

  result = qword_256B863D8;
  if (!qword_256B863D8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEB1C, &type metadata for SearchLandingSectionLayout.OrthogonalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B863D8);
  }
  return result;
}

unint64_t sub_23C3E7960()
{
  unint64_t result;

  result = qword_256B863E0;
  if (!qword_256B863E0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEAA4, &type metadata for SearchLandingSectionLayout.GridCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B863E0);
  }
  return result;
}

unint64_t sub_23C3E79A8()
{
  unint64_t result;

  result = qword_256B863E8;
  if (!qword_256B863E8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEACC, &type metadata for SearchLandingSectionLayout.GridCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B863E8);
  }
  return result;
}

unint64_t sub_23C3E79F0()
{
  unint64_t result;

  result = qword_256B863F0;
  if (!qword_256B863F0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEB44, &type metadata for SearchLandingSectionLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B863F0);
  }
  return result;
}

unint64_t sub_23C3E7A38()
{
  unint64_t result;

  result = qword_256B863F8;
  if (!qword_256B863F8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEB6C, &type metadata for SearchLandingSectionLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B863F8);
  }
  return result;
}

uint64_t sub_23C3E7A80(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746C75736572;
  else
    return 1701736302;
}

uint64_t sub_23C3E7AAC()
{
  char *v0;

  return sub_23C3E7A80(*v0);
}

uint64_t sub_23C3E7AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3E8E94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3E7AD8()
{
  sub_23C3E8644();
  return sub_23C3F7344();
}

uint64_t sub_23C3E7B00()
{
  sub_23C3E8644();
  return sub_23C3F7350();
}

uint64_t sub_23C3E7B28()
{
  sub_23C3E86CC();
  return sub_23C3F7344();
}

uint64_t sub_23C3E7B50()
{
  sub_23C3E86CC();
  return sub_23C3F7350();
}

uint64_t sub_23C3E7B78()
{
  sub_23C3E8688();
  return sub_23C3F7344();
}

uint64_t sub_23C3E7BA0()
{
  sub_23C3E8688();
  return sub_23C3F7350();
}

uint64_t SearchHintsState.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86418);
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86420);
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86428);
  v25 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = v1[2];
  v21 = v1[1];
  v22 = v12;
  v14 = v1[3];
  v19 = v1[4];
  v20 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3E8644();
  sub_23C3F7338();
  if (v13)
  {
    LOBYTE(v26) = 1;
    sub_23C3E8688();
    sub_23C3F7230();
    v26 = v22;
    v27 = v21;
    v28 = v13;
    v29 = v20;
    v30 = v19;
    sub_23C3A57FC();
    v15 = v24;
    sub_23C3F7284();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v15);
  }
  else
  {
    LOBYTE(v26) = 0;
    sub_23C3E86CC();
    sub_23C3F7230();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v9);
}

uint64_t SearchHintsState.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  char *v36;
  _QWORD *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v35 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86448);
  v4 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  v34 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86450);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86458);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23C3E8644();
  v15 = v42;
  sub_23C3F732C();
  if (v15)
    goto LABEL_7;
  v16 = v7;
  v32 = v6;
  v17 = v36;
  v42 = v11;
  v18 = sub_23C3F7224();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v26 = sub_23C3F7104();
    swift_allocError();
    v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v28 = &type metadata for SearchHintsState;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v10);
LABEL_7:
    v29 = (uint64_t)v37;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  v19 = v13;
  if ((*(_BYTE *)(v18 + 32) & 1) != 0)
  {
    LOBYTE(v38) = 1;
    sub_23C3E8688();
    v20 = v17;
    sub_23C3F71B8();
    sub_23C3A7C34();
    v21 = v33;
    sub_23C3F7218();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v10);
    v22 = v38;
    v23 = v39;
    v24 = v40;
    v25 = v41;
  }
  else
  {
    LOBYTE(v38) = 0;
    sub_23C3E86CC();
    sub_23C3F71B8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v10);
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v22 = 0uLL;
  }
  v29 = (uint64_t)v37;
  v31 = v35;
  *v35 = v22;
  v31[2] = v23;
  v31[3] = v24;
  v31[4] = v25;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_23C3E81C0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return SearchHintsState.init(from:)(a1, a2);
}

uint64_t sub_23C3E81D4(_QWORD *a1)
{
  return SearchHintsState.encode(to:)(a1);
}

uint64_t SearchHintsState.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  if (!v3)
    return sub_23C3F72FC();
  v4 = *(_QWORD *)(v1 + 8);
  sub_23C3F72FC();
  sub_23C3F7308();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23C395B90(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t SearchHintsState.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_23C3F72F0();
  if (v2)
  {
    sub_23C3F72FC();
    sub_23C3F7308();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_23C3F6F6C();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_23C395B90((uint64_t)v4, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F72FC();
  }
  return sub_23C3F7320();
}

uint64_t sub_23C3E83C0()
{
  _BYTE v1[72];

  sub_23C3F72F0();
  SearchHintsState.hash(into:)((uint64_t)v1);
  return sub_23C3F7320();
}

BOOL _s13FitnessSearch0B10HintsStateO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  if (!v5)
  {
    if (!v9)
    {
      sub_23C39A610(*a1, v2, 0);
      v12 = v8;
      v13 = v7;
      v14 = 0;
LABEL_16:
      sub_23C39A610(v12, v13, v14);
      return 1;
    }
    goto LABEL_17;
  }
  if (!v9)
    goto LABEL_17;
  if (!v2)
  {
    if (!v7)
      goto LABEL_12;
LABEL_17:
    sub_23C39B1C4(v8, v7, v9);
    sub_23C39B1C4(v3, v2, v5);
    sub_23C39A610(v3, v2, v5);
    sub_23C39A610(v8, v7, v9);
    return 0;
  }
  if (!v7 || (v3 != v8 || v2 != v7) && (sub_23C3F72A8() & 1) == 0)
    goto LABEL_17;
LABEL_12:
  if ((sub_23C3EAE94(v5, v9) & 1) == 0)
    goto LABEL_17;
  if (v4 == v10 && v6 == v11)
  {
    sub_23C39B1C4(v8, v7, v9);
    sub_23C39B1C4(v3, v2, v5);
    sub_23C39A610(v3, v2, v5);
    v12 = v8;
    v13 = v7;
    v14 = v9;
    goto LABEL_16;
  }
  v16 = sub_23C3F72A8();
  sub_23C39B1C4(v8, v7, v9);
  sub_23C39B1C4(v3, v2, v5);
  sub_23C39A610(v3, v2, v5);
  sub_23C39A610(v8, v7, v9);
  return (v16 & 1) != 0;
}

unint64_t sub_23C3E8644()
{
  unint64_t result;

  result = qword_256B86430;
  if (!qword_256B86430)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF064, &type metadata for SearchHintsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86430);
  }
  return result;
}

unint64_t sub_23C3E8688()
{
  unint64_t result;

  result = qword_256B86438;
  if (!qword_256B86438)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF014, &type metadata for SearchHintsState.ResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86438);
  }
  return result;
}

unint64_t sub_23C3E86CC()
{
  unint64_t result;

  result = qword_256B86440;
  if (!qword_256B86440)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEFC4, &type metadata for SearchHintsState.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86440);
  }
  return result;
}

unint64_t sub_23C3E8714()
{
  unint64_t result;

  result = qword_256B86460;
  if (!qword_256B86460)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchHintsState, &type metadata for SearchHintsState);
    atomic_store(result, (unint64_t *)&qword_256B86460);
  }
  return result;
}

unint64_t destroy for SearchHintsState(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SearchHintsState(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(_QWORD *)(a2 + 24);
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v3;
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for SearchHintsState(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = a2[2];
  if (a1[2] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)a2;
    v6 = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    *(_OWORD *)a1 = v5;
    *((_OWORD *)a1 + 1) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchHintsState(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 16) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    return a1;
  }
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchHintsState(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SearchHintsState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t sub_23C3E8A88(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_23C3E8AA0(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 16) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchHintsState()
{
  return &type metadata for SearchHintsState;
}

uint64_t storeEnumTagSinglePayload for SearchHintsState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3E8B28 + 4 * byte_23C3FECF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C3E8B5C + 4 * byte_23C3FECF0[v4]))();
}

uint64_t sub_23C3E8B5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3E8B64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3E8B6CLL);
  return result;
}

uint64_t sub_23C3E8B78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3E8B80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C3E8B84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3E8B8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchHintsState.CodingKeys()
{
  return &type metadata for SearchHintsState.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchHintsState.NoneCodingKeys()
{
  return &type metadata for SearchHintsState.NoneCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SearchHintsState.ResultCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C3E8BF8 + 4 * byte_23C3FECFA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3E8C18 + 4 * byte_23C3FECFF[v4]))();
}

_BYTE *sub_23C3E8BF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3E8C18(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3E8C20(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3E8C28(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3E8C30(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3E8C38(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchHintsState.ResultCodingKeys()
{
  return &type metadata for SearchHintsState.ResultCodingKeys;
}

unint64_t sub_23C3E8C58()
{
  unint64_t result;

  result = qword_256B86468;
  if (!qword_256B86468)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEE94, &type metadata for SearchHintsState.ResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86468);
  }
  return result;
}

unint64_t sub_23C3E8CA0()
{
  unint64_t result;

  result = qword_256B86470;
  if (!qword_256B86470)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEF9C, &type metadata for SearchHintsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86470);
  }
  return result;
}

unint64_t sub_23C3E8CE8()
{
  unint64_t result;

  result = qword_256B86478;
  if (!qword_256B86478)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEEBC, &type metadata for SearchHintsState.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86478);
  }
  return result;
}

unint64_t sub_23C3E8D30()
{
  unint64_t result;

  result = qword_256B86480;
  if (!qword_256B86480)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEEE4, &type metadata for SearchHintsState.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86480);
  }
  return result;
}

unint64_t sub_23C3E8D78()
{
  unint64_t result;

  result = qword_256B86488;
  if (!qword_256B86488)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEE04, &type metadata for SearchHintsState.ResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86488);
  }
  return result;
}

unint64_t sub_23C3E8DC0()
{
  unint64_t result;

  result = qword_256B86490;
  if (!qword_256B86490)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEE2C, &type metadata for SearchHintsState.ResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86490);
  }
  return result;
}

unint64_t sub_23C3E8E08()
{
  unint64_t result;

  result = qword_256B86498;
  if (!qword_256B86498)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEF0C, &type metadata for SearchHintsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86498);
  }
  return result;
}

unint64_t sub_23C3E8E50()
{
  unint64_t result;

  result = qword_256B864A0;
  if (!qword_256B864A0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FEF34, &type metadata for SearchHintsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B864A0);
  }
  return result;
}

uint64_t sub_23C3E8E94(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t SearchResultScope.category.getter()
{
  uint64_t result;

  swift_bridgeObjectRetain();
  LODWORD(result) = _s13FitnessSearch0B13ScopeCategoryO8rawValueACSgSS_tcfC_0();
  if (result == 9)
    return 3;
  else
    return result;
}

uint64_t sub_23C3E8FA4(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aHistory_5[8 * a1] == *(_QWORD *)&aHistory_5[8 * a2] && qword_23C3FF6B8[a1] == qword_23C3FF6B8[a2])
    v3 = 1;
  else
    v3 = sub_23C3F72A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_23C3E9028(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aEditoriaeditor_3[8 * a1] == *(_QWORD *)&aEditoriaeditor_3[8 * a2]
    && qword_23C3FF720[a1] == qword_23C3FF720[a2])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_23C3F72A8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_23C3E90AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  BOOL v18;
  uint64_t v20;

  v4 = type metadata accessor for SearchHistoryItem();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v20 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v16 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      while (1)
      {
        sub_23C39654C(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
        sub_23C39654C(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
        v15 = *v10 == *v7 && v10[1] == v7[1];
        if (!v15 && (sub_23C3F72A8() & 1) == 0)
          break;
        v16 = sub_23C3F6624();
        sub_23C3965D4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
        sub_23C3965D4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
        v18 = v14-- != 0;
        if ((v16 & 1) != 0)
        {
          v12 += v13;
          if (v18)
            continue;
        }
        return v16 & 1;
      }
      sub_23C3965D4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      sub_23C3965D4((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SearchHistoryItem);
      v16 = 0;
    }
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_23C3E9238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v4 = type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v4);
  v87 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85798);
  MEMORY[0x24BDAC7A8](v94);
  v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SearchContentTile();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v88 = (uint64_t)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v64 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v64 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v64 - v18;
  v89 = type metadata accessor for SearchLandingSectionDescriptor();
  v20 = MEMORY[0x24BDAC7A8](v89);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v64 - v24;
  v26 = *(_QWORD *)(a1 + 16);
  if (v26 == *(_QWORD *)(a2 + 16))
  {
    if (!v26 || a1 == a2)
      return 1;
    v86 = v8;
    v27 = 0;
    v28 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    v29 = a1 + v28;
    v30 = a2 + v28;
    v31 = *(_QWORD *)(v23 + 72);
    v70 = v22;
    v69 = (char *)&v64 - v24;
    v64 = v9;
    v68 = v26;
    v67 = v29;
    v66 = v30;
    v65 = v31;
    while (1)
    {
      v71 = v27;
      v33 = v31 * v27;
      sub_23C39654C(v29 + v33, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for SearchLandingSectionDescriptor);
      sub_23C39654C(v30 + v33, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for SearchLandingSectionDescriptor);
      v34 = *(_QWORD *)v25 == *(_QWORD *)v22 && *((_QWORD *)v25 + 1) == *((_QWORD *)v22 + 1);
      if (!v34 && (sub_23C3F72A8() & 1) == 0)
        break;
      if (v25[16] != v22[16])
        break;
      if ((sub_23C3F657C() & 1) == 0)
        break;
      v35 = *(int *)(v89 + 28);
      v36 = *(_QWORD *)&v22[v35];
      v91 = *(_QWORD *)&v25[v35];
      v37 = *(_QWORD *)(v91 + 16);
      if (v37 != *(_QWORD *)(v36 + 16))
        break;
      if (v37 && v91 != v36)
      {
        v38 = 0;
        v39 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
        v82 = *(_QWORD *)(v64 + 72);
        v84 = v36;
        v72 = v7;
        v77 = v17;
        v73 = v19;
        v83 = v37;
        do
        {
          result = sub_23C39654C(v91 + v39, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
          if (v38 >= *(_QWORD *)(v36 + 16))
          {
            __break(1u);
            return result;
          }
          sub_23C39654C(v36 + v39, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
          v40 = (uint64_t)&v7[*(int *)(v94 + 48)];
          sub_23C39654C((uint64_t)v19, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
          sub_23C39654C((uint64_t)v17, v40, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v41 = v88;
            sub_23C39654C((uint64_t)v7, v88, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
            if (swift_getEnumCaseMultiPayload() != 1)
            {
              sub_23C3965D4(v41, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
LABEL_57:
              sub_23C3CCE90((uint64_t)v7);
              goto LABEL_63;
            }
            v42 = v40;
            v43 = v41;
            v44 = v87;
            sub_23C396590(v42, v87);
            v45 = static SearchItem.== infix(_:_:)(v43, v44);
            sub_23C3965D4(v43, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
            sub_23C3965D4(v44, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
            if ((v45 & 1) == 0)
              goto LABEL_62;
          }
          else
          {
            sub_23C39654C((uint64_t)v7, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
            v47 = *(_QWORD *)v14;
            v46 = *((_QWORD *)v14 + 1);
            v48 = *((_QWORD *)v14 + 2);
            v92 = *((_QWORD *)v14 + 3);
            v93 = v46;
            v49 = v14[32];
            v51 = *((_QWORD *)v14 + 5);
            v50 = *((_QWORD *)v14 + 6);
            v76 = *((_QWORD *)v14 + 7);
            v81 = *((_QWORD *)v14 + 8);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v7 = v72;
              v17 = v77;
              v19 = v73;
              goto LABEL_57;
            }
            v80 = v50;
            v52 = *(_QWORD *)v40;
            v53 = *(_QWORD *)(v40 + 8);
            v54 = *(_QWORD *)(v40 + 16);
            v90 = *(_QWORD *)(v40 + 24);
            v55 = *(char *)(v40 + 32);
            v56 = *(_QWORD *)(v40 + 40);
            v85 = *(_QWORD *)(v40 + 48);
            v74 = *(_QWORD *)(v40 + 56);
            v75 = v56;
            v79 = *(_QWORD *)(v40 + 64);
            if ((v47 != v52 || v93 != v53) && (v57 = v53, v58 = sub_23C3F72A8(), v53 = v57, (v58 & 1) == 0)
              || ((v78 = v53, v48 != v54) || v92 != v90) && (sub_23C3F72A8() & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v7 = v72;
              v17 = v77;
              v19 = v73;
              goto LABEL_62;
            }
            if (*(_QWORD *)&aEditoriaeditor_3[8 * v49] == *(_QWORD *)&aEditoriaeditor_3[8 * v55]
              && qword_23C3FF720[v49] == qword_23C3FF720[v55])
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v17 = v77;
              v19 = v73;
              v61 = v80;
            }
            else
            {
              v60 = sub_23C3F72A8();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v17 = v77;
              v19 = v73;
              v61 = v80;
              if ((v60 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v7 = v72;
                goto LABEL_62;
              }
            }
            v62 = v81;
            if (v61)
            {
              if (!v85)
                goto LABEL_60;
              v7 = v72;
              if ((v51 != v75 || v61 != v85) && (sub_23C3F72A8() & 1) == 0)
                goto LABEL_61;
              if (!v62)
                goto LABEL_53;
            }
            else
            {
              if (v85)
              {
LABEL_60:
                v7 = v72;
LABEL_61:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_62:
                sub_23C3965D4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
LABEL_63:
                v22 = v70;
                v25 = v69;
                sub_23C3965D4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
                sub_23C3965D4((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
                goto LABEL_64;
              }
              swift_bridgeObjectRelease_n();
              v7 = v72;
              if (!v62)
              {
LABEL_53:
                if (v79)
                  goto LABEL_61;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                goto LABEL_19;
              }
            }
            if (!v79)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v17 = v77;
              goto LABEL_62;
            }
            if (v76 == v74 && v62 == v79)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v17 = v77;
LABEL_19:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_20;
            }
            v63 = sub_23C3F72A8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v17 = v77;
            if ((v63 & 1) == 0)
              goto LABEL_62;
          }
LABEL_20:
          ++v38;
          sub_23C3965D4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
          sub_23C3965D4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
          sub_23C3965D4((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
          v39 += v82;
          v36 = v84;
        }
        while (v83 != v38);
      }
      v27 = v71 + 1;
      v22 = v70;
      sub_23C3965D4((uint64_t)v70, (uint64_t (*)(_QWORD))type metadata accessor for SearchLandingSectionDescriptor);
      v25 = v69;
      sub_23C3965D4((uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for SearchLandingSectionDescriptor);
      result = 1;
      v29 = v67;
      v30 = v66;
      v31 = v65;
      if (v27 == v68)
        return result;
    }
LABEL_64:
    sub_23C3965D4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for SearchLandingSectionDescriptor);
    sub_23C3965D4((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for SearchLandingSectionDescriptor);
  }
  return 0;
}

uint64_t sub_23C3E9C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v4 = type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85798);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SearchContentTile();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v47 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v47 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v22 = (char *)&v47 - v20;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23 != *(_QWORD *)(a2 + 16))
    return 0;
  v64 = v18;
  if (!v23 || a1 == a2)
    return 1;
  v62 = a2;
  v52 = v21;
  v49 = v6;
  v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v59 = *(_QWORD *)(v19 + 72);
  v47 = a1;
  v48 = v9;
  v50 = (char *)&v47 - v20;
  v51 = v17;
  v60 = v7;
  while (1)
  {
    sub_23C39654C(a1 + v24, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
    sub_23C39654C(v62 + v24, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
    v25 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_23C39654C((uint64_t)v22, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
    sub_23C39654C((uint64_t)v17, v25, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = v9;
      v27 = (uint64_t)v9;
      v28 = v52;
      sub_23C39654C(v27, v52, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v29 = v25;
        v30 = (uint64_t)v49;
        sub_23C396590(v29, (uint64_t)v49);
        v31 = _s13FitnessSearch0B4ItemV2eeoiySbAC_ACtFZ_0(v28, v30);
        sub_23C3965D4(v30, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
        sub_23C3965D4(v28, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
        v7 = v60;
        v9 = v26;
        if ((v31 & 1) == 0)
          goto LABEL_47;
        goto LABEL_7;
      }
      sub_23C3965D4(v28, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
      v9 = v26;
LABEL_39:
      sub_23C3CCE90((uint64_t)v9);
      goto LABEL_48;
    }
    sub_23C39654C((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
    v33 = *(_QWORD *)v14;
    v32 = *((_QWORD *)v14 + 1);
    v34 = *((_QWORD *)v14 + 2);
    v66 = *((_QWORD *)v14 + 3);
    v67 = v32;
    v35 = v14[32];
    v36 = *((_QWORD *)v14 + 5);
    v63 = *((_QWORD *)v14 + 6);
    v55 = *((_QWORD *)v14 + 7);
    v58 = *((_QWORD *)v14 + 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = v50;
      v17 = v51;
      goto LABEL_39;
    }
    v37 = *(_QWORD *)v25;
    v38 = *(_QWORD *)(v25 + 8);
    v39 = *(_QWORD *)(v25 + 16);
    v65 = *(_QWORD *)(v25 + 24);
    v40 = *(_BYTE *)(v25 + 32);
    v41 = *(_QWORD *)(v25 + 40);
    v61 = *(_QWORD *)(v25 + 48);
    v53 = *(_QWORD *)(v25 + 56);
    v54 = v41;
    v57 = *(_QWORD *)(v25 + 64);
    if ((v33 != v37 || v67 != v38) && (v42 = v38, v43 = sub_23C3F72A8(), v38 = v42, (v43 & 1) == 0)
      || ((v56 = v38, v34 != v39) || v66 != v65) && (sub_23C3F72A8() & 1) == 0
      || (sub_23C3E9028(v35, v40) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v48;
      goto LABEL_46;
    }
    v9 = v48;
    if (!v63)
    {
      v7 = v60;
      if (!v61)
      {
        swift_bridgeObjectRelease_n();
        v44 = v58;
        if (!v58)
        {
LABEL_33:
          if (v57)
            break;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v22 = v50;
          v17 = v51;
          a1 = v47;
          goto LABEL_6;
        }
        goto LABEL_26;
      }
      v22 = v50;
      v17 = v51;
LABEL_44:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
    v7 = v60;
    if (!v61)
    {
      v22 = v50;
      v17 = v51;
      goto LABEL_44;
    }
    if ((v36 != v54 || v63 != v61) && (sub_23C3F72A8() & 1) == 0)
      break;
    v44 = v58;
    if (!v58)
      goto LABEL_33;
LABEL_26:
    if (!v57)
      break;
    v22 = v50;
    v17 = v51;
    if (v55 == v53 && v44 == v57)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v47;
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    v45 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v47;
    if ((v45 & 1) == 0)
      goto LABEL_47;
LABEL_7:
    sub_23C3965D4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
    sub_23C3965D4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
    sub_23C3965D4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
    v24 += v59;
    if (!--v23)
      return 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_46:
  v22 = v50;
  v17 = v51;
LABEL_47:
  sub_23C3965D4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
LABEL_48:
  sub_23C3965D4((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
  sub_23C3965D4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
  return 0;
}

uint64_t sub_23C3EA334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  BOOL v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v4 = type metadata accessor for SearchItem();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85798);
  MEMORY[0x24BDAC7A8](v98);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for SearchContentTile();
  v9 = MEMORY[0x24BDAC7A8](v99);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v67 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v18 = (char *)&v67 - v17;
  v19 = *(_QWORD *)(a1 + 16);
  if (v19 == *(_QWORD *)(a2 + 16))
  {
    if (!v19 || a1 == a2)
      return 1;
    v74 = v16;
    v68 = v19;
    v75 = v15;
    v67 = v14;
    v73 = v6;
    v20 = 0;
    v70 = a1 + 32;
    v69 = a2 + 32;
    while (1)
    {
      v79 = v20;
      v23 = v20 << 6;
      v24 = (_QWORD *)(v70 + (v20 << 6));
      v25 = v24[1];
      v26 = v24[2];
      v27 = v24[4];
      v91 = v24[3];
      v28 = v24[5];
      v89 = v24[6];
      v94 = v24[7];
      v29 = (_QWORD *)(v69 + v23);
      v30 = v29[1];
      v31 = v29[2];
      v32 = v29[4];
      v92 = v29[3];
      v33 = v29[5];
      v80 = v29[6];
      v93 = v29[7];
      v90 = v30;
      v83 = v25;
      if (v25)
      {
        if (!v30 || (*v24 != *v29 || v83 != v30) && (sub_23C3F72A8() & 1) == 0)
          return 0;
      }
      else if (v30)
      {
        return 0;
      }
      if (v26 == v31 && v91 == v92)
      {
        v62 = v27 == v32;
        v22 = v79;
        if (!v62)
          return 0;
      }
      else
      {
        v34 = sub_23C3F72A8();
        result = 0;
        if ((v34 & 1) == 0)
          return result;
        v62 = v27 == v32;
        v22 = v79;
        if (!v62)
          return result;
      }
      if ((v28 != v33 || v89 != v80) && (sub_23C3F72A8() & 1) == 0)
        return 0;
      v35 = v93;
      v36 = v94;
      v37 = *(_QWORD *)(v94 + 16);
      if (v37 != *(_QWORD *)(v93 + 16))
        return 0;
      if (v37 && v94 != v93)
        break;
LABEL_7:
      v20 = v22 + 1;
      result = 1;
      if (v20 == v68)
        return result;
    }
    v88 = *(_QWORD *)(v94 + 16);
    v38 = v67;
    v39 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87 = *(_QWORD *)(v38 + 72);
    v40 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = 0;
    v71 = v8;
    v82 = v13;
    v72 = v18;
    while (1)
    {
      result = sub_23C39654C(v40 + v39, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      if (v41 >= *(_QWORD *)(v35 + 16))
      {
        __break(1u);
        return result;
      }
      v42 = v40;
      sub_23C39654C(v35 + v39, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      v43 = (uint64_t)&v8[*(int *)(v98 + 48)];
      sub_23C39654C((uint64_t)v18, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      sub_23C39654C((uint64_t)v13, v43, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v44 = v75;
        sub_23C39654C((uint64_t)v8, v75, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          sub_23C3965D4(v44, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
LABEL_67:
          sub_23C3CCE90((uint64_t)v8);
          goto LABEL_75;
        }
        v45 = v43;
        v46 = (uint64_t)v73;
        sub_23C396590(v45, (uint64_t)v73);
        v47 = static SearchItem.== infix(_:_:)(v44, v46);
        sub_23C3965D4(v44, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
        sub_23C3965D4(v46, (uint64_t (*)(_QWORD))type metadata accessor for SearchItem);
        v40 = v42;
        if ((v47 & 1) == 0)
          goto LABEL_74;
        goto LABEL_31;
      }
      v48 = v74;
      sub_23C39654C((uint64_t)v8, v74, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      v50 = *(_QWORD *)v48;
      v49 = *(_QWORD *)(v48 + 8);
      v51 = *(_QWORD *)(v48 + 16);
      v96 = *(_QWORD *)(v48 + 24);
      v97 = v49;
      v52 = *(char *)(v48 + 32);
      v53 = *(_QWORD *)(v48 + 48);
      v81 = *(_QWORD *)(v48 + 40);
      v54 = *(_QWORD *)(v48 + 56);
      v55 = *(_QWORD *)(v48 + 64);
      v78 = v54;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v82;
        v18 = v72;
        goto LABEL_67;
      }
      v56 = *(_QWORD *)v43;
      v57 = *(_QWORD *)(v43 + 8);
      v58 = *(_QWORD *)(v43 + 16);
      v95 = *(_QWORD *)(v43 + 24);
      v59 = *(char *)(v43 + 32);
      v77 = *(_QWORD *)(v43 + 40);
      v86 = *(_QWORD *)(v43 + 48);
      v76 = *(_QWORD *)(v43 + 56);
      v85 = *(_QWORD *)(v43 + 64);
      if ((v50 != v56 || v97 != v57) && (v60 = v57, v61 = sub_23C3F72A8(), v57 = v60, (v61 & 1) == 0)
        || ((v84 = v57, v51 != v58) || v96 != v95) && (sub_23C3F72A8() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = v71;
        v13 = v82;
        v18 = v72;
        goto LABEL_74;
      }
      v62 = *(_QWORD *)&aEditoriaeditor_3[8 * v52] == *(_QWORD *)&aEditoriaeditor_3[8 * v59]
         && qword_23C3FF720[v52] == qword_23C3FF720[v59];
      if (v62)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v82;
        v18 = v72;
        v40 = v94;
        v64 = v55;
        v65 = v86;
        if (!v53)
          goto LABEL_61;
      }
      else
      {
        v63 = sub_23C3F72A8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v82;
        v18 = v72;
        v40 = v94;
        v64 = v55;
        if ((v63 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v8 = v71;
          goto LABEL_74;
        }
        v65 = v86;
        if (!v53)
        {
LABEL_61:
          if (v65)
          {
            v8 = v71;
LABEL_73:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_74:
            sub_23C3965D4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
LABEL_75:
            sub_23C3965D4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
            sub_23C3965D4((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return 0;
          }
          swift_bridgeObjectRelease_n();
          v8 = v71;
          v81 = v53;
          if (!v64)
          {
LABEL_63:
            v35 = v93;
            if (v85)
              goto LABEL_73;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_30;
          }
          goto LABEL_55;
        }
      }
      if (!v65)
      {
        v8 = v71;
        goto LABEL_73;
      }
      v8 = v71;
      if ((v81 != v77 || v53 != v65) && (sub_23C3F72A8() & 1) == 0)
        goto LABEL_73;
      v81 = v53;
      if (!v64)
        goto LABEL_63;
LABEL_55:
      v35 = v93;
      if (!v85)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v82;
        goto LABEL_74;
      }
      if (v78 == v76 && v64 == v85)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v82;
LABEL_30:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      v66 = sub_23C3F72A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v82;
      if ((v66 & 1) == 0)
        goto LABEL_74;
LABEL_31:
      ++v41;
      sub_23C3965D4((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      sub_23C3965D4((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      sub_23C3965D4((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for SearchContentTile);
      v39 += v87;
      if (v88 == v41)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v22 = v79;
        goto LABEL_7;
      }
    }
  }
  return 0;
}

BOOL sub_23C3EAE28(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_23C3EAE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 40);
    for (i = (_QWORD *)(a1 + 40); ; i += 7)
    {
      v5 = i[1];
      v6 = i[2];
      v7 = i[3];
      v9 = i[4];
      v8 = i[5];
      v10 = *v3;
      v11 = v3[1];
      v12 = v3[2];
      v13 = v3[3];
      v14 = v3[4];
      v15 = v3[5];
      if (*i)
      {
        if (!v10)
          return 0;
        if (*(i - 1) != *(v3 - 1) || *i != v10)
        {
          v21 = i[5];
          v22 = i[1];
          v16 = i[2];
          v20 = v3[2];
          v17 = sub_23C3F72A8();
          v6 = v16;
          v5 = v22;
          v12 = v20;
          v8 = v21;
          if ((v17 & 1) == 0)
            return 0;
        }
      }
      else if (v10)
      {
        return 0;
      }
      if (v5 == v11 && v6 == v12)
      {
        if (v7 != v13)
          return 0;
      }
      else
      {
        v18 = sub_23C3F72A8();
        result = 0;
        if ((v18 & 1) == 0 || v7 != v13)
          return result;
      }
      if ((v9 != v14 || v8 != v15) && (sub_23C3F72A8() & 1) == 0)
        break;
      v3 += 7;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_23C3EAFF4(char a1)
{
  return *(_QWORD *)&aFetchcomfetche[8 * a1];
}

uint64_t sub_23C3EB014()
{
  char *v0;

  return sub_23C3EAFF4(*v0);
}

uint64_t sub_23C3EB01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3EBB1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3EB040()
{
  sub_23C3EB56C();
  return sub_23C3F7344();
}

uint64_t sub_23C3EB068()
{
  sub_23C3EB56C();
  return sub_23C3F7350();
}

uint64_t sub_23C3EB090()
{
  sub_23C3EB67C();
  return sub_23C3F7344();
}

uint64_t sub_23C3EB0B8()
{
  sub_23C3EB67C();
  return sub_23C3F7350();
}

uint64_t sub_23C3EB0E0()
{
  sub_23C3EB638();
  return sub_23C3F7344();
}

uint64_t sub_23C3EB108()
{
  sub_23C3EB638();
  return sub_23C3F7350();
}

uint64_t sub_23C3EB130()
{
  sub_23C3EB5F4();
  return sub_23C3F7344();
}

uint64_t sub_23C3EB158()
{
  sub_23C3EB5F4();
  return sub_23C3F7350();
}

uint64_t sub_23C3EB180()
{
  sub_23C3EB5B0();
  return sub_23C3F7344();
}

uint64_t sub_23C3EB1A8()
{
  sub_23C3EB5B0();
  return sub_23C3F7350();
}

uint64_t SearchLandingAction.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  int v35;
  char v36;
  char v37;
  char v38;
  char v39;

  *((_QWORD *)&v33 + 1) = a2;
  v35 = a4;
  *(_QWORD *)&v33 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B864A8);
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v27 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B864B0);
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v24 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B864B8);
  v31 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B864C0);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B864C8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3EB56C();
  sub_23C3F7338();
  if ((_BYTE)v35)
  {
    if (v35 == 1)
    {
      v37 = 1;
      sub_23C3EB638();
      sub_23C3F7230();
      sub_23C3F7260();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    else
    {
      if (v33 == 0)
      {
        v38 = 2;
        sub_23C3EB5F4();
        v20 = v24;
        sub_23C3F7230();
        v22 = v25;
        v21 = v26;
      }
      else
      {
        v39 = 3;
        sub_23C3EB5B0();
        v20 = v27;
        sub_23C3F7230();
        v22 = v28;
        v21 = v29;
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
  else
  {
    v36 = 0;
    sub_23C3EB67C();
    sub_23C3F7230();
    v34 = *((_QWORD *)&v33 + 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B85CC8);
    sub_23C3D6624(&qword_256B85CD0, &qword_256B85CD8, (uint64_t)&protocol conformance descriptor for SearchLandingSectionDescriptor, MEMORY[0x24BEE12A0]);
    v19 = v32;
    sub_23C3F7284();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

unint64_t sub_23C3EB56C()
{
  unint64_t result;

  result = qword_256B864D0;
  if (!qword_256B864D0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF640, &type metadata for SearchLandingAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B864D0);
  }
  return result;
}

unint64_t sub_23C3EB5B0()
{
  unint64_t result;

  result = qword_256B864D8;
  if (!qword_256B864D8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF5F0, &type metadata for SearchLandingAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B864D8);
  }
  return result;
}

unint64_t sub_23C3EB5F4()
{
  unint64_t result;

  result = qword_256B864E0;
  if (!qword_256B864E0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF5A0, &type metadata for SearchLandingAction.PageRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B864E0);
  }
  return result;
}

unint64_t sub_23C3EB638()
{
  unint64_t result;

  result = qword_256B864E8;
  if (!qword_256B864E8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF550, &type metadata for SearchLandingAction.FetchErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B864E8);
  }
  return result;
}

unint64_t sub_23C3EB67C()
{
  unint64_t result;

  result = qword_256B864F0;
  if (!qword_256B864F0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF500, &type metadata for SearchLandingAction.FetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B864F0);
  }
  return result;
}

_QWORD *SearchLandingAction.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v3;

  result = sub_23C3EBD0C(a1);
  if (v1)
    return (_QWORD *)v3;
  return result;
}

_QWORD *sub_23C3EB6E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  char v6;

  result = sub_23C3EBD0C(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_23C3EB70C(_QWORD *a1)
{
  uint64_t v1;

  return SearchLandingAction.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t SearchLandingAction.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    if (a4 == 1)
    {
      sub_23C3F72FC();
      return sub_23C3F6F6C();
    }
    else
    {
      return sub_23C3F72FC();
    }
  }
  else
  {
    sub_23C3F72FC();
    return sub_23C395A50(a1, a2);
  }
}

uint64_t SearchLandingAction.hashValue.getter(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE v6[72];

  sub_23C3F72F0();
  if (a3)
  {
    sub_23C3F72FC();
    if (a3 == 1)
      sub_23C3F6F6C();
  }
  else
  {
    sub_23C3F72FC();
    sub_23C395A50((uint64_t)v6, a1);
  }
  return sub_23C3F7320();
}

uint64_t sub_23C3EB86C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 16);
  sub_23C3F72F0();
  if (v2)
  {
    sub_23C3F72FC();
    if (v2 == 1)
      sub_23C3F6F6C();
  }
  else
  {
    sub_23C3F72FC();
    sub_23C395A50((uint64_t)v4, v1);
  }
  return sub_23C3F7320();
}

uint64_t sub_23C3EB914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 16))
  {
    if (*(_BYTE *)(v1 + 16) == 1)
    {
      sub_23C3F72FC();
      return sub_23C3F6F6C();
    }
    else
    {
      return sub_23C3F72FC();
    }
  }
  else
  {
    sub_23C3F72FC();
    return sub_23C395A50(a1, v3);
  }
}

uint64_t sub_23C3EB9B8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 16);
  sub_23C3F72F0();
  if (v2)
  {
    sub_23C3F72FC();
    if (v2 == 1)
      sub_23C3F6F6C();
  }
  else
  {
    sub_23C3F72FC();
    sub_23C395A50((uint64_t)v4, v1);
  }
  return sub_23C3F7320();
}

uint64_t sub_23C3EBA60(uint64_t a1, uint64_t a2)
{
  return _s13FitnessSearch0B13LandingActionO2eeoiySbAC_ACtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t _s13FitnessSearch0B13LandingActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6)
      return sub_23C3E9238(a1, a4);
    return 0;
  }
  if (a3 != 1)
  {
    if (a1 | a2)
    {
      if (a6 == 2 && a4 == 1 && !a5)
        return 1;
    }
    else if (a6 == 2 && !(a5 | a4))
    {
      return 1;
    }
    return 0;
  }
  if (a6 != 1)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_23C3F72A8();
}

uint64_t sub_23C3EBB1C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6D6F436863746566 && a2 == 0xEE00646574656C70;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7272456863746566 && a2 == 0xEA0000000000726FLL || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7571655265676170 && a2 == 0xED00006465747365 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4164694477656976 && a2 == 0xED00007261657070)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

_QWORD *sub_23C3EBD0C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[5];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86568);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v26 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86570);
  v20[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86578);
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86580);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86588);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23C3EB56C();
  v15 = v30;
  sub_23C3F732C();
  if (!v15)
  {
    v20[2] = v6;
    v20[3] = v9;
    v20[1] = v7;
    v30 = v11;
    v16 = sub_23C3F7224();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X10 }
    v17 = sub_23C3F7104();
    swift_allocError();
    v9 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v9 = &type metadata for SearchLandingAction;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v9, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v9;
}

void sub_23C3EC068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v4 - 67) = 1;
  sub_23C3EB638();
  sub_23C3F71B8();
  if (v2)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x23C3EC02CLL);
  }
  v5 = v1;
  v6 = *(_QWORD *)(v4 - 168);
  sub_23C3F71F4();
  v7 = *(_QWORD *)(v4 - 96);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 152) + 8))(v3, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v0);
  JUMPOUT(0x23C3EC320);
}

void sub_23C3EC0C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 66) = 2;
  sub_23C3EB5F4();
  v4 = *(_QWORD *)(v3 - 144);
  sub_23C3F71B8();
  if (v2)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x23C3EC02CLL);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 176) + 8))(v4, *(_QWORD *)(v3 - 160));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v1, v0);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v3 - 104));
  JUMPOUT(0x23C3EC038);
}

void sub_23C3EC124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v6 - 65) = 3;
  sub_23C3EB5B0();
  sub_23C3F71B8();
  if (!v5)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 96) + 8))(v3, v0);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v6 - 104));
    JUMPOUT(0x23C3EC038);
  }
  JUMPOUT(0x23C3EC018);
}

unint64_t sub_23C3EC330()
{
  unint64_t result;

  result = qword_256B864F8;
  if (!qword_256B864F8)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchLandingAction, &type metadata for SearchLandingAction);
    atomic_store(result, (unint64_t *)&qword_256B864F8);
  }
  return result;
}

uint64_t sub_23C3EC378(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for SearchLandingAction(uint64_t a1)
{
  return sub_23C3EC3A4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_23C3EC3A4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s13FitnessSearch19SearchLandingActionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23C3EC378(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SearchLandingAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23C3EC378(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23C3EC3A4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SearchLandingAction(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23C3EC3A4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SearchLandingAction()
{
  return &type metadata for SearchLandingAction;
}

uint64_t storeEnumTagSinglePayload for SearchLandingAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C3EC4FC + 4 * byte_23C3FF0C9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C3EC530 + 4 * byte_23C3FF0C4[v4]))();
}

uint64_t sub_23C3EC530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3EC538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3EC540);
  return result;
}

uint64_t sub_23C3EC54C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3EC554);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C3EC558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3EC560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchLandingAction.CodingKeys()
{
  return &type metadata for SearchLandingAction.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchLandingAction.FetchCompletedCodingKeys()
{
  return &type metadata for SearchLandingAction.FetchCompletedCodingKeys;
}

uint64_t _s13FitnessSearch19SearchLandingActionO24FetchCompletedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C3EC5D0 + 4 * byte_23C3FF0CE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3EC5F0 + 4 * byte_23C3FF0D3[v4]))();
}

_BYTE *sub_23C3EC5D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3EC5F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3EC5F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3EC600(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3EC608(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3EC610(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchLandingAction.FetchErrorCodingKeys()
{
  return &type metadata for SearchLandingAction.FetchErrorCodingKeys;
}

ValueMetadata *type metadata accessor for SearchLandingAction.PageRequestedCodingKeys()
{
  return &type metadata for SearchLandingAction.PageRequestedCodingKeys;
}

ValueMetadata *type metadata accessor for SearchLandingAction.ViewDidAppearCodingKeys()
{
  return &type metadata for SearchLandingAction.ViewDidAppearCodingKeys;
}

unint64_t sub_23C3EC650()
{
  unint64_t result;

  result = qword_256B86500;
  if (!qword_256B86500)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF368, &type metadata for SearchLandingAction.FetchErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86500);
  }
  return result;
}

unint64_t sub_23C3EC698()
{
  unint64_t result;

  result = qword_256B86508;
  if (!qword_256B86508)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF420, &type metadata for SearchLandingAction.FetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86508);
  }
  return result;
}

unint64_t sub_23C3EC6E0()
{
  unint64_t result;

  result = qword_256B86510;
  if (!qword_256B86510)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF4D8, &type metadata for SearchLandingAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86510);
  }
  return result;
}

unint64_t sub_23C3EC728()
{
  unint64_t result;

  result = qword_256B86518;
  if (!qword_256B86518)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF390, &type metadata for SearchLandingAction.FetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86518);
  }
  return result;
}

unint64_t sub_23C3EC770()
{
  unint64_t result;

  result = qword_256B86520;
  if (!qword_256B86520)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF3B8, &type metadata for SearchLandingAction.FetchCompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86520);
  }
  return result;
}

unint64_t sub_23C3EC7B8()
{
  unint64_t result;

  result = qword_256B86528;
  if (!qword_256B86528)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF2D8, &type metadata for SearchLandingAction.FetchErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86528);
  }
  return result;
}

unint64_t sub_23C3EC800()
{
  unint64_t result;

  result = qword_256B86530;
  if (!qword_256B86530)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF300, &type metadata for SearchLandingAction.FetchErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86530);
  }
  return result;
}

unint64_t sub_23C3EC848()
{
  unint64_t result;

  result = qword_256B86538;
  if (!qword_256B86538)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF288, &type metadata for SearchLandingAction.PageRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86538);
  }
  return result;
}

unint64_t sub_23C3EC890()
{
  unint64_t result;

  result = qword_256B86540;
  if (!qword_256B86540)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF2B0, &type metadata for SearchLandingAction.PageRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86540);
  }
  return result;
}

unint64_t sub_23C3EC8D8()
{
  unint64_t result;

  result = qword_256B86548;
  if (!qword_256B86548)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF238, &type metadata for SearchLandingAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86548);
  }
  return result;
}

unint64_t sub_23C3EC920()
{
  unint64_t result;

  result = qword_256B86550;
  if (!qword_256B86550)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF260, &type metadata for SearchLandingAction.ViewDidAppearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86550);
  }
  return result;
}

unint64_t sub_23C3EC968()
{
  unint64_t result;

  result = qword_256B86558;
  if (!qword_256B86558)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF448, &type metadata for SearchLandingAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86558);
  }
  return result;
}

unint64_t sub_23C3EC9B0()
{
  unint64_t result;

  result = qword_256B86560;
  if (!qword_256B86560)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FF470, &type metadata for SearchLandingAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86560);
  }
  return result;
}

uint64_t sub_23C3EC9F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B85058);
  sub_23C3935DC(&qword_256B85050, &qword_256B85058, MEMORY[0x24BE2B5E8]);
  return sub_23C3F6780();
}

uint64_t TVSearchView.init(store:landingCanvasView:resultsCanvasView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a7 = sub_23C391DB8;
  *(_QWORD *)(a7 + 8) = result;
  *(_BYTE *)(a7 + 16) = 0;
  *(_QWORD *)(a7 + 24) = a3;
  *(_QWORD *)(a7 + 32) = a4;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  return result;
}

uint64_t sub_23C3ECAE0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C3ECB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v5 = v2[1];
  v17 = *v2;
  v18 = v5;
  v7 = *v2;
  v6 = v2[1];
  v19 = v2[2];
  v20 = *((_QWORD *)v2 + 6);
  v15 = v7;
  v16 = v6;
  sub_23C3EC9F4();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  if (v16)
  {
    swift_bridgeObjectRetain();
    sub_23C39A610(v15, *((uint64_t *)&v15 + 1), v16);
    sub_23C3EC9F4();
    swift_getKeyPath();
    sub_23C3F6E4C();
    swift_release();
    swift_release();
    v8 = v17;
    v9 = swift_allocObject();
    v10 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v9 + 32) = v10;
    v11 = v18;
    *(_OWORD *)(v9 + 48) = v17;
    *(_OWORD *)(v9 + 64) = v11;
    *(_OWORD *)(v9 + 80) = v19;
    *(_QWORD *)(v9 + 96) = v20;
    *(_OWORD *)(v9 + 104) = v8;
    sub_23C3EE20C((uint64_t)&v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B86030);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B86650);
    sub_23C3935DC(&qword_256B86220, &qword_256B86030, MEMORY[0x24BEE12D8]);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B865B0);
    sub_23C3935DC(&qword_256B865B8, &qword_256B865B0, MEMORY[0x24BDF43B0]);
    swift_getOpaqueTypeConformance2();
    sub_23C3E3D6C();
    sub_23C3F6D80();
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B865A8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 0, 1, v12);
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B865A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

void sub_23C3ECD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  uint64_t v22;

  v20 = sub_23C3F6EDC();
  MEMORY[0x24BDAC7A8](v20);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86230);
  MEMORY[0x24BDAC7A8](v13);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B865B0);
  MEMORY[0x24BDAC7A8](v19);
  v14 = *(_OWORD *)(a1 + 16);
  v21[0] = *(_OWORD *)a1;
  v21[1] = v14;
  v21[2] = *(_OWORD *)(a1 + 32);
  v22 = *(_QWORD *)(a1 + 48);
  v15 = swift_allocObject();
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(v15 + 64) = v16;
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a2 + 32);
  v17 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 104) = *(_OWORD *)a1;
  *(_OWORD *)(v15 + 136) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v15 + 16) = a5;
  *(_QWORD *)(v15 + 24) = a6;
  *(_QWORD *)(v15 + 32) = a7;
  *(_QWORD *)(v15 + 40) = a8;
  *(_QWORD *)(v15 + 96) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(v15 + 152) = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(v15 + 120) = v17;
  sub_23C3EE20C(a2);
  sub_23C3E3E44((uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86658);
  sub_23C3935DC(&qword_256B86660, &qword_256B86658, MEMORY[0x24BDF41A8]);
  sub_23C3F6D08();
  type metadata accessor for TVSearchView();
}

uint64_t sub_23C3ECF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23C3E3480((_QWORD *)(v3 - 208));
  v4 = sub_23C3F6EB8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 0, 1, v4);
  sub_23C3F6EC4();
  sub_23C3935DC(&qword_256B865B8, &qword_256B865B0, MEMORY[0x24BDF43B0]);
  v5 = *(_QWORD *)(v3 - 312);
  sub_23C3F6B7C();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 288) + 8))(v0, *(_QWORD *)(v3 - 280));
  sub_23C3E3EA4(v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 304) + 8))(v2, v5);
}

void sub_23C3ED078()
{
  uint64_t v0;

  v0 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for TVSearchView();
}

uint64_t sub_23C3ED110()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  sub_23C3EC9F4();
  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)v1 = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 16) = v2;
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(v0 + 48);
  swift_storeEnumTagMultiPayload();
  sub_23C3E3E44(v0);
  sub_23C3F6E64();
  swift_release();
  return sub_23C39A33C(v1);
}

uint64_t sub_23C3ED180()
{
  sub_23C39365C();
  swift_bridgeObjectRetain();
  return sub_23C3F6CFC();
}

void TVSearchView.body.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[33];
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v12 = a2;
  v3 = sub_23C3F6678();
  MEMORY[0x24BDAC7A8](v3);
  v10[25] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23C3F6F3C();
  MEMORY[0x24BDAC7A8](v5);
  v10[8] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23C3F69D8();
  v10[31] = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v17 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1;
  v8 = a1[2];
  v18 = a1[3];
  v9 = a1[5];
  v15 = a1[4];
  v16 = v8;
  v14 = v9;
  v19 = v8;
  v20 = v18;
  v21 = v15;
  v22 = v9;
  type metadata accessor for TVSearchableView();
}

uint64_t sub_23C3ED308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t ObjCClassFromMetadata;
  id v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  _BYTE v87[64];

  *(_QWORD *)(v1 + 8) = a1;
  *(_QWORD *)v1 = MEMORY[0x24261DE88](&unk_23C3FAF00, a1);
  v3 = sub_23C3F675C();
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v87[-v4];
  v6 = MEMORY[0x24261DE88](MEMORY[0x24BDEB238], v3);
  *(_QWORD *)(v2 - 144) = v3;
  *(_QWORD *)(v2 - 136) = v6;
  v7 = MEMORY[0x24261DE40](0, v2 - 144, MEMORY[0x24BDF2D38], 0);
  *(_QWORD *)(v1 + 192) = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v1 + 304) = &v87[-v8];
  *(_QWORD *)(v2 - 144) = v3;
  *(_QWORD *)(v2 - 136) = v6;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v2 - 144) = v7;
  *(_QWORD *)(v2 - 136) = OpaqueTypeConformance2;
  *(_QWORD *)(v1 + 32) = OpaqueTypeConformance2;
  *(_QWORD *)(v1 + 40) = v7;
  v10 = MEMORY[0x24261DE40](0, v2 - 144, MEMORY[0x24BDF2210], 0);
  *(_QWORD *)(v1 + 152) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v1 + 136) = v10;
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v1 + 296) = &v87[-v11];
  v12 = sub_23C3F6804();
  *(_QWORD *)(v1 + 168) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v1 + 112) = &v87[-v13];
  *(_QWORD *)(v1 + 72) = v12;
  v14 = sub_23C3F6804();
  *(_QWORD *)(v1 + 176) = *(_QWORD *)(v14 - 8);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v1 + 120) = &v87[-v16];
  v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86590);
  *(_QWORD *)(v1 + 80) = v17;
  *(_QWORD *)(v2 - 144) = v7;
  *(_QWORD *)(v2 - 136) = OpaqueTypeConformance2;
  v18 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v1 + 48) = v18;
  v19 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v2 - 160) = v18;
  *(_QWORD *)(v2 - 152) = v19;
  v20 = MEMORY[0x24BDED308];
  v21 = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v12, v2 - 160);
  *(_QWORD *)(v1 + 56) = v21;
  *(_QWORD *)(v2 - 176) = v21;
  *(_QWORD *)(v2 - 168) = v19;
  *(_QWORD *)(v1 + 96) = v15;
  v22 = MEMORY[0x24261DE88](v20, v15, v2 - 176);
  *(_QWORD *)(v1 + 88) = v22;
  v23 = sub_23C3EDCB8();
  *(_QWORD *)(v1 + 320) = v23;
  *(_QWORD *)(v2 - 144) = v15;
  *(_QWORD *)(v2 - 136) = v17;
  *(_QWORD *)(v2 - 128) = v22;
  *(_QWORD *)(v2 - 120) = v23;
  v24 = MEMORY[0x24261DE40](0, v2 - 144, MEMORY[0x24BDF2AD8], 0);
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v1 + 128) = v24;
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v1 + 312) = &v87[-v25];
  v26 = sub_23C3F6804();
  v27 = *(_QWORD *)(v26 - 8);
  *(_QWORD *)(v1 + 184) = v26;
  *(_QWORD *)(v1 + 208) = v27;
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v1 + 104) = &v87[-v28];
  v29 = sub_23C3F6804();
  v30 = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(v1 + 224) = v29;
  *(_QWORD *)(v1 + 256) = v30;
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v1 + 144) = &v87[-v31];
  v32 = sub_23C3F6804();
  *(_QWORD *)(v1 + 240) = v32;
  *(_QWORD *)(v1 + 272) = *(_QWORD *)(v32 - 8);
  v33 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v1 + 216) = &v87[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v1 + 232) = &v87[-v35];
  v36 = *(_QWORD *)(v1 + 24);
  v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)(v2 - 144) = *(_OWORD *)v36;
  *(_OWORD *)(v2 - 128) = v37;
  *(_OWORD *)(v2 - 112) = *(_OWORD *)(v36 + 32);
  *(_QWORD *)(v2 - 96) = *(_QWORD *)(v36 + 48);
  v38 = *(_QWORD *)(v1 + 360);
  *(_QWORD *)(v1 + 464) = *(_QWORD *)(v1 + 344);
  *(_QWORD *)(v1 + 472) = v38;
  v39 = *(_QWORD *)(v1 + 328);
  *(_QWORD *)(v1 + 480) = *(_QWORD *)(v1 + 336);
  *(_QWORD *)(v1 + 488) = v39;
  *(_QWORD *)(v1 + 496) = v2 - 144;
  sub_23C3F6A80();
  sub_23C3F6768();
  sub_23C3F6C18();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v1 + 16) + 8))(v5, v3);
  v40 = *(_OWORD *)(v2 - 128);
  *(_OWORD *)(v1 + 560) = *(_OWORD *)(v2 - 144);
  *(_OWORD *)(v1 + 576) = v40;
  *(_OWORD *)(v1 + 592) = *(_OWORD *)(v2 - 112);
  *(_QWORD *)(v1 + 608) = *(_QWORD *)(v2 - 96);
  sub_23C3EC9F4();
  *(_QWORD *)(v1 + 432) = swift_getKeyPath();
  swift_getKeyPath();
  sub_23C3F6D5C();
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v2 - 192);
  sub_23C3F69CC();
  sub_23C3F6F30();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v42 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v43 = *(_OWORD *)(v2 - 128);
  *(_OWORD *)(v1 + 560) = *(_OWORD *)(v2 - 144);
  *(_OWORD *)(v1 + 576) = v43;
  *(_OWORD *)(v1 + 592) = *(_OWORD *)(v2 - 112);
  *(_QWORD *)(v1 + 608) = *(_QWORD *)(v2 - 96);
  sub_23C3EC9F4();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + 560) = sub_23C3F6F60();
  *(_QWORD *)(v1 + 568) = v44;
  sub_23C39365C();
  v45 = sub_23C3F6B70();
  v47 = v46;
  LOBYTE(OpaqueTypeConformance2) = v48 & 1;
  v49 = *(_QWORD *)(v1 + 40);
  v50 = *(_QWORD *)(v1 + 304);
  sub_23C3F6BD0();
  sub_23C393710(v45, v47, OpaqueTypeConformance2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 248) + 8))(*(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 264));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 192) + 8))(v50, v49);
  sub_23C3F6AA4();
  v51 = *(_QWORD *)(v1 + 112);
  v52 = *(_QWORD *)(v1 + 136);
  v53 = *(_QWORD *)(v1 + 296);
  sub_23C3F6C3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 152) + 8))(v53, v52);
  sub_23C3F6AB0();
  v54 = *(_QWORD *)(v1 + 120);
  v55 = *(_QWORD *)(v1 + 72);
  sub_23C3F6C3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 168) + 8))(v51, v55);
  v57 = *(_QWORD *)(v1 + 336);
  v56 = *(_QWORD *)(v1 + 344);
  v58 = *(_QWORD *)(v1 + 360);
  *(_QWORD *)(v1 + 384) = v56;
  *(_QWORD *)(v1 + 392) = v58;
  v59 = *(_QWORD *)(v1 + 328);
  *(_QWORD *)(v1 + 400) = v57;
  *(_QWORD *)(v1 + 408) = v59;
  *(_QWORD *)(v1 + 416) = v2 - 144;
  v61 = *(_QWORD *)(v1 + 88);
  v60 = *(_QWORD *)(v1 + 96);
  v62 = *(_QWORD *)(v1 + 80);
  sub_23C3F6C00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 176) + 8))(v54, v60);
  v63 = swift_allocObject();
  *(_QWORD *)(v63 + 16) = v56;
  *(_QWORD *)(v63 + 24) = v58;
  v64 = v56;
  *(_QWORD *)(v63 + 32) = v57;
  *(_QWORD *)(v63 + 40) = v59;
  v65 = *(_OWORD *)(v2 - 128);
  *(_OWORD *)(v63 + 48) = *(_OWORD *)(v2 - 144);
  *(_OWORD *)(v63 + 64) = v65;
  *(_OWORD *)(v63 + 80) = *(_OWORD *)(v2 - 112);
  *(_QWORD *)(v63 + 96) = *(_QWORD *)(v2 - 96);
  sub_23C3EE20C(v2 - 144);
  *(_QWORD *)(v1 + 560) = v60;
  *(_QWORD *)(v1 + 568) = v62;
  *(_QWORD *)(v1 + 576) = v61;
  *(_QWORD *)(v1 + 584) = *(_QWORD *)(v1 + 320);
  v66 = swift_getOpaqueTypeConformance2();
  v67 = *(_QWORD *)(v1 + 104);
  v68 = *(_QWORD *)(v1 + 128);
  v69 = *(_QWORD *)(v1 + 312);
  sub_23C3F6C54();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 160) + 8))(v69, v68);
  v70 = swift_allocObject();
  v71 = *(_QWORD *)(v1 + 360);
  *(_QWORD *)(v70 + 16) = v64;
  *(_QWORD *)(v70 + 24) = v71;
  *(_QWORD *)(v70 + 32) = v57;
  *(_QWORD *)(v70 + 40) = v59;
  v72 = *(_OWORD *)(v2 - 128);
  *(_OWORD *)(v70 + 48) = *(_OWORD *)(v2 - 144);
  *(_OWORD *)(v70 + 64) = v72;
  *(_OWORD *)(v70 + 80) = *(_OWORD *)(v2 - 112);
  *(_QWORD *)(v70 + 96) = *(_QWORD *)(v2 - 96);
  sub_23C3EE20C(v2 - 144);
  v73 = MEMORY[0x24BDF0910];
  *(_QWORD *)(v1 + 536) = v66;
  *(_QWORD *)(v1 + 544) = v73;
  v74 = MEMORY[0x24BDED308];
  v75 = *(_QWORD *)(v1 + 184);
  v76 = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v75, v1 + 536);
  v77 = *(_QWORD *)(v1 + 144);
  sub_23C3F6BDC();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 208) + 8))(v67, v75);
  v78 = *(_OWORD *)(v2 - 128);
  *(_OWORD *)(v1 + 560) = *(_OWORD *)(v2 - 144);
  *(_OWORD *)(v1 + 576) = v78;
  *(_OWORD *)(v1 + 592) = *(_OWORD *)(v2 - 112);
  *(_QWORD *)(v1 + 608) = *(_QWORD *)(v2 - 96);
  sub_23C3EC9F4();
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  swift_release();
  LOBYTE(v69) = *(_BYTE *)(v1 + 560);
  *(_QWORD *)(v1 + 520) = v76;
  *(_QWORD *)(v1 + 528) = v73;
  v79 = *(_QWORD *)(v1 + 224);
  v80 = MEMORY[0x24261DE88](v74, v79, v1 + 520);
  v81 = *(_QWORD *)(v1 + 216);
  sub_23C3B2CE8(v69, v79, v80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 256) + 8))(v77, v79);
  v82 = sub_23C3EE3AC();
  *(_QWORD *)(v1 + 504) = v80;
  *(_QWORD *)(v1 + 512) = v82;
  v83 = *(_QWORD *)(v1 + 240);
  MEMORY[0x24261DE88](v74, v83, v1 + 504);
  v84 = *(_QWORD *)(v1 + 232);
  sub_23C39374C(v81, v83, v84);
  v85 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 272) + 8);
  v85(v81, v83);
  sub_23C392AFC(v84, v83, *(_QWORD *)(v1 + 280));
  return ((uint64_t (*)(uint64_t, uint64_t))v85)(v84, v83);
}

unint64_t sub_23C3EDCB8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256B86598;
  if (!qword_256B86598)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86590);
    v2 = sub_23C3EDD1C();
    result = MEMORY[0x24261DE88](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256B86598);
  }
  return result;
}

unint64_t sub_23C3EDD1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_256B865A0;
  if (!qword_256B865A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B865A8);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B865B0);
    v2[2] = sub_23C3935DC(&qword_256B865B8, &qword_256B865B0, MEMORY[0x24BDF43B0]);
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24261DE88](MEMORY[0x24BDF4A08], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B865A0);
  }
  return result;
}

void sub_23C3EDDC8()
{
  type metadata accessor for TVSearchView();
}

void sub_23C3EDE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,__int128 a33)
{
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23C3EC9F4();
  v35 = v33[3];
  v36 = v33[4];
  v38 = v33[5];
  v37 = v33[6];
  swift_retain();
  swift_retain();
  sub_23C3AF258(v35, v36, v38, v37, (uint64_t)&a31);
  *(_OWORD *)(v34 - 112) = a33;
  *(_QWORD *)(v34 - 128) = a31;
  *(_BYTE *)(v34 - 120) = a32;
  type metadata accessor for TVSearchableView();
}

uint64_t sub_23C3EDEC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  MEMORY[0x24261DE88](&unk_23C3FAF00, a1);
  sub_23C39374C((uint64_t)&v7, a1, (uint64_t)&v13);
  sub_23C3EE8F0(v2 - 128);
  sub_23C3EE91C(v2 - 112);
  swift_release();
  swift_release();
  v4 = v13;
  v5 = v14;
  v7 = v13;
  v8 = v14;
  v9 = v15;
  v10 = v16;
  v11 = v17;
  v12 = v18;
  sub_23C392AFC((uint64_t)&v7, a1, v1);
  sub_23C3AD4A0(v4, v5);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23C3EDFA4()
{
  sub_23C3EDDC8();
}

unint64_t sub_23C3EDFB8()
{
  unint64_t result;

  result = qword_256B865C0;
  if (!qword_256B865C0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for TVSearchFeature, &type metadata for TVSearchFeature);
    atomic_store(result, (unint64_t *)&qword_256B865C0);
  }
  return result;
}

uint64_t sub_23C3EDFFC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86668);
  return sub_23C3F6F24() & 1;
}

uint64_t sub_23C3EE054@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_23C3F6E4C();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_23C3EE090()
{
  return 8;
}

uint64_t sub_23C3EE09C()
{
  return swift_release();
}

uint64_t sub_23C3EE0A4(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_23C3EE0B4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86668);
  return sub_23C3F6EF4();
}

_QWORD *sub_23C3EE0F8(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23C3EE104()
{
  swift_retain();
  swift_getAtKeyPath();
  return swift_release();
}

uint64_t sub_23C3EE158()
{
  return sub_23C3EE104();
}

uint64_t sub_23C3EE160@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  type metadata accessor for SearchAction();
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

void sub_23C3EE1A0()
{
  type metadata accessor for TVSearchView();
}

uint64_t sub_23C3EE1E4(uint64_t a1)
{
  uint64_t v1;

  return sub_23C3ECB04(a1, v1);
}

void sub_23C3EE204()
{
  sub_23C3EE388();
}

uint64_t sub_23C3EE20C(uint64_t a1)
{
  sub_23C393178();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_23C3EE25C()
{
  uint64_t v0;

  v0 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for TVSearchView();
}

uint64_t sub_23C3EE2F4()
{
  uint64_t v0;

  sub_23C3EC9F4();
  swift_storeEnumTagMultiPayload();
  sub_23C3F6E64();
  swift_release();
  return sub_23C39A33C(v0);
}

uint64_t objectdestroy_6Tm()
{
  sub_23C393128();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23C3EE380()
{
  sub_23C3EE388();
}

void sub_23C3EE388()
{
  sub_23C3EE25C();
}

unint64_t sub_23C3EE3AC()
{
  unint64_t result;

  result = qword_256B865C8[0];
  if (!qword_256B865C8[0])
  {
    result = MEMORY[0x24261DE88](&unk_23C3FB128, &type metadata for TVSearchViewModifier);
    atomic_store(result, qword_256B865C8);
  }
  return result;
}

uint64_t sub_23C3EE3F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3EE428()
{
  sub_23C393128();
  swift_release();
  return swift_release();
}

uint64_t sub_23C3EE460(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C393178();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = a2[3];
  v7 = a2[6];
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23C3EE4DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_23C393178();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_23C393128();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23C3EE56C(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_23C393128();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

void type metadata accessor for TVSearchView()
{
  JUMPOUT(0x24261DDF8);
}

void sub_23C3EE5DC()
{
  type metadata accessor for TVSearchableView();
}

uint64_t sub_23C3EE610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  MEMORY[0x24261DE88](&unk_23C3FAF00, a1);
  v1 = sub_23C3F675C();
  v2 = MEMORY[0x24261DE88](MEMORY[0x24BDEB238], v1);
  v24 = v1;
  v25 = v2;
  v3 = MEMORY[0x24261DE40](255, &v24, MEMORY[0x24BDF2D38], 0);
  v24 = v1;
  v25 = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v24 = v3;
  v25 = OpaqueTypeConformance2;
  MEMORY[0x24261DE40](255, &v24, MEMORY[0x24BDF2210], 0);
  v5 = sub_23C3F6804();
  v6 = sub_23C3F6804();
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86590);
  v24 = v3;
  v25 = OpaqueTypeConformance2;
  v8 = swift_getOpaqueTypeConformance2();
  v9 = MEMORY[0x24BDECC60];
  v23[0] = v8;
  v23[1] = MEMORY[0x24BDECC60];
  v10 = MEMORY[0x24BDED308];
  v22[0] = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v5, v23);
  v22[1] = v9;
  v11 = MEMORY[0x24261DE88](v10, v6, v22);
  v12 = sub_23C3EDCB8();
  v24 = v6;
  v25 = v7;
  v26 = v11;
  v27 = v12;
  MEMORY[0x24261DE40](255, &v24, MEMORY[0x24BDF2AD8], 0);
  v13 = sub_23C3F6804();
  v14 = sub_23C3F6804();
  v15 = sub_23C3F6804();
  v24 = v6;
  v25 = v7;
  v26 = v11;
  v27 = v12;
  v16 = swift_getOpaqueTypeConformance2();
  v17 = MEMORY[0x24BDF0910];
  v21[0] = v16;
  v21[1] = MEMORY[0x24BDF0910];
  v20[0] = MEMORY[0x24261DE88](v10, v13, v21);
  v20[1] = v17;
  v19[0] = MEMORY[0x24261DE88](v10, v14, v20);
  v19[1] = sub_23C3EE3AC();
  return MEMORY[0x24261DE88](v10, v15, v19);
}

uint64_t sub_23C3EE830()
{
  sub_23C393128();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23C3EE870(uint64_t a1)
{
  uint64_t *v1;

  sub_23C3ECD80(a1, (uint64_t)(v1 + 6), v1[13], v1[14], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23C3EE884()
{
  sub_23C393128();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23C3EE8D4()
{
  sub_23C3ED078();
}

uint64_t sub_23C3EE8E8()
{
  return sub_23C3ED180();
}

uint64_t sub_23C3EE8F0(uint64_t a1)
{
  sub_23C3AD4A0(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_23C3EE91C(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t SearchQueryMethod.rawValue.getter(char a1)
{
  return *(_QWORD *)&aHistory_6[8 * a1];
}

uint64_t sub_23C3EE968@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s13FitnessSearch0B11QueryMethodO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_23C3EE994@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = SearchQueryMethod.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23C3EE9BC()
{
  sub_23C3EED44();
  return sub_23C3F6FA8();
}

uint64_t sub_23C3EEA18()
{
  sub_23C3EED44();
  return sub_23C3F6F9C();
}

uint64_t sub_23C3EEA64(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = SearchQueryMethod.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == SearchQueryMethod.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23C3F72A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23C3EEAEC()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_23C3F72F0();
  SearchQueryMethod.rawValue.getter(v1);
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t sub_23C3EEB4C()
{
  char *v0;

  SearchQueryMethod.rawValue.getter(*v0);
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C3EEB8C()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_23C3F72F0();
  SearchQueryMethod.rawValue.getter(v1);
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B11QueryMethodO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_23C3F71AC();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_23C3EEC34()
{
  unint64_t result;

  result = qword_256B86670;
  if (!qword_256B86670)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchQueryMethod, &type metadata for SearchQueryMethod);
    atomic_store(result, (unint64_t *)&qword_256B86670);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchQueryMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C3EECC4 + 4 * byte_23C3FF905[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C3EECF8 + 4 * byte_23C3FF900[v4]))();
}

uint64_t sub_23C3EECF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3EED00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3EED08);
  return result;
}

uint64_t sub_23C3EED14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3EED1CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C3EED20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3EED28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchQueryMethod()
{
  return &type metadata for SearchQueryMethod;
}

unint64_t sub_23C3EED44()
{
  unint64_t result;

  result = qword_256B86678;
  if (!qword_256B86678)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchQueryMethod, &type metadata for SearchQueryMethod);
    atomic_store(result, (unint64_t *)&qword_256B86678);
  }
  return result;
}

uint64_t sub_23C3EED8C(char a1)
{
  return *(_QWORD *)&aNone_3[8 * a1];
}

uint64_t sub_23C3EEDAC()
{
  char *v0;

  return sub_23C3EED8C(*v0);
}

uint64_t sub_23C3EEDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3F08EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3EEDD8()
{
  sub_23C3EFDDC();
  return sub_23C3F7344();
}

uint64_t sub_23C3EEE00()
{
  sub_23C3EFDDC();
  return sub_23C3F7350();
}

uint64_t sub_23C3EEE28()
{
  sub_23C3EFE64();
  return sub_23C3F7344();
}

uint64_t sub_23C3EEE50()
{
  sub_23C3EFE64();
  return sub_23C3F7350();
}

uint64_t sub_23C3EEE78()
{
  sub_23C3EFEA8();
  return sub_23C3F7344();
}

uint64_t sub_23C3EEEA0()
{
  sub_23C3EFEA8();
  return sub_23C3F7350();
}

uint64_t sub_23C3EEEC8()
{
  sub_23C3EFE20();
  return sub_23C3F7344();
}

uint64_t sub_23C3EEEF0()
{
  sub_23C3EFE20();
  return sub_23C3F7350();
}

uint64_t SearchResultsState.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86680);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v31 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86688);
  v5 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v30 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86690);
  v7 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86698);
  v38 = *(_QWORD *)(v10 - 8);
  v39 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1[1];
  v36 = *v1;
  v37 = v13;
  v35 = v1[2];
  v14 = v1[3];
  v27 = v1[4];
  v28 = v14;
  v26 = v1[5];
  v25 = v1[6];
  v15 = *((unsigned __int8 *)v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3EFDDC();
  sub_23C3F7338();
  if (v15)
  {
    if (v15 == 1)
    {
      LOBYTE(v41) = 2;
      sub_23C3EFE20();
      v16 = v31;
      v17 = v39;
      sub_23C3F7230();
      v41 = v36;
      v42 = v37;
      v43 = v35;
      v44 = v28;
      v45 = v27;
      v46 = v26;
      v47 = v25;
      sub_23C3A59D8();
      v18 = v33;
      sub_23C3F7284();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v12, v17);
    }
    else
    {
      LOBYTE(v41) = 0;
      sub_23C3EFEA8();
      v24 = v39;
      sub_23C3F7230();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v12, v24);
    }
  }
  else
  {
    LOBYTE(v41) = 1;
    sub_23C3EFE64();
    v20 = v30;
    v21 = v39;
    sub_23C3F7230();
    LOBYTE(v41) = 0;
    v22 = v34;
    v23 = v40;
    sub_23C3F7260();
    if (!v23)
    {
      LOBYTE(v41) = v35;
      v48 = 1;
      sub_23C39FE40();
      sub_23C3F7284();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v12, v21);
  }
}

uint64_t SearchResultsState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  char v58;

  v47 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B866C0);
  v4 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  v45 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B866C8);
  v46 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B866D0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B866D8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23C3EFDDC();
  v16 = v51;
  sub_23C3F732C();
  if (v16)
    goto LABEL_9;
  v42 = v7;
  v17 = v48;
  v18 = v49;
  v51 = v12;
  v19 = sub_23C3F7224();
  v20 = v11;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v23 = sub_23C3F7104();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v25 = &type metadata for SearchResultsState;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v11);
LABEL_9:
    v29 = (uint64_t)v50;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  v21 = v14;
  if (*(_BYTE *)(v19 + 32))
  {
    if (*(_BYTE *)(v19 + 32) == 1)
    {
      LOBYTE(v52) = 1;
      sub_23C3EFE64();
      v22 = v20;
      sub_23C3F71B8();
      LOBYTE(v52) = 0;
      v27 = v43;
      v28 = v17;
      v31 = sub_23C3F71F4();
      v33 = v32;
      v58 = 1;
      sub_23C3A00B8();
      sub_23C3F7218();
      v34 = v51;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v22);
      v35 = 0;
      v36 = 0;
      v37 = 0;
      v38 = v52;
      v39 = 0uLL;
    }
    else
    {
      LOBYTE(v52) = 2;
      sub_23C3EFE20();
      sub_23C3F71B8();
      sub_23C3A7D00();
      v26 = v44;
      sub_23C3F7218();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v20);
      v31 = v52;
      v33 = v53;
      v38 = v54;
      v35 = v55;
      v36 = v56;
      v37 = 1;
      v39 = v57;
    }
  }
  else
  {
    LOBYTE(v52) = 0;
    sub_23C3EFEA8();
    sub_23C3F71B8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v42);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v20);
    v31 = 0;
    v33 = 0;
    v38 = 0;
    v35 = 0;
    v36 = 0;
    v39 = 0uLL;
    v37 = 2;
  }
  v29 = (uint64_t)v50;
  v40 = v47;
  *v47 = v31;
  v40[1] = v33;
  v40[2] = v38;
  v40[3] = v35;
  v40[4] = v36;
  *(_OWORD *)(v40 + 5) = v39;
  *((_BYTE *)v40 + 56) = v37;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_23C3EF840@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SearchResultsState.init(from:)(a1, a2);
}

uint64_t sub_23C3EF854(_QWORD *a1)
{
  return SearchResultsState.encode(to:)(a1);
}

uint64_t SearchResultsState.hash(into:)(uint64_t a1)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 56))
  {
    if (*(_BYTE *)(v1 + 56) == 1)
    {
      sub_23C3F72FC();
      return SearchResult.hash(into:)(a1);
    }
    else
    {
      return sub_23C3F72FC();
    }
  }
  else
  {
    sub_23C3F72FC();
    sub_23C3F6F6C();
    sub_23C3F6F6C();
    return swift_bridgeObjectRelease();
  }
}

uint64_t SearchResultsState.hashValue.getter()
{
  uint64_t v0;
  int v1;
  _BYTE v3[72];

  v1 = *(unsigned __int8 *)(v0 + 56);
  sub_23C3F72F0();
  if (v1)
  {
    sub_23C3F72FC();
    if (v1 == 1)
      SearchResult.hash(into:)((uint64_t)v3);
  }
  else
  {
    sub_23C3F72FC();
    sub_23C3F6F6C();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  return sub_23C3F7320();
}

uint64_t sub_23C3EFA68()
{
  _BYTE v1[72];

  sub_23C3F72F0();
  SearchResultsState.hash(into:)((uint64_t)v1);
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B12ResultsStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[7];
  _QWORD v51[7];
  _QWORD v52[7];
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(unsigned __int8 *)(a1 + 56);
  v10 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v13 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 32);
  v15 = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(unsigned __int8 *)(a2 + 56);
  v52[0] = *(_QWORD *)a1;
  v52[1] = v2;
  v52[2] = v4;
  v52[3] = v5;
  v52[4] = v7;
  v52[5] = v6;
  v52[6] = v8;
  v53 = v9;
  v54 = v10;
  v55 = v11;
  v56 = v13;
  v57 = v12;
  v58 = v14;
  v59 = v15;
  v60 = v16;
  v61 = v17;
  if (!v9)
  {
    if (!v17)
    {
      v45 = v5;
      v47 = v7;
      v49 = v6;
      v43 = v8;
      v20 = v4;
      if (v3 == v10 && v2 == v11 || (sub_23C3F72A8() & 1) != 0)
      {
        sub_23C39AE54(v10, v11, v13, v12, v14, v15, v16, 0);
        sub_23C39AE54(v3, v2, v20, v45, v47, v49, v43, 0);
        v21 = sub_23C3E8FA4(v20, v13);
        sub_23C3F0A18((uint64_t)v52);
        return v21 & 1;
      }
      sub_23C39AE54(v10, v11, v13, v12, v14, v15, v16, 0);
      v33 = v3;
      v34 = v2;
      v35 = v20;
      v36 = v45;
      v37 = v47;
      v38 = v49;
      v39 = v43;
      v40 = 0;
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v9 != 1)
  {
    if (v17 == 2 && !(v11 | v10 | v13 | v12 | v14 | v15 | v16))
    {
      sub_23C3F0A18((uint64_t)v52);
      v19 = 1;
      return v19 & 1;
    }
    goto LABEL_12;
  }
  if (v17 != 1)
  {
LABEL_12:
    v23 = v10;
    v24 = v11;
    v25 = v4;
    v26 = v13;
    v27 = v5;
    v28 = v12;
    v29 = v7;
    v30 = v14;
    v31 = v6;
    v32 = v8;
    sub_23C39AE54(v23, v24, v26, v28, v30, v15, v16, v17);
    v33 = v3;
    v34 = v2;
    v35 = v25;
    v36 = v27;
    v37 = v29;
    v38 = v31;
    v39 = v32;
    v40 = v9;
LABEL_13:
    sub_23C39AE54(v33, v34, v35, v36, v37, v38, v39, v40);
    sub_23C3F0A18((uint64_t)v52);
    v19 = 0;
    return v19 & 1;
  }
  v51[0] = v3;
  v51[1] = v2;
  v51[2] = v4;
  v51[3] = v5;
  v51[4] = v7;
  v51[5] = v6;
  v51[6] = v8;
  v50[0] = v10;
  v50[1] = v11;
  v50[2] = v13;
  v50[3] = v12;
  v50[4] = v14;
  v50[5] = v15;
  v50[6] = v16;
  v18 = v4;
  v41 = v4;
  v42 = v8;
  v44 = v5;
  v46 = v7;
  v48 = v6;
  sub_23C39AE54(v10, v11, v13, v12, v14, v15, v16, 1);
  sub_23C39AE54(v3, v2, v18, v44, v46, v48, v42, 1);
  sub_23C39AE54(v10, v11, v13, v12, v14, v15, v16, 1);
  sub_23C39AE54(v3, v2, v41, v44, v46, v48, v42, 1);
  v19 = _s13FitnessSearch0B6ResultV2eeoiySbAC_ACtFZ_0(v51, v50);
  sub_23C3F0A18((uint64_t)v52);
  sub_23C39A378(v10, v11, v13, v12, v14, v15, v16, 1);
  sub_23C39A378(v3, v2, v41, v44, v46, v48, v42, 1);
  return v19 & 1;
}

unint64_t sub_23C3EFDDC()
{
  unint64_t result;

  result = qword_256B866A0;
  if (!qword_256B866A0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFF0C, &type metadata for SearchResultsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B866A0);
  }
  return result;
}

unint64_t sub_23C3EFE20()
{
  unint64_t result;

  result = qword_256B866A8;
  if (!qword_256B866A8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFEBC, &type metadata for SearchResultsState.ResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B866A8);
  }
  return result;
}

unint64_t sub_23C3EFE64()
{
  unint64_t result;

  result = qword_256B866B0;
  if (!qword_256B866B0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFE6C, &type metadata for SearchResultsState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B866B0);
  }
  return result;
}

unint64_t sub_23C3EFEA8()
{
  unint64_t result;

  result = qword_256B866B8;
  if (!qword_256B866B8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFE1C, &type metadata for SearchResultsState.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B866B8);
  }
  return result;
}

unint64_t sub_23C3EFEF0()
{
  unint64_t result;

  result = qword_256B866E0;
  if (!qword_256B866E0)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResultsState, &type metadata for SearchResultsState);
    atomic_store(result, (unint64_t *)&qword_256B866E0);
  }
  return result;
}

uint64_t destroy for SearchResultsState(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 56);
  if (v1 >= 2)
    v1 = *(_DWORD *)result + 2;
  if (v1 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (v1)
  {
    return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultsState(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v3 = *(unsigned __int8 *)(a2 + 56);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v3)
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_BYTE *)(a1 + 56) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for SearchResultsState(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  if ((__int128 *)a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 >= 2)
    v4 = *(_DWORD *)a1 + 2;
  if (v4 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (!v4)
    goto LABEL_8;
LABEL_9:
  v5 = *((unsigned __int8 *)a2 + 56);
  if (v5 >= 2)
    v5 = *(_DWORD *)a2 + 2;
  if (v5 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_BYTE *)(a1 + 56) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v5)
  {
    v6 = *a2;
    v7 = a2[1];
    v8 = a2[2];
    *(_OWORD *)(a1 + 41) = *(__int128 *)((char *)a2 + 41);
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)a1 = v6;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_BYTE *)(a1 + 56) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SearchResultsState(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 >= 2)
    v4 = *(_DWORD *)a1 + 2;
  if (v4 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (!v4)
    goto LABEL_8;
LABEL_9:
  v5 = *(unsigned __int8 *)(a2 + 56);
  if (v5 >= 2)
    v5 = *(_DWORD *)a2 + 2;
  if (v5 == 1)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = 1;
  }
  else if (v5)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    *(_BYTE *)(a1 + 56) = 0;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SearchResultsState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

uint64_t sub_23C3F0338(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_23C3F0354(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsState()
{
  return &type metadata for SearchResultsState;
}

uint64_t storeEnumTagSinglePayload for SearchResultsState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23C3F03DC + 4 * byte_23C3FFA65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23C3F0410 + 4 * byte_23C3FFA60[v4]))();
}

uint64_t sub_23C3F0410(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3F0418(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3F0420);
  return result;
}

uint64_t sub_23C3F042C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3F0434);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23C3F0438(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3F0440(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsState.CodingKeys()
{
  return &type metadata for SearchResultsState.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchResultsState.NoneCodingKeys()
{
  return &type metadata for SearchResultsState.NoneCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SearchResultsState.FetchingCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23C3F04B8 + 4 * byte_23C3FFA6F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23C3F04EC + 4 * byte_23C3FFA6A[v4]))();
}

uint64_t sub_23C3F04EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3F04F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3F04FCLL);
  return result;
}

uint64_t sub_23C3F0508(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3F0510);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23C3F0514(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3F051C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsState.FetchingCodingKeys()
{
  return &type metadata for SearchResultsState.FetchingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SearchResultsState.ResultCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C3F0578 + 4 * byte_23C3FFA74[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3F0598 + 4 * byte_23C3FFA79[v4]))();
}

_BYTE *sub_23C3F0578(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3F0598(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3F05A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3F05A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3F05B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3F05B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsState.ResultCodingKeys()
{
  return &type metadata for SearchResultsState.ResultCodingKeys;
}

unint64_t sub_23C3F05D8()
{
  unint64_t result;

  result = qword_256B866E8;
  if (!qword_256B866E8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFC34, &type metadata for SearchResultsState.ResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B866E8);
  }
  return result;
}

unint64_t sub_23C3F0620()
{
  unint64_t result;

  result = qword_256B866F0;
  if (!qword_256B866F0)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFCEC, &type metadata for SearchResultsState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B866F0);
  }
  return result;
}

unint64_t sub_23C3F0668()
{
  unint64_t result;

  result = qword_256B866F8;
  if (!qword_256B866F8)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFDF4, &type metadata for SearchResultsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B866F8);
  }
  return result;
}

unint64_t sub_23C3F06B0()
{
  unint64_t result;

  result = qword_256B86700;
  if (!qword_256B86700)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFD14, &type metadata for SearchResultsState.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86700);
  }
  return result;
}

unint64_t sub_23C3F06F8()
{
  unint64_t result;

  result = qword_256B86708;
  if (!qword_256B86708)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFD3C, &type metadata for SearchResultsState.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86708);
  }
  return result;
}

unint64_t sub_23C3F0740()
{
  unint64_t result;

  result = qword_256B86710;
  if (!qword_256B86710)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFC5C, &type metadata for SearchResultsState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86710);
  }
  return result;
}

unint64_t sub_23C3F0788()
{
  unint64_t result;

  result = qword_256B86718;
  if (!qword_256B86718)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFC84, &type metadata for SearchResultsState.FetchingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86718);
  }
  return result;
}

unint64_t sub_23C3F07D0()
{
  unint64_t result;

  result = qword_256B86720;
  if (!qword_256B86720)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFBA4, &type metadata for SearchResultsState.ResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86720);
  }
  return result;
}

unint64_t sub_23C3F0818()
{
  unint64_t result;

  result = qword_256B86728;
  if (!qword_256B86728)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFBCC, &type metadata for SearchResultsState.ResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86728);
  }
  return result;
}

unint64_t sub_23C3F0860()
{
  unint64_t result;

  result = qword_256B86730;
  if (!qword_256B86730)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFD64, &type metadata for SearchResultsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86730);
  }
  return result;
}

unint64_t sub_23C3F08A8()
{
  unint64_t result;

  result = qword_256B86738;
  if (!qword_256B86738)
  {
    result = MEMORY[0x24261DE88](&unk_23C3FFD8C, &type metadata for SearchResultsState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86738);
  }
  return result;
}

uint64_t sub_23C3F08EC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696863746566 && a2 == 0xE800000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23C3F0A18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 120);
  sub_23C39A378(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  sub_23C39A378(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

BOOL SearchResult.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) == 0;
}

uint64_t static SearchResult.empty(_:error:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v10 = sub_23C3F6654();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23C3F6648();
  v14 = sub_23C3F663C();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v17 = MEMORY[0x24BEE4AF8];
  *a5 = v14;
  a5[1] = v16;
  a5[2] = v17;
  a5[3] = a1;
  a5[4] = a2;
  a5[5] = a3;
  a5[6] = a4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SearchResult.datasetIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResult.scopes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResult.term.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchResult.error.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall SearchResult.init(datasetIdentifier:scopes:term:error:)(FitnessSearch::SearchResult *__return_ptr retstr, Swift::String_optional datasetIdentifier, Swift::OpaquePointer scopes, Swift::String term, Swift::String_optional error)
{
  retstr->datasetIdentifier = datasetIdentifier;
  retstr->scopes = scopes;
  retstr->term = term;
  retstr->error = error;
}

uint64_t sub_23C3F0C34(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C3F0C6C + 4 * byte_23C3FFFD0[a1]))(0xD000000000000011, 0x800000023C400B00);
}

uint64_t sub_23C3F0C6C()
{
  return 0x7365706F6373;
}

uint64_t sub_23C3F0C80()
{
  return 1836213620;
}

uint64_t sub_23C3F0C90()
{
  return 0x726F727265;
}

uint64_t sub_23C3F0CA4()
{
  unsigned __int8 *v0;

  return sub_23C3F0C34(*v0);
}

uint64_t sub_23C3F0CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3F1A30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3F0CD0()
{
  sub_23C3F1550();
  return sub_23C3F7344();
}

uint64_t sub_23C3F0CF8()
{
  sub_23C3F1550();
  return sub_23C3F7350();
}

uint64_t SearchResult.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86740);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[4] = v1[3];
  v12 = v7;
  v8 = v1[4];
  v11[2] = v1[5];
  v11[3] = v8;
  v11[1] = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3F1550();
  sub_23C3F7338();
  v18 = 0;
  v9 = v13;
  sub_23C3F723C();
  if (!v9)
  {
    v14 = v12;
    v17 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B86750);
    sub_23C3F1594(&qword_256B86758, (uint64_t (*)(void))sub_23C39BB30, MEMORY[0x24BEE12A0]);
    sub_23C3F7284();
    v16 = 2;
    sub_23C3F7260();
    v15 = 3;
    sub_23C3F723C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SearchResult.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86760);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3F1550();
  sub_23C3F732C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = 0;
  v9 = sub_23C3F71D0();
  v11 = v10;
  v25 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86750);
  v29 = 1;
  sub_23C3F1594(&qword_256B86768, (uint64_t (*)(void))sub_23C39C500, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_23C3F7218();
  v28 = 2;
  v24 = v26;
  swift_bridgeObjectRetain();
  v22 = sub_23C3F71F4();
  v23 = v12;
  v27 = 3;
  swift_bridgeObjectRetain();
  v13 = sub_23C3F71D0();
  v16 = v15;
  v17 = v13;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v18 = v24;
  *a2 = v25;
  a2[1] = v11;
  v19 = v22;
  v20 = v23;
  a2[2] = v18;
  a2[3] = v19;
  a2[4] = v20;
  a2[5] = v17;
  a2[6] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C3F11E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SearchResult.init(from:)(a1, a2);
}

uint64_t sub_23C3F11FC(_QWORD *a1)
{
  return SearchResult.encode(to:)(a1);
}

uint64_t SearchResult.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[2];
  v4 = v1[6];
  if (v1[1])
  {
    sub_23C3F7308();
    swift_bridgeObjectRetain();
    sub_23C3F6F6C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23C3F7308();
  }
  swift_bridgeObjectRetain();
  sub_23C3954A8(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  if (!v4)
    return sub_23C3F7308();
  sub_23C3F7308();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t SearchResult.hashValue.getter()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  _BYTE v4[72];
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;

  v1 = *((_QWORD *)v0 + 4);
  v2 = v0[1];
  v5 = *v0;
  v6 = v2;
  v7 = v1;
  v8 = *(__int128 *)((char *)v0 + 40);
  sub_23C3F72F0();
  SearchResult.hash(into:)((uint64_t)v4);
  return sub_23C3F7320();
}

uint64_t sub_23C3F1388()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  _BYTE v4[72];
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;

  v1 = *((_QWORD *)v0 + 4);
  v2 = v0[1];
  v5 = *v0;
  v6 = v2;
  v7 = v1;
  v8 = *(__int128 *)((char *)v0 + 40);
  sub_23C3F72F0();
  SearchResult.hash(into:)((uint64_t)v4);
  return sub_23C3F7320();
}

uint64_t sub_23C3F13E4()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  _BYTE v4[72];
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;

  v1 = *((_QWORD *)v0 + 4);
  v2 = v0[1];
  v5 = *v0;
  v6 = v2;
  v7 = v1;
  v8 = *(__int128 *)((char *)v0 + 40);
  sub_23C3F72F0();
  SearchResult.hash(into:)((uint64_t)v4);
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B6ResultV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t result;
  char v17;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  v12 = a2[4];
  v14 = a2[5];
  v13 = a2[6];
  if (!v3)
  {
    if (v9)
      return 0;
    goto LABEL_8;
  }
  if (!v9)
    return 0;
  if (*a1 == *a2 && v3 == v9 || (v15 = sub_23C3F72A8(), result = 0, (v15 & 1) != 0))
  {
LABEL_8:
    if ((sub_23C3EA334(v4, v10) & 1) != 0)
    {
      if (v5 != v11 || v6 != v12)
      {
        v17 = sub_23C3F72A8();
        result = 0;
        if ((v17 & 1) == 0)
          return result;
      }
      if (v8)
      {
        if (v13 && (v7 == v14 && v8 == v13 || (sub_23C3F72A8() & 1) != 0))
          return 1;
      }
      else if (!v13)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_23C3F1550()
{
  unint64_t result;

  result = qword_256B86748;
  if (!qword_256B86748)
  {
    result = MEMORY[0x24261DE88](&unk_23C400180, &type metadata for SearchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86748);
  }
  return result;
}

uint64_t sub_23C3F1594(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86750);
    v8 = a2();
    result = MEMORY[0x24261DE88](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23C3F1600()
{
  unint64_t result;

  result = qword_256B86770;
  if (!qword_256B86770)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchResult, &type metadata for SearchResult);
    atomic_store(result, (unint64_t *)&qword_256B86770);
  }
  return result;
}

uint64_t destroy for SearchResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SearchResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SearchResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResult()
{
  return &type metadata for SearchResult;
}

uint64_t storeEnumTagSinglePayload for SearchResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C3F18D8 + 4 * byte_23C3FFFD9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C3F190C + 4 * byte_23C3FFFD4[v4]))();
}

uint64_t sub_23C3F190C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3F1914(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3F191CLL);
  return result;
}

uint64_t sub_23C3F1928(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3F1930);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C3F1934(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3F193C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchResult.CodingKeys()
{
  return &type metadata for SearchResult.CodingKeys;
}

unint64_t sub_23C3F195C()
{
  unint64_t result;

  result = qword_256B86778;
  if (!qword_256B86778)
  {
    result = MEMORY[0x24261DE88](&unk_23C400158, &type metadata for SearchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86778);
  }
  return result;
}

unint64_t sub_23C3F19A4()
{
  unint64_t result;

  result = qword_256B86780;
  if (!qword_256B86780)
  {
    result = MEMORY[0x24261DE88](&unk_23C4000C8, &type metadata for SearchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86780);
  }
  return result;
}

unint64_t sub_23C3F19EC()
{
  unint64_t result;

  result = qword_256B86788;
  if (!qword_256B86788)
  {
    result = MEMORY[0x24261DE88](&unk_23C4000F0, &type metadata for SearchResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86788);
  }
  return result;
}

uint64_t sub_23C3F1A30(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023C400B00 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365706F6373 && a2 == 0xE600000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1836213620 && a2 == 0xE400000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

UIScrollView_optional __swiftcall SearchViewController.contentScrollView(for:)(NSDirectionalRectEdge a1)
{
  uint64_t v1;
  objc_class *v2;
  Swift::Bool v3;
  UIScrollView_optional result;

  v2 = (objc_class *)objc_msgSend(*(id *)(v1 + qword_256B86790), sel_contentScrollViewForEdge_, a1);
  result.value.super.super.super.isa = v2;
  result.is_nil = v3;
  return result;
}

id sub_23C3F1BE4(void *a1, uint64_t a2, NSDirectionalRectEdge a3)
{
  id v4;
  void *v5;

  v4 = a1;
  v5 = (void *)SearchViewController.contentScrollView(for:)(a3);

  return v5;
}

id SearchViewController.__allocating_init(store:searchLandingView:searchResultsView:onContentScrollViewDidChange:onPop:)(uint64_t (*a1)(_QWORD *), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  objc_class *v10;
  id v18;

  v18 = objc_allocWithZone(v10);
  return SearchViewController.init(store:searchLandingView:searchResultsView:onContentScrollViewDidChange:onPop:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

id SearchViewController.init(store:searchLandingView:searchResultsView:onContentScrollViewDidChange:onPop:)(uint64_t (*a1)(_QWORD *), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v32)(uint64_t);
  uint64_t v33;
  void (*v34)(void);
  uint64_t v35;
  uint64_t v36;
  objc_class *ObjectType;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;

  v41 = a7;
  v42 = a8;
  v39 = a2;
  v40 = a6;
  v38 = a4;
  v32 = a3;
  v36 = a10;
  v34 = a5;
  v35 = a9;
  ObjectType = (objc_class *)swift_getObjectType();
  v12 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *v10);
  v33 = v12[11];
  v13 = MEMORY[0x24BDAC7A8](ObjectType);
  v14 = v12[10];
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  *(_QWORD *)((char *)v10 + qword_256B86798) = MEMORY[0x24BEE4AF8];
  v18 = v10;
  *(_QWORD *)((char *)v18 + qword_256B867A0) = a1(v18);
  v19 = v12[12];
  v21 = type metadata accessor for ScrollObservingHostingController(0, v14, v19, v20);
  v32(v21);
  sub_23C3F3128(v41);
  v22 = sub_23C396970((uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(_QWORD *)((char *)v18 + qword_256B86790) = v22;
  v23 = v12[13];
  v24 = v33;
  sub_23C3F699C();
  v34();
  *(_QWORD *)((char *)v18 + qword_256B867A8) = sub_23C3F6984();
  v25 = (_QWORD *)((char *)v18 + qword_256B867B0);
  v26 = v36;
  *v25 = v35;
  v25[1] = v26;
  swift_retain();

  v44.receiver = v18;
  v44.super_class = ObjectType;
  v27 = objc_msgSendSuper2(&v44, sel_initWithNibName_bundle_, 0, 0);
  v43 = sub_23C3F6E58();
  v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = v14;
  v29[3] = v24;
  v29[4] = v19;
  v29[5] = v23;
  v29[6] = v28;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_23C3F3180;
  *(_QWORD *)(v30 + 24) = v29;
  sub_23C3F6720();
  sub_23C3F672C();
  swift_release();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B867B8);
  sub_23C3F31B4();
  sub_23C3F6714();
  swift_endAccess();
  swift_release();
  sub_23C396A10(v41);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return v27;
}

void sub_23C3F2004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x24261DF90](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_23C3F2054();

  }
}

void sub_23C3F2054()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;

  v1 = objc_msgSend(v0, sel_navigationItem);
  v2 = objc_msgSend(v1, sel_searchController);

  if (v2)
  {
    v3 = objc_msgSend(v2, sel_searchBar);

    swift_getKeyPath();
    sub_23C3F6E4C();
    swift_release();
    v4 = (void *)sub_23C3F6F48();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setText_, v4);

  }
}

id SearchViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_23C3F217C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s13FitnessSearch0B14ViewControllerC5coderACyxq_GSgSo7NSCoderC_tcfc_0();
}

Swift::Void __swiftcall SearchViewController.viewDidLoad()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, sel_viewDidLoad);
  sub_23C3F21DC();
  sub_23C3F25EC();
}

id sub_23C3F21DC()
{
  char *v0;
  void *v1;
  void *v2;
  id result;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;

  v1 = v0;
  v2 = *(void **)&v0[qword_256B86790];
  objc_msgSend(v0, sel_addChildViewController_, v2);
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = result;
  objc_msgSend(result, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v5 = result;
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = result;
  objc_msgSend(v5, sel_addSubview_, result);

  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86970);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23C4001D0;
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v8 = result;
  v9 = objc_msgSend(result, sel_leadingAnchor);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v10 = result;
  v11 = objc_msgSend(result, sel_leadingAnchor);

  v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  *(_QWORD *)(v7 + 32) = v12;
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v13 = result;
  v14 = objc_msgSend(result, sel_trailingAnchor);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v15 = result;
  v16 = objc_msgSend(result, sel_trailingAnchor);

  v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(_QWORD *)(v7 + 40) = v17;
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v18 = result;
  v19 = objc_msgSend(result, sel_topAnchor);

  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v20 = result;
  v21 = objc_msgSend(result, sel_topAnchor);

  v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v21);
  *(_QWORD *)(v7 + 48) = v22;
  result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v23 = result;
  v24 = objc_msgSend(result, sel_bottomAnchor);

  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v25 = result;
    v26 = (void *)objc_opt_self();
    v27 = objc_msgSend(v25, sel_bottomAnchor);

    v28 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v27);
    *(_QWORD *)(v7 + 56) = v28;
    sub_23C3F6FD8();
    sub_23C3F3610(0, &qword_256B86978);
    v29 = (void *)sub_23C3F6FB4();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_activateConstraints_, v29);

    return objc_msgSend(v2, sel_didMoveToParentViewController_, v1);
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_23C3F25EC()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  v1 = v0;
  v2 = sub_23C3F6678();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_23C3F6F3C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD928]), sel_initWithSearchResultsController_, *(_QWORD *)&v0[qword_256B867A8]);
  v5 = objc_msgSend(v4, sel_searchBar);
  objc_msgSend(v5, sel_setAutocorrectionType_, 1);

  v6 = objc_msgSend(v4, sel_searchBar);
  objc_msgSend(v6, sel_setDelegate_, v1);

  v7 = objc_msgSend(v4, sel_searchBar);
  objc_msgSend(v7, sel_setDirectionalLayoutMargins_, 0.0, 20.0, 0.0, 20.0);

  v8 = objc_msgSend(v4, sel_searchBar);
  sub_23C3F6F30();
  type metadata accessor for LocalizationBundle();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  sub_23C3F6F60();
  v11 = (void *)sub_23C3F6F48();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setPlaceholder_, v11);

  objc_msgSend(v4, sel_setDelegate_, v1);
  objc_msgSend(v4, sel_setShowsSearchResultsController_, 1);
  v12 = objc_msgSend(v4, sel_searchBar);
  objc_msgSend(v12, sel_setDelegate_, v1);

  v13 = objc_msgSend(v4, sel_searchBar);
  v14 = objc_msgSend(v13, sel_searchTextField);

  objc_msgSend(v14, sel_setDelegate_, v1);
  v15 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v15, sel_setSearchController_, v4);

  v16 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v16, sel_setPreferredSearchBarPlacement_, 2);

}

void sub_23C3F2938(void *a1)
{
  id v1;

  v1 = a1;
  SearchViewController.viewDidLoad()();

}

Swift::Void __swiftcall SearchViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  sub_23C3F2C74(a1, (SEL *)&selRef_viewDidAppear_);
}

void sub_23C3F297C(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  SearchViewController.viewDidAppear(_:)(a3);

}

Swift::Void __swiftcall SearchViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_viewWillDisappear_, a1);
  v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_viewControllers);
    sub_23C3F3610(0, &qword_256B867C8);
    v6 = sub_23C3F6FC0();

    LOBYTE(v5) = sub_23C3F2AA0((uint64_t)v1, v6);
    v7 = swift_bridgeObjectRelease();
    if ((v5 & 1) == 0)
      (*(void (**)(uint64_t))&v1[qword_256B867B0])(v7);

  }
}

uint64_t sub_23C3F2AA0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_23C3F7188())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x24261D8C4](0, a2);
LABEL_5:
      v6 = v5;
      sub_23C3F3610(0, &qword_256B867C8);
      v7 = sub_23C3F7098();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_23C3F7098();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x24261D8C4](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_23C3F7098();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23C3F2C24(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  SearchViewController.viewWillDisappear(_:)(a3);

}

Swift::Void __swiftcall SearchViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  sub_23C3F2C74(a1, (SEL *)&selRef_viewDidDisappear_);
}

uint64_t sub_23C3F2C74(char a1, SEL *a2)
{
  void *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.receiver = v2;
  v10.super_class = ObjectType;
  objc_msgSendSuper2(&v10, *a2, a1 & 1);
  swift_storeEnumTagMultiPayload();
  sub_23C3F6E64();
  return sub_23C39A33C((uint64_t)v8);
}

void sub_23C3F2D3C(void *a1, uint64_t a2, Swift::Bool a3)
{
  id v4;

  v4 = a1;
  SearchViewController.viewDidDisappear(_:)(a3);

}

Swift::Void __swiftcall SearchViewController.willPresentSearchController(_:)(UISearchController a1)
{
  sub_23C3F3270(1);
}

void sub_23C3F2D94(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_23C3F3270(1);

}

Swift::Void __swiftcall SearchViewController.willDismissSearchController(_:)(UISearchController a1)
{
  sub_23C3F3270(0);
}

void sub_23C3F2DFC(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_23C3F3270(0);

}

Swift::Void __swiftcall SearchViewController.searchBar(_:textDidChange:)(UISearchBar _, Swift::String textDidChange)
{
  sub_23C3F32FC(textDidChange._countAndFlagsBits, (uint64_t)textDidChange._object);
}

uint64_t sub_23C3F2E58(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v5 = sub_23C3F6F54();
  v7 = v6;
  v8 = a3;
  v9 = a1;
  sub_23C3F32FC(v5, v7);

  return swift_bridgeObjectRelease();
}

void sub_23C3F2EBC(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  _s13FitnessSearch0B14ViewControllerC28searchBarCancelButtonClickedyySo08UISearchF0CF_0();

}

void sub_23C3F2F0C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  _s13FitnessSearch0B14ViewControllerC09searchBarB13ButtonClickedyySo08UISearchF0CF_0();

}

uint64_t sub_23C3F2F5C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  LOBYTE(a1) = _s13FitnessSearch0B14ViewControllerC20textFieldShouldClearySbSo06UITextF0CF_0();

  return a1 & 1;
}

id SearchViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_23C3F6F48();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void SearchViewController.init(nibName:bundle:)()
{
  sub_23C3F354C();
}

void sub_23C3F3038(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_23C3F354C();
}

id SearchViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23C3F30BC(uint64_t a1)
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23C3F3128(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23C3F3138()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23C3F315C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23C3F3180()
{
  uint64_t v0;

  sub_23C3F2004(*(_QWORD *)(v0 + 48));
}

uint64_t sub_23C3F3190()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23C3F31B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256B867C0;
  if (!qword_256B867C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B867B8);
    result = MEMORY[0x24261DE88](MEMORY[0x24BEE12E8], v1);
    atomic_store(result, (unint64_t *)&qword_256B867C0);
  }
  return result;
}

void _s13FitnessSearch0B14ViewControllerC5coderACyxq_GSgSo7NSCoderC_tcfc_0()
{
  char *v0;

  *(_QWORD *)&v0[qword_256B86798] = MEMORY[0x24BEE4AF8];

  sub_23C3F717C();
  __break(1u);
}

uint64_t sub_23C3F3270(char a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v6;

  v2 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v4 = a1;
  swift_storeEnumTagMultiPayload();
  sub_23C3F6E64();
  return sub_23C39A33C((uint64_t)v4);
}

uint64_t sub_23C3F32FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v4 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = a1;
  v6[1] = a2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_23C3F6E64();
  return sub_23C39A33C((uint64_t)v6);
}

uint64_t _s13FitnessSearch0B14ViewControllerC28searchBarCancelButtonClickedyySo08UISearchF0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  v0 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_23C3F6E64();
  return sub_23C39A33C((uint64_t)v2);
}

uint64_t _s13FitnessSearch0B14ViewControllerC09searchBarB13ButtonClickedyySo08UISearchF0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _QWORD v5[2];

  v0 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_23C3F6E4C();
  swift_release();
  v3 = v5[1];
  *(_QWORD *)v2 = v5[0];
  *((_QWORD *)v2 + 1) = v3;
  v2[16] = 3;
  swift_storeEnumTagMultiPayload();
  sub_23C3F6E64();
  return sub_23C39A33C((uint64_t)v2);
}

uint64_t _s13FitnessSearch0B14ViewControllerC20textFieldShouldClearySbSo06UITextF0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v4;

  v0 = type metadata accessor for SearchAction();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_23C3F6E64();
  sub_23C39A33C((uint64_t)v2);
  return 1;
}

void sub_23C3F354C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23C3F3578()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for SearchViewController()
{
  JUMPOUT(0x24261DDF8);
}

uint64_t method lookup function for SearchViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchViewController.__allocating_init(store:searchLandingView:searchResultsView:onContentScrollViewDidChange:onPop:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_23C3F3610(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t destroy for SearchSuggestionView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SearchSuggestionView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SearchSuggestionView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[10];
  a1[9] = a2[9];
  a1[10] = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SearchSuggestionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchSuggestionView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchSuggestionView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSuggestionView()
{
  return &type metadata for SearchSuggestionView;
}

uint64_t sub_23C3F3934()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23C3F3944(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t result;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD v64[3];
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v81 = a2;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86A88);
  v4 = MEMORY[0x24BDAC7A8](v68);
  v67 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v66 = (char *)v64 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86A90);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v80 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v87 = (char *)v64 - v10;
  v91 = sub_23C3F6588();
  v11 = *(_QWORD *)(v91 - 8);
  v12 = MEMORY[0x24BDAC7A8](v91);
  v69 = (char *)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v75 = (char *)v64 - v14;
  v15 = sub_23C3F65A0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v86 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v64 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86A48);
  MEMORY[0x24BDAC7A8](v21);
  v90 = (uint64_t)v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85280);
  v85 = *(_QWORD *)(v83 - 8);
  v23 = MEMORY[0x24BDAC7A8](v83);
  v79 = (uint64_t)v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v65 = (char *)v64 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v74 = (uint64_t)v64 - v27;
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v64[2] = v2;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86A98);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = a1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    v77 = *(_QWORD *)(v30 + 72);
    v78 = v29;
    v84 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v64[1] = a1;
    swift_bridgeObjectRetain();
    v32 = MEMORY[0x24BEE4AF8];
    v82 = v11;
    v72 = v16;
    v73 = v15;
    v71 = v20;
    while (1)
    {
      v89 = v32;
      v34 = v84;
      v84(v20, v81, v15);
      v88 = v31;
      sub_23C3F66CC();
      v34(v86, v20, v15);
      sub_23C39650C(&qword_256B86AA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
      v35 = (uint64_t)v87;
      v36 = v82;
      sub_23C3F6594();
      v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
      if (v37(v35, 1, v91) == 1)
        goto LABEL_8;
      v76 = v28;
      v38 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v39 = v75;
      v40 = v91;
      v38(v75, v87, v91);
      v84(v86, v20, v15);
      v41 = v80;
      sub_23C3F6594();
      if (v37((uint64_t)v41, 1, v40) == 1)
        break;
      v43 = v69;
      v38(v69, v80, v91);
      sub_23C39650C(&qword_256B86AA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC4F0], MEMORY[0x24BDCC500]);
      result = sub_23C3F6F18();
      if ((result & 1) == 0)
      {
        __break(1u);
        return result;
      }
      v45 = v39;
      v46 = v91;
      v47 = v68;
      v48 = v66;
      v49 = &v66[*(int *)(v68 + 48)];
      v38(v66, v45, v91);
      v70 = v49;
      v38(v49, v43, v46);
      v50 = v67;
      v51 = &v67[*(int *)(v47 + 48)];
      v52 = v82;
      v53 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
      v53(v67, v48, v46);
      v53(v51, v49, v46);
      v54 = (uint64_t)v65;
      v38(v65, v50, v46);
      v55 = *(void (**)(char *, uint64_t))(v52 + 8);
      v55(v51, v46);
      v56 = &v50[*(int *)(v47 + 48)];
      v38(v50, v48, v46);
      v38(v56, v70, v46);
      v38((char *)(v54 + *(int *)(v83 + 36)), v56, v46);
      v55(v50, v46);
      sub_23C3F4B08(v54, v90);
      v42 = 0;
      v16 = v72;
      v15 = v73;
      v20 = v71;
      v28 = v76;
LABEL_11:
      v57 = v85;
      v58 = v90;
      v59 = v83;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v90, v42, 1, v83);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
      v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v58, 1, v59);
      v32 = v89;
      if (v60 == 1)
      {
        sub_23C39AA6C(v90, &qword_256B86A48);
        v33 = v88;
      }
      else
      {
        v61 = v74;
        sub_23C3F4B08(v90, v74);
        sub_23C3F4B08(v61, v79);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v32 = sub_23C3B4678(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
        v33 = v88;
        v63 = *(_QWORD *)(v32 + 16);
        v62 = *(_QWORD *)(v32 + 24);
        if (v63 >= v62 >> 1)
          v32 = sub_23C3B4678(v62 > 1, v63 + 1, 1, v32);
        *(_QWORD *)(v32 + 16) = v63 + 1;
        sub_23C3F4B08(v79, v32+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(_QWORD *)(v85 + 72) * v63);
      }
      v31 = v33 + v77;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        return v32;
      }
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v91);
    v35 = (uint64_t)v80;
    v16 = v72;
    v15 = v73;
    v20 = v71;
    v28 = v76;
LABEL_8:
    sub_23C39AA6C(v35, &qword_256B86A90);
    v42 = 1;
    goto LABEL_11;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23C3F4020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86A70);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23C3F65E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v6, qword_256B96FE8);
  __swift_project_value_buffer(v4, (uint64_t)qword_256B96FE8);
  sub_23C3F65DC();
  v10[0] = swift_getKeyPath();
  swift_getKeyPath();
  sub_23C3F4B6C();
  sub_23C3F65C4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v10[1] = sub_23C3F6CA8();
  sub_23C3F65D0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_23C3F417C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86A80);
  return sub_23C3F6F24() & 1;
}

uint64_t sub_23C3F41D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v36)(char *, _QWORD, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  void (*v65)(_QWORD *, _QWORD);
  _QWORD v66[6];

  v55 = a2;
  v62 = sub_23C3F6570();
  v3 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v61 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85280);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86A48);
  MEMORY[0x24BDAC7A8](v8);
  v63 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86A50);
  v56 = *(_QWORD *)(v53 - 8);
  v10 = MEMORY[0x24BDAC7A8](v53);
  v51 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v52 = (char *)&v44 - v12;
  v60 = sub_23C3F65E8();
  MEMORY[0x24BDAC7A8](v60);
  v54 = sub_23C3F65A0();
  v13 = *(_QWORD *)(v54 - 8);
  v14 = MEMORY[0x24BDAC7A8](v54);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v44 - v17;
  v19 = a1[3];
  v65 = (void (*)(_QWORD *, _QWORD))a1[2];
  v20 = a1[8];
  v57 = a1[7];
  sub_23C3F499C((uint64_t)a1);
  swift_bridgeObjectRetain();
  sub_23C3F65DC();
  v64 = v16;
  v21 = v57;
  v50 = v19;
  v22 = v55;
  sub_23C3F65AC();
  v23 = sub_23C3F6F78();
  v24 = v54;
  if (v23 >= 2)
  {
    v46 = v18;
    v47 = v13;
    v48 = a1;
    swift_bridgeObjectRetain();
    v25 = v51;
    MEMORY[0x24261CEB0](v21, v20, MEMORY[0x24BEE1E08]);
    v26 = v53;
    sub_23C3F66C0();
    v27 = *(void (**)(char *, uint64_t))(v56 + 8);
    v27(v25, v26);
    v66[0] = v65;
    v66[1] = v50;
    sub_23C3F4A7C();
    sub_23C3935DC(&qword_256B86A60, &qword_256B86A50, MEMORY[0x24BEE7460]);
    v28 = sub_23C3F6F00();
    v29 = sub_23C3F3944(v28, v64);
    swift_bridgeObjectRelease();
    v30 = *(_QWORD *)(v29 + 16);
    v45 = v27;
    v51 = (char *)v29;
    if (v30)
    {
      v31 = v29 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v57 = *(_QWORD *)(v6 + 72);
      LODWORD(v56) = *MEMORY[0x24BDCC388];
      swift_bridgeObjectRetain();
      v32 = (uint64_t)v49;
      v58 = v5;
      v59 = v6;
      v33 = v61;
      while (1)
      {
        v34 = v63;
        sub_23C3F4AC0(v31, v63);
        v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
        v35(v34, 0, 1, v5);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v34, 1, v5) == 1)
          break;
        sub_23C3F4B08(v34, v32);
        sub_23C3935DC(&qword_256B86A68, &qword_256B85280, MEMORY[0x24BEE1BC0]);
        v65 = (void (*)(_QWORD *, _QWORD))sub_23C3F65B8();
        if (qword_256B84308 != -1)
          swift_once();
        __swift_project_value_buffer(v60, (uint64_t)qword_256B96FE8);
        v36 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
        v37 = v3;
        v38 = v62;
        v36(v33, v56, v62);
        sub_23C3F65F4();
        v39 = v38;
        v3 = v37;
        (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v39);
        v65(v66, 0);
        sub_23C39AA6C(v32, &qword_256B85280);
        v5 = v58;
        v31 += v57;
        --v30;
        v6 = v59;
        if (!v30)
          goto LABEL_10;
      }
    }
    else
    {
      v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      swift_bridgeObjectRetain();
LABEL_10:
      v35(v63, 1, 1, v5);
    }
    swift_bridgeObjectRelease_n();
    v45(v52, v53);
    v24 = v54;
    v22 = v55;
    a1 = v48;
    v13 = v47;
    v18 = v46;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v64, v24);
  sub_23C3F4A14((uint64_t)a1);
  result = sub_23C3F6B64();
  *(_QWORD *)v22 = result;
  *(_QWORD *)(v22 + 8) = v41;
  *(_BYTE *)(v22 + 16) = v42 & 1;
  *(_QWORD *)(v22 + 24) = v43;
  return result;
}

uint64_t sub_23C3F4730@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23C3F6CD8();
  *a1 = result;
  return result;
}

uint64_t sub_23C3F4774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t *v14;
  _BYTE v16[16];
  _OWORD *v17;
  _OWORD v18[5];
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B865B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(_OWORD *)(v1 + 48);
  v18[2] = *(_OWORD *)(v1 + 32);
  v18[3] = v7;
  v18[4] = *(_OWORD *)(v1 + 64);
  v19 = *(_QWORD *)(v1 + 80);
  v8 = *(_OWORD *)(v1 + 16);
  v18[0] = *(_OWORD *)v1;
  v18[1] = v8;
  v9 = swift_allocObject();
  v10 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v9 + 64) = v10;
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v1 + 64);
  *(_QWORD *)(v9 + 96) = *(_QWORD *)(v1 + 80);
  v11 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v9 + 32) = v11;
  v17 = v18;
  sub_23C3F499C((uint64_t)v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86658);
  sub_23C3935DC(&qword_256B86660, &qword_256B86658, MEMORY[0x24BDF41A8]);
  sub_23C3F6D08();
  v12 = sub_23C3F6CB4();
  KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 16))(a1, v6, v3);
  v14 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256B86A40) + 36));
  *v14 = KeyPath;
  v14[1] = v12;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_23C3F48FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23C3F4940()
{
  return sub_23C3F6CF0();
}

uint64_t sub_23C3F499C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_23C3F4A0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23C3F41D4(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_23C3F4A14(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23C3F4A7C()
{
  unint64_t result;

  result = qword_256B86A58;
  if (!qword_256B86A58)
  {
    result = MEMORY[0x24261DE88](MEMORY[0x24BEE0D18], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256B86A58);
  }
  return result;
}

uint64_t sub_23C3F4AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23C3F4B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B85280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23C3F4B50()
{
  sub_23C3F6564();
  __break(1u);
}

unint64_t sub_23C3F4B6C()
{
  unint64_t result;

  result = qword_256B86A78;
  if (!qword_256B86A78)
  {
    result = MEMORY[0x24261DE88](MEMORY[0x24BDEACB8], MEMORY[0x24BDEACC8]);
    atomic_store(result, (unint64_t *)&qword_256B86A78);
  }
  return result;
}

void sub_23C3F4BB0()
{
  sub_23C3F4B6C();
  sub_23C3F6600();
  __break(1u);
}

uint64_t sub_23C3F4BD4()
{
  return 8;
}

uint64_t sub_23C3F4BE0()
{
  return swift_release();
}

uint64_t sub_23C3F4BE8(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_23C3F4BF8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256B86A80);
  return sub_23C3F6EF4();
}

_QWORD *sub_23C3F4C3C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_23C3F4C4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256B86AB0;
  if (!qword_256B86AB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256B86A40);
    v2[0] = sub_23C3935DC(&qword_256B865B8, &qword_256B865B0, MEMORY[0x24BDF43B0]);
    v2[1] = sub_23C3935DC(&qword_256B86308, &qword_256B86310, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24261DE88](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256B86AB0);
  }
  return result;
}

unint64_t sub_23C3F4CEC()
{
  unint64_t result;

  result = qword_256B86AB8;
  if (!qword_256B86AB8)
  {
    result = MEMORY[0x24261DE88](&unk_23C4003AC, &type metadata for SearchSuggestionError);
    atomic_store(result, (unint64_t *)&qword_256B86AB8);
  }
  return result;
}

uint64_t sub_23C3F4D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3F4F5C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23C3F4D5C()
{
  sub_23C3F5278();
  return sub_23C3F7344();
}

uint64_t sub_23C3F4D84()
{
  sub_23C3F5278();
  return sub_23C3F7350();
}

uint64_t sub_23C3F4DAC()
{
  sub_23C3F52BC();
  return sub_23C3F7344();
}

uint64_t sub_23C3F4DD4()
{
  sub_23C3F52BC();
  return sub_23C3F7350();
}

uint64_t sub_23C3F4E0C(_QWORD *a1)
{
  return sub_23C3F501C(a1);
}

uint64_t sub_23C3F4E20(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86AE0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86AE8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3F5278();
  sub_23C3F7338();
  sub_23C3F52BC();
  sub_23C3F7230();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23C3F4F5C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7365676775536F6ELL && a2 == 0xED0000736E6F6974)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23C3F4FF8()
{
  return 0x7365676775536F6ELL;
}

uint64_t sub_23C3F501C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86AC0);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86AC8);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3F5278();
  v8 = v23;
  sub_23C3F732C();
  if (v8)
    goto LABEL_7;
  v20 = a1;
  v23 = v5;
  v10 = v21;
  v9 = v22;
  if (*(_QWORD *)(sub_23C3F7224() + 16) != 1)
  {
    v14 = sub_23C3F7104();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256B84A80);
    *v16 = &type metadata for SearchSuggestionError;
    sub_23C3F71C4();
    sub_23C3F70F8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    v17 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v9);
    a1 = v20;
LABEL_7:
    v13 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v13);
  }
  sub_23C3F52BC();
  v11 = v4;
  sub_23C3F71B8();
  v12 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
  v13 = (uint64_t)v20;
  return __swift_destroy_boxed_opaque_existential_1(v13);
}

unint64_t sub_23C3F5278()
{
  unint64_t result;

  result = qword_256B86AD0;
  if (!qword_256B86AD0)
  {
    result = MEMORY[0x24261DE88](&unk_23C400600, &type metadata for SearchSuggestionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86AD0);
  }
  return result;
}

unint64_t sub_23C3F52BC()
{
  unint64_t result;

  result = qword_256B86AD8;
  if (!qword_256B86AD8)
  {
    result = MEMORY[0x24261DE88](&unk_23C4005B0, &type metadata for SearchSuggestionError.NoSuggestionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86AD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSuggestionError.CodingKeys()
{
  return &type metadata for SearchSuggestionError.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchSuggestionError.NoSuggestionsCodingKeys()
{
  return &type metadata for SearchSuggestionError.NoSuggestionsCodingKeys;
}

uint64_t _s13FitnessSearch21SearchSuggestionErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C3F5364 + 4 * byte_23C400360[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3F5384 + 4 * byte_23C400365[v4]))();
}

_BYTE *sub_23C3F5364(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3F5384(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3F538C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3F5394(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3F539C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3F53A4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchSuggestionError()
{
  return &type metadata for SearchSuggestionError;
}

unint64_t sub_23C3F53C4()
{
  unint64_t result;

  result = qword_256B86AF0;
  if (!qword_256B86AF0)
  {
    result = MEMORY[0x24261DE88](&unk_23C400548, &type metadata for SearchSuggestionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86AF0);
  }
  return result;
}

unint64_t sub_23C3F540C()
{
  unint64_t result;

  result = qword_256B86AF8;
  if (!qword_256B86AF8)
  {
    result = MEMORY[0x24261DE88](&unk_23C400468, &type metadata for SearchSuggestionError.NoSuggestionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86AF8);
  }
  return result;
}

unint64_t sub_23C3F5454()
{
  unint64_t result;

  result = qword_256B86B00;
  if (!qword_256B86B00)
  {
    result = MEMORY[0x24261DE88](&unk_23C400490, &type metadata for SearchSuggestionError.NoSuggestionsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86B00);
  }
  return result;
}

unint64_t sub_23C3F549C()
{
  unint64_t result;

  result = qword_256B86B08;
  if (!qword_256B86B08)
  {
    result = MEMORY[0x24261DE88](&unk_23C4004B8, &type metadata for SearchSuggestionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86B08);
  }
  return result;
}

unint64_t sub_23C3F54E4()
{
  unint64_t result;

  result = qword_256B86B10;
  if (!qword_256B86B10)
  {
    result = MEMORY[0x24261DE88](&unk_23C4004E0, &type metadata for SearchSuggestionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86B10);
  }
  return result;
}

uint64_t static SearchTaskIdentifier.== infix(_:_:)()
{
  return 1;
}

uint64_t SearchTaskIdentifier.hash(into:)()
{
  return sub_23C3F72FC();
}

uint64_t SearchTaskIdentifier.hashValue.getter()
{
  sub_23C3F72F0();
  sub_23C3F72FC();
  return sub_23C3F7320();
}

unint64_t sub_23C3F5598()
{
  unint64_t result;

  result = qword_256B86B18;
  if (!qword_256B86B18)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchTaskIdentifier, &type metadata for SearchTaskIdentifier);
    atomic_store(result, (unint64_t *)&qword_256B86B18);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SearchTaskIdentifier(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23C3F561C + 4 * byte_23C400650[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23C3F563C + 4 * byte_23C400655[v4]))();
}

_BYTE *sub_23C3F561C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23C3F563C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3F5644(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3F564C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23C3F5654(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23C3F565C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SearchTaskIdentifier()
{
  return &type metadata for SearchTaskIdentifier;
}

uint64_t SearchContentType.category.getter()
{
  uint64_t v0;
  uint64_t result;

  if (!*(_QWORD *)(v0 + 8))
    return 3;
  swift_bridgeObjectRetain();
  result = _s13FitnessSearch0B13ScopeCategoryO8rawValueACSgSS_tcfC_0();
  if (result == 9)
    return 3;
  return result;
}

void __swiftcall SearchSession.init(method:query:term:datasetIdentifier:)(FitnessSearch::SearchSession *__return_ptr retstr, FitnessSearch::SearchQueryMethod method, Swift::String query, Swift::String term, Swift::String_optional datasetIdentifier)
{
  retstr->method = method;
  retstr->query = query;
  retstr->term = term;
  retstr->datasetIdentifier = datasetIdentifier;
}

void __swiftcall SearchSession.withDatasetIdentifier(_:)(FitnessSearch::SearchSession *__return_ptr retstr, Swift::String_optional a2)
{
  uint64_t v2;
  FitnessSearch::SearchQueryMethod v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v3 = *(_BYTE *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(void **)(v2 + 32);
  retstr->method = v3;
  retstr->query._countAndFlagsBits = v4;
  retstr->query._object = v5;
  retstr->term._countAndFlagsBits = v6;
  retstr->term._object = v7;
  retstr->datasetIdentifier = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t SearchSession.method.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SearchSession.query.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchSession.term.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchSession.datasetIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23C3F57AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23C3F57E4 + 4 * byte_23C4006F0[a1]))(0xD000000000000011, 0x800000023C400B00);
}

uint64_t sub_23C3F57E4()
{
  return 0x646F6874656DLL;
}

uint64_t sub_23C3F57F8()
{
  return 1836213620;
}

uint64_t sub_23C3F5808()
{
  return 0x7972657571;
}

uint64_t sub_23C3F581C()
{
  unsigned __int8 *v0;

  return sub_23C3F57AC(*v0);
}

uint64_t sub_23C3F5824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23C3F63DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23C3F5848()
{
  sub_23C3F6020();
  return sub_23C3F7344();
}

uint64_t sub_23C3F5870()
{
  sub_23C3F6020();
  return sub_23C3F7350();
}

uint64_t SearchSession.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86B20);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v13[4] = *((_QWORD *)v1 + 2);
  v13[5] = v9;
  v10 = *((_QWORD *)v1 + 3);
  v13[2] = *((_QWORD *)v1 + 4);
  v13[3] = v10;
  v11 = *((_QWORD *)v1 + 5);
  v13[0] = *((_QWORD *)v1 + 6);
  v13[1] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3F6020();
  sub_23C3F7338();
  v18 = v8;
  v17 = 0;
  sub_23C39FE40();
  sub_23C3F7284();
  if (!v2)
  {
    v16 = 1;
    sub_23C3F7260();
    v15 = 2;
    sub_23C3F7260();
    v14 = 3;
    sub_23C3F723C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SearchSession.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  char v27;
  char v28;
  char v29;
  unsigned __int8 v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256B86B30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23C3F6020();
  sub_23C3F732C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = 0;
  sub_23C3A00B8();
  sub_23C3F7218();
  v9 = v30;
  v28 = 1;
  v10 = sub_23C3F71F4();
  v12 = v11;
  v24 = v10;
  v25 = v9;
  v27 = 2;
  swift_bridgeObjectRetain();
  v13 = sub_23C3F71F4();
  v26 = 3;
  v23 = v14;
  swift_bridgeObjectRetain();
  v15 = sub_23C3F71D0();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  *(_BYTE *)a2 = v25;
  v20 = v23;
  *(_QWORD *)(a2 + 8) = v24;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23C3F5CB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchSession.init(from:)(a1, a2);
}

uint64_t sub_23C3F5CC8(_QWORD *a1)
{
  return SearchSession.encode(to:)(a1);
}

uint64_t SearchSession.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  swift_bridgeObjectRelease();
  if (!v1)
    return sub_23C3F7308();
  sub_23C3F7308();
  swift_bridgeObjectRetain();
  sub_23C3F6F6C();
  return swift_bridgeObjectRelease();
}

uint64_t SearchSession.hashValue.getter()
{
  sub_23C3F72F0();
  SearchSession.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3F5E40()
{
  sub_23C3F72F0();
  SearchSession.hash(into:)();
  return sub_23C3F7320();
}

uint64_t sub_23C3F5EA4()
{
  sub_23C3F72F0();
  SearchSession.hash(into:)();
  return sub_23C3F7320();
}

uint64_t _s13FitnessSearch0B7SessionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  if ((sub_23C3E8FA4(*(_BYTE *)a1, *(_BYTE *)a2) & 1) == 0)
    return 0;
  if (v2 == v7 && v16 == v6 || (v12 = sub_23C3F72A8(), result = 0, (v12 & 1) != 0))
  {
    if (v15 == v9 && v3 == v8 || (v14 = sub_23C3F72A8(), result = 0, (v14 & 1) != 0))
    {
      if (v5)
      {
        if (v10 && (v4 == v11 && v5 == v10 || (sub_23C3F72A8() & 1) != 0))
          return 1;
      }
      else if (!v10)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_23C3F6020()
{
  unint64_t result;

  result = qword_256B86B28;
  if (!qword_256B86B28)
  {
    result = MEMORY[0x24261DE88](&unk_23C4008A4, &type metadata for SearchSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86B28);
  }
  return result;
}

unint64_t sub_23C3F6068()
{
  unint64_t result;

  result = qword_256B86B38;
  if (!qword_256B86B38)
  {
    result = MEMORY[0x24261DE88](&protocol conformance descriptor for SearchSession, &type metadata for SearchSession);
    atomic_store(result, (unint64_t *)&qword_256B86B38);
  }
  return result;
}

uint64_t destroy for SearchSession()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchSession(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchSession(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SearchSession()
{
  return &type metadata for SearchSession;
}

uint64_t storeEnumTagSinglePayload for SearchSession.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23C3F6284 + 4 * byte_23C4006F9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23C3F62B8 + 4 * byte_23C4006F4[v4]))();
}

uint64_t sub_23C3F62B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3F62C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23C3F62C8);
  return result;
}

uint64_t sub_23C3F62D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23C3F62DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23C3F62E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23C3F62E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchSession.CodingKeys()
{
  return &type metadata for SearchSession.CodingKeys;
}

unint64_t sub_23C3F6308()
{
  unint64_t result;

  result = qword_256B86B40;
  if (!qword_256B86B40)
  {
    result = MEMORY[0x24261DE88](&unk_23C40087C, &type metadata for SearchSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86B40);
  }
  return result;
}

unint64_t sub_23C3F6350()
{
  unint64_t result;

  result = qword_256B86B48;
  if (!qword_256B86B48)
  {
    result = MEMORY[0x24261DE88](&unk_23C4007EC, &type metadata for SearchSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86B48);
  }
  return result;
}

unint64_t sub_23C3F6398()
{
  unint64_t result;

  result = qword_256B86B50;
  if (!qword_256B86B50)
  {
    result = MEMORY[0x24261DE88](&unk_23C400814, &type metadata for SearchSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256B86B50);
  }
  return result;
}

uint64_t sub_23C3F63DC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x646F6874656DLL && a2 == 0xE600000000000000;
  if (v3 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1836213620 && a2 == 0xE400000000000000 || (sub_23C3F72A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023C400B00)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23C3F72A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23C3F6558()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_23C3F6564()
{
  return MEMORY[0x24BDEAD50]();
}

uint64_t sub_23C3F6570()
{
  return MEMORY[0x24BDCC390]();
}

uint64_t sub_23C3F657C()
{
  return MEMORY[0x24BDCC3F8]();
}

uint64_t sub_23C3F6588()
{
  return MEMORY[0x24BDCC4F0]();
}

uint64_t sub_23C3F6594()
{
  return MEMORY[0x24BDCC510]();
}

uint64_t sub_23C3F65A0()
{
  return MEMORY[0x24BDCC5A8]();
}

uint64_t sub_23C3F65AC()
{
  return MEMORY[0x24BDCC5D8]();
}

uint64_t sub_23C3F65B8()
{
  return MEMORY[0x24BDCC608]();
}

uint64_t sub_23C3F65C4()
{
  return MEMORY[0x24BDCC860]();
}

uint64_t sub_23C3F65D0()
{
  return MEMORY[0x24BDCC878]();
}

uint64_t sub_23C3F65DC()
{
  return MEMORY[0x24BDCC890]();
}

uint64_t sub_23C3F65E8()
{
  return MEMORY[0x24BDCC898]();
}

uint64_t sub_23C3F65F4()
{
  return MEMORY[0x24BDCC990]();
}

uint64_t sub_23C3F6600()
{
  return MEMORY[0x24BDEAD90]();
}

uint64_t sub_23C3F660C()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23C3F6618()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t sub_23C3F6624()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_23C3F6630()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23C3F663C()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23C3F6648()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23C3F6654()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23C3F6660()
{
  return MEMORY[0x24BDCECD8]();
}

uint64_t sub_23C3F666C()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_23C3F6678()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23C3F6684()
{
  return MEMORY[0x24BE34FA0]();
}

uint64_t sub_23C3F6690()
{
  return MEMORY[0x24BE35038]();
}

uint64_t sub_23C3F669C()
{
  return MEMORY[0x24BE35040]();
}

uint64_t sub_23C3F66A8()
{
  return MEMORY[0x24BE35048]();
}

uint64_t sub_23C3F66B4()
{
  return MEMORY[0x24BE37990]();
}

uint64_t sub_23C3F66C0()
{
  return MEMORY[0x24BEE73E0]();
}

uint64_t sub_23C3F66CC()
{
  return MEMORY[0x24BEE7418]();
}

uint64_t sub_23C3F66D8()
{
  return MEMORY[0x24BEE7440]();
}

uint64_t sub_23C3F66E4()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_23C3F66F0()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23C3F66FC()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_23C3F6708()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23C3F6714()
{
  return MEMORY[0x24BDB9B48]();
}

uint64_t sub_23C3F6720()
{
  return MEMORY[0x24BDB9D80]();
}

uint64_t sub_23C3F672C()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_23C3F6738()
{
  return MEMORY[0x24BDEAF80]();
}

uint64_t sub_23C3F6744()
{
  return MEMORY[0x24BDEAFA8]();
}

uint64_t sub_23C3F6750()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t sub_23C3F675C()
{
  return MEMORY[0x24BDEB210]();
}

uint64_t sub_23C3F6768()
{
  return MEMORY[0x24BDEB230]();
}

uint64_t sub_23C3F6774()
{
  return MEMORY[0x24BDEB560]();
}

uint64_t sub_23C3F6780()
{
  return MEMORY[0x24BDEB790]();
}

uint64_t sub_23C3F678C()
{
  return MEMORY[0x24BDEBBC8]();
}

uint64_t sub_23C3F6798()
{
  return MEMORY[0x24BDEBDE0]();
}

uint64_t sub_23C3F67A4()
{
  return MEMORY[0x24BDEBDF0]();
}

uint64_t sub_23C3F67B0()
{
  return MEMORY[0x24BDEBE00]();
}

uint64_t sub_23C3F67BC()
{
  return MEMORY[0x24BDEC5A0]();
}

uint64_t sub_23C3F67C8()
{
  return MEMORY[0x24BDEC728]();
}

uint64_t sub_23C3F67D4()
{
  return MEMORY[0x24BDEC730]();
}

uint64_t sub_23C3F67E0()
{
  return MEMORY[0x24BDEC998]();
}

uint64_t sub_23C3F67EC()
{
  return MEMORY[0x24BDECEE8]();
}

uint64_t sub_23C3F67F8()
{
  return MEMORY[0x24BDECF50]();
}

uint64_t sub_23C3F6804()
{
  return MEMORY[0x24BDED2D0]();
}

uint64_t sub_23C3F6810()
{
  return MEMORY[0x24BDED408]();
}

uint64_t sub_23C3F681C()
{
  return MEMORY[0x24BDED420]();
}

uint64_t sub_23C3F6828()
{
  return MEMORY[0x24BDED998]();
}

uint64_t sub_23C3F6834()
{
  return MEMORY[0x24BDED9E8]();
}

uint64_t sub_23C3F6840()
{
  return MEMORY[0x24BDED9F0]();
}

uint64_t sub_23C3F684C()
{
  return MEMORY[0x24BDEDBA8]();
}

uint64_t sub_23C3F6858()
{
  return MEMORY[0x24BDEDE90]();
}

uint64_t sub_23C3F6864()
{
  return MEMORY[0x24BDEDE98]();
}

uint64_t sub_23C3F6870()
{
  return MEMORY[0x24BDEDF20]();
}

uint64_t sub_23C3F687C()
{
  return MEMORY[0x24BDEE020]();
}

uint64_t sub_23C3F6888()
{
  return MEMORY[0x24BDEE028]();
}

uint64_t sub_23C3F6894()
{
  return MEMORY[0x24BDEE038]();
}

uint64_t sub_23C3F68A0()
{
  return MEMORY[0x24BDEE048]();
}

uint64_t sub_23C3F68AC()
{
  return MEMORY[0x24BDEE288]();
}

uint64_t sub_23C3F68B8()
{
  return MEMORY[0x24BDEE290]();
}

uint64_t sub_23C3F68C4()
{
  return MEMORY[0x24BDEE390]();
}

uint64_t sub_23C3F68D0()
{
  return MEMORY[0x24BDEE3A0]();
}

uint64_t sub_23C3F68DC()
{
  return MEMORY[0x24BDEE490]();
}

uint64_t sub_23C3F68E8()
{
  return MEMORY[0x24BDEE4A0]();
}

uint64_t sub_23C3F68F4()
{
  return MEMORY[0x24BDEE4E0]();
}

uint64_t sub_23C3F6900()
{
  return MEMORY[0x24BDEE4F8]();
}

uint64_t sub_23C3F690C()
{
  return MEMORY[0x24BDEE730]();
}

uint64_t sub_23C3F6918()
{
  return MEMORY[0x24BDEEA50]();
}

uint64_t sub_23C3F6924()
{
  return MEMORY[0x24BDEEB88]();
}

uint64_t sub_23C3F6930()
{
  return MEMORY[0x24BDEED70]();
}

uint64_t sub_23C3F693C()
{
  return MEMORY[0x24BDEED88]();
}

uint64_t sub_23C3F6948()
{
  return MEMORY[0x24BDEEF48]();
}

uint64_t sub_23C3F6954()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t sub_23C3F6960()
{
  return MEMORY[0x24BDEEF78]();
}

uint64_t sub_23C3F696C()
{
  return MEMORY[0x24BDEF110]();
}

uint64_t sub_23C3F6978()
{
  return MEMORY[0x24BDEF120]();
}

uint64_t sub_23C3F6984()
{
  return MEMORY[0x24BDEF1B8]();
}

uint64_t sub_23C3F6990()
{
  return MEMORY[0x24BDEF1D0]();
}

uint64_t sub_23C3F699C()
{
  return MEMORY[0x24BDEF1F8]();
}

uint64_t sub_23C3F69A8()
{
  return MEMORY[0x24BDEF380]();
}

uint64_t sub_23C3F69B4()
{
  return MEMORY[0x24BDEF3A0]();
}

uint64_t sub_23C3F69C0()
{
  return MEMORY[0x24BDEF3B8]();
}

uint64_t sub_23C3F69CC()
{
  return MEMORY[0x24BDEF638]();
}

uint64_t sub_23C3F69D8()
{
  return MEMORY[0x24BDEF648]();
}

uint64_t sub_23C3F69E4()
{
  return MEMORY[0x24BDEF998]();
}

uint64_t sub_23C3F69F0()
{
  return MEMORY[0x24BDEFBF0]();
}

uint64_t sub_23C3F69FC()
{
  return MEMORY[0x24BDEFBF8]();
}

uint64_t sub_23C3F6A08()
{
  return MEMORY[0x24BDEFC00]();
}

uint64_t sub_23C3F6A14()
{
  return MEMORY[0x24BDF0200]();
}

uint64_t sub_23C3F6A20()
{
  return MEMORY[0x24BDF0210]();
}

uint64_t sub_23C3F6A2C()
{
  return MEMORY[0x24BDF0220]();
}

uint64_t sub_23C3F6A38()
{
  return MEMORY[0x24BDF0230]();
}

uint64_t sub_23C3F6A44()
{
  return MEMORY[0x24BDF0850]();
}

uint64_t sub_23C3F6A50()
{
  return MEMORY[0x24BDF0C98]();
}

uint64_t sub_23C3F6A5C()
{
  return MEMORY[0x24BDF0CB0]();
}

uint64_t sub_23C3F6A68()
{
  return MEMORY[0x24BDF1430]();
}

uint64_t sub_23C3F6A74()
{
  return MEMORY[0x24BDF1450]();
}

uint64_t sub_23C3F6A80()
{
  return MEMORY[0x24BDF1468]();
}

uint64_t sub_23C3F6A8C()
{
  return MEMORY[0x24BDF14A0]();
}

uint64_t sub_23C3F6A98()
{
  return MEMORY[0x24BDF14A8]();
}

uint64_t sub_23C3F6AA4()
{
  return MEMORY[0x24BDF14C0]();
}

uint64_t sub_23C3F6AB0()
{
  return MEMORY[0x24BDF14C8]();
}

uint64_t sub_23C3F6ABC()
{
  return MEMORY[0x24BDF14E0]();
}

uint64_t sub_23C3F6AC8()
{
  return MEMORY[0x24BDF14E8]();
}

uint64_t sub_23C3F6AD4()
{
  return MEMORY[0x24BDF14F8]();
}

uint64_t sub_23C3F6AE0()
{
  return MEMORY[0x24BDF1510]();
}

uint64_t sub_23C3F6AEC()
{
  return MEMORY[0x24BDF15F8]();
}

uint64_t sub_23C3F6AF8()
{
  return MEMORY[0x24BDF1600]();
}

uint64_t sub_23C3F6B04()
{
  return MEMORY[0x24BDF17D8]();
}

uint64_t sub_23C3F6B10()
{
  return MEMORY[0x24BDF17E8]();
}

uint64_t sub_23C3F6B1C()
{
  return MEMORY[0x24BDF1818]();
}

uint64_t sub_23C3F6B28()
{
  return MEMORY[0x24BDF1828]();
}

uint64_t sub_23C3F6B34()
{
  return MEMORY[0x24BDF1950]();
}

uint64_t sub_23C3F6B40()
{
  return MEMORY[0x24BDF1A00]();
}

uint64_t sub_23C3F6B4C()
{
  return MEMORY[0x24BDF1DC8]();
}

uint64_t sub_23C3F6B58()
{
  return MEMORY[0x24BDF1FC0]();
}

uint64_t sub_23C3F6B64()
{
  return MEMORY[0x24BDF1FD8]();
}

uint64_t sub_23C3F6B70()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t sub_23C3F6B7C()
{
  return MEMORY[0x24BEC6708]();
}

uint64_t sub_23C3F6B88()
{
  return MEMORY[0x24BE37BF8]();
}

uint64_t sub_23C3F6B94()
{
  return MEMORY[0x24BE37C08]();
}

uint64_t sub_23C3F6BA0()
{
  return MEMORY[0x24BE37C18]();
}

uint64_t sub_23C3F6BAC()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t sub_23C3F6BB8()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t sub_23C3F6BC4()
{
  return MEMORY[0x24BDF2170]();
}

uint64_t sub_23C3F6BD0()
{
  return MEMORY[0x24BDF2200]();
}

uint64_t sub_23C3F6BDC()
{
  return MEMORY[0x24BDF23D8]();
}

uint64_t sub_23C3F6BE8()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t sub_23C3F6BF4()
{
  return MEMORY[0x24BDF27F0]();
}

uint64_t sub_23C3F6C00()
{
  return MEMORY[0x24BDF2AD0]();
}

uint64_t sub_23C3F6C0C()
{
  return MEMORY[0x24BDF2BB8]();
}

uint64_t sub_23C3F6C18()
{
  return MEMORY[0x24BDF2D30]();
}

uint64_t sub_23C3F6C24()
{
  return MEMORY[0x24BDF30D8]();
}

uint64_t sub_23C3F6C30()
{
  return MEMORY[0x24BDF31C8]();
}

uint64_t sub_23C3F6C3C()
{
  return MEMORY[0x24BDF37E0]();
}

uint64_t sub_23C3F6C48()
{
  return MEMORY[0x24BDF38C0]();
}

uint64_t sub_23C3F6C54()
{
  return MEMORY[0x24BDF38C8]();
}

uint64_t sub_23C3F6C60()
{
  return MEMORY[0x24BDF38E0]();
}

uint64_t sub_23C3F6C6C()
{
  return MEMORY[0x24BDF3900]();
}

uint64_t sub_23C3F6C78()
{
  return MEMORY[0x24BDF3A68]();
}

uint64_t sub_23C3F6C84()
{
  return MEMORY[0x24BDF3BE8]();
}

uint64_t sub_23C3F6C90()
{
  return MEMORY[0x24BDF3CF0]();
}

uint64_t sub_23C3F6C9C()
{
  return MEMORY[0x24BDF3D10]();
}

uint64_t sub_23C3F6CA8()
{
  return MEMORY[0x24BDF3D30]();
}

uint64_t sub_23C3F6CB4()
{
  return MEMORY[0x24BDF3E08]();
}

uint64_t sub_23C3F6CC0()
{
  return MEMORY[0x24BDF3F18]();
}

uint64_t sub_23C3F6CCC()
{
  return MEMORY[0x24BDF3F28]();
}

uint64_t sub_23C3F6CD8()
{
  return MEMORY[0x24BDF3F80]();
}

uint64_t sub_23C3F6CE4()
{
  return MEMORY[0x24BDF40C0]();
}

uint64_t sub_23C3F6CF0()
{
  return MEMORY[0x24BDF4150]();
}

uint64_t sub_23C3F6CFC()
{
  return MEMORY[0x24BDF4170]();
}

uint64_t sub_23C3F6D08()
{
  return MEMORY[0x24BDF4340]();
}

uint64_t sub_23C3F6D14()
{
  return MEMORY[0x24BDF4368]();
}

uint64_t sub_23C3F6D20()
{
  return MEMORY[0x24BDF4378]();
}

uint64_t sub_23C3F6D2C()
{
  return MEMORY[0x24BDF4380]();
}

uint64_t sub_23C3F6D38()
{
  return MEMORY[0x24BDF46D8]();
}

uint64_t sub_23C3F6D44()
{
  return MEMORY[0x24BDF46E0]();
}

uint64_t sub_23C3F6D50()
{
  return MEMORY[0x24BDF47E0]();
}

uint64_t sub_23C3F6D5C()
{
  return MEMORY[0x24BE2B3B8]();
}

uint64_t sub_23C3F6D68()
{
  return MEMORY[0x24BDF48E8]();
}

uint64_t sub_23C3F6D74()
{
  return MEMORY[0x24BDF49A0]();
}

uint64_t sub_23C3F6D80()
{
  return MEMORY[0x24BDF49B8]();
}

uint64_t sub_23C3F6D8C()
{
  return MEMORY[0x24BDF4D48]();
}

uint64_t sub_23C3F6D98()
{
  return MEMORY[0x24BDF4D58]();
}

uint64_t sub_23C3F6DA4()
{
  return MEMORY[0x24BDF4D80]();
}

uint64_t sub_23C3F6DB0()
{
  return MEMORY[0x24BDF4E30]();
}

uint64_t sub_23C3F6DBC()
{
  return MEMORY[0x24BDF4E58]();
}

uint64_t sub_23C3F6DC8()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t sub_23C3F6DD4()
{
  return MEMORY[0x24BDF4F20]();
}

uint64_t sub_23C3F6DE0()
{
  return MEMORY[0x24BDF4FC8]();
}

uint64_t sub_23C3F6DEC()
{
  return MEMORY[0x24BDF51E8]();
}

uint64_t sub_23C3F6DF8()
{
  return MEMORY[0x24BDF5258]();
}

uint64_t sub_23C3F6E04()
{
  return MEMORY[0x24BDF53F0]();
}

uint64_t sub_23C3F6E10()
{
  return MEMORY[0x24BDF5418]();
}

uint64_t sub_23C3F6E1C()
{
  return MEMORY[0x24BDF54A0]();
}

uint64_t sub_23C3F6E28()
{
  return MEMORY[0x24BE2B460]();
}

uint64_t sub_23C3F6E34()
{
  return MEMORY[0x24BE2B560]();
}

uint64_t sub_23C3F6E40()
{
  return MEMORY[0x24BE2B588]();
}

uint64_t sub_23C3F6E4C()
{
  return MEMORY[0x24BE2B598]();
}

uint64_t sub_23C3F6E58()
{
  return MEMORY[0x24BE2B5A0]();
}

uint64_t sub_23C3F6E64()
{
  return MEMORY[0x24BE2B5A8]();
}

uint64_t sub_23C3F6E70()
{
  return MEMORY[0x24BE2B5B8]();
}

uint64_t sub_23C3F6E7C()
{
  return MEMORY[0x24BE5D228]();
}

uint64_t sub_23C3F6E88()
{
  return MEMORY[0x24BE5D230]();
}

uint64_t sub_23C3F6E94()
{
  return MEMORY[0x24BE5D2D8]();
}

uint64_t sub_23C3F6EA0()
{
  return MEMORY[0x24BE5D2F8]();
}

uint64_t sub_23C3F6EAC()
{
  return MEMORY[0x24BE5D308]();
}

uint64_t sub_23C3F6EB8()
{
  return MEMORY[0x24BE5D330]();
}

uint64_t sub_23C3F6EC4()
{
  return MEMORY[0x24BE5D770]();
}

uint64_t sub_23C3F6ED0()
{
  return MEMORY[0x24BE5D778]();
}

uint64_t sub_23C3F6EDC()
{
  return MEMORY[0x24BE5D790]();
}

uint64_t sub_23C3F6EE8()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23C3F6EF4()
{
  return MEMORY[0x24BEE0620]();
}

uint64_t sub_23C3F6F00()
{
  return MEMORY[0x24BEE75F8]();
}

uint64_t sub_23C3F6F0C()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_23C3F6F18()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_23C3F6F24()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23C3F6F30()
{
  return MEMORY[0x24BDCF8D8]();
}

uint64_t sub_23C3F6F3C()
{
  return MEMORY[0x24BDCF978]();
}

uint64_t sub_23C3F6F48()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23C3F6F54()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23C3F6F60()
{
  return MEMORY[0x24BE37C28]();
}

uint64_t sub_23C3F6F6C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23C3F6F78()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23C3F6F84()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23C3F6F90()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23C3F6F9C()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_23C3F6FA8()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_23C3F6FB4()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23C3F6FC0()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23C3F6FCC()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23C3F6FD8()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23C3F6FE4()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23C3F6FF0()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23C3F6FFC()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_23C3F7008()
{
  return MEMORY[0x24BEE68D8]();
}

uint64_t sub_23C3F7014()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_23C3F7020()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_23C3F702C()
{
  return MEMORY[0x24BEE6940]();
}

uint64_t sub_23C3F7038()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_23C3F7044()
{
  return MEMORY[0x24BEE6C08]();
}

uint64_t sub_23C3F7050()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23C3F705C()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23C3F7068()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23C3F7074()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23C3F7080()
{
  return MEMORY[0x24BDD0028]();
}

uint64_t sub_23C3F708C()
{
  return MEMORY[0x24BDD0040]();
}

uint64_t sub_23C3F7098()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_23C3F70A4()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23C3F70B0()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23C3F70BC()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23C3F70C8()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_23C3F70D4()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23C3F70E0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23C3F70EC()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23C3F70F8()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23C3F7104()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23C3F7110()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23C3F711C()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23C3F7128()
{
  return MEMORY[0x24BEE6EB0]();
}

uint64_t sub_23C3F7134()
{
  return MEMORY[0x24BEE6EB8]();
}

uint64_t sub_23C3F7140()
{
  return MEMORY[0x24BEE6EC0]();
}

uint64_t sub_23C3F714C()
{
  return MEMORY[0x24BEE6ED8]();
}

uint64_t sub_23C3F7158()
{
  return MEMORY[0x24BEE6EE8]();
}

uint64_t sub_23C3F7164()
{
  return MEMORY[0x24BEE6F00]();
}

uint64_t sub_23C3F7170()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23C3F717C()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23C3F7188()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23C3F7194()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23C3F71A0()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23C3F71AC()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23C3F71B8()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23C3F71C4()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23C3F71D0()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_23C3F71DC()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_23C3F71E8()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23C3F71F4()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23C3F7200()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23C3F720C()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_23C3F7218()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23C3F7224()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23C3F7230()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23C3F723C()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_23C3F7248()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_23C3F7254()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23C3F7260()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23C3F726C()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23C3F7278()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_23C3F7284()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23C3F7290()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23C3F729C()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23C3F72A8()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23C3F72B4()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_23C3F72C0()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23C3F72CC()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23C3F72D8()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23C3F72E4()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23C3F72F0()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23C3F72FC()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23C3F7308()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23C3F7314()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_23C3F7320()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23C3F732C()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23C3F7338()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23C3F7344()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23C3F7350()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_23C3F735C()
{
  return MEMORY[0x24BEE4A18]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x24BEE7198]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x24BEE71A0]();
}

uint64_t swift_asyncLet_get_throwing()
{
  return MEMORY[0x24BEE71B0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x24BEE4DC8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x24BEE4DF0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

