ValueMetadata *type metadata accessor for Stock()
{
  return &type metadata for Stock;
}

ValueMetadata *type metadata accessor for StockType()
{
  return &type metadata for StockType;
}

ValueMetadata *type metadata accessor for PriceChangeDisplay()
{
  return &type metadata for PriceChangeDisplay;
}

uint64_t _s10StocksCore5ChartV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1ABCF23B0 + 4 * byte_1ABF3A8EB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1ABCF23E4 + 4 * byte_1ABF3A8E6[v4]))();
}

uint64_t sub_1ABCF23E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF23EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABCF23F4);
  return result;
}

uint64_t sub_1ABCF2400(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABCF2408);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1ABCF240C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF2414(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF2420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1ABCF2458()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABCF2494 + 4 * byte_1ABF3A8D0[*v0]))(0x636E657265666572, 0xED00006574614465);
}

uint64_t sub_1ABCF2494()
{
  return 1852141679;
}

uint64_t sub_1ABCF24A4()
{
  return 0x65736F6C63;
}

uint64_t sub_1ABCF24B8()
{
  return 1751607656;
}

uint64_t sub_1ABCF24C8()
{
  return 7827308;
}

uint64_t sub_1ABCF24D8()
{
  return 0x656D756C6F76;
}

uint64_t sub_1ABCF24F0()
{
  uint64_t v0;
  _BYTE v2[144];
  _BYTE v3[144];

  sub_1ABD6414C(v0, (uint64_t)v2);
  sub_1ABD6414C((uint64_t)v2, (uint64_t)v3);
  sub_1ABD24814((uint64_t)v3);
  sub_1ABD24804((uint64_t)v3);
  return swift_unknownObjectRetain();
}

ValueMetadata *type metadata accessor for Headline()
{
  return &type metadata for Headline;
}

uint64_t sub_1ABCF2550()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  _BYTE v4[144];
  _BYTE v5[144];

  sub_1ABD6414C(v0, (uint64_t)v4);
  sub_1ABD6414C((uint64_t)v4, (uint64_t)v5);
  sub_1ABD24814((uint64_t)v5);
  v1 = objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v5), sel_identifier);
  v2 = sub_1ABF317A4();

  return v2;
}

uint64_t sub_1ABCF25D4()
{
  return sub_1ABD00888(type metadata accessor for Chart.Entry);
}

uint64_t sub_1ABCF25E0(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1ABCF25E8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t getEnumTagSinglePayload for TopStoriesStyleConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t getEnumTagSinglePayload for Stock(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1ABCF26EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

_QWORD *sub_1ABCF2718(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 48) = a2[6];
    v7 = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    v8 = a2[14];
    v9 = a2[15];
    *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    v10 = a3[13];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    *(_QWORD *)(a1 + 112) = v8;
    *(_QWORD *)(a1 + 120) = v9;
    v13 = sub_1ABF30760();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    sub_1ABF2FF5C();
    if (v15(v12, 1, v13))
    {
      sub_1ABD226F0();
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v18 = a3[14];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    if (v15((char *)a2 + v18, 1, v13))
    {
      sub_1ABD226F0();
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v20, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    }
    v22 = a3[15];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    if (v15((char *)a2 + v22, 1, v13))
    {
      sub_1ABD226F0();
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v23, v24, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
    }
    v26 = a3[17];
    *((_BYTE *)v4 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    *((_BYTE *)v4 + v26) = *((_BYTE *)a2 + v26);
    v27 = a3[19];
    *((_BYTE *)v4 + a3[18]) = *((_BYTE *)a2 + a3[18]);
    v28 = (char *)v4 + v27;
    v29 = (uint64_t)a2 + v27;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = *(_BYTE *)(v29 + 8);
    v30 = a3[20];
    v31 = (char *)v4 + v30;
    v32 = (char *)a2 + v30;
    if (v15((char *)a2 + v30, 1, v13))
    {
      sub_1ABD226F0();
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v31, v32, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v31, 0, 1, v13);
    }
    v34 = a3[21];
    v35 = (char *)v4 + v34;
    v36 = (char *)a2 + v34;
    if (v15((char *)a2 + v34, 1, v13))
    {
      sub_1ABD226F0();
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      v38 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    }
    else
    {
      v38 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      v38(v35, v36, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
    }
    v38((char *)v4 + a3[22], (char *)a2 + a3[22], v13);
    v39 = a3[23];
    v40 = (char *)v4 + v39;
    v41 = (char *)a2 + v39;
    if (v15((char *)a2 + v39, 1, v13))
    {
      sub_1ABD226F0();
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      v38(v40, v41, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v40, 0, 1, v13);
    }
    v43 = a3[24];
    v44 = (char *)v4 + v43;
    v45 = (uint64_t)a2 + v43;
    v46 = sub_1ABF3094C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  }
  return v4;
}

uint64_t sub_1ABCF2B2C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABCF2B38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  int v42;
  int v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  void *v47;
  void *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v8 = a3[13];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1ABF30760();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1ABD226F0();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[14];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = v13((void *)(a1 + v17), 1, v11);
  v21 = v13(v19, 1, v11);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v18, v19, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v18, v11);
LABEL_12:
    sub_1ABD226F0();
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v18, v19, v11);
LABEL_13:
  v23 = a3[15];
  v24 = (void *)(a1 + v23);
  v25 = (void *)(a2 + v23);
  v26 = v13((void *)(a1 + v23), 1, v11);
  v27 = v13(v25, 1, v11);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v24, v25, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v24, v11);
LABEL_18:
    sub_1ABD226F0();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v24, v25, v11);
LABEL_19:
  v29 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v31 = a1 + v30;
  v32 = a2 + v30;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  v33 = a3[20];
  v34 = (void *)(a1 + v33);
  v35 = (void *)(a2 + v33);
  v36 = v13((void *)(a1 + v33), 1, v11);
  v37 = v13(v35, 1, v11);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v34, v35, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v34, 0, 1, v11);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v34, v11);
LABEL_24:
    sub_1ABD226F0();
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v34, v35, v11);
LABEL_25:
  v39 = a3[21];
  v40 = (void *)(a1 + v39);
  v41 = (void *)(a2 + v39);
  v42 = v13((void *)(a1 + v39), 1, v11);
  v43 = v13(v41, 1, v11);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v40, v41, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v40, 0, 1, v11);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v43)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v40, v11);
LABEL_30:
    sub_1ABD226F0();
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v40, v41, v11);
LABEL_31:
  v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
  v45(a1 + a3[22], a2 + a3[22], v11);
  v46 = a3[23];
  v47 = (void *)(a1 + v46);
  v48 = (void *)(a2 + v46);
  v49 = v13((void *)(a1 + v46), 1, v11);
  v50 = v13(v48, 1, v11);
  if (!v49)
  {
    if (!v50)
    {
      v45((uint64_t)v47, (uint64_t)v48, v11);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v47, v11);
    goto LABEL_36;
  }
  if (v50)
  {
LABEL_36:
    sub_1ABD226F0();
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v47, v48, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v47, 0, 1, v11);
LABEL_37:
  v52 = a3[24];
  v53 = a1 + v52;
  v54 = a2 + v52;
  v55 = sub_1ABF3094C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
  return a1;
}

uint64_t sub_1ABCF30B4()
{
  unsigned __int8 *v0;

  return sub_1ABCF30BC(*v0);
}

uint64_t sub_1ABCF30BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABCF30EC + 4 * byte_1ABF4CFC7[a1]))(0x6C6F626D7973, 0xE600000000000000);
}

unint64_t sub_1ABCF30EC()
{
  return 0xD000000000000011;
}

uint64_t sub_1ABCF3108()
{
  return 0x4E79616C70736964;
}

uint64_t sub_1ABCF3128()
{
  return 0x5379616C70736964;
}

uint64_t sub_1ABCF314C()
{
  return 0x746E456B636F7473;
}

uint64_t sub_1ABCF3170()
{
  return 0x6365727065447369;
}

uint64_t sub_1ABCF3190()
{
  return 0x6D6563616C706572;
}

uint64_t initializeWithCopy for StockMetadataManager.CacheEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    v5 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v5;
    v6 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v6;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v7 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v7;
    v8 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v8;
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v9;
    v10 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v10;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
  }
  return a1;
}

uint64_t destroy for StockMetadataManager.CacheEntry(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABCF3310()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t initializeWithCopy for AppConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  v7 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v7;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_WORD *)(a1 + 249) = *(_WORD *)(a2 + 249);
  v8 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v8;
  v9 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v9;
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  v10 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v10;
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  v11 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v11;
  v12 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v12;
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
  v13 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v13;
  v14 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = v14;
  v15 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v15;
  v16 = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = v16;
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  v17 = (_OWORD *)(a1 + 624);
  v18 = a2 + 624;
  v19 = *(_QWORD *)(a2 + 784);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v19 == 1)
  {
    v20 = *(_OWORD *)(v18 + 144);
    *(_OWORD *)(a1 + 752) = *(_OWORD *)(v18 + 128);
    *(_OWORD *)(a1 + 768) = v20;
    *(_QWORD *)(a1 + 784) = *(_QWORD *)(v18 + 160);
    v21 = *(_OWORD *)(v18 + 80);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(v18 + 64);
    *(_OWORD *)(a1 + 704) = v21;
    v22 = *(_OWORD *)(v18 + 112);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(v18 + 96);
    *(_OWORD *)(a1 + 736) = v22;
    v23 = *(_OWORD *)(v18 + 16);
    *v17 = *(_OWORD *)v18;
    *(_OWORD *)(a1 + 640) = v23;
    v24 = *(_OWORD *)(v18 + 48);
    *(_OWORD *)(a1 + 656) = *(_OWORD *)(v18 + 32);
    *(_OWORD *)(a1 + 672) = v24;
  }
  else
  {
    if (*(_QWORD *)v18 == 1)
    {
      v25 = *(_OWORD *)(v18 + 16);
      *v17 = *(_OWORD *)v18;
      *(_OWORD *)(a1 + 640) = v25;
    }
    else
    {
      *(_QWORD *)(a1 + 624) = *(_QWORD *)v18;
      *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
      *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
      *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v26 = *(_QWORD *)(a2 + 656);
    if (v26 == 1)
    {
      v27 = *(_OWORD *)(a2 + 672);
      *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
      *(_OWORD *)(a1 + 672) = v27;
    }
    else
    {
      *(_QWORD *)(a1 + 656) = v26;
      *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
      *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
      *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v28 = *(_QWORD *)(a2 + 688);
    if (v28 == 1)
    {
      v29 = *(_OWORD *)(a2 + 704);
      *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
      *(_OWORD *)(a1 + 704) = v29;
    }
    else
    {
      *(_QWORD *)(a1 + 688) = v28;
      *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
      *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
      *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v30 = *(_QWORD *)(a2 + 720);
    if (v30 == 1)
    {
      v31 = *(_OWORD *)(a2 + 736);
      *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
      *(_OWORD *)(a1 + 736) = v31;
    }
    else
    {
      *(_QWORD *)(a1 + 720) = v30;
      *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
      *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
      *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v32 = *(_QWORD *)(a2 + 752);
    if (v32 == 1)
    {
      v33 = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
      *(_OWORD *)(a1 + 768) = v33;
    }
    else
    {
      *(_QWORD *)(a1 + 752) = v32;
      *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
      *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
      *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    *(_QWORD *)(a1 + 784) = v19;
    sub_1ABF2FF5C();
  }
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 800) = *(_BYTE *)(a2 + 800);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  *(_BYTE *)(a1 + 816) = *(_BYTE *)(a2 + 816);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  *(_BYTE *)(a1 + 920) = *(_BYTE *)(a2 + 920);
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  v34 = *(_QWORD *)(a2 + 936);
  *(_BYTE *)(a1 + 944) = *(_BYTE *)(a2 + 944);
  *(_QWORD *)(a1 + 936) = v34;
  *(_BYTE *)(a1 + 960) = *(_BYTE *)(a2 + 960);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  *(_BYTE *)(a1 + 976) = *(_BYTE *)(a2 + 976);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  v35 = *(_OWORD *)(a2 + 1016);
  *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
  *(_OWORD *)(a1 + 1016) = v35;
  v36 = *(_OWORD *)(a2 + 1032);
  v37 = *(_OWORD *)(a2 + 1048);
  v38 = *(_OWORD *)(a2 + 1080);
  *(_OWORD *)(a1 + 1064) = *(_OWORD *)(a2 + 1064);
  *(_OWORD *)(a1 + 1080) = v38;
  *(_OWORD *)(a1 + 1032) = v36;
  *(_OWORD *)(a1 + 1048) = v37;
  v39 = *(_OWORD *)(a2 + 1096);
  v40 = *(_OWORD *)(a2 + 1112);
  v41 = *(_OWORD *)(a2 + 1144);
  *(_OWORD *)(a1 + 1128) = *(_OWORD *)(a2 + 1128);
  *(_OWORD *)(a1 + 1144) = v41;
  *(_OWORD *)(a1 + 1096) = v39;
  *(_OWORD *)(a1 + 1112) = v40;
  *(_QWORD *)(a1 + 1160) = *(_QWORD *)(a2 + 1160);
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  *(_BYTE *)(a1 + 1176) = *(_BYTE *)(a2 + 1176);
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_QWORD *)(a1 + 1192) = *(_QWORD *)(a2 + 1192);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(_QWORD *)(a1 + 1216) = *(_QWORD *)(a2 + 1216);
  *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
  *(_OWORD *)(a1 + 1296) = *(_OWORD *)(a2 + 1296);
  *(_QWORD *)(a1 + 1312) = *(_QWORD *)(a2 + 1312);
  *(_QWORD *)(a1 + 1320) = *(_QWORD *)(a2 + 1320);
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  *(_QWORD *)(a1 + 1336) = *(_QWORD *)(a2 + 1336);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
  *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
  *(_WORD *)(a1 + 1400) = *(_WORD *)(a2 + 1400);
  *(_QWORD *)(a1 + 1408) = *(_QWORD *)(a2 + 1408);
  *(_QWORD *)(a1 + 1416) = *(_QWORD *)(a2 + 1416);
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
  *(_OWORD *)(a1 + 1472) = *(_OWORD *)(a2 + 1472);
  *(_QWORD *)(a1 + 1488) = *(_QWORD *)(a2 + 1488);
  *(_QWORD *)(a1 + 1496) = *(_QWORD *)(a2 + 1496);
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
  *(_QWORD *)(a1 + 1536) = *(_QWORD *)(a2 + 1536);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  v42 = *(_OWORD *)(a2 + 1552);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1552) = v42;
  memcpy((void *)(a1 + 1576), (const void *)(a2 + 1576), 0x45CuLL);
  *(_QWORD *)(a1 + 2696) = *(_QWORD *)(a2 + 2696);
  *(_BYTE *)(a1 + 2704) = *(_BYTE *)(a2 + 2704);
  *(_QWORD *)(a1 + 2712) = *(_QWORD *)(a2 + 2712);
  *(_BYTE *)(a1 + 2720) = *(_BYTE *)(a2 + 2720);
  *(_QWORD *)(a1 + 2728) = *(_QWORD *)(a2 + 2728);
  *(_BYTE *)(a1 + 2736) = *(_BYTE *)(a2 + 2736);
  *(_BYTE *)(a1 + 2752) = *(_BYTE *)(a2 + 2752);
  *(_QWORD *)(a1 + 2744) = *(_QWORD *)(a2 + 2744);
  *(_QWORD *)(a1 + 2760) = *(_QWORD *)(a2 + 2760);
  *(_BYTE *)(a1 + 2768) = *(_BYTE *)(a2 + 2768);
  *(_QWORD *)(a1 + 2776) = *(_QWORD *)(a2 + 2776);
  *(_BYTE *)(a1 + 2784) = *(_BYTE *)(a2 + 2784);
  *(_QWORD *)(a1 + 2792) = *(_QWORD *)(a2 + 2792);
  *(_OWORD *)(a1 + 2800) = *(_OWORD *)(a2 + 2800);
  *(_WORD *)(a1 + 2816) = *(_WORD *)(a2 + 2816);
  *(_QWORD *)(a1 + 2824) = *(_QWORD *)(a2 + 2824);
  v43 = *(_QWORD *)(a2 + 2832);
  *(_BYTE *)(a1 + 2840) = *(_BYTE *)(a2 + 2840);
  *(_QWORD *)(a1 + 2832) = v43;
  *(_QWORD *)(a1 + 2848) = *(_QWORD *)(a2 + 2848);
  v44 = *(_QWORD *)(a2 + 2864);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v44 == 1)
  {
    v45 = *(_OWORD *)(a2 + 2872);
    *(_OWORD *)(a1 + 2856) = *(_OWORD *)(a2 + 2856);
    *(_OWORD *)(a1 + 2872) = v45;
  }
  else
  {
    *(_QWORD *)(a1 + 2856) = *(_QWORD *)(a2 + 2856);
    *(_QWORD *)(a1 + 2864) = v44;
    *(_QWORD *)(a1 + 2872) = *(_QWORD *)(a2 + 2872);
    *(_QWORD *)(a1 + 2880) = *(_QWORD *)(a2 + 2880);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  *(_QWORD *)(a1 + 2888) = *(_QWORD *)(a2 + 2888);
  *(_BYTE *)(a1 + 2896) = *(_BYTE *)(a2 + 2896);
  *(_BYTE *)(a1 + 2936) = *(_BYTE *)(a2 + 2936);
  v46 = *(_OWORD *)(a2 + 2920);
  *(_OWORD *)(a1 + 2904) = *(_OWORD *)(a2 + 2904);
  *(_OWORD *)(a1 + 2920) = v46;
  *(_QWORD *)(a1 + 2944) = *(_QWORD *)(a2 + 2944);
  *(_QWORD *)(a1 + 2952) = *(_QWORD *)(a2 + 2952);
  *(_QWORD *)(a1 + 2960) = *(_QWORD *)(a2 + 2960);
  *(_QWORD *)(a1 + 2968) = *(_QWORD *)(a2 + 2968);
  *(_QWORD *)(a1 + 2976) = *(_QWORD *)(a2 + 2976);
  *(_BYTE *)(a1 + 2984) = *(_BYTE *)(a2 + 2984);
  *(_QWORD *)(a1 + 2992) = *(_QWORD *)(a2 + 2992);
  *(_BYTE *)(a1 + 3000) = *(_BYTE *)(a2 + 3000);
  *(_OWORD *)(a1 + 3008) = *(_OWORD *)(a2 + 3008);
  *(_BYTE *)(a1 + 3024) = *(_BYTE *)(a2 + 3024);
  *(_QWORD *)(a1 + 3032) = *(_QWORD *)(a2 + 3032);
  *(_QWORD *)(a1 + 3040) = *(_QWORD *)(a2 + 3040);
  *(_QWORD *)(a1 + 3048) = *(_QWORD *)(a2 + 3048);
  *(_QWORD *)(a1 + 3056) = *(_QWORD *)(a2 + 3056);
  *(_QWORD *)(a1 + 3064) = *(_QWORD *)(a2 + 3064);
  *(_QWORD *)(a1 + 3072) = *(_QWORD *)(a2 + 3072);
  *(_BYTE *)(a1 + 3080) = *(_BYTE *)(a2 + 3080);
  *(_QWORD *)(a1 + 3088) = *(_QWORD *)(a2 + 3088);
  *(_QWORD *)(a1 + 3096) = *(_QWORD *)(a2 + 3096);
  *(_QWORD *)(a1 + 3104) = *(_QWORD *)(a2 + 3104);
  *(_QWORD *)(a1 + 3112) = *(_QWORD *)(a2 + 3112);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABCF3D1C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1ABCF3D28()
{
  unsigned __int8 *v0;

  return sub_1ABCF3D30(*v0);
}

uint64_t sub_1ABCF3D30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABCF3D60 + 4 * byte_1ABF43068[a1]))(0x6563697270, 0xE500000000000000);
}

uint64_t sub_1ABCF3D60()
{
  return 0x6168436563697270;
}

unint64_t sub_1ABCF3D84()
{
  return 0xD000000000000014;
}

uint64_t sub_1ABCF3F50()
{
  return 0x7243726576726573;
}

uint64_t sub_1ABCF3F74()
{
  return 0x695474656B72616DLL;
}

uint64_t sub_1ABCF3F98()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

ValueMetadata *type metadata accessor for Watchlist()
{
  return &type metadata for Watchlist;
}

ValueMetadata *type metadata accessor for AppConfiguration()
{
  return &type metadata for AppConfiguration;
}

uint64_t destroy for Watchlist()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABCF3FF4()
{
  unsigned __int8 *v0;

  return sub_1ABCF3FFC(*v0);
}

uint64_t sub_1ABCF3FFC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABCF4034 + 4 * byte_1ABF3919D[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1ABCF4034()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1ABCF4048()
{
  return 1701667182;
}

uint64_t sub_1ABCF4058()
{
  return 0x65676E6168637865;
}

uint64_t sub_1ABCF4070()
{
  return 1701869940;
}

uint64_t sub_1ABCF4080()
{
  return 0x6D614E74726F6873;
}

uint64_t sub_1ABCF409C()
{
  return 0x4E746361706D6F63;
}

uint64_t sub_1ABCF40BC()
{
  return 0x726F74636573;
}

uint64_t sub_1ABCF40D0()
{
  return 0x7972747375646E69;
}

uint64_t storeEnumTagSinglePayload for Quote.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 20 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 20) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEB)
    return ((uint64_t (*)(void))((char *)&loc_1ABCF4134 + 4 * byte_1ABF43082[v4]))();
  *a1 = a2 + 20;
  return ((uint64_t (*)(void))((char *)sub_1ABCF4168 + 4 * byte_1ABF4307D[v4]))();
}

uint64_t sub_1ABCF4168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF4170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABCF4178);
  return result;
}

uint64_t sub_1ABCF4184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABCF418CLL);
  *(_BYTE *)result = a2 + 20;
  return result;
}

uint64_t sub_1ABCF4190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF4198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1ABCF41A4(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

uint64_t destroy for SDSQuoteResponse.SDSFundComposition()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1ABCF41DC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABCF4210(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v38 = *(_QWORD *)(a1 + 56);
  v39 = *(_QWORD *)(a1 + 48);
  v37 = *(_BYTE *)(a1 + 64);
  v36 = *(_QWORD *)(a1 + 72);
  v34 = *(_QWORD *)(a1 + 80);
  v32 = *(_QWORD *)(a1 + 88);
  v30 = *(_QWORD *)(a1 + 96);
  v26 = *(_QWORD *)(a1 + 104);
  v28 = *(_QWORD *)(a1 + 112);
  v22 = *(_QWORD *)(a1 + 120);
  v24 = *(_QWORD *)(a1 + 128);
  v7 = a2[2];
  v6 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  v11 = a2[6];
  v10 = a2[7];
  v35 = a2[9];
  v33 = a2[10];
  v31 = a2[11];
  v29 = a2[12];
  v25 = a2[13];
  v27 = a2[14];
  v21 = a2[15];
  v23 = a2[16];
  if (*(_QWORD *)a1 == *a2 && *(_QWORD *)(a1 + 8) == a2[1] || (v12 = sub_1ABF3223C(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v6 || (v14 = sub_1ABF3223C(), result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v8 || (v15 = sub_1ABF3223C(), result = 0, (v15 & 1) != 0))
      {
        if (v39 == v11 && v38 == v10 || (v16 = sub_1ABF3223C(), result = 0, (v16 & 1) != 0))
        {
          sub_1ABCF44D4(v37);
          if ((v17 & 1) == 0)
            return 0;
          if (v36 == v35 && v34 == v33 || (v18 = sub_1ABF3223C(), result = 0, (v18 & 1) != 0))
          {
            if (v32 == v31 && v30 == v29 || (v19 = sub_1ABF3223C(), result = 0, (v19 & 1) != 0))
            {
              if (v28)
              {
                if (!v27)
                  return 0;
                if (v26 != v25 || v28 != v27)
                {
                  v20 = sub_1ABF3223C();
                  result = 0;
                  if ((v20 & 1) == 0)
                    return result;
                }
              }
              else if (v27)
              {
                return 0;
              }
              if (v24)
              {
                if (v23 && (v22 == v21 && v24 == v23 || (sub_1ABF3223C() & 1) != 0))
                  return 1;
              }
              else if (!v23)
              {
                return 1;
              }
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1ABCF44D4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABCF4524(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABCF45E4 + 4 * byte_1ABF3CF58[a2]))(0x79636E6572727563);
}

uint64_t sub_1ABCF45E4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x79636E6572727563 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABCF4704()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABCF470C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABCF473C + 4 * byte_1ABF3A8D6[*v0]))(0x73656972746E65, 0xE700000000000000);
}

uint64_t sub_1ABCF473C()
{
  return 0x676E615265746164;
}

uint64_t sub_1ABCF4758()
{
  return 0x73756F6976657270;
}

uint64_t sub_1ABCF477C()
{
  return 0x695474656B72616DLL;
}

unint64_t sub_1ABCF47A0()
{
  return 0xD000000000000011;
}

uint64_t sub_1ABCF47BC()
{
  return 0x7365727574616566;
}

uint64_t sub_1ABCF47D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Chart(0);
  return sub_1ABCFC790(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))sub_1ABCFC730);
}

uint64_t sub_1ABCF4810(_QWORD *a1)
{
  return sub_1ABCF4824(a1);
}

uint64_t sub_1ABCF4824(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1ED34E2C8, (uint64_t (*)(void))sub_1ABCF4E04, (uint64_t)&type metadata for Quote.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF4E04();
  sub_1ABF32368();
  v14 = 0;
  sub_1ABF32158();
  if (!v2)
  {
    v14 = 1;
    sub_1ABF32158();
    v14 = 2;
    sub_1ABF32158();
    v14 = 3;
    sub_1ABF32158();
    v14 = 4;
    sub_1ABF32158();
    v14 = 5;
    sub_1ABF32158();
    v14 = 6;
    sub_1ABF32158();
    v14 = 7;
    sub_1ABF32140();
    v14 = *(_BYTE *)(v3 + 128);
    v13 = 8;
    sub_1ABCF4E48();
    sub_1ABF321D0();
    v10 = (int *)type metadata accessor for Quote();
    v14 = 9;
    sub_1ABF30760();
    sub_1ABCFE1EC(&qword_1ED34EAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1ABF3217C();
    v14 = 10;
    sub_1ABF3217C();
    v14 = 11;
    sub_1ABF3217C();
    v14 = *(_BYTE *)(v3 + v10[16]);
    v13 = 12;
    v12[1] = sub_1ABCF4E8C();
    sub_1ABF3217C();
    v14 = *(_BYTE *)(v3 + v10[17]);
    v13 = 13;
    sub_1ABF3217C();
    v14 = *(_BYTE *)(v3 + v10[18]);
    v13 = 14;
    sub_1ABF3217C();
    v14 = 15;
    sub_1ABF32158();
    v14 = 16;
    sub_1ABF3217C();
    v14 = 17;
    sub_1ABF3217C();
    v14 = 18;
    sub_1ABF321D0();
    v14 = 19;
    sub_1ABF3217C();
    v14 = 20;
    sub_1ABF3094C();
    sub_1ABCFE1EC(&qword_1ED34CCF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1488]);
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1ABCF4DA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

unint64_t sub_1ABCF4E04()
{
  unint64_t result;

  result = qword_1ED34DA48;
  if (!qword_1ED34DA48)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF432E4, &type metadata for Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34DA48);
  }
  return result;
}

unint64_t sub_1ABCF4E48()
{
  unint64_t result;

  result = qword_1ED34CED0;
  if (!qword_1ED34CED0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for ExchangeStatus, &type metadata for ExchangeStatus);
    atomic_store(result, (unint64_t *)&qword_1ED34CED0);
  }
  return result;
}

unint64_t sub_1ABCF4E8C()
{
  unint64_t result;

  result = qword_1ED34CD98;
  if (!qword_1ED34CD98)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for QuoteSource, &type metadata for QuoteSource);
    atomic_store(result, (unint64_t *)&qword_1ED34CD98);
  }
  return result;
}

uint64_t initializeWithCopy for Watchlist(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABCF4F2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t destroy for AppConfiguration(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[98] != 1)
  {
    if (a1[78] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[82] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[86] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[90] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[94] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[358] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABCF5204(_QWORD *a1)
{
  return sub_1ABCF5218(a1);
}

uint64_t sub_1ABCF5218(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[9];
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;

  sub_1ABCF54C0(0, &qword_1ED347040, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)v18 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v24 = *(_QWORD *)(v1 + 24);
  v25 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v22 = *(_QWORD *)(v1 + 40);
  v23 = v9;
  v10 = *(_QWORD *)(v1 + 48);
  v20 = *(_QWORD *)(v1 + 56);
  v21 = v10;
  v19 = *(unsigned __int8 *)(v1 + 64);
  v11 = *(_QWORD *)(v1 + 72);
  v18[7] = *(_QWORD *)(v1 + 80);
  v18[8] = v11;
  v12 = *(_QWORD *)(v1 + 88);
  v18[5] = *(_QWORD *)(v1 + 96);
  v18[6] = v12;
  v13 = *(_QWORD *)(v1 + 104);
  v18[3] = *(_QWORD *)(v1 + 112);
  v18[4] = v13;
  v14 = *(_QWORD *)(v1 + 120);
  v18[1] = *(_QWORD *)(v1 + 128);
  v18[2] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF5560();
  sub_1ABF32368();
  v36 = 0;
  v15 = v26;
  sub_1ABF32194();
  if (!v15)
  {
    v16 = v19;
    v35 = 1;
    sub_1ABF32194();
    v34 = 2;
    sub_1ABF32194();
    v33 = 3;
    sub_1ABF32194();
    v32 = v16;
    v31 = 4;
    sub_1ABCF551C();
    sub_1ABF321D0();
    v30 = 5;
    sub_1ABF32194();
    v29 = 6;
    sub_1ABF32194();
    v28 = 7;
    sub_1ABF32140();
    v27 = 8;
    sub_1ABF32140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1ABCF54C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABCF5560();
    v7 = a3(a1, &type metadata for Stock.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1ABCF551C()
{
  unint64_t result;

  result = qword_1ED346C90;
  if (!qword_1ED346C90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AEDC, &type metadata for StockType);
    atomic_store(result, (unint64_t *)&qword_1ED346C90);
  }
  return result;
}

unint64_t sub_1ABCF5560()
{
  unint64_t result;

  result = qword_1ED34DA90;
  if (!qword_1ED34DA90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF393AC, &type metadata for Stock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34DA90);
  }
  return result;
}

uint64_t sub_1ABCF55A4(_QWORD *a1)
{
  return sub_1ABCF55B8(a1);
}

uint64_t sub_1ABCF55B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[144];

  sub_1ABCF56D4(0, &qword_1ED3511F0, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v9 - v6;
  sub_1ABE11254(v1, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF5774();
  sub_1ABF32368();
  sub_1ABE11254((uint64_t)v11, (uint64_t)&v10);
  sub_1ABCF5730();
  sub_1ABF3217C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1ABCF56D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABCF5774();
    v7 = a3(a1, &type metadata for StockMetadataManager.CacheEntry.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1ABCF5730()
{
  unint64_t result;

  result = qword_1ED3511F8;
  if (!qword_1ED3511F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39278, &type metadata for Stock);
    atomic_store(result, (unint64_t *)&qword_1ED3511F8);
  }
  return result;
}

unint64_t sub_1ABCF5774()
{
  unint64_t result;

  result = qword_1ED34D5F0;
  if (!qword_1ED34D5F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F2AC, &type metadata for StockMetadataManager.CacheEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D5F0);
  }
  return result;
}

uint64_t sub_1ABCF57B8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1ABD00308(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1ABCF5804@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  sub_1ABCF5968();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v13[-v7];
  v9 = v1 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
  swift_beginAccess();
  sub_1ABCF5A10(v9, (uint64_t)v8);
  v10 = sub_1ABF305D4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_1ABCF59BC((uint64_t)v8);
  sub_1ABCF5AAC(a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1ABCF5CFC((uint64_t)v6, v9);
  return swift_endAccess();
}

void sub_1ABCF5968()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED350380)
  {
    sub_1ABF305D4();
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED350380);
  }
}

uint64_t sub_1ABCF59BC(uint64_t a1)
{
  uint64_t v2;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABCF5A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5968();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1ABCF5A54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1ABCF5AAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  void (*v12)(char *, char *, uint64_t);
  NSString *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD v20[2];

  v2 = sub_1ABF305D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5968();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v10 = (void *)sub_1ABF31780();
  v11 = objc_msgSend(v9, sel_containerURLForSecurityApplicationGroupIdentifier_, v10);

  if (v11)
  {
    sub_1ABF30580();

    v12 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v12(v8, v5, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(a1, v8, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  }
  v14 = NSTemporaryDirectory();
  v15 = sub_1ABF317A4();
  v17 = v16;

  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3A28]), sel_init);
  v19 = objc_msgSend(v18, sel_UUIDString);

  sub_1ABF317A4();
  v20[0] = v15;
  v20[1] = v17;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABF30538();
  swift_bridgeObjectRelease();
  return sub_1ABCF59BC((uint64_t)v8);
}

uint64_t sub_1ABCF5CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5968();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for Stock(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1ABCF5DA0()
{
  sub_1ABCF5E28();
  return sub_1ABF31978();
}

uint64_t sub_1ABCF5DE0()
{
  sub_1ABCF5E28();
  return sub_1ABF3196C();
}

unint64_t sub_1ABCF5E28()
{
  unint64_t result;

  result = qword_1ED34EDF8;
  if (!qword_1ED34EDF8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for NewsEnvironment, &type metadata for NewsEnvironment);
    atomic_store(result, (unint64_t *)&qword_1ED34EDF8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Quote.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEC)
    goto LABEL_17;
  if (a2 + 20 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 20) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 20;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 20;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 20;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x15;
  v8 = v6 - 21;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1ABCF5EFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  sub_1ABF2FF5C();
  return v1;
}

ValueMetadata *type metadata accessor for ExchangeStatus()
{
  return &type metadata for ExchangeStatus;
}

uint64_t sub_1ABCF5F38()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1ABCF5F44@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABCF5F58(a1, a2);
}

uint64_t sub_1ABCF5F58@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  *a2 = v3;
  a2[1] = v2;
  return sub_1ABF2FF5C();
}

void sub_1ABCF5F74(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t storeEnumTagSinglePayload for StockRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1ABCF5FCC + 4 * byte_1ABF4CFD3[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1ABCF6000 + 4 * byte_1ABF4CFCE[v4]))();
}

uint64_t sub_1ABCF6000(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF6008(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABCF6010);
  return result;
}

uint64_t sub_1ABCF601C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABCF6024);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1ABCF6028(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF6030(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1ABCF603C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void sub_1ABCF6044(char *a1)
{
  sub_1ABCF44D4(*a1);
}

uint64_t sub_1ABCF6050()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABCF605C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABCF6068()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABCF6098 + 4 * byte_1ABF441F4[*v0]))();
}

void sub_1ABCF6098(_QWORD *a1@<X8>)
{
  *a1 = 1852141679;
  a1[1] = 0xE400000000000000;
}

void sub_1ABCF60AC(_QWORD *a1@<X8>)
{
  *a1 = 0x6465736F6C63;
  a1[1] = 0xE600000000000000;
}

void sub_1ABCF60C4(_QWORD *a1@<X8>)
{
  *a1 = 0x656B72614D657270;
  a1[1] = 0xE900000000000074;
}

void sub_1ABCF60E4(_QWORD *a1@<X8>)
{
  *a1 = 0x756F487265746661;
  a1[1] = 0xEA00000000007372;
}

uint64_t destroy for StockRecord()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t storeEnumTagSinglePayload for NewsEnvironment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1ABCF6198 + 4 * byte_1ABF3BAF5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1ABCF61CC + 4 * byte_1ABF3BAF0[v4]))();
}

uint64_t sub_1ABCF61CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF61D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABCF61DCLL);
  return result;
}

uint64_t sub_1ABCF61E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABCF61F0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1ABCF61F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF61FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1ABCF6208(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1ABDD3360(255, a3);
    v4 = sub_1ABF32200();
    if (!v5)
      atomic_store(v4, a2);
  }
}

StocksCore::NewsEnvironment_optional __swiftcall NewsEnvironment.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksCore::NewsEnvironment_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1ABF32068();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for StockType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1ABCF6344(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1ABCF5968();
  v2 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v22 - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350C90);
  result = sub_1ABF30B68();
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  v11 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350980);
  result = sub_1ABF30B74();
  v12 = v24;
  if (!v24)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = (id)FCURLForContainerizedUserAccountCachesDirectory();
  if (v13)
  {
    v14 = v13;
    sub_1ABF30580();

    v15 = sub_1ABF305D4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
  }
  else
  {
    v15 = sub_1ABF305D4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF305D4();
  sub_1ABF30B5C();
  v16 = *(_QWORD *)(v15 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v4, 1, v15);
  if ((_DWORD)result == 1)
    goto LABEL_14;
  v23 = v12;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v7, v4, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v15);
  v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PrivateDataActionProvider()), sel_init);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7BCC(0, &qword_1ED3504F8);
  result = sub_1ABF30B68();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v18 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, &qword_1ED34E0D8);
  result = sub_1ABF30B68();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v19 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350D78);
  result = sub_1ABF30B68();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v20 = result;
  v21 = objc_allocWithZone(MEMORY[0x1E0D58A40]);
  result = (uint64_t)sub_1ABD33768(v11, v23, (uint64_t)v9, (uint64_t)v7, (uint64_t)v17, v18, v19, 0xF8FFFFFC1, 2, 0, 0, v20, 0);
  if (!result)
LABEL_18:
    __break(1u);
  return result;
}

uint64_t sub_1ABCF66F4(_QWORD *a1)
{
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED3503A0);
  result = sub_1ABF30B68();
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_1ABCF6754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t, uint64_t);
  void (*v6)(char *, uint64_t);
  uint64_t v8;

  v0 = sub_1ABF310FC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED3503A0);
  sub_1ABF30F40();
  swift_release();
  v4 = *MEMORY[0x1E0DB4A18];
  v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1ABF30AA8();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350BF8);
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350C90);
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350CE8);
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABCF7C04(0, &qword_1ED350500);
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350C78);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350C50);
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, &qword_1ED3504F8);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, qword_1ED3503B0);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350D68);
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, &qword_1ED350C70);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, &qword_1ED350C08);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350BD0);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350D28);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, &qword_1ED350D20);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350D08);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350C10);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350CC8);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350CA0);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, &qword_1ED350D38);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350BB0);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350CF8);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, &qword_1ED350BF0);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350C28);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, &qword_1ED350C20);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350CB0);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, &qword_1ED350D50);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350D78);
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350980);
  sub_1ABF30F4C();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350CD8);
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350D40);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, &qword_1ED350C48);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350C60);
  sub_1ABF30F40();
  swift_release();
  sub_1ABF30AA8();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, &qword_1ED350C88);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, &qword_1ED350CC0);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7C04(0, &qword_1ED350D88);
  sub_1ABF30F40();
  swift_release();
  sub_1ABF30AA8();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350BE0);
  sub_1ABF30F40();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1ABF30C64();
  sub_1ABCF7BCC(0, &qword_1ED350D18);
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABD33B60();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  type metadata accessor for FCContextEnvironment(0);
  sub_1ABF30F4C();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABCF7BCC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1ABCF7C04(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1ABCF7C58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABCF7C84()
{
  return sub_1ABD00888(type metadata accessor for Chart);
}

uint64_t getEnumTagSinglePayload for QuoteSource(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1ABCF7D20()
{
  sub_1ABCF7D6C();
  return sub_1ABF31990();
}

unint64_t sub_1ABCF7D6C()
{
  unint64_t result;

  result = qword_1ED34DB38;
  if (!qword_1ED34DB38)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AE7C, &type metadata for StockType);
    atomic_store(result, (unint64_t *)&qword_1ED34DB38);
  }
  return result;
}

uint64_t sub_1ABCF7DB0()
{
  sub_1ABCF7DFC();
  return sub_1ABF31990();
}

unint64_t sub_1ABCF7DFC()
{
  unint64_t result;

  result = qword_1ED34DA10;
  if (!qword_1ED34DA10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A9D0, &type metadata for Chart.Feature);
    atomic_store(result, (unint64_t *)&qword_1ED34DA10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StockMetadataManager.CacheEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StockMetadataManager.CacheEntry(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 136))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1ABCF7F10()
{
  sub_1ABCF7F5C();
  return sub_1ABF31990();
}

unint64_t sub_1ABCF7F5C()
{
  unint64_t result;

  result = qword_1ED34CED8;
  if (!qword_1ED34CED8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for ExchangeStatus, &type metadata for ExchangeStatus);
    atomic_store(result, (unint64_t *)&qword_1ED34CED8);
  }
  return result;
}

uint64_t sub_1ABCF7FA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABCF7FCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ChartRange.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ChartRange.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABCF801C + 4 * byte_1ABF4A040[*v0]))(0x796144656E6FLL, 0xE600000000000000);
}

uint64_t sub_1ABCF801C()
{
  return 0x6B656557656E6FLL;
}

uint64_t sub_1ABCF8034()
{
  return 0x68746E6F4D656E6FLL;
}

uint64_t sub_1ABCF804C()
{
  return 0x6E6F4D6565726874;
}

uint64_t sub_1ABCF806C()
{
  return 0x68746E6F4D786973;
}

uint64_t sub_1ABCF8108(_QWORD *a1)
{
  return sub_1ABCF811C(a1);
}

uint64_t sub_1ABCF811C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[1128];

  sub_1ABCF8238(0, &qword_1ED34FF78, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  sub_1ABECE570(v1, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF8294();
  sub_1ABF32368();
  sub_1ABECE570((uint64_t)v11, (uint64_t)&v10);
  sub_1ABCF82D8();
  sub_1ABF3217C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1ABCF8238(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABCF8294();
    v7 = a3(a1, &type metadata for NewsPersonalizationTreatment.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1ABCF8294()
{
  unint64_t result;

  result = qword_1ED34F710;
  if (!qword_1ED34F710)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CF68, &type metadata for NewsPersonalizationTreatment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F710);
  }
  return result;
}

unint64_t sub_1ABCF82D8()
{
  unint64_t result;

  result = qword_1ED34E860;
  if (!qword_1ED34E860)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for ScoringConfig, &type metadata for ScoringConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34E860);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Watchlist(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 42))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s10StocksCore12NewsProviderOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABCF83B4 + 4 * byte_1ABF3BAFF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABCF83E8 + 4 * byte_1ABF3BAFA[v4]))();
}

uint64_t sub_1ABCF83E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF83F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABCF83F8);
  return result;
}

uint64_t sub_1ABCF8404(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABCF840CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABCF8410(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF8418(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF8424@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return HeadlineScores.init(from:)(a1, a2);
}

void sub_1ABCF8438()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346EF8)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346EF8);
  }
}

unint64_t sub_1ABCF848C()
{
  unint64_t result;

  result = qword_1ED346900;
  if (!qword_1ED346900)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for HeadlineScores.Cohort, &type metadata for HeadlineScores.Cohort);
    atomic_store(result, (unint64_t *)&qword_1ED346900);
  }
  return result;
}

unint64_t sub_1ABCF84D0()
{
  unint64_t result;

  result = qword_1ED3468B0;
  if (!qword_1ED3468B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF491B8, &type metadata for HeadlineScores.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3468B0);
  }
  return result;
}

uint64_t sub_1ABCF8514@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return HeadlineScores.Cohort.init(from:)(a1, a2);
}

unint64_t sub_1ABCF8528()
{
  unint64_t result;

  result = qword_1ED3468E8;
  if (!qword_1ED3468E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49258, &type metadata for HeadlineScores.Cohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3468E8);
  }
  return result;
}

uint64_t sub_1ABCF856C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return HeadlineScores.StockEntityCohort.init(from:)(a1, a2);
}

unint64_t sub_1ABCF8580()
{
  unint64_t result;

  result = qword_1ED3468C8;
  if (!qword_1ED3468C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49208, &type metadata for HeadlineScores.StockEntityCohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3468C8);
  }
  return result;
}

uint64_t sub_1ABCF85C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

ValueMetadata *type metadata accessor for ChartRange()
{
  return &type metadata for ChartRange;
}

uint64_t sub_1ABCF85EC()
{
  return 0x6E696C6B72617073;
}

uint64_t sub_1ABCF8608()
{
  return 0x7365746F7571;
}

void *sub_1ABCF861C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v10;
  BOOL v11;
  _QWORD __dst[34];

  v3 = *(_QWORD **)(v1 + 408);
  type metadata accessor for EndpointConfiguration.Defaults();
  swift_initStaticObject();
  sub_1ABCF8898();
  v6 = v5;
  v7 = v3[2];
  if (v7)
  {
    v8 = v4;
    memcpy(__dst, v3 + 4, sizeof(__dst));
    if (__dst[0] != v8 || __dst[1] != v6)
    {
      v10 = (char *)(v3 + 38);
      do
      {
        if ((sub_1ABF3223C() & 1) != 0)
          break;
        if (!--v7)
          goto LABEL_15;
        memcpy(__dst, v10, sizeof(__dst));
        v11 = __dst[0] == v8 && __dst[1] == v6;
        v10 += 272;
      }
      while (!v11);
    }
    sub_1ABDB4070((uint64_t)__dst);
    swift_bridgeObjectRelease();
    return memcpy(a1, __dst, 0x110uLL);
  }
  else
  {
LABEL_15:
    sub_1ABDB1120(0, 0, 0, 0, 0, 0, 0, 0, a1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0);
    return (void *)swift_bridgeObjectRelease();
  }
}

void sub_1ABCF8778()
{
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE1EC(&qword_1ED34F368, (uint64_t (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults, (uint64_t)&unk_1ABF3A83C);
  sub_1ABF30970();
  __asm { BR              X10 }
}

void sub_1ABCF8898()
{
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE1EC(&qword_1ED34F368, (uint64_t (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults, (uint64_t)&unk_1ABF3A83C);
  sub_1ABF30970();
  __asm { BR              X10 }
}

void sub_1ABCF89DC()
{
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE1EC(&qword_1ED34F368, (uint64_t (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults, (uint64_t)&unk_1ABF3A83C);
  sub_1ABF30970();
  __asm { BR              X10 }
}

void sub_1ABCF8A9C()
{
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE1EC(&qword_1ED34F368, (uint64_t (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults, (uint64_t)&unk_1ABF3A83C);
  sub_1ABF30970();
  __asm { BR              X10 }
}

void sub_1ABCF8BBC()
{
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE1EC(&qword_1ED34F368, (uint64_t (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults, (uint64_t)&unk_1ABF3A83C);
  sub_1ABF30970();
  __asm { BR              X10 }
}

void sub_1ABCF8CDC()
{
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE1EC(&qword_1ED34F368, (uint64_t (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults, (uint64_t)&unk_1ABF3A83C);
  sub_1ABF30970();
  __asm { BR              X10 }
}

void sub_1ABCF8DF8()
{
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE1EC(&qword_1ED34F368, (uint64_t (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults, (uint64_t)&unk_1ABF3A83C);
  sub_1ABF30970();
  __asm { BR              X10 }
}

void sub_1ABCF8F14()
{
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE1EC(&qword_1ED34F368, (uint64_t (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults, (uint64_t)&unk_1ABF3A83C);
  sub_1ABF30970();
  __asm { BR              X10 }
}

void sub_1ABCF9034()
{
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE1EC(&qword_1ED34F368, (uint64_t (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults, (uint64_t)&unk_1ABF3A83C);
  sub_1ABF30970();
  __asm { BR              X10 }
}

void sub_1ABCF9158()
{
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE1EC(&qword_1ED34F368, (uint64_t (*)(uint64_t))type metadata accessor for EndpointConfiguration.Defaults, (uint64_t)&unk_1ABF3A83C);
  sub_1ABF30970();
  __asm { BR              X10 }
}

uint64_t sub_1ABCF927C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABCF92A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABCF92B0()
{
  sub_1ABF2FF68();
  sub_1ABF31534();
  return swift_release();
}

StocksCore::NewsEnvironment_optional sub_1ABCF92E8(Swift::String *a1)
{
  return NewsEnvironment.init(rawValue:)(*a1);
}

uint64_t sub_1ABCF92F4()
{
  unsigned __int8 *v0;

  return sub_1ABCF92FC(*v0);
}

uint64_t sub_1ABCF92FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABCF9338 + 4 * byte_1ABF3B830[a1]))(0xD000000000000015, 0x80000001ABF53330);
}

uint64_t sub_1ABCF9338()
{
  uint64_t v0;

  return v0 - 7;
}

uint64_t sub_1ABCF95C0()
{
  return 0x656D5F6B636F7473;
}

uint64_t sub_1ABCF95E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABCF9620 + 4 * byte_1ABF39710[*v0]))(0x746E456B636F7473, 0xED00004449797469);
}

uint64_t sub_1ABCF9620()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1ABCF9634()
{
  return 0x6E6174726F706D69;
}

uint64_t sub_1ABCF9650()
{
  return 0x726F697270;
}

uint64_t sub_1ABCF9664()
{
  return sub_1ABF30964();
}

uint64_t sub_1ABCF9670()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABCF96A0 + 4 * byte_1ABF3AE28[*v0]))();
}

void sub_1ABCF96A0(_QWORD *a1@<X8>)
{
  *a1 = 0x79636E6572727563;
  a1[1] = 0xE800000000000000;
}

void sub_1ABCF96BC(char *a1@<X8>)
{
  strcpy(a1, "cryptocurrency");
  a1[15] = -18;
}

void sub_1ABCF96E4(_QWORD *a1@<X8>)
{
  *a1 = 0x797469757165;
  a1[1] = 0xE600000000000000;
}

void sub_1ABCF96FC(_QWORD *a1@<X8>)
{
  *a1 = 6714469;
  a1[1] = 0xE300000000000000;
}

void sub_1ABCF9710(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x73657275747566;
  a1[1] = v1;
}

void sub_1ABCF9728(_QWORD *a1@<X8>)
{
  *a1 = 0x7865646E69;
  a1[1] = 0xE500000000000000;
}

void sub_1ABCF9740(_QWORD *a1@<X8>)
{
  *a1 = 0x75466C617574756DLL;
  a1[1] = 0xEA0000000000646ELL;
}

uint64_t initializeBufferWithCopyOfBuffer for ArticleScore(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  sub_1ABF2FF68();
  return v3;
}

uint64_t storeEnumTagSinglePayload for Stock.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1ABCF97DC + 4 * byte_1ABF391BB[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1ABCF9810 + 4 * byte_1ABF391B6[v4]))();
}

uint64_t sub_1ABCF9810(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF9818(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABCF9820);
  return result;
}

uint64_t sub_1ABCF982C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABCF9834);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1ABCF9838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCF9840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for Stock.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1ABCF98DC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Quote() + 76));
}

void sub_1ABCF9904(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 128);
}

uint64_t *sub_1ABCF9910(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1ABF30760();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1ABF2FF5C();
    v12(v9, v10, v11);
    sub_1ABCFC730();
    v12(&v9[*(int *)(v13 + 36)], &v10[*(int *)(v13 + 36)], v11);
    v14 = a3[6];
    v15 = a3[7];
    v16 = (char *)v7 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = (char *)v7 + v15;
    v19 = (char *)a2 + v15;
    v20 = sub_1ABF3094C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v12((char *)v7 + a3[8], (char *)a2 + a3[8], v11);
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    sub_1ABF2FF5C();
  }
  return v7;
}

void sub_1ABCF9A3C(_QWORD *a1@<X8>)
{
  *a1 = 0x656D756C6F76;
  a1[1] = 0xE600000000000000;
}

uint64_t destroy for MultiResolutionImage()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t storeEnumTagSinglePayload for StockMetadataManager.CacheEntry.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABCF9AC4 + 4 * byte_1ABF3F080[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABCF9AE4 + 4 * byte_1ABF3F085[v4]))();
}

_BYTE *sub_1ABCF9AC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABCF9AE4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABCF9AEC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABCF9AF4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABCF9AFC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABCF9B04(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for DeleteWatchlistIntent.Error(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_1ABCF9B60()
{
  return 0x6B636F7473;
}

uint64_t sub_1ABCF9B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABD15314(a1, a2, a3, a4);
}

uint64_t sub_1ABCF9B7C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABCF9B90(a1, a2);
}

uint64_t sub_1ABCF9B90@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12 = a2;
  sub_1ABCF4DA8(0, &qword_1ED346FD8, (uint64_t (*)(void))sub_1ABCF9D68, (uint64_t)&type metadata for HeadlineMetadata.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF9D68();
  sub_1ABF3235C();
  if (!v2)
  {
    v9 = v12;
    sub_1ABD9D7B0();
    sub_1ABCF9D04(&qword_1ED346F10, (uint64_t (*)(void))sub_1ABD43504, MEMORY[0x1E0DEAF40]);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ABCF9D04(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD9D7B0();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABCF9D68()
{
  unint64_t result;

  result = qword_1ED346928;
  if (!qword_1ED346928)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39A00, &type metadata for HeadlineMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346928);
  }
  return result;
}

uint64_t sub_1ABCF9DAC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABCF9DC0(a1, a2);
}

uint64_t sub_1ABCF9DC0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v27 = a2;
  sub_1ABCF4DA8(0, &qword_1ED346FD0, (uint64_t (*)(void))sub_1ABCFA02C, (uint64_t)&type metadata for HeadlineMetadata.StockEntityMetadata.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v24 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCFA02C();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v31 = 0;
  v10 = v5;
  v11 = sub_1ABF320E0();
  v13 = v12;
  v30 = 1;
  sub_1ABF2FF5C();
  v14 = sub_1ABF3208C();
  v16 = v15;
  v25 = v14;
  v29 = 2;
  sub_1ABF2FF5C();
  v26 = v16;
  sub_1ABF320F8();
  v18 = v17;
  v28 = 3;
  sub_1ABF320F8();
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  v23 = v26;
  v22 = v27;
  *v27 = v11;
  v22[1] = v13;
  v22[2] = v25;
  v22[3] = v23;
  v22[4] = v18;
  v22[5] = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1ABCFA02C()
{
  unint64_t result;

  result = qword_1ED346908;
  if (!qword_1ED346908)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39A50, &type metadata for HeadlineMetadata.StockEntityMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346908);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StockRecord(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t initializeWithCopy for StockRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t storeEnumTagSinglePayload for StockRecord.FeedConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABCFA18C + 4 * byte_1ABF4CFD8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABCFA1AC + 4 * byte_1ABF4CFDD[v4]))();
}

_BYTE *sub_1ABCFA18C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABCFA1AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABCFA1B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABCFA1BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABCFA1C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABCFA1CC(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1ABCFA1D8()
{
  return 0x444964656566;
}

uint64_t sub_1ABCFA1EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 >= 0xFE)
      return (*(uint64_t (**)(void))(v4 + 48))();
    v12 = *(unsigned __int8 *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 0x38);
    if (v12 >= 2)
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 120) & 0xFFFFFFF8) != 0)
    v8 = 2;
  else
    v8 = a2 - v6 + 1;
  if (v8 >= 0x10000)
    v9 = 4;
  else
    v9 = 2;
  if (v8 < 0x100)
    v9 = 1;
  if (v8 >= 2)
    v10 = v9;
  else
    v10 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1ABCFA268 + 4 * byte_1ABF36FD8[v10]))();
}

uint64_t storeEnumTagSinglePayload for Watchlist(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 42) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1ABCFA33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_1ABCFA348(a1, a2, v3[2], v3[3], v3[4], a3);
}

uint64_t sub_1ABCFA348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t result;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t (*v40)();
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t (*v68)();
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  int64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  int64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  int64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109[3];

  v90 = a6;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v97 = (uint64_t)&v86 - v13;
  v96 = type metadata accessor for WidgetQuote();
  v14 = MEMORY[0x1E0C80A78](v96);
  v94 = (int64_t *)((char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x1E0C80A78](v14);
  v93 = (int64_t *)((char *)&v86 - v17);
  MEMORY[0x1E0C80A78](v16);
  v95 = (uint64_t)&v86 - v18;
  sub_1ABCF5A54(0, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote, v11);
  MEMORY[0x1E0C80A78](v19);
  v99 = (uint64_t)&v86 - v20;
  v98 = type metadata accessor for Quote();
  v101 = *(_QWORD *)(v98 - 8);
  v21 = MEMORY[0x1E0C80A78](v98);
  v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v21);
  v106 = (uint64_t)&v86 - v25;
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v86 - v26;
  sub_1ABCFE340(0, &qword_1ED34DEC8, (unint64_t *)&qword_1ED34DEC0, (void (*)(uint64_t))type metadata accessor for Quote);
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (int64_t *)((char *)&v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v29);
  v100 = (int64_t *)((char *)&v86 - v32);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v102 = a3;
  v104 = a1;
  if ((sub_1ABD00B58(a3, a1) & 1) != 0)
  {
    result = sub_1ABCFBD5C(a4, a2);
    if ((result & 1) != 0)
      goto LABEL_46;
  }
  swift_beginAccess();
  v89 = a5 + 16;
  Strong = swift_weakLoadStrong();
  v35 = v104;
  if (Strong)
  {
    v109[0] = v104;
    v109[1] = a2;
    sub_1ABD3C69C(v109);
    swift_release();
  }
  if (*(_QWORD *)(v102 + 16) != *(_QWORD *)(v35 + 16))
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (!result)
    {
LABEL_46:
      v85 = v90;
      *v90 = v104;
      v85[1] = a2;
      return result;
    }
    v107 = v104;
    v108 = a2;
    sub_1ABD3C1E4(&v107);
LABEL_43:
    result = swift_release();
    goto LABEL_46;
  }
  v87 = a2;
  v36 = *(_QWORD *)(v102 + 64);
  v88 = v102 + 64;
  v37 = 1 << *(_BYTE *)(v102 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & v36;
  v91 = (unint64_t)(v37 + 63) >> 6;
  v86 = v91 - 1;
  result = sub_1ABF2FF5C();
  v103 = 0;
  v40 = type metadata accessor for Quote;
  v92 = v31;
  v41 = v101;
  if (!v39)
    goto LABEL_11;
LABEL_9:
  v42 = __clz(__rbit64(v39));
  v43 = (v39 - 1) & v39;
  v44 = v42 | (v103 << 6);
  while (2)
  {
    v45 = *(_QWORD *)(v102 + 56);
    v46 = (_QWORD *)(*(_QWORD *)(v102 + 48) + 16 * v44);
    v47 = v46[1];
    *v31 = *v46;
    v31[1] = v47;
    v48 = v45 + *(_QWORD *)(v41 + 72) * v44;
    sub_1ABCFC7E8(0, (unint64_t *)&qword_1ED34DEC0, (void (*)(uint64_t))v40);
    v50 = v49;
    sub_1ABCFC790(v48, (uint64_t)v31 + *(int *)(v49 + 48), (uint64_t (*)(_QWORD))v40);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v31, 0, 1, v50);
    sub_1ABF2FF5C();
    while (1)
    {
      v55 = (uint64_t)v31;
      v56 = v100;
      sub_1ABCFE2F0(v55, (uint64_t)v100, (uint64_t)&qword_1ED34DEC8, (uint64_t)&qword_1ED34DEC0, (uint64_t)v40, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABCFE340);
      sub_1ABCFC7E8(0, (unint64_t *)&qword_1ED34DEC0, (void (*)(uint64_t))v40);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v56, 1, v50) == 1)
        goto LABEL_45;
      v58 = *v56;
      v57 = v56[1];
      sub_1ABCFE2AC((uint64_t)v56 + *(int *)(v50 + 48), (uint64_t)v27, (uint64_t (*)(_QWORD))v40);
      v59 = v104;
      if (*(_QWORD *)(v104 + 16) && (v60 = sub_1ABD00F9C(v58, v57), (v61 & 1) != 0))
      {
        v62 = *(_QWORD *)(v59 + 56) + *(_QWORD *)(v41 + 72) * v60;
        v63 = v99;
        sub_1ABCFC790(v62, v99, (uint64_t (*)(_QWORD))v40);
        v64 = 0;
      }
      else
      {
        v64 = 1;
        v63 = v99;
      }
      v65 = v98;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v63, v64, 1, v98);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v63, 1, v65) == 1)
      {
        sub_1ABE5DBB8(v63);
LABEL_41:
        swift_beginAccess();
        if (!swift_weakLoadStrong())
        {
          sub_1ABCFC3BC((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
LABEL_45:
          result = swift_release();
          a2 = v87;
          goto LABEL_46;
        }
        a2 = v87;
        v107 = v104;
        v108 = v87;
        sub_1ABD3C1E4(&v107);
        swift_release();
        sub_1ABCFC3BC((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
        goto LABEL_43;
      }
      v105 = v43;
      v66 = v106;
      sub_1ABCFE2AC(v63, v106, (uint64_t (*)(_QWORD))v40);
      sub_1ABCFC790(v66, (uint64_t)v23, (uint64_t (*)(_QWORD))v40);
      v67 = v23[8];
      v68 = v40;
      v69 = (uint64_t)v93;
      *v93 = *(_QWORD *)v23;
      *(_BYTE *)(v69 + 8) = v67;
      v70 = v23[24];
      *(_QWORD *)(v69 + 16) = *((_QWORD *)v23 + 2);
      *(_BYTE *)(v69 + 24) = v70;
      v71 = v23[40];
      *(_QWORD *)(v69 + 32) = *((_QWORD *)v23 + 4);
      *(_BYTE *)(v69 + 40) = v71;
      v72 = *((_QWORD *)v23 + 15);
      *(_QWORD *)(v69 + 48) = *((_QWORD *)v23 + 14);
      *(_QWORD *)(v69 + 56) = v72;
      *(_BYTE *)(v69 + 64) = v23[128];
      v73 = v97;
      sub_1ABCFF5B4((uint64_t)&v23[*(int *)(v65 + 60)], v97);
      sub_1ABF2FF5C();
      sub_1ABCFC3BC((uint64_t)v23, (uint64_t (*)(_QWORD))v68);
      v74 = v65;
      v75 = v96;
      sub_1ABCFE2F0(v73, v69 + *(int *)(v96 + 36), (uint64_t)&qword_1ED34EAB0, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABCF5A54);
      v76 = (uint64_t)v27;
      v77 = v95;
      sub_1ABCFE2AC(v69, v95, (uint64_t (*)(_QWORD))type metadata accessor for WidgetQuote);
      sub_1ABCFC790(v76, (uint64_t)v23, (uint64_t (*)(_QWORD))v68);
      v78 = v23[8];
      v79 = (uint64_t)v94;
      *v94 = *(_QWORD *)v23;
      *(_BYTE *)(v79 + 8) = v78;
      v80 = v23[24];
      *(_QWORD *)(v79 + 16) = *((_QWORD *)v23 + 2);
      *(_BYTE *)(v79 + 24) = v80;
      v81 = v23[40];
      *(_QWORD *)(v79 + 32) = *((_QWORD *)v23 + 4);
      *(_BYTE *)(v79 + 40) = v81;
      v82 = *((_QWORD *)v23 + 15);
      *(_QWORD *)(v79 + 48) = *((_QWORD *)v23 + 14);
      *(_QWORD *)(v79 + 56) = v82;
      *(_BYTE *)(v79 + 64) = v23[128];
      sub_1ABCFF5B4((uint64_t)&v23[*(int *)(v74 + 60)], v73);
      sub_1ABF2FF5C();
      sub_1ABCFC3BC((uint64_t)v23, (uint64_t (*)(_QWORD))v68);
      sub_1ABCFE2F0(v73, v79 + *(int *)(v75 + 36), (uint64_t)&qword_1ED34EAB0, (uint64_t)MEMORY[0x1E0CB0870], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABCF5A54);
      sub_1ABCFE2AC(v79, v69, (uint64_t (*)(_QWORD))type metadata accessor for WidgetQuote);
      LOBYTE(v82) = _s10StocksCore11WidgetQuoteV2eeoiySbAC_ACtFZ_0(v77, v69);
      v83 = v69;
      v40 = v68;
      sub_1ABCFC3BC(v83, (uint64_t (*)(_QWORD))type metadata accessor for WidgetQuote);
      v84 = v77;
      v27 = (char *)v76;
      sub_1ABCFC3BC(v84, (uint64_t (*)(_QWORD))type metadata accessor for WidgetQuote);
      sub_1ABCFC3BC(v106, (uint64_t (*)(_QWORD))v68);
      if ((v82 & 1) == 0)
        goto LABEL_41;
      result = sub_1ABCFC3BC(v76, (uint64_t (*)(_QWORD))v68);
      v31 = v92;
      v39 = v105;
      v41 = v101;
      if (v105)
        goto LABEL_9;
LABEL_11:
      v51 = v103 + 1;
      if (__OFADD__(v103, 1))
      {
        __break(1u);
        goto LABEL_48;
      }
      if (v51 < v91)
      {
        v52 = *(_QWORD *)(v88 + 8 * v51);
        if (v52)
          goto LABEL_14;
        v53 = v103 + 2;
        ++v103;
        if (v51 + 1 < v91)
        {
          v52 = *(_QWORD *)(v88 + 8 * v53);
          if (v52)
            goto LABEL_17;
          v103 = v51 + 1;
          if (v51 + 2 < v91)
          {
            v52 = *(_QWORD *)(v88 + 8 * (v51 + 2));
            if (v52)
            {
              v51 += 2;
              goto LABEL_14;
            }
            v53 = v51 + 3;
            v103 = v51 + 2;
            if (v51 + 3 < v91)
              break;
          }
        }
      }
LABEL_28:
      sub_1ABCFC7E8(0, (unint64_t *)&qword_1ED34DEC0, (void (*)(uint64_t))v40);
      v50 = v54;
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v31, 1, 1, v54);
      v43 = 0;
    }
    v52 = *(_QWORD *)(v88 + 8 * v53);
    if (v52)
    {
LABEL_17:
      v51 = v53;
LABEL_14:
      v43 = (v52 - 1) & v52;
      v44 = __clz(__rbit64(v52)) + (v51 << 6);
      v103 = v51;
      continue;
    }
    break;
  }
  while (1)
  {
    v51 = v53 + 1;
    if (__OFADD__(v53, 1))
      break;
    if (v51 >= v91)
    {
      v103 = v86;
      goto LABEL_28;
    }
    v52 = *(_QWORD *)(v88 + 8 * v51);
    ++v53;
    if (v52)
      goto LABEL_14;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WidgetQuote()
{
  uint64_t result;

  result = qword_1ED34C920;
  if (!qword_1ED34C920)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t storeEnumTagSinglePayload for ChartRange(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1ABCFACFC + 4 * byte_1ABF4A050[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1ABCFAD30 + 4 * byte_1ABF4A04B[v4]))();
}

uint64_t sub_1ABCFAD30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCFAD38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABCFAD40);
  return result;
}

uint64_t sub_1ABCFAD4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABCFAD54);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1ABCFAD58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCFAD60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for HeadlineMetadata.StockEntityMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABCFADB8 + 4 * byte_1ABF39723[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABCFADEC + 4 * byte_1ABF3971E[v4]))();
}

uint64_t sub_1ABCFADEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCFADF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABCFADFCLL);
  return result;
}

uint64_t sub_1ABCFAE08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABCFAE10);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABCFAE14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCFAE1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for HeadlineScores.StockEntityCohort.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABCFAE74 + 4 * byte_1ABF48E09[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABCFAEA8 + 4 * byte_1ABF48E04[v4]))();
}

uint64_t sub_1ABCFAEA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCFAEB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABCFAEB8);
  return result;
}

uint64_t sub_1ABCFAEC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABCFAECCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABCFAED0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCFAED8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABCFAEE4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABCFAF20 + 4 * byte_1ABF48E00[*v0]))(0x746E456B636F7473, 0xED00004449797469);
}

uint64_t sub_1ABCFAF20()
{
  return 0x736B63696C63;
}

uint64_t sub_1ABCFAF34()
{
  return 0x6973736572706D69;
}

uint64_t sub_1ABCFAF54()
{
  return 0x6D617473656D6974;
}

uint64_t getEnumTagSinglePayload for CurrencyConversion.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1ABCFB000(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFB00C(a1, a2);
}

uint64_t sub_1ABCFB00C(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v4 = (void *)sub_1ABF31114();
  sub_1ABF31108();

  v5 = swift_allocObject();
  swift_weakInit();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = v5;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1ABCFA33C;
  *(_QWORD *)(v7 + 24) = v6;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v8 = (void *)sub_1ABF31114();
  v9 = sub_1ABF31180();
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_1ABCFB118(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABCFB120()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x70795479726F7473;
  if (*v0 != 1)
    v1 = 25705;
  if (*v0)
    return v1;
  else
    return 0x4479616C70736964;
}

uint64_t sub_1ABCFB180(uint64_t a1, unint64_t a2)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  id v40;
  uint64_t v42[2];
  uint64_t v43;

  v43 = MEMORY[0x1E0DEE9E8];
  if (qword_1ED34FD78 != -1)
    goto LABEL_28;
  while (1)
  {
    v40 = (id)qword_1ED368428;
    v3 = objc_msgSend((id)qword_1ED368428, sel_localizations);
    v4 = sub_1ABF31A08();

    v39 = *(_QWORD *)(v4 + 16);
    if (!v39)
      break;
    v5 = 0;
    while (v5 < *(_QWORD *)(v4 + 16))
    {
      v6 = (uint64_t *)(v4 + 32 + 16 * v5);
      v7 = *v6;
      v8 = v6[1];
      sub_1ABF2FF5C();
      v9 = (void *)sub_1ABF31780();
      v10 = (void *)sub_1ABF31780();
      v11 = (void *)sub_1ABF31780();
      v12 = (void *)sub_1ABF31780();
      v13 = objc_msgSend(v40, sel_localizedStringForKey_value_table_localization_, v9, v10, v11, v12);

      sub_1ABF317A4();
      v14 = sub_1ABF31804();
      v16 = v15;
      swift_bridgeObjectRelease();
      v17 = v14 == 32 && v16 == 0xE100000000000000;
      if (v17 || (sub_1ABF3223C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1ED346E40 != -1)
          swift_once();
        v18 = sub_1ABF3133C();
        __swift_project_value_buffer(v18, (uint64_t)qword_1ED368348);
        swift_bridgeObjectRetain_n();
        sub_1ABF2FF5C();
        v19 = sub_1ABF31324();
        v20 = sub_1ABF31BE8();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = swift_slowAlloc();
          v22 = swift_slowAlloc();
          v42[0] = v22;
          *(_DWORD *)v21 = 136315394;
          sub_1ABF2FF5C();
          *(_QWORD *)(v21 + 4) = sub_1ABD1FE2C(a1, a2, v42);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v21 + 12) = 2080;
          sub_1ABF2FF5C();
          *(_QWORD *)(v21 + 14) = sub_1ABD1FE2C(v7, v8, v42);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1ABCEF000, v19, v20, "Could not find unnecessary words for key=%s, localizations=%s", (uint8_t *)v21, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1AF438FFC](v22, -1, -1);
          MEMORY[0x1AF438FFC](v21, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_1ED346E40 != -1)
          swift_once();
        v23 = sub_1ABF3133C();
        __swift_project_value_buffer(v23, (uint64_t)qword_1ED368348);
        swift_bridgeObjectRetain_n();
        v24 = sub_1ABF31324();
        v25 = sub_1ABF31BDC();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = swift_slowAlloc();
          v27 = swift_slowAlloc();
          v42[0] = v27;
          *(_DWORD *)v26 = 136315138;
          sub_1ABF2FF5C();
          *(_QWORD *)(v26 + 4) = sub_1ABD1FE2C(v14, v16, v42);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1ABCEF000, v24, v25, "Found unnecessary words: %s", (uint8_t *)v26, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AF438FFC](v27, -1, -1);
          MEMORY[0x1AF438FFC](v26, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v42[0] = v14;
        v42[1] = v16;
        sub_1ABEC8EF0();
        v28 = sub_1ABF31B70();
        swift_bridgeObjectRelease();
        v29 = *(_QWORD *)(v28 + 16);
        if (v29)
        {
          v30 = (uint64_t *)(v28 + 56);
          do
          {
            v31 = *(v30 - 3);
            v32 = *(v30 - 2);
            v33 = *(v30 - 1);
            v34 = *v30;
            sub_1ABF2FF5C();
            v35 = MEMORY[0x1AF437A3C](v31, v32, v33, v34);
            v37 = v36;
            swift_bridgeObjectRelease();
            sub_1ABCFB740(v42, v35, v37);
            swift_bridgeObjectRelease();
            v30 += 4;
            --v29;
          }
          while (v29);
        }
        swift_bridgeObjectRelease();
      }
      if (++v5 == v39)
      {
        swift_bridgeObjectRelease();
        return v43;
      }
    }
    __break(1u);
LABEL_28:
    swift_once();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1ABCFB740(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1ABF32308();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  v8 = sub_1ABF32338();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1ABF3223C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      sub_1ABF2FF5C();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1ABF3223C() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  sub_1ABF2FF5C();
  sub_1ABCFB8EC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1ABCFB8EC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1ABCFBA84();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1ABE0A590();
      goto LABEL_22;
    }
    sub_1ABD33250();
  }
  v11 = *v4;
  sub_1ABF32308();
  sub_1ABF31840();
  result = sub_1ABF32338();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1ABF3223C(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1ABF32290();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1ABF3223C();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1ABCFBA84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1ABE0D95C();
  v3 = sub_1ABF31E58();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = sub_1ABF2FF68();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1ABF32308();
      sub_1ABF31840();
      result = sub_1ABF32338();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1ABCFBD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  double *v52;
  char v53;
  double *v54;
  int v55;
  int64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t *v62;
  char *v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;

  sub_1ABCFC730();
  v65 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v68 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v56 - v7;
  v69 = (int *)type metadata accessor for Chart(0);
  v67 = *((_QWORD *)v69 - 1);
  v9 = MEMORY[0x1E0C80A78](v69);
  v11 = (int64_t *)((char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v13 = (int64_t *)((char *)&v56 - v12);
  sub_1ABCFE340(0, &qword_1ED34CA80, &qword_1ED34DEB8, v14);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (int64_t *)((char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v16);
  v21 = (int64_t *)((char *)&v56 - v20);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v64 = 0;
  v22 = *(_QWORD *)(a1 + 64);
  v57 = a1 + 64;
  v23 = 1 << *(_BYTE *)(a1 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v58 = (unint64_t)(v23 + 63) >> 6;
  v59 = a1;
  v56 = v58 - 1;
  v61 = v13;
  v62 = v11;
  v60 = (int64_t *)((char *)&v56 - v20);
  v63 = v8;
  if (!v25)
    goto LABEL_8;
LABEL_6:
  v66 = (v25 - 1) & v25;
  v26 = __clz(__rbit64(v25)) | (v64 << 6);
  while (2)
  {
    v27 = *(_QWORD *)(a1 + 56);
    v28 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v26);
    v29 = v28[1];
    *v18 = *v28;
    v18[1] = v29;
    v30 = v27 + *(_QWORD *)(v67 + 72) * v26;
    sub_1ABCFC7E8(0, &qword_1ED34DEB8, (void (*)(uint64_t))type metadata accessor for Chart);
    v32 = v31;
    sub_1ABCFC790(v30, (uint64_t)v18 + *(int *)(v31 + 48), type metadata accessor for Chart);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v18, 0, 1, v32);
    sub_1ABF2FF5C();
    while (1)
    {
      sub_1ABCFE2F0((uint64_t)v18, (uint64_t)v21, (uint64_t)&qword_1ED34CA80, (uint64_t)&qword_1ED34DEB8, (uint64_t)type metadata accessor for Chart, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABCFE340);
      sub_1ABCFC7E8(0, &qword_1ED34DEB8, (void (*)(uint64_t))type metadata accessor for Chart);
      v37 = 1;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v21, 1, v32) == 1)
        return v37;
      v38 = *v21;
      v39 = v21[1];
      sub_1ABCFE2AC((uint64_t)v21 + *(int *)(v32 + 48), (uint64_t)v13, type metadata accessor for Chart);
      v40 = sub_1ABD00F9C(v38, v39);
      v42 = v41;
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0)
        goto LABEL_48;
      sub_1ABCFC790(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v67 + 72) * v40, (uint64_t)v11, type metadata accessor for Chart);
      v43 = sub_1ABCFF84C(*v11, *v13);
      v44 = (uint64_t)v63;
      if ((v43 & 1) == 0)
        goto LABEL_47;
      v45 = v69[5];
      v46 = (uint64_t)v11 + v45;
      v47 = (uint64_t)v13 + v45;
      sub_1ABF30760();
      sub_1ABCFE1EC(&qword_1ED34CCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v48 = sub_1ABF31720();
      sub_1ABCFC790(v46, v44, (uint64_t (*)(_QWORD))sub_1ABCFC730);
      sub_1ABCFC790(v47, v68, (uint64_t (*)(_QWORD))sub_1ABCFC730);
      if ((v48 & 1) == 0)
      {
        sub_1ABCFC3BC(v68, (uint64_t (*)(_QWORD))sub_1ABCFC730);
        sub_1ABCFC3BC(v44, (uint64_t (*)(_QWORD))sub_1ABCFC730);
        v13 = v61;
        v11 = v62;
LABEL_47:
        sub_1ABCFC3BC((uint64_t)v11, type metadata accessor for Chart);
LABEL_48:
        sub_1ABCFC3BC((uint64_t)v13, type metadata accessor for Chart);
        return 0;
      }
      v49 = v68;
      v50 = sub_1ABF31720();
      sub_1ABCFC3BC(v49, (uint64_t (*)(_QWORD))sub_1ABCFC730);
      sub_1ABCFC3BC(v44, (uint64_t (*)(_QWORD))sub_1ABCFC730);
      v13 = v61;
      v11 = v62;
      v21 = v60;
      if ((v50 & 1) == 0)
        goto LABEL_47;
      v51 = v69[6];
      v52 = (double *)((char *)v62 + v51);
      v53 = *((_BYTE *)v62 + v51 + 8);
      v54 = (double *)((char *)v61 + v51);
      v55 = *((unsigned __int8 *)v61 + v51 + 8);
      if ((v53 & 1) != 0)
      {
        if (!v55)
          goto LABEL_47;
      }
      else
      {
        if (*v52 != *v54)
          LOBYTE(v55) = 1;
        if ((v55 & 1) != 0)
          goto LABEL_47;
      }
      if ((MEMORY[0x1AF436B60]((char *)v62 + v69[7], (char *)v61 + v69[7]) & 1) == 0
        || (sub_1ABF30718() & 1) == 0
        || *(_QWORD *)(*(uint64_t *)((char *)v11 + v69[9]) + 16) != *(_QWORD *)(*(uint64_t *)((char *)v13 + v69[9]) + 16))
      {
        goto LABEL_47;
      }
      sub_1ABCFC3BC((uint64_t)v11, type metadata accessor for Chart);
      result = sub_1ABCFC3BC((uint64_t)v13, type metadata accessor for Chart);
      a1 = v59;
      v25 = v66;
      if (v66)
        goto LABEL_6;
LABEL_8:
      v33 = v64 + 1;
      if (__OFADD__(v64, 1))
      {
        __break(1u);
        goto LABEL_52;
      }
      if (v33 < v58)
      {
        v34 = *(_QWORD *)(v57 + 8 * v33);
        if (v34)
          goto LABEL_11;
        v35 = v64 + 2;
        ++v64;
        if (v33 + 1 < v58)
        {
          v34 = *(_QWORD *)(v57 + 8 * v35);
          if (v34)
            goto LABEL_14;
          v64 = v33 + 1;
          if (v33 + 2 < v58)
          {
            v34 = *(_QWORD *)(v57 + 8 * (v33 + 2));
            if (v34)
            {
              v33 += 2;
              goto LABEL_11;
            }
            v64 = v33 + 2;
            if (v33 + 3 < v58)
            {
              v34 = *(_QWORD *)(v57 + 8 * (v33 + 3));
              if (v34)
              {
                v33 += 3;
                goto LABEL_11;
              }
              v35 = v33 + 4;
              v64 = v33 + 3;
              if (v33 + 4 < v58)
                break;
            }
          }
        }
      }
LABEL_28:
      sub_1ABCFC7E8(0, &qword_1ED34DEB8, (void (*)(uint64_t))type metadata accessor for Chart);
      v32 = v36;
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v18, 1, 1, v36);
      v66 = 0;
    }
    v34 = *(_QWORD *)(v57 + 8 * v35);
    if (v34)
    {
LABEL_14:
      v33 = v35;
LABEL_11:
      v66 = (v34 - 1) & v34;
      v26 = __clz(__rbit64(v34)) + (v33 << 6);
      v64 = v33;
      continue;
    }
    break;
  }
  while (1)
  {
    v33 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v33 >= v58)
    {
      v64 = v56;
      goto LABEL_28;
    }
    v34 = *(_QWORD *)(v57 + 8 * v33);
    ++v35;
    if (v34)
      goto LABEL_11;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1ABCFC3BC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1ABCFC3F8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[13];
  v5 = sub_1ABF30760();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[14];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = a1 + a2[15];
  if (!v7(v9, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  v10 = a1 + a2[20];
  if (!v7(v10, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  v11 = a1 + a2[21];
  v12 = v7(v11, 1, v5);
  v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v12)
    v13(v11, v5);
  v13(a1 + a2[22], v5);
  v14 = a1 + a2[23];
  if (!v7(v14, 1, v5))
    v13(v14, v5);
  v15 = a1 + a2[24];
  v16 = sub_1ABF3094C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

uint64_t sub_1ABCFC578(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1ABF30760();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  sub_1ABCFC730();
  v6(v4 + *(int *)(v7 + 36), v5);
  v8 = a1 + a2[7];
  v9 = sub_1ABF3094C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v6(a1 + a2[8], v5);
  return swift_bridgeObjectRelease();
}

char *sub_1ABCFC62C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1ABF30760();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  sub_1ABF2FF5C();
  v10(v7, v8, v9);
  sub_1ABCFC730();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = &a1[v13];
  v17 = &a2[v13];
  v18 = sub_1ABF3094C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  sub_1ABF2FF5C();
  return a1;
}

void sub_1ABCFC730()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE98)
  {
    sub_1ABF30760();
    sub_1ABD47E5C();
    v0 = sub_1ABF31714();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE98);
  }
}

uint64_t sub_1ABCFC790(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Chart(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED34DA30);
}

void sub_1ABCFC7E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1ABCFC848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int *v84;
  int v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  uint64_t v95;
  int v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(uint64_t, uint64_t, uint64_t);
  char *v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  unint64_t v112;
  uint64_t v113;
  int *v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  unint64_t v132;
  int *v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  void (*v157)(char *, uint64_t);
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  void (*v173)(char *, uint64_t);
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  int *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;

  v1 = v0;
  sub_1ABD226F0();
  v3 = MEMORY[0x1E0C80A78](v2);
  v171 = (uint64_t)&v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v151 = (char *)&v143 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v152 = (uint64_t)&v143 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v149 = (uint64_t)&v143 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v170 = (uint64_t)&v143 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v168 = (unint64_t)&v143 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v156 = (char *)&v143 - v16;
  MEMORY[0x1E0C80A78](v15);
  v166 = (uint64_t)&v143 - v17;
  v176 = sub_1ABF30760();
  v174 = *(_QWORD *)(v176 - 8);
  v18 = MEMORY[0x1E0C80A78](v176);
  v150 = (char *)&v143 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v145 = (char *)&v143 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v144 = (char *)&v143 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v148 = (char *)&v143 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v147 = (char *)&v143 - v27;
  MEMORY[0x1E0C80A78](v26);
  v146 = (char *)&v143 - v28;
  v178 = (int *)type metadata accessor for Quote();
  v29 = MEMORY[0x1E0C80A78](v178);
  v169 = (uint64_t)&v143 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v155 = (uint64_t)&v143 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v172 = (char *)&v143 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v154 = (uint64_t)&v143 - v36;
  MEMORY[0x1E0C80A78](v35);
  v165 = (uint64_t)&v143 - v37;
  v167 = sub_1ABF304FC();
  v164 = *(_QWORD *)(v167 - 8);
  MEMORY[0x1E0C80A78](v167);
  v163 = (uint64_t)&v143 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1ABF30514();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v42 = (char *)&v143 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v43);
  sub_1ABCF4DA8(0, &qword_1ED34E780, (uint64_t (*)(void))sub_1ABE470AC, MEMORY[0x1E0DEB070], MEMORY[0x1E0CAFAE8]);
  v45 = v44;
  v46 = *(_QWORD *)(v44 - 8);
  v47 = MEMORY[0x1E0C80A78](v44);
  v153 = (char *)&v143 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x1E0C80A78](v47);
  v162 = (char *)&v143 - v50;
  v51 = MEMORY[0x1E0C80A78](v49);
  v53 = (char *)&v143 - v52;
  MEMORY[0x1E0C80A78](v51);
  v55 = (char *)&v143 - v54;
  sub_1ABF307F0();
  v160 = sub_1ABE470AC();
  sub_1ABF304B4();
  v182 = 2;
  sub_1ABE470F0();
  v57 = v56;
  v58 = sub_1ABCFE1EC(&qword_1ED34E7D0, (uint64_t (*)(uint64_t))sub_1ABE470F0, MEMORY[0x1E0DECD88]);
  v159 = v57;
  v158 = v58;
  sub_1ABF30508();
  MEMORY[0x1AF4366EC](v42, v45);
  v59 = *(void (**)(char *, uint64_t))(v40 + 8);
  v161 = v39;
  v59(v42, v39);
  v173 = *(void (**)(char *, uint64_t))(v46 + 8);
  v173(v53, v45);
  v182 = 0;
  v183 = 0xE000000000000000;
  v60 = *(_BYTE *)(v1 + 8);
  v177 = v45;
  v175 = v55;
  v157 = v59;
  if ((v60 & 1) != 0)
  {
    sub_1ABF31870();
  }
  else
  {
    v181 = *(_QWORD *)v1;
    sub_1ABE4714C();
    sub_1ABF30190();
    sub_1ABF2FF5C();
    sub_1ABF31870();
    swift_bridgeObjectRelease_n();
  }
  v61 = v153;
  sub_1ABF31870();
  v63 = v182;
  v62 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    sub_1ABF31870();
  }
  else
  {
    v181 = *(_QWORD *)(v1 + 16);
    sub_1ABE4714C();
    sub_1ABF30190();
    sub_1ABF2FF5C();
    sub_1ABF31870();
    swift_bridgeObjectRelease_n();
  }
  sub_1ABF31870();
  v182 = v63;
  v183 = v62;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v65 = v182;
  v64 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  v66 = *(_QWORD *)(v1 + 120);
  if (v66)
  {
    v179 = *(_QWORD *)(v1 + 112);
    v180 = v66;
    sub_1ABF31F6C();
  }
  else
  {
    sub_1ABF31870();
  }
  sub_1ABF31870();
  v182 = v65;
  v183 = v64;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v68 = v182;
  v67 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  v69 = *(_QWORD *)(v1 + 32);
  v70 = *(_BYTE *)(v1 + 40);
  sub_1ABF307F0();
  sub_1ABF304B4();
  v179 = 3;
  sub_1ABF30508();
  v71 = v177;
  MEMORY[0x1AF4366EC](v42, v177);
  v157(v42, v161);
  v72 = v173;
  v173(v61, v71);
  v73 = v163;
  sub_1ABF304F0();
  v74 = v162;
  MEMORY[0x1AF4366E0](v73, v71);
  (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v73, v167);
  v72(v53, v71);
  if ((v70 & 1) != 0)
  {
    sub_1ABF31870();
  }
  else
  {
    v181 = v69;
    sub_1ABE4714C();
    sub_1ABF30190();
    sub_1ABF2FF5C();
    sub_1ABF31870();
    swift_bridgeObjectRelease_n();
  }
  v75 = v174;
  v72(v74, v71);
  sub_1ABF31870();
  v182 = v68;
  v183 = v67;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v77 = v182;
  v76 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  if (*(_BYTE *)(v1 + v178[16]) == 7)
  {
    sub_1ABF31870();
  }
  else
  {
    LOBYTE(v179) = *(_BYTE *)(v1 + v178[16]);
    sub_1ABF31F6C();
  }
  v78 = v176;
  v182 = v77;
  v183 = v76;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v79 = v182;
  v162 = (char *)v183;
  v80 = *(unsigned __int8 *)(v1 + 56);
  v81 = v165;
  sub_1ABCFC790(v1, v165, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  v167 = v79;
  if (v80 != 1)
  {
    sub_1ABCFC3BC(v81, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v83 = v154;
    sub_1ABCFC790(v1, v154, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    goto LABEL_21;
  }
  v82 = *(unsigned __int8 *)(v81 + 72);
  sub_1ABCFC3BC(v81, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  v83 = v154;
  sub_1ABCFC790(v1, v154, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  if (v82 != 1)
  {
LABEL_21:
    sub_1ABCFC3BC(v83, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    goto LABEL_22;
  }
  v84 = v178;
  v85 = *(unsigned __int8 *)(v83 + v178[17]);
  sub_1ABCFC3BC(v83, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  v86 = (uint64_t)v172;
  if (v85 == 7)
  {
    v87 = 0xEA00000000006C69;
    v88 = 0x6E203A7265746661;
    goto LABEL_32;
  }
LABEL_22:
  v182 = 0;
  v183 = 0xE000000000000000;
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    sub_1ABF31870();
  }
  else
  {
    v181 = *(_QWORD *)(v1 + 48);
    sub_1ABE4714C();
    sub_1ABF30190();
    sub_1ABF2FF5C();
    sub_1ABF31870();
    swift_bridgeObjectRelease_n();
  }
  sub_1ABF31870();
  v182 = 0x28203A7265746661;
  v183 = 0xE800000000000000;
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  v90 = v182;
  v89 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  if ((*(_BYTE *)(v1 + 72) & 1) != 0)
  {
    sub_1ABF31870();
  }
  else
  {
    v181 = *(_QWORD *)(v1 + 64);
    sub_1ABE4714C();
    sub_1ABF30190();
    sub_1ABF2FF5C();
    sub_1ABF31870();
    swift_bridgeObjectRelease_n();
  }
  sub_1ABF31870();
  v182 = v90;
  v183 = v89;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v92 = v182;
  v91 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  if (*(_BYTE *)(v1 + v178[17]) == 7)
  {
    sub_1ABF31870();
  }
  else
  {
    LOBYTE(v179) = *(_BYTE *)(v1 + v178[17]);
    sub_1ABF31F6C();
  }
  v182 = v92;
  v183 = v91;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  v88 = v182;
  v87 = v183;
  v84 = v178;
  v86 = (uint64_t)v172;
LABEL_32:
  v93 = *(unsigned __int8 *)(v1 + 88);
  sub_1ABCFC790(v1, v86, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  v172 = (char *)v87;
  v165 = v88;
  if (v93 != 1)
  {
    sub_1ABCFC3BC(v86, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v95 = v155;
    sub_1ABCFC790(v1, v155, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    goto LABEL_37;
  }
  v94 = *(unsigned __int8 *)(v86 + 104);
  sub_1ABCFC3BC(v86, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  v95 = v155;
  sub_1ABCFC790(v1, v155, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  if (v94 != 1)
  {
LABEL_37:
    sub_1ABCFC3BC(v95, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    goto LABEL_38;
  }
  v96 = *(unsigned __int8 *)(v95 + v84[18]);
  sub_1ABCFC3BC(v95, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  if (v96 == 7)
  {
    v164 = 0xE800000000000000;
    v163 = 0x6C696E203A657270;
    goto LABEL_48;
  }
LABEL_38:
  v182 = 0;
  v183 = 0xE000000000000000;
  if ((*(_BYTE *)(v1 + 88) & 1) != 0)
  {
    sub_1ABF31870();
  }
  else
  {
    v181 = *(_QWORD *)(v1 + 80);
    sub_1ABE4714C();
    sub_1ABF30190();
    sub_1ABF2FF5C();
    sub_1ABF31870();
    swift_bridgeObjectRelease_n();
  }
  sub_1ABF31870();
  v182 = 0x28203A657270;
  v183 = 0xE600000000000000;
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  v98 = v182;
  v97 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  if ((*(_BYTE *)(v1 + 104) & 1) != 0)
  {
    sub_1ABF31870();
  }
  else
  {
    v181 = *(_QWORD *)(v1 + 96);
    sub_1ABE4714C();
    sub_1ABF30190();
    sub_1ABF2FF5C();
    sub_1ABF31870();
    swift_bridgeObjectRelease_n();
  }
  sub_1ABF31870();
  v182 = v98;
  v183 = v97;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v100 = v182;
  v99 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  if (*(_BYTE *)(v1 + v178[18]) == 7)
  {
    sub_1ABF31870();
  }
  else
  {
    LOBYTE(v179) = *(_BYTE *)(v1 + v178[18]);
    sub_1ABF31F6C();
  }
  v182 = v100;
  v183 = v99;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  v163 = v182;
  v164 = v183;
  v84 = v178;
LABEL_48:
  v182 = 0;
  v183 = 0xE000000000000000;
  LOBYTE(v179) = *(_BYTE *)(v1 + 128);
  sub_1ABF31F6C();
  sub_1ABF31870();
  v182 = 0x203A74656B72616DLL;
  v183 = 0xE900000000000028;
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  v102 = v182;
  v101 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  v103 = v166;
  sub_1ABCFC790(v1 + v84[13], v166, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  v104 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
  if (v104(v103, 1, v78) == 1)
  {
    sub_1ABCFC3BC(v103, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABF31870();
  }
  else
  {
    v105 = v146;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v146, v103, v78);
    sub_1ABF31F6C();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v105, v78);
  }
  v106 = (uint64_t)v156;
  sub_1ABF31870();
  sub_1ABCFC790(v1 + v84[14], v106, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  if (v104(v106, 1, v78) == 1)
  {
    sub_1ABCFC3BC(v106, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABF31870();
  }
  else
  {
    v107 = v147;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v147, v106, v78);
    sub_1ABF31F6C();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v107, v78);
  }
  sub_1ABF31870();
  v182 = v102;
  v183 = v101;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v109 = v182;
  v108 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  v110 = v168;
  sub_1ABCFC790(v1 + v178[15], v168, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  if (v104(v110, 1, v78) == 1)
  {
    sub_1ABCFC3BC(v110, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABF31870();
  }
  else
  {
    v111 = v148;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v148, v110, v78);
    sub_1ABF31F6C();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v111, v78);
  }
  sub_1ABF31870();
  v182 = v109;
  v183 = v108;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v113 = v182;
  v112 = v183;
  v114 = v178;
  sub_1ABF3094C();
  sub_1ABCFE1EC(&qword_1ED34CD00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB14A8]);
  sub_1ABF321F4();
  v182 = v113;
  v183 = v112;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  v115 = v114;
  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  v166 = v182;
  v168 = v183;
  v116 = v1 + v114[20];
  v117 = v170;
  sub_1ABCFC790(v116, v170, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  LODWORD(v113) = v104(v117, 1, v78);
  sub_1ABCFC3BC(v117, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  v118 = v169;
  sub_1ABCFC790(v1, v169, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  if ((_DWORD)v113 == 1)
  {
    v119 = v149;
    sub_1ABCFC790(v118 + v115[21], v149, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABCFC3BC(v118, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v120 = v104(v119, 1, v78);
    sub_1ABCFC3BC(v119, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    if (v120 == 1)
    {
      v121 = 0x73676E696E726165;
      goto LABEL_68;
    }
  }
  else
  {
    sub_1ABCFC3BC(v118, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  }
  v182 = 0;
  v183 = 0xE000000000000000;
  sub_1ABF31E94();
  sub_1ABF31870();
  v122 = v152;
  sub_1ABCFC790(v116, v152, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  v123 = v176;
  if (v104(v122, 1, v176) == 1)
  {
    sub_1ABCFC3BC(v122, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABF31870();
  }
  else
  {
    v124 = v174;
    v125 = v144;
    (*(void (**)(char *, uint64_t, uint64_t))(v174 + 32))(v144, v122, v123);
    sub_1ABF31F6C();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v125, v123);
  }
  v126 = (uint64_t)v151;
  sub_1ABF31870();
  sub_1ABCFC790(v1 + v115[21], v126, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  if (v104(v126, 1, v123) == 1)
  {
    sub_1ABCFC3BC(v126, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABF31870();
  }
  else
  {
    v127 = v174;
    v128 = v145;
    (*(void (**)(char *, uint64_t, uint64_t))(v174 + 32))(v145, v126, v123);
    sub_1ABF31F6C();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v123);
  }
  v121 = v182;
LABEL_68:
  v182 = 0;
  v183 = 0xE000000000000000;
  v129 = v1 + v115[19];
  v130 = *(_BYTE *)(v129 + 8);
  v170 = v121;
  if ((v130 & 1) != 0)
  {
    sub_1ABF31870();
  }
  else
  {
    v181 = *(_QWORD *)v129;
    sub_1ABE4714C();
    sub_1ABF30190();
    sub_1ABF2FF5C();
    sub_1ABF31870();
    swift_bridgeObjectRelease_n();
  }
  sub_1ABF31870();
  v182 = 0x3A68736572666572;
  v183 = 0xEA00000000002820;
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  v131 = v182;
  v132 = v183;
  v182 = 0x20746E65696C63;
  v183 = 0xE700000000000000;
  v133 = v178;
  sub_1ABCFE1EC(&qword_1ED34CCC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  v134 = v176;
  sub_1ABF321F4();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  v182 = v131;
  v183 = v132;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v136 = v182;
  v135 = v183;
  v182 = 0;
  v183 = 0xE000000000000000;
  sub_1ABF31870();
  v137 = v171;
  sub_1ABCFC790(v1 + v133[23], v171, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  if (v104(v137, 1, v134) == 1)
  {
    sub_1ABCFC3BC(v137, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABF31870();
  }
  else
  {
    v138 = v174;
    v139 = v150;
    (*(void (**)(char *, uint64_t, uint64_t))(v174 + 32))(v150, v137, v134);
    sub_1ABF31F6C();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v139, v134);
  }
  v140 = v177;
  v182 = v136;
  v183 = v135;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  v182 = 0;
  v183 = 0xE000000000000000;
  sub_1ABF31E94();
  swift_bridgeObjectRelease();
  v182 = 0x2865746F7551;
  v183 = 0xE600000000000000;
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  v141 = v182;
  v173(v175, v140);
  return v141;
}

uint64_t type metadata accessor for Quote()
{
  uint64_t result;

  result = qword_1ED34DA70;
  if (!qword_1ED34DA70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABCFE1EC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1AF438F30](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABCFE22C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1AF438F30](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABCFE26C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1ABF30760();
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABCFE2AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1ABCFE2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void sub_1ABCFE340(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1ABCFC7E8(255, a3, a4);
    v5 = sub_1ABF31D5C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1ABCFE394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  char *v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  int v95;
  uint64_t v96;
  unsigned int (*v97)(uint64_t, uint64_t, uint64_t);
  void (*v98)(char *, uint64_t);
  int *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v106;
  char *v107;
  char v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  int v111;
  int v112;
  char v113;
  uint64_t v114;
  int v115;
  int v116;
  char v117;
  uint64_t v118;
  int v119;
  int v120;
  char v121;
  uint64_t v122;
  double *v123;
  char v124;
  double *v125;
  int v126;
  int *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char v138;
  void (*v139)(char *, uint64_t);
  int *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char v151;
  void (*v152)(char *, uint64_t);
  int *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char v164;
  void (*v165)(char *, uint64_t);
  uint64_t v166;
  unsigned int (*v167)(uint64_t, uint64_t, uint64_t);
  int *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;

  v4 = sub_1ABF30760();
  v189 = *(_QWORD *)(v4 - 8);
  v190 = v4;
  MEMORY[0x1E0C80A78](v4);
  v187 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCFF7EC();
  v188 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v183 = (uint64_t)&v166 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v184 = (uint64_t)&v166 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v185 = (uint64_t)&v166 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v186 = (char *)&v166 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v166 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v166 - v18;
  sub_1ABD226F0();
  v21 = MEMORY[0x1E0C80A78](v20);
  v22 = MEMORY[0x1E0C80A78](v21);
  v23 = MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  v25 = MEMORY[0x1E0C80A78]((char *)&v166 - v24);
  v26 = MEMORY[0x1E0C80A78](v25);
  v27 = MEMORY[0x1E0C80A78](v26);
  v28 = MEMORY[0x1E0C80A78](v27);
  v29 = MEMORY[0x1E0C80A78](v28);
  v30 = MEMORY[0x1E0C80A78](v29);
  v31 = MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v166 - v32;
  v34 = MEMORY[0x1E0C80A78](v31);
  v35 = MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v166 - v36;
  v38 = MEMORY[0x1E0C80A78](v35);
  v40 = (char *)&v166 - v39;
  v41 = MEMORY[0x1E0C80A78](v38);
  v43 = (char *)&v166 - v42;
  v44 = MEMORY[0x1E0C80A78](v41);
  v46 = (char *)&v166 - v45;
  v47 = MEMORY[0x1E0C80A78](v44);
  v49 = (char *)&v166 - v48;
  v50 = MEMORY[0x1E0C80A78](v47);
  v61 = a2;
  v63 = (char *)&v166 - v62;
  v64 = *(_BYTE *)(v61 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(v61 + 8))
      goto LABEL_71;
  }
  else
  {
    if (*(double *)a1 != *(double *)v61)
      v64 = 1;
    if ((v64 & 1) != 0)
      goto LABEL_71;
  }
  v65 = *(_BYTE *)(v61 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(v61 + 24))
      goto LABEL_71;
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(v61 + 16))
      v65 = 1;
    if ((v65 & 1) != 0)
      goto LABEL_71;
  }
  v66 = *(_BYTE *)(v61 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(v61 + 40))
      goto LABEL_71;
  }
  else
  {
    if (*(double *)(a1 + 32) != *(double *)(v61 + 32))
      v66 = 1;
    if ((v66 & 1) != 0)
      goto LABEL_71;
  }
  v67 = *(_BYTE *)(v61 + 56);
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(v61 + 56))
      goto LABEL_71;
  }
  else
  {
    if (*(double *)(a1 + 48) != *(double *)(v61 + 48))
      v67 = 1;
    if ((v67 & 1) != 0)
      goto LABEL_71;
  }
  v68 = *(_BYTE *)(v61 + 72);
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(v61 + 72))
      goto LABEL_71;
  }
  else
  {
    if (*(double *)(a1 + 64) != *(double *)(v61 + 64))
      v68 = 1;
    if ((v68 & 1) != 0)
      goto LABEL_71;
  }
  v69 = *(_BYTE *)(v61 + 88);
  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
  {
    if (!*(_BYTE *)(v61 + 88))
      goto LABEL_71;
  }
  else
  {
    if (*(double *)(a1 + 80) != *(double *)(v61 + 80))
      v69 = 1;
    if ((v69 & 1) != 0)
      goto LABEL_71;
  }
  v70 = *(_BYTE *)(v61 + 104);
  if ((*(_BYTE *)(a1 + 104) & 1) != 0)
  {
    if (!*(_BYTE *)(v61 + 104))
      goto LABEL_71;
  }
  else
  {
    if (*(double *)(a1 + 96) != *(double *)(v61 + 96))
      v70 = 1;
    if ((v70 & 1) != 0)
      goto LABEL_71;
  }
  v180 = v51;
  v181 = v53;
  v71 = *(_QWORD *)(a1 + 120);
  v72 = *(_QWORD *)(v61 + 120);
  if (!v71)
  {
    v178 = v57;
    v179 = v56;
    v176 = v52;
    v177 = v55;
    v174 = v50;
    v175 = v54;
    v172 = v60;
    v173 = v59;
    v171 = v58;
    if (v72)
      goto LABEL_71;
    goto LABEL_50;
  }
  if (!v72)
    goto LABEL_71;
  v178 = v57;
  v179 = v56;
  v176 = v52;
  v177 = v55;
  v174 = v50;
  v175 = v54;
  v172 = v60;
  v173 = v59;
  v171 = v58;
  if (*(_QWORD *)(a1 + 112) == *(_QWORD *)(v61 + 112) && v71 == v72
    || (v182 = v61, v73 = sub_1ABF3223C(), v61 = v182, v74 = v73, v75 = 0, (v74 & 1) != 0))
  {
LABEL_50:
    v182 = v61;
    sub_1ABCFF664(*(_BYTE *)(a1 + 128));
    if ((v76 & 1) == 0)
      goto LABEL_71;
    v77 = type metadata accessor for Quote();
    v78 = a1;
    v79 = (int *)v77;
    v80 = *(int *)(v77 + 52);
    v169 = v78;
    sub_1ABCFC790(v78 + v80, (uint64_t)v63, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    v168 = v79;
    sub_1ABCFC790(v182 + v79[13], (uint64_t)v49, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    v81 = (uint64_t)&v19[*(int *)(v188 + 48)];
    sub_1ABCFC790((uint64_t)v63, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    v170 = v81;
    sub_1ABCFC790((uint64_t)v49, v81, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    v82 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v189 + 48);
    if (v82((uint64_t)v19, 1, v190) == 1)
    {
      sub_1ABCFC3BC((uint64_t)v49, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      sub_1ABCFC3BC((uint64_t)v63, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      v83 = v190;
      if (((unsigned int (*)(uint64_t, uint64_t))v82)(v170, 1) == 1)
      {
        v84 = v82;
        sub_1ABCFC3BC((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        v85 = v83;
        goto LABEL_58;
      }
    }
    else
    {
      sub_1ABCFC790((uint64_t)v19, (uint64_t)v46, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      v167 = v82;
      if (v82(v170, 1, v190) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v189 + 32))(v187, v170, v190);
        sub_1ABCFE1EC(&qword_1ED34CCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
        LODWORD(v170) = sub_1ABF31720();
        v87 = *(void (**)(char *, uint64_t))(v189 + 8);
        v87(v187, v190);
        sub_1ABCFC3BC((uint64_t)v49, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        sub_1ABCFC3BC((uint64_t)v63, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        v88 = v46;
        v89 = v190;
        v87(v88, v190);
        v85 = v89;
        sub_1ABCFC3BC((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        v84 = v167;
        if ((v170 & 1) == 0)
          goto LABEL_71;
LABEL_58:
        v90 = v168;
        sub_1ABCFC790(v169 + v168[14], (uint64_t)v43, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        sub_1ABCFC790(v182 + v90[14], (uint64_t)v40, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        v91 = (uint64_t)&v17[*(int *)(v188 + 48)];
        sub_1ABCFC790((uint64_t)v43, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        sub_1ABCFC790((uint64_t)v40, v91, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        if (v84((uint64_t)v17, 1, v85) == 1)
        {
          sub_1ABCFC3BC((uint64_t)v40, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          sub_1ABCFC3BC((uint64_t)v43, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          if (v84(v91, 1, v85) != 1)
            goto LABEL_69;
          v92 = v85;
          sub_1ABCFC3BC((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        }
        else
        {
          sub_1ABCFC790((uint64_t)v17, (uint64_t)v37, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          if (v84(v91, 1, v85) == 1)
          {
            sub_1ABCFC3BC((uint64_t)v40, (uint64_t (*)(_QWORD))sub_1ABD226F0);
            sub_1ABCFC3BC((uint64_t)v43, (uint64_t (*)(_QWORD))sub_1ABD226F0);
            (*(void (**)(char *, uint64_t))(v189 + 8))(v37, v85);
            goto LABEL_69;
          }
          v93 = v189;
          v94 = v187;
          (*(void (**)(char *, uint64_t, uint64_t))(v189 + 32))(v187, v91, v85);
          sub_1ABCFE1EC(&qword_1ED34CCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
          v95 = sub_1ABF31720();
          v96 = v190;
          LODWORD(v170) = v95;
          v97 = v84;
          v98 = *(void (**)(char *, uint64_t))(v93 + 8);
          v98(v94, v190);
          sub_1ABCFC3BC((uint64_t)v40, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          sub_1ABCFC3BC((uint64_t)v43, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          v92 = v96;
          v98(v37, v96);
          v84 = v97;
          sub_1ABCFC3BC((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          if ((v170 & 1) == 0)
            goto LABEL_71;
        }
        v99 = v168;
        v100 = v181;
        sub_1ABCFC790(v169 + v168[15], v181, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        sub_1ABCFC790(v182 + v99[15], (uint64_t)v33, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        v17 = v186;
        v101 = (uint64_t)&v186[*(int *)(v188 + 48)];
        sub_1ABCFC790(v100, (uint64_t)v186, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        sub_1ABCFC790((uint64_t)v33, v101, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        v102 = v92;
        if (v84((uint64_t)v17, 1, v92) == 1)
        {
          sub_1ABCFC3BC((uint64_t)v33, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          sub_1ABCFC3BC(v181, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          v103 = v84;
          if (v84(v101, 1, v92) == 1)
          {
            sub_1ABCFC3BC((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1ABD226F0);
            goto LABEL_74;
          }
        }
        else
        {
          v104 = v180;
          sub_1ABCFC790((uint64_t)v17, v180, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          v103 = v84;
          if (v84(v101, 1, v92) != 1)
          {
            v106 = v189;
            v107 = v187;
            (*(void (**)(char *, uint64_t, uint64_t))(v189 + 32))(v187, v101, v92);
            sub_1ABCFE1EC(&qword_1ED34CCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
            v108 = sub_1ABF31720();
            v109 = *(void (**)(char *, uint64_t))(v106 + 8);
            v109(v107, v102);
            sub_1ABCFC3BC((uint64_t)v33, (uint64_t (*)(_QWORD))sub_1ABD226F0);
            sub_1ABCFC3BC(v181, (uint64_t (*)(_QWORD))sub_1ABD226F0);
            v109((char *)v104, v102);
            sub_1ABCFC3BC((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1ABD226F0);
            if ((v108 & 1) == 0)
              goto LABEL_71;
LABEL_74:
            v110 = v168[16];
            v111 = *(unsigned __int8 *)(v169 + v110);
            v112 = *(unsigned __int8 *)(v182 + v110);
            if (v111 == 7)
            {
              if (v112 != 7)
                goto LABEL_71;
            }
            else
            {
              if (v112 == 7)
                goto LABEL_71;
              sub_1ABDE1070(v111);
              if ((v113 & 1) == 0)
                goto LABEL_71;
            }
            v114 = v168[17];
            v115 = *(unsigned __int8 *)(v169 + v114);
            v116 = *(unsigned __int8 *)(v182 + v114);
            if (v115 == 7)
            {
              if (v116 != 7)
                goto LABEL_71;
            }
            else
            {
              if (v116 == 7)
                goto LABEL_71;
              sub_1ABDE1070(v115);
              if ((v117 & 1) == 0)
                goto LABEL_71;
            }
            v118 = v168[18];
            v119 = *(unsigned __int8 *)(v169 + v118);
            v120 = *(unsigned __int8 *)(v182 + v118);
            if (v119 == 7)
            {
              if (v120 != 7)
                goto LABEL_71;
            }
            else
            {
              if (v120 == 7)
                goto LABEL_71;
              sub_1ABDE1070(v119);
              if ((v121 & 1) == 0)
                goto LABEL_71;
            }
            v122 = v168[19];
            v123 = (double *)(v169 + v122);
            v124 = *(_BYTE *)(v169 + v122 + 8);
            v125 = (double *)(v182 + v122);
            v126 = *(unsigned __int8 *)(v182 + v122 + 8);
            if ((v124 & 1) != 0)
            {
              if (!v126)
                goto LABEL_71;
            }
            else
            {
              if (*v123 != *v125)
                LOBYTE(v126) = 1;
              if ((v126 & 1) != 0)
                goto LABEL_71;
            }
            v127 = v168;
            v128 = v179;
            sub_1ABCFC790(v169 + v168[20], v179, (uint64_t (*)(_QWORD))sub_1ABD226F0);
            v129 = v178;
            sub_1ABCFC790(v182 + v127[20], v178, (uint64_t (*)(_QWORD))sub_1ABD226F0);
            v130 = v185;
            v131 = v185 + *(int *)(v188 + 48);
            v132 = v128;
            sub_1ABCFC790(v128, v185, (uint64_t (*)(_QWORD))sub_1ABD226F0);
            v133 = v129;
            sub_1ABCFC790(v129, v131, (uint64_t (*)(_QWORD))sub_1ABD226F0);
            if (v103(v130, 1, v190) == 1)
            {
              sub_1ABCFC3BC(v129, (uint64_t (*)(_QWORD))sub_1ABD226F0);
              sub_1ABCFC3BC(v128, (uint64_t (*)(_QWORD))sub_1ABD226F0);
              if (v103(v131, 1, v190) == 1)
              {
                sub_1ABCFC3BC(v185, (uint64_t (*)(_QWORD))sub_1ABD226F0);
LABEL_102:
                v140 = v168;
                v141 = v176;
                sub_1ABCFC790(v169 + v168[21], v176, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                v142 = v175;
                sub_1ABCFC790(v182 + v140[21], v175, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                v143 = v184;
                v144 = v184 + *(int *)(v188 + 48);
                v145 = v141;
                sub_1ABCFC790(v141, v184, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                v146 = v142;
                sub_1ABCFC790(v142, v144, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                if (v103(v143, 1, v190) == 1)
                {
                  sub_1ABCFC3BC(v142, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                  sub_1ABCFC3BC(v141, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                  if (v103(v144, 1, v190) == 1)
                  {
                    sub_1ABCFC3BC(v184, (uint64_t (*)(_QWORD))sub_1ABD226F0);
LABEL_109:
                    if ((sub_1ABF30718() & 1) == 0)
                      goto LABEL_71;
                    v153 = v168;
                    v154 = v173;
                    sub_1ABCFC790(v169 + v168[23], v173, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    v155 = v172;
                    sub_1ABCFC790(v182 + v153[23], v172, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    v156 = v183;
                    v157 = v183 + *(int *)(v188 + 48);
                    v158 = v154;
                    sub_1ABCFC790(v154, v183, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    v159 = v155;
                    sub_1ABCFC790(v155, v157, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    if (v103(v156, 1, v190) == 1)
                    {
                      sub_1ABCFC3BC(v155, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                      sub_1ABCFC3BC(v154, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                      if (v103(v157, 1, v190) == 1)
                      {
                        sub_1ABCFC3BC(v183, (uint64_t (*)(_QWORD))sub_1ABD226F0);
LABEL_117:
                        v75 = MEMORY[0x1AF436B60](v169 + v168[24], v182 + v168[24]);
                        return v75 & 1;
                      }
                      goto LABEL_115;
                    }
                    sub_1ABCFC790(v183, v171, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    if (v103(v157, 1, v190) == 1)
                    {
                      sub_1ABCFC3BC(v155, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                      sub_1ABCFC3BC(v154, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                      (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v171, v190);
LABEL_115:
                      v86 = v183;
                      goto LABEL_70;
                    }
                    v161 = v189;
                    v160 = v190;
                    v162 = v187;
                    (*(void (**)(char *, uint64_t, uint64_t))(v189 + 32))(v187, v157, v190);
                    sub_1ABCFE1EC(&qword_1ED34CCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
                    v163 = v171;
                    v164 = sub_1ABF31720();
                    v165 = *(void (**)(char *, uint64_t))(v161 + 8);
                    v165(v162, v160);
                    sub_1ABCFC3BC(v159, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    sub_1ABCFC3BC(v158, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    v165((char *)v163, v160);
                    sub_1ABCFC3BC(v183, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    if ((v164 & 1) != 0)
                      goto LABEL_117;
LABEL_71:
                    v75 = 0;
                    return v75 & 1;
                  }
                }
                else
                {
                  sub_1ABCFC790(v184, v174, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                  if (v103(v144, 1, v190) != 1)
                  {
                    v148 = v189;
                    v147 = v190;
                    v149 = v187;
                    (*(void (**)(char *, uint64_t, uint64_t))(v189 + 32))(v187, v144, v190);
                    sub_1ABCFE1EC(&qword_1ED34CCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
                    v150 = v174;
                    v151 = sub_1ABF31720();
                    v152 = *(void (**)(char *, uint64_t))(v148 + 8);
                    v152(v149, v147);
                    sub_1ABCFC3BC(v146, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    sub_1ABCFC3BC(v145, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    v152((char *)v150, v147);
                    sub_1ABCFC3BC(v184, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                    if ((v151 & 1) == 0)
                      goto LABEL_71;
                    goto LABEL_109;
                  }
                  sub_1ABCFC3BC(v142, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                  sub_1ABCFC3BC(v141, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                  (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v174, v190);
                }
                v86 = v184;
LABEL_70:
                sub_1ABCFC3BC(v86, (uint64_t (*)(_QWORD))sub_1ABCFF7EC);
                goto LABEL_71;
              }
            }
            else
            {
              sub_1ABCFC790(v185, v177, (uint64_t (*)(_QWORD))sub_1ABD226F0);
              if (v103(v131, 1, v190) != 1)
              {
                v135 = v189;
                v134 = v190;
                v136 = v187;
                (*(void (**)(char *, uint64_t, uint64_t))(v189 + 32))(v187, v131, v190);
                sub_1ABCFE1EC(&qword_1ED34CCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
                v137 = v177;
                v138 = sub_1ABF31720();
                v139 = *(void (**)(char *, uint64_t))(v135 + 8);
                v139(v136, v134);
                sub_1ABCFC3BC(v133, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                sub_1ABCFC3BC(v132, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                v139((char *)v137, v134);
                sub_1ABCFC3BC(v185, (uint64_t (*)(_QWORD))sub_1ABD226F0);
                if ((v138 & 1) == 0)
                  goto LABEL_71;
                goto LABEL_102;
              }
              sub_1ABCFC3BC(v129, (uint64_t (*)(_QWORD))sub_1ABD226F0);
              sub_1ABCFC3BC(v128, (uint64_t (*)(_QWORD))sub_1ABD226F0);
              (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v177, v190);
            }
            v86 = v185;
            goto LABEL_70;
          }
          sub_1ABCFC3BC((uint64_t)v33, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          sub_1ABCFC3BC(v181, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v104, v92);
        }
LABEL_69:
        v86 = (uint64_t)v17;
        goto LABEL_70;
      }
      sub_1ABCFC3BC((uint64_t)v49, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      sub_1ABCFC3BC((uint64_t)v63, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      (*(void (**)(char *, uint64_t))(v189 + 8))(v46, v190);
    }
    v86 = (uint64_t)v19;
    goto LABEL_70;
  }
  return v75 & 1;
}

uint64_t sub_1ABCFF5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABCFF610(uint64_t a1)
{
  uint64_t v2;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1ABCFF664(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABCFF6B4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABCFF72C + 4 * byte_1ABF3CF73[a2]))(1852141679);
}

uint64_t sub_1ABCFF72C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1852141679 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1ABCFF7EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34CCD0)
  {
    sub_1ABD226F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34CCD0);
  }
}

uint64_t sub_1ABCFF84C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  double *v16;
  char v17;
  double *v18;
  int v19;
  uint64_t v20;
  double *v21;
  char v22;
  double *v23;
  int v24;
  uint64_t v25;
  double *v26;
  char v27;
  double *v28;
  int v29;
  uint64_t v30;
  double *v31;
  char v32;
  double *v33;
  int v34;
  uint64_t v35;
  double *v36;
  char v37;
  double *v38;
  int v39;
  uint64_t v40;

  v4 = (int *)type metadata accessor for Chart.Entry(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v40 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v11 || a1 == a2)
    return 1;
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = *(_QWORD *)(v8 + 72);
  while (1)
  {
    sub_1ABCFC790(a1 + v12, (uint64_t)v10, type metadata accessor for Chart.Entry);
    sub_1ABCFC790(a2 + v12, (uint64_t)v7, type metadata accessor for Chart.Entry);
    if ((sub_1ABF30718() & 1) == 0)
      break;
    v15 = v4[5];
    v16 = (double *)&v10[v15];
    v17 = v10[v15 + 8];
    v18 = (double *)&v7[v15];
    v19 = v7[v15 + 8];
    if ((v17 & 1) != 0)
    {
      if (!v19)
        break;
    }
    else
    {
      if (*v16 != *v18)
        LOBYTE(v19) = 1;
      if ((v19 & 1) != 0)
        break;
    }
    v20 = v4[6];
    v21 = (double *)&v10[v20];
    v22 = v10[v20 + 8];
    v23 = (double *)&v7[v20];
    v24 = v7[v20 + 8];
    if ((v22 & 1) != 0)
    {
      if (!v24)
        break;
    }
    else
    {
      if (*v21 != *v23)
        LOBYTE(v24) = 1;
      if ((v24 & 1) != 0)
        break;
    }
    v25 = v4[7];
    v26 = (double *)&v10[v25];
    v27 = v10[v25 + 8];
    v28 = (double *)&v7[v25];
    v29 = v7[v25 + 8];
    if ((v27 & 1) != 0)
    {
      if (!v29)
        break;
    }
    else
    {
      if (*v26 != *v28)
        LOBYTE(v29) = 1;
      if ((v29 & 1) != 0)
        break;
    }
    v30 = v4[8];
    v31 = (double *)&v10[v30];
    v32 = v10[v30 + 8];
    v33 = (double *)&v7[v30];
    v34 = v7[v30 + 8];
    if ((v32 & 1) != 0)
    {
      if (!v34)
        break;
    }
    else
    {
      if (*v31 != *v33)
        LOBYTE(v34) = 1;
      if ((v34 & 1) != 0)
        break;
    }
    v35 = v4[9];
    v36 = (double *)&v10[v35];
    v37 = v10[v35 + 8];
    v38 = (double *)&v7[v35];
    v39 = v7[v35 + 8];
    if ((v37 & 1) != 0)
    {
      if (!v39)
        break;
    }
    else
    {
      if (*v36 != *v38)
        LOBYTE(v39) = 1;
      if ((v39 & 1) != 0)
        break;
    }
    sub_1ABCFC3BC((uint64_t)v7, type metadata accessor for Chart.Entry);
    sub_1ABCFC3BC((uint64_t)v10, type metadata accessor for Chart.Entry);
    v12 += v13;
    result = 1;
    if (!--v11)
      return result;
  }
  sub_1ABCFC3BC((uint64_t)v7, type metadata accessor for Chart.Entry);
  sub_1ABCFC3BC((uint64_t)v10, type metadata accessor for Chart.Entry);
  return 0;
}

uint64_t sub_1ABCFFAA8(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v15[144];
  _QWORD v16[18];
  _QWORD v17[18];
  _BYTE v18[144];

  sub_1ABD6414C(a1, (uint64_t)v16);
  sub_1ABD6414C(a2, (uint64_t)v17);
  sub_1ABD6414C((uint64_t)v16, (uint64_t)v18);
  sub_1ABD24814((uint64_t)v18);
  v3 = *(void **)sub_1ABD24804((uint64_t)v18);
  sub_1ABD64188(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v4 = objc_msgSend(v3, sel_identifier);
  v5 = sub_1ABF317A4();
  v7 = v6;

  sub_1ABD64188(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  sub_1ABD6414C((uint64_t)v17, (uint64_t)v15);
  sub_1ABD24814((uint64_t)v15);
  v8 = *(void **)sub_1ABD24804((uint64_t)v15);
  sub_1ABD64188(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v9 = objc_msgSend(v8, sel_identifier);
  v10 = sub_1ABF317A4();
  v12 = v11;

  sub_1ABD64188(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  if (v5 == v10 && v7 == v12)
    v13 = 1;
  else
    v13 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t *initializeWithCopy for Headline(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = (void *)a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  v21 = a2[17];
  sub_1ABCFFD28(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = (uint64_t)v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  return a1;
}

uint64_t sub_1ABCFFD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  id v14;

  if (a14 < 0)
    return swift_unknownObjectRetain();
  v14 = a13;
  swift_unknownObjectRetain();
  return sub_1ABF2FF5C();
}

void destroy for Headline(uint64_t a1)
{
  sub_1ABCFFDBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(void **)(a1 + 96), *(_QWORD *)(a1 + 104));
}

void sub_1ABCFFDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  swift_unknownObjectRelease();
  if ((a14 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t destroy for Stock()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Stock(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABCFFF24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  void (*v36)(void *, const void *, uint64_t);
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v9 = a3[13];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_QWORD *)(a1 + 112) = v7;
  *(_QWORD *)(a1 + 120) = v8;
  v12 = sub_1ABF30760();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  sub_1ABF2FF5C();
  if (v14(v11, 1, v12))
  {
    sub_1ABD226F0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = a3[14];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_1ABD226F0();
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  v20 = a3[15];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  if (v14((const void *)(a2 + v20), 1, v12))
  {
    sub_1ABD226F0();
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v21, v22, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
  }
  v24 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  v25 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  v28 = a3[20];
  v29 = (void *)(a1 + v28);
  v30 = (const void *)(a2 + v28);
  if (v14((const void *)(a2 + v28), 1, v12))
  {
    sub_1ABD226F0();
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v29, v30, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v29, 0, 1, v12);
  }
  v32 = a3[21];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v14((const void *)(a2 + v32), 1, v12))
  {
    sub_1ABD226F0();
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    v36 = *(void (**)(void *, const void *, uint64_t))(v13 + 16);
  }
  else
  {
    v36 = *(void (**)(void *, const void *, uint64_t))(v13 + 16);
    v36(v33, v34, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v33, 0, 1, v12);
  }
  v36((void *)(a1 + a3[22]), (const void *)(a2 + a3[22]), v12);
  v37 = a3[23];
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  if (v14((const void *)(a2 + v37), 1, v12))
  {
    sub_1ABD226F0();
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v36(v38, v39, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v38, 0, 1, v12);
  }
  v41 = a3[24];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = sub_1ABF3094C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
  return a1;
}

void sub_1ABD00308(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1ABF31D5C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

int *sub_1ABD003A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1ABD003BC(a1, *(_QWORD *)(v2 + 16), a2);
}

int *sub_1ABD003BC@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  uint32_t v12;
  unsigned int v13;
  double v14;
  uint32_t v15;
  unsigned int v16;
  double v17;
  uint32_t v18;
  unsigned int v19;
  double v20;
  uint32_t v21;
  unsigned int v22;
  double v23;
  double v24;
  int *result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_1ABF30760();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (double)*a1;
  v11 = (double)a2 + v10;
  sub_1ABF306C4();
  v12 = arc4random_uniform(0xAu);
  if (v12 <= 1)
    v13 = 1;
  else
    v13 = v12;
  v14 = (double)v13;
  v15 = arc4random_uniform(0xAu);
  if (v15 <= 1)
    v16 = 1;
  else
    v16 = v15;
  v17 = (double)v16;
  v18 = arc4random_uniform(0xAu);
  if (v18 <= 1)
    v19 = 1;
  else
    v19 = v18;
  v20 = (double)v19;
  v21 = arc4random_uniform(0xAu);
  if (v21 <= 1)
    v22 = 1;
  else
    v22 = v21;
  v23 = v11 - v14 / v17;
  v24 = v11 + v20 / (double)v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
  result = (int *)type metadata accessor for Chart.Entry(0);
  v26 = a3 + result[5];
  *(double *)v26 = v23;
  *(_BYTE *)(v26 + 8) = 0;
  v27 = a3 + result[6];
  *(double *)v27 = v24;
  *(_BYTE *)(v27 + 8) = 0;
  v28 = a3 + result[7];
  *(double *)v28 = v11 + 2.0;
  *(_BYTE *)(v28 + 8) = 0;
  v29 = a3 + result[8];
  *(double *)v29 = v11 + -2.0;
  *(_BYTE *)(v29 + 8) = 0;
  v30 = a3 + result[9];
  *(double *)v30 = v10 + 10000.0;
  *(_BYTE *)(v30 + 8) = 0;
  return result;
}

uint64_t sub_1ABD00568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  unint64_t *v27;
  uint64_t v28;
  uint64_t result;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t *v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  uint64_t v44;
  _QWORD *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t *v57;

  v56 = type metadata accessor for Chart.Entry(0);
  v14 = *(_QWORD *)(v56 - 8);
  v15 = MEMORY[0x1E0C80A78](v56);
  v55 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v44 - v17;
  *a7 = a1;
  v19 = (int *)type metadata accessor for Chart(0);
  sub_1ABCFC790(a2, (uint64_t)a7 + v19[5], (uint64_t (*)(_QWORD))sub_1ABCFC730);
  v20 = (char *)a7 + v19[6];
  *(_QWORD *)v20 = a3;
  v20[8] = a4 & 1;
  v21 = (char *)a7 + v19[7];
  v22 = sub_1ABF3094C();
  v51 = *(_QWORD *)(v22 - 8);
  v52 = v22;
  v23 = *(void (**)(char *, uint64_t))(v51 + 16);
  v48 = a5;
  v23(v21, a5);
  v46 = v19;
  v24 = (char *)a7 + v19[8];
  v25 = sub_1ABF30760();
  v49 = *(_QWORD *)(v25 - 8);
  v50 = v25;
  v26 = *(void (**)(char *, uint64_t))(v49 + 16);
  v47 = a6;
  v26(v24, a6);
  v27 = (unint64_t *)MEMORY[0x1E0DEE9D8];
  v57 = (unint64_t *)MEMORY[0x1E0DEE9D8];
  v28 = *(_QWORD *)(a1 + 16);
  result = sub_1ABF2FF5C();
  v53 = a2;
  if (v28)
  {
    v45 = a7;
    v30 = 0;
    v31 = (unint64_t *)MEMORY[0x1E0DEE9D8];
    v54 = v14;
    while (v30 < *(_QWORD *)(a1 + 16))
    {
      v32 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v33 = *(_QWORD *)(v14 + 72);
      sub_1ABCFC790(a1 + v32 + v33 * v30, (uint64_t)v18, type metadata accessor for Chart.Entry);
      v34 = &v18[*(int *)(v56 + 36)];
      if ((v34[8] & 1) != 0 || *(double *)v34 <= 0.0)
      {
        result = sub_1ABCFC3BC((uint64_t)v18, type metadata accessor for Chart.Entry);
      }
      else
      {
        v35 = v28;
        sub_1ABCFE2AC((uint64_t)v18, v55, type metadata accessor for Chart.Entry);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1ABD008FC(0, v31[2] + 1, 1);
        v31 = v57;
        v37 = v57[2];
        v36 = v57[3];
        if (v37 >= v36 >> 1)
        {
          sub_1ABD008FC(v36 > 1, v37 + 1, 1);
          v31 = v57;
        }
        v31[2] = v37 + 1;
        result = sub_1ABCFE2AC(v55, (uint64_t)v31 + v32 + v37 * v33, type metadata accessor for Chart.Entry);
        v28 = v35;
        v14 = v54;
      }
      if (v28 == ++v30)
      {
        v38 = v57;
        a7 = v45;
        v39 = v46;
        v41 = v47;
        v40 = v48;
        v27 = (unint64_t *)MEMORY[0x1E0DEE9D8];
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    v38 = v27;
    v41 = v47;
    v40 = v48;
    v39 = v46;
LABEL_15:
    swift_bridgeObjectRelease();
    v42 = v38[2];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v41, v50);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v40, v52);
    result = sub_1ABCFC3BC(v53, (uint64_t (*)(_QWORD))sub_1ABCFC730);
    v43 = (unint64_t *)&unk_1E5AF0738;
    if (!v42)
      v43 = v27;
    *(_QWORD *)((char *)a7 + v39[9]) = v43;
  }
  return result;
}

uint64_t sub_1ABD00888(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 24));
}

uint64_t sub_1ABD008B4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for Chart.Entry(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED34D9F0);
}

uint64_t sub_1ABD008FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1ABD00928(a1, a2, a3, (_QWORD *)*v3, &qword_1ED34C908, type metadata accessor for Chart.Entry);
  *v3 = result;
  return result;
}

uint64_t sub_1ABD00928(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1ABCF5A54(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1ABD00B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  int v36;
  _BOOL8 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;

  v4 = type metadata accessor for Quote();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v51 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v45 - v8;
  sub_1ABCFE340(0, &qword_1ED34DEC8, (unint64_t *)&qword_1ED34DEC0, v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v12);
  v17 = (uint64_t *)((char *)&v45 - v16);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v52 = 0;
  v49 = a1;
  v20 = *(_QWORD *)(a1 + 64);
  v19 = a1 + 64;
  v18 = v20;
  v21 = 1 << *(_BYTE *)(v19 - 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v18;
  v47 = v19;
  v48 = (unint64_t)(v21 + 63) >> 6;
  v46 = v48 - 1;
  v50 = v5;
  while (1)
  {
    if (v23)
    {
      v24 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v25 = v24 | (v52 << 6);
LABEL_8:
      v26 = *(_QWORD *)(v49 + 56);
      v27 = (_QWORD *)(*(_QWORD *)(v49 + 48) + 16 * v25);
      v28 = v27[1];
      *v14 = *v27;
      v14[1] = v28;
      v29 = v26 + *(_QWORD *)(v5 + 72) * v25;
      sub_1ABCFC7E8(0, (unint64_t *)&qword_1ED34DEC0, (void (*)(uint64_t))type metadata accessor for Quote);
      v31 = v30;
      sub_1ABCFC790(v29, (uint64_t)v14 + *(int *)(v30 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Quote);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 0, 1, v31);
      sub_1ABF2FF5C();
      goto LABEL_30;
    }
    v32 = v52 + 1;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v32 < v48)
    {
      v33 = *(_QWORD *)(v47 + 8 * v32);
      if (v33)
        goto LABEL_12;
      v34 = v52 + 2;
      ++v52;
      if (v32 + 1 < v48)
      {
        v33 = *(_QWORD *)(v47 + 8 * v34);
        if (v33)
          goto LABEL_15;
        v52 = v32 + 1;
        if (v32 + 2 < v48)
        {
          v33 = *(_QWORD *)(v47 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_12;
          }
          v52 = v32 + 2;
          if (v32 + 3 < v48)
          {
            v33 = *(_QWORD *)(v47 + 8 * (v32 + 3));
            if (v33)
            {
              v32 += 3;
              goto LABEL_12;
            }
            v34 = v32 + 4;
            v52 = v32 + 3;
            if (v32 + 4 < v48)
              break;
          }
        }
      }
    }
LABEL_29:
    sub_1ABCFC7E8(0, (unint64_t *)&qword_1ED34DEC0, (void (*)(uint64_t))type metadata accessor for Quote);
    v31 = v35;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v14, 1, 1, v35);
    v23 = 0;
LABEL_30:
    sub_1ABCFE2F0((uint64_t)v14, (uint64_t)v17, (uint64_t)&qword_1ED34DEC8, (uint64_t)&qword_1ED34DEC0, (uint64_t)type metadata accessor for Quote, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABCFE340);
    sub_1ABCFC7E8(0, (unint64_t *)&qword_1ED34DEC0, (void (*)(uint64_t))type metadata accessor for Quote);
    v36 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v17, 1, v31);
    v37 = v36 == 1;
    if (v36 == 1)
      return v37;
    v39 = *v17;
    v38 = v17[1];
    sub_1ABCFE2AC((uint64_t)v17 + *(int *)(v31 + 48), (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v40 = sub_1ABD00F9C(v39, v38);
    LOBYTE(v39) = v41;
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
    {
      sub_1ABCFC3BC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
      return 0;
    }
    v5 = v50;
    v42 = *(_QWORD *)(a2 + 56) + *(_QWORD *)(v50 + 72) * v40;
    v43 = v51;
    sub_1ABCFC790(v42, v51, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v44 = sub_1ABCFE394(v43, (uint64_t)v9);
    sub_1ABCFC3BC(v43, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    result = sub_1ABCFC3BC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    if ((v44 & 1) == 0)
      return v37;
  }
  v33 = *(_QWORD *)(v47 + 8 * v34);
  if (v33)
  {
LABEL_15:
    v32 = v34;
LABEL_12:
    v23 = (v33 - 1) & v33;
    v25 = __clz(__rbit64(v33)) + (v32 << 6);
    v52 = v32;
    goto LABEL_8;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v48)
    {
      v52 = v46;
      goto LABEL_29;
    }
    v33 = *(_QWORD *)(v47 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_1ABD00F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABF32308();
  sub_1ABF31840();
  v4 = sub_1ABF32338();
  return sub_1ABD01000(a1, a2, v4);
}

unint64_t sub_1ABD01000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1ABF3223C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1ABF3223C() & 1) == 0);
    }
  }
  return v6;
}

uint64_t type metadata accessor for EarningsCalendarEventManager()
{
  return objc_opt_self();
}

uint64_t sub_1ABD0144C(uint64_t a1, uint64_t a2)
{
  return sub_1ABD0146C(a1, a2);
}

uint64_t sub_1ABD0146C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (_QWORD *)(v2 + 152);
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 152);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v5 >> 62)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1AF4380CC](i, v5);
    }
    else
    {
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      sub_1ABF2FF68();
    }
    v10 = MEMORY[0x1AF4390D4](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v14;
LABEL_15:
  *v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for WatchlistManagerObserverProxy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1AF437C04](v13);
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  return swift_endAccess();
}

uint64_t type metadata accessor for WatchlistManagerObserverProxy()
{
  return objc_opt_self();
}

uint64_t sub_1ABD016A4()
{
  uint64_t v0;

  return sub_1ABD016BC(v0);
}

uint64_t sub_1ABD016BC(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(result + 24))
  {
    sub_1ABF2FF68();
    sub_1ABF31060();
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for OpenSymbolIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

void sub_1ABD01754(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFF88)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFF88)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 120);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1ABD01848()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1ABD018E0);
}

void sub_1ABD01850(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1ABD01858);
  JUMPOUT(0x1ABD018E0);
}

void sub_1ABD0189C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1ABD018E0);
}

void sub_1ABD018A4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1ABD018E0);
}

uint64_t sub_1ABD018AC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0xFE)
  {
    if (a2 > 0xFE)
      JUMPOUT(0x1ABD018B8);
    *(_BYTE *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 56) = a2 + 1;
LABEL_6:
    JUMPOUT(0x1ABD018E0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for StubAssetHandle.StubAssetDataProvider()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for ChartRange(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1ABD01A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1ABD01A20()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1176);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return sub_1ABF2FF68();
}

uint64_t getEnumTagSinglePayload for ScoringConfig(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 1114))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

id sub_1ABD01D08(void *a1)
{
  id v1;
  id v3;

  v1 = a1;
  sub_1ABF31060();

  return v3;
}

uint64_t sub_1ABD01D54(__int128 *a1)
{
  return sub_1ABD01D68(a1);
}

uint64_t sub_1ABD01D68(__int128 *a1)
{
  uint64_t v1;
  uint64_t (*v2)(__int128 *);
  __int128 v4;

  v2 = *(uint64_t (**)(__int128 *))(v1 + 16);
  v4 = *a1;
  return v2(&v4);
}

uint64_t sub_1ABD01DA8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

id sub_1ABD01DB0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v3;

  if (*(_QWORD *)(a1 + *a3 + 8))
  {
    sub_1ABF2FF5C();
    v3 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

uint64_t storeEnumTagSinglePayload for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABD01E54 + 4 * byte_1ABF4C6AD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABD01E88 + 4 * byte_1ABF4C6A8[v4]))();
}

uint64_t sub_1ABD01E88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD01E90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD01E98);
  return result;
}

uint64_t sub_1ABD01EA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD01EACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABD01EB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD01EB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for OpenSymbolIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1ABD01F04()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6973736572706D69;
  if (*v0 != 1)
    v1 = 0x6D617473656D6974;
  if (*v0)
    return v1;
  else
    return 0x736B63696C63;
}

uint64_t sub_1ABD01F68()
{
  return 0;
}

uint64_t sub_1ABD01F74(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[16];

  v7 = sub_1ABF309E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1ABF309F4();
  v12 = MEMORY[0x1E0C80A78](v11);
  (*(void (**)(_BYTE *, _QWORD, double))(v14 + 104))(&v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800], v12);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB57E0], v7);
  v16[15] = a2;
  sub_1ABD021F0(0, (unint64_t *)&qword_1ED350AD0);
  swift_allocObject();
  result = sub_1ABF30A54();
  *a5 = result;
  return result;
}

uint64_t sub_1ABD020B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[16];

  v5 = sub_1ABF309F4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1ABF309E8();
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(_BYTE *, _QWORD))(v11 + 104))(&v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB57E8]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB5800], v5);
  v13[15] = 0;
  sub_1ABD021F0(0, (unint64_t *)&qword_1ED350AD0);
  swift_allocObject();
  result = sub_1ABF30A54();
  *a4 = result;
  return result;
}

void sub_1ABD021F0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1ABF30A48();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1ABD0223C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1ABCF5A54(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD02284(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1ABF30820();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAD0, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  sub_1ABCFE22C(&qword_1ED34EAC0, 255, v3, MEMORY[0x1E0CB0C60]);
  v19 = sub_1ABF31B34();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_1ABD02464((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_1ABD02464(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1ABF30820();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1ABCFE22C(&qword_1ED34EAC0, 255, v11, MEMORY[0x1E0CB0C60]);
  sub_1ABF2FF5C();
  v31 = a2;
  v12 = sub_1ABF316C0();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1ABCFE22C(&qword_1ED34EAC8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C68]);
      v21 = sub_1ABF31720();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1ABD026C8((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1ABD026C8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_1ABF30820();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1ABE092B4();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1ABE0A73C();
      goto LABEL_12;
    }
    sub_1ABE0AFBC();
  }
  v12 = *v3;
  sub_1ABCFE22C(&qword_1ED34EAC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C60]);
  v13 = sub_1ABF316C0();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_1ABCFE22C(&qword_1ED34EAC8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C68]);
      v18 = sub_1ABF31720();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1ABF32290();
  __break(1u);
  return result;
}

uint64_t sub_1ABD028D4()
{
  unsigned __int8 *v0;

  return sub_1ABD028DC(*v0);
}

uint64_t sub_1ABD028DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABD02918 + 4 * byte_1ABF4C685[a1]))(0x4E64726F6365725FLL, 0xEB00000000656D61);
}

uint64_t sub_1ABD02918()
{
  return 0x72756769666E6F63;
}

unint64_t sub_1ABD0293C()
{
  return 0xD000000000000014;
}

unint64_t sub_1ABD02958()
{
  return 0xD000000000000016;
}

uint64_t sub_1ABD02994()
{
  sub_1ABD029D8();
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABD029D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FAC0)
  {
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FAC0);
  }
}

uint64_t sub_1ABD02A2C()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)sub_1ABF31114();
  v1 = sub_1ABF31108();

  return v1;
}

uint64_t sub_1ABD02A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABD14050(a1, a2, a3, a4, v4);
}

void destroy for NewsHeadlineScore(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

void sub_1ABD02AF8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD02B54(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABD02BF4 + 4 * byte_1ABF3D032[a2]))(0x676E6967617473);
}

uint64_t sub_1ABD02BF4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x676E6967617473 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABD02CF8(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  char v7;

  v2 = 0xEF6E6F696765526DLL;
  v3 = 0x6F72467265666E69;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x656C707061;
    else
      v4 = 0x6F6F686179;
    v5 = 0xE500000000000000;
    v6 = a2;
    if (!a2)
      goto LABEL_10;
    goto LABEL_6;
  }
  v4 = 0x6F72467265666E69;
  v5 = 0xEF6E6F696765526DLL;
  v6 = a2;
  if (a2)
  {
LABEL_6:
    if (v6 == 1)
      v3 = 0x656C707061;
    else
      v3 = 0x6F6F686179;
    v2 = 0xE500000000000000;
  }
LABEL_10:
  if (v4 == v3 && v5 == v2)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1ABD02E10(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1ABD02E70(255, a3, a4);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1ABD02E70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[5];

  if (!*a2)
  {
    v8[0] = &type metadata for StockMetadataManager.StoreDescriptor;
    v8[1] = &type metadata for StockMetadataManager.CacheEntry;
    v8[2] = sub_1ABD02F00();
    v8[3] = sub_1ABD02F44();
    v8[4] = sub_1ABD02F88();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1ABD02F00()
{
  unint64_t result;

  result = qword_1ED34D618;
  if (!qword_1ED34D618)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F178, &type metadata for StockMetadataManager.StoreDescriptor);
    atomic_store(result, (unint64_t *)&qword_1ED34D618);
  }
  return result;
}

unint64_t sub_1ABD02F44()
{
  unint64_t result;

  result = qword_1ED34D610;
  if (!qword_1ED34D610)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F150, &type metadata for StockMetadataManager.CacheEntry);
    atomic_store(result, (unint64_t *)&qword_1ED34D610);
  }
  return result;
}

unint64_t sub_1ABD02F88()
{
  unint64_t result;

  result = qword_1ED34D608;
  if (!qword_1ED34D608)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F128, &type metadata for StockMetadataManager.CacheEntry);
    atomic_store(result, (unint64_t *)&qword_1ED34D608);
  }
  return result;
}

void sub_1ABD02FCC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1ABD0302C(255, a3, a4);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1ABD0302C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[5];

  if (!*a2)
  {
    v8[0] = &type metadata for EarningsCalendarEventManager.StoreDescriptor;
    v8[1] = type metadata accessor for EarningsCalendarEventModel();
    v8[2] = sub_1ABD0313C();
    v8[3] = sub_1ABCFE22C(&qword_1ED346C30, 255, (uint64_t (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel, (uint64_t)&unk_1ABF4208C);
    v8[4] = sub_1ABCFE22C(&qword_1ED346C28, 255, (uint64_t (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel, (uint64_t)&unk_1ABF420B4);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t type metadata accessor for EarningsCalendarEventModel()
{
  uint64_t result;

  result = qword_1ED346C38;
  if (!qword_1ED346C38)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1ABD0313C()
{
  unint64_t result;

  result = qword_1ED346C58;
  if (!qword_1ED346C58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42270, &type metadata for EarningsCalendarEventManager.StoreDescriptor);
    atomic_store(result, (unint64_t *)&qword_1ED346C58);
  }
  return result;
}

unint64_t sub_1ABD03180()
{
  unint64_t v0;
  unint64_t result;

  v0 = sub_1ABD031C0((uint64_t)&unk_1E5AE6A28);
  result = sub_1ABD031C0((uint64_t)&unk_1E5AE69C8);
  qword_1ED368320 = v0;
  qword_1ED368328 = result;
  return result;
}

unint64_t sub_1ABD031C0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1ABD032EC(0, (unint64_t *)&qword_1ED34FDF0);
  v2 = (_QWORD *)sub_1ABF32014();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1ABF2FF68();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    result = sub_1ABD00F9C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1ABD032EC(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1ABF32020();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1ABD0333C()
{
  return sub_1ABF30970();
}

uint64_t destroy for CurrencyConversion()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1ABD033BC(char *a1)
{
  sub_1ABD02AF8(*a1);
}

uint64_t destroy for FundSector()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD033D0(char *a1, unsigned __int8 *a2)
{
  return sub_1ABD02CF8(*a1, *a2);
}

uint64_t sub_1ABD033EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1ABD32B40();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ABF3B7C0;
  v2 = type metadata accessor for LegacyStocksAssembly();
  v3 = swift_allocObject();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = sub_1ABCFE1EC(&qword_1ED350518, (uint64_t (*)(uint64_t))type metadata accessor for LegacyStocksAssembly, (uint64_t)&unk_1ABF4A018);
  *(_QWORD *)(v1 + 32) = v3;
  v4 = type metadata accessor for ServiceAssembly();
  v5 = swift_allocObject();
  *(_QWORD *)(v1 + 96) = v4;
  *(_QWORD *)(v1 + 104) = sub_1ABCFE1EC(&qword_1ED350660, (uint64_t (*)(uint64_t))type metadata accessor for ServiceAssembly, (uint64_t)&unk_1ABF3B2FC);
  *(_QWORD *)(v1 + 72) = v5;
  v6 = type metadata accessor for ManagerAssembly();
  v7 = swift_allocObject();
  *(_QWORD *)(v1 + 136) = v6;
  *(_QWORD *)(v1 + 144) = sub_1ABCFE1EC(&qword_1ED350658, (uint64_t (*)(uint64_t))type metadata accessor for ManagerAssembly, (uint64_t)&unk_1ABF46C58);
  *(_QWORD *)(v1 + 112) = v7;
  v8 = type metadata accessor for NewsCoreAssembly();
  v9 = swift_allocObject();
  *(_QWORD *)(v1 + 176) = v8;
  *(_QWORD *)(v1 + 184) = sub_1ABCFE1EC(&qword_1ED350510, (uint64_t (*)(uint64_t))type metadata accessor for NewsCoreAssembly, (uint64_t)&unk_1ABF488FC);
  *(_QWORD *)(v1 + 152) = v9;
  v10 = type metadata accessor for URLAssembly();
  v11 = swift_allocObject();
  *(_QWORD *)(v1 + 216) = v10;
  *(_QWORD *)(v1 + 224) = sub_1ABCFE1EC(&qword_1ED350548, (uint64_t (*)(uint64_t))type metadata accessor for URLAssembly, (uint64_t)&unk_1ABF50694);
  *(_QWORD *)(v1 + 192) = v11;
  v12 = type metadata accessor for CacheDatabaseAssembly();
  v13 = swift_allocObject();
  *(_QWORD *)(v1 + 256) = v12;
  *(_QWORD *)(v1 + 264) = sub_1ABCFE1EC(&qword_1ED350DA0, (uint64_t (*)(uint64_t))type metadata accessor for CacheDatabaseAssembly, (uint64_t)&unk_1ABF4D954);
  *(_QWORD *)(v1 + 232) = v13;
  v14 = type metadata accessor for DebugAssembly();
  v15 = swift_allocObject();
  *(_QWORD *)(v1 + 296) = v14;
  *(_QWORD *)(v1 + 304) = sub_1ABCFE1EC(&qword_1ED350628, (uint64_t (*)(uint64_t))type metadata accessor for DebugAssembly, (uint64_t)&unk_1ABF3ADF8);
  *(_QWORD *)(v1 + 272) = v15;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_1ABD03638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB46A0];
  v3 = sub_1ABF3100C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void sub_1ABD0367C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABD0BA64(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t *sub_1ABD036A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1ABF30760();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    sub_1ABF2FF5C();
    if (v13(v10, 1, v11))
    {
      sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 24);
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    sub_1ABF2FF5C();
  }
  return v4;
}

uint64_t sub_1ABD037D8(uint64_t *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(_QWORD *, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD v11[5];

  v10 = *a1;
  swift_beginAccess();
  v2 = a1[19];
  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v3)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v3 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1AF4380CC](v5, v2);
      }
      else
      {
        v6 = *(_QWORD *)(v2 + 8 * v5 + 32);
        sub_1ABF2FF68();
      }
      v11[3] = v10;
      v11[4] = &off_1E5AE5D08;
      v11[0] = a1;
      if (MEMORY[0x1AF4390D4](v6 + 16))
      {
        v7 = *(_QWORD *)(v6 + 24);
        ObjectType = swift_getObjectType();
        v9 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 16);
        swift_retain_n();
        v9(v11, ObjectType, v7);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain_n();
      }
      ++v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      swift_release();
      swift_release();
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD03950@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t result;

  v7 = a1(0);
  swift_allocObject();
  result = a2();
  a4[3] = v7;
  a4[4] = a3;
  *a4 = result;
  return result;
}

uint64_t sub_1ABD039B0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x6F436C61626F6C67;
}

_OWORD *sub_1ABD03A20()
{
  _OWORD *v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FFD0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v1 = (_OWORD *)swift_allocObject();
  v2 = v0[4];
  v15 = v0[5];
  v3 = v15;
  v16 = v2;
  v1[1] = xmmword_1ABF3B7C0;
  v1[2] = v2;
  v4 = v0[6];
  v13 = v0[7];
  v5 = v13;
  v14 = v4;
  v1[3] = v3;
  v1[4] = v4;
  v6 = v0[8];
  v11 = v0[9];
  v12 = v6;
  v1[5] = v5;
  v1[6] = v6;
  v7 = v0[9];
  v10 = v0[10];
  v8 = v10;
  v1[7] = v7;
  v1[8] = v8;
  sub_1ABD03ADC((uint64_t)&v16);
  sub_1ABD03ADC((uint64_t)&v15);
  sub_1ABD03ADC((uint64_t)&v14);
  sub_1ABD03ADC((uint64_t)&v13);
  sub_1ABD03ADC((uint64_t)&v12);
  sub_1ABD03ADC((uint64_t)&v11);
  sub_1ABD03ADC((uint64_t)&v10);
  return v1;
}

uint64_t sub_1ABD03ADC(uint64_t a1)
{
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABD03B0C(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return sub_1ABF2FF68();
}

void sub_1ABD03B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;

  type metadata accessor for AppGroup();
  v7 = swift_allocObject();
  sub_1ABD03BD8(a2, a3);
  *a4 = v7;
}

uint64_t type metadata accessor for AppGroup()
{
  uint64_t result;

  result = qword_1ED350388;
  if (!qword_1ED350388)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1ABD03BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;

  v5 = v2 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain);
  *v7 = a1;
  v7[1] = a2;
  v8 = *MEMORY[0x1E0DB57F8];
  v9 = sub_1ABF309F4();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v7, v8, v9);
  v10 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  swift_bridgeObjectRetain_n();
  v11 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_initWithSuiteName_, v11);

  if (v12)
    *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore8AppGroup_userDefaults) = v12;
  else
    __break(1u);
}

uint64_t sub_1ABD03CE0()
{
  sub_1ABD03D24();
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABD03D24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DD80)
  {
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DD80);
  }
}

uint64_t storeEnumTagSinglePayload for PriceChangeDisplay(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABD03DC8 + 4 * byte_1ABF50175[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABD03DFC + 4 * byte_1ABF50170[v4]))();
}

uint64_t sub_1ABD03DFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD03E04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD03E0CLL);
  return result;
}

uint64_t sub_1ABD03E18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD03E20);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABD03E24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD03E2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD03E38()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x446873696C627570;
}

uint64_t storeEnumTagSinglePayload for AppConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 3112) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 3096) = 0u;
    *(_OWORD *)(result + 3080) = 0u;
    *(_OWORD *)(result + 3064) = 0u;
    *(_OWORD *)(result + 3048) = 0u;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 3120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 3120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AppConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 3120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t getEnumTagSinglePayload for FlexiblePaywall(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 160);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1ABD042A0()
{
  uint64_t (*v0)(void);
  void *v1;
  void *v2;
  uint64_t v3;

  v0 = MEMORY[0x1E0DEAEC8];
  sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v1 = (void *)sub_1ABF31114();
  sub_1ABD33E84();
  sub_1ABF31234();
  swift_release();

  v2 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))v0);
  v3 = sub_1ABF31180();
  swift_release();

  return v3;
}

uint64_t sub_1ABD04390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = MEMORY[0x1E0DEA968];
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v1 + 32) = sub_1ABF317A4();
  *(_QWORD *)(v1 + 40) = v2;
  sub_1ABD04518(0, (unint64_t *)&qword_1ED34DD60, (unint64_t *)&qword_1ED34FCB0, v0);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD0443C(uint64_t a1, _QWORD *a2)
{
  return sub_1ABD04450(a1, a2);
}

uint64_t sub_1ABD04450(uint64_t a1, _QWORD *a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v7;
  _OWORD v8[2];

  v3 = a2[12];
  v4 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v3);
  v5 = v2[2];
  v7 = v2[1];
  v8[0] = v5;
  *(_OWORD *)((char *)v8 + 10) = *(_OWORD *)((char *)v2 + 42);
  return (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v4 + 128))(&v7, v3, v4);
}

uint64_t sub_1ABD044BC()
{
  sub_1ABD04518(0, &qword_1ED34DD38, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock);
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABD04518(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1ABD04578(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = sub_1ABF3124C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1ABD04578(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1ABD045BC()
{
  uint64_t (*v0)(void);
  unint64_t TupleTypeMetadata2;
  uint64_t v2;

  if (!qword_1ED34DFC0)
  {
    v0 = MEMORY[0x1E0DEAEC8];
    sub_1ABD04578(255, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34DFC0);
  }
}

uint64_t sub_1ABD04660()
{
  uint64_t (*v0)(void);
  void *v1;
  uint64_t v2;

  v0 = MEMORY[0x1E0DEAEC8];
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v1 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))v0);
  v2 = sub_1ABF3118C();
  swift_release();

  return v2;
}

uint64_t sub_1ABD04728()
{
  return sub_1ABD04A3C();
}

uint64_t sub_1ABD04748(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  _OWORD *v17;
  __int128 v18;
  void *v19;
  __int128 v21;
  _BYTE v22[26];
  uint64_t v23;

  v3 = *a2;
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  sub_1ABF2FF68();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD1226C(v4, (uint64_t)a2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  v6 = v5[2];
  if (v6)
  {
    v23 = v3;
    sub_1ABF2FF5C();
    v7 = 4;
    while (1)
    {
      v8 = *(_OWORD *)&v5[v7];
      v9 = *(_OWORD *)&v5[v7 + 2];
      *(_OWORD *)&v22[10] = *(_OWORD *)((char *)&v5[v7 + 3] + 2);
      v21 = v8;
      *(_OWORD *)v22 = v9;
      v10 = *(_QWORD *)&v22[16];
      if (*((_QWORD *)&v9 + 1) == sub_1ABF317A4() && v10 == v11)
      {
        sub_1ABD04B78((uint64_t)&v21);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      v13 = sub_1ABF3223C();
      sub_1ABD04B78((uint64_t)&v21);
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        break;
      sub_1ABD04BC0((uint64_t)&v21);
      v7 += 6;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_14:
    v16 = MEMORY[0x1E0DEAEC8];
    sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABF3127C();
    v17 = (_OWORD *)swift_allocObject();
    v18 = *(_OWORD *)v22;
    v17[1] = v21;
    v17[2] = v18;
    *(_OWORD *)((char *)v17 + 42) = *(_OWORD *)&v22[10];
    sub_1ABD04B78((uint64_t)&v21);
    v19 = (void *)sub_1ABF31114();
    sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))v16);
    v15 = sub_1ABF3118C();
    swift_release();
    swift_release();

    sub_1ABD04BC0((uint64_t)&v21);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_11:
    sub_1ABF15024();
    swift_allocError();
    *v14 = 2;
    sub_1ABD34E80(0, &qword_1ED34DD38, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_allocObject();
    return sub_1ABF311D4();
  }
  return v15;
}

uint64_t sub_1ABD04A3C()
{
  uint64_t (*v0)(void);
  _OWORD *v1;
  __int128 v2;
  void *v3;
  uint64_t v4;
  __int128 v6;
  _BYTE v7[26];
  __int128 v8;
  _OWORD v9[2];

  sub_1ABF2FF68();
  sub_1ABF31534();
  swift_release();
  v8 = v6;
  v9[0] = *(_OWORD *)v7;
  *(_OWORD *)((char *)v9 + 10) = *(_OWORD *)&v7[10];
  v0 = MEMORY[0x1E0DEAEC8];
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v1 = (_OWORD *)swift_allocObject();
  v2 = v9[0];
  v1[1] = v6;
  v1[2] = v2;
  *(_OWORD *)((char *)v1 + 42) = *(_OWORD *)((char *)v9 + 10);
  sub_1ABD04B78((uint64_t)&v8);
  v3 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))v0);
  v4 = sub_1ABF3118C();
  swift_release();
  swift_release();

  sub_1ABD04BC0((uint64_t)&v8);
  return v4;
}

uint64_t sub_1ABD04B78(uint64_t a1)
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABD04BC0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABD04C04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  id v4;
  id v5;

  v3 = sub_1ABF3133C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v5 = objc_msgSend(v4, sel_bundleIdentifier);

  if (v5)
  {
    sub_1ABF317A4();

  }
  return sub_1ABF31330();
}

uint64_t sub_1ABD04CE8()
{
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED346E28, (uint64_t (*)(uint64_t))sub_1ABD05308, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD04D58(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  sub_1ABD226F0();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v16 - v6;
  if (*a1
    && (v8 = objc_msgSend(*a1, sel_encryptedValues),
        v9 = (void *)sub_1ABF31780(),
        v10 = objc_msgSend(v8, sel_objectForKeyedSubscript_, v9),
        swift_unknownObjectRelease(),
        v9,
        v10))
  {
    v16[1] = v10;
    sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
    v11 = sub_1ABF30760();
    v12 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, v12 ^ 1u, 1, v11);
  }
  else
  {
    v13 = sub_1ABF30760();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  }
  sub_1ABCFF5B4((uint64_t)v7, (uint64_t)v5);
  sub_1ABCF5A54(0, &qword_1ED346DC8, (uint64_t (*)(uint64_t))sub_1ABD226F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v14 = sub_1ABF311E0();
  sub_1ABCFF610((uint64_t)v7);
  return v14;
}

id sub_1ABD04F28(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _BYTE *v12;
  void *v13;
  id v14;
  int v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  objc_super v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  uint64_t v27;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2;
  v13 = (void *)sub_1ABF31780();
  v14 = objc_msgSend(a1, sel_decodeObjectForKey_, v13);

  if (v14)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    v15 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v15 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      (*(void (**)(_BYTE *, char *, uint64_t))(v9 + 16))(&v12[OBJC_IVAR___SCUpdateUserStartDateCommand_startDate], v11, v8);
      v16 = (void *)sub_1ABF31780();
      v17 = objc_msgSend(a1, sel_decodeObjectForKey_, v16);

      if (v17)
      {
        sub_1ABF31DD4();
        swift_unknownObjectRelease();
      }
      else
      {
        v24 = 0u;
        v25 = 0u;
      }
      sub_1ABD22B10((uint64_t)&v24, (uint64_t)v26);
      if (v27)
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v19 = sub_1ABF32068();
          swift_bridgeObjectRelease();
          if (v19 == 2)
            v20 = 2;
          else
            v20 = v19 == 1;
          goto LABEL_18;
        }
      }
      else
      {
        sub_1ABCFC3BC((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1ABD22B54);
      }
      v20 = 0;
LABEL_18:
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v12[OBJC_IVAR___SCUpdateUserStartDateCommand_mergePolicy] = v20;

      v23.receiver = v12;
      v23.super_class = ObjectType;
      v18 = objc_msgSendSuper2(&v23, sel_init);

      return v18;
    }
  }
  else
  {
    sub_1ABCFC3BC((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1ABD22B54);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }

  sub_1ABCFC3BC((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1ABD05288()
{
  void *v0;
  uint64_t v1;

  sub_1ABD05308();
  sub_1ABF3127C();
  v0 = (void *)sub_1ABF31114();
  sub_1ABD226F0();
  v1 = sub_1ABF31174();
  swift_release();

  return v1;
}

void sub_1ABD05308()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346F90)
  {
    sub_1ABCF7BCC(255, (unint64_t *)&qword_1ED34E140);
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346F90);
  }
}

uint64_t sub_1ABD0536C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;

  v49 = a2;
  v48 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  MEMORY[0x1E0C80A78](v48);
  v50 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = type metadata accessor for ForYouConfigRecord.Configuration(0);
  MEMORY[0x1E0C80A78](v47);
  v46 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF301A8();
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF317D4();
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  MEMORY[0x1E0C80A78](v7);
  v40 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1ED347000, (uint64_t (*)(void))sub_1ABD40238, (uint64_t)&type metadata for ForYouConfigRecord.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v38 - v12;
  v14 = (int *)type metadata accessor for ForYouConfigRecord(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD40238();
  v17 = v51;
  sub_1ABF3235C();
  if (v17)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = v11;
  v54 = 0;
  v20 = v13;
  sub_1ABF320C8();
  v21 = v52;
  v22 = v53;
  if (!v53)
  {
    v21 = 0x676E697373696DLL;
    v22 = 0xE700000000000000;
  }
  *v16 = v21;
  v16[1] = v22;
  v54 = 2;
  sub_1ABD165AC();
  v23 = sub_1ABD10510((unint64_t *)&qword_1ED34FCC8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1ABF320C8();
  v39 = v23;
  if (v52)
    v24 = v52;
  else
    v24 = MEMORY[0x1E0DEE9D8];
  *(uint64_t *)((char *)v16 + v14[6]) = v24;
  v54 = 3;
  sub_1ABF2FF5C();
  v51 = 0;
  sub_1ABF320C8();
  v25 = v52;
  v26 = v53;
  if (!v53)
  {
    v25 = 0;
    v26 = 0xE000000000000000;
  }
  v27 = (uint64_t *)((char *)v16 + v14[7]);
  *v27 = v25;
  v27[1] = v26;
  v54 = 4;
  sub_1ABF320C8();
  v39 = (uint64_t)v20;
  v28 = v52;
  if (v52)
  {
    swift_bridgeObjectRelease();
    v24 = v28;
  }
  *(uint64_t *)((char *)v16 + v14[8]) = v24;
  LOBYTE(v52) = 1;
  v29 = sub_1ABF3208C();
  v31 = v50;
  if (!v30)
    goto LABEL_19;
  v32 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0)
    v32 = v29 & 0xFFFFFFFFFFFFLL;
  if (!v32)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    sub_1ABF30754();
    *v31 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v39, v10);
    v36 = (uint64_t)v16 + v14[5];
    v37 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories;
    goto LABEL_20;
  }
  v33 = v40;
  sub_1ABF317C8();
  v48 = sub_1ABF317B0();
  v35 = v34;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v33, v42);
  v50 = (_QWORD *)v35;
  if (v35 >> 60 != 15)
  {
    sub_1ABF301E4();
    swift_allocObject();
    sub_1ABF301D8();
    (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, *MEMORY[0x1E0CAE038], v45);
    sub_1ABF301B4();
    sub_1ABCFE1EC(&qword_1ED346B28, type metadata accessor for ForYouConfigRecord.Configuration, (uint64_t)&unk_1ABF4C784);
    v31 = v46;
    sub_1ABF301C0();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v39, v10);
    swift_release();
    sub_1ABD0D868(v48, (unint64_t)v50);
    v36 = (uint64_t)v16 + v14[5];
    v37 = type metadata accessor for ForYouConfigRecord.Configuration;
LABEL_20:
    sub_1ABCFE2AC((uint64_t)v31, v36, v37);
    sub_1ABCFC790((uint64_t)v16, v49, type metadata accessor for ForYouConfigRecord);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1ABCFC3BC((uint64_t)v16, type metadata accessor for ForYouConfigRecord);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD05A28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v34 = a2;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v31 - v4;
  v38 = sub_1ABF30760();
  v36 = *(_QWORD *)(v38 - 8);
  v5 = MEMORY[0x1E0C80A78](v38);
  v37 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v31 - v7;
  sub_1ABCF4DA8(0, &qword_1ED347010, (uint64_t (*)(void))sub_1ABD3FFE8, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.TopStories.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v40 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - v10;
  v12 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD3FFE8();
  v15 = v41;
  sub_1ABF3235C();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v32 = v12;
  v33 = v14;
  v41 = v9;
  v17 = v38;
  v16 = v39;
  v18 = v37;
  v44 = 1;
  sub_1ABCF5A54(0, &qword_1ED346F28, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD33F50((unint64_t *)&unk_1ED346F30, &qword_1ED346B00, (uint64_t)&unk_1ABF4CB20, MEMORY[0x1E0DEAF40]);
  v19 = v40;
  sub_1ABF320C8();
  v21 = v42;
  if (!v42)
    v21 = MEMORY[0x1E0DEE9D8];
  v22 = v19;
  *v33 = v21;
  sub_1ABF30754();
  v43 = 0;
  sub_1ABCFE1EC(&qword_1ED34CCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v23 = (uint64_t)v16;
  v24 = v17;
  sub_1ABF320C8();
  v31 = v11;
  v25 = v36;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v23, 1, v24) == 1)
  {
    sub_1ABD184CC(v23, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v26 = 2;
    v27 = (uint64_t)v18;
    v28 = v34;
    v29 = v35;
  }
  else
  {
    v26 = 4;
    v28 = v34;
    v29 = v35;
    v27 = v23;
  }
  v30 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 8 * v26))(v29, v27, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v24);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v30 + *(int *)(v32 + 20), v29, v24);
  sub_1ABCFC790(v30, v28, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1ABCFC3BC(v30, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
}

uint64_t sub_1ABD05E34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v3 = sub_1ABF31594();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1ABF315D0();
  v7 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD133B8();
  v10 = (void *)sub_1ABF31C24();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_1ABD44E8C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor;
  v12 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  swift_release();
  sub_1ABF315AC();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE22C((unint64_t *)&unk_1ED34FB10, 255, v4, MEMORY[0x1E0DEF510]);
  sub_1ABD1339C(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED34FCA0, 255, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v9, v6, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v14);
}

void sub_1ABD0604C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DDB8)
  {
    type metadata accessor for Quote();
    sub_1ABD4500C();
    sub_1ABCFE22C(&qword_1ED34DA68, 255, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t)&unk_1ABF43088);
    sub_1ABCFE22C(&qword_1ED34DA60, 255, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t)&unk_1ABF430B0);
    v0 = sub_1ABF313FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DDB8);
  }
}

void sub_1ABD0611C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[5];

  if (!*a2)
  {
    v8[0] = &type metadata for SDSAuthTokenManager.StoreDescriptor;
    v8[1] = type metadata accessor for SDSAuthToken();
    v8[2] = sub_1ABD3EF40();
    v8[3] = sub_1ABCFE1EC(&qword_1ED34EC90, (uint64_t (*)(uint64_t))type metadata accessor for SDSAuthToken, (uint64_t)&protocol conformance descriptor for SDSAuthToken);
    v8[4] = sub_1ABCFE1EC(&qword_1ED34EC88, (uint64_t (*)(uint64_t))type metadata accessor for SDSAuthToken, (uint64_t)&protocol conformance descriptor for SDSAuthToken);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1ABD061E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[5];

  if (!*a2)
  {
    v8[0] = &type metadata for QuoteDetailManager.StoreDescriptor;
    v8[1] = type metadata accessor for QuoteDetail();
    v8[2] = sub_1ABD3FA24();
    v8[3] = sub_1ABCFE22C(&qword_1ED34CD78, 255, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, (uint64_t)&protocol conformance descriptor for QuoteDetail);
    v8[4] = sub_1ABCFE22C(&qword_1ED34CD70, 255, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, (uint64_t)&protocol conformance descriptor for QuoteDetail);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

id NewsCoreConfiguration.copy(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  double v24;
  unsigned __int8 v25;
  double v26;
  double v27;
  unsigned __int8 v28;
  id result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  __int128 v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  _BYTE v45[512];
  _BYTE v46[1120];
  uint64_t v47[9];
  uint64_t v48[4];
  _BYTE __dst[3120];
  _BYTE v50[3120];
  _BYTE v51[520];

  MEMORY[0x1E0C80A78](a1);
  v2 = v1;
  v36 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v34 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_experimentalizableFieldPostfix + 8);
  v35 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_experimentalizableFieldPostfix);
  memcpy(v50, (const void *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration), sizeof(v50));
  memcpy(__dst, (const void *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration), sizeof(__dst));
  v5 = v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration + 8);
  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(_QWORD *)(v5 + 24);
  v48[0] = v6;
  v48[1] = v7;
  v48[2] = v8;
  v48[3] = v9;
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 8);
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 16);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 24);
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 32);
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 40);
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 48);
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 56);
  v33 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 64);
  v47[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration);
  v47[1] = v10;
  v47[2] = v12;
  v47[3] = v11;
  v47[4] = v14;
  v47[5] = v13;
  v47[6] = v16;
  v47[7] = v15;
  v47[8] = v33;
  memcpy(v46, (const void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsPersonalizationTreatment), 0x45BuLL);
  v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_endpointConfigurations);
  memcpy(v51, (const void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleConfiguration), 0x1F9uLL);
  memcpy(v45, (const void *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleConfiguration), 0x1F9uLL);
  v17 = *(_BYTE *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 16);
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 24);
  v19 = *(_BYTE *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 32);
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 40);
  v21 = *(_BYTE *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 48);
  v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 56);
  v23 = *(_BYTE *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration + 64);
  v37 = *(_OWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration);
  v38 = v17;
  v39 = v18;
  v40 = v19;
  v41 = v20;
  v42 = v21;
  v43 = v22;
  v44 = v23;
  v30 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_maxRetriesForDroppedFeeds);
  v31 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_analyticsEndpointMaxPayloadSize);
  v24 = *(double *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_delayBeforeRetryingDroppedFeeds);
  v25 = *(_BYTE *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_enableCacheFallbackForArticleRecirculation);
  v26 = *(double *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollLoadingTimeout);
  v27 = *(double *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollReadyToPlayTimeout);
  v28 = *(_BYTE *)(v2 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_isPrivateDataEncryptionRequired);
  objc_allocWithZone(ObjectType);
  sub_1ABF2FF5C();
  sub_1ABDC1FEC((uint64_t)v50);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD0B274((uint64_t)v51);
  sub_1ABF2FF5C();
  result = NewsCoreConfiguration.init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)(v35, v34, __dst, v48, v47, v46, v32, v45, v24, v26, v27, &v37, v31, v30, v25, v28);
  v36[3] = ObjectType;
  *v36 = result;
  return result;
}

uint64_t sub_1ABD065C8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1ABD065E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *);
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;

  v2 = sub_1ABF30B80();
  v38 = *(void (**)(char *, uint64_t))(v2 - 8);
  v39 = v2;
  MEMORY[0x1E0C80A78](v2);
  v37 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF310FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF312B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350930);
  sub_1ABF30F4C();
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB5028], v8);
  sub_1ABF30A84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v12 = *MEMORY[0x1E0DB4A18];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350DB0);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350680);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350768);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED3508F0);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350800);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED3508C8);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350668);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350480);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350DA8);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350880);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABF30FF4();
  sub_1ABF30F40();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350A18);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&qword_1ED350780);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, *MEMORY[0x1E0DB4A00], v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350900);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED3507F8);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3506F8);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED3504C8);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED3504B8);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD33EE4(0, (unint64_t *)&qword_1ED350B48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350920);
  sub_1ABF30F4C();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C58();
  type metadata accessor for SDSAuthTokenRefresher();
  sub_1ABF30F40();
  swift_release();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C64();
  sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  sub_1ABF30F40();
  v15 = swift_release();
  MEMORY[0x1AF437C4C](v15);
  sub_1ABF30A90();
  swift_release();
  swift_bridgeObjectRelease();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C64();
  sub_1ABF30F40();
  v16 = swift_release();
  MEMORY[0x1AF437C4C](v16);
  sub_1ABF30A90();
  swift_release();
  swift_bridgeObjectRelease();
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C64();
  sub_1ABF30F40();
  v17 = swift_release();
  MEMORY[0x1AF437C4C](v17);
  sub_1ABF30A90();
  swift_release();
  swift_bridgeObjectRelease();
  v34 = v12;
  v13(v7, v12, v4);
  v36 = v13;
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  v35 = v14;
  sub_1ABF30C64();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABF314E0();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  v32 = a1;
  sub_1ABF30C64();
  type metadata accessor for WatchlistDeprecationMonitor();
  sub_1ABF30F40();
  swift_release();
  v33 = v4;
  v13(v7, v12, v4);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v14(v7, v4);
  sub_1ABF30C70();
  __swift_project_boxed_opaque_existential_1(v40, v41);
  sub_1ABD079D8(0, &qword_1ED350B10);
  v31 = *MEMORY[0x1E0DB36E0];
  v18 = v37;
  v19 = v38;
  v30 = (void (*)(char *))*((_QWORD *)v38 + 13);
  v20 = v39;
  v30(v37);
  sub_1ABF30FAC();
  v21 = (void (*)(char *, uint64_t))*((_QWORD *)v19 + 1);
  v21(v18, v20);
  v38 = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  sub_1ABF30C70();
  v29 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350B18);
  v22 = v31;
  v23 = (void (*)(char *, uint64_t, uint64_t))v30;
  ((void (*)(char *, _QWORD, uint64_t))v30)(v18, v31, v20);
  sub_1ABF30FAC();
  v21(v18, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  sub_1ABF30C70();
  __swift_project_boxed_opaque_existential_1(v40, v41);
  sub_1ABF30ED4();
  v23(v18, v22, v20);
  sub_1ABF30FA0();
  v38(v18, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  sub_1ABF30C64();
  type metadata accessor for SDSAttributionProvider();
  sub_1ABF30F40();
  swift_release();
  v24 = v34;
  v25 = v33;
  v26 = v36;
  v36(v7, v34, v33);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v27 = v35;
  v35(v7, v25);
  sub_1ABF30C64();
  sub_1ABF30F40();
  swift_release();
  v26(v7, v24, v25);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v27(v7, v25);
  sub_1ABF30C64();
  type metadata accessor for SDSMetadataCache();
  sub_1ABF30F40();
  swift_release();
  v26(v7, v24, v25);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v27(v7, v25);
  sub_1ABF30C64();
  type metadata accessor for AppleAttributionProvider();
  sub_1ABF30F40();
  swift_release();
  v26(v7, v24, v25);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v27(v7, v25);
  sub_1ABF30C64();
  type metadata accessor for YahooAttributionProvider();
  sub_1ABF30F40();
  swift_release();
  v26(v7, v24, v25);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v27)(v7, v25);
}

uint64_t sub_1ABD079D8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

BOOL sub_1ABD07B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v21;

  v0 = sub_1ABF30868();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, &qword_1ED34CCD8, (void (*)(uint64_t))MEMORY[0x1E0CB0AE8]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - v9;
  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  v12 = qword_1ED34E878;
  v11 = qword_1ED34E880;
  sub_1ABF2FF5C();
  sub_1ABF30844();
  sub_1ABF30874();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1ABF30850();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v13 = sub_1ABF307C0();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
  {
    sub_1ABD18510((uint64_t)v10, &qword_1ED34CCD8, (void (*)(uint64_t))MEMORY[0x1E0CB0AE8]);
    v15 = 0;
    v16 = 0;
  }
  else
  {
    v15 = sub_1ABF307B4();
    v16 = v17;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
  }
  if ((v12 != 0x353534333431 || v11 != 0xE600000000000000) && (sub_1ABF3223C() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (!v16)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v15 != 29286 || v16 != 0xE200000000000000)
  {
    v19 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v19 & 1) != 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1ABD07E04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1ABD07E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1ABD08054(0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  sub_1ABD07F74();
  sub_1ABCFE1EC(&qword_1ED34DDF8, (uint64_t (*)(uint64_t))sub_1ABD07F74, MEMORY[0x1E0C95FB8]);
  sub_1ABF31564();
  swift_release();
  sub_1ABCFE1EC(&qword_1ED346EC0, (uint64_t (*)(uint64_t))sub_1ABD08054, MEMORY[0x1E0C95988]);
  sub_1ABD08068();
  sub_1ABF31570();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1ABD07F74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE00)
  {
    v0 = sub_1ABF31540();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE00);
  }
}

void sub_1ABD07FD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1ABD07F74();
    v7 = v6;
    v8 = sub_1ABCFE1EC(&qword_1ED34DDF8, (uint64_t (*)(uint64_t))sub_1ABD07F74, MEMORY[0x1E0C95FB8]);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1ABD08054(uint64_t a1)
{
  sub_1ABD07FD8(a1, &qword_1ED346EC8, MEMORY[0x1E0C95978]);
}

unint64_t sub_1ABD08068()
{
  unint64_t result;

  result = qword_1ED34DB48;
  if (!qword_1ED34DB48)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45948, &type metadata for Watchlist);
    atomic_store(result, (unint64_t *)&qword_1ED34DB48);
  }
  return result;
}

uint64_t sub_1ABD080AC()
{
  return sub_1ABF2FF68();
}

uint64_t sub_1ABD080B8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABD080D4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABD080D4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, &qword_1ED34E318, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[136 * v8])
      memmove(v12, v13, 136 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[136 * v8] || v12 >= &v13[136 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

void sub_1ABD08268(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = sub_1ABF31624();
  sub_1ABF2FF68();
  v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

}

void sub_1ABD082F0(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1ABD08320(a1, a2, *(void (**)(void))(v2 + 40), *(_QWORD *)(v2 + 48), *(void (**)(void *))(v2 + 56));
}

void sub_1ABD08320(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4, void (*a5)(void *))
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    swift_getErrorValue();
    v8 = a2;
    if ((sub_1ABE5DCE0(v17) & 1) != 0)
    {
      swift_getTupleTypeMetadata2();
      sub_1ABF31A68();
      sub_1ABF31654();
      a3();

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABF31BE8();
      sub_1ABD0F55C();
      v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1ABF366E0;
      v11 = sub_1ABF323B0();
      v13 = v12;
      v14 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
      v15 = sub_1ABD0F5C0();
      *(_QWORD *)(v10 + 64) = v15;
      *(_QWORD *)(v10 + 32) = v11;
      *(_QWORD *)(v10 + 40) = v13;
      sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
      sub_1ABF31F6C();
      *(_QWORD *)(v10 + 96) = v14;
      *(_QWORD *)(v10 + 104) = v15;
      *(_QWORD *)(v10 + 72) = 0;
      *(_QWORD *)(v10 + 80) = 0xE000000000000000;
      sub_1ABD19560();
      v16 = (void *)sub_1ABF31D44();
      sub_1ABF31318();
      swift_bridgeObjectRelease();

      a5(a2);
    }
  }
  else
  {
    v9 = MEMORY[0x1E0DEA968];
    v18 = sub_1ABF31600();
    MEMORY[0x1E0C80A78](v18);
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, v9, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABF31690();
    sub_1ABD085F8();
    sub_1ABF3193C();
    a3();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1ABD085F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34DFE0;
  if (!qword_1ED34DFE0)
  {
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34DFE0);
  }
  return result;
}

uint64_t sub_1ABD08658(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 40);
  v4 = a1;
  return v2(&v4);
}

void sub_1ABD08688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  _QWORD aBlock[6];

  v7 = sub_1ABD39858(a5, a2);
  v9 = v8;
  v10 = MEMORY[0x1E0DED1E8];
  sub_1ABCF5A54(0, &qword_1ED347058, (uint64_t (*)(uint64_t))sub_1ABD34484, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF36EA0;
  *(_QWORD *)(inited + 32) = 0xD000000000000012;
  *(_QWORD *)(inited + 40) = 0x80000001ABF5F540;
  *(_QWORD *)(inited + 48) = &unk_1E5AEEBC8;
  *(_QWORD *)(inited + 56) = sub_1ABF317A4();
  *(_QWORD *)(inited + 64) = v12;
  sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FFD0, (uint64_t (*)(_QWORD, _QWORD))v10);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1ABF366E0;
  *(_QWORD *)(v13 + 32) = sub_1ABF317A4();
  *(_QWORD *)(v13 + 40) = v14;
  *(_QWORD *)(v13 + 48) = sub_1ABF317A4();
  *(_QWORD *)(v13 + 56) = v15;
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(inited + 80) = sub_1ABF317A4();
  *(_QWORD *)(inited + 88) = v16;
  *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEE9D8];
  sub_1ABD34950(inited);
  v18 = objc_msgSend((id)objc_opt_self(), sel_ignoreCacheCachePolicy);
  if (qword_1ED346D08 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED346C20, v17, (uint64_t (*)(uint64_t))type metadata accessor for ForYouConfigRecordService, (uint64_t)&unk_1ABF45D88);
  sub_1ABF30970();
  if ((aBlock[0] & 1) != 0)
  {
    v19 = 0;
  }
  else
  {
    v20 = objc_allocWithZone(MEMORY[0x1E0D58AC8]);
    v21 = (void *)sub_1ABF31780();
    v22 = (void *)sub_1ABF31780();
    v19 = objc_msgSend(v20, sel_initWithGroupName_cacheControlKey_, v21, v22);

  }
  v23 = (void *)a5[2];
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v24 + 32) = v7;
  *(_QWORD *)(v24 + 40) = v9;
  sub_1ABF2FF5C();
  v25 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FCB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  v26 = (void *)sub_1ABF31618();
  swift_bridgeObjectRelease();
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = a1;
  v27[3] = a2;
  v27[4] = a3;
  v27[5] = a4;
  v27[6] = v7;
  v27[7] = v9;
  aBlock[4] = sub_1ABD39524;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD08268;
  aBlock[3] = &block_descriptor_24;
  v28 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v23, sel_fetchRecordTreeWithRootIDs_branchKeysByRecordType_cachePolicy_edgeCacheHint_completion_, v25, v26, v18, v19, v28);
  _Block_release(v28);

}

uint64_t sub_1ABD08A40()
{
  uint64_t v0;

  return sub_1ABD08F74(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1ABD08A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABD08A84(a1, a2, a3, a4, *(_QWORD *)(v4 + 40), *(void **)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
}

void sub_1ABD08A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v17;
  id v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD aBlock[6];

  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a8;
  v17[3] = a9;
  v17[4] = a10;
  v17[5] = a1;
  v17[6] = a2;
  sub_1ABF2FF68();
  v18 = sub_1ABD08BEC(a5);
  v19 = (void *)sub_1ABF319FC();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a8;
  v20[3] = a9;
  v20[4] = a10;
  v20[5] = sub_1ABD08658;
  v20[6] = v17;
  v20[7] = a3;
  v20[8] = a4;
  v20[9] = a7;
  aBlock[4] = sub_1ABD082F0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD08268;
  aBlock[3] = &block_descriptor_14;
  v21 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  swift_release();
  objc_msgSend(a6, sel_fetchRecordsWithIDs_cachePolicy_completion_, v19, v18, v21);
  _Block_release(v21);

}

id sub_1ABD08BEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  char *v11;
  id result;
  int v13;
  double v14;
  id v15;
  id v16;
  uint64_t v17;

  sub_1ABD09088();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF30B14();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (double *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v17 - v10;
  sub_1ABD08F30(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1ABD0903C((uint64_t)v4);
    return objc_msgSend((id)objc_opt_self(), sel_defaultCachePolicy);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(double *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  v13 = (*(uint64_t (**)(double *, uint64_t))(v6 + 88))(v9, v5);
  if (v13 == *MEMORY[0x1E0DB32B8])
  {
    (*(void (**)(double *, uint64_t))(v6 + 96))(v9, v5);
    v14 = *v9;
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D589F0]), sel_init);
    objc_msgSend(v15, sel_setCachePolicy_, 3);
    objc_msgSend(v15, sel_setMaximumCachedAge_, v14);
    goto LABEL_13;
  }
  if (v13 == *MEMORY[0x1E0DB32C8])
  {
    (*(void (**)(double *, uint64_t))(v6 + 96))(v9, v5);
    v16 = objc_msgSend((id)objc_opt_self(), sel_cachePolicyWithSoftMaxAge_, *v9);
LABEL_12:
    v15 = v16;
LABEL_13:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return v15;
  }
  if (v13 == *MEMORY[0x1E0DB32A0])
  {
    v16 = objc_msgSend((id)objc_opt_self(), sel_ignoreCacheCachePolicy);
    goto LABEL_12;
  }
  if (v13 == *MEMORY[0x1E0DB32B0])
  {
    v16 = objc_msgSend((id)objc_opt_self(), sel_cachedOnlyCachePolicy);
    goto LABEL_12;
  }
  if (v13 == *MEMORY[0x1E0DB32A8])
  {
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D589F0]), sel_init);
    objc_msgSend(v15, sel_setCachePolicy_, 2);
    objc_msgSend(v15, sel_setMaximumCachedAge_, 1.79769313e308);
    goto LABEL_13;
  }
  result = (id)sub_1ABF31FCC();
  __break(1u);
  return result;
}

uint64_t sub_1ABD08F30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD09088();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD08F74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_1ABD09088();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v6 = sub_1ABF30B14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = sub_1ABD0E930(a2);
  sub_1ABD0903C((uint64_t)v5);
  return v7;
}

uint64_t sub_1ABD0903C(uint64_t a1)
{
  uint64_t v2;

  sub_1ABD00308(0, (unint64_t *)&qword_1ED34DC20, (void (*)(uint64_t))MEMORY[0x1E0DB32D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1ABD09088()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DC20)
  {
    sub_1ABF30B14();
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DC20);
  }
}

uint64_t sub_1ABD090DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  BOOL v27;
  char v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __CFString *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  _QWORD *v84;
  char v85;
  unint64_t v86;
  uint64_t v87;
  _BOOL8 v88;
  uint64_t v89;
  char v90;
  unint64_t v91;
  char v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  int64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  void *v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  int v139;
  void *v140;
  uint64_t v141;
  id v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  id v146;
  id v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t result;
  _QWORD v151[3];
  _QWORD *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  __CFString *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unsigned __int16 v174;
  _QWORD *isa;
  _QWORD *v176;

  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v157 = (char *)v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF31774();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v151 - v11;
  v14 = *a1;
  v13 = (_QWORD *)a1[1];
  v153 = a2;
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v15 = *(_QWORD *)(v14 + 16);
  v152 = v13;
  if (!v15)
  {
    v17 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v72 = v13[2];
    if (v72)
      goto LABEL_38;
    goto LABEL_57;
  }
  v156 = v6;
  v154 = v12;
  v159 = CFSTR("watchlist");
  sub_1ABF2FF5C();
  v151[1] = v14;
  v16 = (unsigned __int8 *)(v14 + 73);
  v17 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v158 = v7;
  v155 = v10;
  while (1)
  {
    v163 = v17;
    v20 = v7;
    v160 = *(_QWORD *)(v16 - 41);
    v21 = *(_QWORD *)(v16 - 33);
    v22 = *(_QWORD *)(v16 - 25);
    v23 = *(_QWORD *)(v16 - 17);
    v24 = *(_QWORD *)(v16 - 9);
    LODWORD(v161) = *(v16 - 1);
    v25 = *v16;
    v27 = v23 == sub_1ABF317A4() && v24 == v26;
    v164 = v21;
    v165 = v22;
    LODWORD(v162) = v25;
    v166 = v23;
    if (v27)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    else
    {
      v28 = sub_1ABF3223C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        swift_bridgeObjectRetain_n();
        v29 = v163;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v169 = v29;
        v31 = v166;
        v33 = sub_1ABD00F9C(v166, v24);
        v34 = v29[2];
        v35 = (v32 & 1) == 0;
        v36 = v34 + v35;
        if (__OFADD__(v34, v35))
          goto LABEL_72;
        v37 = v32;
        if (v29[3] < v36)
        {
          sub_1ABD09FAC(v36, isUniquelyReferenced_nonNull_native);
          v38 = sub_1ABD00F9C(v31, v24);
          if ((v37 & 1) != (v39 & 1))
            goto LABEL_76;
          v33 = v38;
          v17 = v169;
          if ((v37 & 1) == 0)
            goto LABEL_34;
LABEL_30:
          v63 = v17[7] + 48 * v33;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v64 = v164;
          v65 = v165;
          *(_QWORD *)v63 = v160;
          *(_QWORD *)(v63 + 8) = v64;
          *(_QWORD *)(v63 + 16) = v65;
          *(_QWORD *)(v63 + 24) = v31;
          *(_QWORD *)(v63 + 32) = v24;
          *(_BYTE *)(v63 + 40) = v161;
          *(_BYTE *)(v63 + 41) = v162;
LABEL_36:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v7 = v158;
          goto LABEL_5;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v17 = v169;
          if ((v32 & 1) != 0)
            goto LABEL_30;
        }
        else
        {
          sub_1ABE6EAA8();
          v17 = v169;
          if ((v37 & 1) != 0)
            goto LABEL_30;
        }
LABEL_34:
        v17[(v33 >> 6) + 8] |= 1 << v33;
        v66 = (uint64_t *)(v17[6] + 16 * v33);
        *v66 = v31;
        v66[1] = v24;
        v67 = v17[7] + 48 * v33;
        v68 = v164;
        v69 = v165;
        *(_QWORD *)v67 = v160;
        *(_QWORD *)(v67 + 8) = v68;
        *(_QWORD *)(v67 + 16) = v69;
        *(_QWORD *)(v67 + 24) = v31;
        *(_QWORD *)(v67 + 32) = v24;
        *(_BYTE *)(v67 + 40) = v161;
        *(_BYTE *)(v67 + 41) = v162;
        v70 = v17[2];
        v61 = __OFADD__(v70, 1);
        v71 = v70 + 1;
        if (v61)
          goto LABEL_74;
        v17[2] = v71;
        sub_1ABF2FF5C();
        goto LABEL_36;
      }
    }
    v160 = v15;
    v40 = v154;
    sub_1ABF31738();
    v41 = v156;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v155, v40, v156);
    if (qword_1ED34FD78 != -1)
      swift_once();
    v42 = (id)qword_1ED368428;
    sub_1ABF30844();
    v43 = sub_1ABF317EC();
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v40, v41);
    swift_bridgeObjectRetain_n();
    sub_1ABF2FF5C();
    v46 = v163;
    v47 = swift_isUniquelyReferenced_nonNull_native();
    v169 = v46;
    v49 = sub_1ABD00F9C(v166, v24);
    v50 = v46[2];
    v51 = (v48 & 1) == 0;
    v52 = v50 + v51;
    if (__OFADD__(v50, v51))
      break;
    v53 = v48;
    if (v46[3] >= v52)
    {
      if ((v47 & 1) != 0)
      {
        v17 = v169;
        if ((v48 & 1) == 0)
          goto LABEL_26;
      }
      else
      {
        sub_1ABE6EAA8();
        v17 = v169;
        if ((v53 & 1) == 0)
          goto LABEL_26;
      }
    }
    else
    {
      sub_1ABD09FAC(v52, v47);
      v54 = sub_1ABD00F9C(v166, v24);
      if ((v53 & 1) != (v55 & 1))
      {
LABEL_76:
        result = sub_1ABF3229C();
        __break(1u);
        return result;
      }
      v49 = v54;
      v17 = v169;
      if ((v53 & 1) == 0)
      {
LABEL_26:
        v17[(v49 >> 6) + 8] |= 1 << v49;
        v56 = (_QWORD *)(v17[6] + 16 * v49);
        v58 = v165;
        v57 = v166;
        *v56 = v166;
        v56[1] = v24;
        v59 = v17[7] + 48 * v49;
        *(_QWORD *)v59 = v43;
        *(_QWORD *)(v59 + 8) = v45;
        *(_QWORD *)(v59 + 16) = v58;
        *(_QWORD *)(v59 + 24) = v57;
        *(_QWORD *)(v59 + 32) = v24;
        *(_BYTE *)(v59 + 40) = v161;
        *(_BYTE *)(v59 + 41) = v162;
        v60 = v17[2];
        v61 = __OFADD__(v60, 1);
        v62 = v60 + 1;
        if (v61)
          goto LABEL_70;
        v17[2] = v62;
        sub_1ABF2FF5C();
        goto LABEL_4;
      }
    }
    v18 = v17[7] + 48 * v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v18 = v43;
    *(_QWORD *)(v18 + 8) = v45;
    v19 = v166;
    *(_QWORD *)(v18 + 16) = v165;
    *(_QWORD *)(v18 + 24) = v19;
    *(_QWORD *)(v18 + 32) = v24;
    *(_BYTE *)(v18 + 40) = v161;
    *(_BYTE *)(v18 + 41) = v162;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v7 = v158;
    v15 = v160;
LABEL_5:
    v16 += 48;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      v13 = v152;
      v72 = v152[2];
      if (v72)
      {
LABEL_38:
        v73 = (__CFString *)(v153 + 64);
        sub_1ABF2FF5C();
        v74 = v13 + 5;
        v159 = v73;
        while (1)
        {
          if (v17[2])
          {
            v76 = *(v74 - 1);
            v75 = *v74;
            swift_bridgeObjectRetain_n();
            v77 = sub_1ABD00F9C(v76, v75);
            if ((v78 & 1) != 0)
            {
              v79 = v17[7] + 48 * v77;
              v80 = *(_QWORD *)(v79 + 8);
              v160 = *(_QWORD *)v79;
              v81 = *(_QWORD *)(v79 + 16);
              v163 = *(_QWORD **)(v79 + 24);
              v82 = *(_QWORD *)(v79 + 32);
              LODWORD(v165) = *(unsigned __int8 *)(v79 + 40);
              LODWORD(v166) = *(unsigned __int8 *)(v79 + 41);
              v161 = v80;
              sub_1ABF2FF5C();
              v162 = v81;
              sub_1ABF2FF5C();
              v164 = v82;
              sub_1ABF2FF5C();
              swift_bridgeObjectRelease();
              swift_beginAccess();
              v83 = swift_isUniquelyReferenced_nonNull_native();
              isa = v73->isa;
              v84 = isa;
              v73->isa = (void *)0x8000000000000000;
              v86 = sub_1ABD00F9C(v76, v75);
              v87 = v84[2];
              v88 = (v85 & 1) == 0;
              v89 = v87 + v88;
              if (__OFADD__(v87, v88))
                goto LABEL_71;
              v90 = v85;
              if (v84[3] >= v89)
              {
                if ((v83 & 1) != 0)
                {
                  v93 = isa;
                  if ((v85 & 1) == 0)
                    goto LABEL_52;
                }
                else
                {
                  sub_1ABE6EAA8();
                  v93 = isa;
                  if ((v90 & 1) == 0)
                    goto LABEL_52;
                }
              }
              else
              {
                sub_1ABD09FAC(v89, v83);
                v91 = sub_1ABD00F9C(v76, v75);
                if ((v90 & 1) != (v92 & 1))
                  goto LABEL_76;
                v86 = v91;
                v93 = isa;
                if ((v90 & 1) == 0)
                {
LABEL_52:
                  v93[(v86 >> 6) + 8] |= 1 << v86;
                  v97 = (uint64_t *)(v93[6] + 16 * v86);
                  *v97 = v76;
                  v97[1] = v75;
                  v98 = v93[7] + 48 * v86;
                  v99 = v161;
                  *(_QWORD *)v98 = v160;
                  *(_QWORD *)(v98 + 8) = v99;
                  v100 = v163;
                  *(_QWORD *)(v98 + 16) = v162;
                  *(_QWORD *)(v98 + 24) = v100;
                  *(_QWORD *)(v98 + 32) = v164;
                  *(_BYTE *)(v98 + 40) = v165;
                  *(_BYTE *)(v98 + 41) = v166;
                  v101 = v93[2];
                  v61 = __OFADD__(v101, 1);
                  v102 = v101 + 1;
                  if (v61)
                    goto LABEL_73;
                  v93[2] = v102;
                  sub_1ABF2FF5C();
                  goto LABEL_54;
                }
              }
              v94 = v93[7] + 48 * v86;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v95 = v161;
              *(_QWORD *)v94 = v160;
              *(_QWORD *)(v94 + 8) = v95;
              v96 = v163;
              *(_QWORD *)(v94 + 16) = v162;
              *(_QWORD *)(v94 + 24) = v96;
              *(_QWORD *)(v94 + 32) = v164;
              *(_BYTE *)(v94 + 40) = v165;
              *(_BYTE *)(v94 + 41) = v166;
LABEL_54:
              v73 = v159;
              v159->isa = v93;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_endAccess();
              goto LABEL_40;
            }
            swift_bridgeObjectRelease_n();
          }
LABEL_40:
          v74 += 2;
          if (!--v72)
          {
            swift_bridgeObjectRelease();
            v103 = v152;
            swift_bridgeObjectRelease();
            goto LABEL_58;
          }
        }
      }
LABEL_57:
      swift_bridgeObjectRelease();
      v103 = v13;
LABEL_58:
      v176 = v103;
      v104 = sub_1ABF317A4();
      v106 = sub_1ABD33984(v104, v105, v103);
      v108 = v107;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      v109 = v153;
      if ((v108 & 1) == 0 && v106 > 0)
      {
        sub_1ABF12DF0(v106);
        swift_bridgeObjectRelease();
        v110 = sub_1ABF317A4();
        sub_1ABF20834(0, 0, v110, v111);
      }
      v112 = v176;
      swift_beginAccess();
      *(_QWORD *)(v109 + 56) = v112;
      swift_bridgeObjectRelease();
      if (qword_1ED34CA60 != -1)
        goto LABEL_75;
      goto LABEL_62;
    }
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  swift_once();
LABEL_62:
  v113 = (void *)qword_1ED3683A8;
  sub_1ABD0F55C();
  v115 = v114;
  v116 = swift_allocObject();
  *(_OWORD *)(v116 + 16) = xmmword_1ABF366E0;
  swift_beginAccess();
  v117 = v113;
  sub_1ABF2FF5C();
  v118 = MEMORY[0x1E0DEA968];
  v119 = sub_1ABF31630();
  v121 = v120;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v116 + 56) = v118;
  v122 = sub_1ABD0F5C0();
  *(_QWORD *)(v116 + 64) = v122;
  *(_QWORD *)(v116 + 32) = v119;
  *(_QWORD *)(v116 + 40) = v121;
  v123 = v153;
  v124 = MEMORY[0x1AF437C34](v152, v118);
  *(_QWORD *)(v116 + 96) = v118;
  *(_QWORD *)(v116 + 104) = v122;
  *(_QWORD *)(v116 + 72) = v124;
  *(_QWORD *)(v116 + 80) = v125;
  sub_1ABF31BF4();
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  v126 = *(void **)(v123 + 32);
  v127 = (void *)sub_1ABF31780();
  v128 = objc_msgSend(v126, sel_stringForKey_, v127);

  if (v128)
  {
    v129 = sub_1ABF317A4();
    v131 = v130;

    v167 = *(_QWORD *)(v123 + 40);
    MEMORY[0x1E0C80A78](v132);
    v151[-4] = v123;
    v151[-3] = v129;
    v151[-2] = v131;
    sub_1ABF30AFC();
    sub_1ABD04578(0, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABF2FF68();
    sub_1ABF31090();
    swift_bridgeObjectRelease();
    swift_release();
    v133 = v170;
    if (v170)
    {
      v135 = v172;
      v134 = v173;
      v165 = v115;
      v166 = v122;
      v136 = v171;
      v137 = (uint64_t)v169;
      v138 = v174;
      v139 = HIBYTE(v174);
      sub_1ABF2FF68();
      sub_1ABF31528();
      swift_release();
      v140 = (void *)qword_1ED3683A8;
      v141 = swift_allocObject();
      *(_OWORD *)(v141 + 16) = xmmword_1ABF366C0;
      v167 = 0;
      v168 = 0xE000000000000000;
      v169 = (_QWORD *)v137;
      v170 = v133;
      v171 = v136;
      v172 = v135;
      v173 = v134;
      LOBYTE(v174) = v138;
      HIBYTE(v174) = v139;
      v142 = v140;
      sub_1ABF31F6C();
      sub_1ABD365D4(v137, v133);
      v143 = v167;
      v144 = v168;
      v145 = v166;
      *(_QWORD *)(v141 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v141 + 64) = v145;
      *(_QWORD *)(v141 + 32) = v143;
      *(_QWORD *)(v141 + 40) = v144;
      sub_1ABF31BF4();
      sub_1ABF31318();

      swift_bridgeObjectRelease();
      v123 = v153;
      goto LABEL_68;
    }
    v147 = (id)qword_1ED3683A8;
    sub_1ABF31BF4();
    sub_1ABF31318();

    v123 = v153;
  }
  else
  {
    v146 = (id)qword_1ED3683A8;
    sub_1ABF31BF4();
    sub_1ABF31318();

  }
  sub_1ABF19A74();
LABEL_68:
  sub_1ABD41AC4();
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  sub_1ABF2FF68();
  v148 = sub_1ABF2FF5C();
  v149 = sub_1ABD1226C(v148, v123);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  v169 = v149;
  sub_1ABD34E80(0, (unint64_t *)&unk_1ED34DD50, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD09FAC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, &qword_1ED34E1C8);
  v40 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = sub_1ABF2FF68();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 48 * v21;
      v33 = *(_QWORD *)(v32 + 8);
      v41 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 16);
      v44 = *(_QWORD *)(v32 + 24);
      v35 = *(_QWORD *)(v32 + 32);
      v42 = *(_BYTE *)(v32 + 41);
      v43 = *(_BYTE *)(v32 + 40);
      if ((v40 & 1) == 0)
      {
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      sub_1ABF32308();
      sub_1ABF31840();
      result = sub_1ABF32338();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = *(_QWORD *)(v7 + 56) + 48 * v17;
      *(_QWORD *)v19 = v41;
      *(_QWORD *)(v19 + 8) = v33;
      *(_QWORD *)(v19 + 16) = v34;
      *(_QWORD *)(v19 + 24) = v44;
      *(_QWORD *)(v19 + 32) = v35;
      *(_BYTE *)(v19 + 40) = v43;
      *(_BYTE *)(v19 + 41) = v42;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1ABD0A31C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  double v37;
  double v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;

  v1 = sub_1ABF30760();
  v62 = *(_QWORD *)(v1 - 8);
  v63 = v1;
  MEMORY[0x1E0C80A78](v1);
  v61 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD345AC(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v52 - v7);
  if (qword_1ED346698 != -1)
LABEL_39:
    swift_once();
  v9 = (id)qword_1ED368318;
  sub_1ABF31BF4();
  v57 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1ABF31318();

  swift_beginAccess();
  v56 = v0;
  v10 = *(_QWORD *)(v0 + 24);
  v11 = *(_QWORD *)(v10 + 64);
  v58 = v10 + 64;
  v12 = 1 << *(_BYTE *)(v10 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v15 = (unint64_t)(v12 + 63) >> 6;
  v53 = v15 - 1;
  v16 = sub_1ABF2FF5C();
  v0 = 0;
  v59 = v15;
  v60 = v16;
  v54 = v16 + 104;
  v55 = v15 - 5;
  v18 = v62;
  v17 = v63;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v0 << 6);
LABEL_7:
      v21 = *(_QWORD *)(v60 + 56);
      v22 = (_QWORD *)(*(_QWORD *)(v60 + 48) + 16 * v20);
      v23 = v22[1];
      *v6 = *v22;
      v6[1] = v23;
      v24 = v21 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for EarningsCalendarEventModel() - 8) + 72) * v20;
      sub_1ABD0A8E0(0);
      v26 = v25;
      sub_1ABE33FC0(v24, (uint64_t)v6 + *(int *)(v25 + 48));
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 0, 1, v26);
      sub_1ABF2FF5C();
      goto LABEL_14;
    }
    v27 = v0 + 1;
    if (__OFADD__(v0, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 >= v59)
    {
      v29 = v0;
    }
    else
    {
      v28 = *(_QWORD *)(v58 + 8 * v27);
      if (v28)
        goto LABEL_11;
      v29 = v0 + 1;
      if ((uint64_t)(v0 + 2) < v59)
      {
        v28 = *(_QWORD *)(v58 + 8 * (v0 + 2));
        if (v28)
        {
          v27 = v0 + 2;
LABEL_11:
          v14 = (v28 - 1) & v28;
          v20 = __clz(__rbit64(v28)) + (v27 << 6);
          v0 = v27;
          goto LABEL_7;
        }
        v29 = v0 + 2;
        if ((uint64_t)(v0 + 3) < v59)
        {
          v28 = *(_QWORD *)(v58 + 8 * (v0 + 3));
          if (v28)
          {
            v27 = v0 + 3;
            goto LABEL_11;
          }
          v27 = v0 + 4;
          v29 = v0 + 3;
          if ((uint64_t)(v0 + 4) < v59)
          {
            v28 = *(_QWORD *)(v58 + 8 * v27);
            if (v28)
              goto LABEL_11;
            while (v55 != v0)
            {
              v28 = *(_QWORD *)(v54 + 8 * v0++);
              if (v28)
              {
                v27 = v0 + 4;
                goto LABEL_11;
              }
            }
            v29 = v53;
          }
        }
      }
    }
    sub_1ABD0A8E0(0);
    v26 = v30;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v6, 1, 1, v30);
    v14 = 0;
    v0 = v29;
LABEL_14:
    sub_1ABCFE2AC((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1ABD345AC);
    sub_1ABD0A8E0(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v8, 1, v26) == 1)
      break;
    v31 = v0;
    v32 = *v8;
    v33 = v8[1];
    v34 = (uint64_t)v8 + *(int *)(v26 + 48);
    v35 = type metadata accessor for EarningsCalendarEventModel();
    v36 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v61, v34 + *(int *)(v35 + 24), v17);
    sub_1ABCFC3BC(v34, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
    sub_1ABF306F4();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v36, v17);
    if (v38 < 0.0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v39 = v57;
      else
        v39 = sub_1ABD12054(0, v57[2] + 1, 1, v57);
      v0 = v31;
      v41 = v39[2];
      v40 = v39[3];
      if (v41 >= v40 >> 1)
        v39 = sub_1ABD12054((_QWORD *)(v40 > 1), v41 + 1, 1, v39);
      v39[2] = v41 + 1;
      v57 = v39;
      v42 = &v39[2 * v41];
      v42[4] = v32;
      v42[5] = v33;
    }
    else
    {
      swift_bridgeObjectRelease();
      v0 = v31;
    }
  }
  swift_release();
  v43 = v57;
  if (v57[2])
  {
    v44 = (void *)qword_1ED368318;
    sub_1ABD0F55C();
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1ABF366C0;
    v64 = v43;
    v46 = MEMORY[0x1E0DEA968];
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v47 = v44;
    sub_1ABF2FF5C();
    v48 = sub_1ABF316E4();
    v50 = v49;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v45 + 56) = v46;
    *(_QWORD *)(v45 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v45 + 32) = v48;
    *(_QWORD *)(v45 + 40) = v50;
    sub_1ABF31BF4();
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    sub_1ABE3566C((uint64_t)v43);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v51 = (id)qword_1ED368318;
    sub_1ABF31BF4();
    sub_1ABF31318();

  }
}

void sub_1ABD0A8E0(uint64_t a1)
{
  sub_1ABD0AC84(a1, &qword_1ED346EE0, (void (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel);
}

uint64_t sub_1ABD0A904@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;

  v50 = a1;
  sub_1ABD33A68(0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for EarningsCalendarEventModel();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD345AC(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABD0A8E0(0);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  result = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v1;
  v21 = v1[1];
  v23 = v1[2];
  v22 = v1[3];
  v24 = v22;
  v25 = v1[4];
  v46 = v19;
  v47 = v6;
  v51 = v21;
  v52 = v23;
  if (v25)
  {
    v48 = v3;
    v49 = v4;
    v26 = (v25 - 1) & v25;
    v27 = __clz(__rbit64(v25)) | (v22 << 6);
LABEL_3:
    v28 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * v27);
    v30 = *v28;
    v29 = v28[1];
    v31 = *(_QWORD *)(v20 + 56) + *(_QWORD *)(v8 + 72) * v27;
    v32 = v20;
    sub_1ABE33FC0(v31, (uint64_t)v10);
    v33 = (uint64_t)v13 + *(int *)(v15 + 48);
    *v13 = v30;
    v13[1] = v29;
    sub_1ABCFE2AC((uint64_t)v10, v33, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    sub_1ABF2FF5C();
    v3 = v48;
    v4 = v49;
    goto LABEL_23;
  }
  v34 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v35 = (unint64_t)(v23 + 64) >> 6;
  if (v34 < v35)
  {
    v36 = *(_QWORD *)(v21 + 8 * v34);
    if (v36)
    {
LABEL_7:
      v48 = v3;
      v49 = v4;
      v26 = (v36 - 1) & v36;
      v27 = __clz(__rbit64(v36)) + (v34 << 6);
      v24 = v34;
      goto LABEL_3;
    }
    v37 = v22 + 2;
    v24 = v22 + 1;
    if (v22 + 2 < v35)
    {
      v36 = *(_QWORD *)(v21 + 8 * v37);
      if (v36)
      {
LABEL_10:
        v34 = v37;
        goto LABEL_7;
      }
      v24 = v22 + 2;
      if (v22 + 3 < v35)
      {
        v36 = *(_QWORD *)(v21 + 8 * (v22 + 3));
        if (v36)
        {
          v34 = v22 + 3;
          goto LABEL_7;
        }
        v37 = v22 + 4;
        v24 = v22 + 3;
        if (v22 + 4 < v35)
        {
          v36 = *(_QWORD *)(v21 + 8 * v37);
          if (v36)
            goto LABEL_10;
          v34 = v22 + 5;
          v24 = v22 + 4;
          if (v22 + 5 < v35)
          {
            v36 = *(_QWORD *)(v21 + 8 * v34);
            if (v36)
              goto LABEL_7;
            v24 = v35 - 1;
            v38 = v22 + 6;
            while (v35 != v38)
            {
              v36 = *(_QWORD *)(v21 + 8 * v38++);
              if (v36)
              {
                v34 = v38 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v32 = v20;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v13, 1, 1, v15);
  v26 = 0;
LABEL_23:
  v39 = v51;
  *v1 = v32;
  v1[1] = v39;
  v1[2] = v52;
  v1[3] = v24;
  v1[4] = v26;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_1ABCFC3BC((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1ABD345AC);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v50, 1, 1, v3);
  }
  v40 = (uint64_t)v46;
  sub_1ABCFE2AC((uint64_t)v13, (uint64_t)v46, (uint64_t (*)(_QWORD))sub_1ABD0A8E0);
  v41 = (uint64_t)&v47[*(int *)(v3 + 48)];
  v42 = v1[5];
  result = sub_1ABCFE2AC(v40, v41, (uint64_t (*)(_QWORD))sub_1ABD0A8E0);
  if (__OFADD__(v42, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  v1[5] = v42 + 1;
  v43 = v50;
  v44 = (uint64_t)v50 + *(int *)(v3 + 48);
  *v50 = v42;
  sub_1ABCFE2AC(v41, v44, (uint64_t (*)(_QWORD))sub_1ABD0A8E0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v43, 0, 1, v3);
}

void sub_1ABD0AC84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

id NewsCoreConfiguration.init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)(uint64_t a1, uint64_t a2, const void *a3, uint64_t *a4, uint64_t *a5, const void *a6, uint64_t a7, const void *a8, double a9, double a10, double a11, __int128 *a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, unsigned __int8 a16)
{
  _BYTE *v16;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  _QWORD *v32;
  const void *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  const void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  char *v62;
  objc_class *ObjectType;
  objc_super v64;
  uint64_t v65;
  _BYTE v66[1115];
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  char v71;
  _BYTE v72[528];

  v55 = a3;
  v56 = a7;
  v53 = a1;
  v54 = a2;
  v61 = a16;
  v60 = a15;
  v59 = a14;
  v58 = a13;
  ObjectType = (objc_class *)swift_getObjectType();
  v57 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v57);
  v62 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a4;
  v26 = a4[3];
  v27 = *a5;
  v28 = *(_OWORD *)(a5 + 3);
  v51 = *(_OWORD *)(a5 + 5);
  v52 = v28;
  v29 = a5[7];
  v50 = a5[8];
  memcpy(v66, a6, sizeof(v66));
  memcpy(v72, a8, 0x1F9uLL);
  v30 = a12[3];
  v69 = a12[2];
  v70 = v30;
  v71 = *((_BYTE *)a12 + 64);
  v31 = a12[1];
  v67 = *a12;
  v68 = v31;
  v32 = &v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_experimentalizableFieldPostfix];
  v34 = v54;
  v33 = v55;
  *v32 = v53;
  v32[1] = v34;
  memcpy(&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration], v33, 0xC30uLL);
  v35 = &v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration];
  *(_QWORD *)v35 = v25;
  *(_OWORD *)(v35 + 8) = *(_OWORD *)(a4 + 1);
  *((_QWORD *)v35 + 3) = v26;
  v36 = &v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration];
  *(_QWORD *)v36 = v27;
  *(_OWORD *)(v36 + 8) = *(_OWORD *)(a5 + 1);
  *(_OWORD *)(v36 + 24) = v52;
  *(_OWORD *)(v36 + 40) = v51;
  v37 = v50;
  *((_QWORD *)v36 + 7) = v29;
  *((_QWORD *)v36 + 8) = v37;
  memcpy(&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsPersonalizationTreatment], a6, 0x45BuLL);
  *(_QWORD *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_endpointConfigurations] = v56;
  memcpy(&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleConfiguration], a8, 0x1F9uLL);
  v38 = &v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_paidBundleViaOfferConfiguration];
  v39 = a12[3];
  *((_OWORD *)v38 + 2) = a12[2];
  *((_OWORD *)v38 + 3) = v39;
  v38[64] = *((_BYTE *)a12 + 64);
  v40 = a12[1];
  *(_OWORD *)v38 = *a12;
  *((_OWORD *)v38 + 1) = v40;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_analyticsEndpointMaxPayloadSize] = v58;
  *(_QWORD *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_maxRetriesForDroppedFeeds] = v59;
  *(double *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_delayBeforeRetryingDroppedFeeds] = a9;
  v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_enableCacheFallbackForArticleRecirculation] = v60;
  *(double *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollLoadingTimeout] = a10;
  *(double *)&v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollReadyToPlayTimeout] = a11;
  v16[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_isPrivateDataEncryptionRequired] = v61;
  v41 = swift_allocObject();
  memcpy((void *)(v41 + 16), a8, 0x1F9uLL);
  v42 = MEMORY[0x1E0DEE9D8];
  v65 = MEMORY[0x1E0DEE9D8];
  v43 = v16;
  sub_1ABD0B274((uint64_t)v72);
  sub_1ABD0B24C((uint64_t)&v67);
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350AE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
  sub_1ABD0B230(0);
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350B60, (uint64_t (*)(uint64_t))sub_1ABD0B230, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  sub_1ABD0B1DC(0, &qword_1ED34DCA0, &qword_1ED34E0F8);
  swift_allocObject();
  *(_QWORD *)&v43[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_lazyPaidBundleConfig] = sub_1ABF31078();
  v44 = swift_allocObject();
  v45 = v70;
  *(_OWORD *)(v44 + 48) = v69;
  *(_OWORD *)(v44 + 64) = v45;
  *(_BYTE *)(v44 + 80) = v71;
  v46 = v68;
  *(_OWORD *)(v44 + 16) = v67;
  *(_OWORD *)(v44 + 32) = v46;
  v65 = v42;
  sub_1ABF31E04();
  sub_1ABD0B1DC(0, &qword_1ED34DCA8, &qword_1ED34E100);
  swift_allocObject();
  *(_QWORD *)&v43[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_lazyPaidBundleViaOfferConfig] = sub_1ABF31078();
  v47 = swift_allocObject();
  memcpy((void *)(v47 + 16), v66, 0x45BuLL);
  v65 = v42;
  sub_1ABF31E04();
  sub_1ABD0B1DC(0, (unint64_t *)&unk_1ED34DCB0, &qword_1ED34E108);
  swift_allocObject();
  *(_QWORD *)&v43[OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_lazyPersonalizationTreatment] = sub_1ABF31078();

  v64.receiver = v43;
  v64.super_class = ObjectType;
  return objc_msgSendSuper2(&v64, sel_init);
}

void sub_1ABD0B1DC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1ABCF7BCC(255, a3);
    v4 = sub_1ABF31084();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1ABD0B230(uint64_t a1)
{
  sub_1ABCF5A54(a1, (unint64_t *)&unk_1ED350B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1ABD0B24C(uint64_t a1)
{
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABD0B274(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = *(_QWORD *)(a1 + 216);
  v17 = *(_QWORD *)(a1 + 208);
  v14 = *(_QWORD *)(a1 + 232);
  v15 = *(_QWORD *)(a1 + 224);
  v12 = *(_QWORD *)(a1 + 248);
  v13 = *(_QWORD *)(a1 + 240);
  v10 = *(_QWORD *)(a1 + 264);
  v11 = *(_QWORD *)(a1 + 256);
  v9 = *(_OWORD *)(a1 + 272);
  v8 = *(_OWORD *)(a1 + 288);
  v6 = *(_OWORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 336);
  v4 = *(_OWORD *)(a1 + 352);
  v2 = *(_QWORD *)(a1 + 368);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD1A564(v17, v16, v15, v14, v13, v12, v11, v10, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v2);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABD0B434()
{
  uint64_t v0;

  return sub_1ABDC3A88(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1ABD0B480(uint64_t a1)
{
  return sub_1ABD19B6C(a1);
}

uint64_t sub_1ABD0B4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v5;
  id v6;
  uint64_t result;

  v5 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (v6)
  {
    sub_1ABF317A4();

  }
  sub_1ABD19560();
  result = sub_1ABF31D50();
  *a4 = result;
  return result;
}

uint64_t sub_1ABD0B570()
{
  void *v0;
  uint64_t v1;

  sub_1ABD0EF28();
  sub_1ABF3127C();
  v0 = (void *)sub_1ABF31114();
  v1 = sub_1ABF31174();
  swift_release();

  return v1;
}

void sub_1ABD0B5F4(const void *a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v3;
  id v4;
  void *v5;
  id v6;

  v3 = sub_1ABD0B690(a1);
  sub_1ABD1F230(v3);
  swift_bridgeObjectRelease();
  v4 = objc_allocWithZone(MEMORY[0x1E0D58D40]);
  v5 = (void *)sub_1ABF31618();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithConfigDictionary_, v5);

  *a2 = v6;
}

unint64_t sub_1ABD0B690(const void *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v13;
  id __dst[65];

  __dst[64] = *(id *)MEMORY[0x1E0C80C00];
  sub_1ABF30220();
  swift_allocObject();
  sub_1ABF30214();
  memcpy(__dst, a1, 0x1F9uLL);
  sub_1ABD0B890();
  v2 = sub_1ABF30208();
  v4 = v3;
  swift_release();
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1ABF30640();
  __dst[0] = 0;
  v7 = objc_msgSend(v5, sel_JSONObjectWithData_options_error_, v6, 4, __dst);

  if (!v7)
  {
    v10 = __dst[0];
    v11 = (void *)sub_1ABF3046C();

    swift_willThrow();
    goto LABEL_5;
  }
  v8 = __dst[0];
  sub_1ABF31DD4();
  swift_unknownObjectRelease();
  sub_1ABD18AE0(0, (unint64_t *)&qword_1ED34DE80, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v9 = sub_1ABDEA5B0(MEMORY[0x1E0DEE9D8]);
    sub_1ABD0F430(v2, v4);
    return v9;
  }
  sub_1ABD0F430(v2, v4);
  return v13;
}

unint64_t sub_1ABD0B890()
{
  unint64_t result;

  result = qword_1ED34F500;
  if (!qword_1ED34F500)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B888, &type metadata for PaidBundleConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F500);
  }
  return result;
}

uint64_t sub_1ABD0B8D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABD20884(a1, a2);
}

uint64_t sub_1ABD0B940(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1ABD32D18(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      sub_1ABF2FF5C();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ABD32D18(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1ABD32D18(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1ABD1F610(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1ABD0BA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;

  sub_1ABD19B6C(a6);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1ABF2FF68();
  v9 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  sub_1ABF2FF68();
  v11 = (id)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABD0BB6C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 __dst;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  _BYTE v81[144];
  _QWORD *v82;

  isUniquelyReferenced_nonNull_native = *a1;
  if (qword_1ED34D5E8 != -1)
LABEL_26:
    swift_once();
  v6 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ABF366C0;
  v8 = v6;
  v9 = MEMORY[0x1E0DEA968];
  v60 = isUniquelyReferenced_nonNull_native;
  v10 = sub_1ABF31630();
  v12 = v11;
  *(_QWORD *)(v7 + 56) = v9;
  *(_QWORD *)(v7 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v7 + 32) = v10;
  *(_QWORD *)(v7 + 40) = v12;
  sub_1ABF31BF4();
  sub_1ABF31318();

  result = swift_bridgeObjectRelease();
  v14 = a2[2];
  if (v14)
  {
    v59 = a3;
    sub_1ABF2FF5C();
    v61 = v14 - 1;
    a3 = a2 + 9;
    a2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v16 = *(a3 - 5);
      v15 = *(a3 - 4);
      *(_QWORD *)&__dst = v16;
      *((_QWORD *)&__dst + 1) = v15;
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF31870();
      sub_1ABF2FF5C();
      sub_1ABF31870();
      swift_bridgeObjectRelease();
      sub_1ABF31870();
      sub_1ABF2FF5C();
      sub_1ABF31870();
      swift_bridgeObjectRelease();
      v17 = *((_QWORD *)&__dst + 1);
      v62 = __dst;
      if (*(_QWORD *)(v60 + 16))
      {
        sub_1ABF2FF5C();
        v18 = sub_1ABD00F9C(v16, v15);
        if ((v19 & 1) != 0)
        {
          v20 = (_OWORD *)(*(_QWORD *)(v60 + 56) + 136 * v18);
          v63 = *v20;
          v21 = v20[3];
          v22 = v20[4];
          v23 = v20[2];
          v64 = v20[1];
          v65 = v23;
          v66 = v21;
          v67 = v22;
          v24 = v20[5];
          v25 = v20[6];
          v26 = v20[7];
          v71 = *((_QWORD *)v20 + 16);
          v69 = v25;
          v70 = v26;
          v68 = v24;
          memmove(&__dst, v20, 0x88uLL);
          nullsub_2(&__dst);
          sub_1ABD97ECC((uint64_t)&v63);
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
        swift_bridgeObjectRelease();
      }
      sub_1ABD64550((uint64_t)&__dst);
LABEL_9:
      sub_1ABE11254((uint64_t)&__dst, (uint64_t)v81);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v82 = a2;
      v28 = sub_1ABD00F9C(v62, v17);
      v29 = a2[2];
      v30 = (v27 & 1) == 0;
      v31 = v29 + v30;
      if (__OFADD__(v29, v30))
      {
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      v32 = v27;
      if (a2[3] >= v31)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1ABE6F05C();
      }
      else
      {
        sub_1ABD0C04C(v31, isUniquelyReferenced_nonNull_native);
        v33 = sub_1ABD00F9C(v62, v17);
        if ((v32 & 1) != (v34 & 1))
        {
          result = sub_1ABF3229C();
          __break(1u);
          return result;
        }
        v28 = v33;
      }
      sub_1ABE11254((uint64_t)v81, (uint64_t)&__dst);
      if ((v32 & 1) != 0)
      {
        a2 = v82;
        v35 = v82[7] + 136 * v28;
        v63 = *(_OWORD *)v35;
        v36 = *(_OWORD *)(v35 + 64);
        v38 = *(_OWORD *)(v35 + 16);
        v37 = *(_OWORD *)(v35 + 32);
        v66 = *(_OWORD *)(v35 + 48);
        v67 = v36;
        v64 = v38;
        v65 = v37;
        v40 = *(_OWORD *)(v35 + 96);
        v39 = *(_OWORD *)(v35 + 112);
        v41 = *(_OWORD *)(v35 + 80);
        v71 = *(_QWORD *)(v35 + 128);
        v69 = v40;
        v70 = v39;
        v68 = v41;
        sub_1ABE11A8C(&v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD0DF98);
        *(_OWORD *)v35 = __dst;
        v42 = v76;
        v43 = v74;
        v44 = v73;
        *(_OWORD *)(v35 + 48) = v75;
        *(_OWORD *)(v35 + 64) = v42;
        *(_OWORD *)(v35 + 16) = v44;
        *(_OWORD *)(v35 + 32) = v43;
        v45 = v79;
        v46 = v78;
        v47 = v77;
        *(_QWORD *)(v35 + 128) = v80;
        *(_OWORD *)(v35 + 96) = v46;
        *(_OWORD *)(v35 + 112) = v45;
        *(_OWORD *)(v35 + 80) = v47;
      }
      else
      {
        a2 = v82;
        v82[(v28 >> 6) + 8] |= 1 << v28;
        v48 = (uint64_t *)(a2[6] + 16 * v28);
        *v48 = v62;
        v48[1] = v17;
        v49 = a2[7] + 136 * v28;
        v50 = v80;
        v51 = v79;
        v52 = v78;
        *(_OWORD *)(v49 + 80) = v77;
        *(_OWORD *)(v49 + 96) = v52;
        *(_OWORD *)(v49 + 112) = v51;
        *(_QWORD *)(v49 + 128) = v50;
        v53 = v76;
        v54 = v75;
        v55 = v74;
        *(_OWORD *)(v49 + 16) = v73;
        *(_OWORD *)(v49 + 32) = v55;
        *(_OWORD *)(v49 + 48) = v54;
        *(_OWORD *)(v49 + 64) = v53;
        *(_OWORD *)v49 = __dst;
        v56 = a2[2];
        v57 = __OFADD__(v56, 1);
        v58 = v56 + 1;
        if (v57)
          goto LABEL_25;
        a2[2] = v58;
        sub_1ABF2FF5C();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v61)
      {
        result = swift_bridgeObjectRelease();
        a3 = v59;
        goto LABEL_23;
      }
      a3 += 6;
      --v61;
    }
  }
  a2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_23:
  *a3 = a2;
  return result;
}

uint64_t sub_1ABD0C04C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  int64_t v32;
  _QWORD *v33;
  unint64_t v34;
  int64_t v35;
  uint64_t *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  int64_t v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, &qword_1ED3511D8);
  v55 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v54 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v52 = v2;
  v53 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1ABF2FF68();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      if ((v55 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v32 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v32 >= v53)
      break;
    v33 = (_QWORD *)(v5 + 64);
    v34 = *(_QWORD *)(v54 + 8 * v32);
    ++v13;
    if (!v34)
    {
      v13 = v32 + 1;
      if (v32 + 1 >= v53)
        goto LABEL_33;
      v34 = *(_QWORD *)(v54 + 8 * v13);
      if (!v34)
      {
        v35 = v32 + 2;
        if (v35 >= v53)
        {
LABEL_33:
          swift_release();
          v3 = v52;
          if ((v55 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v34 = *(_QWORD *)(v54 + 8 * v35);
        if (!v34)
        {
          while (1)
          {
            v13 = v35 + 1;
            if (__OFADD__(v35, 1))
              goto LABEL_42;
            if (v13 >= v53)
              goto LABEL_33;
            v34 = *(_QWORD *)(v54 + 8 * v13);
            ++v35;
            if (v34)
              goto LABEL_22;
          }
        }
        v13 = v35;
      }
    }
LABEL_22:
    v10 = (v34 - 1) & v34;
    v22 = __clz(__rbit64(v34)) + (v13 << 6);
    if ((v55 & 1) != 0)
    {
LABEL_10:
      v23 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
      v24 = *v23;
      v25 = v23[1];
      v26 = *(_QWORD *)(v5 + 56) + 136 * v22;
      v27 = *(_OWORD *)(v26 + 112);
      v71 = *(_OWORD *)(v26 + 96);
      v72 = v27;
      v73 = *(_QWORD *)(v26 + 128);
      v28 = *(_OWORD *)(v26 + 48);
      v67 = *(_OWORD *)(v26 + 32);
      v68 = v28;
      v29 = *(_OWORD *)(v26 + 80);
      v69 = *(_OWORD *)(v26 + 64);
      v70 = v29;
      v31 = *(_OWORD *)v26;
      v30 = *(_OWORD *)(v26 + 16);
      goto LABEL_24;
    }
LABEL_23:
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v24 = *v36;
    v25 = v36[1];
    v37 = *(_QWORD *)(v5 + 56) + 136 * v22;
    v56 = *(_OWORD *)v37;
    v38 = *(_OWORD *)(v37 + 64);
    v40 = *(_OWORD *)(v37 + 16);
    v39 = *(_OWORD *)(v37 + 32);
    v59 = *(_OWORD *)(v37 + 48);
    v60 = v38;
    v57 = v40;
    v58 = v39;
    v42 = *(_OWORD *)(v37 + 96);
    v41 = *(_OWORD *)(v37 + 112);
    v43 = *(_OWORD *)(v37 + 80);
    v64 = *(_QWORD *)(v37 + 128);
    v62 = v42;
    v63 = v41;
    v61 = v43;
    sub_1ABF2FF5C();
    sub_1ABDA89F4((uint64_t *)&v56);
    v71 = v62;
    v72 = v63;
    v73 = v64;
    v67 = v58;
    v68 = v59;
    v69 = v60;
    v70 = v61;
    v31 = v56;
    v30 = v57;
LABEL_24:
    v65 = v31;
    v66 = v30;
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v44 = -1 << *(_BYTE *)(v7 + 32);
    v45 = result & ~v44;
    v46 = v45 >> 6;
    if (((-1 << v45) & ~*(_QWORD *)(v11 + 8 * (v45 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v45) & ~*(_QWORD *)(v11 + 8 * (v45 >> 6)))) | v45 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v47 = 0;
      v48 = (unint64_t)(63 - v44) >> 6;
      do
      {
        if (++v46 == v48 && (v47 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v49 = v46 == v48;
        if (v46 == v48)
          v46 = 0;
        v47 |= v49;
        v50 = *(_QWORD *)(v11 + 8 * v46);
      }
      while (v50 == -1);
      v14 = __clz(__rbit64(~v50)) + (v46 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v25;
    v16 = *(_QWORD *)(v7 + 56) + 136 * v14;
    v17 = v72;
    *(_OWORD *)(v16 + 96) = v71;
    *(_OWORD *)(v16 + 112) = v17;
    *(_QWORD *)(v16 + 128) = v73;
    v18 = v68;
    *(_OWORD *)(v16 + 32) = v67;
    *(_OWORD *)(v16 + 48) = v18;
    v19 = v70;
    *(_OWORD *)(v16 + 64) = v69;
    *(_OWORD *)(v16 + 80) = v19;
    v20 = v66;
    *(_OWORD *)v16 = v65;
    *(_OWORD *)(v16 + 16) = v20;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v52;
  v33 = (_QWORD *)(v5 + 64);
  if ((v55 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v51 = 1 << *(_BYTE *)(v5 + 32);
  if (v51 >= 64)
    bzero(v33, ((unint64_t)(v51 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v33 = -1 << v51;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABD0C424()
{
  sub_1ABD0D824();
  return sub_1ABF32398();
}

uint64_t sub_1ABD0C44C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABD0C464(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1ABD0C464(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v22[5];
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 88);
  v10 = *(_BYTE *)(a2 + 96);
  v11 = *(_QWORD *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 112);
  v22[0] = *(_QWORD *)(a2 + 16);
  v22[1] = v5;
  v22[2] = v6;
  v22[3] = v7;
  v22[4] = v8;
  v23 = *(_OWORD *)(a2 + 56);
  v24 = *(_OWORD *)(a2 + 72);
  v25 = v9;
  v26 = v10;
  v27 = v11;
  v28 = v12;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v13 = sub_1ABF31810();
  if (*(_QWORD *)(a3 + 16) && (v15 = sub_1ABD00F9C(v13, v14), (v16 & 1) != 0))
  {
    v17 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = *a1;
    *a1 = 0x8000000000000000;
    sub_1ABD0C5F0((uint64_t)v22, v18, v19, isUniquelyReferenced_nonNull_native);
    *a1 = v29;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD0C5F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1ABD00F9C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1ABDF1B34(a1, v18[7] + 104 * v12);
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1ABE6F288();
      goto LABEL_7;
    }
    sub_1ABD0C784(v15, a4 & 1);
    v20 = sub_1ABD00F9C(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1ABDF1B34(a1, v18[7] + 104 * v12);
LABEL_11:
      sub_1ABD0C718(v12, a2, a3, a1, v18);
      return sub_1ABF2FF5C();
    }
  }
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

unint64_t sub_1ABD0C718(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = a5[7] + 104 * result;
  v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  *(_QWORD *)(v6 + 96) = *(_QWORD *)(a4 + 96);
  v8 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v6 + 80) = v8;
  v9 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = v9;
  v10 = a5[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a5[2] = v12;
  return result;
}

uint64_t sub_1ABD0C784(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t i;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, (unint64_t *)&unk_1ED34E190);
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1ABF2FF68();
  for (i = 0; ; i = v39)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v39 = i;
      v21 = v20 | (i << 6);
      goto LABEL_31;
    }
    v22 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    v25 = i + 1;
    if (!v24)
    {
      v25 = i + 2;
      if (i + 2 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v25);
      if (!v24)
      {
        v26 = i + 3;
        if (i + 3 >= v37)
        {
LABEL_33:
          swift_release();
          v3 = v2;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v26);
        if (!v24)
        {
          while (1)
          {
            v25 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v25 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v25);
            ++v26;
            if (v24)
              goto LABEL_30;
          }
        }
        v25 = i + 3;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v39 = v25;
    v21 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_31:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(v5 + 56) + 104 * v21;
    v44 = *(_QWORD *)(v34 + 16);
    v46 = *(_QWORD *)(v34 + 24);
    v47 = *(_QWORD *)(v34 + 8);
    v43 = *(_QWORD *)(v34 + 32);
    v48 = *(_OWORD *)(v34 + 56);
    v49 = *(_OWORD *)(v34 + 40);
    v45 = *(_QWORD *)(v34 + 72);
    v42 = *(_BYTE *)(v34 + 80);
    v35 = *(_QWORD *)(v34 + 96);
    v40 = *(_QWORD *)v34;
    v41 = *(_QWORD *)(v34 + 88);
    if ((a2 & 1) == 0)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v33;
    v18[1] = v32;
    v19 = *(_QWORD *)(v7 + 56) + 104 * v17;
    *(_QWORD *)v19 = v40;
    *(_QWORD *)(v19 + 8) = v47;
    *(_QWORD *)(v19 + 16) = v44;
    *(_QWORD *)(v19 + 24) = v46;
    *(_QWORD *)(v19 + 32) = v43;
    *(_OWORD *)(v19 + 40) = v49;
    *(_OWORD *)(v19 + 56) = v48;
    *(_QWORD *)(v19 + 72) = v45;
    *(_BYTE *)(v19 + 80) = v42;
    *(_QWORD *)(v19 + 88) = v41;
    *(_QWORD *)(v19 + 96) = v35;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v2;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABD0CB78()
{
  uint64_t v0;

  sub_1ABD0D868(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABD0CBA4()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_1ABF2FF5C();
  sub_1ABD0CC50(v0, &v2);
  sub_1ABD0CBFC();
  swift_allocObject();
  return sub_1ABF311E0();
}

void sub_1ABD0CBFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DD10)
  {
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DD10);
  }
}

uint64_t sub_1ABD0CC50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t i;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t result;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  sub_1ABF2FF5C();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v36 = v3;
  v37 = v7;
  if (!v6)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v8 << 6); ; i = __clz(__rbit64(v15)) + (v8 << 6))
  {
    v12 = *(_QWORD *)(a1 + 56) + 104 * i;
    v13 = *(_QWORD *)(v12 + 72);
    if (!v13)
    {
      if (v6)
        goto LABEL_4;
      goto LABEL_7;
    }
    v38 = *(_QWORD *)(v12 + 64);
    v39 = sub_1ABF31810();
    v40 = v17;
    sub_1ABF2FF5C();
    swift_bridgeObjectRetain_n();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = sub_1ABD00F9C(v39, v40);
    v21 = v9[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      goto LABEL_39;
    v24 = v19;
    if (v9[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1ABE6E690();
      v25 = v40;
      if ((v24 & 1) == 0)
        goto LABEL_25;
    }
    else
    {
      sub_1ABD0EBF8(v23, isUniquelyReferenced_nonNull_native);
      v25 = v40;
      v26 = sub_1ABD00F9C(v39, v40);
      if ((v24 & 1) != (v27 & 1))
        goto LABEL_42;
      v20 = v26;
      if ((v24 & 1) == 0)
      {
LABEL_25:
        v9[(v20 >> 6) + 8] |= 1 << v20;
        v28 = (uint64_t *)(v9[6] + 16 * v20);
        *v28 = v39;
        v28[1] = v25;
        v29 = (_QWORD *)(v9[7] + 16 * v20);
        *v29 = v38;
        v29[1] = v13;
        v30 = v9[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_40;
        v9[2] = v32;
        sub_1ABF2FF5C();
        goto LABEL_31;
      }
    }
    v33 = (_QWORD *)(v9[7] + 16 * v20);
    swift_bridgeObjectRelease();
    *v33 = v38;
    v33[1] = v13;
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v36;
    v7 = v37;
    if (v6)
      goto LABEL_4;
LABEL_7:
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v14 >= v7)
      goto LABEL_37;
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        goto LABEL_37;
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          goto LABEL_37;
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            goto LABEL_37;
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
          {
            v8 = v14 + 4;
            if (v14 + 4 >= v7)
              goto LABEL_37;
            v15 = *(_QWORD *)(v3 + 8 * v8);
            if (!v15)
              break;
          }
        }
      }
    }
LABEL_36:
    v6 = (v15 - 1) & v15;
  }
  v16 = v14 + 5;
  if (v16 >= v7)
  {
LABEL_37:
    swift_release();
    result = swift_bridgeObjectRelease();
    *a2 = v9;
    return result;
  }
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_36;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      goto LABEL_37;
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_36;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD0CFDC()
{
  sub_1ABD0D824();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD0D004@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_1ABCF4DA8(0, &qword_1ED34E1F8, (uint64_t (*)(void))sub_1ABD0D148, (uint64_t)&type metadata for StockRecord.FeedConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD0D148();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1ABF320E0();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

unint64_t sub_1ABD0D148()
{
  unint64_t result;

  result = qword_1ED34CDE8;
  if (!qword_1ED34CDE8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D2BC, &type metadata for StockRecord.FeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CDE8);
  }
  return result;
}

__n128 sub_1ABD0D18C@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[6];
  uint64_t v8;

  sub_1ABD0D1E8(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_QWORD *)(a2 + 96) = v8;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1ABD0D1E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;

  v56 = a2;
  v3 = sub_1ABF317D4();
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1ED34E1F0, (uint64_t (*)(void))sub_1ABD0D824, (uint64_t)&type metadata for StockRecord.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v44 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD0D824();
  v11 = v59;
  sub_1ABF3235C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v55 = v5;
  v12 = v58;
  v59 = a1;
  LOBYTE(v60) = 0;
  v13 = v10;
  v14 = sub_1ABF320E0();
  v17 = v16;
  v18 = v14;
  LOBYTE(v60) = 2;
  sub_1ABF2FF5C();
  v19 = sub_1ABF3208C();
  v20 = v7;
  v54 = v21;
  v49 = v19;
  LOBYTE(v60) = 3;
  sub_1ABF2FF5C();
  v53 = 0;
  v48 = sub_1ABF3208C();
  LOBYTE(v60) = 4;
  v23 = v22;
  sub_1ABF2FF5C();
  v24 = sub_1ABF3208C();
  v52 = v23;
  v46 = v24;
  LOBYTE(v60) = 6;
  v26 = v25;
  sub_1ABF2FF5C();
  v27 = sub_1ABF3208C();
  v51 = v26;
  v45 = v27;
  LOBYTE(v60) = 5;
  v50 = v28;
  sub_1ABF2FF5C();
  v47 = v20;
  v29 = sub_1ABF320B0();
  v31 = (uint64_t)v59;
  if ((v30 & 1) != 0)
  {
    LOBYTE(v60) = 5;
    v32 = sub_1ABF32098();
    if (v32 == 2)
      v62 = 0;
    else
      v62 = v32 & 1;
  }
  else
  {
    v62 = v29 != 0;
  }
  LOBYTE(v60) = 1;
  sub_1ABF320E0();
  v59 = v13;
  v33 = v55;
  sub_1ABF317C8();
  v44 = sub_1ABF317B0();
  v35 = v34;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v33, v12);
  if (v35 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_1ABF301E4();
    swift_allocObject();
    sub_1ABF301D8();
    sub_1ABD0D87C();
    v36 = v44;
    sub_1ABF301C0();
    v37 = v54;
    (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v59, v47);
    swift_release();
    sub_1ABD0D868(v36, v35);
    v38 = v61;
    v58 = v60;
    LODWORD(v59) = v62;
    sub_1ABF2FF5C();
    __swift_destroy_boxed_opaque_existential_1(v31);
    v39 = v50;
    swift_bridgeObjectRelease();
    v40 = v51;
    swift_bridgeObjectRelease();
    v41 = v37;
    v42 = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v43 = v56;
    *v56 = v18;
    v43[1] = v17;
    v43[2] = v58;
    v43[3] = v38;
    v43[4] = v49;
    v43[5] = v41;
    v43[6] = v48;
    v43[7] = v42;
    v43[8] = v46;
    v43[9] = v40;
    *((_BYTE *)v43 + 80) = (_BYTE)v59;
    v43[11] = v45;
    v43[12] = v39;
  }
  return result;
}

unint64_t sub_1ABD0D824()
{
  unint64_t result;

  result = qword_1ED34CDD0;
  if (!qword_1ED34CDD0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D1B4, &type metadata for StockRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CDD0);
  }
  return result;
}

uint64_t sub_1ABD0D868(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1ABD0F430(a1, a2);
  return a1;
}

unint64_t sub_1ABD0D87C()
{
  unint64_t result;

  result = qword_1ED34CE00;
  if (!qword_1ED34CE00)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D18C, &type metadata for StockRecord.FeedConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CE00);
  }
  return result;
}

uint64_t sub_1ABD0D8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t i;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v26;
  uint64_t v28;
  _BYTE v29[136];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[2];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  int64_t v51;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(v2 + 63) >> 6;
  result = sub_1ABF2FF5C();
  v6 = 0;
  if (v4)
    goto LABEL_30;
LABEL_6:
  v7 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v7 < v26)
    {
      v8 = *(_QWORD *)(v24 + 8 * v7);
      ++v6;
      if (v8)
        goto LABEL_21;
      v6 = v7 + 1;
      if (v7 + 1 >= v26)
        return swift_release();
      v8 = *(_QWORD *)(v24 + 8 * v6);
      if (v8)
        goto LABEL_21;
      v6 = v7 + 2;
      if (v7 + 2 >= v26)
        return swift_release();
      v8 = *(_QWORD *)(v24 + 8 * v6);
      if (v8)
        goto LABEL_21;
      v6 = v7 + 3;
      if (v7 + 3 >= v26)
        return swift_release();
      v8 = *(_QWORD *)(v24 + 8 * v6);
      if (v8)
      {
LABEL_21:
        v4 = (v8 - 1) & v8;
        for (i = __clz(__rbit64(v8)) + (v6 << 6); ; i = v23 | (v6 << 6))
        {
          v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
          v13 = *v11;
          v12 = v11[1];
          v14 = *(_QWORD *)(a1 + 56) + 136 * i;
          v32 = *(_OWORD *)v14;
          v15 = *(_OWORD *)(v14 + 16);
          v16 = *(_OWORD *)(v14 + 32);
          v17 = *(_OWORD *)(v14 + 64);
          v35 = *(_OWORD *)(v14 + 48);
          v36 = v17;
          v33 = v15;
          v34 = v16;
          v18 = *(_OWORD *)(v14 + 80);
          v19 = *(_OWORD *)(v14 + 96);
          v20 = *(_OWORD *)(v14 + 112);
          v40 = *(_QWORD *)(v14 + 128);
          v38 = v19;
          v39 = v20;
          v37 = v18;
          v41[0] = v13;
          v41[1] = v12;
          v42 = v32;
          v43 = v33;
          v44 = v34;
          v45 = v35;
          v46 = v17;
          v47 = v18;
          v48 = v19;
          v49 = v20;
          v50 = v40;
          sub_1ABF2FF5C();
          sub_1ABDF1E34((uint64_t)v41);
          sub_1ABD0E028(v13, v12, &v30);
          v21 = v31;
          if (v31)
          {
            v51 = v6;
            v22 = v30;
            sub_1ABF2FF5C();
            sub_1ABD0E2CC(v22, v21);
            sub_1ABDF1E34((uint64_t)v41);
            swift_bridgeObjectRelease();
            sub_1ABE11A8C(&v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD0DF98);
            sub_1ABE11254((uint64_t)&v32, (uint64_t)v29);
            if (sub_1ABD75518((uint64_t)v29) == 1 && (sub_1ABD0DC3C(v22, v21, a2) & 1) == 0)
            {
              sub_1ABF2FF5C();
              sub_1ABCFB740(&v28, v22, v21);
              swift_bridgeObjectRelease();
            }
            sub_1ABDF1E34((uint64_t)v41);
            swift_bridgeObjectRelease();
            sub_1ABE11A8C(&v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD0DF98);
            sub_1ABE11254((uint64_t)&v32, (uint64_t)&v28);
            if (sub_1ABD75518((uint64_t)&v28) != 1 && (sub_1ABD0DC3C(v22, v21, a2) & 1) != 0)
            {
              sub_1ABE112F0(v22, v21);
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            result = sub_1ABE11848((uint64_t)v41);
            v6 = v51;
            if (!v4)
              goto LABEL_6;
          }
          else
          {
            result = sub_1ABE11848((uint64_t)v41);
            if (!v4)
              goto LABEL_6;
          }
LABEL_30:
          v23 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      v9 = v7 + 4;
      if (v9 < v26)
      {
        v8 = *(_QWORD *)(v24 + 8 * v9);
        if (v8)
        {
          v6 = v9;
          goto LABEL_21;
        }
        while (1)
        {
          v6 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_33;
          if (v6 >= v26)
            return swift_release();
          v8 = *(_QWORD *)(v24 + 8 * v6);
          ++v9;
          if (v8)
            goto LABEL_21;
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1ABD0DC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1ABF32308();
    sub_1ABF31840();
    v6 = sub_1ABF32338();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1ABF3223C() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1ABF3223C() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

_QWORD *sub_1ABD0DD70(uint64_t *a1, __int128 *a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[8];
  uint64_t v15;
  __int128 v16;
  _OWORD v17[8];
  uint64_t v18;
  _OWORD v19[8];
  uint64_t v20;

  v3 = a2[7];
  v17[5] = a2[6];
  v17[6] = v3;
  v17[7] = a2[8];
  v18 = *((_QWORD *)a2 + 18);
  v4 = a2[3];
  v17[1] = a2[2];
  v17[2] = v4;
  v5 = a2[5];
  v17[3] = a2[4];
  v17[4] = v5;
  v6 = a2[1];
  v16 = *a2;
  v17[0] = v6;
  v7 = v16;
  sub_1ABDF1E34((uint64_t)&v16);
  swift_bridgeObjectRelease();
  sub_1ABE11254((uint64_t)v17, (uint64_t)v19);
  result = (_QWORD *)sub_1ABD75518((uint64_t)v19);
  if ((_DWORD)result != 1)
  {
    v14[6] = v19[6];
    v14[7] = v19[7];
    v15 = v20;
    v14[2] = v19[2];
    v14[3] = v19[3];
    v14[4] = v19[4];
    v14[5] = v19[5];
    v14[0] = v19[0];
    v14[1] = v19[1];
    sub_1ABDF1E34((uint64_t)&v16);
    sub_1ABE11A8C(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD0DF98);
    sub_1ABD0E028(v7, *((unint64_t *)&v7 + 1), &v12);
    v9 = v13;
    if (v13)
    {
      v10 = v12;
      sub_1ABF2FF5C();
      sub_1ABD0E2CC(v10, v9);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v12 = *a1;
      *a1 = 0x8000000000000000;
      sub_1ABD0E308((uint64_t)v14, v10, v9, isUniquelyReferenced_nonNull_native);
      *a1 = v12;
      swift_bridgeObjectRelease();
      return (_QWORD *)swift_bridgeObjectRelease();
    }
    else
    {
      return sub_1ABE11A8C(v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD0DF98);
    }
  }
  return result;
}

uint64_t sub_1ABD0DF08(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABD0DF98(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1ABD0E028@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  void *v26;
  uint64_t v27;
  id v28;
  _QWORD v29[4];
  _QWORD v30[2];

  v30[0] = 59;
  v30[1] = 0xE100000000000000;
  v29[2] = v30;
  swift_bridgeObjectRetain_n();
  v6 = (_QWORD *)sub_1ABD11938(0x7FFFFFFFFFFFFFFFLL, 1, sub_1ABD11DD4, (uint64_t)v29, a1, a2);
  swift_bridgeObjectRelease();
  if (v6[2] == 3)
  {
    swift_bridgeObjectRelease();
    if (v6[2])
    {
      v7 = v6[4];
      v8 = v6[5];
      a1 = v6[6];
      v9 = v6[7];
      sub_1ABF2FF5C();
      v10 = MEMORY[0x1AF437A3C](v7, v8, a1, v9);
      a2 = v11;
      swift_bridgeObjectRelease();
      if (v6[2] >= 2uLL)
      {
        v12 = v6[8];
        v13 = v6[9];
        v14 = v6[10];
        v15 = v6[11];
        sub_1ABF2FF5C();
        a1 = MEMORY[0x1AF437A3C](v12, v13, v14, v15);
        v17 = v16;
        swift_bridgeObjectRelease();
        if (v6[2] >= 3uLL)
        {
          v18 = v6[12];
          v19 = v6[13];
          v20 = v6[14];
          v21 = v6[15];
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          v22 = MEMORY[0x1AF437A3C](v18, v19, v20, v21);
          v24 = v23;
          swift_bridgeObjectRelease();
          *a3 = v10;
          a3[1] = a2;
          a3[2] = a1;
          a3[3] = v17;
          a3[4] = v22;
          a3[5] = v24;
          return result;
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (qword_1ED34D5E8 != -1)
LABEL_11:
    swift_once();
  v26 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v27 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v27 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v27 + 32) = a1;
  *(_QWORD *)(v27 + 40) = a2;
  sub_1ABF2FF5C();
  v28 = v26;
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  result = 0.0;
  *((_OWORD *)a3 + 1) = 0u;
  *((_OWORD *)a3 + 2) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

unint64_t sub_1ABD0E288()
{
  unint64_t result;

  result = qword_1ED34FB20;
  if (!qword_1ED34FB20)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED34FB20);
  }
  return result;
}

uint64_t sub_1ABD0E2CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABD0E308(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1ABD00F9C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1ABDF1C28(a1, v18[7] + 136 * v12);
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1ABE6E87C();
      goto LABEL_7;
    }
    sub_1ABD0E4A4(v15, a4 & 1);
    v20 = sub_1ABD00F9C(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1ABDF1C28(a1, v18[7] + 136 * v12);
LABEL_11:
      sub_1ABD0E430(v12, a2, a3, a1, v18);
      return sub_1ABF2FF5C();
    }
  }
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

unint64_t sub_1ABD0E430(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = a5[7] + 136 * result;
  v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = v7;
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(a4 + 128);
  v8 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v6 + 96) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v6 + 112) = v8;
  v9 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v6 + 80) = v9;
  v10 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v10;
  v11 = a5[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a5[2] = v13;
  return result;
}

uint64_t sub_1ABD0E4A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t i;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[2];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, &qword_1ED34E1C0);
  v50 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v48 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v46 = v2;
  v47 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1ABF2FF68();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v50 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v47)
      break;
    v27 = v48;
    v28 = v48[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v47)
        goto LABEL_33;
      v28 = v48[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v47)
        {
LABEL_33:
          swift_release();
          v3 = v46;
          if ((v50 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v48[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v47)
              goto LABEL_33;
            v28 = v48[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v50 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 136 * v18;
      v24 = *(_QWORD *)v22;
      v23 = *(_QWORD *)(v22 + 8);
      v25 = *(_QWORD *)(v22 + 24);
      v51 = *(_QWORD *)(v22 + 40);
      v52 = *(_QWORD *)(v22 + 16);
      v53 = *(_QWORD *)(v22 + 56);
      v54 = *(_QWORD *)(v22 + 32);
      v56 = *(_BYTE *)(v22 + 64);
      v55 = *(_QWORD *)(v22 + 80);
      v61 = *(_QWORD *)(v22 + 88);
      v57 = *(_QWORD *)(v22 + 48);
      v58 = *(_QWORD *)(v22 + 96);
      v59 = *(_QWORD *)(v22 + 72);
      v60 = *(_QWORD *)(v22 + 112);
      v63 = *(_QWORD *)(v22 + 104);
      v64 = *(_QWORD *)(v22 + 120);
      v62 = *(_QWORD *)(v22 + 128);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v30;
    v21 = v30[1];
    v31 = *(_QWORD *)(v5 + 56) + 136 * v18;
    v65[0] = *(_OWORD *)v31;
    v32 = *(_OWORD *)(v31 + 64);
    v34 = *(_OWORD *)(v31 + 16);
    v33 = *(_OWORD *)(v31 + 32);
    v67 = *(_OWORD *)(v31 + 48);
    v68 = v32;
    v65[1] = v34;
    v66 = v33;
    v36 = *(_OWORD *)(v31 + 96);
    v35 = *(_OWORD *)(v31 + 112);
    v37 = *(_OWORD *)(v31 + 80);
    v72 = *(_QWORD *)(v31 + 128);
    v70 = v36;
    v71 = v35;
    v69 = v37;
    v62 = v72;
    v63 = *((_QWORD *)&v36 + 1);
    v64 = *((_QWORD *)&v35 + 1);
    v60 = v35;
    v61 = *((_QWORD *)&v37 + 1);
    v58 = v36;
    v59 = *((_QWORD *)&v68 + 1);
    v56 = v68;
    v57 = v67;
    v25 = *((_QWORD *)&v34 + 1);
    v54 = v66;
    v55 = v37;
    v51 = *((_QWORD *)&v66 + 1);
    v23 = *((_QWORD *)&v65[0] + 1);
    v52 = v34;
    v53 = *((_QWORD *)&v67 + 1);
    v24 = *(_QWORD *)&v65[0];
    sub_1ABF2FF5C();
    sub_1ABD97ECC((uint64_t)v65);
LABEL_24:
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v38 = -1 << *(_BYTE *)(v7 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v11 + 8 * (v39 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v11 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v11 + 8 * v40);
      }
      while (v44 == -1);
      v14 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 136 * v14;
    *(_QWORD *)v16 = v24;
    *(_QWORD *)(v16 + 8) = v23;
    *(_QWORD *)(v16 + 16) = v52;
    *(_QWORD *)(v16 + 24) = v25;
    *(_QWORD *)(v16 + 32) = v54;
    *(_QWORD *)(v16 + 40) = v51;
    *(_QWORD *)(v16 + 48) = v57;
    *(_QWORD *)(v16 + 56) = v53;
    *(_BYTE *)(v16 + 64) = v56;
    *(_QWORD *)(v16 + 72) = v59;
    *(_QWORD *)(v16 + 80) = v55;
    *(_QWORD *)(v16 + 88) = v61;
    *(_QWORD *)(v16 + 96) = v58;
    *(_QWORD *)(v16 + 104) = v63;
    *(_QWORD *)(v16 + 112) = v60;
    *(_QWORD *)(v16 + 120) = v64;
    *(_QWORD *)(v16 + 128) = v62;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v46;
  v27 = v48;
  if ((v50 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v45 = 1 << *(_BYTE *)(v5 + 32);
  if (v45 >= 64)
    bzero(v27, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v45;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABD0E930(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_18:
    v24 = sub_1ABF2FF5C();
    sub_1ABE324A0(v24);
    swift_bridgeObjectRelease();
    sub_1ABD0F114();
    sub_1ABD0EF8C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(swift_allocObject() + 16) = v3;
    v25 = (void *)sub_1ABF31114();
    sub_1ABD0EF28();
    sub_1ABD0F0CC();
    v26 = sub_1ABF31240();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    return v26;
  }
  v2 = (uint64_t *)(sub_1ABF2FF5C() + 40);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v28 = v1;
    v6 = *(v2 - 1);
    v5 = *v2;
    v7 = sub_1ABF31810();
    v9 = v8;
    sub_1ABF2FF5C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = sub_1ABD00F9C(v7, v9);
    v13 = v3[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      break;
    v16 = v11;
    if (v3[3] >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v11 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1ABE6E690();
        if ((v16 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1ABD0EBF8(v15, isUniquelyReferenced_nonNull_native);
      v17 = sub_1ABD00F9C(v7, v9);
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_21;
      v12 = v17;
      if ((v16 & 1) != 0)
      {
LABEL_3:
        v4 = (_QWORD *)(v3[7] + 16 * v12);
        swift_bridgeObjectRelease();
        *v4 = v6;
        v4[1] = v5;
        goto LABEL_4;
      }
    }
    v3[(v12 >> 6) + 8] |= 1 << v12;
    v19 = (uint64_t *)(v3[6] + 16 * v12);
    *v19 = v7;
    v19[1] = v9;
    v20 = (_QWORD *)(v3[7] + 16 * v12);
    *v20 = v6;
    v20[1] = v5;
    v21 = v3[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_20;
    v3[2] = v23;
    sub_1ABF2FF5C();
LABEL_4:
    v2 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = v28 - 1;
    if (v28 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD0EBF8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, (unint64_t *)&qword_1ED34FDF0);
  v42 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1ABF2FF68();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1ABD0EF28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE10)
  {
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE10);
  }
}

uint64_t sub_1ABD0EF8C()
{
  sub_1ABF31690();
  sub_1ABF3124C();
  return sub_1ABF3121C();
}

uint64_t sub_1ABD0F01C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_1ABD0F0CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34DE18;
  if (!qword_1ED34DE18)
  {
    sub_1ABD0EF28();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA0D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34DE18);
  }
  return result;
}

unint64_t sub_1ABD0F114()
{
  unint64_t result;

  result = qword_1ED34C7F8[0];
  if (!qword_1ED34C7F8[0])
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D024, &type metadata for StockRecord);
    atomic_store(result, qword_1ED34C7F8);
  }
  return result;
}

void sub_1ABD0F158(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;

  sub_1ABD0F174(a1, a2, v2[5], v2[2], v2[3]);
}

void sub_1ABD0F174(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;

  v10 = sub_1ABF31D5C();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  if (*(_QWORD *)(a3 + 16))
  {
    v13 = *a2;
    v14 = a2[1];
    sub_1ABF2FF5C();
    v15 = sub_1ABD00F9C(v13, v14);
    if ((v16 & 1) != 0)
    {
      v30 = a1;
      v17 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v15);
      v18 = *v17;
      v19 = v17[1];
      sub_1ABD0F474(*v17, v19);
      swift_bridgeObjectRelease();
      sub_1ABF301E4();
      swift_allocObject();
      sub_1ABF2FF5C();
      sub_1ABF301D8();
      v31 = v18;
      v20 = v19;
      sub_1ABF301C0();
      swift_release();
      if (v5)
      {
        swift_bridgeObjectRelease();
        sub_1ABF31BE8();
        sub_1ABD0F55C();
        v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1ABF366E0;
        v22 = sub_1ABF323B0();
        v24 = v23;
        v25 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
        v26 = sub_1ABD0F5C0();
        *(_QWORD *)(v21 + 64) = v26;
        *(_QWORD *)(v21 + 32) = v22;
        *(_QWORD *)(v21 + 40) = v24;
        v32 = 0;
        v33 = 0xE000000000000000;
        v34 = v5;
        sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
        sub_1ABF31F6C();
        v27 = v32;
        v28 = v33;
        *(_QWORD *)(v21 + 96) = v25;
        *(_QWORD *)(v21 + 104) = v26;
        *(_QWORD *)(v21 + 72) = v27;
        *(_QWORD *)(v21 + 80) = v28;
        sub_1ABD19560();
        v29 = (void *)sub_1ABF31D44();
        sub_1ABF31318();
        sub_1ABD0F430(v31, v20);
        swift_bridgeObjectRelease();

      }
      else
      {
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 56))(v12, 0, 1, a5);
        v32 = v13;
        v33 = v14;
        sub_1ABF31690();
        sub_1ABF316A8();
        sub_1ABD0F430(v31, v19);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1ABD0F430(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1ABD0F474(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    sub_1ABF2FF68();
  }
  return sub_1ABF2FF68();
}

uint64_t storeEnumTagSinglePayload for StockRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1ABD0F510(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1ABD0F55C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FFF0)
  {
    sub_1ABD0F510(255, (unint64_t *)&qword_1ED350010);
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FFF0);
  }
}

unint64_t sub_1ABD0F5C0()
{
  unint64_t result;

  result = qword_1ED34FB30;
  if (!qword_1ED34FB30)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED34FB30);
  }
  return result;
}

uint64_t sub_1ABD0F604(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v9 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1ABF366C0;
  v11 = v9;
  v12 = MEMORY[0x1E0DEA968];
  v13 = MEMORY[0x1AF437C34](a1, MEMORY[0x1E0DEA968]);
  v15 = v14;
  *(_QWORD *)(v10 + 56) = v12;
  *(_QWORD *)(v10 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v10 + 32) = v13;
  *(_QWORD *)(v10 + 40) = v15;
  sub_1ABF31BF4();
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    sub_1ABF2FF5C();
    v17 = (unint64_t *)(a1 + 40);
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v20 = *(v17 - 1);
      v21 = *v17;
      sub_1ABF2FF5C();
      sub_1ABD0E028(v20, v21, &v53);
      v22 = v54;
      if (v54)
      {
        v23 = v53;
        v24 = v55;
        v25 = v56;
        v27 = v57;
        v26 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_1ABD0F998(0, v18[2] + 1, 1, v18);
        v28 = v18;
        v29 = v18[2];
        v30 = v28;
        v31 = v28[3];
        if (v29 >= v31 >> 1)
          v30 = sub_1ABD0F998((_QWORD *)(v31 > 1), v29 + 1, 1, v30);
        v30[2] = v29 + 1;
        v19 = &v30[6 * v29];
        v18 = v30;
        v19[4] = v23;
        v19[5] = v22;
        v19[6] = v24;
        v19[7] = v25;
        v19[8] = v27;
        v19[9] = v26;
      }
      v17 += 2;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v32 = v18[2];
  v33 = MEMORY[0x1E0DEE9D8];
  if (v32)
  {
    v53 = MEMORY[0x1E0DEE9D8];
    sub_1ABD16414(0, v32, 0);
    v33 = v53;
    v34 = v18 + 5;
    do
    {
      v36 = *(v34 - 1);
      v35 = *v34;
      v53 = v33;
      v38 = *(_QWORD *)(v33 + 16);
      v37 = *(_QWORD *)(v33 + 24);
      sub_1ABF2FF5C();
      if (v38 >= v37 >> 1)
      {
        sub_1ABD16414(v37 > 1, v38 + 1, 1);
        v33 = v53;
      }
      v34 += 6;
      *(_QWORD *)(v33 + 16) = v38 + 1;
      v39 = v33 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v36;
      *(_QWORD *)(v39 + 40) = v35;
      --v32;
    }
    while (v32);
  }
  v40 = a2[5];
  v41 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v40);
  v53 = a3;
  v54 = a4;
  v55 = a5;
  v56 = a6;
  (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8))(v33, &v53, a7, a8, v40, v41);
  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_allocObject() + 16) = v18;
  v42 = (void *)sub_1ABF31114();
  sub_1ABD25FA4(0, &qword_1ED34DE30, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_1ABF31180();
  swift_release();
  swift_release();

  v43 = (void *)sub_1ABF31114();
  v44 = sub_1ABF311B0();
  swift_release();

  return v44;
}

_QWORD *sub_1ABD0F998(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, &qword_1ED351128, (uint64_t)&type metadata for StockMetadataManager.CacheKey, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1ABD3315C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD0FAD0(_QWORD *a1)
{
  return sub_1ABD0FAE4(a1);
}

uint64_t sub_1ABD0FAE4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[21];
  _BYTE v78[176];
  int v79;
  char v80;

  sub_1ABD104B4(0, &qword_1ED34FF50, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v31 - v6;
  v8 = *v1;
  v75 = v1[1];
  v79 = *((unsigned __int8 *)v1 + 16);
  v74 = *((unsigned __int8 *)v1 + 17);
  v73 = *((unsigned __int8 *)v1 + 18);
  v72 = *((unsigned __int8 *)v1 + 19);
  v71 = v1[3];
  v70 = *((unsigned __int8 *)v1 + 32);
  v9 = v1[5];
  v10 = v1[6];
  v68 = v1[7];
  v69 = v9;
  v11 = v1[8];
  v66 = v1[9];
  v67 = v10;
  v12 = v1[10];
  v64 = v1[11];
  v65 = v11;
  v62 = v1[12];
  v63 = v12;
  v13 = v1[13];
  v60 = v1[14];
  v61 = v13;
  v14 = v1[15];
  v58 = v1[16];
  v59 = v14;
  v15 = v1[17];
  v56 = v1[18];
  v57 = v15;
  v55 = v1[19];
  v16 = v1[21];
  v31[1] = v1[20];
  v32 = v16;
  v17 = v1[23];
  v33 = v1[22];
  v34 = v17;
  v18 = v1[24];
  v35 = v1[25];
  v36 = v18;
  sub_1ABDCBC58((uint64_t)(v1 + 26), (uint64_t)v78);
  v38 = v1[47];
  v37 = *((unsigned __int8 *)v1 + 384);
  v19 = v1[49];
  v39 = *((unsigned __int8 *)v1 + 400);
  v20 = v1[51];
  v21 = v1[52];
  v40 = v19;
  v41 = v21;
  v22 = v1[53];
  v23 = v1[54];
  v42 = v20;
  v43 = v23;
  v24 = v1[55];
  v25 = v1[56];
  v44 = v22;
  v45 = v25;
  v26 = v1[57];
  v46 = v24;
  v47 = v26;
  v27 = v1[59];
  v48 = v1[58];
  v49 = v27;
  LODWORD(v27) = *((unsigned __int8 *)v1 + 481);
  v50 = *((unsigned __int8 *)v1 + 480);
  v51 = v27;
  v28 = v1[62];
  v52 = v1[61];
  v53 = v28;
  v54 = *((unsigned __int8 *)v1 + 504);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD107D0();
  sub_1ABF32368();
  v77[0] = v8;
  v80 = 0;
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD1056C((unint64_t *)&qword_1ED34FCB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  v29 = v76;
  sub_1ABF3217C();
  if (!v29)
  {
    v77[0] = v75;
    v80 = 1;
    sub_1ABF3217C();
    LOBYTE(v77[0]) = 2;
    sub_1ABF321A0();
    LOBYTE(v77[0]) = 3;
    sub_1ABF321A0();
    LOBYTE(v77[0]) = 4;
    sub_1ABF321A0();
    LOBYTE(v77[0]) = 5;
    sub_1ABF321A0();
    LOBYTE(v77[0]) = 6;
    sub_1ABF321B8();
    LOBYTE(v77[0]) = 7;
    sub_1ABF321A0();
    LOBYTE(v77[0]) = 8;
    sub_1ABF321B8();
    LOBYTE(v77[0]) = 9;
    sub_1ABF32194();
    LOBYTE(v77[0]) = 10;
    sub_1ABF32194();
    LOBYTE(v77[0]) = 11;
    sub_1ABF32194();
    LOBYTE(v77[0]) = 12;
    sub_1ABF32194();
    LOBYTE(v77[0]) = 13;
    sub_1ABF32194();
    LOBYTE(v77[0]) = 14;
    sub_1ABF32140();
    LOBYTE(v77[0]) = 15;
    sub_1ABF321B8();
    LOBYTE(v77[0]) = 16;
    sub_1ABF321B8();
    LOBYTE(v77[0]) = 17;
    sub_1ABF321B8();
    v77[0] = v32;
    v80 = 18;
    sub_1ABD04578(0, &qword_1ED34FBB8, (uint64_t)&type metadata for PaywallConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD10754(&qword_1ED34FBC0, (uint64_t (*)(void))sub_1ABD44998, MEMORY[0x1E0DEAF10]);
    sub_1ABF3217C();
    v77[0] = v33;
    v80 = 19;
    sub_1ABD04578(0, &qword_1ED34FC28, (uint64_t)&type metadata for SubscriptionButtonConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD1064C();
    sub_1ABF3217C();
    v77[0] = v34;
    v80 = 20;
    sub_1ABF3217C();
    v77[0] = v35;
    v80 = 21;
    sub_1ABF3217C();
    v77[0] = v36;
    v80 = 22;
    sub_1ABF3217C();
    sub_1ABDCBC58((uint64_t)v78, (uint64_t)v77);
    v80 = 23;
    sub_1ABD10814();
    sub_1ABF3217C();
    LOBYTE(v77[0]) = 24;
    sub_1ABF32170();
    LOBYTE(v77[0]) = 25;
    sub_1ABF32170();
    LOBYTE(v77[0]) = 26;
    sub_1ABF32140();
    LOBYTE(v77[0]) = 27;
    sub_1ABF32194();
    LOBYTE(v77[0]) = 28;
    sub_1ABF32140();
    LOBYTE(v77[0]) = 29;
    sub_1ABF321DC();
    LOBYTE(v77[0]) = 30;
    sub_1ABF321DC();
    LOBYTE(v77[0]) = 31;
    sub_1ABF321DC();
    LOBYTE(v77[0]) = 32;
    sub_1ABF321A0();
    LOBYTE(v77[0]) = 33;
    sub_1ABF321A0();
    LOBYTE(v77[0]) = 34;
    sub_1ABF321DC();
    v77[0] = v53;
    v80 = 35;
    sub_1ABCF5A54(0, &qword_1ED34FBE0, (uint64_t (*)(uint64_t))type metadata accessor for AudioUpsellConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD106C4(&qword_1ED34FBE8, &qword_1ED34F060, (uint64_t)&unk_1ABF4EEB0, MEMORY[0x1E0DEAF10]);
    sub_1ABF3217C();
    LOBYTE(v77[0]) = 36;
    sub_1ABF321A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1ABD104B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABD107D0();
    v7 = a3(a1, &type metadata for PaidBundleConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1ABD10510(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1ABD165AC();
    v8 = a2;
    result = MEMORY[0x1AF438F30](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD1056C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = a2;
    result = MEMORY[0x1AF438F30](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD105E0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1ABD12448(255, (unint64_t *)&qword_1ED34FCB0);
    v8 = a2;
    result = MEMORY[0x1AF438F30](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABD1064C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED34FC30;
  if (!qword_1ED34FC30)
  {
    sub_1ABD04578(255, &qword_1ED34FC28, (uint64_t)&type metadata for SubscriptionButtonConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABD39B78();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34FC30);
  }
  return result;
}

uint64_t sub_1ABD106C4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1ABCF5A54(255, &qword_1ED34FBE0, (uint64_t (*)(uint64_t))type metadata accessor for AudioUpsellConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1ABD41848(a2, a3);
    result = MEMORY[0x1AF438F30](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD10754(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, &qword_1ED34FBB8, (uint64_t)&type metadata for PaywallConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABD107D0()
{
  unint64_t result;

  result = qword_1ED34F4E0;
  if (!qword_1ED34F4E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3BA84, &type metadata for PaidBundleConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F4E0);
  }
  return result;
}

unint64_t sub_1ABD10814()
{
  unint64_t result;

  result = qword_1ED34EDC8;
  if (!qword_1ED34EDC8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for FlexiblePaywall, &type metadata for FlexiblePaywall);
    atomic_store(result, (unint64_t *)&qword_1ED34EDC8);
  }
  return result;
}

uint64_t NewsCoreConfiguration.endpointConfigsByEnvironment.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD __dst[34];
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_endpointConfigurations);
  v37 = MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    v24 = v2 - 1;
    v3 = 32;
    v22 = v1;
    while (1)
    {
      v23 = v3;
      memcpy(__dst, (const void *)(v1 + v3), sizeof(__dst));
      v4 = __dst[33];
      v30 = __dst[30];
      v31 = __dst[32];
      v5 = __dst[31];
      v6 = __dst[29];
      v28 = __dst[26];
      v29 = __dst[28];
      v7 = __dst[27];
      v27 = __dst[24];
      v8 = __dst[25];
      v9 = __dst[11];
      v26 = __dst[13];
      v10 = __dst[9];
      v34 = __dst[10];
      v35 = __dst[12];
      v11 = __dst[7];
      v32 = __dst[6];
      v33 = __dst[8];
      sub_1ABDB4070((uint64_t)__dst);
      v12 = (void *)sub_1ABF31780();
      v13 = FCEndpointEnvironmentForEnvironment();

      v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, v13);
      objc_allocWithZone(MEMORY[0x1E0D58AE8]);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v14 = sub_1ABDEF4E0(v32, v11, v33, v10, v34, v9, v35, v26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              v27,
              v8,
              v28,
              v7,
              v29,
              v6,
              v30,
              v5,
              v31,
              v4);
      if (v14)
      {
        v15 = (uint64_t)v14;
        v16 = v37;
        if ((v37 & 0xC000000000000001) != 0)
        {
          if (v37 >= 0)
            v16 = v37 & 0xFFFFFFFFFFFFFF8;
          result = sub_1ABF31F9C();
          if (__OFADD__(result, 1))
          {
            __break(1u);
            return result;
          }
          v16 = sub_1ABDF0080(v16, result + 1);
          v37 = v16;
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1ABDF10EC(v15, v25, isUniquelyReferenced_nonNull_native);
        v37 = v16;

        swift_bridgeObjectRelease();
      }
      else
      {
        v19 = (void *)sub_1ABDEFCF0((unint64_t)v25);

      }
      sub_1ABDEFE3C((uint64_t)__dst);
      v1 = v22;
      if (!v24)
      {
        swift_bridgeObjectRelease();
        v20 = v37;
        goto LABEL_15;
      }
      --v24;
      v3 = v23 + 272;
    }
  }
  sub_1ABF2FF5C();
  v20 = MEMORY[0x1E0DEE9E0];
LABEL_15:
  swift_bridgeObjectRelease();
  v21 = sub_1ABD10BA8(v20);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1ABD10BA8(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _OWORD v47[2];
  _OWORD v48[2];
  void *v49;
  void *v50;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1ABF31F9C())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x1E0DEE9E0];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(a1 + 32);
    v5 = ~v8;
    v37 = a1 + 64;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 64);
    v7 = a1;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_1ABD18AE0(0, &qword_1ED34E1E0, MEMORY[0x1E0DEC198], MEMORY[0x1E0DEC1A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
  v3 = sub_1ABF32014();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  v4 = sub_1ABF31F90();
  v37 = 0;
  v5 = 0;
  v6 = 0;
  v7 = v4 | 0x8000000000000000;
LABEL_11:
  v36 = (unint64_t)(v5 + 64) >> 6;
  v11 = v3 + 64;
  sub_1ABF2FF5C();
  result = sub_1ABF2FF68();
  v38 = 0;
  v39 = v7;
  while ((v7 & 0x8000000000000000) != 0)
  {
    v17 = sub_1ABF31FB4();
    if (!v17)
      goto LABEL_45;
    v19 = v18;
    *(_QWORD *)&v44 = v17;
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD80);
    swift_dynamicCast();
    *(_QWORD *)&v44 = v19;
    sub_1ABCF7BCC(0, &qword_1ED34E0F0);
    swift_dynamicCast();
    v20 = v49;
LABEL_36:
    *(_QWORD *)&v48[0] = v20;
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD80);
    swift_dynamicCast();
    sub_1ABCF7BCC(0, &qword_1ED34E0F0);
    swift_dynamicCast();
    v44 = v40;
    v45 = v41;
    v46 = v42;
    sub_1ABD1F610(&v43, v47);
    v40 = v44;
    v41 = v45;
    v42 = v46;
    sub_1ABD1F610(v47, v48);
    sub_1ABD1F610(v48, &v44);
    result = sub_1ABF31E28();
    v29 = -1 << *(_BYTE *)(v3 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      v7 = v39;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      v7 = v39;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      v13 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = *(_QWORD *)(v3 + 48) + 40 * v13;
    *(_OWORD *)v14 = v40;
    *(_OWORD *)(v14 + 16) = v41;
    *(_QWORD *)(v14 + 32) = v42;
    result = (uint64_t)sub_1ABD1F610(&v44, (_OWORD *)(*(_QWORD *)(v3 + 56) + 32 * v13));
    ++*(_QWORD *)(v3 + 16);
  }
  if (v6)
  {
    v15 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v16 = v15 | (v38 << 6);
LABEL_35:
    v25 = *(_QWORD *)(v7 + 56);
    v20 = *(void **)(*(_QWORD *)(v7 + 48) + 8 * v16);
    v26 = *(void **)(v25 + 8 * v16);
    v49 = v20;
    v50 = v26;
    v27 = v20;
    v28 = v26;
    goto LABEL_36;
  }
  v21 = v38 + 1;
  if (__OFADD__(v38, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v21 >= v36)
    goto LABEL_45;
  v22 = *(_QWORD *)(v37 + 8 * v21);
  v23 = v38 + 1;
  if (v22)
    goto LABEL_34;
  v23 = v38 + 2;
  if (v38 + 2 >= v36)
    goto LABEL_45;
  v22 = *(_QWORD *)(v37 + 8 * v23);
  if (v22)
    goto LABEL_34;
  v23 = v38 + 3;
  if (v38 + 3 >= v36)
    goto LABEL_45;
  v22 = *(_QWORD *)(v37 + 8 * v23);
  if (v22)
    goto LABEL_34;
  v23 = v38 + 4;
  if (v38 + 4 >= v36)
    goto LABEL_45;
  v22 = *(_QWORD *)(v37 + 8 * v23);
  if (v22)
  {
LABEL_34:
    v6 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v23 << 6);
    v38 = v23;
    goto LABEL_35;
  }
  v24 = v38 + 5;
  if (v38 + 5 >= v36)
  {
LABEL_45:
    v49 = 0;
    v50 = 0;
    swift_release();
    sub_1ABD97E10();
    return v3;
  }
  v22 = *(_QWORD *)(v37 + 8 * v24);
  if (v22)
  {
    v23 = v38 + 5;
    goto LABEL_34;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v36)
      goto LABEL_45;
    v22 = *(_QWORD *)(v37 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_34;
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1ABD110D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v3 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_1ABD1111C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;

  v35 = a2;
  sub_1ABCF5A54(0, &qword_1ED346B20, type metadata accessor for ForYouConfigRecord.Configuration.TopStories, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v37 = (uint64_t)&v30 - v4;
  v36 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  v32 = *(_QWORD *)(v36 - 8);
  v5 = MEMORY[0x1E0C80A78](v36);
  v34 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - v7;
  sub_1ABCF4DA8(0, &qword_1ED347008, (uint64_t (*)(void))sub_1ABD40164, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v33 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - v11;
  v13 = type metadata accessor for ForYouConfigRecord.Configuration(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD40164();
  v16 = (uint64_t)v38;
  sub_1ABF3235C();
  if (v16)
  {
    v22 = (uint64_t)a1;
  }
  else
  {
    v38 = v15;
    v17 = v10;
    v18 = a1;
    v31 = v8;
    v19 = v35;
    v20 = v34;
    sub_1ABF30754();
    *v20 = MEMORY[0x1E0DEE9D8];
    sub_1ABCFE1EC(&qword_1ED346B18, type metadata accessor for ForYouConfigRecord.Configuration.TopStories, (uint64_t)&unk_1ABF4C734);
    v21 = v33;
    sub_1ABF320C8();
    v24 = v12;
    v25 = v21;
    v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v37, 1, v36);
    v27 = v19;
    v28 = (uint64_t)v31;
    if (v26 == 1)
    {
      sub_1ABD184CC(v37, &qword_1ED346B20, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
      sub_1ABCFC790((uint64_t)v20, v28, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
    }
    else
    {
      sub_1ABCFE2AC(v37, (uint64_t)v31, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
    }
    sub_1ABCFC3BC((uint64_t)v20, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v25);
    v29 = (uint64_t)v38;
    sub_1ABCFE2AC(v28, (uint64_t)v38, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
    sub_1ABCFE2AC(v29, v27, type metadata accessor for ForYouConfigRecord.Configuration);
    v22 = (uint64_t)v18;
  }
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t type metadata accessor for ForYouConfigRecord.Configuration(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED346B30);
}

uint64_t sub_1ABD1145C()
{
  return sub_1ABD19038() & 1;
}

uint64_t sub_1ABD11480(uint64_t a1, unint64_t a2, int a3)
{
  return sub_1ABD114A0(a1, a2, a3);
}

uint64_t sub_1ABD114A0(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v39[3];
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v4 = v3;
  v8 = sub_1ABF302A4();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if ((a3 & 1) != 0)
    {
      v48 = a1;
      v49 = a2;
      sub_1ABF2FF5C();
      sub_1ABF310E4();
      if (v51)
      {
LABEL_8:
        a1 = v50;
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      sub_1ABF2FF5C();
    }
    v11 = *(_QWORD *)(v3 + 24);
    v48 = a1;
    v49 = a2;
    sub_1ABF2FF5C();
    sub_1ABF310E4();
    v12 = swift_bridgeObjectRelease();
    if (v51)
      goto LABEL_8;
    v39[1] = v11;
    v39[2] = v4;
    v43 = a3;
    v50 = 32;
    v51 = 0xE100000000000000;
    MEMORY[0x1E0C80A78](v12);
    v39[-2] = &v50;
    sub_1ABF2FF5C();
    v40 = a2;
    v13 = sub_1ABD11938(0x7FFFFFFFFFFFFFFFLL, 1, sub_1ABD11E28, (uint64_t)&v39[-4], a1, a2);
    v14 = *(_QWORD *)(v13 + 16);
    v41 = a1;
    v42 = v13;
    if (v14)
    {
      v15 = (uint64_t *)(v13 + 56);
      v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v17 = *(v15 - 3);
        v16 = *(v15 - 2);
        v19 = *(v15 - 1);
        v18 = *v15;
        sub_1ABF2FF5C();
        v50 = sub_1ABF31D68();
        v51 = v20;
        sub_1ABCFE1EC(&qword_1ED346838, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE4B8], MEMORY[0x1E0CAE4D0]);
        v21 = v45;
        sub_1ABF31DF8();
        v47 = 44;
        sub_1ABF31DE0();
        v47 = 46;
        sub_1ABF31DE0();
        sub_1ABD0E288();
        v22 = sub_1ABF31DA4();
        v24 = v23;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v21);
        swift_bridgeObjectRelease();
        if ((v43 & 1) != 0)
        {
          if (qword_1ED346C00 != -1)
            swift_once();
          v25 = qword_1ED346BF0;
        }
        else
        {
          if (qword_1EEC410B8 != -1)
            swift_once();
          v25 = qword_1EEC44B48;
        }
        v50 = v22;
        v51 = v24;
        v26 = sub_1ABF318DC();
        v28 = sub_1ABD0DC3C(v26, v27, v25);
        swift_bridgeObjectRelease();
        if ((v28 & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v29 = MEMORY[0x1AF437A3C](v17, v16, v19, v18);
          v31 = v30;
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v46 = sub_1ABD12054(0, v46[2] + 1, 1, v46);
          v33 = v46[2];
          v32 = v46[3];
          if (v33 >= v32 >> 1)
            v46 = sub_1ABD12054((_QWORD *)(v32 > 1), v33 + 1, 1, v46);
          v34 = v46;
          v46[2] = v33 + 1;
          v35 = &v34[2 * v33];
          v35[4] = v29;
          v35[5] = v31;
        }
        v15 += 4;
        --v14;
      }
      while (v14);
    }
    else
    {
      v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    v50 = (uint64_t)v46;
    sub_1ABD165AC();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCC0, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0DEAF20]);
    a1 = sub_1ABF316E4();
    v37 = v36;
    swift_bridgeObjectRelease();
    v50 = a1;
    v51 = v37;
    v48 = v41;
    v49 = v40;
    sub_1ABF2FF5C();
    sub_1ABF310F0();
  }
  return a1;
}

uint64_t sub_1ABD11938(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_1ABE11098(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    sub_1ABF2FF5C();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1ABF318D0();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_1ABF31858();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_1ABF31858();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_1ABF318E8();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1ABD11E44(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_1ABD11E44((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_1ABF31858();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    sub_1ABF2FF5C();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_1ABF318E8();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1ABD11E44(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_1ABD11E44((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1ABF31FC0();
  __break(1u);
LABEL_42:
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

uint64_t sub_1ABD11DD4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1ABF3223C() & 1;
}

uint64_t sub_1ABD11E28(_QWORD *a1)
{
  uint64_t v1;

  return sub_1ABE11640(a1, *(_QWORD **)(v1 + 16)) & 1;
}

_QWORD *sub_1ABD11E44(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, &qword_1ED34E898, MEMORY[0x1E0DEBAF0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ABD11F64(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD11F64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

_QWORD *sub_1ABD12054(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ABD126FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

BOOL sub_1ABD12174(uint64_t a1, uint64_t a2)
{
  unint64_t v2;

  v2 = *(_QWORD *)((*(uint64_t (**)(void))(a2 + 32))() + 16);
  swift_bridgeObjectRelease();
  return v2 > 1;
}

_QWORD *sub_1ABD121A4()
{
  return sub_1ABD121C4();
}

_QWORD *sub_1ABD121C4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  sub_1ABF2FF68();
  v1 = sub_1ABF2FF5C();
  v2 = sub_1ABD1226C(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  return v2;
}

_QWORD *sub_1ABD1226C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = (uint64_t *)(a2 + 64);
  v4 = (uint64_t *)(sub_1ABF2FF5C() + 40);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_beginAccess();
    v8 = *v3;
    if (*(_QWORD *)(*v3 + 16))
    {
      swift_bridgeObjectRetain_n();
      v9 = sub_1ABD00F9C(v6, v7);
      if ((v10 & 1) != 0)
      {
        v11 = *(_QWORD *)(v8 + 56) + 48 * v9;
        v12 = *(_QWORD *)(v11 + 8);
        v22 = *(_QWORD *)v11;
        v13 = *(_QWORD *)(v11 + 16);
        v21 = *(_QWORD *)(v11 + 24);
        v14 = *(_QWORD *)(v11 + 32);
        v19 = *(_BYTE *)(v11 + 41);
        v20 = *(_BYTE *)(v11 + 40);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1ABD124D4(0, v5[2] + 1, 1, v5);
        v16 = v5[2];
        v15 = v5[3];
        if (v16 >= v15 >> 1)
          v5 = sub_1ABD124D4((_QWORD *)(v15 > 1), v16 + 1, 1, v5);
        v5[2] = v16 + 1;
        v17 = &v5[6 * v16];
        v17[4] = v22;
        v17[5] = v12;
        v17[6] = v13;
        v17[7] = v21;
        v17[8] = v14;
        *((_BYTE *)v17 + 72) = v20;
        *((_BYTE *)v17 + 73) = v19;
      }
      else
      {
        swift_endAccess();
        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_endAccess();
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1ABD12448(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1ABF31A98();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1ABD1248C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEA968]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *sub_1ABD124D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, &qword_1ED34E328, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1ABD12608(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD12608(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD126FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD127EC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_1ABF2FF68();
  v1(v2);
  return swift_release();
}

void sub_1ABD12818()
{
  uint64_t v0;

  sub_1ABD12828(*(_QWORD *)(v0 + 16));
}

void sub_1ABD12828(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(_BYTE *);
  void (*v3)(_BYTE *);
  void (*v4)(void);
  void (*v5)(void);
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  void *v9;
  _BYTE v10[3120];
  _BYTE __src[3120];
  _BYTE v12[3120];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v5 = v4;
  v6 = v1;
  v7 = *(void (**)(uint64_t))(v1 + 56);
  if (v7)
  {
    v8 = sub_1ABF2FF68();
    v7(v8);
    sub_1ABD12EC4((uint64_t)v7);
  }
  if (*(_BYTE *)(v6 + 40) == 1)
  {
    sub_1ABDDCF14();
    v9 = (void *)swift_allocError();
    v5();

  }
  else
  {
    sub_1ABF30C88();
    memcpy(v12, __src, sizeof(v12));
    memcpy(v10, __src, sizeof(v10));
    v3(v10);
    sub_1ABD7DDF4((uint64_t)v12);
  }
}

uint64_t sub_1ABD12950()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1ABD12970()
{
  uint64_t v0;

  return sub_1ABD12978(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1ABD12978(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1ABD12998()
{
  uint64_t v0;

  return sub_1ABD129B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1ABD129B4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(_QWORD *, _QWORD *, uint64_t, uint64_t);
  _QWORD v15[2];
  _QWORD v16[5];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    if (a2 >> 62)
    {
      sub_1ABF2FF5C();
      result = sub_1ABF31FE4();
      v7 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = sub_1ABF2FF5C();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        v8 = 0;
        do
        {
          if ((a2 & 0xC000000000000001) != 0)
          {
            v9 = MEMORY[0x1AF4380CC](v8, a2);
          }
          else
          {
            v9 = *(_QWORD *)(a2 + 8 * v8 + 32);
            sub_1ABF2FF68();
          }
          v16[3] = type metadata accessor for StockPriceDataManager();
          v16[4] = &off_1E5AEB4A8;
          v16[0] = v6;
          if (MEMORY[0x1AF4390D4](v9 + 16))
          {
            v10 = *(_QWORD *)(v9 + 24);
            ObjectType = swift_getObjectType();
            v15[0] = a3;
            v15[1] = a4;
            v12 = *(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t))(v10 + 8);
            swift_retain_n();
            v12(v16, v15, ObjectType, v10);
            swift_unknownObjectRelease();
          }
          else
          {
            swift_retain_n();
          }
          ++v8;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
          swift_release();
          swift_release();
        }
        while (v7 != v8);
      }
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABD12B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v20 = a1;
  v6 = sub_1ABF31594();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1ABF315D0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = v3;
  aBlock[4] = sub_1ABD170B0;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_17;
  v15 = _Block_copy(aBlock);
  sub_1ABD1338C(a2);
  v16 = v3;
  sub_1ABF315AC();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v7, MEMORY[0x1E0DEF510]);
  sub_1ABD1339C(0);
  sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCA0, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1ABD12EC4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1ABD12ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v27 = a3;
  v28 = a1;
  v29 = a2;
  v7 = sub_1ABF31594();
  v34 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1ABF315D0();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1ABF315E8();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v27 - v18;
  sub_1ABD133B8();
  v30 = sub_1ABF31C24();
  sub_1ABF315DC();
  MEMORY[0x1AF437814](v17, *(double *)(a5 + 48));
  v31 = *(void (**)(char *, uint64_t))(v14 + 8);
  v31(v17, v13);
  v20 = (_QWORD *)swift_allocObject();
  v21 = v27;
  v20[2] = a5;
  v20[3] = v21;
  v22 = v28;
  v23 = v29;
  v20[4] = a4;
  v20[5] = v22;
  v20[6] = v23;
  aBlock[4] = sub_1ABD12818;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_8;
  v24 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  sub_1ABF315AC();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABD1339C(0);
  sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCA0, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  v25 = (void *)v30;
  MEMORY[0x1AF437E2C](v19, v12, v9, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
  return ((uint64_t (*)(char *, uint64_t))v31)(v19, v13);
}

uint64_t sub_1ABD13190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  const void *v18;
  id v19;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v7 = sub_1ABF31594();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1ABF315D0();
  v12 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a2;
    v16[3] = a3;
    v16[4] = v3;
    aBlock[4] = sub_1ABD170B0;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ABD127EC;
    aBlock[3] = &block_descriptor_7;
    v17 = _Block_copy(aBlock);
    v20[0] = v8;
    v18 = v17;
    sub_1ABD1338C(a2);
    v19 = v3;
    sub_1ABF315AC();
    v20[1] = MEMORY[0x1E0DEE9D8];
    sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1ABD1339C(0);
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCA0, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
    sub_1ABF31E04();
    MEMORY[0x1AF437E50](0, v15, v10, v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v20[0] + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    return swift_release();
  }
  return result;
}

uint64_t sub_1ABD1338C(uint64_t result)
{
  if (result)
    return sub_1ABF2FF68();
  return result;
}

void sub_1ABD1339C(uint64_t a1)
{
  sub_1ABCF5A54(a1, (unint64_t *)&unk_1ED34FC90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1ABD133B8()
{
  unint64_t result;

  result = qword_1ED34FD60;
  if (!qword_1ED34FD60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34FD60);
  }
  return result;
}

uint64_t sub_1ABD133F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v5;
  uint64_t v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    sub_1ABD16414(0, v5, 0);
    v6 = v16;
    v8 = (uint64_t *)(a1 + 56);
    do
    {
      v10 = *(v8 - 1);
      v9 = *v8;
      v12 = *(_QWORD *)(v16 + 16);
      v11 = *(_QWORD *)(v16 + 24);
      sub_1ABF2FF5C();
      if (v12 >= v11 >> 1)
        sub_1ABD16414(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v16 + 16) = v12 + 1;
      v13 = v16 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v10;
      *(_QWORD *)(v13 + 40) = v9;
      v8 += 17;
      --v5;
    }
    while (v5);
  }
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(v6, a2, a3);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1ABD134F4(uint64_t a1)
{
  return sub_1ABD13514(a1);
}

uint64_t sub_1ABD13514(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[7];
  _QWORD *v12;
  _QWORD v13[390];

  v3 = sub_1ABF30B14();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = v1[15];
  v8 = v1[16];
  __swift_project_boxed_opaque_existential_1(v1 + 12, v7);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v13, v7, v8);
  sub_1ABD7DDF4((uint64_t)v13);
  *v6 = v13[25];
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB32B8], v3);
  v12 = v1;
  v11[2] = &v12;
  v11[3] = a1;
  v11[4] = v6;
  v11[5] = v6;
  sub_1ABD1363C();
  swift_allocObject();
  v9 = sub_1ABF31228();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

void sub_1ABD1363C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346DD8)
  {
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346DD8);
  }
}

uint64_t sub_1ABD13690(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  _BYTE v6[144];
  _BYTE v7[144];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    v4 = a1 + 32;
    for (i = v2 - 1; ; --i)
    {
      sub_1ABD6414C(v4, (uint64_t)v6);
      sub_1ABD6414C((uint64_t)v6, (uint64_t)v7);
      sub_1ABD24814((uint64_t)v7);
      sub_1ABD24804((uint64_t)v7);
      swift_unknownObjectRetain();
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
      if (!i)
        break;
      v4 += 144;
    }
    return v8;
  }
  return result;
}

uint64_t sub_1ABD1375C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  void (*v19)(uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1ABF31594();
  v3 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  v29 = v3;
  MEMORY[0x1E0C80A78](v2);
  v27 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1ABF31C18();
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF31C00();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF315D0();
  v25 = *(_QWORD *)(v10 - 8);
  v26 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  v14 = v13;
  v23 = sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD60);
  sub_1ABF315B8();
  aBlock[0] = v14;
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v9, MEMORY[0x1E0DEF828]);
  sub_1ABD16D20(0, &qword_1ED34FCE0, (void (*)(uint64_t))v9);
  sub_1ABD14288((unint64_t *)&qword_1ED34FCE8, &qword_1ED34FCE0, (void (*)(uint64_t))v9);
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v24);
  v15 = (void *)sub_1ABF31C3C();
  *(_QWORD *)(v1 + 24) = v15;
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
  aBlock[4] = sub_1ABD3D52C;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_5;
  v17 = _Block_copy(aBlock);
  v18 = v15;
  sub_1ABF2FF68();
  sub_1ABF315AC();
  v30 = v16;
  v19 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABD16D20(0, (unint64_t *)&unk_1ED34FC90, v19);
  sub_1ABD14288((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, v19);
  v20 = v27;
  v21 = v28;
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v12, v20, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v21);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v26);
  swift_release();
  return v1;
}

uint64_t sub_1ABD13ABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a1;
  v18 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v18);
  v17 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1ABF31C00();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v3);
  v5 = sub_1ABF31C18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1ABF315D0();
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  v15 = sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD60);
  sub_1ABF315C4();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF8D8], v5);
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v4, MEMORY[0x1E0DEF828]);
  sub_1ABCF5A54(0, &qword_1ED34FCE0, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCE8, &qword_1ED34FCE0, v4);
  sub_1ABF31E04();
  v10 = sub_1ABF31C3C();
  v11 = v16;
  *(_QWORD *)(v16 + 24) = v10;
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCF5A54(0, &qword_1ED350340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1ABF366C0;
  sub_1ABF30B20();
  v20 = v13;
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350AE0, v12, MEMORY[0x1E0DB33D8]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B50, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B60, (unint64_t *)&unk_1ED350B50, v12);
  sub_1ABF31E04();
  sub_1ABCF5A54(0, &qword_1ED3467E0, (uint64_t (*)(uint64_t))sub_1ABD34B3C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  *(_QWORD *)(v11 + 32) = sub_1ABF31078();
  return v11;
}

uint64_t sub_1ABD13E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v8 = sub_1ABF31594();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v23 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1ABF315D0();
  v12 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = *(void **)(a5 + 24);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = sub_1ABDB9D10;
  v17[3] = v15;
  v17[4] = a5;
  aBlock[4] = sub_1ABD16FCC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_16;
  v18 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  v19 = v16;
  sub_1ABF2FF68();
  sub_1ABF315AC();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v9, MEMORY[0x1E0DEF510]);
  sub_1ABD16D20(0, (unint64_t *)&unk_1ED34FC90, (void (*)(uint64_t))v9);
  sub_1ABD14288((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, (void (*)(uint64_t))v9);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v14, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  return swift_release();
}

uint64_t sub_1ABD14050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v8 = sub_1ABF31594();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v23 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1ABF315D0();
  v12 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = *(void **)(a5 + 24);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = sub_1ABD17048;
  v17[3] = v15;
  v17[4] = a5;
  aBlock[4] = sub_1ABD170B4;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_6;
  v18 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  v19 = v16;
  sub_1ABF2FF68();
  sub_1ABF315AC();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v9, MEMORY[0x1E0DEF510]);
  sub_1ABD16D20(0, (unint64_t *)&unk_1ED34FC90, (void (*)(uint64_t))v9);
  sub_1ABD14288((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, (void (*)(uint64_t))v9);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v14, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v22);
  return swift_release();
}

uint64_t sub_1ABD14288(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1ABD16D20(255, a2, a3);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD142C8(_QWORD *a1)
{
  return sub_1ABD142DC(a1);
}

uint64_t sub_1ABD142DC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1ED34E2B8, (uint64_t (*)(void))sub_1ABD147B8, (uint64_t)&type metadata for Chart.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD147B8();
  sub_1ABF32368();
  v14 = *v3;
  v13 = 0;
  sub_1ABCF5A54(0, &qword_1ED34DF58, type metadata accessor for Chart.Entry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD146A0(&qword_1ED34DF60, &qword_1ED34D9E0, (uint64_t)&unk_1ABF3A918, MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  if (!v2)
  {
    v10 = type metadata accessor for Chart(0);
    LOBYTE(v14) = 1;
    sub_1ABCFC730();
    sub_1ABD14738(&qword_1ED34DEA0, &qword_1ED34EAA8, MEMORY[0x1E0CB0890], MEMORY[0x1E0DEA4C8]);
    sub_1ABF321D0();
    LOBYTE(v14) = 2;
    sub_1ABF32158();
    LOBYTE(v14) = 3;
    sub_1ABF3094C();
    sub_1ABCFE1EC(&qword_1ED34CCF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1488]);
    sub_1ABF321D0();
    LOBYTE(v14) = 4;
    sub_1ABF30760();
    sub_1ABCFE1EC(&qword_1ED34EAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1ABF321D0();
    v14 = *(uint64_t *)((char *)v3 + *(int *)(v10 + 36));
    v13 = 5;
    sub_1ABD04578(0, &qword_1ED34DF70, (uint64_t)&type metadata for Chart.Feature, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD14624(&qword_1ED34DF78, (uint64_t (*)(void))sub_1ABD376A8, MEMORY[0x1E0DEAF10]);
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ABD14624(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, &qword_1ED34DF70, (uint64_t)&type metadata for Chart.Feature, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD146A0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1ABCF5A54(255, &qword_1ED34DF58, type metadata accessor for Chart.Entry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1ABCFE1EC(a2, type metadata accessor for Chart.Entry, a3);
    result = MEMORY[0x1AF438F30](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD14738(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1ABCFC730();
    v10 = v9;
    v11 = sub_1ABCFE1EC(a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], a3);
    result = MEMORY[0x1AF438F30](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABD147B8()
{
  unint64_t result;

  result = qword_1ED34D9B0;
  if (!qword_1ED34D9B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3ACE8, &type metadata for Chart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D9B0);
  }
  return result;
}

uint64_t sub_1ABD147FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  _BYTE v42[144];
  _QWORD v43[18];
  _BYTE v44[56];
  _QWORD v45[6];
  char v46;
  objc_super v47;
  uint64_t v48;

  v6 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v9 = (void *)a1[4];
  v10 = *(_QWORD *)(a2 + 152);
  v11 = (objc_class *)type metadata accessor for NewsUserProfileShim();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = &v12[OBJC_IVAR____TtC10StocksCoreP33_6F15235305946077A82EB95D8E9A724719NewsUserProfileShim_userProfile];
  *(_QWORD *)v13 = v6;
  *((_QWORD *)v13 + 1) = v5;
  *((_QWORD *)v13 + 2) = v7;
  *((_QWORD *)v13 + 3) = v8;
  *((_QWORD *)v13 + 4) = v9;
  v47.receiver = v12;
  v47.super_class = v11;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v14 = v9;
  swift_unknownObjectRetain();
  v15 = objc_msgSendSuper2(&v47, sel_init);
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58D38]), sel_initWithPurchaseProvider_bundleSubscriptionProvider_configurationManager_, v15, v15, v10);

  swift_unknownObjectRelease();
  sub_1ABD04578(0, &qword_1ED34E2F8, (uint64_t)&type metadata for HeadlineCondition, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1ABF366D0;
  *(_QWORD *)(v17 + 32) = v16;
  sub_1ABD07E04(a2 + 112, v17 + 40);
  *(_BYTE *)(v17 + 80) = 0;
  *(_QWORD *)(v17 + 88) = v5;
  *(_BYTE *)(v17 + 136) = 3;
  *(_QWORD *)(v17 + 144) = 3;
  *(_OWORD *)(v17 + 152) = 0u;
  *(_OWORD *)(v17 + 168) = 0u;
  *(_QWORD *)(v17 + 184) = 0;
  *(_BYTE *)(v17 + 192) = 9;
  *(_OWORD *)(v17 + 200) = 0u;
  *(_OWORD *)(v17 + 216) = 0u;
  *(_OWORD *)(v17 + 232) = 0u;
  *(_BYTE *)(v17 + 248) = 9;
  v45[0] = v17;
  v46 = 6;
  sub_1ABD22744((uint64_t)v45, (uint64_t)v44);
  v48 = MEMORY[0x1E0DEE9D8];
  v18 = *(_QWORD *)(a3 + 16);
  v40 = v16;
  sub_1ABF2FF5C();
  v41 = a3;
  result = sub_1ABF2FF5C();
  if (v18)
  {
    v20 = 0;
    v21 = MEMORY[0x1E0DEE9D8];
    do
    {
      if (v20 <= v18)
        v22 = v18;
      else
        v22 = v20;
      v23 = v41 + 32 + 144 * v20;
      v24 = v20;
      while (1)
      {
        if (v22 == v24)
        {
          __break(1u);
          return result;
        }
        sub_1ABD6414C(v23, (uint64_t)v43);
        v20 = v24 + 1;
        sub_1ABD6414C((uint64_t)v43, (uint64_t)v42);
        sub_1ABD64188(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD2189C((uint64_t)v42);
        if ((v25 & 1) == 0)
          break;
        result = (uint64_t)sub_1ABD64188(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        v23 += 144;
        ++v24;
        if (v18 == v20)
          goto LABEL_16;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v48 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1ABD1515C(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v48;
      }
      v28 = *(_QWORD *)(v21 + 16);
      v27 = *(_QWORD *)(v21 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1ABD1515C(v27 > 1, v28 + 1, 1);
        v21 = v48;
      }
      *(_QWORD *)(v21 + 16) = v28 + 1;
      result = sub_1ABD6414C((uint64_t)v43, v21 + 144 * v28 + 32);
    }
    while (v18 - 1 != v24);
  }
LABEL_16:
  sub_1ABD228E4((uint64_t)v44);
  swift_bridgeObjectRelease();
  v29 = v48;
  sub_1ABD0F55C();
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1ABF366E0;
  v43[0] = v18;
  v31 = sub_1ABF321F4();
  v33 = v32;
  v34 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v30 + 56) = MEMORY[0x1E0DEA968];
  v35 = sub_1ABD0F5C0();
  *(_QWORD *)(v30 + 64) = v35;
  *(_QWORD *)(v30 + 32) = v31;
  *(_QWORD *)(v30 + 40) = v33;
  v43[0] = *(_QWORD *)(v29 + 16);
  v36 = sub_1ABF321F4();
  *(_QWORD *)(v30 + 96) = v34;
  *(_QWORD *)(v30 + 104) = v35;
  *(_QWORD *)(v30 + 72) = v36;
  *(_QWORD *)(v30 + 80) = v37;
  sub_1ABD19560();
  v38 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  v43[0] = v29;
  sub_1ABD34DA8();
  swift_allocObject();
  v39 = sub_1ABF311E0();

  sub_1ABD228E4((uint64_t)v45);
  return v39;
}

int64_t sub_1ABD14C28(int64_t result)
{
  int64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    v2 = MEMORY[0x1E0DEE9D8];
    if (result)
    {
      v25 = MEMORY[0x1E0DEE9D8];
      sub_1ABD1515C(0, result, 0);
      v2 = v25;
      do
      {
        v3 = sub_1ABD14DA4(1);
        if (qword_1ED346680 != -1)
          swift_once();
        v22 = xmmword_1ED346A20;
        v23 = xmmword_1ED346A30;
        v24 = qword_1ED346A40;
        v18 = xmmword_1ED3469E0;
        v19 = xmmword_1ED3469F0;
        v20 = xmmword_1ED346A00;
        v21 = xmmword_1ED346A10;
        v16 = xmmword_1ED3469C0;
        v17 = xmmword_1ED3469D0;
        sub_1ABD64450((uint64_t)&v16);
        v25 = v2;
        v5 = *(_QWORD *)(v2 + 16);
        v4 = *(_QWORD *)(v2 + 24);
        if (v5 >= v4 >> 1)
        {
          sub_1ABD1515C(v4 > 1, v5 + 1, 1);
          v2 = v25;
        }
        v13 = v22;
        v14 = v23;
        v15 = v24;
        v9 = v18;
        v10 = v19;
        v11 = v20;
        v12 = v21;
        v7 = v16;
        v8 = v17;
        v6 = v3;
        sub_1ABD64440((uint64_t)&v6);
        *(_QWORD *)(v2 + 16) = v5 + 1;
        sub_1ABD6414C((uint64_t)&v6, v2 + 144 * v5 + 32);
        --v1;
      }
      while (v1);
    }
    return v2;
  }
  return result;
}

id sub_1ABD14DA4(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v20;

  v2 = sub_1ABF30760();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30790();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58BD0]), sel_init);
  sub_1ABF2FBD8();
  sub_1ABF30778();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setArticleID_, v11);

  sub_1ABD16108(0x140000000ALL);
  v12 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setTitle_, v12);

  sub_1ABD16108(0x140000000ALL);
  v13 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setShortExcerpt_, v13);

  sub_1ABD16108(0x140000000ALL);
  v14 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setSourceName_, v14);

  sub_1ABD16D6C(1);
  v15 = (void *)sub_1ABF306D0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v10, sel_setPublishDate_, v15);

  sub_1ABD16108(0x300000001);
  v16 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setAccessoryText_, v16);

  if ((a1 & 1) != 0)
  {
    objc_msgSend(v10, sel_setHasThumbnail_, 1);
    v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StubAssetHandle()), sel_init);
    v18 = objc_msgSend((id)objc_opt_self(), sel_headlineThumbnailWithAssetHandle_thumbnailSize_, v17, 1000.0, 1000.0);

    objc_msgSend(v10, sel_setThumbnail_, v18);
  }
  return v10;
}

uint64_t type metadata accessor for StubAssetHandle()
{
  return objc_opt_self();
}

uint64_t sub_1ABD1515C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABD15178(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABD15178(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, &qword_1ED34E320, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 144);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[144 * v8])
      memmove(v12, v13, 144 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[144 * v8] || v12 >= &v13[144 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD15314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v8 = sub_1ABF31594();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1ABF315D0();
  v12 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  aBlock[4] = sub_1ABD16EEC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_42;
  v16 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF315AC();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v9, MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, v9);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v14, v11, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v19);
  return swift_release();
}

uint64_t sub_1ABD1552C(_QWORD *a1, void (*a2)(_QWORD *))
{
  void (*v2)(_QWORD *);
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint32_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  char isUniquelyReferenced_nonNull_native;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t result;
  int64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _OWORD v88[8];
  uint64_t v89;
  _QWORD *v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;

  v2 = a2;
  v4 = a1[2];
  if (!v4)
  {
    sub_1ABF2FF5C();
    v38 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2(v38);
    return swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v88[0] = MEMORY[0x1E0DEE9D8];
  sub_1ABD080B8(0, v4, 0);
  v5 = 0;
  v6 = *(_QWORD *)&v88[0];
  v82 = v4;
  do
  {
    v7 = v5;
    v8 = &a1[2 * v5 + 4];
    v85 = v7 + 1;
    v86 = v6;
    v9 = v8[1];
    v83 = *v8;
    swift_bridgeObjectRetain_n();
    v10 = arc4random_uniform(0xFu);
    if (v10 <= 5)
      v11 = 5;
    else
      v11 = v10;
    *(_QWORD *)&v91 = MEMORY[0x1E0DEE9D8];
    sub_1ABD16414(0, v11, 0);
    v12 = v91;
    do
    {
      v13 = sub_1ABF3184C();
      if ((v13 & 0x8000000000000000) != 0 || HIDWORD(v13))
        goto LABEL_38;
      arc4random_uniform(v13);
      sub_1ABF31864();
      v14 = sub_1ABF318D0();
      v16 = v15;
      *(_QWORD *)&v91 = v12;
      v18 = *(_QWORD *)(v12 + 16);
      v17 = *(_QWORD *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1ABD16414(v17 > 1, v18 + 1, 1);
        v12 = v91;
      }
      *(_QWORD *)(v12 + 16) = v18 + 1;
      v19 = v12 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v14;
      *(_QWORD *)(v19 + 40) = v16;
      --v11;
    }
    while (v11);
    *(_QWORD *)&v91 = v12;
    sub_1ABD165AC();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCC0, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0DEAF20]);
    v20 = sub_1ABF316E4();
    v22 = v21;
    swift_bridgeObjectRelease();
    LOBYTE(v90) = 0;
    sub_1ABD15B80(v83, v9, v20, v22, 0x51414453414ELL, 0xE600000000000000, (char *)&v90, 0, (uint64_t)&v91, 0, 0, 0, 0, 0, 0, 0);
    swift_bridgeObjectRelease();
    v6 = v86;
    *(_QWORD *)&v88[0] = v86;
    v24 = *(_QWORD *)(v86 + 16);
    v23 = *(_QWORD *)(v86 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_1ABD080B8(v23 > 1, v24 + 1, 1);
      v6 = *(_QWORD *)&v88[0];
    }
    *(_QWORD *)(v6 + 16) = v24 + 1;
    v25 = v6 + 136 * v24;
    *(_OWORD *)(v25 + 32) = v91;
    v26 = v92;
    v27 = v93;
    v28 = v95;
    *(_OWORD *)(v25 + 80) = v94;
    *(_OWORD *)(v25 + 96) = v28;
    *(_OWORD *)(v25 + 48) = v26;
    *(_OWORD *)(v25 + 64) = v27;
    v29 = v96;
    v30 = v97;
    v31 = v98;
    *(_QWORD *)(v25 + 160) = v99;
    *(_OWORD *)(v25 + 128) = v30;
    *(_OWORD *)(v25 + 144) = v31;
    *(_OWORD *)(v25 + 112) = v29;
    v5 = v85;
  }
  while (v85 != v82);
  v32 = *(_QWORD *)(v6 + 16);
  v33 = v6;
  if (!v32)
  {
    sub_1ABF2FF5C();
    v38 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v2 = a2;
    goto LABEL_35;
  }
  v35 = a1[4];
  v34 = a1[5];
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v36 = 0;
  v84 = v32 - 1;
  v37 = a1 + 7;
  v38 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v39 = 32;
  while (1)
  {
    v40 = v33;
    v87 = v39;
    v91 = *(_OWORD *)(v33 + v39);
    v41 = *(_OWORD *)(v33 + v39 + 16);
    v42 = *(_OWORD *)(v33 + v39 + 32);
    v43 = *(_OWORD *)(v33 + v39 + 64);
    v94 = *(_OWORD *)(v33 + v39 + 48);
    v95 = v43;
    v92 = v41;
    v93 = v42;
    v44 = *(_OWORD *)(v33 + v39 + 80);
    v45 = *(_OWORD *)(v33 + v39 + 96);
    v46 = *(_OWORD *)(v33 + v39 + 112);
    v99 = *(_QWORD *)(v33 + v39 + 128);
    v97 = v45;
    v98 = v46;
    v96 = v44;
    sub_1ABD97ECC((uint64_t)&v91);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v90 = v38;
    v49 = sub_1ABD00F9C(v35, v34);
    v50 = v38[2];
    v51 = (v48 & 1) == 0;
    v52 = v50 + v51;
    if (__OFADD__(v50, v51))
      break;
    v53 = v48;
    if (v38[3] >= v52)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v48 & 1) == 0)
          goto LABEL_26;
      }
      else
      {
        sub_1ABE6E87C();
        if ((v53 & 1) == 0)
          goto LABEL_26;
      }
    }
    else
    {
      sub_1ABD0E4A4(v52, isUniquelyReferenced_nonNull_native);
      v54 = sub_1ABD00F9C(v35, v34);
      if ((v53 & 1) != (v55 & 1))
        goto LABEL_39;
      v49 = v54;
      if ((v53 & 1) == 0)
      {
LABEL_26:
        v38 = v90;
        v90[(v49 >> 6) + 8] |= 1 << v49;
        v69 = (uint64_t *)(v38[6] + 16 * v49);
        *v69 = v35;
        v69[1] = v34;
        v70 = v38[7] + 136 * v49;
        v71 = v99;
        v73 = v97;
        v72 = v98;
        *(_OWORD *)(v70 + 80) = v96;
        *(_OWORD *)(v70 + 96) = v73;
        *(_OWORD *)(v70 + 112) = v72;
        *(_QWORD *)(v70 + 128) = v71;
        v75 = v94;
        v74 = v95;
        v76 = v93;
        *(_OWORD *)(v70 + 16) = v92;
        *(_OWORD *)(v70 + 32) = v76;
        *(_OWORD *)(v70 + 48) = v75;
        *(_OWORD *)(v70 + 64) = v74;
        *(_OWORD *)v70 = v91;
        v77 = v38[2];
        v78 = __OFADD__(v77, 1);
        v79 = v77 + 1;
        if (v78)
          goto LABEL_37;
        v38[2] = v79;
        sub_1ABF2FF5C();
        goto LABEL_28;
      }
    }
    v38 = v90;
    v56 = v90[7] + 136 * v49;
    v88[0] = *(_OWORD *)v56;
    v57 = *(_OWORD *)(v56 + 64);
    v59 = *(_OWORD *)(v56 + 16);
    v58 = *(_OWORD *)(v56 + 32);
    v88[3] = *(_OWORD *)(v56 + 48);
    v88[4] = v57;
    v88[1] = v59;
    v88[2] = v58;
    v61 = *(_OWORD *)(v56 + 96);
    v60 = *(_OWORD *)(v56 + 112);
    v62 = *(_OWORD *)(v56 + 80);
    v89 = *(_QWORD *)(v56 + 128);
    v88[6] = v61;
    v88[7] = v60;
    v88[5] = v62;
    sub_1ABD97F60((uint64_t)v88);
    *(_OWORD *)v56 = v91;
    v63 = v95;
    v65 = v92;
    v64 = v93;
    *(_OWORD *)(v56 + 48) = v94;
    *(_OWORD *)(v56 + 64) = v63;
    *(_OWORD *)(v56 + 16) = v65;
    *(_OWORD *)(v56 + 32) = v64;
    v67 = v97;
    v66 = v98;
    v68 = v96;
    *(_QWORD *)(v56 + 128) = v99;
    *(_OWORD *)(v56 + 96) = v67;
    *(_OWORD *)(v56 + 112) = v66;
    *(_OWORD *)(v56 + 80) = v68;
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v82 - 1 == v36 || v84 == v36)
      goto LABEL_32;
    v35 = *(v37 - 1);
    v34 = *v37;
    sub_1ABF2FF5C();
    v33 = v40;
    v39 = v87 + 136;
    ++v36;
    v37 += 2;
    if (v36 >= *(_QWORD *)(v40 + 16))
    {
      __break(1u);
LABEL_32:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = a2;
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  sub_1ABF31FC0();
  __break(1u);
LABEL_39:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD15B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;

  v40 = *a7;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  sub_1ABF31870();
  v24 = qword_1ED346720;
  sub_1ABF2FF5C();
  if (v24 != -1)
    swift_once();
  v25 = qword_1ED368320;
  v41 = a5;
  if (*(_QWORD *)(qword_1ED368320 + 16))
  {
    sub_1ABF2FF5C();
    v26 = sub_1ABD00F9C(a1, a2);
    if ((v27 & 1) != 0)
    {
      v28 = (uint64_t *)(*(_QWORD *)(v25 + 56) + 16 * v26);
      v29 = v28[1];
      v39 = *v28;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = v29;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  if (a10)
  {
    v38 = a10;
    v39 = a8;
  }
  else
  {
    sub_1ABF2FF5C();
    v38 = a2;
    v39 = a1;
  }
LABEL_10:
  v30 = qword_1ED368328;
  if (*(_QWORD *)(qword_1ED368328 + 16))
  {
    sub_1ABF2FF5C();
    v31 = sub_1ABD00F9C(a1, a2);
    if ((v32 & 1) != 0)
    {
      v33 = a3;
      v34 = (uint64_t *)(*(_QWORD *)(v30 + 56) + 16 * v31);
      v36 = *v34;
      v35 = v34[1];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
  }
  v33 = a3;
  v36 = a1;
  v35 = a2;
  if (a12)
  {
    v36 = a11;
    sub_1ABF2FF5C();
    v35 = a12;
    goto LABEL_16;
  }
LABEL_17:
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a9 = a5;
  *(_QWORD *)(a9 + 8) = a6;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = v33;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = v41;
  *(_QWORD *)(a9 + 56) = a6;
  *(_BYTE *)(a9 + 64) = v40;
  *(_QWORD *)(a9 + 72) = v39;
  *(_QWORD *)(a9 + 80) = v38;
  *(_QWORD *)(a9 + 88) = v36;
  *(_QWORD *)(a9 + 96) = v35;
  *(_QWORD *)(a9 + 104) = a13;
  *(_QWORD *)(a9 + 112) = a14;
  *(_QWORD *)(a9 + 120) = a15;
  *(_QWORD *)(a9 + 128) = a16;
  return result;
}

uint64_t sub_1ABD15DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[7];
  uint64_t v37;
  uint64_t v38;

  v37 = MEMORY[0x1E0DEE9D8];
  v0 = 51;
  sub_1ABD080B8(0, 51, 0);
  v1 = 0;
  v2 = v37;
  while (1)
  {
    v3 = sub_1ABD16220(0x500000001);
    v5 = v4;
    v6 = sub_1ABD16220(0xF00000005);
    v34 = v7;
    v35 = v6;
    sub_1ABF31870();
    sub_1ABF31870();
    v8 = qword_1ED346720;
    sub_1ABF2FF5C();
    if (v8 != -1)
      swift_once();
    v9 = qword_1ED368320;
    if (*(_QWORD *)(qword_1ED368320 + 16))
    {
      sub_1ABF2FF5C();
      v10 = sub_1ABD00F9C(v3, v5);
      if ((v11 & 1) != 0)
      {
        v12 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v10);
        v13 = *v12;
        v14 = v12[1];
        sub_1ABF2FF5C();
        result = swift_bridgeObjectRelease();
        v16 = v14;
        v17 = v13;
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
    }
    result = sub_1ABF2FF5C();
    v17 = v3;
    v16 = v5;
LABEL_9:
    v18 = qword_1ED368328;
    v19 = v3;
    v20 = v5;
    if (*(_QWORD *)(qword_1ED368328 + 16))
    {
      v21 = v16;
      v22 = v17;
      sub_1ABF2FF5C();
      v23 = sub_1ABD00F9C(v3, v5);
      v19 = v3;
      v20 = v5;
      if ((v24 & 1) != 0)
      {
        v25 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 16 * v23);
        v19 = *v25;
        v20 = v25[1];
        sub_1ABF2FF5C();
        swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
      v17 = v22;
      v16 = v21;
    }
    v38 = v2;
    v27 = *(_QWORD *)(v2 + 16);
    v26 = *(_QWORD *)(v2 + 24);
    if (v27 >= v26 >> 1)
    {
      v33 = v16;
      v31 = v17;
      result = sub_1ABD080B8(v26 > 1, v27 + 1, 1);
      v16 = v33;
      v17 = v31;
      v2 = v38;
    }
    *(_QWORD *)(v2 + 16) = v27 + 1;
    v28 = v2 + 136 * v27;
    *(_QWORD *)(v28 + 32) = 0x51414453414ELL;
    *(_QWORD *)(v28 + 40) = 0xE600000000000000;
    *(_QWORD *)(v28 + 48) = v3;
    *(_QWORD *)(v28 + 56) = v5;
    *(_QWORD *)(v28 + 64) = v35;
    *(_QWORD *)(v28 + 72) = v34;
    *(_QWORD *)(v28 + 80) = 0x51414453414ELL;
    *(_QWORD *)(v28 + 88) = 0xE600000000000000;
    *(_BYTE *)(v28 + 96) = 0;
    *(_DWORD *)(v28 + 97) = *(_DWORD *)v36;
    *(_DWORD *)(v28 + 100) = *(_DWORD *)&v36[3];
    *(_QWORD *)(v28 + 104) = v17;
    *(_QWORD *)(v28 + 112) = v16;
    *(_QWORD *)(v28 + 120) = v19;
    *(_QWORD *)(v28 + 128) = v20;
    *(_OWORD *)(v28 + 152) = 0u;
    *(_OWORD *)(v28 + 136) = 0u;
    if (v1 != 50)
      break;
    v29 = 0;
LABEL_18:
    if (!--v0)
    {
      sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD33E84();
      sub_1ABF31900();
      swift_release();
      swift_beginAccess();
      v32 = sub_1ABF2FF5C();
      sub_1ABD34130(v32);
      swift_endAccess();
      return swift_bridgeObjectRelease();
    }
    v30 = v1 == 50;
    v1 = v29;
    if (v30)
      goto LABEL_24;
  }
  v29 = v1 + 1;
  if (!__OFADD__(v1, 1))
    goto LABEL_18;
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1ABD16108(uint64_t a1)
{
  uint32_t v1;
  uint32_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = a1;
  v2 = arc4random_uniform(HIDWORD(a1));
  if (v2 <= v1)
    v3 = v1;
  else
    v3 = v2;
  if ((_DWORD)v3)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1ABD16414(0, v3, 0);
    do
    {
      v4 = sub_1ABD16220(0x800000003);
      v6 = v5;
      v8 = *(_QWORD *)(v12 + 16);
      v7 = *(_QWORD *)(v12 + 24);
      if (v8 >= v7 >> 1)
        sub_1ABD16414(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v12 + 16) = v8 + 1;
      v9 = v12 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
      --v3;
    }
    while (v3);
  }
  sub_1ABD165AC();
  sub_1ABD16600();
  v10 = sub_1ABF316E4();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1ABD16220(uint64_t a1)
{
  uint32_t v1;
  uint32_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v1 = a1;
  v2 = arc4random_uniform(HIDWORD(a1));
  if (v2 <= v1)
    v3 = v1;
  else
    v3 = v2;
  if ((_DWORD)v3)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1ABD16414(0, v3, 0);
    while (1)
    {
      v4 = sub_1ABF3184C();
      if ((v4 & 0x8000000000000000) != 0 || HIDWORD(v4))
        break;
      arc4random_uniform(v4);
      sub_1ABF31864();
      v5 = sub_1ABF318D0();
      v7 = v6;
      v9 = *(_QWORD *)(v13 + 16);
      v8 = *(_QWORD *)(v13 + 24);
      if (v9 >= v8 >> 1)
        sub_1ABD16414(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v13 + 16) = v9 + 1;
      v10 = v13 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      if (!--v3)
        goto LABEL_11;
    }
    result = sub_1ABF31FC0();
    __break(1u);
  }
  else
  {
LABEL_11:
    sub_1ABD165AC();
    sub_1ABD16600();
    v11 = sub_1ABF316E4();
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1ABD16414(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABD16430(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABD16430(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

void sub_1ABD165AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FCB0)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FCB0);
  }
}

unint64_t sub_1ABD16600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34FCC0;
  if (!qword_1ED34FCC0)
  {
    sub_1ABD165AC();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34FCC0);
  }
  return result;
}

void sub_1ABD16648(void (*a1)(_QWORD *), uint64_t a2, void (*a3)(char *, char *, uint64_t), char *a4)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint32_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  unint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  void *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, uint64_t);
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  void (*v74)(_QWORD *);
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, unint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  char v95[16];
  uint64_t v96;
  char *v97;

  v92 = a4;
  v93 = a3;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v73 - v8;
  v10 = sub_1ABF3094C();
  v88 = *(_QWORD *)(v10 - 8);
  v89 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD16EF8();
  v85 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v86 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v82 = (char *)&v73 - v16;
  sub_1ABCFC730();
  v83 = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v84 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v87 = (uint64_t)&v73 - v20;
  v21 = type metadata accessor for Chart(0);
  MEMORY[0x1E0C80A78](v21);
  v81 = (uint64_t *)((char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v6);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v73 - v27;
  v29 = sub_1ABF30760();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x1E0C80A78](v29);
  v80 = (char *)&v73 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v90 = (char *)&v73 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v91 = (char *)&v73 - v36;
  MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v73 - v37;
  sub_1ABD16D6C(1);
  v39 = arc4random_uniform(0x64u);
  if (v39 <= 1)
    v40 = 1;
  else
    v40 = v39;
  v79 = v40;
  v96 = v40;
  v97 = v38;
  v94 = v38;
  v41 = sub_1ABF127A8((void (*)(uint64_t *))sub_1ABD003A0, (uint64_t)v95, 0, 10);
  v42 = *(_QWORD *)(v41 + 16);
  if (!v42)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
    goto LABEL_10;
  }
  v75 = v12;
  v76 = v9;
  v77 = a2;
  v74 = a1;
  v43 = *(_QWORD *)(type metadata accessor for Chart.Entry(0) - 8);
  v44 = v41 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
  v78 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
  v78(v28, v44, v29);
  v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56);
  v45(v28, 0, 1, v29);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  if (v46(v28, 1, v29) == 1)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v47 = v28;
  v48 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  v48(v91, v47, v29);
  if (v42 > *(_QWORD *)(v41 + 16))
  {
    __break(1u);
    goto LABEL_17;
  }
  v49 = v44 + *(_QWORD *)(v43 + 72) * (v42 - 1);
  v50 = (void (*)(char *, char *, uint64_t))v78;
  v78(v26, v49, v29);
  v45(v26, 0, 1, v29);
  if (v46(v26, 1, v29) != 1)
  {
    v52 = v90;
    v48(v90, v26, v29);
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34CCB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v53 = v91;
    v93 = v48;
    if ((sub_1ABF31708() & 1) != 0)
    {
      v54 = v85;
      v55 = v82;
      v56 = &v82[*(int *)(v85 + 48)];
      v50(v82, v53, v29);
      v92 = v56;
      v50(v56, v52, v29);
      v57 = v86;
      v58 = &v86[*(int *)(v54 + 48)];
      v50(v86, v55, v29);
      v50(v58, v56, v29);
      v59 = (uint64_t)v84;
      v60 = v93;
      v93(v84, v57, v29);
      v61 = *(void (**)(char *, uint64_t))(v30 + 8);
      v61(v58, v29);
      v62 = &v57[*(int *)(v54 + 48)];
      v60(v57, v55, v29);
      v60(v62, v92, v29);
      v60((char *)(v59 + *(int *)(v83 + 36)), v62, v29);
      v63 = v61;
      v61(v57, v29);
      v64 = v87;
      sub_1ABD16EA8(v59, v87);
      v65 = v76;
      sub_1ABF3091C();
      v67 = v88;
      v66 = v89;
      v68 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48))(v65, 1, v89);
      v69 = (uint64_t)v75;
      if (v68 != 1)
      {
        *(double *)&v70 = (double)v79 + 5.0;
        (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v75, v65, v66);
        v71 = (uint64_t)v80;
        sub_1ABF30754();
        v72 = v81;
        sub_1ABD00568(v41, v64, v70, 0, v69, v71, v81);
        v74(v72);
        sub_1ABD17800((uint64_t)v72);
        v63(v90, v29);
        v63(v91, v29);
        v63(v94, v29);
        return;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v91, v29);
  v28 = v26;
LABEL_11:
  sub_1ABCFF610((uint64_t)v28);
  sub_1ABF267DC();
  v51 = (void *)swift_allocError();
  ((void (*)(void))v93)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v94, v29);

}

void sub_1ABD16D20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1ABF31A98();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1ABD16D6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  double v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;

  v2 = sub_1ABF30760();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - v7;
  result = sub_1ABF30754();
  if (__OFSUB__(0, a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((unsigned __int128)(-a1 * (__int128)86400) >> 64 != (-86400 * a1) >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1ABF306C4();
  result = sub_1ABF30670();
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v10 <= -1.0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v10 < 4294967300.0)
  {
    arc4random_uniform(v10);
    sub_1ABF306C4();
    v11 = *(void (**)(char *, uint64_t))(v3 + 8);
    v11(v6, v2);
    return ((uint64_t (*)(char *, uint64_t))v11)(v8, v2);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1ABD16EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCFC730();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABD16EEC()
{
  uint64_t v0;

  sub_1ABD16648(*(void (**)(_QWORD *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(char *, char *, uint64_t))(v0 + 32), *(char **)(v0 + 40));
}

void sub_1ABD16EF8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34CCA8)
  {
    sub_1ABF30760();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34CCA8);
  }
}

void sub_1ABD16F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1ABD16F74(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1ABD16F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1ABF30460();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t sub_1ABD16FCC()
{
  uint64_t v0;

  return sub_1ABD16FE8(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1ABD16FE8(void (*a1)(uint64_t))
{
  uint64_t v2;

  swift_beginAccess();
  v2 = sub_1ABF2FF5C();
  a1(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD17048(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABD17080(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1ABD17050(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1ABD17080(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  return a2(&v3);
}

uint64_t sub_1ABD170B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  void (*v21)();
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  void (*v31)();
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int isUniquelyReferenced_nonNull_native;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t result;
  _QWORD v53[3];
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t *v64;
  _QWORD *v65;

  v5 = type metadata accessor for Chart(0);
  v61 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v53 - v9;
  sub_1ABD1783C();
  v60 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v59 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v64 = (_QWORD *)((char *)v53 - v15);
  MEMORY[0x1E0C80A78](v14);
  v58 = (_QWORD *)((char *)v53 - v16);
  v17 = *a1;
  v57 = *(_QWORD *)(a2 + 16);
  if (v57)
  {
    v53[2] = v2;
    v56 = *(_QWORD *)(v17 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v18 = 0;
    v19 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v53[1] = a2;
    v20 = (_QWORD *)(a2 + 40);
    v21 = sub_1ABD1783C;
    v54 = v10;
    v55 = v17;
    while (1)
    {
      if (v56 == v18)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      if (v18 >= *(_QWORD *)(v17 + 16))
        break;
      v62 = v20;
      v22 = *(v20 - 1);
      v23 = *v20;
      v24 = v17 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
      v63 = *(_QWORD *)(v61 + 72);
      v25 = v24 + v63 * v18;
      v26 = v60;
      v27 = v58;
      v28 = (uint64_t)v58 + *(int *)(v60 + 48);
      *v58 = v22;
      v27[1] = v23;
      sub_1ABD177BC(v25, v28);
      v29 = (uint64_t)v27;
      v30 = v64;
      v31 = v21;
      sub_1ABCFE2AC(v29, (uint64_t)v64, (uint64_t (*)(_QWORD))v21);
      v32 = *(int *)(v26 + 48);
      v33 = (uint64_t)&v59[v32];
      v34 = (uint64_t)v30 + v32;
      v35 = *v30;
      v36 = v30[1];
      sub_1ABD177BC(v34, (uint64_t)&v59[v32]);
      sub_1ABCFE2AC(v33, (uint64_t)v10, type metadata accessor for Chart);
      v37 = (uint64_t)v10;
      v38 = (uint64_t)v8;
      sub_1ABD177BC(v37, (uint64_t)v8);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v65 = v19;
      v41 = sub_1ABD00F9C(v35, v36);
      v42 = v19[2];
      v43 = (v40 & 1) == 0;
      v44 = v42 + v43;
      if (__OFADD__(v42, v43))
        goto LABEL_20;
      v45 = v40;
      if (v19[3] >= v44)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1ABE6F6E8();
      }
      else
      {
        sub_1ABD24348(v44, isUniquelyReferenced_nonNull_native);
        v46 = sub_1ABD00F9C(v35, v36);
        if ((v45 & 1) != (v47 & 1))
          goto LABEL_22;
        v41 = v46;
      }
      v21 = v31;
      v19 = v65;
      if ((v45 & 1) != 0)
      {
        v8 = (char *)v38;
        sub_1ABE4B884(v38, v65[7] + v41 * v63);
      }
      else
      {
        v65[(v41 >> 6) + 8] |= 1 << v41;
        v48 = (uint64_t *)(v19[6] + 16 * v41);
        *v48 = v35;
        v48[1] = v36;
        v8 = (char *)v38;
        sub_1ABCFE2AC(v38, v19[7] + v41 * v63, type metadata accessor for Chart);
        v49 = v19[2];
        v50 = __OFADD__(v49, 1);
        v51 = v49 + 1;
        if (v50)
          goto LABEL_21;
        v19[2] = v51;
        sub_1ABF2FF5C();
      }
      ++v18;
      v20 = v62 + 2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v54;
      sub_1ABCFC3BC((uint64_t)v54, type metadata accessor for Chart);
      sub_1ABCFC3BC((uint64_t)v64, (uint64_t (*)(_QWORD))v31);
      v17 = v55;
      if (v57 == v18)
        goto LABEL_16;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    result = sub_1ABF3229C();
    __break(1u);
  }
  else
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v19 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v65 = v19;
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34C8C0, (uint64_t (*)(uint64_t))sub_1ABD346A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311E0();
  }
  return result;
}

uint64_t sub_1ABD174E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int v19;
  uint64_t (*v20)(_QWORD);
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v2);
  v32 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30760();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - v8;
  v10 = type metadata accessor for Quote();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v31 - v14;
  v16 = type metadata accessor for Chart(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(unsigned __int8 *)(a1 + 128);
  sub_1ABCFC790(v34, (uint64_t)v18, v20);
  sub_1ABCFC790(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  if (v19 <= 1)
  {
    v22 = *(int *)(v16 + 20);
    sub_1ABCFC730();
    v24 = &v18[v22 + *(int *)(v23 + 36)];
    v25 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v25(v9, v24, v4);
    v26 = v32;
    sub_1ABCFC790((uint64_t)&v15[*(int *)(v10 + 92)], v32, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABCFC790((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v26, 1, v4) == 1)
    {
      v27 = &v13[*(int *)(v10 + 88)];
      v28 = v33;
      v25(v33, v27, v4);
      sub_1ABCFC3BC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
      sub_1ABCFC3BC(v26, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    }
    else
    {
      sub_1ABCFC3BC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
      v28 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v26, v4);
    }
    sub_1ABD47E5C();
    v21 = sub_1ABF316F0() ^ 1;
    v29 = *(void (**)(char *, uint64_t))(v5 + 8);
    v29(v28, v4);
    v29(v9, v4);
  }
  else
  {
    v21 = 1;
  }
  sub_1ABCFC3BC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  sub_1ABCFC3BC((uint64_t)v18, type metadata accessor for Chart);
  return v21 & 1;
}

uint64_t sub_1ABD177BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Chart(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD17800(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Chart(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1ABD1783C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34DED8)
  {
    type metadata accessor for Chart(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34DED8);
  }
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1ABD178DC@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t result;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = (uint64_t)objc_msgSend(v1, sel_respondsToSelector_, sel_stocksFields);
  if ((result & 1) != 0
    && (result = (uint64_t)objc_msgSend(v1, sel_stocksFields)) != 0
    && (v4 = objc_msgSend((id)result, sel_stocksMetadataJSON),
        result = swift_unknownObjectRelease(),
        v4))
  {
    v5 = sub_1ABF317A4();
    v7 = v6;

    sub_1ABF301E4();
    swift_allocObject();
    sub_1ABF301D8();
    v8 = sub_1ABD17A68(v5, v7);
    v10 = v9;
    sub_1ABD17A24();
    sub_1ABF301C0();
    sub_1ABD0F430(v8, v10);
    result = swift_release();
    v11 = v12;
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9D8];
  }
  *a1 = v11;
  return result;
}

unint64_t sub_1ABD17A24()
{
  unint64_t result;

  result = qword_1ED346940;
  if (!qword_1ED346940)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39778, &type metadata for HeadlineMetadata);
    atomic_store(result, (unint64_t *)&qword_1ED346940);
  }
  return result;
}

uint64_t sub_1ABD17A68(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  sub_1ABD1804C();
  sub_1ABF2FF5C();
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_1ABD184CC((uint64_t)v14, (unint64_t *)&unk_1ED346848, (uint64_t (*)(uint64_t))sub_1ABD1804C);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_1ABF31EE8();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_1ABD17F68(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_1ABF3187C();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_1ABDDCACC(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x1E0C80A78](*(_QWORD *)&v14[0]);
    sub_1ABDDC558();
    __asm { BR              X12 }
  }
  sub_1ABD065C8(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_1ABF303E8();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

_BYTE *sub_1ABD17F68(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_1ABE604B0(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_1ABDDCA54((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_1ABD17FCC((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_1ABD17FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1ABF30388();
  swift_allocObject();
  result = sub_1ABF3034C();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_1ABD1804C()
{
  unint64_t result;

  result = qword_1ED346840;
  if (!qword_1ED346840)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED346840);
  }
  return result;
}

uint64_t sub_1ABD180A0(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[5];

  v36 = a2;
  v40 = a1;
  sub_1ABE7BC50(0);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5968();
  MEMORY[0x1E0C80A78](v8);
  v37 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for RawAttributionSource(0);
  v10 = MEMORY[0x1E0C80A78](v39);
  v38 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v42 = (uint64_t)&v33 - v12;
  v34 = sub_1ABF31C18();
  v13 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1ABF31C00();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v16);
  v18 = sub_1ABF315D0();
  MEMORY[0x1E0C80A78](v18);
  v44[3] = type metadata accessor for SDSMetadataCache();
  v44[4] = &off_1E5AE4340;
  v44[0] = a3;
  v33 = sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD60);
  *(_OWORD *)(a4 + 80) = 0u;
  *(_OWORD *)(a4 + 96) = 0u;
  *(_QWORD *)(a4 + 112) = 0;
  sub_1ABF315AC();
  v43 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v17, MEMORY[0x1E0DEF828]);
  sub_1ABCF5A54(0, &qword_1ED34FCE0, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCE8, &qword_1ED34FCE0, v17);
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF8D0], v34);
  v19 = sub_1ABF31C3C();
  v35 = a4;
  *(_QWORD *)(a4 + 120) = v19;
  *(_BYTE *)(a4 + 24) = v40;
  *(_QWORD *)(a4 + 32) = v36;
  sub_1ABD07E04((uint64_t)v44, a4 + 40);
  v20 = sub_1ABF305D4();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v22 = (uint64_t)v37;
  v21(v37, 1, 1, v20);
  v23 = type metadata accessor for RawAttributionSourceLogo(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v25 = (uint64_t)v41;
  v24(v41, 1, 1, v23);
  v26 = v38;
  v27 = v39;
  v28 = (uint64_t)&v38[*(int *)(v39 + 20)];
  v21((char *)v28, 1, 1, v20);
  v29 = (uint64_t)v26 + *(int *)(v27 + 24);
  v24((char *)v29, 1, 1, v23);
  *v26 = 0;
  v26[1] = 0xE000000000000000;
  sub_1ABF2FF68();
  sub_1ABDF221C(v22, v28, (uint64_t (*)(_QWORD))sub_1ABCF5968);
  sub_1ABDF221C(v25, v29, (uint64_t (*)(_QWORD))sub_1ABE7BC50);
  sub_1ABD76140((uint64_t)v26, v42);
  sub_1ABCF5A54(0, &qword_1ED34EA58, type metadata accessor for RawAttributionSource, MEMORY[0x1E0DB39E0]);
  swift_allocObject();
  v30 = sub_1ABF30CD0();
  v31 = v35;
  *(_QWORD *)(v35 + 16) = v30;
  sub_1ABD3BB04();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return v31;
}

uint64_t sub_1ABD184CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1ABCF5A54(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1ABD18510(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1ABD00308(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1ABD1857C()
{
  unint64_t result;

  result = qword_1ED34F728;
  if (!qword_1ED34F728)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CDB4, &type metadata for NewsPersonalizationTreatment);
    atomic_store(result, (unint64_t *)&qword_1ED34F728);
  }
  return result;
}

void NewsCoreConfiguration.topStoriesConfig.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  _OWORD v24[5];
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  sub_1ABD188A0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF36EA0;
  *(_QWORD *)&v24[0] = 0x496C656E6E616863;
  *((_QWORD *)&v24[0] + 1) = 0xE900000000000064;
  v2 = MEMORY[0x1E0DEA968];
  sub_1ABF31E40();
  v3 = v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration;
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_topStoriesConfiguration + 8);
  *(_QWORD *)(inited + 96) = v2;
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 80) = v4;
  strcpy((char *)v24, "badgesTimeout");
  HIWORD(v24[0]) = -4864;
  sub_1ABF2FF5C();
  sub_1ABF31E40();
  v6 = *(double *)(v3 + 24);
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  *(_QWORD *)(inited + 168) = MEMORY[0x1E0DEDC60];
  *(_QWORD *)(inited + 144) = (uint64_t)v6;
  strcpy((char *)v24, "styleConfigs");
  BYTE13(v24[0]) = 0;
  HIWORD(v24[0]) = -5120;
  sub_1ABF31E40();
  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1ABF2FF5C();
    sub_1ABDB50FC(0, v8, 0);
    v9 = v28;
    v10 = (__int128 *)(v7 + 64);
    do
    {
      v11 = *(v10 - 1);
      v12 = *v10;
      v13 = v10[1];
      v14 = v10[2];
      v15 = *((_QWORD *)v10 + 6);
      v16 = *((_QWORD *)v10 + 7);
      v24[0] = *(v10 - 2);
      v24[1] = v11;
      v24[2] = v12;
      v24[3] = v13;
      v24[4] = v14;
      v25 = v15;
      v26 = v16;
      sub_1ABDEBA74((uint64_t *)v24, &v27);
      v17 = v27;
      v28 = v9;
      v19 = *(_QWORD *)(v9 + 16);
      v18 = *(_QWORD *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1ABDB50FC(v18 > 1, v19 + 1, 1);
        v9 = v28;
      }
      *(_QWORD *)(v9 + 16) = v19 + 1;
      *(_QWORD *)(v9 + 8 * v19 + 32) = v17;
      v10 += 6;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  sub_1ABD18904();
  *(_QWORD *)(inited + 240) = v20;
  *(_QWORD *)(inited + 216) = v9;
  sub_1ABD18978(inited);
  v21 = objc_allocWithZone(MEMORY[0x1E0D58FA0]);
  v22 = (void *)sub_1ABF31618();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v21, sel_initWithConfigDictionary_, v22);

  if (!v23)
    goto LABEL_15;
}

void sub_1ABD188A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E358)
  {
    sub_1ABD18C74(255, (unint64_t *)&qword_1ED34E170);
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E358);
  }
}

void sub_1ABD18904()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DFD8)
  {
    sub_1ABD18AE0(255, (unint64_t *)&qword_1ED34DE90, MEMORY[0x1E0DEC198], MEMORY[0x1E0DEC1A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DFD8);
  }
}

unint64_t sub_1ABD18978(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1ABD18AE0(0, &qword_1ED34E1E0, MEMORY[0x1E0DEC198], MEMORY[0x1E0DEC1A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
  v2 = sub_1ABF32014();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1ABF2FF68();
  while (1)
  {
    sub_1ABD18C28(v6, (uint64_t)v15, (unint64_t *)&qword_1ED34E170);
    result = sub_1ABD18B34((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1ABD1F610(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1ABD18AE0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, MEMORY[0x1E0DEE9B8] + 8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1ABD18B34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1ABF31E28();
  return sub_1ABD18B64(a1, v2);
}

unint64_t sub_1ABD18B64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1ABD18D04(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1AF438054](v9, a1);
      sub_1ABD18CD0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1ABD18C28(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1ABD18C74(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1ABD18C74(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1ABD18CD0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1ABD18D04(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1ABD18D70()
{
  return sub_1ABD18D94() & 1;
}

uint64_t sub_1ABD18D94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  _QWORD *v10;
  uint64_t result;
  _QWORD v12[390];

  v1 = sub_1ABF30988();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED34DBE8 != -1)
    swift_once();
  sub_1ABD1951C();
  sub_1ABF30970();
  v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v5 == *MEMORY[0x1E0DB54D8])
  {
    v6 = (void *)objc_opt_self();
    v7 = v0[11];
    v8 = v0[12];
    __swift_project_boxed_opaque_existential_1(v0 + 8, v7);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v12, v7, v8);
    sub_1ABD7DDF4((uint64_t)v12);
    v9 = objc_msgSend(v6, sel_enabledForCurrentLevel_, v12[382]);
    if (v9)
    {
      v10 = __swift_project_boxed_opaque_existential_1(v0 + 18, v0[21]);
      LOBYTE(v9) = sub_1ABD197E8(*v10 + OBJC_IVAR____TtC10StocksCore18UserRegionProvider_currentRegion);
    }
    return v9 & 1;
  }
  if (v5 == *MEMORY[0x1E0DB54E0])
  {
    LOBYTE(v9) = 1;
    return v9 & 1;
  }
  if (v5 == *MEMORY[0x1E0DB54E8])
  {
    LOBYTE(v9) = 0;
    return v9 & 1;
  }
  result = sub_1ABF31FCC();
  __break(1u);
  return result;
}

uint64_t sub_1ABD18F90()
{
  uint64_t *v0;
  uint64_t v1;
  unsigned __int8 v3;

  v1 = *v0;
  if ((sub_1ABD19038() & 1) == 0)
    return 0;
  if ((objc_msgSend(*(id *)(v1 + 56), sel_isPrivateDataSyncingAllowed) & 1) != 0)
    return 1;
  if (qword_1ED3466A8 != -1)
    swift_once();
  sub_1ABD1951C();
  sub_1ABF30970();
  return v3;
}

uint64_t sub_1ABD19038()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  BOOL v9;
  BOOL v10;
  char v11;
  BOOL v12;
  BOOL v13;
  char v14;
  BOOL v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24[2];
  _QWORD v25[13];
  char v26;
  char v27;

  v1 = v0;
  if (qword_1ED34DBA8 != -1)
    swift_once();
  sub_1ABD1951C();
  sub_1ABF30970();
  if (v27)
  {
    if (v27 == 1)
    {
      sub_1ABD19560();
      v2 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
LABEL_6:
      sub_1ABF31318();

      return 1;
    }
    sub_1ABD19560();
    v2 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    goto LABEL_44;
  }
  v4 = v0[11];
  v5 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v25, v4, v5);
  sub_1ABD7DDF4((uint64_t)v25);
  if (v26 != 1)
    goto LABEL_42;
  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  v6 = qword_1ED34E878;
  v7 = qword_1ED34E880;
  if (qword_1ED34E878 != 0x313434333431 || qword_1ED34E880 != 0xE600000000000000)
  {
    v8 = sub_1ABF3223C();
    v9 = v6 == 0x343434333431 && v7 == 0xE600000000000000;
    v10 = v9;
    if ((v8 & 1) == 0 && !v10)
    {
      v11 = sub_1ABF3223C();
      v12 = v6 == 0x303634333431 && v7 == 0xE600000000000000;
      v13 = v12;
      if ((v11 & 1) == 0 && !v13)
      {
        v14 = sub_1ABF3223C();
        v15 = v6 == 0x353534333431 && v7 == 0xE600000000000000;
        v16 = v15;
        if ((v14 & 1) == 0 && !v16 && (sub_1ABF3223C() & 1) == 0)
        {
LABEL_42:
          sub_1ABD19560();
          v2 = (void *)sub_1ABF31D44();
          sub_1ABF31BF4();
LABEL_44:
          sub_1ABF31318();

          return 0;
        }
      }
    }
  }
  sub_1ABD07E04((uint64_t)(v1 + 8), (uint64_t)v24);
  type metadata accessor for NewsRegionCheck();
  v17 = swift_allocObject() + 16;
  sub_1ABD065C8(v24, v17);
  v18 = sub_1ABD195BC();
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17);
  swift_deallocClassInstance();
  if ((v18 & 1) == 0)
  {
LABEL_43:
    sub_1ABD19560();
    v2 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    goto LABEL_44;
  }
  result = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_sharedNetworkReachability);
  if (result)
  {
    v19 = (void *)result;
    v20 = objc_msgSend((id)result, sel_offlineReason);

    if (v20 != (id)3)
    {
      v21 = v1 + 13;
      v23 = v1[16];
      v22 = v1[17];
      __swift_project_boxed_opaque_existential_1(v21, v23);
      LOBYTE(v23) = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v23, v22);
      sub_1ABD19560();
      v2 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      if ((v23 & 1) != 0)
        goto LABEL_6;
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  __break(1u);
  return result;
}

unint64_t sub_1ABD1951C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34D5E0;
  if (!qword_1ED34D5E0)
  {
    v1 = type metadata accessor for FeatureAvailability();
    result = MEMORY[0x1AF438F30](&unk_1ABF48130, v1);
    atomic_store(result, (unint64_t *)&qword_1ED34D5E0);
  }
  return result;
}

unint64_t sub_1ABD19560()
{
  unint64_t result;

  result = qword_1ED34FD90;
  if (!qword_1ED34FD90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34FD90);
  }
  return result;
}

uint64_t type metadata accessor for NewsRegionCheck()
{
  return objc_opt_self();
}

uint64_t sub_1ABD195BC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v26[391];

  v1 = v0;
  v2 = sub_1ABF30868();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v26[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAD0, (void (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26[-1] - v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_1ABF307FC();

  sub_1ABF30874();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1ABF3085C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = sub_1ABF30820();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_1ABD18510((uint64_t)v12, (unint64_t *)&qword_1ED34EAD0, (void (*)(uint64_t))MEMORY[0x1E0CB0C48]);
    v16 = 0;
  }
  else
  {
    v17 = sub_1ABF307B4();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    v20 = v1 + 2;
    v22 = v1[5];
    v21 = v1[6];
    __swift_project_boxed_opaque_existential_1(v20, v22);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v21 + 8))(v26, v22, v21);
    v23 = v26[170];
    sub_1ABF2FF5C();
    sub_1ABD7DDF4((uint64_t)v26);
    v16 = sub_1ABD0DC3C(v17, v19, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v16 & 1;
}

uint64_t sub_1ABD197E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[390];

  sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAD0, (void (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v15 - v4;
  v6 = sub_1ABF30820();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD19AD8(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1ABD18510((uint64_t)v5, (unint64_t *)&qword_1ED34EAD0, (void (*)(uint64_t))MEMORY[0x1E0CB0C48]);
    v10 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    v11 = v1[11];
    v12 = v1[12];
    __swift_project_boxed_opaque_existential_1(v1 + 8, v11);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 8))(v15, v11, v12);
    v13 = v15[383];
    sub_1ABF2FF5C();
    sub_1ABD7DDF4((uint64_t)v15);
    v10 = sub_1ABD19964((uint64_t)v9, v13);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v10 & 1;
}

uint64_t sub_1ABD19964(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1ABF30820();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1ABD19B2C(&qword_1ED34EAC0, MEMORY[0x1E0CB0C60]),
        v6 = sub_1ABF316C0(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1ABD19B2C(&qword_1ED34EAC8, MEMORY[0x1E0CB0C68]);
      v12 = sub_1ABF31720();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1ABD19AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAD0, (void (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD19B2C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1ABF30820();
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD19B6C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void (*v34)(_QWORD *, uint64_t);
  unsigned int v35;
  void (*v36)(_QWORD *);
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[390];
  _QWORD v45[391];

  v2 = MEMORY[0x1E0C80A78](a1);
  v3 = v1;
  v38 = v4;
  v6 = v5;
  v7 = v2;
  v41 = v2;
  v8 = sub_1ABF30B14();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (void (**)(_QWORD *, uint64_t))((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = v3[5];
  v13 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v12);
  v14 = sub_1ABD1E23C(v7, v6, v12, v13);
  v15 = v3[5];
  v39 = v3[6];
  v40 = v14;
  __swift_project_boxed_opaque_existential_1(v3 + 2, v15);
  v37 = v3 + 12;
  v16 = v3[15];
  v17 = v3[16];
  __swift_project_boxed_opaque_existential_1(v3 + 12, v16);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v44, v16, v17);
  sub_1ABD7DDF4((uint64_t)v44);
  *v11 = v44[25];
  v35 = *MEMORY[0x1E0DB32B8];
  v36 = *(void (**)(_QWORD *))(v9 + 104);
  v36(v11);
  v18 = v41;
  v39 = sub_1ABD1E23C(v41, (uint64_t)v11, v15, v39);
  v34 = *(void (**)(_QWORD *, uint64_t))(v9 + 8);
  v34(v11, v8);
  v19 = v3[10];
  v20 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8))(v18, v38, v19, v20);
  v21 = (void *)sub_1ABF31114();
  v38 = sub_1ABF31204();
  swift_release();

  v22 = v3[10];
  v23 = v3[11];
  __swift_project_boxed_opaque_existential_1(v3 + 7, v22);
  v25 = v3[15];
  v24 = v3[16];
  __swift_project_boxed_opaque_existential_1(v37, v25);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v24 + 8))(v45, v25, v24);
  sub_1ABD7DDF4((uint64_t)v45);
  *v11 = v45[25];
  ((void (*)(_QWORD *, _QWORD, uint64_t))v36)(v11, v35, v8);
  (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v23 + 8))(v41, v11, v22, v23);
  v34(v11, v8);
  v26 = (void *)sub_1ABF31114();
  v27 = sub_1ABF31204();
  swift_release();

  v42 = v39;
  v43 = v27;
  sub_1ABD1EAC0();
  sub_1ABF3127C();
  v28 = (_QWORD *)swift_allocObject();
  v29 = v38;
  v28[2] = v40;
  v28[3] = v29;
  v28[4] = v3;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_1ABCFB000;
  *(_QWORD *)(v30 + 24) = v28;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v31 = (void *)sub_1ABF31114();
  v32 = sub_1ABF31174();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v32;
}

id sub_1ABD19EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  __int128 v9;
  double v10;
  __int128 v11;
  unsigned __int8 v12;
  id v13;
  uint64_t v14;
  id v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[3120];
  uint64_t __dst[390];
  _BYTE v23[3120];
  uint64_t v24;
  __int128 v25[195];
  uint64_t v26[390];
  _BYTE v27[3120];
  _BYTE v28[3120];
  _OWORD v29[196];

  MEMORY[0x1E0C80A78](a1);
  v2 = v1;
  sub_1ABF30AC0();
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager + 24);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager), *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager + 24));
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v29, v3, v4);
  v5 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownNewsConfig;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownNewsConfig);
  if (v6)
  {
    memcpy(v26, v29, sizeof(v26));
    nullsub_2(v26);
    sub_1ABDC4288(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig, (uint64_t)v27);
    sub_1ABDC4288((uint64_t)v26, (uint64_t)v25);
    sub_1ABDC4288((uint64_t)v27, (uint64_t)v28);
    if (sub_1ABD75518((uint64_t)v28) == 1)
    {
      memcpy(__dst, v25, sizeof(__dst));
      sub_1ABDC1FEC((uint64_t)v29);
      sub_1ABDC1FEC((uint64_t)v29);
      swift_unknownObjectRetain();
      sub_1ABD7DDF4((uint64_t)__dst);
      sub_1ABDC4288((uint64_t)v26, (uint64_t)v23);
      sub_1ABDC4288((uint64_t)v27, (uint64_t)&v24);
      sub_1ABDC5A70((uint64_t)v23);
    }
    else
    {
      sub_1ABDC4288((uint64_t)v27, (uint64_t)__dst);
      memcpy(v21, __dst, sizeof(v21));
      sub_1ABDC1FEC((uint64_t)v29);
      sub_1ABDC1FEC((uint64_t)v29);
      swift_unknownObjectRetain();
      v7 = sub_1ABD1A6A4((uint64_t)v25);
      memcpy(v23, v25, sizeof(v23));
      sub_1ABD7DDF4((uint64_t)v23);
      sub_1ABD7DDF4((uint64_t)v29);
      if (v7)
      {
        sub_1ABD7DDF4((uint64_t)v29);
        sub_1ABF30ACC();
        return (id)v6;
      }
    }
    swift_unknownObjectRelease();
  }
  v9 = v29[89];
  memcpy(v23, v29, sizeof(v23));
  __dst[0] = *((_QWORD *)&v29[90] + 1);
  *(_OWORD *)&__dst[1] = v29[91];
  __dst[3] = *(_QWORD *)&v29[92];
  v20 = v5;
  v26[0] = *((_QWORD *)&v29[92] + 1);
  *(_OWORD *)&v26[1] = v29[93];
  *(_OWORD *)&v26[3] = v29[94];
  *(_OWORD *)&v26[5] = v29[95];
  *(_OWORD *)&v26[7] = v29[96];
  memcpy(v28, (char *)&v29[98] + 8, 0x45BuLL);
  v19 = *((_QWORD *)&v29[25] + 1);
  memcpy(v27, &v29[26], 0x1F9uLL);
  v25[0] = v29[58];
  LOBYTE(v25[1]) = v29[59];
  LOBYTE(v25[2]) = v29[60];
  *((_QWORD *)&v25[1] + 1) = *((_QWORD *)&v29[59] + 1);
  *((_QWORD *)&v25[2] + 1) = *((_QWORD *)&v29[60] + 1);
  LOBYTE(v25[3]) = v29[61];
  *((_QWORD *)&v25[3] + 1) = *((_QWORD *)&v29[61] + 1);
  LOBYTE(v25[4]) = v29[62];
  v17 = *((_QWORD *)&v29[20] + 1);
  v18 = *(_QWORD *)&v29[90];
  v16 = BYTE8(v29[21]);
  v10 = *(double *)&v29[21];
  v11 = v29[24];
  v12 = BYTE3(v29[168]);
  objc_allocWithZone((Class)type metadata accessor for NewsCoreConfiguration());
  sub_1ABDC1FEC((uint64_t)v29);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD0B274((uint64_t)&v29[26]);
  sub_1ABF2FF5C();
  v13 = NewsCoreConfiguration.init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)(v9, *((uint64_t *)&v9 + 1), v23, __dst, v26, v28, v19, v27, v10, *(double *)&v11, *((double *)&v11 + 1), v25, v18, v17, v16, v12);
  memcpy(v28, v29, sizeof(v28));
  nullsub_2(v28);
  v14 = v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig;
  sub_1ABDC4288(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig, (uint64_t)v23);
  sub_1ABDC4288((uint64_t)v28, v14);
  sub_1ABDC434C((uint64_t)v23);
  *(_QWORD *)(v2 + v20) = v13;
  v15 = v13;
  swift_unknownObjectRelease();
  sub_1ABF30ACC();
  return v15;
}

uint64_t sub_1ABD1A400(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a21 != 1)
  {
    sub_1ABD7E1E0(result);
    sub_1ABD7E1E0(a5);
    sub_1ABD7E1E0(a9);
    sub_1ABD7E1E0(a13);
    sub_1ABD7E1E0(a17);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABD1A50C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABD1A540()
{
  return sub_1ABF30C88();
}

uint64_t sub_1ABD1A564(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a21 != 1)
  {
    sub_1ABDC23D0(result);
    sub_1ABDC23D0(a5);
    sub_1ABDC23D0(a9);
    sub_1ABDC23D0(a13);
    sub_1ABDC23D0(a17);
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABD1A670(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

BOOL sub_1ABD1A6A4(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  float64x2_t v8;
  float64x2_t v9;
  float64x2_t v10;
  float64x2_t v11;
  float64x2_t v12;
  int64x2_t *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;
  float64x2_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  _BOOL8 result;
  uint64_t v38;
  char v39;
  float64x2_t v40;
  float64x2_t v41;
  char v42;
  float64x2_t v43;
  float64x2_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  int v61;
  unsigned __int8 v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  int v68;
  char v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  int v78;
  double v79;
  int v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  double v85;
  int v86;
  double v87;
  int v88;
  int v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  double v93;
  int v94;
  int v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  uint64_t v99;
  float64x2_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  float64x2_t v105;
  float64x2_t v106;
  unsigned __int8 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  int v116;
  double v117;
  uint64_t v118;
  int v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  double v126;
  double v127;
  double v128;
  double v129;
  int v130;
  unsigned __int8 v131;
  double v132;
  unsigned __int8 v133;
  uint64_t v134;
  unsigned __int8 v135;
  uint64_t v136;
  unsigned __int8 v137;
  double v138;
  unsigned __int8 v139;
  double v140;
  unsigned __int8 v141;
  uint64_t v142;
  double v143;
  uint64_t v144;
  double v145;
  int v146;
  int v147;
  uint64_t v148;
  unsigned __int8 v149;
  uint64_t v150;
  uint64_t v151;
  float64_t v152;
  uint64_t v153;
  unsigned __int8 v154;
  uint64_t v155;
  uint64_t v156;
  unsigned __int8 v157;
  float64_t v158;
  float64x2_t v159;
  float64x2_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unsigned __int8 v166;
  uint64_t v167;
  uint64_t v168;
  unsigned __int8 v169;
  uint64_t v170;
  double v171;
  int v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  float64_t v183;
  float64_t v184;
  float64x2_t v185;
  float64_t v186;
  float64_t v187;
  float64x2_t v188;
  float64x2_t v189;
  float64_t v190;
  float64x2_t v191;
  float64_t v192;
  float64_t v193;
  float64_t v194;
  float64_t v195;
  float64x2_t v196;
  float64x2_t v197;
  float64x2_t v198;
  float64_t v199;
  float64x2_t v200;
  int v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  int v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  int v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  double v236;
  uint64_t v237;
  double v238;
  uint64_t v239;
  int64x2_t v240;
  int64x2_t v241;
  int64x2_t v242;
  int64x2_t v243;
  _QWORD *v244;
  _QWORD *v245;
  _QWORD *v246;
  _QWORD *v247;
  _QWORD *v248;
  _QWORD *v249;
  _QWORD *v250;
  _QWORD *v251;
  _QWORD *v252;
  _QWORD *v253;
  _QWORD *v254;
  _QWORD *v255;
  double v256;
  double v257;
  double v258;
  double v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  int v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  unsigned __int8 v272;
  float64_t v273;
  float64x2_t v274;
  unsigned __int8 v275;
  unsigned __int8 v276;
  unsigned __int8 v277;
  float64_t v278;
  float64_t v279;
  unsigned __int8 v280;
  float64_t v281;
  unsigned __int8 v282;
  float64_t v283;
  unsigned __int8 v284;
  float64_t v285;
  unsigned __int8 v286;
  float64x2_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  float64_t v298;
  float64x2_t v299;
  float64x2_t v300;
  float64x2_t v301;
  float64_t v302;
  float64x2_t v303;
  float64x2_t v304;
  float64x2_t v305;
  float64x2_t v306;
  float64_t v307;
  float64x2_t v308;
  float64x2_t v309;
  float64x2_t v310;
  float64_t v311;
  float64x2_t v312;
  float64x2_t v313;
  float64x2_t v314;
  float64x2_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  int v322;
  double v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  double v329;
  uint64_t v330;
  double v331;
  double v332;
  double v333;
  double v334;
  int v335;
  uint64_t v336;
  uint64_t v337;
  int v338;
  int v339;
  int v340;
  int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  float64x2_t v346;
  float64x2_t v347;
  float64x2_t v348;
  float64x2_t v349;
  _QWORD *v350;
  uint64_t v351;
  double v352;
  double v353;
  double v354;
  int64x2_t v355;
  int64x2_t v356;
  int64x2_t v357;
  int64x2_t v358;
  uint64_t v359;
  uint64_t v360;
  double v361;
  _QWORD *v362;
  float64x2_t v363[70];
  float64x2_t __dst[70];
  _BYTE v365[505];
  float64x2_t v366;
  float64x2_t v367;
  float64x2_t v368;
  float64x2_t v369;
  float64x2_t v370;
  float64x2_t v371;
  float64x2_t v372;
  float64x2_t v373;
  float64x2_t v374;
  float64x2_t v375;
  _BYTE v376[1115];
  _BYTE v377[505];
  float64x2_t v378;
  float64x2_t v379;
  float64x2_t v380;
  float64x2_t v381;
  float64x2_t v382;
  float64x2_t v383;
  float64x2_t v384;
  float64x2_t v385;
  float64x2_t v386;
  float64x2_t v387;
  _BYTE v388[1115];

  v1 = (unsigned __int8 *)MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = v1;
  v5 = *v1;
  v6 = v2 + 272;
  v7 = v1 + 2904;
  v362 = (_QWORD *)*((_QWORD *)v1 + 1);
  v359 = *((_QWORD *)v1 + 2);
  v358 = *(int64x2_t *)(v1 + 24);
  v361 = *((double *)v1 + 5);
  v354 = *((double *)v1 + 6);
  v357 = *(int64x2_t *)(v1 + 56);
  v360 = *((_QWORD *)v1 + 9);
  v350 = (_QWORD *)*((_QWORD *)v1 + 10);
  v345 = v1[88];
  v343 = v1[89];
  v352 = *((double *)v1 + 12);
  v341 = v1[104];
  v339 = v1[105];
  v351 = *((_QWORD *)v1 + 14);
  v337 = *((_QWORD *)v1 + 15);
  v353 = *((double *)v1 + 20);
  v325 = *((_QWORD *)v1 + 21);
  v324 = *((_QWORD *)v1 + 22);
  v308 = *(float64x2_t *)(v1 + 184);
  v312 = *(float64x2_t *)(v1 + 216);
  v310 = *(float64x2_t *)(v1 + 200);
  v309 = *(float64x2_t *)(v1 + 232);
  v297 = v1[248];
  v295 = v1[249];
  v335 = v1[250];
  v326 = *((_QWORD *)v1 + 32);
  v328 = *((_QWORD *)v1 + 33);
  v315 = *((float64x2_t *)v1 + 18);
  v314 = *((float64x2_t *)v1 + 17);
  v313 = *((float64x2_t *)v1 + 19);
  v311 = *((double *)v1 + 40);
  v327 = *((_QWORD *)v1 + 41);
  v307 = *((double *)v1 + 42);
  v293 = v1[344];
  v329 = *((double *)v1 + 44);
  v330 = *((_QWORD *)v1 + 45);
  v331 = *((double *)v1 + 46);
  v332 = *((double *)v1 + 47);
  v333 = *((double *)v1 + 48);
  v334 = *((double *)v1 + 49);
  v291 = *((_QWORD *)v1 + 50);
  v289 = *((_QWORD *)v1 + 51);
  memcpy(v365, v1 + 416, sizeof(v365));
  v287 = *((float64x2_t *)v4 + 58);
  v286 = v4[944];
  v285 = *((double *)v4 + 119);
  v284 = v4[960];
  v283 = *((double *)v4 + 121);
  v282 = v4[976];
  v281 = *((double *)v4 + 123);
  v280 = v4[992];
  v8 = *(float64x2_t *)(v4 + 1112);
  v372 = *(float64x2_t *)(v4 + 1096);
  v373 = v8;
  v9 = *(float64x2_t *)(v4 + 1144);
  v374 = *(float64x2_t *)(v4 + 1128);
  v375 = v9;
  v10 = *(float64x2_t *)(v4 + 1048);
  v368 = *(float64x2_t *)(v4 + 1032);
  v369 = v10;
  v11 = *(float64x2_t *)(v4 + 1080);
  v370 = *(float64x2_t *)(v4 + 1064);
  v371 = v11;
  v12 = *(float64x2_t *)(v4 + 1016);
  v366 = *(float64x2_t *)(v4 + 1000);
  v367 = v12;
  v271 = *((_QWORD *)v4 + 145);
  v270 = *((_QWORD *)v4 + 146);
  v267 = v4[1176];
  v265 = *((_QWORD *)v4 + 148);
  v263 = *((_QWORD *)v4 + 149);
  v261 = *((_QWORD *)v4 + 150);
  v259 = *((double *)v4 + 151);
  v257 = *((double *)v4 + 152);
  v255 = (_QWORD *)*((_QWORD *)v4 + 153);
  v253 = (_QWORD *)*((_QWORD *)v4 + 154);
  v251 = (_QWORD *)*((_QWORD *)v4 + 155);
  v249 = (_QWORD *)*((_QWORD *)v4 + 156);
  v247 = (_QWORD *)*((_QWORD *)v4 + 157);
  v245 = (_QWORD *)*((_QWORD *)v4 + 158);
  v13 = (int64x2_t *)(v4 + 1272);
  v238 = *((double *)v4 + 163);
  v239 = *((_QWORD *)v4 + 164);
  v235 = *((_QWORD *)v4 + 165);
  v233 = *((_QWORD *)v4 + 166);
  v231 = *((_QWORD *)v4 + 167);
  v229 = *((_QWORD *)v4 + 168);
  v227 = *((_QWORD *)v4 + 169);
  v225 = *((_QWORD *)v4 + 170);
  v223 = *((_QWORD *)v4 + 171);
  v220 = *((_QWORD *)v4 + 172);
  v221 = *((_QWORD *)v4 + 173);
  v217 = *((_QWORD *)v4 + 174);
  v196 = *((float64x2_t *)v4 + 91);
  v195 = *((double *)v4 + 184);
  v200 = *((float64x2_t *)v4 + 93);
  v128 = *((double *)v4 + 195);
  v129 = *((double *)v4 + 196);
  v215 = v4[1400];
  v210 = v4[1401];
  v213 = *((_QWORD *)v4 + 176);
  v211 = *((_QWORD *)v4 + 177);
  v206 = *((_QWORD *)v4 + 178);
  v207 = *((_QWORD *)v4 + 179);
  v203 = *((_QWORD *)v4 + 180);
  v192 = *((double *)v4 + 181);
  v193 = *((double *)v4 + 185);
  v194 = *((double *)v4 + 188);
  v197 = *(float64x2_t *)(v4 + 1512);
  v198 = *(float64x2_t *)(v4 + 1528);
  v199 = *((double *)v4 + 193);
  v201 = v4[1552];
  memcpy(v376, v4 + 1576, sizeof(v376));
  v130 = v4[2691];
  v132 = *((double *)v4 + 337);
  v131 = v4[2704];
  v134 = *((_QWORD *)v4 + 339);
  v133 = v4[2720];
  v136 = *((_QWORD *)v4 + 341);
  v135 = v4[2736];
  v138 = *((double *)v4 + 343);
  v137 = v4[2752];
  v140 = *((double *)v4 + 345);
  v139 = v4[2768];
  v142 = *((_QWORD *)v4 + 347);
  v141 = v4[2784];
  v143 = *((double *)v4 + 349);
  v144 = *((_QWORD *)v4 + 350);
  v145 = *((double *)v4 + 351);
  v146 = v4[2816];
  v147 = v4[2817];
  v148 = *((_QWORD *)v4 + 353);
  v150 = *((_QWORD *)v4 + 354);
  v149 = v4[2840];
  v151 = *((_QWORD *)v4 + 356);
  v153 = *((_QWORD *)v4 + 357);
  v156 = *((_QWORD *)v4 + 358);
  v152 = *((double *)v4 + 359);
  v158 = *((double *)v4 + 360);
  v155 = *((_QWORD *)v4 + 361);
  v154 = v4[2896];
  v159 = *((float64x2_t *)v7 + 1);
  v160 = *(float64x2_t *)v7;
  v157 = v7[32];
  v162 = *((_QWORD *)v4 + 368);
  v166 = v7[80];
  v169 = v7[96];
  v171 = *((double *)v4 + 377);
  v172 = v7[120];
  v178 = v7[176];
  v349 = *((float64x2_t *)v4 + 9);
  v348 = *((float64x2_t *)v4 + 8);
  v161 = *((_QWORD *)v4 + 369);
  v163 = *((_QWORD *)v4 + 370);
  v164 = *((_QWORD *)v4 + 371);
  v165 = *((_QWORD *)v4 + 372);
  v167 = *((_QWORD *)v4 + 374);
  v168 = *((_QWORD *)v4 + 376);
  v170 = *((_QWORD *)v4 + 379);
  v173 = (_QWORD *)*((_QWORD *)v4 + 380);
  v174 = *((_QWORD *)v4 + 381);
  v175 = *((_QWORD *)v4 + 382);
  v176 = *((_QWORD *)v4 + 383);
  v177 = *((_QWORD *)v4 + 384);
  v179 = *((_QWORD *)v4 + 386);
  v180 = *((_QWORD *)v4 + 387);
  v181 = *((_QWORD *)v4 + 388);
  v182 = *((_QWORD *)v4 + 389);
  v356 = *(int64x2_t *)(v3 + 24);
  v15 = *((double *)v3 + 5);
  v14 = *((double *)v3 + 6);
  v355 = *(int64x2_t *)(v3 + 56);
  v16 = *((double *)v3 + 12);
  v347 = *((float64x2_t *)v3 + 9);
  v346 = *((float64x2_t *)v3 + 8);
  v17 = *((double *)v3 + 20);
  v299 = *(float64x2_t *)(v3 + 184);
  v303 = *(float64x2_t *)(v3 + 216);
  v301 = *(float64x2_t *)(v3 + 200);
  v300 = *(float64x2_t *)(v3 + 232);
  v306 = *((float64x2_t *)v3 + 18);
  v305 = *((float64x2_t *)v3 + 17);
  v304 = *((float64x2_t *)v3 + 19);
  v302 = *((double *)v3 + 40);
  v298 = *((double *)v3 + 42);
  v292 = v6[72];
  v18 = *((double *)v3 + 44);
  v20 = *((double *)v3 + 46);
  v19 = *((double *)v3 + 47);
  v21 = *((double *)v3 + 48);
  v323 = *((double *)v3 + 49);
  LODWORD(v6) = *v3;
  v23 = (_QWORD *)*((_QWORD *)v3 + 1);
  v22 = *((_QWORD *)v3 + 2);
  v25 = *((_QWORD *)v3 + 9);
  v24 = (_QWORD *)*((_QWORD *)v3 + 10);
  v344 = v3[88];
  v342 = v3[89];
  v340 = v3[104];
  v338 = v3[105];
  v26 = *((_QWORD *)v3 + 14);
  v336 = *((_QWORD *)v3 + 15);
  v316 = *((_QWORD *)v3 + 21);
  v317 = *((_QWORD *)v3 + 22);
  v296 = v3[248];
  v294 = v3[249];
  v322 = v3[250];
  v318 = *((_QWORD *)v3 + 32);
  v319 = *((_QWORD *)v3 + 33);
  v320 = *((_QWORD *)v3 + 41);
  v321 = *((_QWORD *)v3 + 45);
  v290 = *((_QWORD *)v3 + 50);
  v288 = *((_QWORD *)v3 + 51);
  memcpy(v377, v3 + 416, sizeof(v377));
  v274 = *((float64x2_t *)v3 + 58);
  v276 = v3[944];
  v279 = *((double *)v3 + 119);
  v243 = v13[1];
  v242 = *v13;
  v272 = v3[960];
  v273 = *((double *)v3 + 121);
  v275 = v3[976];
  v278 = *((double *)v3 + 123);
  v277 = v3[992];
  v27 = *(float64x2_t *)(v3 + 1112);
  v384 = *(float64x2_t *)(v3 + 1096);
  v385 = v27;
  v28 = *(float64x2_t *)(v3 + 1144);
  v386 = *(float64x2_t *)(v3 + 1128);
  v387 = v28;
  v29 = *(float64x2_t *)(v3 + 1048);
  v380 = *(float64x2_t *)(v3 + 1032);
  v381 = v29;
  v30 = *(float64x2_t *)(v3 + 1080);
  v382 = *(float64x2_t *)(v3 + 1064);
  v383 = v30;
  v31 = *(float64x2_t *)(v3 + 1016);
  v378 = *(float64x2_t *)(v3 + 1000);
  v379 = v31;
  v269 = *((_QWORD *)v3 + 145);
  v268 = *((_QWORD *)v3 + 146);
  v266 = v3[1176];
  v264 = *((_QWORD *)v3 + 148);
  v262 = *((_QWORD *)v3 + 149);
  v260 = *((_QWORD *)v3 + 150);
  v258 = *((double *)v3 + 151);
  v256 = *((double *)v3 + 152);
  v254 = (_QWORD *)*((_QWORD *)v3 + 153);
  v252 = (_QWORD *)*((_QWORD *)v3 + 154);
  v250 = (_QWORD *)*((_QWORD *)v3 + 155);
  v248 = (_QWORD *)*((_QWORD *)v3 + 156);
  v246 = (_QWORD *)*((_QWORD *)v3 + 157);
  v244 = (_QWORD *)*((_QWORD *)v3 + 158);
  v241 = *(int64x2_t *)(v3 + 1288);
  v240 = *(int64x2_t *)(v3 + 1272);
  v236 = *((double *)v3 + 163);
  v237 = *((_QWORD *)v3 + 164);
  v234 = *((_QWORD *)v3 + 165);
  v232 = *((_QWORD *)v3 + 166);
  v230 = *((_QWORD *)v3 + 167);
  v228 = *((_QWORD *)v3 + 168);
  v226 = *((_QWORD *)v3 + 169);
  v224 = *((_QWORD *)v3 + 170);
  v222 = *((_QWORD *)v3 + 171);
  v218 = *((_QWORD *)v3 + 172);
  v219 = *((_QWORD *)v3 + 173);
  v216 = *((_QWORD *)v3 + 174);
  v214 = v3[1400];
  v185 = *((float64x2_t *)v3 + 91);
  v184 = *((double *)v3 + 184);
  v191 = *((float64x2_t *)v3 + 93);
  v126 = *((double *)v3 + 195);
  v127 = *((double *)v3 + 196);
  v208 = v3[1401];
  v212 = *((_QWORD *)v3 + 176);
  v209 = *((_QWORD *)v3 + 177);
  v204 = *((_QWORD *)v3 + 178);
  v205 = *((_QWORD *)v3 + 179);
  v202 = *((_QWORD *)v3 + 180);
  v183 = *((double *)v3 + 181);
  v186 = *((double *)v3 + 185);
  v187 = *((double *)v3 + 188);
  v188 = *(float64x2_t *)(v3 + 1512);
  v189 = *(float64x2_t *)(v3 + 1528);
  v190 = *((double *)v3 + 193);
  v32 = v3[1552];
  memcpy(v388, v3 + 1576, sizeof(v388));
  if (v5 != (_DWORD)v6)
    return 0;
  v78 = v3[2691];
  v79 = *((double *)v3 + 337);
  v80 = v3[2704];
  v81 = *((_QWORD *)v3 + 339);
  v82 = v3[2720];
  v83 = *((_QWORD *)v3 + 341);
  v84 = v3[2736];
  v85 = *((double *)v3 + 343);
  v86 = v3[2752];
  v87 = *((double *)v3 + 345);
  v90 = *((_QWORD *)v3 + 347);
  v88 = v3[2768];
  v89 = v3[2784];
  v91 = *((double *)v3 + 349);
  v92 = *((_QWORD *)v3 + 350);
  v93 = *((double *)v3 + 351);
  v94 = v3[2816];
  v95 = v3[2817];
  v96 = *((_QWORD *)v3 + 353);
  v97 = v3[2840];
  v98 = *((_QWORD *)v3 + 354);
  v99 = *((_QWORD *)v3 + 356);
  v33 = *((_QWORD *)v3 + 357);
  v77 = *((_QWORD *)v3 + 358);
  v100 = *(float64x2_t *)(v3 + 2872);
  v103 = *((_QWORD *)v3 + 361);
  v104 = v3[2896];
  v105 = *(float64x2_t *)(v3 + 2920);
  v106 = *(float64x2_t *)(v3 + 2904);
  v107 = v3[2936];
  v108 = *((_QWORD *)v3 + 368);
  v109 = *((_QWORD *)v3 + 369);
  v114 = v3[2984];
  v116 = v3[3000];
  v117 = *((double *)v3 + 377);
  v119 = v3[3024];
  v125 = v3[3080];
  v110 = *((_QWORD *)v3 + 370);
  v111 = *((_QWORD *)v3 + 371);
  v112 = *((_QWORD *)v3 + 372);
  v113 = *((_QWORD *)v3 + 374);
  v115 = *((_QWORD *)v3 + 376);
  v118 = *((_QWORD *)v3 + 379);
  v120 = (_QWORD *)*((_QWORD *)v3 + 380);
  v121 = *((_QWORD *)v3 + 381);
  v122 = *((_QWORD *)v3 + 382);
  v123 = *((_QWORD *)v3 + 383);
  v124 = *((_QWORD *)v3 + 384);
  v34 = *((_QWORD *)v3 + 387);
  v101 = *((_QWORD *)v3 + 386);
  v102 = *((_QWORD *)v3 + 388);
  v35 = *((_QWORD *)v3 + 389);
  if (!sub_1ABD1C94C(v362, v23))
    return 0;
  v36 = sub_1ABD1C9B8(v359, v22);
  result = 0;
  if (v36
    && (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(v358, v356), (int32x4_t)vceqq_s64(v357, v355))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0&& v360 == v25&& v361 == v15&& v354 == v14)
  {
    v38 = v35;
    v39 = sub_1ABD1C278(v350, v24);
    result = 0;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v348, v346), (int32x4_t)vceqq_f64(v349, v347))), 0xFuLL))) & 1) != 0&& v352 == v16&& v353 == v17&& ((v345 ^ v344) & 1) == 0&& ((v343 ^ v342) & 1) == 0&& ((v341 ^ v340) & 1) == 0&& ((v339 ^ v338) & 1) == 0&& v351 == v26&& (v39 & 1) != 0&& v337 == v336)
    {
      if (v325 == v316 && v324 == v317)
      {
        result = 0;
        if (v335 != v322)
          return result;
        v40.f64[0] = v311;
        v40.f64[1] = v307;
        v41.f64[0] = v302;
        v41.f64[1] = v298;
        if ((vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8((int8x16_t)v308, (int8x16_t)v308, 8uLL), (float64x2_t)vextq_s8((int8x16_t)v299, (int8x16_t)v299, 8uLL)), (int32x4_t)vceqq_f64(v310, v301)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v312, v303), (int32x4_t)vceqq_f64(v309, v300))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32(
                                                                    (int32x4_t)vceqq_f64(v314, v305),
                                                                    (int32x4_t)vceqq_f64(v315, v306)),
                                                       (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v313, v304), (int32x4_t)vceqq_f64(v40, v41)))), 7uLL))) & (v329 == v18) & (v331 == v20&& v332 == v19&& v333 == v21&& v334 == v323&& v326 == v318&& v328 == v319)) == 0|| v327 != v320|| v330 != v321|| ((v297 ^ v296) & 1) != 0|| ((v295 ^ v294) & 1) != 0)
        {
          return result;
        }
      }
      else
      {
        v42 = sub_1ABF3223C();
        result = 0;
        if (v335 != v322)
          return result;
        v43.f64[0] = v311;
        v43.f64[1] = v307;
        v44.f64[0] = v302;
        v44.f64[1] = v298;
        if ((vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v308, v299), (int32x4_t)vceqq_f64(v310, v301)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v312, v303), (int32x4_t)vceqq_f64(v309, v300))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v314, v305), (int32x4_t)vceqq_f64(v315, v306)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v313, v304), (int32x4_t)vceqq_f64(v43, v44)))), 7uLL))) & (v329 == v18) & (v331 == v20&& v332 == v19&& v333 == v21
                                                                && v334 == v323
                                                                && v326 == v318
                                                                && v328 == v319)) == 0
          || v327 != v320
          || v330 != v321
          || ((v297 ^ v296) & 1) != 0
          || ((v295 ^ v294) & 1) != 0
          || (v42 & 1) == 0)
        {
          return result;
        }
      }
      if (((v293 ^ v292) & 1) != 0)
        return result;
      if ((sub_1ABD1CA24(v291, v290) & 1) == 0)
        return 0;
      if ((sub_1ABD1CF6C(v289, v288) & 1) == 0)
        return 0;
      memcpy(__dst, v365, 0x1F9uLL);
      memcpy(v363, v377, 0x1F9uLL);
      if ((sub_1ABD1D440((uint64_t)__dst, (uint64_t)v363) & 1) == 0)
        return 0;
      __dst[0] = v287;
      LOBYTE(__dst[1].f64[0]) = v286;
      __dst[1].f64[1] = v285;
      LOBYTE(__dst[2].f64[0]) = v284;
      __dst[2].f64[1] = v283;
      LOBYTE(__dst[3].f64[0]) = v282;
      __dst[3].f64[1] = v281;
      LOBYTE(__dst[4].f64[0]) = v280;
      v363[0] = v274;
      LOBYTE(v363[1].f64[0]) = v276;
      v363[1].f64[1] = v279;
      LOBYTE(v363[2].f64[0]) = v272;
      v363[2].f64[1] = v273;
      LOBYTE(v363[3].f64[0]) = v275;
      v363[3].f64[1] = v278;
      LOBYTE(v363[4].f64[0]) = v277;
      if (!sub_1ABD1D104((uint64_t)__dst, (uint64_t)v363))
        return 0;
      __dst[6] = v372;
      __dst[7] = v373;
      __dst[8] = v374;
      __dst[9] = v375;
      __dst[2] = v368;
      __dst[3] = v369;
      __dst[4] = v370;
      __dst[5] = v371;
      __dst[0] = v366;
      __dst[1] = v367;
      v363[6] = v384;
      v363[7] = v385;
      v363[8] = v386;
      v363[9] = v387;
      v363[2] = v380;
      v363[3] = v381;
      v363[4] = v382;
      v363[5] = v383;
      v363[0] = v378;
      v363[1] = v379;
      if (!sub_1ABD1D384(__dst, v363))
        return 0;
      if (v271 == v269 && v270 == v268)
      {
        result = 0;
        if (v267 != v266)
          return result;
      }
      else
      {
        v45 = sub_1ABF3223C();
        result = 0;
        if ((v45 & 1) == 0 || v267 != v266)
          return result;
      }
      if (v265 != v264)
        return result;
      v46 = sub_1ABD1D014(v263, v262);
      result = 0;
      if ((v46 & 1) == 0 || v261 != v260 || v259 != v258 || v257 != v256)
        return result;
      if ((sub_1ABD1C278(v255, v254) & 1) == 0
        || (sub_1ABD1C278(v253, v252) & 1) == 0
        || (sub_1ABD1C278(v251, v250) & 1) == 0
        || (sub_1ABD1C278(v249, v248) & 1) == 0
        || (sub_1ABD1C278(v247, v246) & 1) == 0)
      {
        return 0;
      }
      v47 = sub_1ABD1C278(v245, v244);
      result = 0;
      if ((v47 & 1) != 0
        && (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(v242, v240), (int32x4_t)vceqq_s64(v243, v241))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0&& v238 == v236)
      {
        if (v239 == v237 && v235 == v234 || (v48 = sub_1ABF3223C(), result = 0, (v48 & 1) != 0))
        {
          if (v233 == v232 && v231 == v230)
          {
            result = 0;
          }
          else
          {
            v49 = sub_1ABF3223C();
            result = 0;
            if ((v49 & 1) == 0)
              return result;
          }
          if (v229 == v228 && v227 == v226)
          {
            v50 = sub_1ABD1C33C(v225, v224);
            result = 0;
            if ((v50 & 1) != 0 && v223 == v222 && v220 == v218)
            {
              if (v221 == v219 && v217 == v216)
              {
                result = 0;
                if (v215 != v214)
                  return result;
              }
              else
              {
                v51 = sub_1ABF3223C();
                result = 0;
                if ((v51 & 1) == 0 || ((v215 ^ v214) & 1) != 0)
                  return result;
              }
              if (((v210 ^ v208) & 1) == 0)
              {
                if (v213 == v212 && v211 == v209 || (v52 = sub_1ABF3223C(), result = 0, (v52 & 1) != 0))
                {
                  if (v206 == v204 && v207 == v205)
                  {
                    if (v203 != v202)
                      return 0;
                  }
                  else
                  {
                    v53 = sub_1ABF3223C();
                    result = 0;
                    if ((v53 & 1) == 0 || v203 != v202)
                      return result;
                  }
                  __dst[0].f64[0] = v192;
                  *(float64x2_t *)((char *)__dst + 8) = v196;
                  __dst[1].f64[1] = v195;
                  v363[0].f64[0] = v183;
                  *(float64x2_t *)((char *)v363 + 8) = v185;
                  v363[1].f64[1] = v184;
                  if ((sub_1ABDBCDB0((uint64_t)__dst, (uint64_t)v363) & 1) == 0)
                    return 0;
                  __dst[0].f64[0] = v193;
                  *(float64x2_t *)((char *)__dst + 8) = v200;
                  __dst[1].f64[1] = v194;
                  __dst[2] = v197;
                  __dst[3] = v198;
                  __dst[4].f64[0] = v199;
                  v363[0].f64[0] = v186;
                  *(float64x2_t *)((char *)v363 + 8) = v191;
                  v363[1].f64[1] = v187;
                  v363[2] = v188;
                  v363[3] = v189;
                  v363[4].f64[0] = v190;
                  v54 = sub_1ABD1E084(__dst, v363);
                  result = 0;
                  if ((v54 & 1) == 0)
                    return result;
                  if (v201 != v32)
                    return result;
                  if (v128 != v126)
                    return result;
                  if (v129 != v127)
                    return result;
                  memcpy(__dst, v376, 0x45BuLL);
                  memcpy(v363, v388, 0x45BuLL);
                  v55 = sub_1ABD1D23C((uint64_t)__dst);
                  result = 0;
                  if ((v55 & 1) == 0 || ((v130 ^ v78) & 1) != 0)
                    return result;
                  if ((v131 & 1) != 0)
                  {
                    if (!v80)
                      return 0;
                  }
                  else
                  {
                    v56 = v80;
                    if (v132 != v79)
                      v56 = 1;
                    if ((v56 & 1) != 0)
                      return 0;
                  }
                  if ((v133 & 1) != 0)
                  {
                    if (!v82)
                      return 0;
                  }
                  else
                  {
                    v57 = v82;
                    if (v134 != v81)
                      v57 = 1;
                    if ((v57 & 1) != 0)
                      return 0;
                  }
                  if ((v135 & 1) != 0)
                  {
                    if (!v84)
                      return 0;
                  }
                  else
                  {
                    v58 = v84;
                    if (v136 != v83)
                      v58 = 1;
                    if ((v58 & 1) != 0)
                      return 0;
                  }
                  if ((v137 & 1) != 0)
                  {
                    if (!v86)
                      return 0;
                  }
                  else
                  {
                    v59 = v86;
                    if (v138 != v85)
                      v59 = 1;
                    if ((v59 & 1) != 0)
                      return 0;
                  }
                  if ((v139 & 1) != 0)
                  {
                    if (!v88)
                      return 0;
                  }
                  else
                  {
                    v60 = v88;
                    if (v140 != v87)
                      v60 = 1;
                    if ((v60 & 1) != 0)
                      return 0;
                  }
                  if ((v141 & 1) != 0)
                  {
                    result = 0;
                    v61 = v89;
                    if (v143 != v91)
                      v61 = 0;
                    if (v61 != 1)
                      return result;
                  }
                  else
                  {
                    if ((v89 & 1) != 0)
                      return 0;
                    result = 0;
                    if (v142 != v90 || v143 != v91)
                      return result;
                  }
                  if (v144 != v92 || v145 != v93 || v146 != v94 || v147 != v95 || v148 != v96)
                    return result;
                  if ((v149 & 1) != 0)
                  {
                    v62 = v97;
                    if (v151 != v99)
                      v62 = 0;
                    if ((v62 & 1) == 0)
                      return 0;
                  }
                  else
                  {
                    if ((v97 & 1) != 0)
                      return 0;
                    result = 0;
                    if (v150 != v98 || v151 != v99)
                      return result;
                  }
                  if (v156 == 1)
                  {
                    if (v77 == 1)
                    {
LABEL_154:
                      if ((v154 & 1) != 0)
                      {
                        if (!v104)
                          return 0;
                      }
                      else
                      {
                        v64 = v104;
                        if (v155 != v103)
                          v64 = 1;
                        if ((v64 & 1) != 0)
                          return 0;
                      }
                      *(float64x2_t *)((char *)&__dst[2] + 8) = v106;
                      *(float64x2_t *)((char *)&__dst[3] + 8) = v105;
                      LOBYTE(__dst[4].f64[1]) = v107;
                      if ((v157 & 1) != 0)
                      {
                        if ((v107 & 1) == 0)
                          return 0;
                      }
                      else
                      {
                        v363[0] = v160;
                        v363[1] = v159;
                        LOBYTE(v363[2].f64[0]) = 0;
                        if ((v107 & 1) != 0 || !sub_1ABD1D348((uint64_t)v363, (uint64_t)&__dst[2].f64[1]))
                          return 0;
                      }
                      if (v161)
                      {
                        if (!v109)
                          return 0;
                        if (v162 != v108 || v161 != v109)
                        {
                          v65 = sub_1ABF3223C();
                          result = 0;
                          if ((v65 & 1) == 0)
                            return result;
                        }
                      }
                      else if (v109)
                      {
                        return 0;
                      }
                      if (v164)
                      {
                        if (!v111)
                          return 0;
                        if (v163 != v110 || v164 != v111)
                        {
                          v66 = sub_1ABF3223C();
                          result = 0;
                          if ((v66 & 1) == 0)
                            return result;
                        }
                      }
                      else if (v111)
                      {
                        return 0;
                      }
                      if ((v166 & 1) != 0)
                      {
                        if (!v114)
                          return 0;
                      }
                      else
                      {
                        v67 = v114;
                        if (v165 != v112)
                          v67 = 1;
                        if ((v67 & 1) != 0)
                          return 0;
                      }
                      if ((v169 & 1) != 0)
                      {
                        result = 0;
                        v68 = v116;
                        if (v168 != v115)
                          v68 = 0;
                        if (v68 != 1)
                          return result;
                      }
                      else
                      {
                        if ((v116 & 1) != 0)
                          return 0;
                        result = 0;
                        if (v167 != v113 || v168 != v115)
                          return result;
                      }
                      if (v171 != v117)
                        return result;
                      if (v172 != v119)
                        return result;
                      if (v170 != v118)
                        return result;
                      v69 = sub_1ABD1C278(v173, v120);
                      result = 0;
                      if ((v69 & 1) == 0)
                        return result;
                      if (v174 != v121)
                        return result;
                      if (v175 != v122)
                        return result;
                      v70 = sub_1ABD1C5DC(v176, v123);
                      result = 0;
                      if ((v70 & 1) == 0 || v177 != v124 || ((v178 ^ v125) & 1) != 0)
                        return result;
                      if (v179)
                      {
                        if (!v101)
                          return 0;
                        sub_1ABF2FF5C();
                        v71 = sub_1ABF2FF5C();
                        v72 = sub_1ABE5D2BC(v71, v101);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if ((v72 & 1) == 0)
                          return 0;
                      }
                      else if (v101)
                      {
                        return 0;
                      }
                      if (v180)
                      {
                        if (!v34)
                          return 0;
                        sub_1ABF2FF5C();
                        v73 = sub_1ABF2FF5C();
                        v74 = sub_1ABE5D2BC(v73, v34);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        result = 0;
                        if ((v74 & 1) == 0)
                          return result;
                      }
                      else
                      {
                        result = 0;
                        if (v34)
                          return result;
                      }
                      if (v181 != v102)
                        return result;
                      if (v182)
                      {
                        if (!v38)
                          return 0;
                        sub_1ABF2FF5C();
                        v75 = sub_1ABF2FF5C();
                        v76 = sub_1ABE5D2BC(v75, v38);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        return (v76 & 1) != 0;
                      }
                      return !v38;
                    }
                  }
                  else
                  {
                    *(_QWORD *)&__dst[0].f64[0] = v153;
                    *(_QWORD *)&__dst[0].f64[1] = v156;
                    __dst[1].f64[0] = v152;
                    __dst[1].f64[1] = v158;
                    if (v77 != 1)
                    {
                      *(_QWORD *)&v363[0].f64[0] = v33;
                      *(_QWORD *)&v363[0].f64[1] = v77;
                      v363[1] = v100;
                      v63 = sub_1ABE179BC(__dst, v363);
                      sub_1ABF2FF5C();
                      sub_1ABF2FF5C();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v63 & 1) == 0)
                        return 0;
                      goto LABEL_154;
                    }
                    sub_1ABF2FF5C();
                    sub_1ABF2FF5C();
                  }
                  sub_1ABD1A670(v33, v77);
                  sub_1ABD1A50C(v153, v156);
                  sub_1ABD1A50C(v33, v77);
                  return 0;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1ABD1C278(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1ABF3223C(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1ABF3223C() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1ABD1C33C(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_1ABF32308();
    sub_1ABF2FF5C();
    sub_1ABF31840();
    v18 = sub_1ABF32338();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1ABF3223C() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1ABF3223C() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1ABD1C5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1ABF30820();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1ABCFE1EC(&qword_1ED34EAC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C60]);
    v27 = sub_1ABF316C0();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1ABCFE1EC(&qword_1ED34EAC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C68]);
      v31 = sub_1ABF31720();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

BOOL sub_1ABD1C94C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

BOOL sub_1ABD1C9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  _BOOL8 result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return 0;
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1ABD1CA24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  BOOL v39;
  _QWORD *v40;
  _QWORD *v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = 0;
    v4 = a1 + 32;
    v5 = a2 + 32;
    v44 = a1 + 32;
    v45 = *(_QWORD *)(a1 + 16);
    v43 = a2 + 32;
    while (1)
    {
      v46 = v3;
      v7 = 80 * v3;
      v8 = v4 + 80 * v3;
      v9 = *(_QWORD *)(v8 + 8);
      v10 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      v11 = *(_QWORD *)(v8 + 32);
      v13 = *(_QWORD *)(v8 + 40);
      v14 = *(_QWORD **)(v8 + 48);
      v48 = *(_QWORD **)(v8 + 72);
      v15 = v5 + v7;
      v16 = *(_QWORD *)(v15 + 8);
      v17 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      v18 = *(_QWORD *)(v15 + 32);
      v20 = *(_QWORD *)(v15 + 40);
      v21 = *(_QWORD **)(v15 + 48);
      v47 = *(_QWORD **)(v15 + 72);
      v49 = *(unsigned __int8 *)(v15 + 64);
      v50 = *(unsigned __int8 *)(v8 + 64);
      v51 = *(_QWORD *)(v15 + 56);
      v52 = *(_QWORD *)(v8 + 56);
      if (v9)
      {
        if (!v16 || (*(_QWORD *)v8 != *(_QWORD *)v15 || v9 != v16) && (sub_1ABF3223C() & 1) == 0)
          return 0;
      }
      else if (v16)
      {
        return 0;
      }
      if (v12)
      {
        if (!v19 || (v10 != v17 || v12 != v19) && (sub_1ABF3223C() & 1) == 0)
          return 0;
      }
      else if (v19)
      {
        return 0;
      }
      if (v13)
      {
        if (!v20 || (v11 != v18 || v13 != v20) && (sub_1ABF3223C() & 1) == 0)
          return 0;
      }
      else if (v20)
      {
        return 0;
      }
      v22 = v14[2];
      if (v22 != v21[2])
        return 0;
      if (v22 && v14 != v21)
      {
        v24 = v14[4] == v21[4] && v14[5] == v21[5];
        if (!v24 && (sub_1ABF3223C() & 1) == 0)
          return 0;
        if (v22 != 1)
        {
          if ((v14[6] != v21[6] || v14[7] != v21[7]) && (sub_1ABF3223C() & 1) == 0)
            return 0;
          v25 = v22 - 2;
          if (v25)
            break;
        }
      }
LABEL_43:
      v26 = *(_QWORD *)(v52 + 16);
      if (v26 != *(_QWORD *)(v51 + 16))
        return 0;
      if (v26 && v52 != v51)
      {
        v27 = (uint64_t *)(v51 + 56);
        v28 = (uint64_t *)(v52 + 56);
        do
        {
          v29 = *(v28 - 1);
          v30 = *v28;
          v31 = *(v27 - 1);
          v32 = *v27;
          v33 = *(v28 - 3) == *(v27 - 3) && *(v28 - 2) == *(v27 - 2);
          if (!v33 && (sub_1ABF3223C() & 1) == 0)
            return 0;
          v34 = v29 == v31 && v30 == v32;
          if (!v34 && (sub_1ABF3223C() & 1) == 0)
            return 0;
          v27 += 4;
          v28 += 4;
        }
        while (--v26);
      }
      if (v50 != v49)
        return 0;
      v35 = v48[2];
      if (v35 != v47[2])
        return 0;
      if (v35 && v48 != v47)
      {
        if ((v48[4] != v47[4] || v48[5] != v47[5]) && (sub_1ABF3223C() & 1) == 0)
          return 0;
        v36 = v35 - 1;
        if (v36)
        {
          v37 = v47 + 7;
          v38 = v48 + 7;
          do
          {
            v39 = *(v38 - 1) == *(v37 - 1) && *v38 == *v37;
            if (!v39 && (sub_1ABF3223C() & 1) == 0)
              return 0;
            v37 += 2;
            v38 += 2;
          }
          while (--v36);
        }
      }
      v3 = v46 + 1;
      result = 1;
      v5 = v43;
      v4 = v44;
      if (v46 + 1 == v45)
        return result;
    }
    v40 = v21 + 9;
    v41 = v14 + 9;
    while (1)
    {
      v42 = *(v41 - 1) == *(v40 - 1) && *v41 == *v40;
      if (!v42 && (sub_1ABF3223C() & 1) == 0)
        break;
      v40 += 2;
      v41 += 2;
      if (!--v25)
        goto LABEL_43;
    }
  }
  return 0;
}

uint64_t sub_1ABD1CDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a1 + 64);
    for (i = (uint64_t *)(a2 + 64); ; i += 12)
    {
      v5 = *(v3 - 2);
      v6 = *(v3 - 1);
      v7 = *v3;
      v25 = v3[1];
      v23 = v3[3];
      v24 = v3[2];
      v19 = v3[5];
      v20 = v3[4];
      v15 = v3[7];
      v16 = v3[6];
      v9 = *(i - 2);
      v8 = *(i - 1);
      v10 = *i;
      v11 = i[1];
      v21 = i[3];
      v22 = i[2];
      v17 = i[5];
      v18 = i[4];
      v13 = i[7];
      v14 = i[6];
      if ((*(v3 - 4) != *(i - 4) || *(v3 - 3) != *(i - 3)) && (sub_1ABF3223C() & 1) == 0)
        break;
      if ((v5 != v9 || v6 != v8) && (sub_1ABF3223C() & 1) == 0
        || (v7 != v10 || v25 != v11) && (sub_1ABF3223C() & 1) == 0
        || (v24 != v22 || v23 != v21) && (sub_1ABF3223C() & 1) == 0
        || (v20 != v18 || v19 != v17) && (sub_1ABF3223C() & 1) == 0
        || (v16 != v14 || v15 != v13) && (sub_1ABF3223C() & 1) == 0)
      {
        break;
      }
      v3 += 12;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1ABD1CF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD v9[34];
  _QWORD __dst[34];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v7 = 1;
    }
    else
    {
      v3 = (char *)(a1 + 32);
      v4 = (char *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        v7 = sub_1ABDB31DC(__dst, v9);
        if ((v7 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 272;
        v3 += 272;
      }
      while (v6);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1ABD1D014(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t result;
  BOOL v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 64);
    for (i = (uint64_t *)(a1 + 64); ; i += 5)
    {
      v5 = *((unsigned __int8 *)i - 16);
      v6 = *(i - 1);
      v7 = *i;
      v8 = *((unsigned __int8 *)v3 - 16);
      v9 = *(v3 - 1);
      v10 = *v3;
      if (*(i - 4) == *(v3 - 4) && *(i - 3) == *(v3 - 3))
      {
        if (v5 != v8)
          return 0;
      }
      else
      {
        v12 = sub_1ABF3223C();
        result = 0;
        if ((v12 & 1) == 0 || ((v5 ^ v8) & 1) != 0)
          return result;
      }
      v14 = v6 == v9 && v7 == v10;
      if (!v14 && (sub_1ABF3223C() & 1) == 0)
        break;
      v3 += 5;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

BOOL sub_1ABD1D104(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_QWORD **)a2;
  v14 = *(_QWORD *)(a2 + 8);
  v15 = *(unsigned __int8 *)(a2 + 16);
  v16 = *(_QWORD *)(a2 + 24);
  v17 = *(unsigned __int8 *)(a2 + 32);
  v18 = *(_QWORD *)(a2 + 40);
  v19 = *(unsigned __int8 *)(a2 + 48);
  v20 = *(_QWORD *)(a2 + 56);
  v21 = *(_BYTE *)(a2 + 64);
  if (v4)
  {
    if (!v13)
      return 0;
    v31 = *(_QWORD *)(a2 + 56);
    v32 = *(_QWORD *)(a2 + 24);
    v29 = *(_QWORD *)(a2 + 8);
    v22 = *(_BYTE *)(a1 + 48);
    v33 = *(unsigned __int8 *)(a2 + 48);
    v34 = *(unsigned __int8 *)(a2 + 32);
    v30 = *(unsigned __int8 *)(a2 + 16);
    v23 = sub_1ABD1C278(v4, v13);
    v15 = v30;
    v20 = v31;
    v16 = v32;
    v19 = v33;
    v17 = v34;
    v10 = v22;
    v14 = v29;
    if ((v23 & 1) == 0)
      return 0;
  }
  else if (v13)
  {
    return 0;
  }
  if ((v6 & 1) != 0)
  {
    if (!v15)
      return 0;
  }
  else
  {
    if (v5 == v14)
      v24 = v15;
    else
      v24 = 1;
    if ((v24 & 1) != 0)
      return 0;
  }
  if ((v8 & 1) != 0)
  {
    if (!v17)
      return 0;
  }
  else
  {
    if (v7 == v16)
      v25 = v17;
    else
      v25 = 1;
    if ((v25 & 1) != 0)
      return 0;
  }
  if ((v10 & 1) != 0)
  {
    if (!v19)
      return 0;
  }
  else
  {
    if (v9 == v18)
      v26 = v19;
    else
      v26 = 1;
    if ((v26 & 1) != 0)
      return 0;
  }
  if ((v12 & 1) == 0)
  {
    if (v11 == v20)
      v28 = v21;
    else
      v28 = 1;
    return (v28 & 1) == 0;
  }
  return (v21 & 1) != 0;
}

uint64_t sub_1ABD1D23C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BYTE v6[1120];
  _BYTE __src[1120];
  _BYTE v8[1120];
  _BYTE v9[1120];
  _BYTE v10[1120];
  _BYTE v11[1120];
  _BYTE v12[1120];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  sub_1ABECE570(v1, (uint64_t)v10);
  sub_1ABECE570(v3, (uint64_t)v11);
  sub_1ABECE570((uint64_t)v10, (uint64_t)v12);
  if (sub_1ABECED88((uint64_t)v12) == 1)
  {
    sub_1ABECE570((uint64_t)v11, (uint64_t)v9);
    v4 = sub_1ABECED88((uint64_t)v9) == 1;
  }
  else
  {
    sub_1ABECE570((uint64_t)v10, (uint64_t)v8);
    sub_1ABECE570((uint64_t)v11, (uint64_t)v9);
    if (sub_1ABECED88((uint64_t)v9) == 1)
    {
      v4 = 0;
    }
    else
    {
      sub_1ABECE570((uint64_t)v11, (uint64_t)__src);
      memcpy(v6, __src, 0x45AuLL);
      v4 = _s10StocksCore13ScoringConfigV2eeoiySbAC_ACtFZ_0((uint64_t)v8, (uint64_t)v6);
    }
  }
  return v4 & 1;
}

BOOL sub_1ABD1D348(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
      && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
      && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
}

BOOL sub_1ABD1D384(float64x2_t *a1, float64x2_t *a2)
{
  _BOOL8 result;

  result = 0;
  if ((vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[2], a2[2]), (int32x4_t)vceqq_f64(a1[3], a2[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[4], a2[4]), (int32x4_t)vceqq_f64(a1[5], a2[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(a1[6], a2[6]), (int32x4_t)vceqq_f64(a1[7], a2[7])))), 7uLL))) & 1) != 0&& a1[8].f64[0] == a2[8].f64[0]&& a1[8].f64[1] == a2[8].f64[1]
    && a1[9].f64[0] == a2[9].f64[0])
  {
    return a1[9].f64[1] == a2[9].f64[1];
  }
  return result;
}

uint64_t sub_1ABD1D440(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v4;
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char v44;
  uint64_t result;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  BOOL v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  _QWORD *v139;
  BOOL v140;
  _QWORD *v141;
  uint64_t v142;
  _OWORD v143[10];
  uint64_t v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  uint64_t v155;
  uint64_t v156[10];
  _OWORD v157[10];
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  _BYTE v170[168];
  uint64_t v171;
  _BYTE v172[168];
  _QWORD v173[21];
  _QWORD v174[22];

  v4 = (unsigned __int8 *)(a2 + 384);
  v5 = *(_QWORD **)a1;
  v141 = *(_QWORD **)(a1 + 8);
  v6 = (_BYTE *)(a1 + 384);
  v138 = *(unsigned __int8 *)(a1 + 16);
  v136 = *(unsigned __int8 *)(a1 + 17);
  v134 = *(unsigned __int8 *)(a1 + 18);
  v132 = *(unsigned __int8 *)(a1 + 19);
  v130 = *(_QWORD *)(a1 + 24);
  v128 = *(unsigned __int8 *)(a1 + 32);
  v125 = *(_QWORD *)(a1 + 40);
  v126 = *(_QWORD *)(a1 + 48);
  v122 = *(_QWORD *)(a1 + 56);
  v120 = *(_QWORD *)(a1 + 64);
  v118 = *(_QWORD *)(a1 + 72);
  v116 = *(_QWORD *)(a1 + 80);
  v114 = *(_QWORD *)(a1 + 88);
  v112 = *(_QWORD *)(a1 + 96);
  v110 = *(_QWORD *)(a1 + 104);
  v108 = *(_QWORD *)(a1 + 112);
  v106 = *(_QWORD *)(a1 + 120);
  v96 = *(_QWORD *)(a1 + 128);
  v104 = *(_QWORD *)(a1 + 136);
  v102 = *(_QWORD *)(a1 + 144);
  v100 = *(_QWORD *)(a1 + 152);
  v7 = *(_QWORD *)(a1 + 168);
  v98 = *(_QWORD *)(a1 + 160);
  v93 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 192);
  v91 = *(_QWORD *)(a1 + 184);
  v9 = *(_QWORD *)(a1 + 200);
  sub_1ABDCBC58(a1 + 208, (uint64_t)v173);
  v87 = v6[16];
  v88 = *(_BYTE *)(a1 + 384);
  v85 = *(_QWORD *)(a1 + 416);
  v86 = *(_QWORD *)(a1 + 376);
  v83 = *(_QWORD *)(a1 + 424);
  v84 = *(_QWORD *)(a1 + 392);
  v81 = *(_QWORD *)(a1 + 432);
  v82 = *(_QWORD *)(a1 + 408);
  v80 = *(_QWORD *)(a1 + 448);
  v78 = *(_QWORD *)(a1 + 440);
  v79 = *(_QWORD *)(a1 + 456);
  v76 = *(_QWORD *)(a1 + 464);
  v77 = *(_QWORD *)(a1 + 472);
  v71 = v6[96];
  v72 = v6[97];
  v73 = *(_QWORD *)(a1 + 488);
  v74 = *(_QWORD *)(a1 + 496);
  v75 = v6[120];
  v10 = *(_QWORD **)a2;
  v139 = *(_QWORD **)(a2 + 8);
  v137 = *(unsigned __int8 *)(a2 + 16);
  v135 = *(unsigned __int8 *)(a2 + 17);
  v133 = *(unsigned __int8 *)(a2 + 18);
  v131 = *(unsigned __int8 *)(a2 + 19);
  v129 = *(_QWORD *)(a2 + 24);
  v127 = *(unsigned __int8 *)(a2 + 32);
  v123 = *(_QWORD *)(a2 + 40);
  v124 = *(_QWORD *)(a2 + 48);
  v121 = *(_QWORD *)(a2 + 56);
  v119 = *(_QWORD *)(a2 + 64);
  v117 = *(_QWORD *)(a2 + 72);
  v115 = *(_QWORD *)(a2 + 80);
  v113 = *(_QWORD *)(a2 + 88);
  v111 = *(_QWORD *)(a2 + 96);
  v109 = *(_QWORD *)(a2 + 104);
  v107 = *(_QWORD *)(a2 + 112);
  v105 = *(_QWORD *)(a2 + 120);
  v103 = *(_QWORD *)(a2 + 136);
  v101 = *(_QWORD *)(a2 + 144);
  v99 = *(_QWORD *)(a2 + 152);
  v97 = *(_QWORD *)(a2 + 160);
  v94 = *(_QWORD *)(a2 + 168);
  v95 = *(_QWORD *)(a2 + 128);
  v92 = *(_QWORD *)(a2 + 176);
  v11 = *(_QWORD *)(a2 + 200);
  v89 = *(_QWORD *)(a2 + 192);
  v90 = *(_QWORD *)(a2 + 184);
  sub_1ABDCBC58(a2 + 208, (uint64_t)v174);
  v12 = *(_QWORD *)(a2 + 376);
  v13 = *(unsigned __int8 *)(a2 + 384);
  v14 = *(_QWORD *)(a2 + 392);
  v15 = v4[16];
  v17 = *(_QWORD *)(a2 + 408);
  v16 = *(_QWORD *)(a2 + 416);
  v19 = *(_QWORD *)(a2 + 424);
  v18 = *(_QWORD *)(a2 + 432);
  v21 = *(_QWORD *)(a2 + 440);
  v20 = *(_QWORD *)(a2 + 448);
  v23 = *(_QWORD *)(a2 + 456);
  v22 = *(_QWORD *)(a2 + 464);
  v24 = *(_QWORD *)(a2 + 472);
  v26 = *(_QWORD *)(a2 + 488);
  v25 = *(_QWORD *)(a2 + 496);
  v27 = v4[120];
  if (v5)
  {
    if (!v10)
      return 0;
    v67 = v18;
    v68 = v19;
    v65 = v21;
    v66 = v20;
    v63 = v22;
    v64 = v23;
    v60 = v25;
    v61 = v24;
    v62 = v4[96];
    v58 = v4[97];
    v59 = v26;
    v28 = v5;
    v29 = v17;
    v30 = v10;
    v31 = v16;
    v32 = v4[16];
    v69 = v7;
    v33 = v11;
    v34 = v8;
    v35 = v9;
    v36 = v12;
    v37 = v13;
    v38 = v27;
    v39 = v14;
    v40 = sub_1ABD1C278(v28, v30);
    v14 = v39;
    v27 = v38;
    v13 = v37;
    v12 = v36;
    v9 = v35;
    v8 = v34;
    v11 = v33;
    v7 = v69;
    v15 = v32;
    v17 = v29;
    v16 = v31;
    if ((v40 & 1) == 0)
      return 0;
  }
  else
  {
    v67 = v18;
    v68 = v19;
    v65 = v21;
    v66 = v20;
    v63 = v22;
    v64 = v23;
    v60 = v25;
    v61 = v24;
    v62 = v4[96];
    v58 = v4[97];
    v59 = v26;
    if (v10)
      return 0;
  }
  if (v141)
  {
    if (!v139)
      return 0;
    v41 = v14;
    v42 = v15;
    v43 = v17;
    v70 = v16;
    v44 = sub_1ABD1C278(v141, v139);
    result = 0;
    if ((v44 & 1) == 0 || v138 != v137 || v136 != v135 || v134 != v133 || v132 != v131 || v130 != v129 || v128 != v127)
      return result;
  }
  else
  {
    if (v139)
      return 0;
    result = 0;
    if ((v138 ^ v137) == 1 || v136 != v135 || v134 != v133 || v132 != v131 || v130 != v129 || v128 != v127)
      return result;
    v41 = v14;
    v42 = v15;
    v43 = v17;
    v70 = v16;
  }
  if (v125 == v123)
  {
    if (v126 == v124 && v122 == v121 || (v46 = sub_1ABF3223C(), result = 0, (v46 & 1) != 0))
    {
      if (v120 == v119 && v118 == v117 || (v47 = sub_1ABF3223C(), result = 0, (v47 & 1) != 0))
      {
        if (v116 == v115 && v114 == v113 || (v48 = sub_1ABF3223C(), result = 0, (v48 & 1) != 0))
        {
          if (v112 == v111 && v110 == v109 || (v49 = sub_1ABF3223C(), result = 0, (v49 & 1) != 0))
          {
            if (v108 == v107 && v106 == v105 || (v50 = sub_1ABF3223C(), result = 0, (v50 & 1) != 0))
            {
              if (v104)
              {
                if (!v103)
                  return 0;
                if (v96 != v95 || v104 != v103)
                {
                  v51 = sub_1ABF3223C();
                  result = 0;
                  if ((v51 & 1) == 0)
                    return result;
LABEL_50:
                  if (v102 != v101 || v100 != v99 || v98 != v97)
                    return result;
                  if (v7)
                  {
                    if (!v94)
                      return 0;
                    v142 = v11;
                    sub_1ABF2FF5C();
                    v52 = sub_1ABF2FF5C();
                    v140 = sub_1ABDE0780(v52, v94);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (!v140)
                      return 0;
                  }
                  else
                  {
                    v142 = v11;
                    if (v94)
                      return 0;
                  }
                  if (v93)
                  {
                    if (!v92 || (sub_1ABDE0828(v93, v92) & 1) == 0)
                      return 0;
                  }
                  else if (v92)
                  {
                    return 0;
                  }
                  if (v91)
                  {
                    if (!v90 || (sub_1ABDE0828(v91, v90) & 1) == 0)
                      return 0;
                  }
                  else if (v90)
                  {
                    return 0;
                  }
                  if (v8)
                  {
                    if (!v89 || (sub_1ABDE0828(v8, v89) & 1) == 0)
                      return 0;
                  }
                  else if (v89)
                  {
                    return 0;
                  }
                  if (v9)
                  {
                    if (!v142 || (sub_1ABDE0828(v9, v142) & 1) == 0)
                      return 0;
                  }
                  else if (v142)
                  {
                    return 0;
                  }
                  sub_1ABDCBC58((uint64_t)v173, (uint64_t)v172);
                  if (sub_1ABDCF144((uint64_t)v172) == 1)
                  {
                    sub_1ABDCBC58((uint64_t)v174, (uint64_t)v170);
                    if (sub_1ABDCF144((uint64_t)v170) == 1)
                    {
LABEL_85:
                      if ((v88 & 1) != 0)
                      {
                        if (!v13)
                          return 0;
                      }
                      else
                      {
                        if (v86 == v12)
                          v54 = v13;
                        else
                          v54 = 1;
                        if ((v54 & 1) != 0)
                          return 0;
                      }
                      if ((v87 & 1) != 0)
                      {
                        if (!v42)
                          return 0;
                      }
                      else
                      {
                        if (v84 == v41)
                          v55 = v42;
                        else
                          v55 = 1;
                        if ((v55 & 1) != 0)
                          return 0;
                      }
                      if (v85)
                      {
                        if (!v70 || (v82 != v43 || v85 != v70) && (sub_1ABF3223C() & 1) == 0)
                          return 0;
                      }
                      else if (v70)
                      {
                        return 0;
                      }
                      if ((v83 != v68 || v81 != v67) && (sub_1ABF3223C() & 1) == 0)
                        return 0;
                      if (v80)
                      {
                        if (!v66 || (v78 != v65 || v80 != v66) && (sub_1ABF3223C() & 1) == 0)
                          return 0;
                      }
                      else if (v66)
                      {
                        return 0;
                      }
                      if (v79 == v64 && v76 == v63 && v77 == v61 && v71 == v62 && v72 == v58 && v73 == v59)
                      {
                        if (v74)
                        {
                          if (v60)
                          {
                            sub_1ABF2FF5C();
                            v56 = sub_1ABF2FF5C();
                            v57 = sub_1ABD1DF48(v56, v60);
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if ((v57 & 1) != 0)
                              return v75 ^ v27 ^ 1u;
                          }
                        }
                        else if (!v60)
                        {
                          return v75 ^ v27 ^ 1u;
                        }
                      }
                      return 0;
                    }
                  }
                  else
                  {
                    sub_1ABDCBC58((uint64_t)v173, (uint64_t)&v159);
                    sub_1ABDCBC58((uint64_t)v174, (uint64_t)v170);
                    if (sub_1ABDCF144((uint64_t)v170) != 1)
                    {
                      sub_1ABDCBC58((uint64_t)v174, (uint64_t)&v145);
                      v143[8] = v153;
                      v143[9] = v154;
                      v144 = v155;
                      v143[4] = v149;
                      v143[5] = v150;
                      v143[6] = v151;
                      v143[7] = v152;
                      v143[0] = v145;
                      v143[1] = v146;
                      v143[2] = v147;
                      v143[3] = v148;
                      sub_1ABDCBC58((uint64_t)v173, (uint64_t)v156);
                      sub_1ABDCF168(v173, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD1A564);
                      sub_1ABDD07A0(v156);
                      v53 = _s10StocksCore15FlexiblePaywallV2eeoiySbAC_ACtFZ_0((uint64_t *)&v159, (uint64_t *)v143);
                      v157[8] = v167;
                      v157[9] = v168;
                      v158 = v169;
                      v157[4] = v163;
                      v157[5] = v164;
                      v157[7] = v166;
                      v157[6] = v165;
                      v157[0] = v159;
                      v157[1] = v160;
                      v157[3] = v162;
                      v157[2] = v161;
                      sub_1ABDD0888((uint64_t *)v157);
                      sub_1ABDCF168(v173, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD1A400);
                      if (!v53)
                        return 0;
                      goto LABEL_85;
                    }
                    v153 = v167;
                    v154 = v168;
                    v155 = v169;
                    v149 = v163;
                    v150 = v164;
                    v151 = v165;
                    v152 = v166;
                    v145 = v159;
                    v146 = v160;
                    v147 = v161;
                    v148 = v162;
                    sub_1ABDCBC58((uint64_t)v173, (uint64_t)v156);
                    sub_1ABDCBC58((uint64_t)v173, (uint64_t)v157);
                    sub_1ABDD07A0((uint64_t *)v157);
                    sub_1ABDD07A0(v156);
                    sub_1ABDD0888((uint64_t *)&v145);
                  }
                  sub_1ABDCBC58((uint64_t)v173, (uint64_t)v170);
                  sub_1ABDCBC58((uint64_t)v174, (uint64_t)&v171);
                  sub_1ABDCF168(v174, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD1A564);
                  sub_1ABDD0688((uint64_t)v170);
                  return 0;
                }
              }
              else if (v103)
              {
                return 0;
              }
              result = 0;
              goto LABEL_50;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1ABD1DF48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for AudioUpsellConfig();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v10 = (uint64_t *)((char *)&v19 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_1ABCFC790(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AudioUpsellConfig);
        sub_1ABCFC790(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AudioUpsellConfig);
        v15 = sub_1ABEF21BC(v10, v7);
        sub_1ABCFC3BC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AudioUpsellConfig);
        sub_1ABCFC3BC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for AudioUpsellConfig);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1ABD1E084(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = (_QWORD *)a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v18 = a1[8];
  v19 = a1[7];
  v8 = (_QWORD *)a2[2];
  v7 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[6];
  v16 = a2[8];
  v17 = a2[7];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_1ABF3223C(), result = 0, (v12 & 1) != 0))
  {
    if ((sub_1ABD1C278(v2, v8) & 1) != 0)
    {
      if (v3 == v7 && v4 == v9 || (v14 = sub_1ABF3223C(), result = 0, (v14 & 1) != 0))
      {
        if (v5 == v10 && v6 == v11 || (v15 = sub_1ABF3223C(), result = 0, (v15 & 1) != 0))
        {
          if (v19 == v17 && v18 == v16)
            return 1;
          else
            return sub_1ABF3223C();
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AudioUpsellConfig()
{
  uint64_t result;

  result = qword_1ED34F070;
  if (!qword_1ED34F070)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD1E21C(uint64_t a1, uint64_t a2)
{
  return sub_1ABD1E3EC(a1, a2);
}

uint64_t sub_1ABD1E23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v18 = a3;
  v7 = sub_1ABF30B38();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1ABF30760();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30754();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB3560], v7);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(a4 + 8))(a1, a2, v14, v10, v18, a4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v15;
}

uint64_t sub_1ABD1E368(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1ABD1F620(a1, a2, a3, a4);
}

uint64_t sub_1ABD1E388()
{
  sub_1ABD1E8C8(0, &qword_1ED34DD90, MEMORY[0x1E0DB2A80]);
  return sub_1ABF313B4();
}

uint64_t sub_1ABD1E3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, _QWORD *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  uint64_t result;
  unint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(unint64_t, char *, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44[2];

  v37 = a1;
  v4 = sub_1ABF30C28();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2A80];
  sub_1ABD1E8C8(0, &qword_1ED34DD90, MEMORY[0x1E0DB2A80]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v41 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v31 - v10;
  sub_1ABD1EA60(0, &qword_1ED34DD98, &qword_1ED34DD90, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v42 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v31 - v15;
  v17 = sub_1ABF30B14();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v43 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED34DB80 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED34D020, v19, (uint64_t (*)(uint64_t))type metadata accessor for SparklineManager, (uint64_t)&unk_1ABF49354);
  sub_1ABF30970();
  v35 = v18;
  if (LOBYTE(v44[0]) == 1)
    (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v43, *MEMORY[0x1E0DB32B0], v17);
  else
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v43, a2, v17);
  v36 = v17;
  sub_1ABD07E04(v2 + 16, (uint64_t)v44);
  v33 = swift_allocObject();
  sub_1ABD065C8(v44, v33 + 16);
  v34 = v2;
  sub_1ABF31060();
  sub_1ABF313F0();
  swift_release();
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  result = v21(v16, 1, v8);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v32 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v32(v11, v16, v8);
    v23 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v41 = swift_allocObject();
    v31 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
    v31(v41 + v23, v11, v8);
    v24 = *(void (**)(char *, uint64_t))(v9 + 8);
    v24(v16, v8);
    sub_1ABF31060();
    v25 = v42;
    sub_1ABF313F0();
    swift_release();
    result = v21(v25, 1, v8);
    if ((_DWORD)result != 1)
    {
      sub_1ABD1E9F8(0, &qword_1ED34DCE8, MEMORY[0x1E0DB4B98]);
      v32(v11, v25, v8);
      v26 = swift_allocObject();
      v31(v26 + v23, v11, v8);
      v24(v25, v8);
      *(_QWORD *)&v44[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABCFE22C((unint64_t *)&qword_1ED350AF8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868], MEMORY[0x1E0DB3870]);
      sub_1ABD20158(0);
      sub_1ABCFE22C((unint64_t *)&qword_1ED350B70, 255, (uint64_t (*)(uint64_t))sub_1ABD20158, MEMORY[0x1E0DEAF38]);
      v27 = v38;
      v28 = v40;
      sub_1ABF31E04();
      v29 = v43;
      v30 = sub_1ABF3112C();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v28);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v36);
      return v30;
    }
  }
  __break(1u);
  return result;
}

void sub_1ABD1E8C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[5];

  if (!*a2)
  {
    v8[0] = &type metadata for SparklineManager.StoreDescriptor;
    v8[1] = type metadata accessor for Chart(255);
    v8[2] = sub_1ABD1EB4C();
    v8[3] = sub_1ABCFE22C(&qword_1ED34DA28, 255, type metadata accessor for Chart, (uint64_t)&unk_1ABF3AA58);
    v8[4] = sub_1ABCFE22C(&qword_1ED34DA20, 255, type metadata accessor for Chart, (uint64_t)&unk_1ABF3AA80);
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1ABD1E99C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1ABF31690();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1ABD1E9F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for Chart(255);
    v7 = a3(a1, MEMORY[0x1E0DEA968], v6, MEMORY[0x1E0DEA978]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1ABD1EA60(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1ABD1E8C8(255, a3, a4);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1ABD1EAC0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34DE50)
  {
    sub_1ABD1E99C(255, (unint64_t *)&qword_1ED34DE48, (void (*)(uint64_t))type metadata accessor for Quote);
    sub_1ABD1E99C(255, (unint64_t *)&qword_1ED34DE40, (void (*)(uint64_t))type metadata accessor for Chart);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34DE50);
  }
}

unint64_t sub_1ABD1EB4C()
{
  unint64_t result;

  result = qword_1ED34D018;
  if (!qword_1ED34D018)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49324, &type metadata for SparklineManager.StoreDescriptor);
    atomic_store(result, (unint64_t *)&qword_1ED34D018);
  }
  return result;
}

uint64_t type metadata accessor for SDSAuthToken()
{
  uint64_t result;

  result = qword_1ED34EC98;
  if (!qword_1ED34EC98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for QuoteDetail()
{
  uint64_t result;

  result = qword_1ED34CD80;
  if (!qword_1ED34CD80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD1EC08(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABD1EC20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1ABD1EC20(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  if (qword_1ED34FAD8 != -1)
    swift_once();
  v5 = sub_1ABF3133C();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED34E920);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v6 = sub_1ABF31324();
  v7 = sub_1ABF31BF4();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v11 = v9;
    *(_DWORD *)v8 = 136315650;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(a2, a3, &v11);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2048;
    swift_bridgeObjectRelease();
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 22) = 2080;
    sub_1ABD8AA94();
    sub_1ABCFE22C(&qword_1ED34E7C0, 255, (uint64_t (*)(uint64_t))sub_1ABD8AA94, MEMORY[0x1E0DEC858]);
    sub_1ABD0E288();
    sub_1ABF2FF5C();
    sub_1ABF31954();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    sub_1ABD1FE2C(2651, 0xE200000000000000, &v11);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v6, v7, "Quote request with ID: %s completed with %ld results: %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v9, -1, -1);
    MEMORY[0x1AF438FFC](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_1ABD1F1CC();
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD1EF50()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_1ABF30AC0();
  sub_1ABF31060();
  v0 = sub_1ABF31408();
  swift_release();
  if (qword_1ED34FAD8 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED34E920);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v12 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_1ABF2FF5C();
    v7 = MEMORY[0x1AF437C34](v6, MEMORY[0x1E0DEA968]);
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_1ABD1FE2C(v7, v9, &v12);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Reading quotes from cache for symbols: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v5, -1, -1);
    MEMORY[0x1AF438FFC](v4, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1ABD200F0(0, &qword_1ED34DCC8, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DB49C0]);
  sub_1ABF310A8();
  v12 = v0;
  sub_1ABD1F1CC();
  swift_allocObject();
  v10 = sub_1ABF311E0();
  sub_1ABF30ACC();
  return v10;
}

void sub_1ABD1F1CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DD28)
  {
    sub_1ABD200F0(255, (unint64_t *)&qword_1ED34DE48, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DD28);
  }
}

uint64_t sub_1ABD1F230(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1ABD18AE0(0, &qword_1ED34E1E0, MEMORY[0x1E0DEC198], MEMORY[0x1E0DEC1A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
    v2 = sub_1ABF32014();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  sub_1ABF2FF5C();
  result = sub_1ABF2FF68();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1ABD1FEFC(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    sub_1ABF2FF5C();
    swift_dynamicCast();
    sub_1ABD1F610(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1ABD1F610(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1ABD1F610(v36, v37);
    sub_1ABD1F610(v37, &v33);
    result = sub_1ABF31E28();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1ABD1F610(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1ABD97E10();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

_OWORD *sub_1ABD1F610(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1ABD1F620(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v68;
  os_log_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94[2];

  v80 = a4;
  v73 = a2;
  v76 = *v4;
  v7 = sub_1ABF30C28();
  v85 = *(_QWORD *)(v7 - 8);
  v86 = v7;
  MEMORY[0x1E0C80A78](v7);
  v84 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1ABF30B38();
  v81 = *(_QWORD *)(v9 - 8);
  v82 = v9;
  MEMORY[0x1E0C80A78](v9);
  v79 = v10;
  v91 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1ABF30B14();
  v11 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v92 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1ABF30760();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v77 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v68 - v17;
  v19 = sub_1ABF30790();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF2FBD8();
  v87 = sub_1ABF30778();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if (qword_1ED34FAD8 != -1)
    swift_once();
  v25 = sub_1ABF3133C();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ED34E920);
  v74 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v74(v18, a3, v13);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v26 = sub_1ABF31324();
  v27 = sub_1ABF31BF4();
  v28 = v27;
  v29 = os_log_type_enabled(v26, v27);
  v83 = a1;
  v88 = v11;
  v78 = v14;
  if (v29)
  {
    v30 = swift_slowAlloc();
    v68 = v13;
    v31 = v14;
    v70 = v28;
    v32 = v30;
    v71 = swift_slowAlloc();
    v94[0] = v71;
    *(_DWORD *)v32 = 136315650;
    v69 = v26;
    v33 = sub_1ABF2FF5C();
    v34 = MEMORY[0x1AF437C34](v33, MEMORY[0x1E0DEA968]);
    v72 = a3;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    v93 = sub_1ABD1FE2C(v35, v37, v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    v38 = v87;
    v39 = v88;
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    v40 = sub_1ABF3073C();
    v93 = sub_1ABD1FE2C(v40, v41, v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    v42 = v68;
    (*(void (**)(char *))(v31 + 8))(v18);
    *(_WORD *)(v32 + 22) = 2080;
    sub_1ABF2FF5C();
    v93 = sub_1ABD1FE2C(v38, v24, v94);
    a3 = v72;
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    v43 = v69;
    _os_log_impl(&dword_1ABCEF000, v69, (os_log_type_t)v70, "Preparing stock quote request for symbols: %s, earliestBeginDate: %s, requestID: %s", (uint8_t *)v32, 0x20u);
    v44 = v71;
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v44, -1, -1);
    MEMORY[0x1AF438FFC](v32, -1, -1);

    v46 = v92;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v42 = v13;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);

    swift_bridgeObjectRelease_n();
    v46 = v92;
    v39 = v11;
  }
  if (qword_1ED34DB70 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED34CE58, v45, (uint64_t (*)(uint64_t))type metadata accessor for QuoteManager, (uint64_t)&unk_1ABF38DAC);
  sub_1ABF30970();
  if (LOBYTE(v94[0]) == 1)
    (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v46, *MEMORY[0x1E0DB32B0], v89);
  else
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v46, v73, v89);
  sub_1ABD200F0(0, &qword_1ED34DCF0, MEMORY[0x1E0DB4B98]);
  v76 = v47;
  v48 = v77;
  v49 = v42;
  v74(v77, a3, v42);
  v50 = v81;
  v51 = v82;
  (*(void (**)(char *, unint64_t, uint64_t))(v81 + 16))(v91, v80, v82);
  v52 = v78;
  v53 = (*(unsigned __int8 *)(v78 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  v54 = (v75 + *(unsigned __int8 *)(v50 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v55 = (char *)swift_allocObject();
  v56 = v87;
  *((_QWORD *)v55 + 2) = v87;
  *((_QWORD *)v55 + 3) = v24;
  v80 = v24;
  *((_QWORD *)v55 + 4) = v90;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(&v55[v53], v48, v49);
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v55[v54], v91, v51);
  v94[0] = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE22C((unint64_t *)&qword_1ED350AF8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868], MEMORY[0x1E0DB3870]);
  sub_1ABD20158(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED350B70, 255, (uint64_t (*)(uint64_t))sub_1ABD20158, MEMORY[0x1E0DEAF38]);
  swift_retain_n();
  v57 = v80;
  swift_bridgeObjectRetain_n();
  v58 = v84;
  v59 = v86;
  sub_1ABF31E04();
  v60 = v92;
  sub_1ABF3112C();
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v58, v59);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v60, v89);
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = v56;
  *(_QWORD *)(v61 + 24) = v57;
  v62 = v57;
  sub_1ABF2FF5C();
  v63 = (void *)sub_1ABF31114();
  sub_1ABD200F0(0, (unint64_t *)&qword_1ED34DE48, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_1ABF31174();
  swift_release();
  swift_release();

  v64 = swift_allocObject();
  *(_QWORD *)(v64 + 16) = v56;
  *(_QWORD *)(v64 + 24) = v62;
  v65 = (void *)sub_1ABF31114();
  v66 = sub_1ABF311B0();
  swift_release();
  swift_release();

  return v66;
}

uint64_t sub_1ABD1FE2C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1ABD1FF38(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1ABD1FEFC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1ABD1FEFC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_1ABF2FF5C();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1ABD1FEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1ABD1FF38(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1ABF31D8C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1ABD20174(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1ABF31EE8();
  if (!v8)
  {
    sub_1ABF31FC0();
    __break(1u);
LABEL_17:
    result = sub_1ABF3202C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void sub_1ABD200F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for Quote();
    v7 = a3(a1, MEMORY[0x1E0DEA968], v6, MEMORY[0x1E0DEA978]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1ABD20158(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED350B68, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1ABD20174(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1ABD20208(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1ABD6950C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1ABD6950C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1ABD20208(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1ABD2037C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1ABF31EA0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1ABF31FC0();
      __break(1u);
LABEL_10:
      v2 = sub_1ABF3187C();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1ABF3202C();
    __break(1u);
LABEL_14:
    result = sub_1ABF31FC0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1ABD2037C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1ABD69ABC();
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1ABD204A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  char *v24;
  char *v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t result;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  objc_super v48;

  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v1);
  v45 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article(0);
  v3 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v5 = (_QWORD *)((char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for ForYouConfigRecord.Configuration(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for ForYouConfigRecord(0);
  sub_1ABCFC790(v0 + *(int *)(v9 + 20), (uint64_t)v8, type metadata accessor for ForYouConfigRecord.Configuration);
  v10 = *v8;
  sub_1ABF2FF5C();
  sub_1ABCFC3BC((uint64_t)v8, type metadata accessor for ForYouConfigRecord.Configuration.TopStories);
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v14;
  }
  v12 = v10 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v13 = *(_QWORD *)(v3 + 72);
  v41[1] = v10;
  v42 = v13;
  sub_1ABF2FF5C();
  v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v43 = v5;
  v15 = (uint64_t)v45;
  while (1)
  {
    v46 = v11;
    sub_1ABCFC790(v12, (uint64_t)v5, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article);
    v17 = *v5;
    v16 = v5[1];
    v18 = v44;
    sub_1ABCFC790((uint64_t)v5 + *(int *)(v44 + 20), v15, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    v19 = (uint64_t *)((char *)v5 + *(int *)(v18 + 24));
    v21 = *v19;
    v20 = v19[1];
    v22 = (objc_class *)_s16HeadlineMetadataCMa();
    v23 = (char *)objc_allocWithZone(v22);
    sub_1ABCFC790(v15, (uint64_t)&v23[OBJC_IVAR____TtCV10StocksCore18ForYouConfigRecordP33_FB30AEA7B56282916E4430A3993C597516HeadlineMetadata_displayDate], (uint64_t (*)(_QWORD))sub_1ABD226F0);
    v24 = &v23[OBJC_IVAR____TtCV10StocksCore18ForYouConfigRecordP33_FB30AEA7B56282916E4430A3993C597516HeadlineMetadata_storyType];
    *(_QWORD *)v24 = v21;
    *((_QWORD *)v24 + 1) = v20;
    v25 = &v23[OBJC_IVAR____TtCV10StocksCore18ForYouConfigRecordP33_FB30AEA7B56282916E4430A3993C597516HeadlineMetadata_title];
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    v48.receiver = v23;
    v48.super_class = v22;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v26 = objc_msgSendSuper2(&v48, sel_init);
    sub_1ABCFC3BC(v15, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v47 = v14;
    v29 = sub_1ABD00F9C(v17, v16);
    v30 = v14[2];
    v31 = (v28 & 1) == 0;
    v32 = v30 + v31;
    if (__OFADD__(v30, v31))
      break;
    v33 = v28;
    if (v14[3] >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v14 = v47;
        if ((v28 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1ABE6E4AC();
        v14 = v47;
        if ((v33 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1ABD20EAC(v32, isUniquelyReferenced_nonNull_native);
      v34 = sub_1ABD00F9C(v17, v16);
      if ((v33 & 1) != (v35 & 1))
        goto LABEL_21;
      v29 = v34;
      v14 = v47;
      if ((v33 & 1) != 0)
      {
LABEL_3:
        *(_QWORD *)(v14[7] + 8 * v29) = v26;
        swift_unknownObjectRelease();
        goto LABEL_4;
      }
    }
    v14[(v29 >> 6) + 8] |= 1 << v29;
    v36 = (uint64_t *)(v14[6] + 16 * v29);
    *v36 = v17;
    v36[1] = v16;
    *(_QWORD *)(v14[7] + 8 * v29) = v26;
    v37 = v14[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_20;
    v14[2] = v39;
    sub_1ABF2FF5C();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v43;
    sub_1ABCFC3BC((uint64_t)v43, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article);
    v12 += v42;
    v11 = v46 - 1;
    if (v46 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t _s16HeadlineMetadataCMa()
{
  uint64_t result;

  result = qword_1ED3472A8;
  if (!qword_1ED3472A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD20884@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;

  v26 = a2;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v25 - v4;
  sub_1ABCF4DA8(0, &qword_1ED347018, (uint64_t (*)(void))sub_1ABD20C18, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - v7;
  v9 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD20C18();
  v29 = v8;
  v12 = v30;
  sub_1ABF3235C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = v11;
  sub_1ABF30760();
  v33 = 0;
  sub_1ABCFE1EC(&qword_1ED34CCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v15 = (uint64_t)v27;
  v16 = v28;
  sub_1ABF320C8();
  sub_1ABD241F8(v15, (uint64_t)v14 + *(int *)(v9 + 20));
  v32 = 1;
  v17 = sub_1ABF3208C();
  v18 = (uint64_t *)((char *)v14 + *(int *)(v9 + 24));
  *v18 = v17;
  v18[1] = v19;
  v31 = 2;
  v20 = sub_1ABF320E0();
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23 = v22;
  v21(v29, v16);
  *v14 = v20;
  v14[1] = v23;
  sub_1ABCFC790((uint64_t)v14, v26, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1ABCFC3BC((uint64_t)v14, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article);
}

uint64_t type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED346B08);
}

uint64_t sub_1ABD20B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1ABF30760();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1ABD20C18()
{
  unint64_t result;

  result = qword_1ED346AE8;
  if (!qword_1ED346AE8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CD28, &type metadata for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AE8);
  }
  return result;
}

_QWORD *sub_1ABD20C5C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1ABF30760();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  sub_1ABF2FF5C();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_1ABD20CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v6 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1ABD20D68(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  v10 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v11 = &v8[v10];
  v12 = &v9[v10];
  v13 = sub_1ABF30760();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v14(v11, v12, v13);
  v15 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t type metadata accessor for ForYouConfigRecord.Configuration.TopStories(uint64_t a1)
{
  return sub_1ABD008B4(a1, qword_1ED34D3D8);
}

uint64_t sub_1ABD20E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1ABD20EAC(uint64_t a1, char a2)
{
  return sub_1ABD231B4(a1, a2, (unint64_t *)&unk_1ED3472F8, (uint64_t)&unk_1ED3472E0, (uint64_t)&protocolRef_FCHeadlineMetadata);
}

uint64_t sub_1ABD20EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a3;
  sub_1ABD21670();
  v31 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v28 - v10);
  v34 = a1;
  v12 = *(_QWORD *)(a2 + 64);
  v29 = a2 + 64;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v30 = (unint64_t)(v13 + 63) >> 6;
  v33 = a2;
  result = sub_1ABF2FF5C();
  v17 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    v23 = *(_QWORD *)(v33 + 56);
    v24 = (uint64_t *)(*(_QWORD *)(v33 + 48) + 16 * i);
    v25 = *v24;
    v26 = v24[1];
    v27 = type metadata accessor for Quote();
    sub_1ABCFC790(v23 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * i, (uint64_t)v11 + *(int *)(v31 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    *v11 = v25;
    v11[1] = v26;
    sub_1ABCFE2AC((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1ABD21670);
    sub_1ABF2FF5C();
    sub_1ABD21170((uint64_t)&v34, v9, v32);
    if (v3)
    {
      swift_bridgeObjectRelease();
      sub_1ABCFC3BC((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1ABD21670);
      return swift_release();
    }
    result = sub_1ABCFC3BC((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1ABD21670);
    if (v15)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v30)
      goto LABEL_26;
    v21 = *(_QWORD *)(v29 + 8 * v17);
    if (!v21)
      break;
LABEL_17:
    v15 = (v21 - 1) & v21;
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v30)
    goto LABEL_26;
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 2;
  if (v17 + 2 >= v30)
    goto LABEL_26;
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 3;
  if (v17 + 3 >= v30)
    goto LABEL_26;
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 4;
  if (v17 + 4 >= v30)
  {
LABEL_26:
    swift_release();
    return v34;
  }
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
  {
LABEL_16:
    v17 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v30)
      goto LABEL_26;
    v21 = *(_QWORD *)(v29 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1ABD21170(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;

  v61 = a3;
  v59 = a1;
  sub_1ABD216D8();
  v63 = v4;
  MEMORY[0x1E0C80A78](v4);
  v64 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD21654(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v58 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v55 = (uint64_t)&v54 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v60 = (char *)&v54 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v54 - v13;
  sub_1ABD21670();
  v16 = v15;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Quote();
  v20 = *(_QWORD **)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v54 = (uint64_t)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v54 - v23;
  v25 = *(int *)(v16 + 48);
  v26 = (uint64_t)&v18[v25];
  v27 = (uint64_t)a2 + v25;
  v29 = *a2;
  v28 = a2[1];
  v31 = v30;
  sub_1ABCFC790(v27, (uint64_t)&v18[v25], v30);
  sub_1ABCFE2AC(v26, (uint64_t)v24, v31);
  v65 = v24;
  v32 = v61;
  sub_1ABCFC790((uint64_t)v24, (uint64_t)v14, v31);
  v33 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v20[7];
  v34 = (uint64_t)v14;
  v33(v14, 0, 1, v19);
  v35 = *(_QWORD *)(v32 + 16);
  v56 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v33;
  v57 = v29;
  v62 = v28;
  if (v35)
  {
    v36 = v19;
    v37 = (uint64_t)v60;
    swift_bridgeObjectRetain_n();
    v38 = sub_1ABD00F9C(v29, v28);
    v40 = v37;
    if ((v39 & 1) != 0)
    {
      sub_1ABCFC790(*(_QWORD *)(v32 + 56) + v20[9] * v38, v37, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
      v41 = v37;
      v42 = 0;
    }
    else
    {
      v41 = v37;
      v42 = 1;
    }
    v19 = v36;
    v33((char *)v41, v42, 1, v36);
    swift_bridgeObjectRelease();
  }
  else
  {
    v40 = (uint64_t)v60;
    v33(v60, 1, 1, v19);
    sub_1ABF2FF5C();
  }
  v43 = v64;
  v44 = v64 + *(int *)(v63 + 48);
  sub_1ABCFC790(v34, v64, (uint64_t (*)(_QWORD))sub_1ABD21654);
  sub_1ABCFC790(v40, v44, (uint64_t (*)(_QWORD))sub_1ABD21654);
  v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v20[6];
  if (v45(v43, 1, v19) == 1)
  {
    sub_1ABCFC3BC(v40, (uint64_t (*)(_QWORD))sub_1ABD21654);
    sub_1ABCFC3BC(v34, (uint64_t (*)(_QWORD))sub_1ABD21654);
    v46 = v45(v44, 1, v19);
    v47 = v62;
    if (v46 == 1)
    {
      sub_1ABCFC3BC(v43, (uint64_t (*)(_QWORD))sub_1ABD21654);
LABEL_14:
      sub_1ABCFC3BC((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
      return swift_bridgeObjectRelease();
    }
    goto LABEL_12;
  }
  v48 = v55;
  sub_1ABCFC790(v43, v55, (uint64_t (*)(_QWORD))sub_1ABD21654);
  if (v45(v44, 1, v19) == 1)
  {
    sub_1ABCFC3BC(v40, (uint64_t (*)(_QWORD))sub_1ABD21654);
    sub_1ABCFC3BC(v34, (uint64_t (*)(_QWORD))sub_1ABD21654);
    sub_1ABCFC3BC(v48, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v47 = v62;
LABEL_12:
    sub_1ABCFC3BC(v43, (uint64_t (*)(_QWORD))sub_1ABD216D8);
    goto LABEL_15;
  }
  v49 = v54;
  sub_1ABCFE2AC(v44, v54, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  v50 = sub_1ABCFE394(v48, v49);
  sub_1ABCFC3BC(v49, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  sub_1ABCFC3BC(v40, (uint64_t (*)(_QWORD))sub_1ABD21654);
  sub_1ABCFC3BC(v34, (uint64_t (*)(_QWORD))sub_1ABD21654);
  sub_1ABCFC3BC(v48, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  sub_1ABCFC3BC(v43, (uint64_t (*)(_QWORD))sub_1ABD21654);
  v47 = v62;
  if ((v50 & 1) != 0)
    goto LABEL_14;
LABEL_15:
  v52 = (uint64_t)v65;
  v53 = v58;
  sub_1ABCFC790((uint64_t)v65, v58, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  v56(v53, 0, 1, v19);
  sub_1ABD21738(v53, v57, v47);
  return sub_1ABCFC3BC(v52, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
}

uint64_t sub_1ABD2163C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABD21648()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1ABD21654(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1ABD21670()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34DEC0)
  {
    type metadata accessor for Quote();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34DEC0);
  }
}

void sub_1ABD216D8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34DA88)
  {
    sub_1ABD21654(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34DA88);
  }
}

uint64_t sub_1ABD21738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  sub_1ABD21654(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Quote();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1ABCFC3BC(a1, (uint64_t (*)(_QWORD))sub_1ABD21654);
    sub_1ABDEFA94(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1ABCFC3BC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1ABD21654);
  }
  else
  {
    sub_1ABCFE2AC(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_1ABD2423C((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

void sub_1ABD2189C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[56];
  _BYTE v7[160];

  v2 = MEMORY[0x1E0C80A78](a1);
  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1ABF30760();
  v5 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  sub_1ABD6414C(v2, (uint64_t)v7);
  sub_1ABD22744(v1, (uint64_t)v6);
  __asm { BR              X10 }
}

uint64_t sub_1ABD219AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char **v5;
  unsigned int v6;
  unsigned __int8 v7;
  char **v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  unint64_t v19;
  char **v20;
  id v21;
  unsigned int v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  char **v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  char v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1ABD065C8((__int128 *)(v0 + 6880), v0 + 6688);
  sub_1ABD6414C(v3 - 256, v0 + 6728);
  sub_1ABD24814(v0 + 6728);
  v4 = *(void **)sub_1ABD24804(v0 + 6728);
  v5 = &selRef_purchaseProvider;
  v6 = objc_msgSend((id)swift_unknownObjectRetain(), sel_isPaid);
  if ((objc_msgSend(v4, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v7 = objc_msgSend(v4, sel_isBundlePaid);
  else
    v7 = 0;
  v8 = &selRef_purchaseProvider;
  v9 = objc_msgSend(v4, sel_sourceChannel);
  v10 = (uint64_t)v9;
  if (v9)
  {
    v11 = objc_msgSend(v9, sel_identifier);
    swift_unknownObjectRelease();
    *(_QWORD *)(v0 + 8) = sub_1ABF317A4();
    v10 = v12;

    if (v6)
      goto LABEL_6;
LABEL_10:
    if ((v7 & 1) != 0)
      goto LABEL_14;
    goto LABEL_11;
  }
  *(_QWORD *)(v0 + 8) = 0;
  if (!v6)
    goto LABEL_10;
LABEL_6:
  v13 = objc_msgSend(v1, sel_purchaseProvider);
  if (!v10)
  {
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  v14 = objc_msgSend(v13, sel_purchasedTagIDs);
  v15 = sub_1ABF31B1C();

  LOBYTE(v14) = sub_1ABD0DC3C(*(_QWORD *)(v0 + 8), v10, v15);
  swift_unknownObjectRelease();
  v5 = &selRef_purchaseProvider;
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_11:
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_48:
    __swift_destroy_boxed_opaque_existential_1(v0 + 6688);
    v37 = 0;
    return v37 & 1;
  }
LABEL_13:
  if ((v7 & 1) == 0)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
LABEL_14:
  if (!v10)
  {
    swift_unknownObjectRelease();
    goto LABEL_38;
  }
  v16 = (char *)objc_msgSend(objc_msgSend(v1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v16, v16 + 1))
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }
  sub_1ABD22B10(v0 + 160, v0 + 3280);
  if (!*(_QWORD *)(v0 + 3304))
  {
    sub_1ABCFC3BC(v0 + 3280, (uint64_t (*)(_QWORD))sub_1ABD22B54);
    goto LABEL_25;
  }
  sub_1ABD22AD4();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    v20 = v5;
    *(_QWORD *)v0 = 0;
    v19 = 0;
    goto LABEL_26;
  }
  v17 = *(void **)(v0 + 6544);
  v18 = objc_msgSend(v17, sel_integerValue);
  if (v18 == (id)-1)
  {

    goto LABEL_37;
  }
  v19 = (unint64_t)v18;
  *(_QWORD *)v0 = v17;
  v20 = v5;
LABEL_26:
  if (objc_getAssociatedObject(v16, (const void *)~v19))
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }
  sub_1ABD22B10(v0 + 160, v0 + 3280);
  v5 = v20;
  if (!*(_QWORD *)(v0 + 3304))
  {
    sub_1ABCFC3BC(v0 + 3280, (uint64_t (*)(_QWORD))sub_1ABD22B54);
LABEL_34:

    if ((v19 & 1) != 0)
      goto LABEL_37;
LABEL_35:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v8 = &selRef_purchaseProvider;
    goto LABEL_38;
  }
  sub_1ABD22AD4();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_34;
  v21 = *(id *)(v0 + 6544);
  v22 = objc_msgSend(v21, sel_integerValue);

  v5 = &selRef_purchaseProvider;
  if ((((v22 + 1) ^ ((_DWORD)v19 + 1)) & 1) == 0)
    goto LABEL_35;
LABEL_37:
  v23 = objc_msgSend(objc_msgSend(v1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v24 = objc_msgSend(v23, sel_bundleChannelIDs);

  v25 = (void *)sub_1ABF31780();
  LODWORD(v23) = objc_msgSend(v24, sel_containsObject_, v25);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  v8 = &selRef_purchaseProvider;
  if ((_DWORD)v23)
  {
LABEL_47:
    swift_unknownObjectRelease();
    goto LABEL_48;
  }
LABEL_38:
  sub_1ABD6414C(v3 - 256, v0 + 6544);
  sub_1ABD24814(v0 + 6544);
  if (!objc_msgSend(*(id *)sub_1ABD24804(v0 + 6544), v5[2]))
    goto LABEL_47;
  v26 = objc_msgSend(v1, sel_purchaseProvider);
  sub_1ABD6414C(v3 - 256, v0 + 6400);
  sub_1ABD24814(v0 + 6400);
  v27 = objc_msgSend(*(id *)sub_1ABD24804(v0 + 6400), v8[4]);
  if (!v27)
  {
    v30 = v8;
    swift_unknownObjectRelease();
    goto LABEL_52;
  }
  v28 = v27;
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) != (id)3)
  {
    v30 = v8;
    v31 = objc_msgSend(v28, sel_identifier);
LABEL_46:
    v32 = sub_1ABF317A4();
    v34 = v33;

    v35 = objc_msgSend(v26, sel_purchasedTagIDs);
    v36 = sub_1ABF31B1C();

    LOBYTE(v35) = sub_1ABD0DC3C(v32, v34, v36);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
      goto LABEL_52;
    goto LABEL_47;
  }
  v29 = objc_msgSend(v28, sel_asSection);
  if (v29)
  {
    v30 = v8;
    v31 = objc_msgSend(v29, sel_parentID);
    swift_unknownObjectRelease();
    if (!v31)
      goto LABEL_51;
    goto LABEL_46;
  }
  v30 = v8;
LABEL_51:
  swift_unknownObjectRelease();
  swift_unknownObjectRelease_n();
LABEL_52:
  v39 = *(_QWORD *)(v0 + 6712);
  v40 = *(_QWORD *)(v0 + 6720);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 6688), v39);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
  sub_1ABD7DDF4(v0 + 3280);
  if (*(_BYTE *)(v2 + 2816) == 1)
  {
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 6688);
    v37 = 1;
  }
  else
  {
    v41 = *(_QWORD *)(v0 + 6712);
    v42 = *(_QWORD *)(v0 + 6720);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 6688), v41);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
    sub_1ABD7DDF4(v0 + 160);
    sub_1ABD6414C(v3 - 256, v0 + 16);
    sub_1ABD24814(v0 + 16);
    LOBYTE(v41) = objc_msgSend(v1, sel_canGetBundleSubscriptionToChannel_, objc_msgSend(*(id *)sub_1ABD24804(v0 + 16), (SEL)v30 + 456));
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v37 = v41 ^ 1;
    __swift_destroy_boxed_opaque_existential_1(v0 + 6688);
  }
  return v37 & 1;
}

void sub_1ABD226F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34EAB0)
  {
    sub_1ABF30760();
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34EAB0);
  }
}

uint64_t sub_1ABD22744(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for HeadlineCondition(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for HeadlineCondition(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  __int128 v8;
  char v9;
  __int128 v10;
  char v11;

  v3 = *(unsigned __int8 *)(a2 + 48);
  if (v3 >= 9)
    v3 = *(_DWORD *)a2 + 9;
  switch(v3)
  {
    case 0u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v4 = a2 + 8;
      v5 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 32) = v5;
      v6 = v5;
      v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
      swift_unknownObjectRetain();
      v7(a1 + 8, v4, v6);
      *(_BYTE *)(a1 + 48) = 0;
      return a1;
    case 1u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 48) = 1;
      swift_unknownObjectRetain();
      return a1;
    case 2u:
      v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(uint64_t))(v10 - 8))(a1);
      v9 = 2;
      goto LABEL_11;
    case 3u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v11 = 3;
      goto LABEL_15;
    case 4u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v9 = 4;
      goto LABEL_11;
    case 5u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v9 = 5;
      goto LABEL_11;
    case 6u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v11 = 6;
      goto LABEL_15;
    case 7u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v11 = 7;
      goto LABEL_15;
    case 8u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v11 = 8;
LABEL_15:
      *(_BYTE *)(a1 + 48) = v11;
      sub_1ABF2FF5C();
      break;
    default:
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      v9 = *(_BYTE *)(a2 + 48);
LABEL_11:
      *(_BYTE *)(a1 + 48) = v9;
      break;
  }
  return a1;
}

uint64_t sub_1ABD228E4(uint64_t a1)
{
  destroy for HeadlineCondition(a1);
  return a1;
}

uint64_t destroy for HeadlineCondition(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 48);
  if (v2 >= 9)
    v2 = *(_DWORD *)result + 9;
  switch(v2)
  {
    case 0u:
      v1 = result + 8;
      swift_unknownObjectRelease();
      goto LABEL_6;
    case 1u:
      result = swift_unknownObjectRelease();
      break;
    case 2u:
LABEL_6:
      result = __swift_destroy_boxed_opaque_existential_1(v1);
      break;
    case 3u:
    case 6u:
    case 7u:
    case 8u:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1ABD229A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1ABF30760();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  sub_1ABF2FF5C();
  if (v12(v9, 1, v10))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  sub_1ABF2FF5C();
  return a1;
}

unint64_t sub_1ABD22AD4()
{
  unint64_t result;

  result = qword_1ED34FD80;
  if (!qword_1ED34FD80)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34FD80);
  }
  return result;
}

uint64_t sub_1ABD22B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD22B54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABD22B54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34CAC0)
  {
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34CAC0);
  }
}

uint64_t sub_1ABD22BAC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1ABF3223C();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1ABF3223C() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD22CD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1ABF31B34();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_1ABF2FF5C();
      sub_1ABCFB740(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t type metadata accessor for ForYouConfigRecord(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED34D440);
}

uint64_t sub_1ABD22D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  void *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _BYTE v43[144];
  _QWORD v44[20];

  v3 = *(_QWORD *)(a2 + 16);
  v40 = a2;
  if (v3)
  {
    v44[18] = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    v5 = a2 + 32;
    for (i = v3 - 1; ; --i)
    {
      sub_1ABD6414C(v5, (uint64_t)v43);
      sub_1ABD6414C((uint64_t)v43, (uint64_t)v44);
      sub_1ABD24814((uint64_t)v44);
      sub_1ABD24804((uint64_t)v44);
      swift_unknownObjectRetain();
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
      if (!i)
        break;
      v5 += 144;
    }
  }
  v7 = objc_msgSend(*(id *)(v2 + 152), sel_configuration);
  sub_1ABCF7C04(0, (unint64_t *)&qword_1ED34E0B0);
  v8 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  sub_1ABD204A0();
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED3472E0);
  v9 = (void *)sub_1ABF31618();
  swift_bridgeObjectRelease();
  v39 = v7;
  v10 = (id)FCAssignHeadlineMetadata();

  if (v10)
  {
    v11 = sub_1ABF31A08();

    if (v11 >> 62)
      goto LABEL_30;
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1ABF2FF5C();
    while (v12)
    {
      v42 = v11 & 0xC000000000000001;
      v13 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v14 = 4;
      v41 = v11;
      while (1)
      {
        v16 = v14 - 4;
        if (!v42)
          break;
        v17 = (void *)MEMORY[0x1AF4380CC](v14 - 4, v11);
        v18 = v14 - 3;
        if (__OFADD__(v16, 1))
          goto LABEL_27;
LABEL_16:
        v11 = v12;
        v19 = v17;
        v20 = objc_msgSend(v17, sel_identifier, v39, v40);
        v21 = sub_1ABF317A4();
        v23 = v22;

        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v44[0] = v13;
        v26 = sub_1ABD00F9C(v21, v23);
        v27 = v13[2];
        v28 = (v25 & 1) == 0;
        v29 = v27 + v28;
        if (__OFADD__(v27, v28))
          goto LABEL_28;
        v30 = v25;
        if (v13[3] >= v29)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v13 = (_QWORD *)v44[0];
            if ((v25 & 1) != 0)
              goto LABEL_9;
          }
          else
          {
            sub_1ABE6E4C8();
            v13 = (_QWORD *)v44[0];
            if ((v30 & 1) != 0)
              goto LABEL_9;
          }
        }
        else
        {
          sub_1ABD234B8(v29, isUniquelyReferenced_nonNull_native);
          v31 = sub_1ABD00F9C(v21, v23);
          if ((v30 & 1) != (v32 & 1))
            goto LABEL_34;
          v26 = v31;
          v13 = (_QWORD *)v44[0];
          if ((v30 & 1) != 0)
          {
LABEL_9:
            *(_QWORD *)(v13[7] + 8 * v26) = v19;
            swift_unknownObjectRelease();
            goto LABEL_10;
          }
        }
        v13[(v26 >> 6) + 8] |= 1 << v26;
        v33 = (uint64_t *)(v13[6] + 16 * v26);
        *v33 = v21;
        v33[1] = v23;
        *(_QWORD *)(v13[7] + 8 * v26) = v19;
        v34 = v13[2];
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_29;
        v13[2] = v36;
        sub_1ABF2FF5C();
LABEL_10:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v14;
        v12 = v11;
        v15 = v18 == v11;
        v11 = v41;
        if (v15)
          goto LABEL_32;
      }
      v17 = (void *)swift_unknownObjectRetain();
      v18 = v14 - 3;
      if (!__OFADD__(v16, 1))
        goto LABEL_16;
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain_n();
      v12 = sub_1ABF31FE4();
      swift_bridgeObjectRelease();
    }
    v13 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_32:
    swift_bridgeObjectRelease_n();
    sub_1ABF2FF5C();
    v37 = sub_1ABD641E4(v40, (uint64_t)v13);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    return v37;
  }
  else
  {
    __break(1u);
LABEL_34:
    result = sub_1ABF3229C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABD231B4(uint64_t a1, char a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;

  v6 = v5;
  v8 = *v5;
  sub_1ABD23BCC(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1ABCF7C04);
  v40 = a2;
  v9 = sub_1ABF31FFC();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_38;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v38 = v5;
  v39 = v8 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v8 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = sub_1ABF2FF68();
  v17 = 0;
  while (1)
  {
    if (v13)
    {
      v23 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v24 = v23 | (v17 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v17++, 1))
      goto LABEL_40;
    if (v17 >= v14)
      break;
    v26 = (_QWORD *)(v8 + 64);
    v27 = *(_QWORD *)(v39 + 8 * v17);
    if (!v27)
    {
      v28 = v17 + 1;
      if (v17 + 1 >= v14)
      {
LABEL_31:
        swift_release();
        v6 = v38;
        if ((v40 & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      }
      v27 = *(_QWORD *)(v39 + 8 * v28);
      if (!v27)
      {
        while (1)
        {
          v17 = v28 + 1;
          if (__OFADD__(v28, 1))
            break;
          if (v17 >= v14)
            goto LABEL_31;
          v27 = *(_QWORD *)(v39 + 8 * v17);
          ++v28;
          if (v27)
            goto LABEL_20;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v17;
    }
LABEL_20:
    v13 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_21:
    v29 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v24);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v24);
    if ((v40 & 1) == 0)
    {
      sub_1ABF2FF5C();
      swift_unknownObjectRetain();
    }
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v18 = -1 << *(_BYTE *)(v10 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v15 + 8 * (v19 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v15 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v35 = v20 == v34;
        if (v20 == v34)
          v20 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v15 + 8 * v20);
      }
      while (v36 == -1);
      v21 = __clz(__rbit64(~v36)) + (v20 << 6);
    }
    *(_QWORD *)(v15 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v21);
    *v22 = v31;
    v22[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v21) = v32;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v6 = v38;
  v26 = (_QWORD *)(v8 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v37 = 1 << *(_BYTE *)(v8 + 32);
  if (v37 >= 64)
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v37;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v6 = v10;
  return result;
}

uint64_t sub_1ABD234B8(uint64_t a1, char a2)
{
  return sub_1ABD231B4(a1, a2, &qword_1ED347308, (uint64_t)&qword_1ED34E0B0, (uint64_t)&protocolRef_FCHeadlineProviding);
}

uint64_t sub_1ABD234D4(uint64_t a1, void (*a2)(_QWORD *))
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    a2((_QWORD *)MEMORY[0x1E0DEE9E0]);
    return swift_bridgeObjectRelease();
  }
  sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FFD0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  sub_1ABF2FF5C();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v5 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v8 = *(v5 - 1);
    v7 = *v5;
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v9 + 32) = v8;
    *(_QWORD *)(v9 + 40) = v7;
    v10 = v4[2];
    swift_bridgeObjectRetain_n();
    if (v10)
    {
      sub_1ABF2FF5C();
      v11 = sub_1ABD00F9C(v8, v7);
      v12 = MEMORY[0x1E0DEE9D8];
      if ((v13 & 1) != 0)
      {
        v12 = *(_QWORD *)(v4[7] + 8 * v11);
        sub_1ABF2FF5C();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = MEMORY[0x1E0DEE9D8];
    }
    sub_1ABD23760(v12);
    v14 = v9;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = sub_1ABD00F9C(v8, v7);
    v18 = v4[2];
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
      break;
    v21 = v16;
    if (v4[3] >= v20)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v16 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1ABE6ECA4();
        if ((v21 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1ABD23C30(v20, isUniquelyReferenced_nonNull_native);
      v22 = sub_1ABD00F9C(v8, v7);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_26;
      v17 = v22;
      if ((v21 & 1) != 0)
      {
LABEL_3:
        v6 = v4[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v6 + 8 * v17) = v14;
        goto LABEL_4;
      }
    }
    v4[(v17 >> 6) + 8] |= 1 << v17;
    v24 = (uint64_t *)(v4[6] + 16 * v17);
    *v24 = v8;
    v24[1] = v7;
    *(_QWORD *)(v4[7] + 8 * v17) = v14;
    v25 = v4[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_25;
    v4[2] = v27;
    sub_1ABF2FF5C();
LABEL_4:
    v5 += 2;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      a2(v4);
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD23760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1ABD12054(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD238B0(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v6 = v5;
  v8 = *v5;
  sub_1ABE7102C(0, a3, a4, a5);
  v39 = a2;
  v9 = sub_1ABF31FFC();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v38 = v8 + 64;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v8 + 64);
  v37 = (unint64_t)(v11 + 63) >> 6;
  v14 = v9 + 64;
  result = sub_1ABF2FF68();
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v23 = v22 | (v16 << 6);
      goto LABEL_31;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v37)
      break;
    v25 = (_QWORD *)(v8 + 64);
    v26 = *(_QWORD *)(v38 + 8 * v24);
    ++v16;
    if (!v26)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v37)
        goto LABEL_33;
      v26 = *(_QWORD *)(v38 + 8 * v16);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v37)
        {
LABEL_33:
          swift_release();
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v26 = *(_QWORD *)(v38 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v16 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_42;
            if (v16 >= v37)
              goto LABEL_33;
            v26 = *(_QWORD *)(v38 + 8 * v16);
            ++v27;
            if (v26)
              goto LABEL_30;
          }
        }
        v16 = v27;
      }
    }
LABEL_30:
    v13 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
    v32 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v23);
    if ((v39 & 1) == 0)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v17 = -1 << *(_BYTE *)(v10 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v30 = v19 == v29;
        if (v19 == v29)
          v19 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v14 + 8 * v19);
      }
      while (v31 == -1);
      v20 = __clz(__rbit64(~v31)) + (v19 << 6);
    }
    *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v20);
    *v21 = v34;
    v21[1] = v33;
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v20) = v35;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v25 = (_QWORD *)(v8 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v8 + 32);
  if (v36 >= 64)
    bzero(v25, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v36;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v6 = v10;
  return result;
}

void sub_1ABD23BCC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1ABF32020();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1ABD23C30(uint64_t a1, char a2)
{
  return sub_1ABD238B0(a1, a2, &qword_1ED34CAB0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968]);
}

uint64_t sub_1ABD23C4C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint32_t v35;
  int v36;
  uint32_t v37;
  int v38;
  uint32_t v39;
  unsigned int v40;
  double v41;
  uint32_t v42;
  unsigned int v43;
  double v44;
  uint32_t v45;
  int v46;
  uint32_t v47;
  int v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v64[3];
  void (*v65)(uint64_t);
  char *v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v70 = sub_1ABF30760();
  v72 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v71 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v64 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v64 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v64 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v81 = (uint64_t)v64 - v22;
  MEMORY[0x1E0C80A78](v21);
  v80 = (uint64_t)v64 - v23;
  v24 = (int *)type metadata accessor for Quote();
  v25 = MEMORY[0x1E0C80A78](v24);
  v69 = (uint64_t)v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v28 = (double *)((char *)v64 - v27);
  v29 = *(_QWORD *)(a1 + 16);
  if (v29)
  {
    v64[2] = a3;
    v65 = a2;
    sub_1ABF2FF5C();
    v64[1] = a1;
    v30 = v20;
    v31 = (uint64_t *)(a1 + 40);
    v82 = MEMORY[0x1E0DEE9E0];
    v68 = xmmword_1ABF4C460;
    v66 = v14;
    v67 = v17;
    v32 = v72;
    do
    {
      v34 = *(v31 - 1);
      v33 = *v31;
      v77 = v29;
      v78 = v34;
      v79 = v33;
      sub_1ABF2FF5C();
      v35 = arc4random_uniform(0x64u);
      if (v35 <= 1)
        v36 = 1;
      else
        v36 = v35;
      v76 = v36;
      v37 = arc4random_uniform(0x64u);
      if (v37 <= 1)
        v38 = 1;
      else
        v38 = v37;
      v75 = v38;
      v39 = arc4random_uniform(0x64u);
      if (v39 <= 1)
        v40 = 1;
      else
        v40 = v39;
      v41 = (double)v40;
      v42 = arc4random_uniform(0x64u);
      if (v42 <= 1)
        v43 = 1;
      else
        v43 = v42;
      v44 = v41 / (double)v43;
      if ((arc4random_uniform(2u) & 1) == 0)
        v44 = -v44;
      v45 = arc4random_uniform(0x64u);
      if (v45 <= 1)
        v46 = 1;
      else
        v46 = v45;
      v74 = v46;
      v47 = arc4random_uniform(0x64u);
      if (v47 <= 1)
        v48 = 1;
      else
        v48 = v47;
      v73 = v48;
      v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
      v50 = v14;
      v51 = v70;
      v49(v80, 1, 1, v70);
      v49(v81, 1, 1, v51);
      sub_1ABF30754();
      v49((uint64_t)v30, 0, 1, v51);
      v49((uint64_t)v17, 1, 1, v51);
      v49((uint64_t)v50, 1, 1, v51);
      v52 = (uint64_t)v30;
      v53 = v71;
      sub_1ABF30754();
      sub_1ABF306C4();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v53, v51);
      v49((uint64_t)v11, 0, 1, v51);
      if (qword_1ED34E4A8 != -1)
        swift_once();
      v54 = (double)v76 / (double)v75;
      v31 += 2;
      v55 = (double)v74 / (double)v73;
      v56 = sub_1ABF3094C();
      v57 = __swift_project_value_buffer(v56, (uint64_t)qword_1ED368408);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16))((char *)v28 + v24[24], v57, v56);
      sub_1ABF30754();
      *v28 = v54;
      *((_BYTE *)v28 + 8) = 0;
      v28[2] = v44;
      *((_BYTE *)v28 + 24) = 0;
      v28[4] = v55;
      v28[6] = 0.0;
      *((_BYTE *)v28 + 56) = 1;
      v28[8] = 0.0;
      *((_BYTE *)v28 + 72) = 1;
      v28[10] = 0.0;
      *((_BYTE *)v28 + 88) = 1;
      v28[12] = 0.0;
      *((_BYTE *)v28 + 104) = 1;
      *((_OWORD *)v28 + 7) = v68;
      *((_BYTE *)v28 + 128) = 2;
      v58 = (uint64_t)v28 + v24[13];
      *((_BYTE *)v28 + 40) = 0;
      sub_1ABD241F8(v80, v58);
      sub_1ABD241F8(v81, (uint64_t)v28 + v24[14]);
      sub_1ABD241F8(v52, (uint64_t)v28 + v24[15]);
      *((_BYTE *)v28 + v24[16]) = 7;
      *((_BYTE *)v28 + v24[17]) = 7;
      *((_BYTE *)v28 + v24[18]) = 7;
      v59 = (char *)v28 + v24[19];
      *(_QWORD *)v59 = 0;
      v59[8] = 1;
      v17 = v67;
      sub_1ABD241F8((uint64_t)v67, (uint64_t)v28 + v24[20]);
      v14 = v66;
      sub_1ABD241F8((uint64_t)v66, (uint64_t)v28 + v24[21]);
      sub_1ABD241F8((uint64_t)v11, (uint64_t)v28 + v24[23]);
      v60 = v69;
      sub_1ABD24304((uint64_t)v28, v69);
      v61 = v82;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v83 = v61;
      sub_1ABD2423C(v60, v78, v79, isUniquelyReferenced_nonNull_native);
      v82 = v83;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = (char *)v52;
      v29 = v77 - 1;
    }
    while (v77 != 1);
    swift_bridgeObjectRelease();
    v65(v82);
  }
  else
  {
    a2(MEMORY[0x1E0DEE9E0]);
  }
  return swift_bridgeObjectRelease();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_1ABD241F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD226F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD2423C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ABDF0E40(a1, a2, a3, a4, (void (*)(void))sub_1ABE6E868, (void (*)(void))sub_1ABD2435C, (uint64_t (*)(_QWORD))type metadata accessor for Quote, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABD24260);
}

uint64_t sub_1ABD24260(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1ABD2426C(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
}

uint64_t sub_1ABD2426C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  v11 = a5[7];
  v12 = a6(0);
  result = sub_1ABCFE2AC(a4, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a6);
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_1ABD24304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD24348(uint64_t a1, int a2)
{
  return sub_1ABE6E120(a1, a2, type metadata accessor for Chart, &qword_1ED34E1B0);
}

uint64_t sub_1ABD2435C(uint64_t a1, int a2)
{
  return sub_1ABE6E120(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Quote, &qword_1ED34E1B8);
}

void sub_1ABD24370(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1ABF32020();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1ABD243CC(_QWORD *a1)
{
  return sub_1ABD243E0(a1);
}

uint64_t sub_1ABD243E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;

  sub_1ABCF4DA8(0, &qword_1ED34E2C0, (uint64_t (*)(void))sub_1ABD24628, (uint64_t)&type metadata for Chart.Entry.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD24628();
  sub_1ABF32368();
  v15 = 0;
  sub_1ABF30760();
  sub_1ABCFE1EC(&qword_1ED34EAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1ABF321D0();
  if (!v1)
  {
    type metadata accessor for Chart.Entry(0);
    v14 = 1;
    sub_1ABF32158();
    v13 = 2;
    sub_1ABF32158();
    v12 = 3;
    sub_1ABF32158();
    v11 = 4;
    sub_1ABF32158();
    v10 = 5;
    sub_1ABF32158();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1ABD24628()
{
  unint64_t result;

  result = qword_1ED34D9C8;
  if (!qword_1ED34D9C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AD38, &type metadata for Chart.Entry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D9C8);
  }
  return result;
}

uint64_t sub_1ABD2467C(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;

  v16 = a5;
  v6 = sub_1ABF309E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1ABF30988();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD24798();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *a2, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB57E8], v6);
  result = sub_1ABF30A24();
  *v16 = result;
  return result;
}

void sub_1ABD24798()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FA60)
  {
    sub_1ABF30988();
    sub_1ABD35568();
    v0 = sub_1ABF30A48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FA60);
  }
}

void sub_1ABD247F8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 41);
}

uint64_t sub_1ABD24804(uint64_t result)
{
  *(_QWORD *)(result + 104) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1ABD24814(uint64_t a1)
{
  return *(_QWORD *)(a1 + 104) >> 63;
}

double storeEnumTagSinglePayload for Headline(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 136) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 96) = 0;
      *(_QWORD *)(a1 + 104) = 2 * -a2;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Headline(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 104) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

unint64_t sub_1ABD248EC()
{
  return 0xD000000000000023;
}

void sub_1ABD24908(uint64_t a1, uint64_t a2)
{
  sub_1ABD24928(a1, a2);
}

void sub_1ABD24928(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

_QWORD *sub_1ABD24964@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v5;

  v3 = a1 & 1;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABE8DB5C(&v5, v1, v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  return v5;
}

void sub_1ABD24A68()
{
  sub_1ABF2FF5C();
  JUMPOUT(0x1ABD24A50);
}

uint64_t sub_1ABD24A70(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ABD24ACC((unint64_t *)&unk_1ED34D720, type metadata accessor for NewsUserProfileProvider, (uint64_t)&unk_1ABF46888);
  result = sub_1ABD24ACC(&qword_1ED34D718, type metadata accessor for NewsUserProfileProvider, (uint64_t)&unk_1ABF468B0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1ABD24ACC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2();
    result = MEMORY[0x1AF438F30](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for NewsUserProfileProvider()
{
  return objc_opt_self();
}

void sub_1ABD24B28(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  _QWORD v25[5];

  v7 = *(void **)(a5 + 16);
  v8 = objc_msgSend(v7, sel_subscriptionList);
  v9 = objc_msgSend(v8, sel_subscribedTagIDs);

  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  v10 = sub_1ABF31B1C();

  v11 = sub_1ABD24D68(v10);
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v7, sel_subscriptionList);
  v13 = objc_msgSend(v12, sel_mutedTagIDs);

  if (!v13)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v14 = sub_1ABF31B1C();

  v15 = sub_1ABD24D68(v14);
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v7, sel_subscriptionList);
  v17 = objc_msgSend(v16, sel_autoFavoriteTagIDs);

  if (!v17)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v18 = sub_1ABF31B1C();

  v19 = sub_1ABD24D68(v18);
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(*(id *)(a5 + 24), sel_allPurchasedTagIDs);
  if (v20)
  {
    v21 = v20;
    v22 = sub_1ABF31B1C();

    v23 = sub_1ABD24D68(v22);
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(*(id *)(a5 + 32), sel_cachedSubscription);
    v25[0] = v11;
    v25[1] = v15;
    v25[2] = v19;
    v25[3] = v23;
    v25[4] = v24;
    a1(v25);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_9:
  __break(1u);
}

_QWORD *sub_1ABD24D68(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1ABD94408((uint64_t)&v8, v3 + 4, v1, a1);
  sub_1ABF2FF5C();
  sub_1ABD97E10();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1ABD24E60(uint64_t a1, uint64_t a2)
{
  return sub_1ABD24E80(a1, a2);
}

uint64_t sub_1ABD24E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1ABF30AC0();
  v4 = (_QWORD *)(v2 + 136);
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 136);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v5 >> 62)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1AF4380CC](i, v5);
    }
    else
    {
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      sub_1ABF2FF68();
    }
    v10 = MEMORY[0x1AF4390D4](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v14;
LABEL_15:
  *v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for StockPriceDataManagerObserverProxy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1AF437C04](v13);
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  swift_endAccess();
  return sub_1ABF30ACC();
}

uint64_t type metadata accessor for StockPriceDataManagerObserverProxy()
{
  return objc_opt_self();
}

uint64_t sub_1ABD250E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1ABD250EC(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 <= 0x9F)
    return v1 >> 5;
  else
    return (v1 & 1) + 5;
}

uint64_t *sub_1ABD25108(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v11 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
    v12 = &v9[v11];
    v13 = &v10[v11];
    v14 = sub_1ABF30760();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v15(v12, v13, v14);
    v16 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v17 = (uint64_t *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  return v4;
}

_QWORD *sub_1ABD2521C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1ABF30760();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  sub_1ABF2FF5C();
  v8(v5, v6, v7);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ForYouConfigRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABD252D8 + 4 * byte_1ABF4C6A3[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABD2530C + 4 * byte_1ABF4C69E[v4]))();
}

uint64_t sub_1ABD2530C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD25314(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD2531CLL);
  return result;
}

uint64_t sub_1ABD25328(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD25330);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABD25334(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD2533C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for PermanentURLFactory.Container(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for NewsHeadlineScore()
{
  return &type metadata for NewsHeadlineScore;
}

uint64_t sub_1ABD253E8()
{
  return 0x6174656D5F736473;
}

_QWORD *initializeWithCopy for NewsUserProfile(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v6 = v5;
  return a1;
}

ValueMetadata *type metadata accessor for StockPriceData()
{
  return &type metadata for StockPriceData;
}

uint64_t StockPriceData.quotes.getter()
{
  return sub_1ABF2FF5C();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1ABD254AC()
{
  return sub_1ABD03B0C(&qword_1ED34FA30);
}

uint64_t sub_1ABD254C8()
{
  return sub_1ABD03B0C(&qword_1ED346CD8);
}

uint64_t sub_1ABD254E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  id v15;
  _QWORD v17[2];

  v1 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v1);
  v17[0] = sub_1ABF31774();
  v2 = *(_QWORD *)(v17[0] - 8);
  v3 = MEMORY[0x1E0C80A78](v17[0]);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v17 - v6;
  v8 = *v0;
  v10 = v0[3];
  v9 = v0[4];
  if (v10 == sub_1ABF317A4() && v9 == v11)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_1ABF2FF5C();
      return v8;
    }
  }
  sub_1ABF31738();
  v14 = v17[0];
  (*(void (**)(char *, char *, _QWORD))(v2 + 16))(v5, v7, v17[0]);
  if (qword_1ED34FD78 != -1)
    swift_once();
  v15 = (id)qword_1ED368428;
  sub_1ABF30844();
  v8 = sub_1ABF317EC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v14);
  return v8;
}

uint64_t type metadata accessor for Localized()
{
  return objc_opt_self();
}

uint64_t sub_1ABD256EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1ABD17050;
  v9[5] = v8;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

uint64_t sub_1ABD2579C()
{
  uint64_t v0;

  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_1ED34E878;
  sub_1ABF2FF5C();
  return v0;
}

uint64_t sub_1ABD25814()
{
  return 0x313434333431;
}

void sub_1ABD25828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABD25830(a1, a2, a3, a4, v4);
}

void sub_1ABD25830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = *(void **)(a5 + 16);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1ABD12970;
  *(_QWORD *)(v10 + 24) = v8;
  v12[4] = sub_1ABD12950;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1ABD127EC;
  v12[3] = &block_descriptor_29;
  v11 = _Block_copy(v12);
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v9, sel_prepareForUseWithCompletionHandler_, v11);
  _Block_release(v11);
}

uint64_t sub_1ABD25918()
{
  return 0x302E312E31;
}

uint64_t sub_1ABD25930()
{
  return sub_1ABF2FF68();
}

uint64_t sub_1ABD2593C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ABD25944()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABD25974()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABD259A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1ABD259B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1ABD259B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABD259C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t storeEnumTagSinglePayload for PaidBundleConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 36 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 36) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDB)
    return ((uint64_t (*)(void))((char *)&loc_1ABD25A14 + 4 * byte_1ABF3B85A[v4]))();
  *a1 = a2 + 36;
  return ((uint64_t (*)(void))((char *)sub_1ABD25A48 + 4 * byte_1ABF3B855[v4]))();
}

uint64_t sub_1ABD25A48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD25A50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD25A58);
  return result;
}

uint64_t sub_1ABD25A64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD25A6CLL);
  *(_BYTE *)result = a2 + 36;
  return result;
}

uint64_t sub_1ABD25A70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD25A78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for PaidBundleConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xDC)
    goto LABEL_17;
  if (a2 + 36 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 36) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 36;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 36;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 36;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x25;
  v8 = v6 - 37;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1ABD25B14(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1ABD25B1C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ABD25B24(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1ABD25B2C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_group;
  v4 = sub_1ABF30DCC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t sub_1ABD25B74()
{
  unint64_t result;

  result = qword_1ED346BA8;
  if (!qword_1ED346BA8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF483C8, &type metadata for HeadlineHistoryEntity);
    atomic_store(result, (unint64_t *)&qword_1ED346BA8);
  }
  return result;
}

unint64_t sub_1ABD25BB8()
{
  unint64_t result;

  result = qword_1ED346BA0;
  if (!qword_1ED346BA0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF483A0, &type metadata for HeadlineHistoryEntity);
    atomic_store(result, (unint64_t *)&qword_1ED346BA0);
  }
  return result;
}

uint64_t destroy for EndpointConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for EndpointConfiguration()
{
  return &type metadata for EndpointConfiguration;
}

uint64_t sub_1ABD25CAC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABD25CD8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1ABD25CE0()
{
  return 0x33312E302E31;
}

uint64_t sub_1ABD25CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;

  v9 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  v10 = v9;
  v21 = a5;
  if (!v9)
    goto LABEL_7;
  v11 = objc_msgSend(v9, sel_stocksLanguageCode);
  if (v11)
  {
    v12 = v11;
    sub_1ABF317A4();

  }
  v13 = objc_msgSend(v10, sel_stocksCountryCode, a2, a4, v21);
  if (v13)
  {
    v14 = v13;
    sub_1ABF317A4();

  }
  else
  {
LABEL_7:

  }
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABE11694(a1);
  swift_bridgeObjectRelease();
  v15 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v15);
  v16 = MEMORY[0x1E0DEA048];
  sub_1ABD25FA4(0, &qword_1ED34DE30, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_1ABF3127C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABF2FF68();
  v17 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v18 = (void *)sub_1ABF31114();
  sub_1ABD25FA4(0, (unint64_t *)&qword_1ED34DE58, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))v16);
  sub_1ABD34768();
  v19 = sub_1ABF31240();
  swift_release();

  return v19;
}

void sub_1ABD25FA4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, MEMORY[0x1E0DEA968], a3, MEMORY[0x1E0DEA978]);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1ABD25FF8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _BYTE v12[136];

  sub_1ABD261A4(a2, (uint64_t)v12);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34E588, (uint64_t (*)(uint64_t))sub_1ABD33C30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF31228();
  v4 = v2[6];
  v3 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  v5 = (void *)sub_1ABF31114();
  sub_1ABF31108();
  swift_release();
  swift_release();

  v6 = swift_allocObject();
  sub_1ABD261A4((uint64_t)v12, v6 + 16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1ABD3F354;
  *(_QWORD *)(v7 + 24) = v6;
  sub_1ABD448A0((uint64_t)v12);
  v8 = (void *)sub_1ABF31114();
  sub_1ABD33BC4();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v9 = (void *)sub_1ABF31114();
  sub_1ABD33E04();
  v10 = sub_1ABF31174();
  swift_release();

  return v10;
}

uint64_t sub_1ABD261A4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy136_8(a2, a1);
  return a2;
}

ValueMetadata *type metadata accessor for WatchlistSortState()
{
  return &type metadata for WatchlistSortState;
}

uint64_t storeEnumTagSinglePayload for ForYouConfigRecord.Configuration.TopStories.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABD2623C + 4 * byte_1ABF4C68F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABD26270 + 4 * byte_1ABF4C68A[v4]))();
}

uint64_t sub_1ABD26270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD26278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD26280);
  return result;
}

uint64_t sub_1ABD2628C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD26294);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABD26298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD262A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD262AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate;
  swift_beginAccess();
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1ABD26310()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_isFirstLaunch);
}

uint64_t sub_1ABD26320()
{
  return 0x322E302E31;
}

uint64_t sub_1ABD26334()
{
  return 0x302E302E31;
}

uint64_t storeEnumTagSinglePayload for HeadlineMetadata.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABD26388 + 4 * byte_1ABF39714[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABD263A8 + 4 * byte_1ABF39719[v4]))();
}

_BYTE *sub_1ABD26388(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABD263A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD263B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD263B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD263C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD263C8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1ABD263D4()
{
  return 0x617461646174656DLL;
}

double sub_1ABD263EC()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

uint64_t sub_1ABD263F4()
{
  return sub_1ABF2FF5C();
}

double sub_1ABD263FC()
{
  uint64_t v0;

  return *(double *)(v0 + 160);
}

double sub_1ABD26404()
{
  uint64_t v0;

  return *(double *)(v0 + 240);
}

uint64_t sub_1ABD2640C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1200);
}

uint64_t sub_1ABD26414()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3024);
}

uint64_t sub_1ABD2641C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350C50);
  result = sub_1ABF30B68();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350C60);
  result = sub_1ABF30B68();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, &qword_1ED350D88);
  result = sub_1ABF30B68();
  if (result)
  {
    v7 = result;
    type metadata accessor for NewsUserProfileProvider();
    v8 = (_QWORD *)swift_allocObject();
    v8[2] = v5;
    v8[3] = v6;
    v8[4] = v7;
    result = sub_1ABCFE22C(&qword_1ED34D730, 255, (uint64_t (*)(uint64_t))type metadata accessor for NewsUserProfileProvider, (uint64_t)&unk_1ABF46918);
    *a2 = v8;
    a2[1] = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void destroy for NewsUserProfile(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

ValueMetadata *type metadata accessor for NewsEnvironment()
{
  return &type metadata for NewsEnvironment;
}

uint64_t sub_1ABD265C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[3120];
  _BYTE __src[3120];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  sub_1ABD38C04(v1);
  v4 = type metadata accessor for StubAppConfigurationManager();
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = 1;
  *(_BYTE *)(v5 + 40) = 0;
  *(_QWORD *)(v5 + 56) = 0;
  *(_QWORD *)(v5 + 64) = 0;
  *(_QWORD *)(v5 + 48) = 0;
  memcpy(v7, __src, sizeof(v7));
  sub_1ABD04578(0, &qword_1ED34FA90, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E0DB39E0]);
  swift_allocObject();
  sub_1ABDC1FEC((uint64_t)__src);
  *(_QWORD *)(v5 + 32) = sub_1ABF30CD0();
  memcpy(v7, __src, sizeof(v7));
  sub_1ABD04578(0, &qword_1ED34FA88, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E0DB3938]);
  swift_allocObject();
  result = sub_1ABF30C7C();
  *(_QWORD *)(v5 + 24) = result;
  v3[3] = v4;
  v3[4] = (uint64_t)&off_1E5AEF2F0;
  *v3 = v5;
  return result;
}

ValueMetadata *type metadata accessor for QuoteSource()
{
  return &type metadata for QuoteSource;
}

uint64_t sub_1ABD26708@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  unsigned int v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  unsigned int v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  char *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  unsigned int v56;
  void *v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  uint64_t v65;
  void (*v66)(_BYTE *, uint64_t);
  uint64_t result;
  _BYTE v68[12];
  int v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  id v76[2];
  id v77[4];

  v69 = a2;
  v75 = a3;
  v77[3] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1ABF305D4();
  v73 = *(_QWORD *)(v4 - 8);
  v74 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v68[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = &v68[-v9];
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = &v68[-v12];
  v70 = a1;
  v15 = (char *)sub_1ABD46C7C(v11, v14);
  if (qword_1ED350AA0 != -1)
    swift_once();
  sub_1ABCF5804((uint64_t)v13);
  v72 = v13;
  sub_1ABF3055C();
  v16 = (void *)objc_opt_self();
  v17 = (void *)sub_1ABF30550();
  v18 = objc_msgSend(v16, sel_preferredFileURLForSchema_parentDirectoryURL_, v15, v17);

  sub_1ABF30580();
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_defaultManager);
  v21 = (void *)sub_1ABF30550();
  sub_1ABD3492C(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for FileAttributeKey(0);
  sub_1ABCFE22C(&qword_1ED34E080, 255, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1ABF36DB8);
  v22 = (void *)sub_1ABF31618();
  swift_bridgeObjectRelease();
  v77[0] = 0;
  v23 = objc_msgSend(v20, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v21, 1, v22, v77);

  if (v23)
  {
    v24 = v77[0];
  }
  else
  {
    v25 = v77[0];
    v26 = (void *)sub_1ABF3046C();

    swift_willThrow();
  }
  sub_1ABD46F6C((uint64_t)v7, v15);
  if (qword_1ED34E050 != -1)
    swift_once();
  swift_beginAccess();
  v27 = (id)qword_1ED34E048;
  v28 = (void *)sub_1ABF31780();
  v29 = objc_msgSend(v27, sel_BOOLForKey_, v28);

  if (v29)
  {
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v30 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    v31 = (id)qword_1ED34E048;
    v32 = (void *)sub_1ABF31780();
    objc_msgSend(v31, sel_setBool_forKey_, 0, v32);

    v33 = objc_msgSend(v19, sel_defaultManager);
    v34 = (void *)sub_1ABF30550();
    v76[0] = 0;
    LODWORD(v32) = objc_msgSend(v33, sel_removeItemAtURL_error_, v34, v76);

    if ((_DWORD)v32)
    {
      v35 = v76[0];
    }
    else
    {
      v36 = v76[0];
      v37 = (void *)sub_1ABF3046C();

      swift_willThrow();
    }
  }
  v38 = (id)qword_1ED34E048;
  v39 = (void *)sub_1ABF31780();
  objc_msgSend(v38, sel_setBool_forKey_, 1, v39);

  sub_1ABCF5A54(0, &qword_1ED34E378, (uint64_t (*)(uint64_t))sub_1ABD32960, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1ABF49F70;
  type metadata accessor for UpdateUserIDCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(_QWORD *)(v40 + 32) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateAdsUserIDCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(_QWORD *)(v40 + 40) = swift_getObjCClassMetadata();
  sub_1ABCF7BCC(0, &qword_1ED34E168);
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(_QWORD *)(v40 + 48) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateUserStartDateCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(_QWORD *)(v40 + 56) = swift_getObjCClassMetadata();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED34E130);
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(_QWORD *)(v40 + 64) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateUpsellAppLaunchCountCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(_QWORD *)(v40 + 72) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateLastAppLaunchUpsellInstanceIDCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(_QWORD *)(v40 + 80) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateAppLaunchUpsellLastSeenDateCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(_QWORD *)(v40 + 88) = swift_getObjCClassMetadata();
  type metadata accessor for UpdateAppReviewRequestLastSeenDateCommand();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForKeyedUnarchiver);
  *(_QWORD *)(v40 + 96) = swift_getObjCClassMetadata();
  v41 = (void *)objc_opt_self();
  v42 = objc_msgSend(v41, sel_supportedCommands);
  sub_1ABD32960();
  v43 = sub_1ABF31A08();

  v76[0] = (id)v40;
  v44 = v15;
  sub_1ABD33FE8(v43);
  v45 = objc_allocWithZone((Class)SCWDatabaseJSONStore);
  v46 = (void *)sub_1ABF30550();
  v47 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  v48 = objc_msgSend(v45, sel_initWithSchema_fileURL_allowedCommandClasses_, v44, v46, v47);

  v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C8F2B8]), sel_init);
  v50 = objc_msgSend(v49, sel_aa_primaryAppleAccount);

  v71 = v7;
  if (v50)
  {
    if ((objc_msgSend(v50, sel_sc_isEnabledForStocksDataclass) & 1) != 0)
    {
      if ((v69 & 1) != 0)
      {
        v51 = v10;
        v52 = 3;
        goto LABEL_20;
      }
      v51 = v10;
      sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
      v53 = sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();

      v52 = 1;
    }
    else
    {
      v51 = v10;
      sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
      v53 = sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();

      v52 = 0;
    }
    v50 = (id)v53;
  }
  else
  {
    v51 = v10;
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v50 = (id)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();
    v52 = 0;
  }
LABEL_20:

  v54 = (id)qword_1ED34E048;
  v55 = (void *)sub_1ABF31780();
  v56 = objc_msgSend(v54, sel_BOOLForKey_, v55);

  if (v56)
  {
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v57 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    v52 |= 4uLL;
    v58 = (id)qword_1ED34E048;
    v59 = (void *)sub_1ABF31780();
    objc_msgSend(v58, sel_setBool_forKey_, 0, v59);

    if (qword_1ED346CA8 != -1)
      swift_once();
    LOBYTE(v76[0]) = 0;
    type metadata accessor for LegacyStocksAssembly();
    sub_1ABCFE22C(&qword_1EEC44900, v60, (uint64_t (*)(uint64_t))type metadata accessor for LegacyStocksAssembly, (uint64_t)&unk_1ABF49FD8);
    sub_1ABF30A60();
  }
  sub_1ABD32A94();
  v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1ABF3EC20;
  *(_QWORD *)(v61 + 32) = objc_msgSend(v41, sel_zoneMergeHandler);
  type metadata accessor for UserInfoMergeHandler();
  *(_QWORD *)(v61 + 40) = swift_allocObject();
  v76[0] = (id)v61;
  sub_1ABF31A20();
  v62 = objc_allocWithZone((Class)SCWDatabase);
  sub_1ABD33604();
  v63 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  v64 = objc_msgSend(v62, sel_initWithSchema_store_features_mergeHandlers_containerProxy_, v44, v48, v52, v63, 0);

  v65 = v74;
  v66 = *(void (**)(_BYTE *, uint64_t))(v73 + 8);
  v66(v71, v74);
  v66(v51, v65);
  result = ((uint64_t (*)(_BYTE *, uint64_t))v66)(v72, v65);
  *v75 = v64;
  return result;
}

void sub_1ABD2724C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1ABD0B5F4((const void *)(v1 + 16), a1);
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

uint64_t sub_1ABD272B8(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_1ABF2FF68();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1ABD27320(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1ABD2732C(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(id))(v2 + 32));
}

void sub_1ABD2732C(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(id))
{
  void *v7;
  id v8;

  if (a2)
  {
    a3(a2);
  }
  else
  {
    if (a1)
    {
      v7 = (void *)sub_1ABF31780();
      v8 = objc_msgSend(a1, sel_recordWithName_, v7);

    }
    else
    {
      v8 = 0;
    }
    a5(v8);

  }
}

void sub_1ABD273DC(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v9 = *a1;
  v10 = (void *)sub_1ABF31780();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v13[4] = sub_1ABD27320;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1ABD272B8;
  v13[3] = &block_descriptor_9;
  v12 = _Block_copy(v13);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v9, sel_readContentsOfZone_withBlock_, v10, v12);
  _Block_release(v12);

}

void sub_1ABD27588(void *a1, void *a2, void *a3)
{
  uint64_t *v3;
  uint64_t v4;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  unint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  int64_t v36;
  char v37;
  char v38;
  int64_t v39;
  int64_t v40;
  int64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t ObjectType;
  void (*v56)(uint64_t *, uint64_t, unint64_t, uint64_t, uint64_t);
  void *v57;
  objc_class *updated;
  char *v59;
  uint64_t *v60;
  id v61;
  void *v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _UNKNOWN **v71;
  id v72;
  uint64_t v73;
  objc_super v74;

  v4 = (uint64_t)v3;
  v67 = *v3;
  v8 = (void *)sub_1ABF31780();
  v9 = objc_msgSend(a2, sel_recordWithName_, v8);

  v66 = a2;
  if (v9
    && (v10 = objc_msgSend(v9, sel_encryptedValues),
        v9,
        v11 = (void *)sub_1ABF31780(),
        v12 = objc_msgSend(v10, sel_objectForKeyedSubscript_, v11),
        swift_unknownObjectRelease(),
        v11,
        v12))
  {
    v72 = v12;
    sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
    v13 = swift_dynamicCast();
    if (v13)
      v14 = v68;
    else
      v14 = 0;
    if (v13)
      v15 = v69;
    else
      v15 = 0;
  }
  else
  {
    v14 = 0;
    v15 = 0;
  }
  v16 = (void *)sub_1ABF31780();
  v17 = objc_msgSend(a3, sel_recordWithName_, v16);

  if (!v17)
    goto LABEL_17;
  v18 = objc_msgSend(v17, sel_encryptedValues);

  v63 = a3;
  v19 = (void *)sub_1ABF31780();
  v20 = objc_msgSend(v18, sel_objectForKeyedSubscript_, v19);
  swift_unknownObjectRelease();

  a3 = v63;
  if (!v20 || (v72 = v20, sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70), (swift_dynamicCast() & 1) == 0))
  {
LABEL_17:
    if (!v15)
      goto LABEL_19;
    goto LABEL_18;
  }
  v21 = v69;
  if (v15)
  {
    if (v68 == v14 && v15 == v69)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    v49 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    v21 = v69;
    if ((v49 & 1) != 0)
      goto LABEL_18;
  }
  v64 = v68;
  v65 = v21;
  swift_beginAccess();
  v50 = *(_QWORD *)(v4 + 24);
  if (v50 >> 62)
  {
    sub_1ABF2FF5C();
    v51 = sub_1ABF31FE4();
    if (v51)
      goto LABEL_59;
LABEL_72:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1ABF2FF5C();
  if (!v51)
    goto LABEL_72;
LABEL_59:
  v62 = a1;
  if (v51 < 1)
  {
    __break(1u);
    return;
  }
  v52 = 0;
  do
  {
    if ((v50 & 0xC000000000000001) != 0)
    {
      v53 = MEMORY[0x1AF4380CC](v52, v50);
    }
    else
    {
      v53 = *(_QWORD *)(v50 + 8 * v52 + 32);
      sub_1ABF2FF68();
    }
    v70 = v67;
    v71 = &off_1E5AF0AA0;
    v68 = v4;
    if (MEMORY[0x1AF4390D4](v53 + 16))
    {
      v54 = *(_QWORD *)(v53 + 24);
      ObjectType = swift_getObjectType();
      v56 = *(void (**)(uint64_t *, uint64_t, unint64_t, uint64_t, uint64_t))(v54 + 8);
      swift_retain_n();
      v56(&v68, v64, v65, ObjectType, v54);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_retain_n();
    }
    ++v52;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
    swift_release();
    swift_release();
  }
  while (v51 != v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1 = v62;
  a3 = v63;
LABEL_19:
  v22 = (void *)sub_1ABF31780();
  v23 = objc_msgSend(v66, sel_recordWithName_, v22);

  if (v23 && (v24 = sub_1ABF31CFC(), v23, v24))
  {
    v73 = v24;
    sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
    v25 = swift_dynamicCast();
    if (v25)
      v26 = v68;
    else
      v26 = 0;
    if (v25)
      v27 = v69;
    else
      v27 = 0;
  }
  else
  {
    v26 = 0;
    v27 = 0;
  }
  v28 = (void *)sub_1ABF31780();
  v29 = objc_msgSend(a3, sel_recordWithName_, v28);

  if (v29 && (v30 = sub_1ABF31CFC(), v29, v30))
  {
    v73 = v30;
    sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
    v31 = swift_dynamicCast();
    if (v31)
      v32 = v68;
    else
      v32 = 0;
    if (v31)
      v33 = v69;
    else
      v33 = 0;
    if (!v27)
      goto LABEL_49;
  }
  else
  {
    v32 = 0;
    v33 = 0;
    if (!v27)
    {
LABEL_49:
      swift_bridgeObjectRelease();
      return;
    }
  }
  if (!v33)
    goto LABEL_49;
  v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0)
    v34 = v32 & 0xFFFFFFFFFFFFLL;
  if (!v34)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  sub_1ABF2FF5C();
  sub_1ABDDED88(v26, v27);
  v36 = v35;
  v38 = v37;
  swift_bridgeObjectRelease();
  if ((v38 & 1) != 0)
    v39 = 0x8000000000000000;
  else
    v39 = v36;
  sub_1ABF2FF5C();
  sub_1ABDDED88(v32, v33);
  v41 = v40;
  v43 = v42;
  swift_bridgeObjectRelease();
  if ((v43 & 1) != 0)
  {
    if (v39 == 0x8000000000000000)
      goto LABEL_48;
  }
  else if (v41 >= v39)
  {
    goto LABEL_48;
  }
  if (qword_1EEC40EC8 != -1)
    swift_once();
  v44 = sub_1ABF3133C();
  __swift_project_value_buffer(v44, (uint64_t)qword_1EEC41E58);
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  v45 = sub_1ABF31324();
  v46 = sub_1ABF31BF4();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v68 = v48;
    *(_DWORD *)v47 = 136315394;
    sub_1ABF2FF5C();
    v73 = sub_1ABD1FE2C(v32, v33, &v68);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v47 + 12) = 2080;
    sub_1ABF2FF5C();
    v73 = sub_1ABD1FE2C(v26, v27, &v68);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v45, v46, "Received an invalid lastAppLaunchUpsellInstanceID [%s], restoring record back to [%s]", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v48, -1, -1);
    MEMORY[0x1AF438FFC](v47, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v57 = (void *)sub_1ABF31780();
  updated = (objc_class *)type metadata accessor for UpdateLastAppLaunchUpsellInstanceIDCommand();
  v59 = (char *)objc_allocWithZone(updated);
  v60 = (uint64_t *)&v59[OBJC_IVAR___SCUpdateLastAppLaunchUpsellInstanceIDCommand_lastAppLaunchUpsellInstanceID];
  *v60 = v26;
  v60[1] = v27;
  v74.receiver = v59;
  v74.super_class = updated;
  v61 = objc_msgSendSuper2(&v74, sel_init);
  objc_msgSend(a1, sel_modifyContentsOfZone_withCommand_, v57, v61);

}

id SCWDatabaseLog()
{
  if (SCWDatabaseLog_onceToken != -1)
    dispatch_once(&SCWDatabaseLog_onceToken, &__block_literal_global);
  return (id)SCWDatabaseLog_databaseLog;
}

void sub_1ABD29B8C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  sub_1ABF2FF68();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1ABD29BDC(void *a1)
{
  uint64_t v1;

  return sub_1ABD29BE4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1ABD29BE4(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v4 = objc_msgSend(a1, sel_encryptedValues);
  v5 = (void *)sub_1ABF31780();
  v6 = objc_msgSend(v4, sel_objectForKeyedSubscript_, v5);

  swift_unknownObjectRelease();
  if ((sub_1ABD29D00(a2, (uint64_t)v6) & 1) != 0)
  {
    v7 = objc_msgSend(a1, sel_encryptedValues);
    v8 = (void *)sub_1ABF306D0();
    v9 = (void *)sub_1ABF31780();
    objc_msgSend(v7, sel_setObject_forKeyedSubscript_, v8, v9);
    swift_unknownObjectRelease();

  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1ABD29D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  char v12;
  _QWORD v14[2];

  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF30760();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_BYTE *)(a1 + OBJC_IVAR___SCUpdateUserStartDateCommand_mergePolicy))
  {
    v12 = a2 == 0;
    return v12 & 1;
  }
  if (*(_BYTE *)(a1 + OBJC_IVAR___SCUpdateUserStartDateCommand_mergePolicy) == 1)
  {
LABEL_9:
    v12 = 1;
    return v12 & 1;
  }
  if (!a2)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_8;
  }
  v14[1] = a2;
  sub_1ABE404D4();
  swift_unknownObjectRetain();
  v11 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, v11 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_8:
    sub_1ABCFC3BC((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v12 = sub_1ABF306E8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12 & 1;
}

void sub_1ABD2ADE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1ABD2B300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t objectdestroy_4Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_4Tm_0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABD061E8(0, (unint64_t *)&unk_1ED34C8D8, MEMORY[0x1E0DB2A80]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABD1E8C8(0, &qword_1ED34DD90, MEMORY[0x1E0DB2A80]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_1()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABD2E138(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABD2EE54(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1ABD2E150@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1ABD2E16C(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1ABD2E16C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>);
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *a1;
  v25 = a3;
  v26 = a4;
  v8 = type metadata accessor for ScoredArticle(255, a3, a4, a4);
  v9 = sub_1ABF31A98();
  MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v9);
  sub_1ABF31948();
  sub_1ABF31924();
  swift_bridgeObjectRelease();
  v27 = v28;
  v22 = a3;
  v23 = a4;
  v24 = a2;
  v17 = a3;
  v18 = a4;
  v19 = sub_1ABD2E330;
  v20 = &v21;
  v10 = sub_1ABF31FD8();
  v11 = MEMORY[0x1AF438F30](MEMORY[0x1E0DECC68], v10);
  v13 = sub_1ABEC7708((void (*)(char *, char *))sub_1ABEC81E0, (uint64_t)v16, v10, v8, MEMORY[0x1E0DEDCE8], v11, MEMORY[0x1E0DEDD18], v12);
  result = swift_bridgeObjectRelease();
  *a5 = v13;
  return result;
}

uint64_t sub_1ABD2E2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for ScoredArticle(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_1ABF31A80();
}

void sub_1ABD2E330(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_1ABD2E33C(a1, a2, *(_QWORD **)(v3 + 32), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

void sub_1ABD2E33C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  long double v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  double v50;

  v35 = a5;
  v36 = a6;
  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2 + *(int *)(type metadata accessor for ScoredArticle(0, v13, v14, v13) + 36);
  v16 = *(double *)v15;
  v33 = *(_OWORD *)(v15 + 8);
  v32 = *(_QWORD *)(v15 + 24);
  v31 = *(_QWORD *)(v15 + 32);
  v17 = *(_QWORD *)(v15 + 40);
  v18 = *(_QWORD *)(v15 + 48);
  v30 = *(unsigned __int8 *)(v15 + 56);
  v19 = *(_QWORD *)(v15 + 64);
  v29 = *(_QWORD *)(v15 + 72);
  v20 = *(double *)(v15 + 104);
  v34 = *(_QWORD *)(v15 + 96);
  v21 = a3 + 1;
  v23 = a3[4];
  v22 = a3[5];
  __swift_project_boxed_opaque_existential_1(a3 + 1, v23);
  v24 = (*(double (**)(uint64_t, uint64_t))(v22 + 160))(v23, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, a4);
  v25 = a3[4];
  v26 = a3[5];
  __swift_project_boxed_opaque_existential_1(v21, v25);
  v27 = (*(double (**)(uint64_t, uint64_t))(v26 + 128))(v25, v26);
  v28 = pow(1.0 - v27, (double)a1);
  v37 = v16;
  v38 = v33;
  v39 = v32;
  v40 = v31;
  v41 = v17;
  v42 = v18;
  v43 = v30;
  v44 = v19;
  v45 = v29;
  v46 = a1;
  v47 = 0;
  v48 = v34;
  v49 = v20;
  v50 = v16 * v24 + (1.0 - v24) * (v20 * v28);
  sub_1ABD2E558((uint64_t)v12, (__int128 *)&v37, a4, v35, v36);
}

__n128 sub_1ABD2E558@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 result;
  __n128 v22;
  __int128 v23;

  v8 = *((_QWORD *)a2 + 2);
  v9 = *((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 4);
  v11 = *((_QWORD *)a2 + 5);
  v12 = *((_QWORD *)a2 + 6);
  v13 = *((_BYTE *)a2 + 56);
  v14 = *((_QWORD *)a2 + 8);
  v15 = *((_QWORD *)a2 + 9);
  v16 = *((_QWORD *)a2 + 10);
  v17 = *((_QWORD *)a2 + 11);
  v22 = (__n128)a2[6];
  v23 = *a2;
  v18 = *((_QWORD *)a2 + 14);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v20 = a5 + *(int *)(type metadata accessor for ScoredArticle(0, a3, a4, v19) + 36);
  *(_OWORD *)v20 = v23;
  *(_QWORD *)(v20 + 16) = v8;
  *(_QWORD *)(v20 + 24) = v9;
  *(_QWORD *)(v20 + 32) = v10;
  *(_QWORD *)(v20 + 40) = v11;
  *(_QWORD *)(v20 + 48) = v12;
  *(_BYTE *)(v20 + 56) = v13;
  *(_QWORD *)(v20 + 64) = v14;
  *(_QWORD *)(v20 + 72) = v15;
  *(_QWORD *)(v20 + 80) = v16;
  *(_QWORD *)(v20 + 88) = v17;
  result = v22;
  *(__n128 *)(v20 + 96) = v22;
  *(_QWORD *)(v20 + 112) = v18;
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1AF438EC4](a1, v6, a5);
}

uint64_t type metadata accessor for ScoredArticle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScoredArticle);
}

void sub_1ABD2E678(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  ArticleScorer.score<A>(article:)(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void ArticleScorer.score<A>(article:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  BOOL v40;
  double v41;
  double v42;
  char v43;
  char *v44;
  double v45;
  double v46;
  double v47;
  _QWORD v48[3];
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  _OWORD v69[2];
  uint64_t v70;
  __int128 v71;
  char v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;

  v5 = v4;
  v10 = sub_1ABF30760();
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v53 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v14, a1, a2);
  v16 = (*(double (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  v17 = (*(double (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  v18 = (*(double (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  sub_1ABD2EA94(a1, v4, a2, a3);
  v20 = v19;
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
  v22 = *(_QWORD *)(v21 + 16);
  v56 = a4;
  if (!v22)
  {
    swift_bridgeObjectRelease();
    v24 = 0;
    goto LABEL_30;
  }
  v48[1] = v21;
  v48[2] = a1;
  v50 = v14;
  v51 = a2;
  v52 = a3;
  v23 = 0;
  v24 = 0;
  v25 = v21 + 32;
  v49 = v5;
  v26 = *v5;
  v27 = *(_QWORD *)(*v5 + 16);
  v28 = *v5 + 56;
  v58 = v22;
  v59 = (_QWORD *)v28;
  v57 = v21 + 32;
  while (1)
  {
    if (v27)
    {
      v29 = (uint64_t *)(v25 + 16 * v23);
      v30 = *v29;
      v31 = v29[1];
      if (*(_QWORD *)(v26 + 32) == *v29 && *(_QWORD *)(v26 + 40) == v31)
      {
        v34 = 1;
      }
      else
      {
        v33 = sub_1ABF3223C();
        v34 = v33 & 1;
        if ((v33 & 1) == 0 && v27 != 1)
        {
          v35 = v59;
          v36 = 1;
          while (1)
          {
            v37 = v36 + 1;
            if (__OFADD__(v36, 1))
            {
              __break(1u);
              return;
            }
            v38 = *(v35 - 1) == v30 && *v35 == v31;
            if (v38 || (sub_1ABF3223C() & 1) != 0)
              break;
            v35 += 2;
            ++v36;
            if (v37 == v27)
            {
              v39 = 0;
              goto LABEL_25;
            }
          }
          v39 = 1;
LABEL_25:
          v25 = v57;
          v22 = v58;
          v40 = __OFADD__(v24, v39);
          v24 += v39;
          if (v40)
            break;
          goto LABEL_22;
        }
      }
      v40 = __OFADD__(v24, v34);
      v24 += v34;
      if (v40)
        break;
    }
LABEL_22:
    if (++v23 == v22)
      goto LABEL_28;
  }
  __break(1u);
LABEL_28:
  swift_bridgeObjectRelease();
  a2 = v51;
  a3 = v52;
  v5 = v49;
  v14 = v50;
LABEL_30:
  v41 = (*(double (**)(uint64_t, uint64_t))(a3 + 64))(a2, a3);
  v42 = (*(double (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 96))(a2, a3);
  v44 = v53;
  (*(void (**)(uint64_t, uint64_t))(a3 + 80))(a2, a3);
  type metadata accessor for ArticleScorer();
  sub_1ABF30670();
  v46 = v45 * 1000.0;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v55);
  v47 = (*(double (**)(uint64_t, uint64_t))(a3 + 88))(a2, a3);
  *(double *)&v60 = v16;
  *((double *)&v60 + 1) = v17;
  *(double *)&v61 = v18;
  *((_QWORD *)&v61 + 1) = v20;
  v62 = v24;
  *(double *)&v63 = v41;
  *((double *)&v63 + 1) = v42;
  v64 = v43 & 1;
  *(double *)&v65 = v46;
  *((double *)&v65 + 1) = v47;
  v66 = 0u;
  v67 = 0u;
  v68 = 0;
  sub_1ABEC71D8((uint64_t)&v60, v5 + 1, (uint64_t)v69);
  v60 = v69[0];
  v61 = v69[1];
  v62 = v70;
  v63 = v71;
  v64 = v72;
  v65 = v73;
  v66 = v74;
  v67 = v75;
  v68 = v76;
  sub_1ABD2E558((uint64_t)v14, &v60, a2, a3, v56);
}

uint64_t type metadata accessor for ArticleScorer()
{
  uint64_t result;

  result = qword_1ED34CE60;
  if (!qword_1ED34CE60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD2EA94(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;

  v5 = a3;
  v53 = a2;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(v5, a4);
  v52 = *(_QWORD *)(v9 + 16);
  if (!v52)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 8))(v54, v5, a4);
    v39 = v55;
    v40 = v56;
    __swift_project_boxed_opaque_existential_1(v54, v55);
    if ((*(double (**)(uint64_t, uint64_t))(v40 + 24))(v39, v40) > 0.0)
    {
      v41 = v55;
      v42 = v56;
      __swift_project_boxed_opaque_existential_1(v54, v55);
      (*(void (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
      v43 = v55;
      v44 = v56;
      __swift_project_boxed_opaque_existential_1(v54, v55);
      (*(double (**)(uint64_t, uint64_t))(v44 + 24))(v43, v44);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v46 = a4;
  v47 = v8;
  v48 = v6;
  v49 = v5;
  v10 = 0;
  v45 = v9;
  v51 = v9 + 32;
  v11 = 0.0;
  v12 = 0.0;
  do
  {
    v13 = (_QWORD *)(v51 + 40 * v10);
    v14 = (_QWORD *)*v53;
    v15 = v13[3];
    v17 = v13[4];
    v16 = v13 + 4;
    __swift_project_boxed_opaque_existential_1(v13, v15);
    v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
    sub_1ABF2FF5C();
    v19 = v18(v15, v17);
    v21 = v20;
    v22 = v14[2];
    if (!v22)
      goto LABEL_3;
    v23 = v19;
    v50 = v13 + 3;
    if (v14[4] != v19 || v14[5] != v20)
    {
      result = sub_1ABF3223C();
      if ((result & 1) == 0)
      {
        if (v22 != 1)
        {
          v35 = v14 + 7;
          v36 = 1;
          while (1)
          {
            v37 = v36 + 1;
            if (__OFADD__(v36, 1))
              break;
            if (*(v35 - 1) == v23 && *v35 == v21)
              goto LABEL_11;
            result = sub_1ABF3223C();
            if ((result & 1) != 0)
              goto LABEL_11;
            v35 += 2;
            ++v36;
            if (v37 == v22)
              goto LABEL_3;
          }
          __break(1u);
          return result;
        }
LABEL_3:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1ABD07E04((uint64_t)v13, (uint64_t)v54);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
        goto LABEL_4;
      }
    }
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABD07E04((uint64_t)v13, (uint64_t)v54);
    v26 = v55;
    v27 = v56;
    __swift_project_boxed_opaque_existential_1(v54, v55);
    v28 = (*(double (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
    if (v28 > 0.0)
    {
      v29 = v50;
      v30 = *v50;
      v31 = *v16;
      __swift_project_boxed_opaque_existential_1(v13, *v50);
      v32 = (*(double (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
      v33 = *v29;
      v34 = *v16;
      __swift_project_boxed_opaque_existential_1(v13, *v29);
      v11 = v11 + v32 / (*(double (**)(uint64_t, uint64_t))(v34 + 24))(v33, v34);
      v12 = v12 + 1.0;
    }
LABEL_4:
    ++v10;
  }
  while (v10 != v52);
  swift_bridgeObjectRelease();
  v6 = v48;
  v5 = v49;
  a4 = v46;
  v8 = v47;
  if (v12 == 0.0)
    goto LABEL_26;
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_1ABD2EE20()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t sub_1ABD2EE28()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABD2EE54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v10 = v9;
  v11 = *a1;
  v20 = v8;
  v21 = v9;
  v13 = type metadata accessor for ScoredArticle(255, a3, a4, v12);
  v14 = sub_1ABF31A98();
  sub_1ABF2FF5C();
  MEMORY[0x1AF4378BC](&v22, &v20, v11, MEMORY[0x1E0DEA968], v14, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  if (!v22)
    sub_1ABF31A68();
  sub_1ABF32200();
  v15 = *(_QWORD *)(v13 - 8);
  swift_allocObject();
  v16 = sub_1ABF31A44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v17, a2, v13);
  sub_1ABD2F088(v16);
  v18 = sub_1ABF31A5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = v18;
  v20 = v8;
  v21 = v10;
  sub_1ABF31690();
  return sub_1ABF316A8();
}

uint64_t sub_1ABD2EFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)(v8 + 48);
  v11 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 48) = v9;
  *(_OWORD *)v7 = v11;
  *(_OWORD *)(v7 + 16) = v10;
  v13 = *(_OWORD *)(v8 + 80);
  v12 = *(_OWORD *)(v8 + 96);
  v14 = *(_OWORD *)(v8 + 64);
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(v8 + 112);
  *(_OWORD *)(v7 + 80) = v13;
  *(_OWORD *)(v7 + 96) = v12;
  *(_OWORD *)(v7 + 64) = v14;
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_1ABD2F088(uint64_t a1)
{
  sub_1ABF31A98();
  return a1;
}

double sub_1ABD2F0B0()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

double sub_1ABD2F0B8()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double sub_1ABD2F0C0()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double sub_1ABD2F0C8()
{
  uint64_t v0;

  return *(double *)v0;
}

double sub_1ABD2F0D0()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double sub_1ABD2F0D8()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

double sub_1ABD2F0E0()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

double sub_1ABD2F0E8()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double sub_1ABD2F0F0()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double sub_1ABD2F0F8()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

double sub_1ABD2F100()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

double sub_1ABD2F108()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

double sub_1ABD2F110()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

uint64_t sub_1ABD2F118(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 == 2)
  {
    v6 = a2[3];
    v7 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 80))(v6, v7);
  }
  else if (a1 == 1)
  {
    v3 = a2[3];
    v4 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(v3, v4);
  }
  else
  {
    v8 = a2[3];
    v9 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v8);
    if (a1 >= 3)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v8, v9);
    else
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(v8, v9);
  }
}

double sub_1ABD2F1B0()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

id sub_1ABD2F1E8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;

  sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ABF38ED0;
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ABF3CE80;
  sub_1ABCF7BCC(0, &qword_1ED34E168);
  v2 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  v3 = (void *)sub_1ABF31780();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend(v2, sel_initWithName_valueClass_required_encrypted_, v3, ObjCClassFromMetadata, 0, 1);

  *(_QWORD *)(v1 + 32) = v5;
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED34E130);
  v6 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  v7 = (void *)sub_1ABF31780();
  v8 = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend(v6, sel_initWithName_valueClass_required_encrypted_, v7, v8, 0, 1);

  *(_QWORD *)(v1 + 40) = v9;
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD80);
  v10 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  v11 = (void *)sub_1ABF31780();
  v12 = objc_msgSend(v10, sel_initWithName_valueClass_required_encrypted_, v11, swift_getObjCClassFromMetadata(), 0, 0);

  *(_QWORD *)(v1 + 48) = v12;
  v13 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  v14 = (void *)sub_1ABF31780();
  v15 = objc_msgSend(v13, sel_initWithName_valueClass_required_encrypted_, v14, ObjCClassFromMetadata, 0, 0);

  *(_QWORD *)(v1 + 56) = v15;
  v16 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  v17 = (void *)sub_1ABF31780();
  v18 = objc_msgSend(v16, sel_initWithName_valueClass_required_encrypted_, v17, v8, 0, 1);

  *(_QWORD *)(v1 + 64) = v18;
  v19 = objc_allocWithZone((Class)SCWRecordFieldSchema);
  v20 = (void *)sub_1ABF31780();
  v21 = objc_msgSend(v19, sel_initWithName_valueClass_required_encrypted_, v20, v8, 0, 1);

  *(_QWORD *)(v1 + 72) = v21;
  sub_1ABF31A20();
  v22 = objc_allocWithZone((Class)SCWRecordSchema);
  v23 = (void *)sub_1ABF31780();
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED34E0E0);
  v24 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v22, sel_initWithRecordType_fieldSchemas_, v23, v24);

  *(_QWORD *)(v0 + 32) = v25;
  sub_1ABF31A20();
  v26 = objc_allocWithZone((Class)SCWZoneSchema);
  v27 = (void *)sub_1ABF31780();
  sub_1ABCF7BCC(0, &qword_1ED34E068);
  v28 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v26, sel_initWithName_atomic_recordSchemas_, v27, 1, v28);

  return v29;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1ABF30760();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1ABF30760();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1ABF30B38();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1ABF314E0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + 16;
  switch(*(_BYTE *)(v0 + 64))
  {
    case 0:
      swift_unknownObjectRelease();
      v1 = v0 + 24;
      goto LABEL_4;
    case 1:
      swift_unknownObjectRelease();
      break;
    case 2:
LABEL_4:
      __swift_destroy_boxed_opaque_existential_1(v1);
      break;
    case 3:
    case 6:
    case 7:
    case 8:
      swift_bridgeObjectRelease();
      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *sub_1ABD306D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *result;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  __int128 v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350860);
  result = (void *)sub_1ABF30B74();
  if (!v10)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1ABD065C8(&v9, (uint64_t)v11);
  v5 = v12;
  v6 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v7 & 1) != 0)
  {
    sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350C50);
    result = (void *)sub_1ABF30B68();
    if (result)
    {
      v8 = objc_msgSend(result, sel_userInfo);
      swift_unknownObjectRelease();
      *(_QWORD *)a2 = v8;
      *(_BYTE *)(a2 + 40) = 0;
      return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    }
    goto LABEL_9;
  }
  sub_1ABD079D8(0, &qword_1ED350620);
  result = (void *)sub_1ABF30B74();
  if (v10)
  {
    sub_1ABD065C8(&v9, a2);
    *(_BYTE *)(a2 + 40) = 1;
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1ABD3085C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  char v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _QWORD v34[3];
  uint64_t v35;

  sub_1ABD07E04((uint64_t)a1, (uint64_t)v34);
  v4 = sub_1ABD30B84(v34);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v4 & 1) != 0)
  {
    sub_1ABD079D8(0, &qword_1ED350968);
    result = sub_1ABF30B74();
    if (v35)
    {
      v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      MEMORY[0x1E0C80A78](v20);
      v22 = (_QWORD *)((char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v23 + 16))(v22);
      v24 = *v22;
      v25 = type metadata accessor for SDSBaseOperationFactory();
      v32 = v25;
      v33 = &off_1E5AEC4C0;
      v31[0] = v24;
      v12 = type metadata accessor for SDSSearchService();
      v13 = (_QWORD *)swift_allocObject();
      v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v25);
      MEMORY[0x1E0C80A78](v26);
      v28 = (_QWORD *)((char *)v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v29 + 16))(v28);
      v30 = *v28;
      v13[5] = v25;
      v13[6] = &off_1E5AEC4C0;
      v13[2] = v30;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      v19 = &off_1E5AE5BC8;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1ABD079D8(0, (unint64_t *)&unk_1ED3509D0);
    result = sub_1ABF30B74();
    if (v35)
    {
      v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      MEMORY[0x1E0C80A78](v6);
      v8 = (_QWORD *)((char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      v10 = *v8;
      v11 = type metadata accessor for YahooBaseOperationFactory();
      v32 = v11;
      v33 = &off_1E5AEEE20;
      v31[0] = v10;
      v12 = type metadata accessor for YahooSearchService();
      v13 = (_QWORD *)swift_allocObject();
      v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v11);
      MEMORY[0x1E0C80A78](v14);
      v16 = (_QWORD *)((char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_1E5AEEE20;
      v13[2] = v18;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      v19 = &off_1E5AE9470;
LABEL_6:
      a2[3] = v12;
      a2[4] = v19;
      *a2 = v13;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1ABD30B84(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350860);
  result = sub_1ABF30B74();
  if (v7)
  {
    sub_1ABD065C8(&v6, (uint64_t)v8);
    v3 = v9;
    v4 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1ABD30C44()
{
  return (unint64_t)sub_1ABD30C68() & 1;
}

id sub_1ABD30C68()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  BOOL v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[390];
  char v20;

  v1 = v0;
  if (qword_1ED34DB60 != -1)
    swift_once();
  sub_1ABD1951C();
  sub_1ABF30970();
  if (v20)
    return (id)(v20 == 1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v4 = objc_msgSend(v3, sel_bundleIdentifier);

  if (!v4)
  {
LABEL_15:
    v14 = (void *)objc_opt_self();
    v15 = v1 + 8;
    v17 = v1[11];
    v16 = v1[12];
    __swift_project_boxed_opaque_existential_1(v15, v17);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v16 + 8))(v19, v17, v16);
    sub_1ABD7DDF4((uint64_t)v19);
    return objc_msgSend(v14, sel_enabledForCurrentLevel_, v19[148]);
  }
  v5 = sub_1ABF317A4();
  v7 = v6;

  v8 = v1[11];
  v9 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v8);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v19, v8, v9);
  v10 = v19[149];
  sub_1ABF2FF5C();
  sub_1ABD7DDF4((uint64_t)v19);
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v12 = (unsigned __int8 *)(v10 + 48);
  while (1)
  {
    v2 = *v12;
    v13 = *((_QWORD *)v12 - 2) == v5 && *((_QWORD *)v12 - 1) == v7;
    if (v13 || (sub_1ABF3223C() & 1) != 0)
      break;
    v12 += 40;
    if (!--v11)
      goto LABEL_14;
  }
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (id)v2;
}

uint64_t sub_1ABD30E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *);
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *);
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *);
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  void (*v71)(char *);
  void (*v72)(char *, uint64_t);
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  void (*v87)(char *);
  unsigned int v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  void (*v91)(char *, uint64_t);
  void (*v92)(char *, uint64_t);
  unsigned int v93;
  _QWORD v94[3];
  uint64_t v95;

  v89 = a1;
  v1 = sub_1ABF30B80();
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  MEMORY[0x1E0C80A78](v1);
  v81 = (char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1ABF310FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF312B8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350788);
  sub_1ABF30F4C();
  swift_release();
  v88 = *MEMORY[0x1E0DB5028];
  v11 = *(void (**)(char *))(v8 + 104);
  v11(v10);
  v87 = v11;
  sub_1ABF30A84();
  swift_release();
  v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  v12(v10, v7);
  v92 = v12;
  v85 = *MEMORY[0x1E0DB5020];
  v11(v10);
  sub_1ABF30A84();
  swift_release();
  v12(v10, v7);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v93 = *MEMORY[0x1E0DB4A18];
  v13 = v93;
  v14(v6, v93, v3);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v6, v3);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350970);
  sub_1ABF30F4C();
  swift_release();
  v14(v6, v13, v3);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v15(v6, v3);
  sub_1ABF30C58();
  sub_1ABD079D8(0, qword_1ED350688);
  sub_1ABF30F4C();
  swift_release();
  v16 = v88;
  v86 = v7;
  v17 = (void (*)(char *, uint64_t, uint64_t))v87;
  ((void (*)(char *, _QWORD, uint64_t))v87)(v10, v88, v7);
  sub_1ABF30A84();
  swift_release();
  v92(v10, v7);
  v18 = v93;
  v14(v6, v93, v3);
  v90 = v14;
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v91 = v15;
  v15(v6, v3);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350810);
  sub_1ABF30F4C();
  swift_release();
  v19 = v16;
  v20 = v86;
  v17(v10, v19, v86);
  sub_1ABF30A84();
  swift_release();
  v21 = v20;
  v22 = v92;
  v92(v10, v21);
  v14(v6, v18, v3);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v15(v6, v3);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350678);
  sub_1ABF30F4C();
  swift_release();
  v23 = v88;
  v24 = v86;
  v17(v10, v88, v86);
  sub_1ABF30A84();
  swift_release();
  swift_release();
  v22(v10, v24);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350770);
  sub_1ABF30F4C();
  swift_release();
  v17(v10, v23, v24);
  sub_1ABF30A84();
  swift_release();
  v22(v10, v24);
  v25 = v93;
  v26 = v90;
  v90(v6, v93, v3);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v27 = v3;
  v28 = v91;
  v91(v6, v3);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3506E8);
  sub_1ABF30F4C();
  swift_release();
  v26(v6, v25, v3);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v28(v6, v3);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350760);
  sub_1ABF30F4C();
  swift_release();
  v26(v6, v25, v3);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v28(v6, v3);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350778);
  sub_1ABF30F4C();
  swift_release();
  v29 = v88;
  v31 = v86;
  v30 = v87;
  ((void (*)(char *, _QWORD, uint64_t))v87)(v10, v88, v86);
  sub_1ABF30A84();
  swift_release();
  v32 = v92;
  v92(v10, v31);
  ((void (*)(char *, _QWORD, uint64_t))v30)(v10, v85, v31);
  sub_1ABF30A84();
  swift_release();
  v32(v10, v31);
  v84 = v27;
  v90(v6, v93, v27);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v91(v6, v27);
  sub_1ABF30C58();
  v80 = sub_1ABD079D8(0, (unint64_t *)&unk_1ED3508D0);
  sub_1ABF30F4C();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v30)(v10, v29, v31);
  sub_1ABF30A84();
  swift_release();
  swift_release();
  v33 = v92;
  v92(v10, v31);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED3508E8);
  sub_1ABF30F4C();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v30)(v10, v29, v31);
  sub_1ABF30A84();
  swift_release();
  v33(v10, v31);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3509E0);
  sub_1ABF30A9C();
  swift_release();
  v34 = v93;
  v35 = v84;
  v36 = v90;
  v90(v6, v93, v84);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v91(v6, v35);
  sub_1ABF30C58();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350938);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350330);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350888);
  sub_1ABF30F4C();
  swift_release();
  v37 = v34;
  v38 = v34;
  v39 = v36;
  v36(v6, v38, v35);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v40 = v91;
  v91(v6, v35);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350860);
  sub_1ABF30F4C();
  swift_release();
  v39(v6, v37, v35);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v40(v6, v35);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350998);
  sub_1ABF30F4C();
  swift_release();
  ((void (*)(char *, _QWORD, uint64_t))v87)(v10, v88, v31);
  sub_1ABF30A84();
  swift_release();
  v92(v10, v31);
  v41 = v6;
  v39(v6, v37, v35);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v42 = v6;
  v43 = v35;
  v44 = v35;
  v45 = v91;
  v91(v42, v43);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350620);
  sub_1ABF30F4C();
  swift_release();
  v39(v41, v37, v44);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v45(v41, v44);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350828);
  sub_1ABF30F4C();
  swift_release();
  v39(v41, v37, v44);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v45(v41, v44);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED3507F0);
  sub_1ABF2FF68();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  v46 = v85;
  v47 = v86;
  ((void (*)(char *, _QWORD, uint64_t))v87)(v10, v85, v86);
  sub_1ABF30A84();
  swift_release();
  v92(v10, v47);
  v48 = v41;
  v49 = v41;
  v50 = v44;
  v39(v49, v93, v44);
  v51 = v48;
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v45(v48, v50);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350948);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350910);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350708);
  sub_1ABF30F4C();
  swift_release();
  v52 = v46;
  v53 = v46;
  v55 = v86;
  v54 = v87;
  ((void (*)(char *, uint64_t, uint64_t))v87)(v10, v52, v86);
  sub_1ABF30A84();
  swift_release();
  v56 = v92;
  v92(v10, v55);
  v57 = v84;
  v90(v51, v93, v84);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v91(v51, v57);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3507E0);
  sub_1ABF30F4C();
  swift_release();
  ((void (*)(char *, _QWORD, uint64_t))v54)(v10, v88, v55);
  sub_1ABF30A84();
  swift_release();
  v56(v10, v55);
  ((void (*)(char *, uint64_t, uint64_t))v54)(v10, v53, v55);
  v79 = v10;
  sub_1ABF30A84();
  swift_release();
  v56(v10, v55);
  v58 = v93;
  v59 = v57;
  v60 = v90;
  v90(v51, v93, v57);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v61 = v57;
  v62 = v91;
  v91(v51, v61);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350958);
  sub_1ABF30F4C();
  swift_release();
  v60(v51, v58, v59);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v62(v51, v59);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350870);
  sub_1ABF30F4C();
  swift_release();
  v60(v51, v58, v59);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v62(v51, v59);
  sub_1ABF30C58();
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4EA0]);
  sub_1ABF30F40();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED3508E0);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  type metadata accessor for PermanentURLFactory();
  sub_1ABF2FF68();
  sub_1ABF30F40();
  swift_release();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABD079D8(0, &qword_1ED3509C8);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3509F0);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABD079D8(0, &qword_1ED3508F8);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3509D0);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABD079D8(0, &qword_1ED350968);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350A00);
  sub_1ABF30F4C();
  swift_release();
  v60(v51, v58, v59);
  v78 = v51;
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v62(v51, v59);
  sub_1ABF30C64();
  sub_1ABD079D8(0, &qword_1ED350A58);
  sub_1ABF2FF68();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  swift_release();
  sub_1ABF30C70();
  __swift_project_boxed_opaque_existential_1(v94, v95);
  sub_1ABD079D8(0, &qword_1ED350B10);
  v63 = *MEMORY[0x1E0DB36E0];
  v64 = v81;
  v65 = v82;
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 104);
  v67 = v83;
  v66(v81, v63, v83);
  sub_1ABF30FAC();
  v68 = *(void (**)(char *, uint64_t))(v65 + 8);
  v68(v64, v67);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
  sub_1ABF30C70();
  __swift_project_boxed_opaque_existential_1(v94, v95);
  sub_1ABF30FF4();
  v66(v64, v63, v67);
  sub_1ABF30FA0();
  v68(v64, v67);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
  sub_1ABF30C58();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350818);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350A10);
  sub_1ABF30F4C();
  swift_release();
  v69 = v79;
  v70 = v86;
  v71 = v87;
  ((void (*)(char *, _QWORD, uint64_t))v87)(v79, v88, v86);
  sub_1ABF30A84();
  swift_release();
  v72 = v92;
  v92(v69, v70);
  v73 = v78;
  v74 = v84;
  v90(v78, v93, v84);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v75 = v91;
  v91(v73, v74);
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350A28);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABD079D8(0, &qword_1ED350490);
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350988);
  sub_1ABF30F4C();
  swift_release();
  ((void (*)(char *, _QWORD, uint64_t))v71)(v69, v85, v70);
  sub_1ABF30A84();
  swift_release();
  v72(v69, v70);
  v90(v73, v93, v74);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v75(v73, v74);
  sub_1ABF30C64();
  sub_1ABF30B38();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C64();
  sub_1ABD079D8(0, &qword_1ED3504C0);
  sub_1ABF30F4C();
  swift_release();
  return swift_release();
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1ABF30B38();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

unint64_t sub_1ABD32960()
{
  unint64_t result;

  result = qword_1ED34E388;
  if (!qword_1ED34E388)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34E388);
  }
  return result;
}

_QWORD *sub_1ABD3299C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1ABD34288((uint64_t)&v8, v3 + 4, v1, a1);
  sub_1ABF2FF5C();
  sub_1ABD97E10();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

void sub_1ABD32A94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E370)
  {
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E370);
  }
}

void sub_1ABD32AEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FFD8)
  {
    sub_1ABD344F8();
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FFD8);
  }
}

void sub_1ABD32B40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED350D98)
  {
    sub_1ABD35460();
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED350D98);
  }
}

uint64_t sub_1ABD32B94(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34E380, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD32D18(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABD32B94(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

_QWORD *sub_1ABD32D34(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD83CBC(0, &qword_1ED34E378, (void (*)(uint64_t))sub_1ABD32960);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ABD32F80(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1ABD32E4C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, &qword_1ED34E318, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 136);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[17 * v8 + 4])
          memmove(v12, a4 + 4, 136 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1ABD33068(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1ABD32F80(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD33068(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 136 * a1 + 32;
    v6 = a3 + 136 * v4;
    if (v5 >= v6 || v5 + 136 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD3315C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD33250()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1ABE0D95C();
  v3 = sub_1ABF31E58();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = sub_1ABF2FF68();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1ABF32308();
    sub_1ABF2FF5C();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

id sub_1ABD334F8()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for DummyClass();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1ED368428 = (uint64_t)result;
  return result;
}

void type metadata accessor for FCContextEnvironment(uint64_t a1)
{
  sub_1ABD04578(a1, (unint64_t *)&unk_1ED350C38, (uint64_t)&unk_1E5AF1048, MEMORY[0x1E0DEEC78]);
}

unint64_t sub_1ABD33568()
{
  unint64_t result;

  result = qword_1ED34E0B0;
  if (!qword_1ED34E0B0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34E0B0);
  }
  return result;
}

uint64_t sub_1ABD335BC()
{
  return sub_1ABCFE1EC(&qword_1ED34E088, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1ABF36BDC);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_1ABD04578(a1, &qword_1ED34E090, (uint64_t)&unk_1E5AF1020, MEMORY[0x1E0DEEC78]);
}

unint64_t sub_1ABD33604()
{
  unint64_t result;

  result = qword_1ED34E058;
  if (!qword_1ED34E058)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34E058);
  }
  return result;
}

void sub_1ABD33658(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void *v5;
  void *v6;
  id v7;

  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1ABF31780();
  v7 = objc_msgSend(v5, sel_sc_userDefaultsWithSuiteName_backupDisabled_, v6, 1);

  *a4 = v7;
}

void sub_1ABD336D0(uint64_t a1)
{
  sub_1ABD33658(a1, 0xD000000000000011, 0x80000001ABF62660, &qword_1ED34E958);
}

void sub_1ABD336F4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1ABF31780();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    qword_1ED34E048 = (uint64_t)v2;
  else
    __break(1u);
}

id sub_1ABD33768(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  void *v18;
  void *v19;
  uint64_t v21;
  void *v23;
  id v24;

  v15 = sub_1ABF305D4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v18 = 0;
  if (v17(a3, 1, v15) != 1)
  {
    v18 = (void *)sub_1ABF30550();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a3, v15);
  }
  if (v17(a4, 1, v15) == 1)
  {
    v19 = 0;
  }
  else
  {
    v19 = (void *)sub_1ABF30550();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a4, v15);
  }
  LOWORD(v21) = a10 & 0x101;
  v24 = objc_msgSend(v23, sel_initWithConfiguration_configurationManager_contentHostDirectory_privateDataHostDirectory_privateDataActionProvider_networkBehaviorMonitor_appActivityMonitor_desiredHeadlineFieldOptions_feedUsage_lockStoreFrontIfNeeded_deviceIsiPad_backgroundTaskable_privateDataSyncAvailability_pptContext_, a1, a2, v18, v19, a5, a6, a7, a8, a9, v21, a11, a12, a13);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v24;
}

void type metadata accessor for FCFetchResult(uint64_t a1)
{
  sub_1ABD04578(a1, (unint64_t *)&unk_1ED346F80, (uint64_t)&unk_1E5AF1000, MEMORY[0x1E0DEEC78]);
}

unint64_t sub_1ABD3392C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34E008;
  if (!qword_1ED34E008)
  {
    v1 = sub_1ABCF7BCC(255, (unint64_t *)&unk_1ED350BC0);
    result = MEMORY[0x1AF438F30](&unk_1ABF42904, v1);
    atomic_store(result, (unint64_t *)&qword_1ED34E008);
  }
  return result;
}

uint64_t sub_1ABD33984(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_1ABF3223C() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = sub_1ABF3223C();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

void sub_1ABD33A68(uint64_t a1)
{
  sub_1ABD0AC84(a1, &qword_1ED346F58, sub_1ABD0A8E0);
}

void sub_1ABD33A8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FD30)
  {
    v0 = sub_1ABF31B40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FD30);
  }
}

void sub_1ABD33AE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED350B98)
  {
    sub_1ABF305D4();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    v0 = sub_1ABF31B40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED350B98);
  }
}

void sub_1ABD33B60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED350B90)
  {
    sub_1ABCF7C04(255, (unint64_t *)&unk_1ED350D58);
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED350B90);
  }
}

void sub_1ABD33BC4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34E5E0)
  {
    sub_1ABD33C30(255);
    sub_1ABD347C8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34E5E0);
  }
}

void sub_1ABD33C30(uint64_t a1)
{
  sub_1ABCF5A54(a1, (unint64_t *)&unk_1ED34E5D0, (uint64_t (*)(uint64_t))sub_1ABD33568, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1ABD33C4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34FCE8;
  if (!qword_1ED34FCE8)
  {
    sub_1ABCF5A54(255, &qword_1ED34FCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34FCE8);
  }
  return result;
}

unint64_t sub_1ABD33CAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34FCA0;
  if (!qword_1ED34FCA0)
  {
    sub_1ABCF5A54(255, (unint64_t *)&unk_1ED34FC90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34FCA0);
  }
  return result;
}

unint64_t sub_1ABD33D0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED350B88;
  if (!qword_1ED350B88)
  {
    sub_1ABCF5A54(255, &qword_1ED350B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED350B88);
  }
  return result;
}

void sub_1ABD33D6C(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED350B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1ABD33D88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED350B60;
  if (!qword_1ED350B60)
  {
    sub_1ABCF5A54(255, (unint64_t *)&unk_1ED350B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED350B60);
  }
  return result;
}

void sub_1ABD33DE8(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED34DFC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1ABD33E04()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34DFA0)
  {
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34DFB0, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34DFA0);
  }
}

unint64_t sub_1ABD33E84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34E5C0;
  if (!qword_1ED34E5C0)
  {
    sub_1ABD04578(255, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34E5C0);
  }
  return result;
}

void sub_1ABD33EE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABD079D8(255, &qword_1ED3508C0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1ABD33F50(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1ABCF5A54(255, &qword_1ED346F28, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1ABCFE1EC(a2, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article, a3);
    result = MEMORY[0x1AF438F30](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD33FE8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1ABD32D34(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD34130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1ABD32E4C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[17 * v8 + 4];
  if (a1 + 32 < v9 + 136 * v2 && v9 < a1 + 32 + 136 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD34288(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_1ABF2FF5C();
      goto LABEL_38;
    }
    v11 += 2;
    result = sub_1ABF2FF5C();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1ABD34484()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED346EF0)
  {
    sub_1ABD1248C(255, (unint64_t *)&qword_1ED34FCB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED346EF0);
  }
}

void sub_1ABD344F8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34FB88)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34FB88);
  }
}

void sub_1ABD34558()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FB80)
  {
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FB80);
  }
}

void sub_1ABD345AC(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED346EE8, (uint64_t (*)(uint64_t))sub_1ABD0A8E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1ABD345C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE70)
  {
    sub_1ABD1248C(255, (unint64_t *)&qword_1ED34FCB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE70);
  }
}

void sub_1ABD3463C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE58)
  {
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE58);
  }
}

void sub_1ABD346A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE40)
  {
    type metadata accessor for Chart(255);
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE40);
  }
}

void sub_1ABD34704()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346ED8)
  {
    type metadata accessor for EarningsCalendarEventModel();
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346ED8);
  }
}

unint64_t sub_1ABD34768()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34DE38;
  if (!qword_1ED34DE38)
  {
    sub_1ABD25FA4(255, &qword_1ED34DE30, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA0D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34DE38);
  }
  return result;
}

void sub_1ABD347C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E598)
  {
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E598);
  }
}

void sub_1ABD3482C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for QuoteDetail();
    v7 = a3(a1, MEMORY[0x1E0DEA968], v6, MEMORY[0x1E0DEA978]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1ABD34894(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v6 = sub_1ABF305D4();
    v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v8 = type metadata accessor for SDSAuthToken();
    v9 = sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, v7, MEMORY[0x1E0CB0018]);
    v10 = a3(a1, v6, v8, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

unint64_t sub_1ABD3492C(uint64_t a1)
{
  return sub_1ABDEABE0(a1, (void (*)(_QWORD))sub_1ABDF133C, (uint64_t)&unk_1EEC431C8, (uint64_t)type metadata accessor for FileAttributeKey, (uint64_t (*)(uint64_t))sub_1ABD9A3EC);
}

unint64_t sub_1ABD34950(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1ABDF1B70(0, &qword_1ED34CAB0, (uint64_t (*)(uint64_t))sub_1ABD165AC, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v2 = (_QWORD *)sub_1ABF32014();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1ABF2FF68();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    result = sub_1ABD00F9C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1ABD34A7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FB00)
  {
    type metadata accessor for NetworkEvent();
    v0 = sub_1ABF3151C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FB00);
  }
}

unint64_t sub_1ABD34AE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED346ED0;
  if (!qword_1ED346ED0)
  {
    sub_1ABD34A7C();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C95F48], v1);
    atomic_store(result, (unint64_t *)&qword_1ED346ED0);
  }
  return result;
}

void sub_1ABD34B28(uint64_t a1)
{
  sub_1ABD07FD8(a1, (unint64_t *)&unk_1ED34DDE8, MEMORY[0x1E0C958D0]);
}

void sub_1ABD34B3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346E60)
  {
    sub_1ABD3ED88();
    sub_1ABD3EDCC();
    sub_1ABD3D434();
    v0 = sub_1ABF31480();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346E60);
  }
}

void sub_1ABD34BC8(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED34EA70, (uint64_t (*)(uint64_t))sub_1ABD34BE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1ABD34BE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FAF0)
  {
    sub_1ABD42E70();
    sub_1ABD4643C();
    sub_1ABD46480();
    v0 = sub_1ABF313FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FAF0);
  }
}

void sub_1ABD34C70(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1ABD061E8(255, a3, a4);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1ABD34CD0(uint64_t a1)
{
  return sub_1ABD04C04(a1, qword_1ED34E920);
}

uint64_t sub_1ABD34CF4(uint64_t a1)
{
  return sub_1ABD04C04(a1, qword_1ED3683C8);
}

uint64_t sub_1ABD34D18(uint64_t a1)
{
  return sub_1ABD04C04(a1, qword_1ED368348);
}

void sub_1ABD34D3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DD60)
  {
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DD60);
  }
}

void sub_1ABD34DA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3472D0)
  {
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34DFB0, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3472D0);
  }
}

void sub_1ABD34E14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DD20)
  {
    sub_1ABD25FA4(255, &qword_1ED34DE30, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DD20);
  }
}

void sub_1ABD34E80(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1ABD04578(255, a3, a4, a5);
    v6 = sub_1ABF3124C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1ABD34ED8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1ABF3124C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1ABD34F1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED350B28)
  {
    sub_1ABCF7BCC(255, (unint64_t *)&unk_1ED350BC0);
    v0 = sub_1ABF31084();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED350B28);
  }
}

void sub_1ABD34F80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DC88)
  {
    sub_1ABD34E80(255, (unint64_t *)&unk_1ED34DD50, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1ABF31084();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DC88);
  }
}

void sub_1ABD34FF4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, _QWORD *), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1ABD0611C(255, a3, a4);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1ABD35054()
{
  uint64_t v0;

  v0 = sub_1ABF30DCC();
  __swift_allocate_value_buffer(v0, qword_1ED346D80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED346D80);
  return sub_1ABF30DC0();
}

void sub_1ABD350B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DC50)
  {
    sub_1ABD33A8C();
    sub_1ABD200F0(255, (unint64_t *)&qword_1ED34DE48, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    sub_1ABCFE22C(&qword_1ED34DFF8, 255, (uint64_t (*)(uint64_t))sub_1ABD33A8C, MEMORY[0x1E0DEB3C0]);
    v0 = sub_1ABF30C4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DC50);
  }
}

void sub_1ABD3515C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DC48)
  {
    sub_1ABD33A8C();
    sub_1ABD1E9F8(255, (unint64_t *)&qword_1ED34DE40, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    sub_1ABCFE22C(&qword_1ED34DFF8, 255, (uint64_t (*)(uint64_t))sub_1ABD33A8C, MEMORY[0x1E0DEB3C0]);
    v0 = sub_1ABF30C4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DC48);
  }
}

void sub_1ABD35204()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DC40)
  {
    sub_1ABD33A8C();
    sub_1ABD25FA4(255, &qword_1ED34DE30, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    sub_1ABCFE1EC(&qword_1ED34DFF8, (uint64_t (*)(uint64_t))sub_1ABD33A8C, MEMORY[0x1E0DEB3C0]);
    v0 = sub_1ABF30C4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DC40);
  }
}

void sub_1ABD352B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DC38)
  {
    sub_1ABD33A8C();
    sub_1ABD3482C(255, (unint64_t *)&qword_1ED34DE08, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    sub_1ABCFE22C(&qword_1ED34DFF8, 255, (uint64_t (*)(uint64_t))sub_1ABD33A8C, MEMORY[0x1E0DEB3C0]);
    v0 = sub_1ABF30C4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DC38);
  }
}

void sub_1ABD35358()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FA78)
  {
    sub_1ABD33AE8();
    sub_1ABD34894(255, (unint64_t *)&qword_1ED34FB38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
    sub_1ABCFE1EC((unint64_t *)&unk_1ED350BA0, (uint64_t (*)(uint64_t))sub_1ABD33AE8, MEMORY[0x1E0DEB3C0]);
    v0 = sub_1ABF30C4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FA78);
  }
}

void sub_1ABD353FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DC30)
  {
    type metadata accessor for ForYouConfigRecord(255);
    v0 = sub_1ABF30C4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DC30);
  }
}

unint64_t sub_1ABD35460()
{
  unint64_t result;

  result = qword_1ED350348;
  if (!qword_1ED350348)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED350348);
  }
  return result;
}

void sub_1ABD354B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED350AD0)
  {
    v0 = sub_1ABF30A48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED350AD0);
  }
}

void sub_1ABD35510(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1ABF30A48();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1ABD35568()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34FA38;
  if (!qword_1ED34FA38)
  {
    v1 = sub_1ABF30988();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DB54F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34FA38);
  }
  return result;
}

uint64_t sub_1ABD355B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;

  v0 = sub_1ABF309E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF309F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30988();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD24798();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB54D8], v8);
  if (qword_1ED350AA0 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, qword_1ED350A90 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain, v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  result = sub_1ABF30A30();
  qword_1ED34DBF0 = result;
  return result;
}

uint64_t sub_1ABD3575C()
{
  return sub_1ABD03B0C(&qword_1ED34DBF8);
}

uint64_t sub_1ABD35778(uint64_t a1)
{
  return sub_1ABD2467C(a1, MEMORY[0x1E0DB54D8], 0xD000000000000022, 0x80000001ABF59EE0, &qword_1ED346D48);
}

uint64_t sub_1ABD357A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[3];
  uint64_t *v19;

  v18[2] = a3;
  v19 = a4;
  v18[1] = a2;
  v4 = sub_1ABF309E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF309F4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_1ABF30988();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD24798();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB54D8], v12);
  *v11 = sub_1ABF317A4();
  v11[1] = v16;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB57F8], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E8], v4);
  result = sub_1ABF30A30();
  *v19 = result;
  return result;
}

uint64_t sub_1ABD35928(uint64_t a1)
{
  return sub_1ABD357A4(a1, 0xD000000000000022, 0x80000001ABF59EB0, &qword_1ED34DBD8);
}

uint64_t sub_1ABD3594C(uint64_t a1)
{
  return sub_1ABD2467C(a1, MEMORY[0x1E0DB54D8], 0xD00000000000001FLL, 0x80000001ABF59F50, &qword_1ED346D28);
}

uint64_t sub_1ABD35978(uint64_t a1)
{
  return sub_1ABD020B4(a1, 0xD00000000000002BLL, 0x80000001ABF5A450, &qword_1ED346CF8);
}

uint64_t sub_1ABD3599C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1ABF309F4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF309E8();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, _QWORD))(v6 + 104))((char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB57E8]);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB5800], v0);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1ABD021F0(0, &qword_1ED34FA68);
  swift_allocObject();
  result = sub_1ABF30A54();
  qword_1ED346CE0 = result;
  return result;
}

uint64_t sub_1ABD35AD0(uint64_t a1)
{
  return sub_1ABDD1E10(a1, MEMORY[0x1E0DB57E0], 0xD000000000000022, 0x80000001ABF5A3C0, &qword_1ED34DBC0);
}

uint64_t sub_1ABD35AFC(uint64_t a1)
{
  return sub_1ABD020B4(a1, 0xD00000000000001FLL, 0x80000001ABF5A4B0, &qword_1ED34DBB0);
}

uint64_t sub_1ABD35B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t result;
  _BYTE v10[16];

  v0 = sub_1ABF309E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1ABF309F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABD35510(0, &qword_1ED34DC10, (void (*)(void))sub_1ABD45C54);
  v10[15] = 0;
  *v7 = sub_1ABF317A4();
  v7[1] = v8;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  sub_1ABCF6208(0, &qword_1ED34E338, &qword_1ED34DC08);
  sub_1ABDD3360(0, &qword_1ED34DC08);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF36EA0;
  v10[14] = 0;
  sub_1ABF30A00();
  v10[13] = 1;
  sub_1ABF30A00();
  v10[12] = 2;
  sub_1ABF30A00();
  sub_1ABD45C98();
  result = sub_1ABF30A18();
  qword_1ED34DBA0 = result;
  return result;
}

uint64_t sub_1ABD35D8C()
{
  return sub_1ABD03B0C(&qword_1ED34DBA8);
}

uint64_t sub_1ABD35DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[4];
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v0 = sub_1ABF309E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF309F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABD35510(0, &qword_1ED34FA50, (void (*)(void))sub_1ABD444BC);
  v13[3] = v8;
  v9 = sub_1ABF317A4();
  v13[1] = v10;
  v13[2] = v9;
  v22 = 0;
  *v7 = sub_1ABF317A4();
  v7[1] = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57F8], v4);
  sub_1ABCF6208(0, &qword_1ED34FFC0, &qword_1ED34FA40);
  sub_1ABDD3360(0, &qword_1ED34FA40);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF3C150;
  v21 = 0;
  sub_1ABF30A00();
  v20 = 1;
  sub_1ABF30A00();
  v19 = 2;
  sub_1ABF30A00();
  v18 = 3;
  sub_1ABF30A00();
  v17 = 4;
  sub_1ABF30A00();
  v16 = 5;
  sub_1ABF30A00();
  v15 = 6;
  sub_1ABF30A00();
  v14 = 7;
  sub_1ABF30A00();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  sub_1ABD44500();
  result = sub_1ABF30A18();
  qword_1ED34FA28 = result;
  return result;
}

uint64_t sub_1ABD36130(uint64_t a1)
{
  return sub_1ABDD1E10(a1, MEMORY[0x1E0DB57E0], 0xD00000000000002ALL, 0x80000001ABF5A100, (uint64_t *)&unk_1ED346CC8);
}

uint64_t sub_1ABD3615C(uint64_t a1)
{
  return sub_1ABD020B4(a1, 0xD000000000000031, 0x80000001ABF59FA0, &qword_1ED346CC0);
}

uint64_t sub_1ABD36180(uint64_t a1)
{
  return sub_1ABD020B4(a1, 0xD000000000000024, 0x80000001ABF5A2D0, &qword_1ED34DB78);
}

uint64_t sub_1ABD361A4(uint64_t a1)
{
  return sub_1ABD020B4(a1, 0xD000000000000020, 0x80000001ABF5A330, &qword_1ED34DB68);
}

uint64_t sub_1ABD361C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[16];

  v0 = sub_1ABF309E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1ABF309F4();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, _QWORD))(v6 + 104))(&v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB5800]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v8[15] = 0;
  sub_1ABD354B4();
  swift_allocObject();
  result = sub_1ABF30A54();
  qword_1ED346C98 = result;
  return result;
}

uint64_t sub_1ABD362E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v0 = sub_1ABF309E8();
  v10 = *(_QWORD *)(v0 - 8);
  v11 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1ABF309F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD35510(0, &qword_1ED34C8B8, (void (*)(void))sub_1ABD467C8);
  v9 = v7;
  v15 = 0;
  sub_1ABCF6208(0, &qword_1ED34E330, &qword_1ED34DC00);
  sub_1ABDD3360(0, &qword_1ED34DC00);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF36EA0;
  v14 = 0;
  sub_1ABF30A00();
  v13 = 1;
  sub_1ABF30A00();
  v12 = 2;
  sub_1ABF30A00();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB5800], v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v2, *MEMORY[0x1E0DB57E0], v11);
  sub_1ABD4680C();
  result = sub_1ABF30A18();
  qword_1ED34DB58 = result;
  return result;
}

uint64_t assignWithCopy for Watchlist(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t sub_1ABD365D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1ABD36614(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

uint64_t sub_1ABD36620()
{
  sub_1ABF32308();
  sub_1ABD366B4();
  return sub_1ABF32338();
}

uint64_t sub_1ABD36680()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD36688()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

void sub_1ABD366B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 40);
  sub_1ABF2FF5C();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  sub_1ABF32314();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    sub_1ABF2FF5C();
    v4 = v1 + 40;
    do
    {
      sub_1ABF2FF5C();
      sub_1ABF31840();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_1ABD367A8()
{
  sub_1ABF32314();
  sub_1ABF32314();
  return sub_1ABF32314();
}

uint64_t sub_1ABD36800(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  char v11;

  v2 = *(_QWORD **)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 40);
  v7 = (_QWORD *)a2[2];
  v6 = a2[3];
  v8 = a2[4];
  if (*(_QWORD *)a1 == *a2 && *(_QWORD *)(a1 + 8) == a2[1] || (v9 = sub_1ABF3223C(), result = 0, (v9 & 1) != 0))
  {
    if ((sub_1ABD1C278(v2, v7) & 1) != 0)
    {
      if (v3 == v6 && v4 == v8 || (v11 = sub_1ABF3223C(), result = 0, (v11 & 1) != 0))
        __asm { BR              X10 }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1ABD3694C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  if (v2 == sub_1ABF317A4() && v1 == v3)
    v5 = 1;
  else
    v5 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t type metadata accessor for UserInfo()
{
  return objc_opt_self();
}

uint64_t sub_1ABD369E4()
{
  return sub_1ABD05288();
}

uint64_t sub_1ABD369F8()
{
  return sub_1ABD05288();
}

uint64_t sub_1ABD36A0C(id *a1)
{
  return sub_1ABD04D58(a1);
}

uint64_t sub_1ABD36A38()
{
  return sub_1ABD04CE8();
}

uint64_t sub_1ABD36ACC(id *a1)
{
  return sub_1ABD04D58(a1);
}

void sub_1ABD36AF8(void **a1)
{
  uint64_t v1;

  sub_1ABD36B00(a1, v1);
}

void sub_1ABD36B00(void **a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *a1;
  v4 = (id)sub_1ABF31780();
  objc_msgSend(v3, sel_addObserver_forZone_, a2, v4);

}

void sub_1ABD36B60(void **a1)
{
  uint64_t *v1;

  sub_1ABD273DC(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1ABD36B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABD256EC(a1, a2, a3, a4);
}

uint64_t type metadata accessor for Assembly()
{
  return objc_opt_self();
}

uint64_t sub_1ABD36B94()
{
  return sub_1ABF2FF5C();
}

void sub_1ABD36BA0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1ABCF5968();
  if (v0 <= 0x3F)
  {
    sub_1ABF309F4();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1ABD36C40(uint64_t a1)
{
  sub_1ABD03B44(a1, 0xD000000000000016, 0x80000001ABF5F080, &qword_1ED350A90);
}

uint64_t sub_1ABD36C64()
{
  return sub_1ABD03B0C(&qword_1ED350AA0);
}

uint64_t sub_1ABD36C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain;
  v4 = sub_1ABF309F4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_1ABD36CC4(uint64_t a1)
{
  sub_1ABD03B44(a1, 0xD00000000000001BLL, 0x80000001ABF5F060, &qword_1ED346C78);
}

id sub_1ABD36CE8()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedAccount);
  v1 = objc_msgSend(v0, sel_isUserSignedInToiCloud);

  return v1;
}

uint64_t sub_1ABD36D3C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1ABD36D5C();
  qword_1ED34E878 = result;
  qword_1ED34E880 = v1;
  return result;
}

uint64_t sub_1ABD36D5C()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedAccount);
  v1 = objc_msgSend(v0, sel_contentStoreFrontID);

  if (v1)
  {
    v2 = sub_1ABF317A4();
    v4 = v3;

    sub_1ABD0F55C();
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v5 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v5 + 32) = v2;
    *(_QWORD *)(v5 + 40) = v4;
    sub_1ABD19560();
    sub_1ABF2FF5C();
    v6 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
  }
  else
  {
    v2 = 0x313434333431;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v7 + 32) = 0x313434333431;
    *(_QWORD *)(v7 + 40) = 0xE600000000000000;
    sub_1ABD19560();
    v6 = (void *)sub_1ABF31D44();
  }
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1ABD36F00()
{
  char v1;

  v1 = 3;
  return sub_1ABD15B80(1381259092, 0xE400000000000000, 0x2C72657474697754, 0xED00002E636E4920, 0x51414453414ELL, 0xE600000000000000, &v1, 0, (uint64_t)&xmmword_1EEC42A40, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1ABD36F80@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F40 != -1)
    swift_once();
  v2 = xmmword_1EEC42A90;
  v10[6] = xmmword_1EEC42AA0;
  v10[7] = xmmword_1EEC42AB0;
  v3 = xmmword_1EEC42A50;
  v4 = xmmword_1EEC42A60;
  v10[2] = xmmword_1EEC42A60;
  v10[3] = xmmword_1EEC42A70;
  v5 = xmmword_1EEC42A70;
  v6 = xmmword_1EEC42A80;
  v10[4] = xmmword_1EEC42A80;
  v10[5] = xmmword_1EEC42A90;
  v7 = xmmword_1EEC42A40;
  v10[0] = xmmword_1EEC42A40;
  v10[1] = xmmword_1EEC42A50;
  v8 = xmmword_1EEC42AB0;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42AA0;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC42AC0;
  *(_QWORD *)(a1 + 128) = qword_1EEC42AC0;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

uint64_t sub_1ABD37030()
{
  char v1;

  v1 = 3;
  return sub_1ABD15B80(1095521108, 0xE400000000000000, 0x49202C616C736554, 0xEB000000002E636ELL, 0x51414453414ELL, 0xE600000000000000, &v1, 0, (uint64_t)&xmmword_1EEC429B8, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1ABD370AC@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F38 != -1)
    swift_once();
  v2 = xmmword_1EEC42A08;
  v10[6] = xmmword_1EEC42A18;
  v10[7] = xmmword_1EEC42A28;
  v3 = xmmword_1EEC429C8;
  v4 = xmmword_1EEC429D8;
  v10[2] = xmmword_1EEC429D8;
  v10[3] = xmmword_1EEC429E8;
  v5 = xmmword_1EEC429E8;
  v6 = xmmword_1EEC429F8;
  v10[4] = xmmword_1EEC429F8;
  v10[5] = xmmword_1EEC42A08;
  v7 = xmmword_1EEC429B8;
  v10[0] = xmmword_1EEC429B8;
  v10[1] = xmmword_1EEC429C8;
  v8 = xmmword_1EEC42A28;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42A18;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC42A38;
  *(_QWORD *)(a1 + 128) = qword_1EEC42A38;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

uint64_t sub_1ABD3715C()
{
  char v1;

  v1 = 6;
  return sub_1ABD15B80(0x435053475ELL, 0xE500000000000000, 0x30303520502653, 0xE700000000000000, 0, 0xE000000000000000, &v1, 0x30303520502653, (uint64_t)&xmmword_1EEC42AC8, 0xE700000000000000, 5252691, 0xE300000000000000, 0, 0, 0, 0);
}

uint64_t sub_1ABD371E8@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F48 != -1)
    swift_once();
  v2 = xmmword_1EEC42B18;
  v10[6] = xmmword_1EEC42B28;
  v10[7] = xmmword_1EEC42B38;
  v3 = xmmword_1EEC42AD8;
  v4 = xmmword_1EEC42AE8;
  v10[2] = xmmword_1EEC42AE8;
  v10[3] = xmmword_1EEC42AF8;
  v5 = xmmword_1EEC42AF8;
  v6 = xmmword_1EEC42B08;
  v10[4] = xmmword_1EEC42B08;
  v10[5] = xmmword_1EEC42B18;
  v7 = xmmword_1EEC42AC8;
  v10[0] = xmmword_1EEC42AC8;
  v10[1] = xmmword_1EEC42AD8;
  v8 = xmmword_1EEC42B38;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42B28;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC42B48;
  *(_QWORD *)(a1 + 128) = qword_1EEC42B48;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

uint64_t sub_1ABD37298()
{
  char v1;

  v1 = 3;
  return sub_1ABD15B80(1280328001, 0xE400000000000000, 0x6E4920656C707041, 0xEA00000000002E63, 0x51414453414ELL, 0xE600000000000000, &v1, 0, (uint64_t)&xmmword_1EEC42930, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1ABD37310@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F30 != -1)
    swift_once();
  v2 = xmmword_1EEC42980;
  v10[6] = xmmword_1EEC42990;
  v10[7] = xmmword_1EEC429A0;
  v3 = xmmword_1EEC42940;
  v4 = xmmword_1EEC42950;
  v10[2] = xmmword_1EEC42950;
  v10[3] = xmmword_1EEC42960;
  v5 = xmmword_1EEC42960;
  v6 = xmmword_1EEC42970;
  v10[4] = xmmword_1EEC42970;
  v10[5] = xmmword_1EEC42980;
  v7 = xmmword_1EEC42930;
  v10[0] = xmmword_1EEC42930;
  v10[1] = xmmword_1EEC42940;
  v8 = xmmword_1EEC429A0;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42990;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC429B0;
  *(_QWORD *)(a1 + 128) = qword_1EEC429B0;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

unint64_t sub_1ABD373C8()
{
  unint64_t result;

  result = qword_1ED34DAA0;
  if (!qword_1ED34DAA0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF392F4, &type metadata for Stock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34DAA0);
  }
  return result;
}

unint64_t sub_1ABD3740C()
{
  unint64_t result;

  result = qword_1ED34DA98;
  if (!qword_1ED34DA98)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3931C, &type metadata for Stock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34DA98);
  }
  return result;
}

void sub_1ABD37450()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1ABD226F0();
  if (v0 <= 0x3F)
  {
    sub_1ABF30760();
    if (v1 <= 0x3F)
    {
      sub_1ABF3094C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

unint64_t sub_1ABD37544()
{
  unint64_t result;

  result = qword_1ED34DA58;
  if (!qword_1ED34DA58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4322C, &type metadata for Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34DA58);
  }
  return result;
}

unint64_t sub_1ABD37588()
{
  unint64_t result;

  result = qword_1ED34DA50;
  if (!qword_1ED34DA50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43254, &type metadata for Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34DA50);
  }
  return result;
}

uint64_t type metadata accessor for Clock()
{
  return objc_opt_self();
}

void sub_1ABD375EC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1ABCFC730();
  if (v0 <= 0x3F)
  {
    sub_1ABF3094C();
    if (v1 <= 0x3F)
    {
      sub_1ABF30760();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

unint64_t sub_1ABD376A8()
{
  unint64_t result;

  result = qword_1ED34DA08;
  if (!qword_1ED34DA08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AA30, &type metadata for Chart.Feature);
    atomic_store(result, (unint64_t *)&qword_1ED34DA08);
  }
  return result;
}

uint64_t sub_1ABD376EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1ABD3776C()
{
  unint64_t result;

  result = qword_1ED34D9D8;
  if (!qword_1ED34D9D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AB78, &type metadata for Chart.Entry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D9D8);
  }
  return result;
}

unint64_t sub_1ABD377B0()
{
  unint64_t result;

  result = qword_1ED34D9D0;
  if (!qword_1ED34D9D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3ABA0, &type metadata for Chart.Entry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D9D0);
  }
  return result;
}

unint64_t sub_1ABD377FC()
{
  unint64_t result;

  result = qword_1ED34D9C0;
  if (!qword_1ED34D9C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AC30, &type metadata for Chart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D9C0);
  }
  return result;
}

unint64_t sub_1ABD37840()
{
  unint64_t result;

  result = qword_1ED34D9B8;
  if (!qword_1ED34D9B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AC58, &type metadata for Chart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D9B8);
  }
  return result;
}

uint64_t type metadata accessor for UpdateLastAppLaunchUpsellInstanceIDCommand()
{
  return objc_opt_self();
}

uint64_t sub_1ABD378A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for UpdateAppReviewRequestLastSeenDateCommand()
{
  uint64_t result;

  result = qword_1ED34D9A0;
  if (!qword_1ED34D9A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for UpdateAppLaunchUpsellLastSeenDateCommand()
{
  uint64_t result;

  result = qword_1ED34D980;
  if (!qword_1ED34D980)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for PaidBundleViaOfferFeatureAvailability()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UpdateUpsellAppLaunchCountCommand()
{
  return objc_opt_self();
}

uint64_t sub_1ABD379C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  sub_1ABD03D24();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1ABF31168();
}

uint64_t sub_1ABD37AA0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t type metadata accessor for NoopWatchlistDeprecationService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD37B08()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_1ED34CA78 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED3683C8);
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Will fetch for deprecated stocks using noop deprecation service", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD37BE8()
{
  return swift_task_switch();
}

uint64_t type metadata accessor for FeedPersonalizerHeadlineScorer()
{
  return objc_opt_self();
}

uint64_t sub_1ABD37C1C()
{
  swift_getObjectType();
  return sub_1ABF31CC0();
}

uint64_t type metadata accessor for WatchlistServiceObserverProxy()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StubPrivateDataPollingService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD37C98()
{
  sub_1ABD03D24();
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD37CCC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for LanguageSettingsObserverProxy()
{
  return objc_opt_self();
}

unint64_t sub_1ABD37D00()
{
  unint64_t result;

  result = qword_1ED34F720;
  if (!qword_1ED34F720)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CE78, &type metadata for NewsPersonalizationTreatment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F720);
  }
  return result;
}

unint64_t sub_1ABD37D44()
{
  unint64_t result;

  result = qword_1ED34F718;
  if (!qword_1ED34F718)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CEA0, &type metadata for NewsPersonalizationTreatment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F718);
  }
  return result;
}

uint64_t sub_1ABD37D88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ABCFE22C(&qword_1ED346C68, a2, (uint64_t (*)(uint64_t))type metadata accessor for EarningsCalendarEventManager, (uint64_t)&unk_1ABF422E0);
  result = sub_1ABCFE22C(&qword_1ED346C60, v3, (uint64_t (*)(uint64_t))type metadata accessor for EarningsCalendarEventManager, (uint64_t)&unk_1ABF422A0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1ABD37DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  v1 = sub_1ABF30B2C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  MEMORY[0x1E0C80A78](v1);
  v3 = sub_1ABF30AE4();
  MEMORY[0x1E0C80A78](v3);
  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEE9E0];
  sub_1ABF30AD8();
  sub_1ABF30AFC();
  swift_allocObject();
  *(_QWORD *)(v0 + 32) = sub_1ABF30AF0();
  *(_BYTE *)(v0 + 40) = 1;
  sub_1ABCF5A54(0, &qword_1ED350340, v2, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF366C0;
  sub_1ABF30B20();
  sub_1ABCFE22C((unint64_t *)&unk_1ED350AE0, 255, v2, MEMORY[0x1E0DB33D8]);
  sub_1ABD0B230(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED350B60, 255, (uint64_t (*)(uint64_t))sub_1ABD0B230, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  sub_1ABD02FCC(0, &qword_1ED3467D8, &qword_1ED346E58, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  sub_1ABF2FF68();
  *(_QWORD *)(v0 + 16) = sub_1ABF31078();
  sub_1ABF30BE0();
  swift_allocObject();
  swift_weakInit();
  sub_1ABF2FF68();
  sub_1ABF30BD4();
  swift_release_n();
  return v0;
}

uint64_t sub_1ABD38054@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD3805C(a1);
}

uint64_t sub_1ABD3805C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABF31060();
  sub_1ABD0302C(0, &qword_1ED346E58, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2AB0]);
  swift_allocObject();
  result = sub_1ABF313E4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABD38100()
{
  return sub_1ABF30E68();
}

uint64_t sub_1ABD38108()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 40) == 1)
  {
    *(_BYTE *)(v0 + 40) = 0;
  }
  else
  {
    sub_1ABF30BE0();
    sub_1ABF2FF68();
    sub_1ABF30BD4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1ABD38168()
{
  return sub_1ABF30E08();
}

uint64_t sub_1ABD38170()
{
  return sub_1ABF30E14();
}

uint64_t sub_1ABD38178()
{
  sub_1ABF30BE0();
  sub_1ABF2FF68();
  sub_1ABF30BD4();
  swift_release();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34DD80, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD381F8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABD38210(a1, v1);
}

uint64_t sub_1ABD38210(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  unsigned int (*v67)(_QWORD *, uint64_t, uint64_t);
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;

  v4 = type metadata accessor for EarningsCalendarEventModel();
  v68 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v71 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD33A68(0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6);
  v70 = (uint64_t *)((char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x1E0C80A78](v9);
  v69 = (uint64_t *)((char *)&v61 - v12);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v61 - v13);
  sub_1ABCF5A54(0, &qword_1ED346F60, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v16);
  v18 = (uint64_t *)((char *)&v61 - v17);
  v19 = *a1;
  v62 = a2;
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v20 = -1 << *(_BYTE *)(v19 + 32);
  v21 = *(_QWORD *)(v19 + 64);
  v22 = ~v20;
  v23 = -v20;
  v73 = v19;
  v74 = v19 + 64;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v75 = v22;
  v76 = 0;
  v77 = v24 & v21;
  v78 = 0;
  sub_1ABF2FF5C();
  sub_1ABD0A904(v18);
  v67 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48);
  if (v67(v18, 1, v7) == 1)
  {
LABEL_5:
    sub_1ABD97E10();
    sub_1ABF2FF68();
    sub_1ABF30ACC();
    return swift_release();
  }
  else
  {
    v26 = (_QWORD *)(v62 + 24);
    sub_1ABD0A8E0(0);
    v65 = v14;
    v66 = v27;
    v63 = v18;
    v64 = v7;
    while (1)
    {
      v28 = *(int *)(v7 + 48);
      v29 = (_QWORD *)((char *)v14 + v28);
      v30 = v66;
      v31 = *(int *)(v66 + 48);
      v32 = (uint64_t)v14 + v28 + v31;
      v33 = *v18;
      v34 = (_QWORD *)((char *)v18 + v28);
      v36 = *v34;
      v35 = v34[1];
      *v14 = *v18;
      *v29 = v36;
      v29[1] = v35;
      sub_1ABCFE2AC((uint64_t)v34 + v31, v32, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
      v37 = (_QWORD *)((char *)v69 + *(int *)(v7 + 48));
      *v69 = v33;
      v38 = (_QWORD *)((char *)v37 + *(int *)(v30 + 48));
      *v37 = v36;
      v37[1] = v35;
      sub_1ABE33FC0(v32, (uint64_t)v38);
      v39 = v7;
      v40 = v38[1];
      v72 = *v38;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABCFC3BC((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
      v41 = (_QWORD *)((char *)v70 + *(int *)(v39 + 48));
      *v70 = v33;
      v42 = *(int *)(v30 + 48);
      v43 = v72;
      v44 = (uint64_t)v41 + v42;
      *v41 = v36;
      v41[1] = v35;
      sub_1ABE33FC0(v32, (uint64_t)v41 + v42);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v45 = v71;
      sub_1ABCFE2AC(v44, v71, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v79 = (_QWORD *)*v26;
      v47 = v79;
      *v26 = 0x8000000000000000;
      v49 = sub_1ABD00F9C(v43, v40);
      v50 = v47[2];
      v51 = (v48 & 1) == 0;
      v52 = v50 + v51;
      if (__OFADD__(v50, v51))
        break;
      v53 = v48;
      if (v47[3] >= v52)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1ABE6F6B8();
      }
      else
      {
        sub_1ABE6B88C(v52, isUniquelyReferenced_nonNull_native);
        v54 = sub_1ABD00F9C(v43, v40);
        if ((v53 & 1) != (v55 & 1))
          goto LABEL_20;
        v49 = v54;
      }
      v14 = v65;
      v56 = v79;
      if ((v53 & 1) != 0)
      {
        sub_1ABE36070(v45, v79[7] + *(_QWORD *)(v68 + 72) * v49);
      }
      else
      {
        v79[(v49 >> 6) + 8] |= 1 << v49;
        v57 = (uint64_t *)(v56[6] + 16 * v49);
        *v57 = v43;
        v57[1] = v40;
        sub_1ABCFE2AC(v45, v56[7] + *(_QWORD *)(v68 + 72) * v49, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
        v58 = v56[2];
        v59 = __OFADD__(v58, 1);
        v60 = v58 + 1;
        if (v59)
          goto LABEL_19;
        v56[2] = v60;
        sub_1ABF2FF5C();
      }
      *v26 = v56;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_1ABCFC3BC((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1ABD33A68);
      v18 = v63;
      sub_1ABD0A904(v63);
      v7 = v64;
      if (v67(v18, 1, v64) == 1)
        goto LABEL_5;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    result = sub_1ABF3229C();
    __break(1u);
  }
  return result;
}

void sub_1ABD386B4()
{
  sub_1ABD38854();
}

uint64_t sub_1ABD386BC()
{
  sub_1ABD34D3C();
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD38718()
{
  return sub_1ABD38730();
}

uint64_t sub_1ABD38730()
{
  uint64_t (*v0)(uint64_t, _QWORD *);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v0 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2A80];
  sub_1ABD02FCC(0, &qword_1ED346E50, &qword_1ED346E48, MEMORY[0x1E0DB2A80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - v2;
  sub_1ABF31060();
  sub_1ABF313F0();
  swift_release();
  sub_1ABD0302C(0, &qword_1ED346E48, v0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v8 = sub_1ABF313B4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    return v8;
  }
  return result;
}

void sub_1ABD38854()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  sub_1ABD02FCC(0, &qword_1ED346E50, &qword_1ED346E48, MEMORY[0x1E0DB2A80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10 - v1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1ABF31060();
    sub_1ABF313F0();
    swift_release();
    sub_1ABD0302C(0, &qword_1ED346E48, MEMORY[0x1E0DB2A80]);
    v4 = v3;
    v5 = *(_QWORD *)(v3 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1ABF313D8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
      v6 = (void *)sub_1ABF31114();
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABF31174();
      swift_release();

      sub_1ABF2FF68();
      v7 = (void *)sub_1ABF31114();
      sub_1ABD34704();
      sub_1ABF31174();
      swift_release();
      swift_release();

      sub_1ABF2FF68();
      v8 = (void *)sub_1ABF31114();
      sub_1ABF31180();
      swift_release();
      swift_release();

      v9 = (void *)sub_1ABF31114();
      sub_1ABF311B0();
      swift_release();
      swift_release();
      swift_release();

    }
  }
}

ValueMetadata *type metadata accessor for AppReviewPromptConfiguration()
{
  return &type metadata for AppReviewPromptConfiguration;
}

uint64_t sub_1ABD38AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for WatchlistDeprecationMonitor()
{
  return objc_opt_self();
}

uint64_t sub_1ABD38AD4()
{
  return sub_1ABD38ADC();
}

uint64_t sub_1ABD38ADC()
{
  uint64_t v0;

  v0 = sub_1ABF30C40();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1ABD38B34()
{
  return sub_1ABF30E08();
}

uint64_t sub_1ABD38B3C()
{
  sub_1ABF30BE0();
  sub_1ABF2FF68();
  sub_1ABF30B98();
  return swift_release();
}

uint64_t sub_1ABD38B8C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + 2;
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return sub_1ABD379C8(v2, v3);
}

uint64_t type metadata accessor for StubAppConfigurationManager()
{
  return objc_opt_self();
}

uint64_t sub_1ABD38BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABD39078(a1, a3, a4);
}

uint64_t sub_1ABD38BF4()
{
  return 1;
}

uint64_t sub_1ABD38BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABD12ED4(a1, a2, a3, a4, v4);
}

double sub_1ABD38C04(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  _BYTE v9[1120];
  _BYTE v10[168];
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[25];
  _BYTE v15[265];
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  _OWORD v25[32];
  _BYTE v26[168];
  _BYTE v27[1120];

  MEMORY[0x1E0C80A78](a1);
  v24 = 0u;
  v23 = 0u;
  v22 = 0;
  v21 = 0u;
  v20 = 0u;
  v19 = 0u;
  v18 = 0u;
  v16 = 2;
  v17 = 0u;
  sub_1ABE7C13C(v25);
  sub_1ABD843F0((uint64_t)v25, (uint64_t)v15, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  v11 = 1;
  v12 = 0u;
  v13 = 0u;
  memset(v14, 0, sizeof(v14));
  sub_1ABE7C18C((uint64_t)v26);
  sub_1ABD843F0((uint64_t)v26, (uint64_t)v10, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1ABE7C1B0(v27);
  sub_1ABD843F0((uint64_t)v27, (uint64_t)v9, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  return sub_1ABEF3EC4(2, 0, 0, 0, 1, 0, 1, 0, 0.0, v1, v2, v3, v4, v5, v6, v7, 1, 0.0, 1,
           0,
           1,
           0,
           1,
           0,
           1,
           0,
           2,
           2,
           0.0,
           1,
           2,
           2,
           0,
           1,
           0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0,
           0,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0,
           1,
           0.0);
}

uint64_t sub_1ABD39078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v9 + 8);
  sub_1ABF312A0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, a2);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a2;
  *((_QWORD *)v12 + 3) = v10;
  *((_QWORD *)v12 + 4) = a3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  *(_QWORD *)&v12[(v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8] = a1;
  sub_1ABF2FF68();
  return sub_1ABF312AC();
}

uint64_t sub_1ABD39194(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1ABD3919C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1ABD391A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1ABD391AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for UpdateUserStartDateCommand()
{
  uint64_t result;

  result = qword_1ED34D858;
  if (!qword_1ED34D858)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD39288()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StubIdentificationService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3931C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1ABD39324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t type metadata accessor for QuoteManagerObserverProxy()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PrivateDataActionProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ForYouConfigRecordService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD394B4()
{
  uint64_t v0;

  sub_1ABF2FF68();
  v0 = sub_1ABF30C40();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1ABD39524(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1ABD39534(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(void *))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

void sub_1ABD39534(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t a7, uint64_t a8)
{
  int *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t *v31;
  _QWORD v32[3];

  v32[0] = a3;
  v13 = (int *)type metadata accessor for ForYouConfigRecord(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v32 - v17;
  if (a2)
  {
    swift_getErrorValue();
    v19 = v32[2];
    v20 = a2;
    if ((sub_1ABE5DCE0(v19) & 1) != 0)
    {
      sub_1ABD19560();
      v21 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      v22 = MEMORY[0x1E0DEE9D8];
      sub_1ABF31318();

      v23 = (_QWORD *)((char *)v16 + v13[5]);
      type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
      sub_1ABF30754();
      *v23 = v22;
      *v16 = 0x676E697373696DLL;
      v16[1] = 0xE700000000000000;
      *(_QWORD *)((char *)v16 + v13[6]) = v22;
      v24 = (_QWORD *)((char *)v16 + v13[7]);
      *v24 = 0;
      v24[1] = 0xE000000000000000;
      *(_QWORD *)((char *)v16 + v13[8]) = v22;
      ((void (*)(_QWORD *))v32[0])(v16);

      sub_1ABD3FAF4((uint64_t)v16);
    }
    else
    {
      a5(a2);

    }
  }
  else
  {
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1ABF2FF5C();
      v25 = sub_1ABD00F9C(a7, a8);
      if ((v26 & 1) != 0)
      {
        v27 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v25);
        v28 = *v27;
        v29 = v27[1];
        sub_1ABD0F474(*v27, v29);
        swift_bridgeObjectRelease();
        sub_1ABF301E4();
        swift_allocObject();
        sub_1ABF301D8();
        sub_1ABCFE22C((unint64_t *)&qword_1ED346B40, 255, type metadata accessor for ForYouConfigRecord, (uint64_t)&unk_1ABF4C7D4);
        sub_1ABF301C0();
        swift_release();
        ((void (*)(char *))v32[0])(v18);
        sub_1ABD0F430(v28, v29);
        sub_1ABD3FAF4((uint64_t)v18);
        return;
      }
      swift_bridgeObjectRelease();
    }
    sub_1ABE68E5C();
    v30 = (void *)swift_allocError();
    *v31 = a7;
    v31[1] = a8;
    sub_1ABF2FF5C();
    a5(v30);

  }
}

void sub_1ABD39850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  sub_1ABD08688(a1, a2, a3, a4, v4);
}

uint64_t sub_1ABD39858(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (qword_1ED346CF0 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED346C20, a2, (uint64_t (*)(uint64_t))type metadata accessor for ForYouConfigRecordService, (uint64_t)&unk_1ABF45D88);
  sub_1ABF30970();
  v3 = v8;
  v4 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v4 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v4)
  {
    swift_bridgeObjectRelease();
    v5 = a1[6];
    v6 = a1[7];
    __swift_project_boxed_opaque_existential_1(a1 + 3, v5);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 8))(&v8, v5, v6);
    v3 = v10;
    sub_1ABF2FF5C();
    sub_1ABD7DDF4((uint64_t)&v8);
  }
  return v3;
}

uint64_t sub_1ABD39950()
{
  return sub_1ABD39958();
}

uint64_t sub_1ABD39958()
{
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED346DE0, type metadata accessor for ForYouConfigRecord, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t type metadata accessor for YahooAttributionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1ABD399D4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BYTE v12[3120];
  _QWORD v13[390];

  v2 = (_QWORD *)MEMORY[0x1E0C80A78](a1);
  v3 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)&v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v2[3];
  v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v13, v6, v7);
  sub_1ABEB3378(v5);
  sub_1ABD7DDF4((uint64_t)v13);
  sub_1ABCF5A54(0, &qword_1ED34EA58, type metadata accessor for RawAttributionSource, MEMORY[0x1E0DB39E0]);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1ABF30CD0();
  v8 = v2[3];
  v9 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  swift_allocObject();
  swift_weakInit();
  v10 = (void *)sub_1ABF31114();
  sub_1ABF30CE8();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  return v1;
}

unint64_t sub_1ABD39B78()
{
  unint64_t result;

  result = qword_1ED34F628;
  if (!qword_1ED34F628)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E6B8, &type metadata for SubscriptionButtonConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34F628);
  }
  return result;
}

uint64_t sub_1ABD39BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a3;
  v22 = a4;
  v23 = a2;
  v21 = a1;
  v4 = sub_1ABF30B38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30760();
  v19 = *(_QWORD *)(v8 - 8);
  v20 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1ABF30C28();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868];
  v18 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350AF8, v12, MEMORY[0x1E0DB3870]);
  sub_1ABCF5A54(0, &qword_1ED350B68, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B70, &qword_1ED350B68, v12);
  sub_1ABF31E04();
  sub_1ABF30754();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB3560], v4);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, char *, uint64_t))(v22 + 8))(v21, v23, v14, v10, v7, v24);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v20);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v11);
  return v15;
}

uint64_t sub_1ABD39DBC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for NewsConfigurationManager()
{
  return objc_opt_self();
}

char *sub_1ABD39DE4(char *result, uint64_t a2, uint64_t a3, SEL *a4)
{
  if (a3)
    return (char *)objc_msgSend(*(id *)&result[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers], *a4);
  return result;
}

uint64_t type metadata accessor for AppleAttributionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1ABD39FA4(uint64_t a1)
{
  return sub_1ABD0B4A0(a1, 0xD000000000000014, 0x80000001ABF59810, &qword_1ED368318);
}

uint64_t type metadata accessor for WatchlistSortingService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StubStockMetadataSevice()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3A008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1ABF31C18();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF31C00();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1ABF315D0();
  MEMORY[0x1E0C80A78](v6);
  v10[1] = sub_1ABD133B8();
  sub_1ABF315B8();
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v5, MEMORY[0x1E0DEF828]);
  sub_1ABCF5A54(0, &qword_1ED34FCE0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCE8, &qword_1ED34FCE0, v5);
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  v7 = sub_1ABF31C3C();
  v8 = v11;
  *(_QWORD *)(v11 + 16) = v7;
  return v8;
}

uint64_t sub_1ABD3A1E0()
{
  sub_1ABCF5A54(0, &qword_1EEC423D0, (uint64_t (*)(uint64_t))sub_1ABD3463C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD3A248()
{
  uint64_t v0;

  return sub_1ABD1552C(*(_QWORD **)(v0 + 16), *(void (**)(_QWORD *))(v0 + 24));
}

uint64_t sub_1ABD3A254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABD3A25C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABD3A25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v9 = sub_1ABF31594();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1ABF315D0();
  v13 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a6;
  v17[3] = sub_1ABD17050;
  v17[4] = v16;
  aBlock[4] = sub_1ABD3A248;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_2;
  v18 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF315AC();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v10, MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, v10);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v15, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

uint64_t type metadata accessor for SDSBaseOperationFactory()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3A4B4(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF39DC0;
  *(_QWORD *)(inited + 32) = sub_1ABF317A4();
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = 0xD000000000000017;
  *(_QWORD *)(inited + 56) = 0x80000001ABF59A20;
  *(_QWORD *)(inited + 64) = sub_1ABF317A4();
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 0xD000000000000017;
  *(_QWORD *)(inited + 88) = 0x80000001ABF59A40;
  *(_QWORD *)(inited + 96) = sub_1ABF317A4();
  *(_QWORD *)(inited + 104) = v7;
  *(_QWORD *)(inited + 112) = 0xD000000000000017;
  *(_QWORD *)(inited + 120) = 0x80000001ABF59A60;
  *(_QWORD *)(inited + 128) = sub_1ABF317A4();
  *(_QWORD *)(inited + 136) = v8;
  *(_QWORD *)(inited + 144) = 0xD000000000000017;
  *(_QWORD *)(inited + 152) = 0x80000001ABF59A80;
  *(_QWORD *)(inited + 160) = sub_1ABF317A4();
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 176) = 0xD000000000000017;
  *(_QWORD *)(inited + 184) = 0x80000001ABF59AA0;
  v10 = sub_1ABD031C0(inited);
  if (*(_QWORD *)(v10 + 16))
  {
    sub_1ABF2FF5C();
    v11 = sub_1ABD00F9C(a1, a2);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v11);
      sub_1ABF2FF5C();
    }
    else
    {
      v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1ABD3A660(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF39DC0;
  *(_QWORD *)(inited + 32) = sub_1ABF317A4();
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = 0xD000000000000017;
  *(_QWORD *)(inited + 56) = 0x80000001ABF59AC0;
  *(_QWORD *)(inited + 64) = sub_1ABF317A4();
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 0xD000000000000017;
  *(_QWORD *)(inited + 88) = 0x80000001ABF59AE0;
  *(_QWORD *)(inited + 96) = sub_1ABF317A4();
  *(_QWORD *)(inited + 104) = v7;
  *(_QWORD *)(inited + 112) = 0xD000000000000017;
  *(_QWORD *)(inited + 120) = 0x80000001ABF59B00;
  *(_QWORD *)(inited + 128) = sub_1ABF317A4();
  *(_QWORD *)(inited + 136) = v8;
  *(_QWORD *)(inited + 144) = 0xD000000000000017;
  *(_QWORD *)(inited + 152) = 0x80000001ABF59B20;
  *(_QWORD *)(inited + 160) = sub_1ABF317A4();
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 176) = 0xD000000000000017;
  *(_QWORD *)(inited + 184) = 0x80000001ABF59B40;
  v10 = sub_1ABD031C0(inited);
  if (*(_QWORD *)(v10 + 16))
  {
    sub_1ABF2FF5C();
    v11 = sub_1ABD00F9C(a1, a2);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v11);
      sub_1ABF2FF5C();
    }
    else
    {
      v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1ABD3A80C(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF39DC0;
  *(_QWORD *)(inited + 32) = sub_1ABF317A4();
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = 0xD000000000000017;
  *(_QWORD *)(inited + 56) = 0x80000001ABF59B60;
  *(_QWORD *)(inited + 64) = sub_1ABF317A4();
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 0xD000000000000017;
  *(_QWORD *)(inited + 88) = 0x80000001ABF59B80;
  *(_QWORD *)(inited + 96) = sub_1ABF317A4();
  *(_QWORD *)(inited + 104) = v7;
  *(_QWORD *)(inited + 112) = 0xD000000000000017;
  *(_QWORD *)(inited + 120) = 0x80000001ABF59BA0;
  *(_QWORD *)(inited + 128) = sub_1ABF317A4();
  *(_QWORD *)(inited + 136) = v8;
  *(_QWORD *)(inited + 144) = 0xD000000000000017;
  *(_QWORD *)(inited + 152) = 0x80000001ABF59BC0;
  *(_QWORD *)(inited + 160) = sub_1ABF317A4();
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 176) = 0xD000000000000017;
  *(_QWORD *)(inited + 184) = 0x80000001ABF59BE0;
  v10 = sub_1ABD031C0(inited);
  if (*(_QWORD *)(v10 + 16))
  {
    sub_1ABF2FF5C();
    v11 = sub_1ABD00F9C(a1, a2);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v11);
      sub_1ABF2FF5C();
    }
    else
    {
      v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_1ABD3A9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,unint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48,uint64_t a49,char a50,uint64_t a51,char a52,char a53,char a54,uint64_t a55,char a56,uint64_t a57,char a58)
{
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  char v107;
  char v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v113;
  uint64_t v115;
  uint64_t v117;
  uint64_t v118;
  _QWORD __src[64];
  _BYTE v130[176];

  v58 = a16;
  v59 = a14;
  sub_1ABDCBC58(a36, (uint64_t)v130);
  if (a14)
  {
    v60 = a18;
    if (a16)
      goto LABEL_3;
LABEL_8:
    if (qword_1ED34F9C8 != -1)
      swift_once();
    swift_beginAccess();
    v65 = qword_1ED34E878;
    v66 = qword_1ED34E880;
    sub_1ABF2FF5C();
    a15 = sub_1ABD3AFF0(v65, v66);
    v58 = v67;
    swift_bridgeObjectRelease();
    v61 = a20;
    if (v60)
      goto LABEL_4;
    goto LABEL_11;
  }
  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  v62 = qword_1ED34E878;
  v63 = qword_1ED34E880;
  sub_1ABF2FF5C();
  a13 = sub_1ABD3B19C(v62, v63);
  v59 = v64;
  swift_bridgeObjectRelease();
  v60 = a18;
  if (!a16)
    goto LABEL_8;
LABEL_3:
  v61 = a20;
  if (v60)
  {
LABEL_4:
    v117 = v60;
    goto LABEL_14;
  }
LABEL_11:
  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  v68 = qword_1ED34E878;
  v69 = qword_1ED34E880;
  sub_1ABF2FF5C();
  a17 = sub_1ABD3A80C(v68, v69);
  v117 = v70;
  swift_bridgeObjectRelease();
LABEL_14:
  v71 = a22;
  v118 = v58;
  if (v61)
  {
    v115 = v61;
  }
  else
  {
    if (qword_1ED34F9C8 != -1)
      swift_once();
    swift_beginAccess();
    v73 = qword_1ED34E878;
    v74 = qword_1ED34E880;
    sub_1ABF2FF5C();
    v75 = sub_1ABD3A660(v73, v74);
    v115 = v76;
    swift_bridgeObjectRelease();
    a19 = v75;
  }
  v77 = a58;
  v78 = a57;
  v79 = a56;
  v80 = a55;
  v81 = a54;
  v82 = a53;
  v83 = a52;
  v84 = a43;
  v86 = a34;
  v85 = a35;
  v88 = a32;
  v87 = a33;
  v89 = a30;
  v90 = a29;
  v91 = a28;
  v92 = a24;
  if (!a22)
  {
    v113 = a19;
    if (qword_1ED34F9C8 != -1)
      swift_once();
    swift_beginAccess();
    v95 = qword_1ED34E878;
    v94 = qword_1ED34E880;
    sub_1ABF2FF5C();
    a21 = sub_1ABD3A4B4(v95, v94);
    v71 = v96;
    swift_bridgeObjectRelease();
    v77 = a58;
    v80 = a55;
    v78 = a57;
    v81 = a54;
    v79 = a56;
    v82 = a53;
    v92 = a24;
    v83 = a52;
    a19 = v113;
    v85 = a35;
    v84 = a43;
    v86 = a34;
    v89 = a30;
    v90 = a29;
    v91 = a28;
    v88 = a32;
    v87 = a33;
  }
  __src[0] = a1;
  __src[1] = a2;
  __src[7] = v59;
  __src[8] = a15;
  __src[9] = v118;
  __src[10] = a17;
  __src[11] = v117;
  __src[12] = a19;
  __src[13] = v115;
  __src[14] = a21;
  __src[15] = v71;
  __src[16] = a23;
  __src[21] = a31;
  __src[22] = v88;
  __src[23] = v87;
  __src[24] = v85;
  __src[25] = v86;
  if (a44)
    v97 = a44;
  else
    v97 = 0xE000000000000000;
  if (a44)
    v98 = v84;
  else
    v98 = 0;
  if ((v89 & 1) != 0)
    v99 = 0;
  else
    v99 = v90;
  v100 = 172800;
  if ((v91 & 1) == 0)
    v100 = a27;
  v101 = 604800;
  if ((a26 & 1) == 0)
    v101 = a25;
  if ((a12 & 1) != 0)
    a11 = 0;
  v103 = a7;
  if ((a8 & 1) != 0)
    v103 = 0;
  if ((a48 & 1) != 0)
    a47 = 0;
  if ((a50 & 1) != 0)
    a49 = 0;
  if ((v83 & 1) != 0)
    a51 = 0;
  v107 = v82 & 1;
  v108 = v81 & 1;
  if ((v79 & 1) != 0)
    v109 = 25;
  else
    v109 = v80;
  LOBYTE(__src[2]) = a3 & 1;
  BYTE1(__src[2]) = (a4 == 2) | a4 & 1;
  v110 = (v77 == 2) | v77;
  BYTE2(__src[2]) = a5 & 1;
  if (v78)
    v111 = v78;
  else
    v111 = MEMORY[0x1E0DEE9D8];
  BYTE3(__src[2]) = a6 & 1;
  __src[3] = v103;
  LOBYTE(__src[4]) = a10 & 1;
  __src[5] = a11;
  __src[6] = a13;
  __src[17] = v92;
  __src[18] = v101;
  __src[19] = v100;
  __src[20] = v99;
  sub_1ABDCBC58((uint64_t)v130, (uint64_t)&__src[26]);
  LOBYTE(__src[48]) = a38 & 1;
  __src[47] = a37;
  __src[49] = a39;
  LOBYTE(__src[50]) = a40 & 1;
  __src[51] = a41;
  __src[52] = a42;
  __src[53] = v98;
  __src[54] = v97;
  __src[55] = a45;
  __src[56] = a46;
  __src[57] = a47;
  __src[58] = a49;
  __src[59] = a51;
  LOBYTE(__src[60]) = v107;
  BYTE1(__src[60]) = v108;
  __src[61] = v109;
  __src[62] = v111;
  LOBYTE(__src[63]) = v110 & 1;
  return memcpy(a9, __src, 0x1F9uLL);
}

uint64_t sub_1ABD3AFF0(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF39DC0;
  *(_QWORD *)(inited + 32) = sub_1ABF317A4();
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = 0xD000000000000017;
  *(_QWORD *)(inited + 56) = 0x80000001ABF59C00;
  *(_QWORD *)(inited + 64) = sub_1ABF317A4();
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 0xD000000000000017;
  *(_QWORD *)(inited + 88) = 0x80000001ABF59C20;
  *(_QWORD *)(inited + 96) = sub_1ABF317A4();
  *(_QWORD *)(inited + 104) = v7;
  *(_QWORD *)(inited + 112) = 0xD000000000000017;
  *(_QWORD *)(inited + 120) = 0x80000001ABF59C40;
  *(_QWORD *)(inited + 128) = sub_1ABF317A4();
  *(_QWORD *)(inited + 136) = v8;
  *(_QWORD *)(inited + 144) = 0xD000000000000017;
  *(_QWORD *)(inited + 152) = 0x80000001ABF59C60;
  *(_QWORD *)(inited + 160) = sub_1ABF317A4();
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 176) = 0xD000000000000017;
  *(_QWORD *)(inited + 184) = 0x80000001ABF59C80;
  v10 = sub_1ABD031C0(inited);
  if (*(_QWORD *)(v10 + 16))
  {
    sub_1ABF2FF5C();
    v11 = sub_1ABD00F9C(a1, a2);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v11);
      sub_1ABF2FF5C();
    }
    else
    {
      v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1ABD3B19C(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF39DC0;
  *(_QWORD *)(inited + 32) = sub_1ABF317A4();
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = 0xD000000000000017;
  *(_QWORD *)(inited + 56) = 0x80000001ABF59CA0;
  *(_QWORD *)(inited + 64) = sub_1ABF317A4();
  *(_QWORD *)(inited + 72) = v6;
  *(_QWORD *)(inited + 80) = 0xD000000000000017;
  *(_QWORD *)(inited + 88) = 0x80000001ABF59CC0;
  *(_QWORD *)(inited + 96) = sub_1ABF317A4();
  *(_QWORD *)(inited + 104) = v7;
  *(_QWORD *)(inited + 112) = 0xD000000000000017;
  *(_QWORD *)(inited + 120) = 0x80000001ABF59CE0;
  *(_QWORD *)(inited + 128) = sub_1ABF317A4();
  *(_QWORD *)(inited + 136) = v8;
  *(_QWORD *)(inited + 144) = 0xD000000000000017;
  *(_QWORD *)(inited + 152) = 0x80000001ABF59D00;
  *(_QWORD *)(inited + 160) = sub_1ABF317A4();
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 176) = 0xD000000000000017;
  *(_QWORD *)(inited + 184) = 0x80000001ABF59D20;
  v10 = sub_1ABD031C0(inited);
  if (*(_QWORD *)(v10 + 16))
  {
    sub_1ABF2FF5C();
    v11 = sub_1ABD00F9C(a1, a2);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v11);
      sub_1ABF2FF5C();
    }
    else
    {
      v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t sub_1ABD3B350()
{
  unint64_t result;

  result = qword_1ED34F4F0;
  if (!qword_1ED34F4F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B994, &type metadata for PaidBundleConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F4F0);
  }
  return result;
}

unint64_t sub_1ABD3B394()
{
  unint64_t result;

  result = qword_1ED34F4E8;
  if (!qword_1ED34F4E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B9BC, &type metadata for PaidBundleConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F4E8);
  }
  return result;
}

uint64_t type metadata accessor for NoFavoritesPersonalizer()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3B3F8()
{
  sub_1ABD34ED8(0, &qword_1ED34DD08);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD3B44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABD3B454(a1, a2, a3, a4, v4);
}

uint64_t sub_1ABD3B454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a5;
  v11[3] = sub_1ABD12970;
  v11[4] = v10;
  v11[5] = a3;
  v11[6] = a4;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF312E8();
  return swift_release();
}

uint64_t sub_1ABD3B504()
{
  return sub_1ABD3B50C();
}

uint64_t sub_1ABD3B50C()
{
  void *v0;

  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
  v0 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();

  sub_1ABD34ED8(0, (unint64_t *)&qword_1ED34DD80);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD3B5BC()
{
  sub_1ABF30BE0();
  sub_1ABF2FF68();
  sub_1ABF30B98();
  return swift_release();
}

void sub_1ABD3B60C(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABD24B28(a1, a2, a3, a4, v4);
}

uint64_t sub_1ABD3B614(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1ABD3B61C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1ABD3B624(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABD3B62C()
{
  return 0x7365746F7551;
}

uint64_t sub_1ABD3B640()
{
  return 1937204558;
}

uint64_t sub_1ABD3B650()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for UpdateAdsUserIDCommand()
{
  uint64_t result;

  result = qword_1ED34D6E0;
  if (!qword_1ED34D6E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for UnnecessaryWordRemover()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3B72C()
{
  uint64_t result;

  result = sub_1ABCFB180(0xD00000000000001DLL, 0x80000001ABF623C0);
  qword_1ED346BF0 = result;
  return result;
}

uint64_t type metadata accessor for StubQuoteDetailService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3B780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1ABF31C18();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF31C00();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1ABF315D0();
  MEMORY[0x1E0C80A78](v6);
  v10[1] = sub_1ABD133B8();
  sub_1ABF315B8();
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v5, MEMORY[0x1E0DEF828]);
  sub_1ABCF5A54(0, &qword_1ED34FCE0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCE8, &qword_1ED34FCE0, v5);
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  v7 = sub_1ABF31C3C();
  v8 = v11;
  *(_QWORD *)(v11 + 16) = v7;
  return v8;
}

uint64_t type metadata accessor for SDSAttributionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3B978()
{
  uint64_t v0;

  return sub_1ABD3B980(v0);
}

uint64_t sub_1ABD3B980(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v6[40];
  _OWORD v7[2];
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _BYTE v15[16];
  uint64_t v16;
  __int128 v17;

  v2 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64));
  sub_1ABD42D74(*(_BYTE *)(a1 + 24), (uint64_t)v6);
  sub_1ABD463AC((uint64_t)v6, (uint64_t)v7, &qword_1ED34EBB0);
  if (*((_QWORD *)&v7[0] + 1))
  {
    v9 = v7[0];
    v10 = v7[1];
    v11 = v8;
    sub_1ABDE49B8((uint64_t *)&v9);
    v12 = v9;
    v13 = v10;
    v14 = v11;
    v17 = v9;
    sub_1ABDE55E4((uint64_t)&v17);
    v16 = v13;
    sub_1ABD66AA0((uint64_t)&v16);
    sub_1ABD463AC((uint64_t)&v13 + 8, (uint64_t)v15, (unint64_t *)&qword_1ED34FB80);
    return sub_1ABDE55E4((uint64_t)v15);
  }
  else
  {
    sub_1ABF2FF68();
    sub_1ABF30CDC();
    swift_release();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34EA30, type metadata accessor for RawAttributionSource, (uint64_t)&unk_1ABF3C2FC);
    sub_1ABF30CF4();
    return sub_1ABCFC3BC((uint64_t)v4, type metadata accessor for RawAttributionSource);
  }
}

uint64_t sub_1ABD3BB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1ABF31594();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF315D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = sub_1ABD3B978;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_10;
  v11 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF315AC();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v3, MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD33CAC();
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t type metadata accessor for HeadlineViewingHistory()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3BCEC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for StubFeedLookupService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3BD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1ABF31C18();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF31C00();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1ABF315D0();
  MEMORY[0x1E0C80A78](v6);
  v10[1] = sub_1ABD133B8();
  sub_1ABF315B8();
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v5, MEMORY[0x1E0DEF828]);
  sub_1ABCF5A54(0, &qword_1ED34FCE0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCE8, &qword_1ED34FCE0, v5);
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  v7 = sub_1ABF31C3C();
  v8 = v11;
  *(_QWORD *)(v11 + 16) = v7;
  return v8;
}

uint64_t sub_1ABD3BEEC()
{
  sub_1ABCF5A54(0, &qword_1EEC450B0, (uint64_t (*)(uint64_t))sub_1ABD345C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD3BF54()
{
  uint64_t v0;

  return sub_1ABD234D4(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD *))(v0 + 24));
}

uint64_t sub_1ABD3BF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABD3BF68(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABD3BF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v9 = sub_1ABF31594();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1ABF315D0();
  v13 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a6;
  v17[3] = sub_1ABD17050;
  v17[4] = v16;
  aBlock[4] = sub_1ABD3BF54;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_40;
  v18 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF315AC();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v10, MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, v10);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v15, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

uint64_t type metadata accessor for StockPriceDataManager()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3C1C0(uint64_t a1, uint64_t a2)
{
  return sub_1ABD3C458(a1, a2);
}

uint64_t sub_1ABD3C1E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1ABF31594();
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1ABF315D0();
  v7 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v10 = a1[1];
  sub_1ABF30AC0();
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 144);
  sub_1ABF2FF5C();
  sub_1ABF30ACC();
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD60);
  v13 = (void *)sub_1ABF31C24();
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = v12;
  v15[4] = v11;
  v15[5] = v10;
  aBlock[4] = sub_1ABD3C1E0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_22;
  v16 = _Block_copy(aBlock);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_release();
  sub_1ABF315AC();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD33CAC();
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v20);
}

uint64_t sub_1ABD3C458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1ABF30AC0();
  v4 = (_QWORD *)(v2 + 144);
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 144);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v5 >> 62)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1AF4380CC](i, v5);
    }
    else
    {
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      sub_1ABF2FF68();
    }
    v10 = MEMORY[0x1AF4390D4](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v14;
LABEL_15:
  *v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for StockPriceDataManagerObserverProxy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1AF437C04](v13);
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  swift_endAccess();
  return sub_1ABF30ACC();
}

uint64_t sub_1ABD3C69C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1ABF31594();
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1ABF315D0();
  v7 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v10 = a1[1];
  sub_1ABF30AC0();
  swift_beginAccess();
  v12 = *(_QWORD *)(v2 + 136);
  sub_1ABF2FF5C();
  sub_1ABF30ACC();
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD60);
  v13 = (void *)sub_1ABF31C24();
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = v12;
  v15[4] = v11;
  v15[5] = v10;
  aBlock[4] = sub_1ABD12998;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_23_0;
  v16 = _Block_copy(aBlock);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_release();
  sub_1ABF315AC();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD33CAC();
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v20);
}

uint64_t type metadata accessor for SDSAuthTokenRefresher()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3C930()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30DCC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for KVSCleanupStartupTask()
{
  uint64_t result;

  result = qword_1ED346BE0;
  if (!qword_1ED346BE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD3C9F0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for KVSCleanupStartupTask();
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABD3CA30()
{
  unint64_t result;

  result = qword_1ED346BC8;
  if (!qword_1ED346BC8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF458AC, &type metadata for KVSCleanupStartupTask.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED346BC8);
  }
  return result;
}

uint64_t sub_1ABD3CA74(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABD3CA7C(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1ABD3CA7C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  void *v4;
  uint64_t v5;
  id v6;

  if (qword_1ED346670 != -1)
    swift_once();
  v4 = (void *)qword_1ED368300;
  sub_1ABD0F55C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  v6 = v4;
  sub_1ABF31F6C();
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = 0xE000000000000000;
  sub_1ABF31BF4();
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  return a2(a1);
}

void sub_1ABD3CBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1ABD3CCE4(a1, a2, a3, a4);
}

uint64_t sub_1ABD3CBC8()
{
  id v0;

  if (qword_1ED346670 != -1)
    swift_once();
  v0 = (id)qword_1ED368300;
  sub_1ABF31BF4();
  sub_1ABF31318();

  sub_1ABD03D24();
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD3CC94()
{
  return sub_1ABD3CBC8();
}

uint64_t sub_1ABD3CCC0()
{
  return sub_1ABD3CF9C();
}

void sub_1ABD3CCE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABF3127C();
  sub_1ABF2FF68();
  v9 = (void *)sub_1ABF31114();
  sub_1ABF31174();
  swift_release();
  swift_release();

  sub_1ABF2FF68();
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31174();
  swift_release();
  swift_release();

  sub_1ABF2FF68();
  v11 = (void *)sub_1ABF31114();
  sub_1ABF31174();
  swift_release();
  swift_release();

  sub_1ABF2FF68();
  v12 = (void *)sub_1ABF31114();
  sub_1ABF31174();
  swift_release();
  swift_release();

  sub_1ABF2FF68();
  v13 = (void *)sub_1ABF31114();
  sub_1ABF31174();
  swift_release();
  swift_release();

  sub_1ABF2FF68();
  v14 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1ABD12970;
  *(_QWORD *)(v15 + 24) = v8;
  v16 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  sub_1ABF2FF68();
  v18 = (id)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABD3CF9C()
{
  id v0;
  _BYTE *v1;
  char v3;

  if (qword_1ED346670 != -1)
    swift_once();
  v0 = (id)qword_1ED368300;
  sub_1ABF31BF4();
  sub_1ABF31318();

  if (qword_1ED346CA8 != -1)
    swift_once();
  sub_1ABD3C9F0(&qword_1ED346BD0, (uint64_t)&unk_1ABF457BC);
  sub_1ABF30970();
  if (v3 == 1)
  {
    sub_1ABD3CA30();
    swift_allocError();
    *v1 = 0;
    sub_1ABD03D24();
    swift_allocObject();
    return sub_1ABF311D4();
  }
  else
  {
    sub_1ABD03D24();
    swift_allocObject();
    return sub_1ABF311E0();
  }
}

void sub_1ABD3D0FC()
{
  uint64_t v0;

  sub_1ABD3D108(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(void))(v0 + 32));
}

void sub_1ABD3D108(void (*a1)(uint64_t), uint64_t a2, void (*a3)(void))
{
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;

  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  v6 = (void *)sub_1ABF31780();
  v7 = objc_msgSend(v5, sel_arrayForKey_, v6);

  if (v7 && (v8 = sub_1ABF31A08(), v7, v9 = *(_QWORD *)(v8 + 16), v10 = swift_bridgeObjectRelease(), v9))
  {
    a1(v10);
  }
  else
  {
    sub_1ABD3CA30();
    v11 = (void *)swift_allocError();
    *v12 = 1;
    a3();

  }
}

uint64_t sub_1ABD3D22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1ABF30BE0();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = sub_1ABE67300;
  v9[3] = v8;
  v9[4] = a3;
  v9[5] = a4;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF30BD4();
  return swift_release();
}

uint64_t sub_1ABD3D2DC()
{
  sub_1ABD03D24();
  swift_allocObject();
  return sub_1ABF31228();
}

unint64_t sub_1ABD3D324()
{
  unint64_t result;

  result = qword_1ED346B98;
  if (!qword_1ED346B98)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48468, &type metadata for HeadlineHistoryEntity);
    atomic_store(result, (unint64_t *)&qword_1ED346B98);
  }
  return result;
}

unint64_t sub_1ABD3D368()
{
  unint64_t result;

  result = qword_1ED346B90;
  if (!qword_1ED346B90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48368, &type metadata for HeadlineHistoryEntity);
    atomic_store(result, (unint64_t *)&qword_1ED346B90);
  }
  return result;
}

unint64_t sub_1ABD3D3AC()
{
  unint64_t result;

  result = qword_1ED346B88;
  if (!qword_1ED346B88)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF483F0, &type metadata for HeadlineHistoryEntity);
    atomic_store(result, (unint64_t *)&qword_1ED346B88);
  }
  return result;
}

unint64_t sub_1ABD3D3F0()
{
  unint64_t result;

  result = qword_1ED346B80;
  if (!qword_1ED346B80)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48418, &type metadata for HeadlineHistoryEntity);
    atomic_store(result, (unint64_t *)&qword_1ED346B80);
  }
  return result;
}

unint64_t sub_1ABD3D434()
{
  unint64_t result;

  result = qword_1ED346B78;
  if (!qword_1ED346B78)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF484B0, &type metadata for HeadlineHistoryEntity);
    atomic_store(result, (unint64_t *)&qword_1ED346B78);
  }
  return result;
}

uint64_t sub_1ABD3D490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(a1, 1, a2);
}

uint64_t type metadata accessor for EndpointConfiguration.Defaults()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3D4C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1ABD3D4CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1ABD3D4D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1ABD3D4DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ABD3D4E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t type metadata accessor for UserInfoMergeHandler()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StubWatchlistService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3D52C()
{
  return sub_1ABD15DB0();
}

uint64_t sub_1ABD3D534(uint64_t a1, uint64_t a2)
{
  return sub_1ABD3D6E4(a1, a2);
}

uint64_t sub_1ABD3D554()
{
  sub_1ABD04518(0, &qword_1ED34DD38, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD3D5B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  sub_1ABD04578(0, &qword_1ED34E328, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF366C0;
  v5 = sub_1ABF317A4();
  *(_QWORD *)(v4 + 32) = 0x6F626D795320794DLL;
  *(_QWORD *)(v4 + 40) = 0xEA0000000000736CLL;
  *(_QWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(_WORD *)(v4 + 72) = 160;
  *a2 = v4;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD3D664()
{
  return sub_1ABD3D67C();
}

uint64_t sub_1ABD3D67C()
{
  sub_1ABD04518(0, &qword_1ED34DD38, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD3D6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  type metadata accessor for WatchlistServiceObserverProxy();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v5 + 24) = a2;
  swift_unknownObjectWeakAssign();
  v6 = (uint64_t *)(v3 + 32);
  swift_beginAccess();
  v7 = sub_1ABF2FF68();
  MEMORY[0x1AF437C04](v7);
  if (*(_QWORD *)((*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  swift_endAccess();
  v8 = *v6;
  v15 = MEMORY[0x1E0DEE9D8];
  if (!((unint64_t)*v6 >> 62))
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v9)
      goto LABEL_5;
LABEL_16:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
LABEL_17:
    swift_release();
    *v6 = v14;
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v9 = result;
  if (!result)
    goto LABEL_16;
LABEL_5:
  if (v9 >= 1)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
      {
        v12 = MEMORY[0x1AF4380CC](i, v8);
      }
      else
      {
        v12 = *(_QWORD *)(v8 + 8 * i + 32);
        sub_1ABF2FF68();
      }
      v13 = MEMORY[0x1AF4390D4](v12 + 16);
      swift_unknownObjectRelease();
      if (v13)
      {
        sub_1ABF31EF4();
        sub_1ABF31F24();
        sub_1ABF31F30();
        sub_1ABF31F00();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    v14 = v15;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD3D8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABD13E18(a1, a2, a3, a4, v4);
}

uint64_t type metadata accessor for StubStockFeedService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3D924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1ABF31C18();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF31C00();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1ABF315D0();
  MEMORY[0x1E0C80A78](v6);
  v10[1] = sub_1ABD133B8();
  sub_1ABF315B8();
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v5, MEMORY[0x1E0DEF828]);
  sub_1ABCF5A54(0, &qword_1ED34FCE0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCE8, &qword_1ED34FCE0, v5);
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  v7 = sub_1ABF31C3C();
  v8 = v11;
  *(_QWORD *)(v11 + 16) = v7;
  return v8;
}

uint64_t type metadata accessor for StubSparklineService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3DB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_1ABF31C18();
  v9 = *(_QWORD *)(v1 - 8);
  v10 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF31C00();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1ABF315D0();
  MEMORY[0x1E0C80A78](v6);
  type metadata accessor for StubChartService();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1ABD429F8();
  sub_1ABD133B8();
  sub_1ABF315B8();
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v5, MEMORY[0x1E0DEF828]);
  sub_1ABCF5A54(0, &qword_1ED34FCE0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCE8, &qword_1ED34FCE0, v5);
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v3, *MEMORY[0x1E0DEF8D0], v10);
  *(_QWORD *)(v0 + 24) = sub_1ABF31C3C();
  return v0;
}

uint64_t sub_1ABD3DD14()
{
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34C8C0, (uint64_t (*)(uint64_t))sub_1ABD346A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD3DD7C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

void sub_1ABD3DDA8()
{
  uint64_t *v0;

  sub_1ABD3DDD0(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1ABD3DDB8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABD170B8(a1, *(_QWORD *)(v1 + 16));
}

void sub_1ABD3DDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;

  sub_1ABF2FF68();
  sub_1ABE4B6B4(a1, a2);
  swift_release();
  v12 = (void *)sub_1ABF31114();
  type metadata accessor for Chart(0);
  sub_1ABF3109C();

  swift_bridgeObjectRelease();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1ABF2FF5C();
  v13 = (void *)sub_1ABF31114();
  sub_1ABD346A0();
  sub_1ABF31174();
  swift_release();
  swift_release();

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  sub_1ABF2FF68();
  v15 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a6;
  sub_1ABF2FF68();
  v17 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABD3DF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABD3DFA0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABD3DFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t (*v21)(uint64_t);
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v12 = sub_1ABF31594();
  v26 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1ABF315D0();
  v24 = *(_QWORD *)(v15 - 8);
  v25 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  v23[1] = *(_QWORD *)(a5 + 24);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a6;
  v19[3] = a5;
  v19[4] = sub_1ABD17050;
  v19[5] = v18;
  v19[6] = a3;
  v19[7] = a4;
  aBlock[4] = sub_1ABD3DDA8;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_20;
  v20 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF315AC();
  v27 = MEMORY[0x1E0DEE9D8];
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, v21);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v17, v14, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
  return swift_release();
}

uint64_t type metadata accessor for StockMetadataManager()
{
  return objc_opt_self();
}

_QWORD *sub_1ABD3E218()
{
  _QWORD *v0;
  uint64_t v2;

  sub_1ABF312C4();
  v0 = sub_1ABD24D68(v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1ABD3E264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1ABD25CF4(a1, a2, a3, a4, a5);
}

unint64_t sub_1ABD3E28C()
{
  unint64_t result;

  result = qword_1ED34D600;
  if (!qword_1ED34D600)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F1F4, &type metadata for StockMetadataManager.CacheEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D600);
  }
  return result;
}

unint64_t sub_1ABD3E2D0()
{
  unint64_t result;

  result = qword_1ED34D5F8;
  if (!qword_1ED34D5F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F21C, &type metadata for StockMetadataManager.CacheEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D5F8);
  }
  return result;
}

uint64_t sub_1ABD3E314@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD3E31C(a1);
}

uint64_t sub_1ABD3E31C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABF31060();
  sub_1ABD02E70(0, (unint64_t *)&unk_1ED34DDD0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2AB0]);
  swift_allocObject();
  result = sub_1ABF313E4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABD3E3B8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABD3E434(a1, a2);
}

uint64_t sub_1ABD3E3D0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1ABD3E3D8(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1ABD3E3D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = *a1;
  v7 = *a1;
  sub_1ABF2FF5C();
  result = sub_1ABD0D8C0(a2, v5);
  *a3 = v7;
  return result;
}

uint64_t sub_1ABD3E434@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  sub_1ABF312D0();
  swift_bridgeObjectRelease();
  *a2 = v3;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD3E49C()
{
  uint64_t *v0;

  return sub_1ABD3E524(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10], v0[11]);
}

uint64_t sub_1ABD3E4D0()
{
  sub_1ABD02E70(0, &qword_1ED34DDA8, MEMORY[0x1E0DB2A80]);
  return sub_1ABF313C0();
}

uint64_t sub_1ABD3E524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t (*v11)(uint64_t, _QWORD *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t result;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v42 = a2;
  v53 = a6;
  v54 = a7;
  v51 = a4;
  v52 = a5;
  v41 = a1;
  v47 = a9;
  v48 = a3;
  v11 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2A80];
  sub_1ABD02E70(0, &qword_1ED34DDA8, MEMORY[0x1E0DB2A80]);
  v46 = v12;
  v49 = *(_QWORD *)(v12 - 8);
  v39[1] = *(_QWORD *)(v49 + 64);
  MEMORY[0x1E0C80A78](v12);
  v40 = (char *)v39 - v13;
  sub_1ABD02E10(0, &qword_1ED34DDB0, &qword_1ED34DDA8, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v50 = (char *)v39 - v15;
  v16 = sub_1ABF30B38();
  v17 = *(_QWORD *)(v16 - 8);
  v44 = v16;
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v45 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1ABF30760();
  v20 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v20 + 16))(v22, a8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v47, v16);
  v23 = (*(unsigned __int8 *)(v20 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v24 = (v21 + *(unsigned __int8 *)(v17 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v25 = (char *)swift_allocObject();
  v26 = v51;
  v27 = v52;
  *((_QWORD *)v25 + 2) = v48;
  *((_QWORD *)v25 + 3) = v26;
  v28 = v53;
  v29 = v54;
  *((_QWORD *)v25 + 4) = v27;
  *((_QWORD *)v25 + 5) = v28;
  *((_QWORD *)v25 + 6) = v29;
  v30 = v22;
  v31 = v49;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v25[v23], v30, v43);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v25[v24], v45, v44);
  swift_retain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF31060();
  v32 = v50;
  sub_1ABF313F0();
  swift_release();
  v33 = v46;
  result = (*(uint64_t (**)(char *, uint64_t))(v31 + 48))(v32, 1);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v54 = a10;
    sub_1ABD25FA4(0, &qword_1ED34DCD8, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, MEMORY[0x1E0DB4B98]);
    v35 = v40;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v40, v32, v33);
    v36 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v37 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v37 + v36, v35, v33);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    v38 = sub_1ABF3112C();
    swift_release();
    swift_release();
    swift_release();
    return v38;
  }
  return result;
}

uint64_t sub_1ABD3E89C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1ABF30760() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF30B38() - 8) + 80);
  return sub_1ABD0F604(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1ABD3E910@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1ABD0BB6C(a1, *(_QWORD **)(v2 + 16), a2);
}

uint64_t sub_1ABD3E928(uint64_t a1)
{
  return sub_1ABD3EBAC(a1);
}

uint64_t sub_1ABD3E930()
{
  return sub_1ABD3E94C();
}

uint64_t sub_1ABD3E94C()
{
  uint64_t (*v0)(uint64_t, _QWORD *);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v0 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2A80];
  sub_1ABD02E10(0, &qword_1ED34DDB0, &qword_1ED34DDA8, MEMORY[0x1E0DB2A80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - v2;
  sub_1ABF31060();
  sub_1ABF313F0();
  swift_release();
  sub_1ABD02E70(0, &qword_1ED34DDA8, v0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v8 = sub_1ABF313B4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    return v8;
  }
  return result;
}

uint64_t sub_1ABD3EA70()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v0 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ABF366C0;
  v2 = v0;
  v3 = MEMORY[0x1E0DEA968];
  v4 = sub_1ABF31630();
  v6 = v5;
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 40) = v6;
  sub_1ABF31BF4();
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  sub_1ABD34E14();
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD3EBAC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v2 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1ABF366C0;
  v4 = v2;
  v5 = MEMORY[0x1E0DEA968];
  v6 = MEMORY[0x1AF437C34](a1, MEMORY[0x1E0DEA968]);
  v8 = v7;
  *(_QWORD *)(v3 + 56) = v5;
  *(_QWORD *)(v3 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v3 + 32) = v6;
  *(_QWORD *)(v3 + 40) = v8;
  sub_1ABF31BF4();
  sub_1ABF31318();

  v9 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v9);
  sub_1ABD25FA4(0, &qword_1ED34DE30, (uint64_t)&type metadata for StockMetadataManager.CacheEntry, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_1ABF3127C();
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31174();
  swift_release();

  v11 = (void *)sub_1ABF31114();
  v12 = sub_1ABF311B0();
  swift_release();

  return v12;
}

uint64_t sub_1ABD3ED78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1ABD3ED80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

unint64_t sub_1ABD3ED88()
{
  unint64_t result;

  result = qword_1ED346B60;
  if (!qword_1ED346B60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48340, &type metadata for HeadlineHistoryModel);
    atomic_store(result, (unint64_t *)&qword_1ED346B60);
  }
  return result;
}

unint64_t sub_1ABD3EDCC()
{
  unint64_t result;

  result = qword_1ED346B58;
  if (!qword_1ED346B58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48318, &type metadata for HeadlineHistoryModel);
    atomic_store(result, (unint64_t *)&qword_1ED346B58);
  }
  return result;
}

uint64_t sub_1ABD3EE10(uint64_t a1)
{
  return sub_1ABD0B4A0(a1, 0xD000000000000010, 0x80000001ABF59850, &qword_1ED3683F0);
}

uint64_t sub_1ABD3EE34(uint64_t a1)
{
  return sub_1ABD0B4A0(a1, 0xD000000000000010, 0x80000001ABF597F0, &qword_1ED3683A8);
}

uint64_t type metadata accessor for UpdateUserIDCommand()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3EE78()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30B38();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for SDSAuthTokenService(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED34F298);
}

uint64_t type metadata accessor for SDSAuthTokenManager()
{
  return objc_opt_self();
}

unint64_t sub_1ABD3EF40()
{
  unint64_t result;

  result = qword_1ED34F280;
  if (!qword_1ED34F280)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49874, &type metadata for SDSAuthTokenManager.StoreDescriptor);
    atomic_store(result, (unint64_t *)&qword_1ED34F280);
  }
  return result;
}

uint64_t type metadata accessor for PermanentURLFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for NewsUserProfileShim()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for NewsHeadlineService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3F03C(uint64_t a1, uint64_t a2)
{
  return sub_1ABD25FF8(a1, a2);
}

void sub_1ABD3F05C(void *a1)
{
  uint64_t v1;

  sub_1ABD3F068(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)())(v1 + 32));
}

void sub_1ABD3F068(void *a1, void (*a2)(void), uint64_t a3, void (*a4)())
{
  id v7;
  void *v8;
  id v9;

  v7 = objc_msgSend(a1, sel_error);
  if (v7)
  {
    v9 = v7;
    a2();

  }
  else if (objc_msgSend(a1, sel_fetchedObject)
         && (sub_1ABD33C30(0), (swift_dynamicCast() & 1) != 0))
  {
    a4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ABE012C4();
    v8 = (void *)swift_allocError();
    a2();

  }
}

uint64_t sub_1ABD3F17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABD3F184(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABD3F184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  _QWORD *v18;
  void *v19;
  id v20;
  _QWORD v22[6];

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = *(_QWORD *)(a5 + 16);
  sub_1ABF2FF68();
  swift_unknownObjectRetain();
  sub_1ABD0B940(a6);
  v14 = objc_allocWithZone(MEMORY[0x1E0D58948]);
  v15 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1ABF319FC();
  v17 = objc_msgSend(v14, sel_initWithContext_articleIDs_ignoreCacheForArticleIDs_, v13, v15, v16);

  swift_unknownObjectRelease();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_1ABD17050;
  v18[5] = v12;
  v22[4] = sub_1ABD3F05C;
  v22[5] = v18;
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 1107296256;
  v22[2] = sub_1ABD29B8C;
  v22[3] = &block_descriptor_12;
  v19 = _Block_copy(v22);
  v20 = v17;
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v20, sel_setFetchCompletionBlock_, v19);
  _Block_release(v19);

  sub_1ABF30BE0();
  sub_1ABF30BA4();
  sub_1ABF30BC8();

  return swift_release();
}

uint64_t sub_1ABD3F354(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1ABD3F35C(a1, a2, v2 + 16);
}

uint64_t sub_1ABD3F35C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _BYTE *, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE v10[136];

  v5 = a2[3];
  v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  sub_1ABD261A4(a3, (uint64_t)v10);
  v7 = *(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(v6 + 16);
  v8 = sub_1ABF2FF5C();
  v7(v8, v10, v5, v6);
  return a1;
}

uint64_t type metadata accessor for FeatureAvailability()
{
  return objc_opt_self();
}

uint64_t sub_1ABD3F3F8()
{
  return sub_1ABD3F444() & 1;
}

uint64_t sub_1ABD3F420()
{
  return sub_1ABD3F548() & 1;
}

uint64_t sub_1ABD3F444()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[375];
  char v7;

  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED346D50 != -1)
    swift_once();
  v2 = v0[11];
  v1 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v1 + 8))(v6, v2, v1);
  sub_1ABD7DDF4((uint64_t)v6);
  if (v7)
    v3 = 0;
  else
    v3 = v6[374];
  objc_msgSend((id)objc_opt_self(), sel_enabledForCurrentLevel_, v3);
  v4 = sub_1ABF309D0();
  swift_release();
  return v4 & 1;
}

uint64_t sub_1ABD3F548()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  _QWORD v6[362];
  char v7;

  v1 = v0[11];
  v2 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v1);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v6, v1, v2);
  sub_1ABD7DDF4((uint64_t)v6);
  if ((v7 & 1) != 0)
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_enabledForCurrentLevel_, 0xFFFFFFFFLL);
  }
  else
  {
    v4 = v6[361];
    sub_1ABF309DC();
    sub_1ABF309C4();
    if (qword_1ED3466B8 != -1)
      swift_once();
    objc_msgSend((id)objc_opt_self(), sel_enabledForCurrentLevel_, v4);
    v3 = sub_1ABF309D0();
    swift_release();
  }
  return v3 & 1;
}

uint64_t storeEnumTagSinglePayload for WatchlistSortState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 133 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 133) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7B)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7A)
    return ((uint64_t (*)(void))((char *)&loc_1ABD3F6A8 + 4 * byte_1ABF46CCD[v4]))();
  *a1 = a2 - 123;
  return ((uint64_t (*)(void))((char *)sub_1ABD3F6DC + 4 * byte_1ABF46CC8[v4]))();
}

uint64_t sub_1ABD3F6DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD3F6E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD3F6ECLL);
  return result;
}

uint64_t sub_1ABD3F704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD3F70CLL);
  *(_BYTE *)result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1ABD3F710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD3F718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for WatchlistSortState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7B)
    goto LABEL_17;
  if (a2 + 133 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 133) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 133;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 133;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 133;
  }
LABEL_17:
  v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7A)
    v6 = -1;
  return v6 + 1;
}

void sub_1ABD3F7C4()
{
  unint64_t v0;

  sub_1ABD47E08();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t type metadata accessor for UserRegionProvider()
{
  uint64_t result;

  result = qword_1ED34D498;
  if (!qword_1ED34D498)
    return swift_getSingletonMetadata();
  return result;
}

void destroy for UserIdentitySource(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (!v1)
  {

  }
}

uint64_t storeEnumTagSinglePayload for UserIdentitySource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UserIdentitySource(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t initializeWithCopy for UserIdentitySource(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  void *v4;
  id v5;
  __int128 v6;
  __int128 v7;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t))(v6 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v4 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 40) = 0;
    v5 = v4;
  }
  return a1;
}

uint64_t sub_1ABD3F9B0(uint64_t a1)
{
  destroy for UserIdentitySource(a1);
  return a1;
}

uint64_t type metadata accessor for StockEntityService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for QuoteDetailManager()
{
  return objc_opt_self();
}

unint64_t sub_1ABD3FA24()
{
  unint64_t result;

  result = qword_1ED34D450;
  if (!qword_1ED34D450)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E4E4, &type metadata for QuoteDetailManager.StoreDescriptor);
    atomic_store(result, (unint64_t *)&qword_1ED34D450);
  }
  return result;
}

uint64_t sub_1ABD3FA68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1ABD3FA70()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3472B8)
  {
    type metadata accessor for ForYouConfigRecord(255);
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34DFB0, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3472B8);
  }
}

uint64_t sub_1ABD3FAF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ForYouConfigRecord(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABD3FB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouConfigRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD3FB74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABD0536C(a1, a2);
}

uint64_t sub_1ABD3FB88()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1ABD3FC0C()
{
  unint64_t v0;

  sub_1ABD226F0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1ABD3FC84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABD1111C(a1, a2);
}

uint64_t sub_1ABD3FC98()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ABD3FD00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABD3FD0C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABD3FD18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABD05A28(a1, a2);
}

uint64_t sub_1ABD3FD2C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1ABD3FDA4()
{
  unint64_t v0;

  sub_1ABCF5A54(319, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1ABD3FE40()
{
  unint64_t result;

  result = qword_1ED346AF8;
  if (!qword_1ED346AF8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CC38, &type metadata for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AF8);
  }
  return result;
}

unint64_t sub_1ABD3FE84()
{
  unint64_t result;

  result = qword_1ED346AF0;
  if (!qword_1ED346AF0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CC60, &type metadata for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AF0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SDSNewsResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

unint64_t sub_1ABD3FF60()
{
  unint64_t result;

  result = qword_1ED346AE0;
  if (!qword_1ED346AE0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CA08, &type metadata for ForYouConfigRecord.Configuration.TopStories.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AE0);
  }
  return result;
}

unint64_t sub_1ABD3FFA4()
{
  unint64_t result;

  result = qword_1ED346AD8;
  if (!qword_1ED346AD8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CA30, &type metadata for ForYouConfigRecord.Configuration.TopStories.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AD8);
  }
  return result;
}

unint64_t sub_1ABD3FFE8()
{
  unint64_t result;

  result = qword_1ED346AD0;
  if (!qword_1ED346AD0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CB48, &type metadata for ForYouConfigRecord.Configuration.TopStories.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AD0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ForYouConfigRecord.Configuration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABD4006C + 4 * byte_1ABF4C694[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABD4008C + 4 * byte_1ABF4C699[v4]))();
}

_BYTE *sub_1ABD4006C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABD4008C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD40094(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD4009C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD400A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD400AC(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1ABD400B8()
{
  return 0x69726F7453706F74;
}

unint64_t sub_1ABD400DC()
{
  unint64_t result;

  result = qword_1ED346AC8;
  if (!qword_1ED346AC8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C918, &type metadata for ForYouConfigRecord.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AC8);
  }
  return result;
}

unint64_t sub_1ABD40120()
{
  unint64_t result;

  result = qword_1ED346AC0;
  if (!qword_1ED346AC0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C940, &type metadata for ForYouConfigRecord.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AC0);
  }
  return result;
}

unint64_t sub_1ABD40164()
{
  unint64_t result;

  result = qword_1ED346AB8;
  if (!qword_1ED346AB8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CB98, &type metadata for ForYouConfigRecord.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AB8);
  }
  return result;
}

unint64_t sub_1ABD401B0()
{
  unint64_t result;

  result = qword_1ED346AB0;
  if (!qword_1ED346AB0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C828, &type metadata for ForYouConfigRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AB0);
  }
  return result;
}

unint64_t sub_1ABD401F4()
{
  unint64_t result;

  result = qword_1ED346AA8;
  if (!qword_1ED346AA8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C850, &type metadata for ForYouConfigRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AA8);
  }
  return result;
}

unint64_t sub_1ABD40238()
{
  unint64_t result;

  result = qword_1ED346AA0;
  if (!qword_1ED346AA0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CBE8, &type metadata for ForYouConfigRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346AA0);
  }
  return result;
}

uint64_t sub_1ABD4027C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for UserLaunchHistory()
{
  uint64_t result;

  result = qword_1ED346A90;
  if (!qword_1ED346A90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD40344(uint64_t a1)
{
  uint64_t result;

  result = sub_1ABCFE1EC(&qword_1ED346A80, (uint64_t (*)(uint64_t))type metadata accessor for UserLaunchHistory, (uint64_t)&unk_1ABF373B8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1ABD40380(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  int v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char v27;
  void *v28;
  _OWORD v30[2];
  _BYTE v31[24];
  uint64_t v32;

  v2 = v1;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v30 - v5;
  v7 = sub_1ABF30760();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v30 - v12;
  if (qword_1ED34E968 != -1)
    swift_once();
  swift_beginAccess();
  v14 = (void *)qword_1ED34E958;
  *(_QWORD *)(v2 + 56) = qword_1ED34E958;
  sub_1ABD07E04(a1, v2 + 16);
  v15 = *(void **)(v2 + 56);
  v16 = v14;
  v17 = v15;
  v18 = (void *)sub_1ABF31780();
  v19 = objc_msgSend(v17, sel_objectForKey_, v18);

  if (v19)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v30, 0, sizeof(v30));
  }
  sub_1ABD22B10((uint64_t)v30, (uint64_t)v31);
  if (!v32)
  {
    sub_1ABD6B430((uint64_t)v31);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_10;
  }
  v20 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, v20 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_10:
    sub_1ABCFF610((uint64_t)v6);
    sub_1ABD19560();
    v28 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    sub_1ABF30754();
    __swift_destroy_boxed_opaque_existential_1(a1);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate, v11, v7);
    v27 = 1;
    goto LABEL_11;
  }
  v21 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v21(v13, v6, v7);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1ABF366C0;
  sub_1ABCFE1EC(&qword_1ED34CCC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
  v23 = sub_1ABF321F4();
  v25 = v24;
  *(_QWORD *)(v22 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v22 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v25;
  sub_1ABD19560();
  v26 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(a1);
  v21((char *)(v2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate), v13, v7);
  v27 = 0;
LABEL_11:
  *(_BYTE *)(v2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_isFirstLaunch) = v27;
  return v2;
}

void sub_1ABD40768(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF30760() - 8) + 80);
  sub_1ABD407C4(a1, *(_QWORD **)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

void sub_1ABD407C4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  void *v30;
  char *v31;
  void *v32;
  void *v33;
  uint64_t v34;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - v7;
  v9 = sub_1ABF30760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v34 - v14;
  sub_1ABCFF5B4(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1ABCFF610((uint64_t)v8);
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1ABF366C0;
    sub_1ABCFE1EC(&qword_1ED34CCC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v17 = sub_1ABF321F4();
    v19 = v18;
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v16 + 32) = v17;
    *(_QWORD *)(v16 + 40) = v19;
    sub_1ABD19560();
    v20 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    v21 = (char *)a2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 24))(v21, a3, v9);
    swift_endAccess();
    *((_BYTE *)a2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_isFirstLaunch) = 1;
    v22 = a2[5];
    v23 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v22);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 48))(a3, 0, v22, v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1ABF366C0;
    sub_1ABCFE1EC(&qword_1ED34CCC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v25 = sub_1ABF321F4();
    v27 = v26;
    *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v24 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v24 + 32) = v25;
    *(_QWORD *)(v24 + 40) = v27;
    sub_1ABD19560();
    v28 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    v29 = (char *)a2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v15, v9);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    *((_BYTE *)a2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_isFirstLaunch) = 0;
  }
  v30 = (void *)a2[7];
  v31 = (char *)a2 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v31, v9);
  v32 = (void *)sub_1ABF306D0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v33 = (void *)sub_1ABF31780();
  objc_msgSend(v30, sel_setObject_forKey_, v32, v33);

}

uint64_t sub_1ABD40C08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  v1 = sub_1ABF30760();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - v6;
  sub_1ABF30754();
  v8 = v0[5];
  v9 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  v10 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v0;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v11 + v10, v5, v1);
  sub_1ABF2FF68();
  v12 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v1);
}

uint64_t type metadata accessor for TopStoriesService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD40D94()
{
  return sub_1ABD41568();
}

uint64_t sub_1ABD40DB4(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABD147FC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1ABD40DCC()
{
  uint64_t v0;

  return sub_1ABD40DE4(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1ABD40DE4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[136];
  _BYTE v8[136];

  v3 = a1[10];
  v4 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v3);
  v5 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for ForYouConfigRecord(0) + 24));
  sub_1ABD64550((uint64_t)v8);
  sub_1ABD261A4((uint64_t)v8, (uint64_t)v7);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(v4 + 8))(v5, v7, v3, v4);
}

uint64_t sub_1ABD40E78@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD40E94(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABD40EAC(a1, v1);
}

uint64_t sub_1ABD40EAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = *a1;
  sub_1ABD0F55C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF366C0;
  v5 = sub_1ABF321F4();
  v7 = v6;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  sub_1ABD19560();
  v8 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  v9 = *(_QWORD *)(a2 + 104);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = v3;
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  v12 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34DFB0, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v13 = sub_1ABF31174();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1ABD41040(uint64_t a1, uint64_t a2)
{
  return sub_1ABD41048(a1, a2);
}

uint64_t sub_1ABD41048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  sub_1ABD0F55C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF366C0;
  v5 = sub_1ABF321F4();
  v7 = v6;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  sub_1ABD19560();
  v8 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  return sub_1ABD22D94(a1, a2);
}

uint64_t sub_1ABD41144(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABD411E4(a1, v1);
}

uint64_t sub_1ABD4115C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ForYouConfigRecord(0) - 8) + 80);
  v6 = v2 + ((v5 + 16) & ~v5);
  v7 = *a1;
  sub_1ABD3FA70();
  v9 = *(int *)(v8 + 48);
  sub_1ABCFC790(v6, a2, type metadata accessor for ForYouConfigRecord);
  *(_QWORD *)(a2 + v9) = v7;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD411E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v4 = type metadata accessor for ForYouConfigRecord(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  sub_1ABD0F55C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ABF366C0;
  v18 = 0;
  v19 = 0xE000000000000000;
  sub_1ABF31F6C();
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = 0xE000000000000000;
  sub_1ABD19560();
  v8 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  v16 = a2;
  v17 = a1;
  sub_1ABD33E04();
  sub_1ABF3127C();
  v9 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34DFB0, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF31180();
  swift_release();

  sub_1ABCFC790(a1, (uint64_t)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for ForYouConfigRecord);
  v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v11 = swift_allocObject();
  sub_1ABD3FB30((uint64_t)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v11 + v10);
  v12 = (void *)sub_1ABF31114();
  sub_1ABD3FA70();
  v13 = sub_1ABF31180();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1ABD41420()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_1ABD4146C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v3 = *a1;
  sub_1ABD0F55C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF366C0;
  v5 = sub_1ABF321F4();
  v7 = v6;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  sub_1ABD19560();
  v8 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  *a2 = v3;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD41568()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v1 = v0;
  sub_1ABD19560();
  v2 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();

  type metadata accessor for ForYouConfigRecord(0);
  sub_1ABF3127C();
  sub_1ABF2FF68();
  v3 = (void *)sub_1ABF31114();
  sub_1ABD3FA70();
  sub_1ABF31174();
  swift_release();
  swift_release();

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1ABD41040;
  *(_QWORD *)(v4 + 24) = v1;
  sub_1ABF2FF68();
  v5 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34DFB0, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF31180();
  swift_release();
  swift_release();

  sub_1ABF2FF68();
  v6 = (void *)sub_1ABF31114();
  sub_1ABF31174();
  swift_release();
  swift_release();

  v7 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();

  v8 = (void *)sub_1ABF31114();
  v9 = sub_1ABF311B0();
  swift_release();

  return v9;
}

double sub_1ABD41768()
{
  double result;

  *(_QWORD *)&xmmword_1ED3469C0 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(__int128 *)((char *)&xmmword_1ED3469C0 + 8) = 0u;
  *(__int128 *)((char *)&xmmword_1ED3469D0 + 8) = 0u;
  *(__int128 *)((char *)&xmmword_1ED3469E0 + 8) = 0u;
  *(__int128 *)((char *)&xmmword_1ED3469F0 + 8) = 0u;
  *(__int128 *)((char *)&xmmword_1ED346A00 + 8) = 0u;
  *(__int128 *)((char *)&xmmword_1ED346A10 + 1) = 0u;
  *(__int128 *)((char *)&xmmword_1ED346A20 + 8) = 0u;
  *(__int128 *)((char *)&xmmword_1ED346A30 + 8) = 0u;
  return result;
}

void sub_1ABD417A4()
{
  unint64_t v0;

  sub_1ABCF5A54(319, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1ABD41848(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AudioUpsellConfig();
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for WatchlistManager()
{
  return objc_opt_self();
}

uint64_t sub_1ABD418A8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  if (*(_QWORD *)(*(_QWORD *)v0 + 24))
  {
    sub_1ABF2FF68();
    sub_1ABF31060();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1ABD418F4(uint64_t a1)
{
  uint64_t v1;

  sub_1ABD418FC(a1, v1);
}

void sub_1ABD418FC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)(a2 + 32);
  v3 = (void *)sub_1ABF31780();
  v4 = (id)sub_1ABF31780();
  objc_msgSend(v2, sel_setValue_forKey_, v3, v4);

}

uint64_t sub_1ABD41974(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32))
    return 1;
  else
    return sub_1ABF3223C();
}

uint64_t sub_1ABD419A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD419AC(a1);
}

uint64_t sub_1ABD419AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v2 = sub_1ABD41FD8(0);
    result = swift_release();
  }
  else
  {
    v4 = sub_1ABF30B44();
    sub_1ABCFE1EC((unint64_t *)&qword_1EEC43290, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], MEMORY[0x1E0DB35A8]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v5, *MEMORY[0x1E0DB3590], v4);
    sub_1ABD34E80(0, (unint64_t *)&unk_1ED34DD50, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_allocObject();
    result = sub_1ABF311D4();
    v2 = result;
  }
  *a1 = v2;
  return result;
}

uint64_t sub_1ABD41ABC()
{
  uint64_t *v0;

  return sub_1ABD037D8(v0);
}

uint64_t sub_1ABD41AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t (*v11)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v14;

  v1 = sub_1ABF31594();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF315D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD60);
  v9 = (void *)sub_1ABF31C24();
  aBlock[4] = sub_1ABD41ABC;
  v14 = v0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_41;
  v10 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  swift_release();
  sub_1ABF315AC();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD33CAC();
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v8, v4, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABD41CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1ABD41CC0(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1ABD41CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 64);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_5;
  sub_1ABF2FF5C();
  v9 = sub_1ABD00F9C(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)(a4 + 26) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return swift_endAccess();
  }
  v11 = *(_QWORD *)(v8 + 56) + 48 * v9;
  v13 = *(_QWORD *)v11;
  v12 = *(_QWORD *)(v11 + 8);
  v15 = *(_QWORD *)(v11 + 16);
  v14 = *(_QWORD *)(v11 + 24);
  v16 = *(_QWORD *)(v11 + 32);
  LOWORD(v11) = *(_WORD *)(v11 + 40);
  *(_QWORD *)a4 = v13;
  *(_QWORD *)(a4 + 8) = v12;
  *(_QWORD *)(a4 + 16) = v15;
  *(_QWORD *)(a4 + 24) = v14;
  *(_QWORD *)(a4 + 32) = v16;
  *(_WORD *)(a4 + 40) = v11;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1ABD41D98(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1ABD41DB0(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_1ABD41DB0(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 1) != 0)
  {
    v3 = a2[12];
    v4 = a2[13];
    __swift_project_boxed_opaque_existential_1(a2 + 9, v3);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 136))(v3, v4);
  }
  else
  {
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34DD80, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311E0();
  }
}

uint64_t sub_1ABD41E3C()
{
  _QWORD *v0;

  return sub_1ABD41E54(v0);
}

uint64_t sub_1ABD41E54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = a1[12];
  v2 = a1[13];
  __swift_project_boxed_opaque_existential_1(a1 + 9, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 176))(v1, v2);
  v3 = (void *)sub_1ABF31114();
  sub_1ABF31174();
  swift_release();

  sub_1ABF2FF68();
  v4 = (void *)sub_1ABF31114();
  v5 = sub_1ABF31174();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_1ABD41F2C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2 + 9;
  v4 = a2[12];
  v5 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 120))(v4, v5);
  v7 = a2[12];
  v6 = a2[13];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  (*(void (**)(uint64_t, uint64_t))(v6 + 176))(v7, v6);
  v8 = sub_1ABF31264();
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1ABD41FD8(char a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  sub_1ABF3127C();
  *(_BYTE *)(swift_allocObject() + 16) = a1;
  v2 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v3 = (void *)sub_1ABF31114();
  sub_1ABD045BC();
  sub_1ABF3118C();
  swift_release();

  v4 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3118C();
  swift_release();

  v5 = (void *)sub_1ABF31114();
  v6 = sub_1ABF311B0();
  swift_release();

  return v6;
}

uint64_t sub_1ABD4215C(uint64_t a1)
{
  id v1;

  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    if (qword_1ED34CA60 != -1)
      swift_once();
  }
  else if (qword_1ED34CA60 != -1)
  {
    swift_once();
  }
  v1 = (id)qword_1ED3683A8;
  sub_1ABF31BF4();
  sub_1ABF31318();

  sub_1ABD04578(0, (unint64_t *)&unk_1ED34DD70, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD42294(_BYTE *a1)
{
  _QWORD *v1;

  return sub_1ABD422AC(a1, v1);
}

uint64_t sub_1ABD422AC(_BYTE *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  _QWORD *v21;

  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - v10;
  if (*a1 == 1)
  {
    v12 = a2[12];
    v13 = a2[13];
    v21 = __swift_project_boxed_opaque_existential_1(a2 + 9, v12);
    sub_1ABF31738();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    if (qword_1ED34FD78 != -1)
      swift_once();
    v14 = (id)qword_1ED368428;
    sub_1ABF30844();
    v15 = sub_1ABF317EC();
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 72))(v15, v17, v12, v13);
    swift_bridgeObjectRelease();
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD60);
    v18 = (void *)sub_1ABF31C24();
    sub_1ABF2FF68();
    v19 = sub_1ABF31174();
    swift_release();

    swift_release();
    return v19;
  }
  else
  {
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34DD80, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311E0();
  }
}

uint64_t type metadata accessor for StubQuoteService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD4254C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1ABF31C18();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF31C00();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1ABF315D0();
  MEMORY[0x1E0C80A78](v6);
  v10[1] = sub_1ABD133B8();
  sub_1ABF315B8();
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v5, MEMORY[0x1E0DEF828]);
  sub_1ABCF5A54(0, &qword_1ED34FCE0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCE8, &qword_1ED34FCE0, v5);
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  v7 = sub_1ABF31C3C();
  v8 = v11;
  *(_QWORD *)(v11 + 16) = v7;
  return v8;
}

uint64_t sub_1ABD42724()
{
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34DD28, (uint64_t (*)(uint64_t))sub_1ABEAA6DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD4278C()
{
  uint64_t v0;

  return sub_1ABD23C4C(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1ABD42798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABD427A0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABD427A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v9 = sub_1ABF31594();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1ABF315D0();
  v13 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a6;
  v17[3] = sub_1ABD17050;
  v17[4] = v16;
  aBlock[4] = sub_1ABD4278C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_35;
  v18 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF315AC();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v10, MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, v10);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v15, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

uint64_t type metadata accessor for StubChartService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD429F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1ABF31C18();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF31C00();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1ABF315D0();
  MEMORY[0x1E0C80A78](v6);
  v10[1] = sub_1ABD133B8();
  sub_1ABF315B8();
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v5, MEMORY[0x1E0DEF828]);
  sub_1ABCF5A54(0, &qword_1ED34FCE0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCE8, &qword_1ED34FCE0, v5);
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  v7 = sub_1ABF31C3C();
  v8 = v11;
  *(_QWORD *)(v11 + 16) = v7;
  return v8;
}

uint64_t type metadata accessor for SparklineManager()
{
  return objc_opt_self();
}

uint64_t sub_1ABD42BF0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD42BF8(a1);
}

uint64_t sub_1ABD42BF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABF31060();
  sub_1ABD1E8C8(0, &qword_1ED34DDC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2AB0]);
  swift_allocObject();
  result = sub_1ABF313E4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABD42C94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1ABD42CE0()
{
  sub_1ABD1E8C8(0, &qword_1ED34DD90, MEMORY[0x1E0DB2A80]);
  return sub_1ABF313C0();
}

uint64_t type metadata accessor for SDSSearchService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SDSMetadataCache()
{
  return objc_opt_self();
}

uint64_t sub_1ABD42D74@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1ABF31060();
  if (v5)
    __asm { BR              X10 }
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_QWORD *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_1ABD42E68@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABEA4DC0(a1);
}

unint64_t sub_1ABD42E70()
{
  unint64_t result;

  result = qword_1ED34EFE0;
  if (!qword_1ED34EFE0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF497B8, &type metadata for SDSMetadataCache.MetadataStoreDescriptor);
    atomic_store(result, (unint64_t *)&qword_1ED34EFE0);
  }
  return result;
}

uint64_t sub_1ABD42EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t type metadata accessor for LanguageSettings()
{
  return objc_opt_self();
}

double sub_1ABD42EDC(char a1)
{
  return sub_1ABD42F1C(a1);
}

uint64_t sub_1ABD42EFC(uint64_t a1, uint64_t a2)
{
  return sub_1ABD43250(a1, a2);
}

double sub_1ABD42F1C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = sub_1ABF30880();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
    sub_1ABF307FC();

    v10 = sub_1ABF307CC();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    if (v12)
    {
      v13 = *(_QWORD *)(v2 + 48);
      v14 = *(_QWORD *)(v2 + 56);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 24), v13);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14) & 1) != 0)
      {
        v15 = *(unsigned __int8 *)(v2 + 16);
        sub_1ABCF5A54(0, &qword_1ED34E350, (uint64_t (*)(uint64_t))sub_1ABD34558, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v16 = swift_allocObject();
        if (v15 == 1)
        {
          *(_QWORD *)&result = 2;
          *(_OWORD *)(v16 + 16) = xmmword_1ABF366E0;
          *(_QWORD *)(v16 + 32) = v10;
          *(_QWORD *)(v16 + 40) = v12;
          *(_QWORD *)(v16 + 48) = 0;
          *(_QWORD *)(v16 + 56) = 0;
        }
        else
        {
          *(_QWORD *)&result = 1;
          *(_OWORD *)(v16 + 16) = xmmword_1ABF366C0;
          *(_QWORD *)(v16 + 32) = v10;
          *(_QWORD *)(v16 + 40) = v12;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1ABCF5A54(0, &qword_1ED34E350, (uint64_t (*)(uint64_t))sub_1ABD34558, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v17 = swift_allocObject();
      *(_QWORD *)&result = 1;
      *(_OWORD *)(v17 + 16) = xmmword_1ABF366C0;
      *(_QWORD *)(v17 + 32) = v10;
      *(_QWORD *)(v17 + 40) = 0;
    }
  }
  return result;
}

uint64_t sub_1ABD430D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char v9;

  v2 = v1;
  *(_BYTE *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 64) = MEMORY[0x1E0DEE9D8];
  sub_1ABD07E04((uint64_t)a1, v1 + 24);
  if (qword_1ED34DBC8 != -1)
    swift_once();
  swift_allocObject();
  swift_weakInit();
  sub_1ABCFE22C(&qword_1ED34CF10, v4, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSettings, (uint64_t)&unk_1ABF3B490);
  sub_1ABF3097C();
  swift_release();
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  *(_BYTE *)(v1 + 16) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6) & v9 & 1;
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v7, sel_addObserver_selector_name_object_, v2, sel_localeDidChange, *MEMORY[0x1E0C99720], 0);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_1ABD43250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (_QWORD *)(v2 + 64);
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 64);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v5 >> 62)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1AF4380CC](i, v5);
    }
    else
    {
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      sub_1ABF2FF68();
    }
    v10 = MEMORY[0x1AF4390D4](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v14;
LABEL_15:
  *v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for LanguageSettingsObserverProxy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1AF437C04](v13);
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  return swift_endAccess();
}

uint64_t sub_1ABD43468()
{
  return sub_1ABF30958();
}

unint64_t sub_1ABD4347C()
{
  unint64_t result;

  result = qword_1ED346938;
  if (!qword_1ED346938)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39910, &type metadata for HeadlineMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346938);
  }
  return result;
}

unint64_t sub_1ABD434C0()
{
  unint64_t result;

  result = qword_1ED346930;
  if (!qword_1ED346930)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39938, &type metadata for HeadlineMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346930);
  }
  return result;
}

unint64_t sub_1ABD43504()
{
  unint64_t result;

  result = qword_1ED346920;
  if (!qword_1ED346920)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39728, &type metadata for HeadlineMetadata.StockEntityMetadata);
    atomic_store(result, (unint64_t *)&qword_1ED346920);
  }
  return result;
}

unint64_t sub_1ABD43550()
{
  unint64_t result;

  result = qword_1ED346918;
  if (!qword_1ED346918)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39820, &type metadata for HeadlineMetadata.StockEntityMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346918);
  }
  return result;
}

unint64_t sub_1ABD43594()
{
  unint64_t result;

  result = qword_1ED346910;
  if (!qword_1ED346910)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39848, &type metadata for HeadlineMetadata.StockEntityMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346910);
  }
  return result;
}

uint64_t sub_1ABD435D8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a2)
  {
    v24 = STACK[0xDD8];
    v25 = STACK[0xDE0];
    v20 = STACK[0x5C0];
    v19 = STACK[0x5B8];
    v18 = STACK[0x5B0];
    v17 = STACK[0x5A8];
    v16 = STACK[0x5A0];
    v15 = STACK[0x598];
    v14 = STACK[0x590];
    v13 = STACK[0x588];
    v12 = STACK[0x580];
    v11 = STACK[0x578];
    v10 = STACK[0x570];
    v9 = STACK[0x568];
    v8 = STACK[0x560];
    v23 = STACK[0x558];
    v22 = STACK[0x550];
    v21 = STACK[0x548];
    v7 = STACK[0x540];
    v6 = STACK[0x538];
    v5 = STACK[0x530];
    v4 = STACK[0x528];
    v3 = STACK[0x520];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABD1A400(v3, v4, v5, v6, v7, v21, v22, v23, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABD1A50C(v24, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1ABD43A3C()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

double sub_1ABD43A44()
{
  uint64_t v0;

  return *(double *)(v0 + 184);
}

uint64_t sub_1ABD43A4C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 248);
}

double sub_1ABD43A54()
{
  uint64_t v0;

  return *(double *)(v0 + 352);
}

uint64_t sub_1ABD43A5C()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD43A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  _QWORD v9[2];

  v0 = sub_1ABF30880();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v9 - v5;
  sub_1ABF30844();
  sub_1ABF307A8();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v6, v0);
  sub_1ABF30844();
  sub_1ABF307CC();
  v7(v4, v0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1ABF31E94();
  sub_1ABF31870();
  sub_1ABF31870();
  sub_1ABF31870();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  return v9[0];
}

uint64_t sub_1ABD43C10()
{
  return sub_1ABF2FF5C();
}

uint64_t type metadata accessor for ServiceAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1ABD43C38(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _BYTE v6[48];

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  result = sub_1ABF30B74();
  if (v6[40] == 255)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 8))(v6, v3, v4);
    return sub_1ABD3F9B0((uint64_t)v6);
  }
  return result;
}

uint64_t sub_1ABD43CDC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[149];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v18)
  {
    sub_1ABD065C8(&v17, (uint64_t)v19);
    v2 = v20;
    v3 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v15, v2, v3);
    v4 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v5 = objc_msgSend(v4, sel_bundleIdentifier);

    if (v5)
    {
      v6 = sub_1ABF317A4();
      v8 = v7;

      v9 = *(_QWORD *)(v16 + 16);
      if (v9)
      {
        v10 = v16 + 64;
        while (1)
        {
          v11 = *(_QWORD *)(v10 - 32) == v6 && *(_QWORD *)(v10 - 24) == v8;
          if (v11 || (sub_1ABF3223C() & 1) != 0)
            break;
          v10 += 40;
          if (!--v9)
            goto LABEL_11;
        }
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        swift_bridgeObjectRelease();
        sub_1ABD7DDF4((uint64_t)v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v21;
        __swift_project_boxed_opaque_existential_1(v19, v20);
        swift_getKeyPath();
        (*(void (**)(void))(v13 + 56))();
        swift_release();
        sub_1ABF305D4();
        goto LABEL_14;
      }
LABEL_11:
      swift_bridgeObjectRelease();
    }
    sub_1ABD7DDF4((uint64_t)v15);
    v12 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    swift_getKeyPath();
    (*(void (**)(void))(v12 + 56))();
    swift_release();
    sub_1ABF305D4();
LABEL_14:
    v14 = sub_1ABF31288();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD43F54@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  _QWORD v5[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350860);
  result = sub_1ABF30B74();
  if (v5[3])
  {
    v4 = type metadata accessor for LanguageSettings();
    swift_allocObject();
    result = sub_1ABD430D0(v5);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1E5AE4100;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABD44000@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD03950((uint64_t (*)(_QWORD))type metadata accessor for StubWatchlistService, sub_1ABD1375C, (uint64_t)&off_1E5AEA938, a1);
}

uint64_t sub_1ABD44020@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD03950((uint64_t (*)(_QWORD))type metadata accessor for StubStockFeedService, sub_1ABD3D924, (uint64_t)&off_1E5AEA858, a1);
}

uint64_t sub_1ABD44040@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD03950((uint64_t (*)(_QWORD))type metadata accessor for StubSparklineService, sub_1ABD3DB1C, (uint64_t)&off_1E5AEA848, a1);
}

uint64_t sub_1ABD44060@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD03950((uint64_t (*)(_QWORD))type metadata accessor for StubQuoteService, sub_1ABD4254C, (uint64_t)&off_1E5AE5CE0, a1);
}

uint64_t sub_1ABD44080@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350920);
  result = sub_1ABF30B74();
  if (v7)
  {
    v4 = type metadata accessor for WatchlistSortingService();
    v5 = swift_allocObject();
    result = sub_1ABD065C8(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1E5AEC670;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABD44130@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v2 = sub_1ABF30790();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for StubIdentificationService();
  v7 = (_QWORD *)swift_allocObject();
  sub_1ABF2FBD8();
  v8 = sub_1ABF30778();
  v10 = v9;
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  v7[2] = v8;
  v7[3] = v10;
  sub_1ABF2FBD8();
  v12 = sub_1ABF30778();
  v14 = v13;
  result = ((uint64_t (*)(char *, uint64_t))v11)(v5, v2);
  v7[4] = v12;
  v7[5] = v14;
  a1[3] = v6;
  a1[4] = &off_1E5AEED50;
  *a1 = v7;
  return result;
}

uint64_t sub_1ABD44218@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD03950((uint64_t (*)(_QWORD))type metadata accessor for StubStockMetadataSevice, sub_1ABD3A008, (uint64_t)&off_1E5AEC4E0, a1);
}

uint64_t sub_1ABD44238@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350BF8);
  result = sub_1ABF30B68();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, (unint64_t *)&unk_1ED34D8C0);
    result = sub_1ABF30B74();
    if (v9)
    {
      v6 = type metadata accessor for NewsHeadlineService();
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v5;
      result = sub_1ABD065C8(&v8, v7 + 24);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1E5AE9590;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD44340@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD03950((uint64_t (*)(_QWORD))type metadata accessor for StubQuoteDetailService, sub_1ABD3B780, (uint64_t)&off_1E5AEBB70, a1);
}

uint64_t sub_1ABD44360(uint64_t a1)
{
  return sub_1ABD30E7C(a1);
}

uint64_t type metadata accessor for NewsFeedService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD443A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABD443D4 + 4 * byte_1ABF3BAE8[*v0]))();
}

void sub_1ABD443D4(_QWORD *a1@<X8>)
{
  *a1 = 0x676E6967617473;
  a1[1] = 0xE700000000000000;
}

void sub_1ABD443F0(_QWORD *a1@<X8>)
{
  *a1 = 24945;
  a1[1] = 0xE200000000000000;
}

void sub_1ABD44400(_QWORD *a1@<X8>)
{
  *a1 = 1953719668;
  a1[1] = 0xE400000000000000;
}

void sub_1ABD44414(_QWORD *a1@<X8>)
{
  *a1 = 0x6C65766564;
  a1[1] = 0xE500000000000000;
}

void sub_1ABD4442C(_QWORD *a1@<X8>)
{
  *a1 = 0x786F62646E6173;
  a1[1] = 0xE700000000000000;
}

void sub_1ABD44448(_QWORD *a1@<X8>)
{
  *a1 = 0x316F6D6564;
  a1[1] = 0xE500000000000000;
}

void sub_1ABD44460(_QWORD *a1@<X8>)
{
  *a1 = 0x326F6D6564;
  a1[1] = 0xE500000000000000;
}

unint64_t sub_1ABD44478()
{
  unint64_t result;

  result = qword_1ED34EDF0;
  if (!qword_1ED34EDF0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for NewsEnvironment, &type metadata for NewsEnvironment);
    atomic_store(result, (unint64_t *)&qword_1ED34EDF0);
  }
  return result;
}

unint64_t sub_1ABD444BC()
{
  unint64_t result;

  result = qword_1ED34EDE8;
  if (!qword_1ED34EDE8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for NewsEnvironment, &type metadata for NewsEnvironment);
    atomic_store(result, (unint64_t *)&qword_1ED34EDE8);
  }
  return result;
}

unint64_t sub_1ABD44500()
{
  unint64_t result;

  result = qword_1ED34EDE0;
  if (!qword_1ED34EDE0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for NewsEnvironment, &type metadata for NewsEnvironment);
    atomic_store(result, (unint64_t *)&qword_1ED34EDE0);
  }
  return result;
}

uint64_t sub_1ABD44544()
{
  sub_1ABCF5E28();
  return sub_1ABF31960();
}

uint64_t type metadata accessor for ManagerAssembly()
{
  return objc_opt_self();
}

uint64_t StockPriceData.sparklines.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t type metadata accessor for NetworkMonitor()
{
  return objc_opt_self();
}

uint64_t sub_1ABD445D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  sub_1ABD34A7C();
  a1[3] = v4;
  a1[4] = sub_1ABD34AE0();
  *a1 = v3;
  return sub_1ABF2FF68();
}

unint64_t sub_1ABD44620()
{
  unint64_t result;

  result = qword_1ED3468F8;
  if (!qword_1ED3468F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48F90, &type metadata for HeadlineScores.Cohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3468F8);
  }
  return result;
}

unint64_t sub_1ABD44664()
{
  unint64_t result;

  result = qword_1ED3468F0;
  if (!qword_1ED3468F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48FB8, &type metadata for HeadlineScores.Cohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3468F0);
  }
  return result;
}

unint64_t sub_1ABD446A8()
{
  unint64_t result;

  result = qword_1ED3468E0;
  if (!qword_1ED3468E0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for HeadlineScores.StockEntityCohort, &type metadata for HeadlineScores.StockEntityCohort);
    atomic_store(result, (unint64_t *)&qword_1ED3468E0);
  }
  return result;
}

unint64_t sub_1ABD446F4()
{
  unint64_t result;

  result = qword_1ED3468D8;
  if (!qword_1ED3468D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49048, &type metadata for HeadlineScores.StockEntityCohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3468D8);
  }
  return result;
}

unint64_t sub_1ABD44738()
{
  unint64_t result;

  result = qword_1ED3468D0;
  if (!qword_1ED3468D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49070, &type metadata for HeadlineScores.StockEntityCohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3468D0);
  }
  return result;
}

unint64_t sub_1ABD44784()
{
  unint64_t result;

  result = qword_1ED3468C0;
  if (!qword_1ED3468C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49100, &type metadata for HeadlineScores.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3468C0);
  }
  return result;
}

unint64_t sub_1ABD447C8()
{
  unint64_t result;

  result = qword_1ED3468B8;
  if (!qword_1ED3468B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49128, &type metadata for HeadlineScores.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3468B8);
  }
  return result;
}

uint64_t sub_1ABD4480C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABD448A0(uint64_t a1)
{
  sub_1ABD4480C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1ABD448F8(uint64_t a1)
{
  return sub_1ABD0B4A0(a1, 0x6E61656C4353564BLL, 0xEA00000000007075, &qword_1ED368300);
}

uint64_t sub_1ABD4491C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ABD44990()
{
  return swift_allocateGenericValueMetadata();
}

unint64_t sub_1ABD44998()
{
  unint64_t result;

  result = qword_1ED34ED20;
  if (!qword_1ED34ED20)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for PaywallConfig, &type metadata for PaywallConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34ED20);
  }
  return result;
}

uint64_t type metadata accessor for DebugAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1ABD449FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v6[4];

  v0 = sub_1ABF30B80();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30C70();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1ABF30EBC();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB36E0], v0);
  sub_1ABF30FA0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t destroy for ArticleScorer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + 8;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v4);
  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1ABD44B4C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ArticleScorer.score<A>(articles:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a1;
  v15 = a2;
  v16 = a3;
  v5 = sub_1ABF31A98();
  v7 = (char *)type metadata accessor for ScoredArticle(0, a2, a3, v6);
  v8 = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF50], v5);
  v20 = sub_1ABEC6E9C((void (*)(char *, char *))sub_1ABD2E678, (uint64_t)v14, v5, v7, MEMORY[0x1E0DEDCE8], v8, MEMORY[0x1E0DEDD18], v9);
  v10 = sub_1ABF31A98();
  v18 = sub_1ABF31600();
  v11 = sub_1ABF31690();
  MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v10);
  sub_1ABF3193C();
  swift_bridgeObjectRelease();
  v12 = sub_1ABF31684();
  swift_bridgeObjectRelease();
  v18 = v12;
  v17 = sub_1ABF3160C();
  MEMORY[0x1AF438F30](MEMORY[0x1E0DEA0D0], v11);
  sub_1ABF3193C();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t dispatch thunk of UserInfoType.appReviewRequestLastSeenDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t sub_1ABD44DBC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF305D4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for QuoteManager()
{
  return objc_opt_self();
}

uint64_t sub_1ABD44E6C(uint64_t a1, uint64_t a2)
{
  return sub_1ABD4562C(a1, a2);
}

uint64_t sub_1ABD44E8C()
{
  uint64_t v0;

  return sub_1ABD44E94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1ABD44E94(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD v12[5];

  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 80);
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x1AF4380CC](v6, v3);
      }
      else
      {
        v7 = *(_QWORD *)(v3 + 8 * v6 + 32);
        sub_1ABF2FF68();
      }
      v12[3] = type metadata accessor for QuoteManager();
      v12[4] = &off_1E5AE15C8;
      v12[0] = a1;
      if (MEMORY[0x1AF4390D4](v7 + 16))
      {
        v8 = *(_QWORD *)(v7 + 24);
        ObjectType = swift_getObjectType();
        v10 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v8 + 8);
        swift_retain_n();
        v10(v12, a2, ObjectType, v8);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain_n();
      }
      ++v6;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      swift_release();
      swift_release();
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_1ABD4500C()
{
  unint64_t result;

  result = qword_1ED34CE50;
  if (!qword_1ED34CE50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38D6C, &type metadata for QuoteManager.StoreDescriptor);
    atomic_store(result, (unint64_t *)&qword_1ED34CE50);
  }
  return result;
}

uint64_t sub_1ABD45050@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD45058(a1);
}

uint64_t sub_1ABD45058@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABF31060();
  sub_1ABD0604C();
  swift_allocObject();
  result = sub_1ABF313E4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABD450E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1ABF30760() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF30B38() - 8) + 80);
  return sub_1ABD4535C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1ABD45158(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABD45170(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1ABD45170(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *a1;
  if (qword_1ED34FAD8 != -1)
    swift_once();
  v6 = sub_1ABF3133C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED34E920);
  swift_bridgeObjectRetain_n();
  v7 = sub_1ABF31324();
  v8 = sub_1ABF31BF4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(a2, a3, &v12);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v7, v8, "Quote fetch with ID: %s returned success", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v10, -1, -1);
    MEMORY[0x1AF438FFC](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = v5;
  sub_1ABD1F1CC();
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD4535C(uint64_t a1, uint64_t a2, unint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  if (qword_1ED34FAD8 != -1)
    swift_once();
  v12 = sub_1ABF3133C();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED34E920);
  swift_bridgeObjectRetain_n();
  v13 = sub_1ABF31324();
  v14 = sub_1ABF31BF4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v26 = a1;
    v16 = swift_slowAlloc();
    v27 = v16;
    *(_DWORD *)v15 = 136315138;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(a2, a3, &v27);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v13, v14, "Performing quote fetch with requestID: %s", v15, 0xCu);
    swift_arrayDestroy();
    v17 = v16;
    a1 = v26;
    MEMORY[0x1AF438FFC](v17, -1, -1);
    MEMORY[0x1AF438FFC](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v18 = a4[5];
  v19 = a4[6];
  __swift_project_boxed_opaque_existential_1(a4 + 2, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8))(a1, a5, a6, v18, v19);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  sub_1ABF2FF5C();
  v21 = (void *)sub_1ABF31114();
  sub_1ABD200F0(0, (unint64_t *)&qword_1ED34DE48, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_1ABF31174();
  swift_release();
  swift_release();

  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = a3;
  sub_1ABF2FF5C();
  v23 = (void *)sub_1ABF31114();
  v24 = sub_1ABF311B0();
  swift_release();
  swift_release();

  return v24;
}

uint64_t sub_1ABD4562C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (_QWORD *)(v2 + 80);
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 80);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v5 >> 62)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1AF4380CC](i, v5);
    }
    else
    {
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      sub_1ABF2FF68();
    }
    v10 = MEMORY[0x1AF4390D4](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v14;
LABEL_15:
  *v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for QuoteManagerObserverProxy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1AF437C04](v13);
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  return swift_endAccess();
}

uint64_t sub_1ABD45844(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1ABF30AC0();
  v2 = sub_1ABF2FF5C();
  sub_1ABD3299C(v2);
  swift_bridgeObjectRelease();
  v3 = sub_1ABF310D8();
  swift_release();
  sub_1ABD200F0(0, &qword_1ED34DCC8, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DB49C0]);
  sub_1ABF310A8();
  sub_1ABD0604C();
  sub_1ABF31060();
  sub_1ABF3139C();
  swift_release();
  if (qword_1ED34FAD8 != -1)
    swift_once();
  v4 = sub_1ABF3133C();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED34E920);
  swift_bridgeObjectRetain_n();
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BF4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    type metadata accessor for Quote();
    sub_1ABF2FF5C();
    v9 = sub_1ABF31630();
    v11 = v10;
    swift_bridgeObjectRelease();
    sub_1ABD1FE2C(v9, v11, &v15);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v5, v6, "Writing quotes to cache: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1ABF2FF5C();
  v12 = sub_1ABD20EC8(MEMORY[0x1E0DEE9E0], a1, v3);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v12 + 16))
    sub_1ABD05E34(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = a1;
  sub_1ABD1F1CC();
  swift_allocObject();
  sub_1ABF2FF5C();
  v13 = sub_1ABF311E0();
  sub_1ABF30ACC();
  return v13;
}

void sub_1ABD45B58(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xEF6E6F696765526DLL;
  v4 = 0x656C707061;
  if (v2 != 1)
    v4 = 0x6F6F686179;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x6F72467265666E69;
  if (!v5)
    v3 = 0xE500000000000000;
  *a1 = v6;
  a1[1] = v3;
}

ValueMetadata *type metadata accessor for NewsProvider()
{
  return &type metadata for NewsProvider;
}

unint64_t sub_1ABD45BCC()
{
  unint64_t result;

  result = qword_1ED34CE48;
  if (!qword_1ED34CE48)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for NewsProvider, &type metadata for NewsProvider);
    atomic_store(result, (unint64_t *)&qword_1ED34CE48);
  }
  return result;
}

unint64_t sub_1ABD45C10()
{
  unint64_t result;

  result = qword_1ED34CE40;
  if (!qword_1ED34CE40)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for NewsProvider, &type metadata for NewsProvider);
    atomic_store(result, (unint64_t *)&qword_1ED34CE40);
  }
  return result;
}

unint64_t sub_1ABD45C54()
{
  unint64_t result;

  result = qword_1ED34CE38;
  if (!qword_1ED34CE38)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for NewsProvider, &type metadata for NewsProvider);
    atomic_store(result, (unint64_t *)&qword_1ED34CE38);
  }
  return result;
}

unint64_t sub_1ABD45C98()
{
  unint64_t result;

  result = qword_1ED34CE30;
  if (!qword_1ED34CE30)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for NewsProvider, &type metadata for NewsProvider);
    atomic_store(result, (unint64_t *)&qword_1ED34CE30);
  }
  return result;
}

uint64_t sub_1ABD45CDC()
{
  sub_1ABD45BCC();
  return sub_1ABF31960();
}

uint64_t sub_1ABD45D20()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = sub_1ABF30F34();
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(result - 8) + 64;
    v8 = v2;
    v9 = v2;
    swift_getTupleTypeLayout2();
    v10 = &v7;
    swift_getTupleTypeLayout2();
    v11 = &v6;
    swift_getTupleTypeLayout2();
    v12 = &v5;
    swift_getTupleTypeLayout2();
    v13 = &v4;
    swift_getTupleTypeLayout2();
    v14 = &v3;
    v15 = v2;
    v16 = v2;
    v17 = v2;
    v18 = v2;
    v19 = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NetworkEvent()
{
  uint64_t result;

  result = qword_1ED34EC38;
  if (!qword_1ED34EC38)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1ABD45E58()
{
  unint64_t v0;

  sub_1ABD226F0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for URLAssembly()
{
  return objc_opt_self();
}

uint64_t sub_1ABD45F04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30[16];

  v29 = a2;
  v3 = sub_1ABF30520();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5968();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - v9;
  v11 = sub_1ABF305D4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v26 - v16;
  v18 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v19 = (void *)sub_1ABF31780();
  v20 = objc_msgSend(v18, sel_containerURLForSecurityApplicationGroupIdentifier_, v19);

  if (v20)
  {
    sub_1ABF30580();

    v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v21(v10, v14, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v21(v17, v10, v11);
      strcpy(v30, "Library/Caches");
      v30[15] = -18;
      v23 = v26;
      v22 = v27;
      v24 = v28;
      (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v26, *MEMORY[0x1E0CAFD60], v28);
      sub_1ABD0E288();
      sub_1ABF305C8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1ABCF59BC((uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF30B5C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v29, v7, v11);
  __break(1u);
  return result;
}

unint64_t sub_1ABD46248()
{
  unint64_t result;

  result = qword_1ED34CDF8;
  if (!qword_1ED34CDF8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D204, &type metadata for StockRecord.FeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CDF8);
  }
  return result;
}

unint64_t sub_1ABD4628C()
{
  unint64_t result;

  result = qword_1ED34CDF0;
  if (!qword_1ED34CDF0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D22C, &type metadata for StockRecord.FeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CDF0);
  }
  return result;
}

unint64_t sub_1ABD462D8()
{
  unint64_t result;

  result = qword_1ED34CDE0;
  if (!qword_1ED34CDE0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D074, &type metadata for StockRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CDE0);
  }
  return result;
}

unint64_t sub_1ABD4631C()
{
  unint64_t result;

  result = qword_1ED34CDD8;
  if (!qword_1ED34CDD8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D09C, &type metadata for StockRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CDD8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CurrencyConversion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1ABD463AC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1ABD463F8(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1ABD463F8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1ABF31D5C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_1ABD4643C()
{
  unint64_t result;

  result = qword_1ED34EBA8;
  if (!qword_1ED34EBA8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A858, &type metadata for SDSMetadata);
    atomic_store(result, (unint64_t *)&qword_1ED34EBA8);
  }
  return result;
}

unint64_t sub_1ABD46480()
{
  unint64_t result;

  result = qword_1ED34EBA0;
  if (!qword_1ED34EBA0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A830, &type metadata for SDSMetadata);
    atomic_store(result, (unint64_t *)&qword_1ED34EBA0);
  }
  return result;
}

void sub_1ABD464C4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1ABD00308(319, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
  {
    sub_1ABD00308(319, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
    {
      sub_1ABD00308(319, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
      if (v2 <= 0x3F)
      {
        sub_1ABF30760();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t type metadata accessor for DummyClass()
{
  return objc_opt_self();
}

unint64_t sub_1ABD46614()
{
  unint64_t result;

  result = qword_1ED346890;
  if (!qword_1ED346890)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for ChartRange, &type metadata for ChartRange);
    atomic_store(result, (unint64_t *)&qword_1ED346890);
  }
  return result;
}

unint64_t sub_1ABD46658()
{
  unint64_t result;

  result = qword_1ED346888;
  if (!qword_1ED346888)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for ChartRange, &type metadata for ChartRange);
    atomic_store(result, (unint64_t *)&qword_1ED346888);
  }
  return result;
}

uint64_t sub_1ABD4669C()
{
  sub_1ABD46614();
  return sub_1ABF31960();
}

void sub_1ABD466E0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x64656C62616E65;
  if (v2 != 1)
  {
    v5 = 0x64656C6261736964;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x746C7561666564;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1ABD46740()
{
  unint64_t result;

  result = qword_1ED34CD30;
  if (!qword_1ED34CD30)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for StocksDataServiceEnablement, &type metadata for StocksDataServiceEnablement);
    atomic_store(result, (unint64_t *)&qword_1ED34CD30);
  }
  return result;
}

unint64_t sub_1ABD46784()
{
  unint64_t result;

  result = qword_1ED34CD28;
  if (!qword_1ED34CD28)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for StocksDataServiceEnablement, &type metadata for StocksDataServiceEnablement);
    atomic_store(result, (unint64_t *)&qword_1ED34CD28);
  }
  return result;
}

unint64_t sub_1ABD467C8()
{
  unint64_t result;

  result = qword_1ED34CD20;
  if (!qword_1ED34CD20)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for StocksDataServiceEnablement, &type metadata for StocksDataServiceEnablement);
    atomic_store(result, (unint64_t *)&qword_1ED34CD20);
  }
  return result;
}

unint64_t sub_1ABD4680C()
{
  unint64_t result;

  result = qword_1ED34CD18;
  if (!qword_1ED34CD18)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for StocksDataServiceEnablement, &type metadata for StocksDataServiceEnablement);
    atomic_store(result, (unint64_t *)&qword_1ED34CD18);
  }
  return result;
}

uint64_t sub_1ABD46850()
{
  sub_1ABD46740();
  return sub_1ABF31960();
}

uint64_t type metadata accessor for LegacyStocksAssembly()
{
  return objc_opt_self();
}

void sub_1ABD468B4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1ABD468C0(void **a1)
{
  uint64_t v1;

  return sub_1ABD468CC(a1, *(_BYTE *)(v1 + 16), v1 + 24);
}

uint64_t sub_1ABD468CC(void **a1, char a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  id v6;
  __int128 v8[2];

  v4 = *a1;
  sub_1ABD07E04(a3, (uint64_t)v8);
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = a2;
  sub_1ABD065C8(v8, v5 + 24);
  *(_QWORD *)(v5 + 64) = v4;
  v6 = v4;
  sub_1ABF312E8();
  return swift_release();
}

uint64_t sub_1ABD46950(_QWORD *a1)
{
  uint64_t v1;

  return sub_1ABD46964(a1, v1);
}

uint64_t sub_1ABD46958@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1ABD26708(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_1ABD46964(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10[2];

  v4 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1ABF30B5C();
  v6 = v10[0];
  if (LOBYTE(v10[0]) == 2)
  {
    __break(1u);
  }
  else
  {
    sub_1ABF30B20();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a2;
    *(_BYTE *)(v7 + 24) = v6 & 1;
    sub_1ABD34F1C();
    swift_allocObject();
    sub_1ABF2FF68();
    sub_1ABF31078();
    sub_1ABD07E04((uint64_t)a1, (uint64_t)v10);
    v8 = swift_allocObject();
    *(_BYTE *)(v8 + 16) = v6 & 1;
    sub_1ABD065C8(v10, v8 + 24);
    v9 = sub_1ABF3106C();
    swift_release();
    swift_release();
    return v9;
  }
  return result;
}

uint64_t sub_1ABD46AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t, uint64_t);
  void (*v6)(char *, uint64_t);
  uint64_t v8;

  v0 = sub_1ABF310FC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30C58();
  sub_1ABD34F1C();
  sub_1ABF2FF68();
  sub_1ABF30F40();
  swift_release();
  swift_release();
  v4 = *MEMORY[0x1E0DB4A18];
  v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1ABF30C58();
  sub_1ABF30F4C();
  swift_release();
  v5(v3, v4, v0);
  sub_1ABF30AB4();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
}

id sub_1ABD46C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v9;
  id v10;
  unsigned __int8 v11;

  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED34CD10, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyStocksAssembly, (uint64_t)&unk_1ABF49F98);
  sub_1ABF30970();
  if (v11 - 2 < 6 || v11)
  {
    sub_1ABD32A94();
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1ABF3EC20;
    *(_QWORD *)(v2 + 32) = objc_msgSend((id)objc_opt_self(), sel_zoneSchema);
    *(_QWORD *)(v2 + 40) = sub_1ABD2F1E8();
    sub_1ABF31A20();
    v3 = objc_allocWithZone((Class)SCWDatabaseSchema);
    v4 = (void *)sub_1ABF31780();
    sub_1ABCF7BCC(0, &qword_1ED34E028);
    v5 = (void *)sub_1ABF319FC();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v3, sel_initWithName_environment_security_zoneSchemas_, v4, 0, 1, v5);
  }
  else
  {
    sub_1ABD32A94();
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1ABF3EC20;
    *(_QWORD *)(v9 + 32) = objc_msgSend((id)objc_opt_self(), sel_zoneSchema);
    *(_QWORD *)(v9 + 40) = sub_1ABD2F1E8();
    sub_1ABF31A20();
    v10 = objc_allocWithZone((Class)SCWDatabaseSchema);
    v4 = (void *)sub_1ABF31780();
    sub_1ABCF7BCC(0, &qword_1ED34E028);
    v5 = (void *)sub_1ABF319FC();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v10, sel_initWithName_environment_security_zoneSchemas_, v4, 1, 1, v5);
  }
  v7 = v6;

  return v7;
}

void sub_1ABD46F6C(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  void (*v24)(char *, int *);
  void *v25;
  id v26;
  id v27;
  unint64_t v28;
  char *v29;
  void *v30;
  id v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int *v36;
  void (*v37)(char *, uint64_t, uint64_t, int *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  char *v47;
  unsigned int v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  unint64_t v55;
  id v56;
  void (*v57)(char *, uint64_t, uint64_t, int *);
  char *v58;
  __int128 v59;
  __int128 v60;
  id v61;
  void (*v62)(char *, int *);
  int *v63;
  char *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  void *v70;
  id v71;
  unint64_t v72;
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v57 - v5;
  v7 = (int *)sub_1ABF305D4();
  v8 = (int *)*((_QWORD *)v7 - 1);
  v9 = MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v57 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v57 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v57 - v17;
  v65 = (id)objc_opt_self();
  v19 = objc_msgSend(v65, sel_defaultManager);
  v66 = a1;
  sub_1ABF305A4();
  v20 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  LOBYTE(a1) = objc_msgSend(v19, sel_fileExistsAtPath_, v20);

  if ((a1 & 1) == 0)
  {
    sub_1ABCF5A54(0, &qword_1ED350D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v21 = (*((unsigned __int8 *)v8 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v8 + 80);
    v64 = (char *)*((_QWORD *)v8 + 9);
    v22 = swift_allocObject();
    v59 = xmmword_1ABF366E0;
    *(_OWORD *)(v22 + 16) = xmmword_1ABF366E0;
    v67 = v22;
    v68 = v22 + v21;
    v23 = (void *)objc_opt_self();
    if (qword_1ED350AA0 != -1)
LABEL_13:
      swift_once();
    sub_1ABCF5804((uint64_t)v16);
    sub_1ABF3055C();
    v24 = (void (*)(char *, int *))*((_QWORD *)v8 + 1);
    v24(v16, v7);
    v25 = (void *)sub_1ABF30550();
    v24(v18, v7);
    v26 = objc_msgSend(v23, sel_preferredFileURLForSchema_parentDirectoryURL_, a2, v25);
    v61 = v23;
    v27 = v26;

    sub_1ABF30580();
    v63 = v8;
    v23 = (void *)*((_QWORD *)v8 + 4);
    v28 = v68;
    ((void (*)(unint64_t, char *, int *))v23)(v68, v18, v7);
    v18 = v64;
    v29 = &v64[v28];
    sub_1ABCF5804((uint64_t)v13);
    sub_1ABF3055C();
    v24(v13, v7);
    v30 = (void *)sub_1ABF30550();
    v62 = v24;
    v24(v16, v7);
    v31 = objc_msgSend(v61, sel_preferredFileURLForSchema_parentDirectoryURL_, a2, v30);

    sub_1ABF30580();
    v32 = v29;
    v8 = v7;
    v61 = v23;
    ((void (*)(char *, char *, int *))v23)(v32, v16, v7);
    v33 = 0;
    v34 = 0;
    v60 = xmmword_1ABF366C0;
    v7 = &dword_1ABCEF000;
    v35 = v68;
    v16 = v69;
    a2 = v18;
    v58 = v6;
    while (1)
    {
      v13 = (char *)v33;
      if (v34 >= *(_QWORD *)(v67 + 16))
      {
        __break(1u);
        goto LABEL_13;
      }
      v36 = v63;
      (*((void (**)(char *, unint64_t, int *))v63 + 2))(v6, v35 + v34 * (_QWORD)a2, v8);
      v37 = (void (*)(char *, uint64_t, uint64_t, int *))*((_QWORD *)v36 + 7);
      v37(v6, 0, 1, v8);
      if ((*((unsigned int (**)(char *, uint64_t, int *))v36 + 6))(v6, 1, v8) == 1)
        goto LABEL_10;
      v57 = v37;
      LODWORD(v69) = (_DWORD)v13;
      ((void (*)(char *, char *, int *))v61)(v16, v6, v8);
      sub_1ABD0F55C();
      v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = v60;
      v39 = sub_1ABF305A4();
      v41 = v40;
      *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
      v42 = sub_1ABD0F5C0();
      *(_QWORD *)(v38 + 64) = v42;
      *(_QWORD *)(v38 + 32) = v39;
      *(_QWORD *)(v38 + 40) = v41;
      sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
      v43 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();

      v44 = objc_msgSend(v65, sel_defaultManager);
      v45 = (void *)sub_1ABF30550();
      v46 = (void *)sub_1ABF30550();
      v71 = 0;
      v47 = v16;
      v48 = objc_msgSend(v44, sel_copyItemAtURL_toURL_error_, v45, v46, &v71);

      if (v48)
        break;
      v49 = v71;
      v23 = (void *)sub_1ABF3046C();

      swift_willThrow();
      v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v59;
      v51 = sub_1ABF305A4();
      v52 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v50 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v50 + 64) = v42;
      *(_QWORD *)(v50 + 32) = v51;
      *(_QWORD *)(v50 + 40) = v53;
      v71 = 0;
      v72 = 0xE000000000000000;
      v70 = v23;
      sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
      sub_1ABF31F6C();
      v54 = v71;
      v55 = v72;
      *(_QWORD *)(v50 + 96) = v52;
      *(_QWORD *)(v50 + 104) = v42;
      *(_QWORD *)(v50 + 72) = v54;
      *(_QWORD *)(v50 + 80) = v55;
      v18 = (char *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();

      v62(v47, v8);
      v33 = 1;
      v34 = 1;
      v6 = v58;
      v16 = v47;
      a2 = v64;
      v35 = v68;
      if ((v69 & 1) != 0)
      {
        v57(v58, 1, 1, v8);
        goto LABEL_10;
      }
    }
    v56 = v71;
    v62(v47, v8);
LABEL_10:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ABD47648()
{
  return sub_1ABD46AEC();
}

uint64_t type metadata accessor for NewsCoreAssembly()
{
  return objc_opt_self();
}

id sub_1ABD47688(id *a1)
{
  return objc_msgSend(*a1, sel_enableFlushingWithFlushingThreshold_, 2);
}

id sub_1ABD4769C()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD v7[2];
  _QWORD v8[2];
  _QWORD v9[2];
  _QWORD v10[2];

  strcpy((char *)v7, "stockEntityID");
  HIWORD(v7[1]) = -4864;
  strcpy((char *)v8, "displaySymbol");
  HIWORD(v8[1]) = -4864;
  strcpy((char *)v9, "isDeprecated");
  BYTE5(v9[1]) = 0;
  HIWORD(v9[1]) = -5120;
  strcpy((char *)v10, "replacementID");
  HIWORD(v10[1]) = -4864;
  sub_1ABD03A20();
  v0 = objc_allocWithZone(MEMORY[0x1E0D58C50]);
  v1 = (void *)sub_1ABF31780();
  v2 = (void *)sub_1ABF31780();
  v3 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1ABF319FC();
  v5 = objc_msgSend(v0, sel_initWithRecordType_recordIDPrefix_keys_localizableKeys_, v1, v2, v3, v4, 0x6B636F7453, 0xE500000000000000, 83, 0xE100000000000000, 45, 0xE100000000000000, 36, 0xE100000000000000, 0x6C6F626D7973, 0xE600000000000000, v7[0], v7[1], 0xD000000000000011,
         0x80000001ABF54120,
         0x4E79616C70736964,
         0xEB00000000656D61,
         v8[0],
         v8[1],
         v9[0],
         v9[1],
         v10[0],
         v10[1]);

  return v5;
}

uint64_t sub_1ABD47888()
{
  type metadata accessor for NoFavoritesPersonalizer();
  return swift_allocObject();
}

uint64_t sub_1ABD478A8(_QWORD *a1)
{
  return sub_1ABE8AB54(a1);
}

id sub_1ABD478BC(_QWORD *a1)
{
  id result;
  uint64_t v2;
  char v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for FCContextEnvironment(0);
  result = (id)sub_1ABF30B74();
  if ((v3 & 1) == 0)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58A80]), sel_initWithEnvironment_, v2);
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NewsCoreConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_1ABD479BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1ABD479C4((const void *)(v1 + 16), a1);
}

uint64_t sub_1ABD479C4@<X0>(const void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t result;
  uint64_t v17;
  id __dst[141];

  __dst[140] = *(id *)MEMORY[0x1E0C80C00];
  sub_1ABF30220();
  swift_allocObject();
  sub_1ABF30214();
  memcpy(__dst, a1, 0x45BuLL);
  sub_1ABD1857C();
  v4 = sub_1ABF30208();
  v6 = v5;
  swift_release();
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1ABF30640();
  __dst[0] = 0;
  v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 4, __dst);

  v10 = __dst[0];
  if (!v9)
    goto LABEL_5;
  v11 = __dst[0];
  sub_1ABF31DD4();
  swift_unknownObjectRelease();
  sub_1ABD18AE0(0, (unint64_t *)&qword_1ED34DE80, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58D90]), sel_init);
    goto LABEL_7;
  }
  sub_1ABD1F230(v17);
  swift_bridgeObjectRelease();
  v10 = objc_allocWithZone(MEMORY[0x1E0D58D90]);
  v12 = (void *)sub_1ABF31618();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v10, sel_initWithPersonalizationTreatmentDictionary_, v12);

  if (!v13)
  {
    __break(1u);
LABEL_5:
    v14 = v10;
    v15 = (void *)sub_1ABF3046C();

    swift_willThrow();
    goto LABEL_6;
  }
LABEL_7:
  result = sub_1ABD0F430(v4, v6);
  *a2 = v13;
  return result;
}

id sub_1ABD47C84(uint64_t a1, uint64_t a2, Class *a3)
{
  return objc_msgSend(objc_allocWithZone(*a3), sel_init);
}

uint64_t sub_1ABD47CC8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - v1;
  v3 = sub_1ABF3094C();
  __swift_allocate_value_buffer(v3, qword_1ED368408);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED368408);
  sub_1ABF3091C();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t sub_1ABD47DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABD47E08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34EAD0)
  {
    sub_1ABF30820();
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34EAD0);
  }
}

unint64_t sub_1ABD47E5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34CCB0;
  if (!qword_1ED34CCB0)
  {
    v1 = sub_1ABF30760();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34CCB0);
  }
  return result;
}

unint64_t sub_1ABD47EA4()
{
  unint64_t result;

  result = qword_1ED34CCA0;
  if (!qword_1ED34CCA0)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED34CCA0);
  }
  return result;
}

unint64_t sub_1ABD47EE8()
{
  unint64_t result;

  result = qword_1ED34EAA0;
  if (!qword_1ED34EAA0)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED34EAA0);
  }
  return result;
}

void sub_1ABD47F2C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34EA98)
  {
    sub_1ABCF5A54(255, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34EA98);
  }
}

void sub_1ABD4C60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_1ABD4D960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

void sub_1ABD4F31C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1ABD4F7BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1ABD510B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 208), 8);
  _Block_object_dispose((const void *)(v33 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1ABD51844(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1ABD51CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_1_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_1ABD5BBD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_1_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, a5, 2u);
}

void sub_1ABD5ECD4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1ABD5EDCC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

CFStringRef OAuthURLEncodedString(CFStringRef originalString)
{
  return objc_autoreleaseReturnValue((id)CFURLCreateStringByAddingPercentEscapes((CFAllocatorRef)*MEMORY[0x1E0C9AE00], originalString, 0, CFSTR(":/?#[]@!$&’()*+,;='"),
                                           0x8000100u));
}

id ParameterString(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  void *v8;
  __CFString *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id obj;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  objc_msgSend(v1, "allKeys");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(obj);
        v7 = *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * i);
        v8 = (void *)MEMORY[0x1E0CB3940];
        objc_msgSend(v1, "objectForKeyedSubscript:", v7);
        v9 = (__CFString *)objc_claimAutoreleasedReturnValue();
        OAuthURLEncodedString(v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "stringWithFormat:", CFSTR("%@=%@"), v7, v10);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "addObject:", v11);

      }
      v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v4);
  }

  objc_msgSend(v2, "sortedArrayUsingSelector:", sel_compare_);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "componentsJoinedByString:", CFSTR("&"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

id ProductVersion()
{
  if (ProductVersion_onceToken != -1)
    dispatch_once(&ProductVersion_onceToken, &__block_literal_global_46);
  return (id)ProductVersion_ProductVersion;
}

id ClientInfo()
{
  if (ClientInfo_onceToken != -1)
    dispatch_once(&ClientInfo_onceToken, &__block_literal_global_51);
  return (id)ClientInfo_ClientInfo;
}

id DeviceInfo()
{
  if (DeviceInfo_onceToken != -1)
    dispatch_once(&DeviceInfo_onceToken, &__block_literal_global_54);
  return (id)DeviceInfo_DeviceInfo;
}

id _ConsumerSecret()
{
  if (_ConsumerSecret_onceToken != -1)
    dispatch_once(&_ConsumerSecret_onceToken, &__block_literal_global_57);
  return (id)_ConsumerSecret_ConsumerSecretString;
}

const __CFString *_ConsumerKey()
{
  return CFSTR("dj0yJmk9cU51ZlhUZ2ZneDBJJmQ9WVdrOU1rOVVlWE5vTkhNbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD1hNw--");
}

id CreateCredential()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = objc_alloc_init(MEMORY[0x1E0D64EA0]);
  objc_msgSend(v0, "setConsumerKey:", CFSTR("dj0yJmk9cU51ZlhUZ2ZneDBJJmQ9WVdrOU1rOVVlWE5vTkhNbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD1hNw--"));
  _ConsumerSecret();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setConsumerSecret:", v1);

  objc_msgSend(v0, "consumerKey");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v2)
    CreateCredential_cold_1();

  objc_msgSend(v0, "consumerSecret");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v3)
    CreateCredential_cold_2();

  return v0;
}

id StocksLogForCategory(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  if (StocksLogForCategory_onceToken[0] != -1)
    dispatch_once(StocksLogForCategory_onceToken, &__block_literal_global_2);
  v2 = (void *)StocksLogForCategory_loggingTypes;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (!v4)
    v4 = (void *)MEMORY[0x1E0C81028];
  v6 = v4;

  return v6;
}

void *char_from_uchar(uint64_t a1, int a2)
{
  int MaxCharSize;
  void *v4;

  if (!ucnv_open())
    return 0;
  MaxCharSize = ucnv_getMaxCharSize();
  v4 = malloc_type_malloc((a2 + 10) * MaxCharSize, 0xFF9FF06BuLL);
  if (v4)
  {
    ucnv_fromUChars();
    ucnv_close();
  }
  return v4;
}

void *formattedCountWithLocale(uint64_t a1, uint64_t a2, int a3, int a4)
{
  void *v6;

  unum_open();
  unum_setAttribute();
  if (a4)
  {
    unum_setAttribute();
LABEL_4:
    unum_setAttribute();
    goto LABEL_5;
  }
  unum_setAttribute();
  if (!a3)
    goto LABEL_4;
LABEL_5:
  unum_formatInt64();
  v6 = char_from_uchar(0, 0);
  free(0);
  unum_close();
  return v6;
}

BOOL SCIsCJKCharacter()
{
  return uscript_hasScript()
      || uscript_hasScript()
      || uscript_hasScript()
      || uscript_hasScript()
      || uscript_hasScript() != 0;
}

void OUTLINED_FUNCTION_0_2(void *a1, NSObject *a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint8_t buf)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &buf, 0x26u);
}

uint64_t sub_1ABD633C8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1ABD63404()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABD63448()
{
  sub_1ABD19560();
  return sub_1ABF31D44();
}

void sub_1ABD63474()
{
  uint64_t v0;
  void *v1;

  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_1ABD19560();
  v1 = (void *)sub_1ABF31D44();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

}

uint64_t sub_1ABD63574()
{
  return sub_1ABF3097C();
}

id sub_1ABD635AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s16HeadlineMetadataCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ABD635E0()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ABD635F0()
{
  sub_1ABD34DA8();
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD6363C(uint64_t a1, uint64_t a2)
{
  return sub_1ABD637BC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

id sub_1ABD6365C()
{
  id *v0;

  return *v0;
}

uint64_t sub_1ABD63664@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_1ABD6366C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1ABD63680(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1ABF3178C();
  *a2 = 0;
  return result;
}

uint64_t sub_1ABD636F4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1ABF31798();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1ABD63770@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF317A4();
  v2 = sub_1ABF31780();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABD637B0(uint64_t a1, uint64_t a2)
{
  return sub_1ABD637BC(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1ABD637BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1ABF317A4();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1ABD637F8()
{
  sub_1ABF317A4();
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD63838()
{
  uint64_t v0;

  sub_1ABF317A4();
  sub_1ABF32308();
  sub_1ABF31840();
  v0 = sub_1ABF32338();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1ABD638AC()
{
  return sub_1ABF317A4();
}

uint64_t sub_1ABD638BC()
{
  sub_1ABCFE1EC((unint64_t *)&qword_1ED347248, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF36980);
  return sub_1ABF30454();
}

uint64_t sub_1ABD638FC()
{
  sub_1ABCFE1EC((unint64_t *)&qword_1ED347248, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF36980);
  return sub_1ABF30418();
}

uint64_t sub_1ABD6393C(void *a1)
{
  id v2;

  sub_1ABCFE1EC((unint64_t *)&qword_1ED347248, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF36980);
  v2 = a1;
  return sub_1ABF3040C();
}

uint64_t sub_1ABD639A0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1ABF31D2C();

  return v2;
}

uint64_t sub_1ABD639D4()
{
  sub_1ABCFE1EC((unint64_t *)&qword_1ED347248, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF36980);
  return sub_1ABF3043C();
}

uint64_t sub_1ABD63A24()
{
  sub_1ABF32308();
  sub_1ABF316CC();
  return sub_1ABF32338();
}

_QWORD *sub_1ABD63A80@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1ABD63A90(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1ABD63A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1ABF317A4();
  v2 = v1;
  if (v0 == sub_1ABF317A4() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1ABD63B28()
{
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34C2F0, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1ABF36D74);
  sub_1ABCFE1EC((unint64_t *)&unk_1EEC417F8, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1ABF36CC8);
  return sub_1ABF3205C();
}

uint64_t sub_1ABD63BAC()
{
  sub_1ABCFE1EC(&qword_1ED347240, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF3692C);
  return sub_1ABF322B4();
}

uint64_t sub_1ABD63BEC()
{
  sub_1ABCFE1EC(&qword_1ED347240, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF3692C);
  return sub_1ABF322A8();
}

uint64_t sub_1ABD63C30()
{
  sub_1ABCFE1EC((unint64_t *)&qword_1ED347248, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF36980);
  return sub_1ABF30400();
}

uint64_t sub_1ABD63C70()
{
  sub_1ABCFE1EC((unint64_t *)&qword_1ED347248, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF36980);
  return sub_1ABF30424();
}

uint64_t sub_1ABD63CC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF31780();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABD63D0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1ABF317A4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1ABD63D34()
{
  sub_1ABCFE1EC(&qword_1ED34E080, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1ABF36DB8);
  sub_1ABCFE1EC(&qword_1EEC41808, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1ABF36BA8);
  return sub_1ABF3205C();
}

uint64_t sub_1ABD63DB8(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1ABF31FC0();
    __break(1u);
  }
  else if (a1)
  {
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350010);
    result = sub_1ABF31A74();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1ABD63E64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABD63E88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, _QWORD);
  uint64_t v6;
  uint64_t result;

  v5 = *(uint64_t (**)(uint64_t, _QWORD))(v2 + 16);
  sub_1ABD3FA70();
  result = v5(a1, *(_QWORD *)(a1 + *(int *)(v6 + 48)));
  *a2 = result;
  return result;
}

uint64_t sub_1ABD63EE0()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABD63EEC()
{
  return _s16HeadlineMetadataCMa();
}

uint64_t type metadata accessor for EmptyTopStoriesService()
{
  return objc_opt_self();
}

void type metadata accessor for CKError(uint64_t a1)
{
  sub_1ABD04578(a1, (unint64_t *)&unk_1ED347228, (uint64_t)&unk_1E5AF0FB8, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1ABD63F30()
{
  return sub_1ABCFE1EC(&qword_1ED347270, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF36844);
}

uint64_t sub_1ABD63F5C()
{
  return sub_1ABCFE1EC(&qword_1ED347278, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF36870);
}

uint64_t sub_1ABD63F88()
{
  return sub_1ABCFE1EC(&qword_1ED347240, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF3692C);
}

uint64_t sub_1ABD63FB4()
{
  return sub_1ABCFE1EC(&qword_1ED347258, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF368F8);
}

uint64_t sub_1ABD63FE0()
{
  return sub_1ABCFE1EC((unint64_t *)&unk_1ED347260, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF368B4);
}

uint64_t sub_1ABD6400C()
{
  return sub_1ABCFE1EC(&qword_1EEC412D8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1ABF36A28);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1ABD04578(a1, (unint64_t *)&unk_1ED347288, (uint64_t)&unk_1E5AF0FE0, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1ABD64054()
{
  return sub_1ABCFE1EC(&qword_1ED347280, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1ABF369EC);
}

unint64_t sub_1ABD64084()
{
  unint64_t result;

  result = qword_1ED347238;
  if (!qword_1ED347238)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED347238);
  }
  return result;
}

uint64_t sub_1ABD640C8()
{
  return sub_1ABCFE1EC((unint64_t *)&unk_1EEC412E0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1ABF36A64);
}

uint64_t sub_1ABD640F4()
{
  return sub_1ABCFE1EC((unint64_t *)&qword_1ED347248, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_1ABF36980);
}

uint64_t sub_1ABD64120()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABD6414C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy144_8(a2, a1);
  return a2;
}

_QWORD *sub_1ABD64188(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17]);
  return a1;
}

uint64_t sub_1ABD641E4(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  int64_t i;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  const void *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[144];
  _BYTE v24[144];
  _QWORD v25[18];
  _BYTE v26[152];
  uint64_t v27;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1ABD1515C(0, v2, 0);
    v6 = a1 + 32;
    v3 = v27;
    for (i = v2 - 1; ; --i)
    {
      sub_1ABD6414C(v6, (uint64_t)v25);
      sub_1ABD6414C((uint64_t)v25, (uint64_t)v26);
      sub_1ABD24814((uint64_t)v26);
      v8 = *(void **)sub_1ABD24804((uint64_t)v26);
      sub_1ABD64188(v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABD64188(v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      v9 = objc_msgSend(v8, sel_identifier);
      v10 = sub_1ABF317A4();
      v12 = v11;

      sub_1ABD64188(v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_7;
      v13 = sub_1ABD00F9C(v10, v12);
      if ((v14 & 1) != 0)
      {
        v15 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v13);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        sub_1ABD6414C((uint64_t)v25, (uint64_t)v23);
        if (sub_1ABD24814((uint64_t)v23) == 1)
        {
          sub_1ABD24804((uint64_t)v23);
          sub_1ABD64188(v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
          v21 = v15;
          sub_1ABD6442C((uint64_t)&v21);
        }
        else
        {
          v17 = (const void *)(sub_1ABD24804((uint64_t)v23) + 8);
          v21 = v15;
          memmove(&v22, v17, 0x88uLL);
          sub_1ABD64440((uint64_t)&v21);
          sub_1ABD64450((uint64_t)v17);
          sub_1ABD64188(v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        }
        v16 = &v21;
      }
      else
      {
LABEL_7:
        swift_bridgeObjectRelease();
        v16 = v25;
      }
      sub_1ABD6414C((uint64_t)v16, (uint64_t)v24);
      v27 = v3;
      v19 = *(_QWORD *)(v3 + 16);
      v18 = *(_QWORD *)(v3 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1ABD1515C(v18 > 1, v19 + 1, 1);
        v3 = v27;
      }
      *(_QWORD *)(v3 + 16) = v19 + 1;
      sub_1ABD6414C((uint64_t)v24, v3 + 144 * v19 + 32);
      if (!i)
        break;
      v6 += 144;
    }
  }
  return v3;
}

uint64_t sub_1ABD6442C(uint64_t result)
{
  *(_QWORD *)(result + 104) = *(_QWORD *)(result + 104) & 1 | 0x8000000000000000;
  return result;
}

uint64_t sub_1ABD64440(uint64_t result)
{
  *(_QWORD *)(result + 104) &= 1uLL;
  return result;
}

uint64_t sub_1ABD64450(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 88);
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABD64484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ForYouConfigRecord(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v6 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_1ABD64550(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void type metadata accessor for CIImageRepresentationOption(uint64_t a1)
{
  sub_1ABD04578(a1, &qword_1ED34C308, (uint64_t)&unk_1E5AF1108, MEMORY[0x1E0DEEC78]);
}

uint64_t sub_1ABD64588()
{
  return sub_1ABCFE1EC(&qword_1EEC417D0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1ABF36B6C);
}

uint64_t sub_1ABD645B4()
{
  return sub_1ABCFE1EC(&qword_1EEC417D8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1ABF36B40);
}

uint64_t sub_1ABD645E0()
{
  return sub_1ABCFE1EC(&qword_1EEC417E0, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1ABF36C8C);
}

uint64_t sub_1ABD6460C()
{
  return sub_1ABCFE1EC((unint64_t *)&unk_1EEC417E8, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1ABF36C60);
}

uint64_t sub_1ABD64638()
{
  return sub_1ABCFE1EC(&qword_1ED34C300, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1ABF36CFC);
}

void StocksIntentType.debugDescription.getter()
{
  uint64_t v1;

  v1 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

uint64_t sub_1ABD646F8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 104) = 0;
  *(_QWORD *)(v5 - 96) = 0xE000000000000000;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31E94();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 - 80) = v4 + 12;
  *(_QWORD *)(v5 - 72) = 0x80000001ABF555E0;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  sub_1ABD64A74(v2, v1, v0);
  sub_1ABF2FF5C();
  sub_1ABD64AD4(v3);
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  sub_1ABD64A74(v2, v1, v0);
  sub_1ABF2FD1C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABD64A74(v2, v1, v0);
  return *(_QWORD *)(v5 - 80);
}

uint64_t sub_1ABD64A74(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a3 >> 61) - 2 >= 2)
  {
    if ((a3 >> 61) > 1)
      return result;
    swift_release();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1ABD64AD4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABD64B18(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a3 >> 61) - 2 >= 2)
  {
    if ((a3 >> 61) > 1)
      return result;
    sub_1ABF2FF68();
  }
  sub_1ABF2FF68();
  return sub_1ABF2FF68();
}

uint64_t destroy for StocksIntentType(uint64_t a1)
{
  return sub_1ABD64A74(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

uint64_t *_s10StocksCore16StocksIntentTypeOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1ABD64B18(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for StocksIntentType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1ABD64B18(*a2, v4, v5);
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1ABD64A74(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for StocksIntentType(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1ABD64A74(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksIntentType(uint64_t a1, unsigned int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 > 0x1FFFFB && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 2097148);
  if (((((*(_QWORD *)(a1 + 16) >> 43) >> 18) | (8
                                                             * ((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7 | (*(_QWORD *)(a1 + 8) >> 50) & 0x3C00 | ((*(_QWORD *)(a1 + 8) & 7) << 7) | (*(_QWORD *)(a1 + 16) >> 43) & 0x20000 | ((*(_QWORD *)(a1 + 16) & 7) << 14)))) ^ 0x1FFFFF) >= 0x1FFFFB)
    v3 = -1;
  else
    v3 = (((*(_QWORD *)(a1 + 16) >> 43) >> 18) | (8
                                                              * ((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7 | (*(_QWORD *)(a1 + 8) >> 50) & 0x3C00 | ((*(_QWORD *)(a1 + 8) & 7) << 7) | (*(_QWORD *)(a1 + 16) >> 43) & 0x20000 | ((*(_QWORD *)(a1 + 16) & 7) << 14)))) ^ 0x1FFFFF;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for StocksIntentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;
  uint64x2_t v4;

  if (a2 > 0x1FFFFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 2097148;
    if (a3 >= 0x1FFFFC)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x1FFFFC)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 3) & 0x3FFFF) - (a2 << 18);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      v4 = (uint64x2_t)vdupq_n_s64(v3);
      *(int8x16_t *)(result + 8) = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1ABF36E70), (int8x16_t)vdupq_n_s64(7uLL)), vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1ABF36E80), (int8x16_t)vdupq_n_s64(0xF000000000000000)));
    }
  }
  return result;
}

uint64_t sub_1ABD64D94(_QWORD *a1)
{
  uint64_t v1;

  v1 = a1[2] >> 61;
  if (v1 <= 3)
    return v1;
  else
    return (*a1 >> 3) + 4;
}

uint64_t sub_1ABD64DB4(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

int8x16_t sub_1ABD64DC4(uint64_t a1, uint64_t a2)
{
  int8x16_t result;
  uint64_t v3;

  if (a2 < 4)
  {
    v3 = *(_QWORD *)(a1 + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
    result = vandq_s8(*(int8x16_t *)a1, (int8x16_t)vdupq_n_s64(0xFFFFFFFFFFFFFF8uLL));
    *(int8x16_t *)a1 = result;
    *(_QWORD *)(a1 + 16) = v3;
  }
  else
  {
    *(_QWORD *)a1 = 8 * (a2 - 4);
    result.i64[0] = 0;
    *(_OWORD *)(a1 + 8) = xmmword_1ABF36E90;
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksIntentType()
{
  return &type metadata for StocksIntentType;
}

uint64_t type metadata accessor for SDSChartOperation()
{
  uint64_t result;

  result = qword_1ED346A70;
  if (!qword_1ED346A70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD64E58()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF30B38();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1ABD64F10(uint64_t a1)
{
  return sub_1ABD6723C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1ABD64F2C()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + qword_1ED346A48), *(_QWORD *)(v0 + qword_1ED346A48 + 24));
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF36EA0;
  *(_QWORD *)(inited + 32) = 0x6C6F626D7973;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v2 = *(_QWORD *)(v0 + qword_1ED346A68 + 8);
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v0 + qword_1ED346A68);
  *(_QWORD *)(inited + 56) = v2;
  *(_QWORD *)(inited + 64) = 0x65676E6172;
  *(_QWORD *)(inited + 72) = 0xE500000000000000;
  __asm { BR              X12 }
}

void sub_1ABD65008(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  id v10;

  v4[10] = 25653;
  v4[11] = a1;
  v4[12] = 0x74655361746164;
  v4[13] = 0xE700000000000000;
  v4[14] = 0x7472616863;
  v4[15] = 0xE500000000000000;
  sub_1ABF2FF5C();
  sub_1ABD031C0((uint64_t)v4);
  v5 = (_QWORD *)sub_1ABE77C3C(2);
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)((char *)v5 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v5) + 16));
  v7 = *v6;
  *v6 = (uint64_t)sub_1ABD65194;
  v6[1] = 0;
  sub_1ABD12EC4(v7);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v3;
  v8[3] = v2;
  v8[4] = v1;
  v9 = v5;
  sub_1ABF2FF68();
  v10 = v1;
  sub_1ABF30BF8();

  objc_msgSend(v9, sel_start);
}

uint64_t sub_1ABD65194(uint64_t a1, uint64_t a2)
{
  _QWORD v3[4];

  v3[2] = a1;
  return sub_1ABF12034((void (*)(uint64_t))sub_1ABD66FB4, (uint64_t)v3, a2);
}

uint64_t sub_1ABD651D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1ABD669A8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34E4C8, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (id *)((char *)&v26 - v11);
  sub_1ABD66A44(a2, (uint64_t)&v26 - v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    sub_1ABD66FD0();
    v14 = a3 + *(int *)(v13 + 48);
    v15 = sub_1ABF30F34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a3, a1, v15);
    *(_OWORD *)v14 = xmmword_1ABF36EB0;
    v16 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v14 + 16) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v14 + 24) = v16;
    type metadata accessor for NetworkEvent();
    *(_QWORD *)(v14 + 32) = 0;
    *(_QWORD *)(v14 + 40) = 0;
  }
  else
  {
    sub_1ABCFE2AC((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1ABD669A8);
    v17 = sub_1ABF30F34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a3, a1, v17);
    sub_1ABD04578(0, &qword_1ED34E4C0, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB44E8]);
    sub_1ABF30F64();
    v18 = v26;
    sub_1ABD365D4(v27, v28);
    v19 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRelease();
    sub_1ABF30F64();
    swift_bridgeObjectRelease();
    v20 = v28;
    if (v28)
    {
      v21 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = 0;
    }
    sub_1ABD66FD0();
    v23 = (_QWORD *)(a3 + *(int *)(v22 + 48));
    sub_1ABCFC3BC((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1ABD669A8);
    *v23 = 1;
    v23[1] = v19;
    v24 = MEMORY[0x1E0DEE9D8];
    v23[2] = MEMORY[0x1E0DEE9D8];
    v23[3] = v24;
    v23[4] = v21;
    v23[5] = v20;
    type metadata accessor for NetworkEvent();
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ABD6542C(uint64_t a1, void (*a2)(void **))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  void *v17;
  id v18;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[5];
  uint64_t v24;

  v4 = type metadata accessor for Chart(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABD669A8(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70];
  sub_1ABCF5A54(0, &qword_1ED346DB8, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (void **)&v20[-v12];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34E4C8, (uint64_t (*)(uint64_t))sub_1ABD669A8, v10);
  MEMORY[0x1E0C80A78](v14);
  v16 = (void **)&v20[-v15];
  sub_1ABD66A44(a1, (uint64_t)&v20[-v15]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = *v16;
    *v13 = *v16;
    swift_storeEnumTagMultiPayload();
    v18 = v17;
    a2(v13);

    return sub_1ABD66C10((uint64_t)v13, &qword_1ED346DB8, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  }
  else
  {
    sub_1ABCFE2AC((uint64_t)v16, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1ABD669A8);
    sub_1ABD04578(0, &qword_1ED34E4C0, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB44E8]);
    sub_1ABF30F64();
    sub_1ABD6575C(&v21, v6);
    v24 = v21;
    sub_1ABD66AA0((uint64_t)&v24);
    sub_1ABD66AC8((uint64_t)&v22, (uint64_t)v23);
    sub_1ABD66B24(v23);
    sub_1ABD177BC((uint64_t)v6, (uint64_t)v13);
    swift_storeEnumTagMultiPayload();
    a2(v13);
    sub_1ABD66C10((uint64_t)v13, &qword_1ED346DB8, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
    sub_1ABCFC3BC((uint64_t)v6, type metadata accessor for Chart);
    return sub_1ABCFC3BC((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1ABD669A8);
  }
}

uint64_t sub_1ABD6575C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  int v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  _BOOL4 v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v63 = a2;
  v4 = sub_1ABF30760();
  MEMORY[0x1E0C80A78](v4);
  v62 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCFC730();
  MEMORY[0x1E0C80A78](v6);
  v66 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v71 = (char *)v59 - v9;
  v67 = sub_1ABF3094C();
  v69 = *(_QWORD *)(v67 - 8);
  v10 = MEMORY[0x1E0C80A78](v67);
  v64 = v11;
  v65 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v68 = (char *)v59 - v12;
  v13 = *a1;
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    sub_1ABD66B54();
    swift_allocError();
    *(_QWORD *)v23 = 0;
    *(_QWORD *)(v23 + 8) = 0;
LABEL_14:
    *(_BYTE *)(v23 + 16) = 3;
    return swift_willThrow();
  }
  v16 = *(_QWORD *)&v2[qword_1ED346A68];
  v15 = *(_QWORD *)&v2[qword_1ED346A68 + 8];
  while (1)
  {
    v17 = *(_QWORD *)(v13 + 32);
    v18 = *(_QWORD *)(v13 + 40);
    v19 = *(_QWORD *)(v13 + 48);
    v20 = *(_QWORD *)(v13 + 64);
    v72 = *(_QWORD *)(v13 + 56);
    v73 = v20;
    v21 = *(_QWORD *)(v13 + 80);
    v74 = *(_QWORD *)(v13 + 72);
    v75 = v21;
    v76 = *(_QWORD *)(v13 + 88);
    v22 = *(_BYTE *)(v13 + 96);
    if (*(_QWORD *)(v13 + 752) == v16 && *(_QWORD *)(v13 + 760) == v15)
      break;
    if ((sub_1ABF3223C() & 1) != 0)
      break;
    v13 += 776;
    if (!--v14)
      goto LABEL_7;
  }
  if (!v19)
  {
    sub_1ABD66B54();
    swift_allocError();
    *(_OWORD *)v23 = xmmword_1ABF36EB0;
    goto LABEL_14;
  }
  LODWORD(v61) = v22 & 1;
  sub_1ABF2FF5C();
  v25 = v72;
  v24 = v73;
  v27 = v74;
  v26 = v75;
  sub_1ABD66B98(v72, v73);
  v28 = v2[qword_1ED346A60];
  v29 = v28 | v61;
  v30 = v28 == 0;
  v31 = v76;
  if (!v30)
    v31 = 0;
  v61 = v31;
  v60 = v29 != 0;
  v32 = v70;
  sub_1ABD65F5C(v25, v24, v27, v26, v71);
  v70 = v32;
  if (v32)
    return sub_1ABD66BAC(v17, v18, v19, v25, v24);
  v34 = v69;
  v35 = v71;
  v36 = v67;
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48))(v71, 1, v67);
  v59[1] = v2;
  if (v37 == 1)
  {
    sub_1ABD66C10((uint64_t)v35, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (qword_1ED34E4A8 != -1)
      swift_once();
    v38 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED368408);
    v39 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
    v39(v68, v38, v36);
    v40 = v36;
    v41 = v65;
    v39(v65, v38, v40);
    v42 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    v43 = swift_allocObject();
    v44 = v41;
    v36 = v40;
    v45 = v43;
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v43 + v42, v44, v36);
    v46 = (void (*)(uint64_t))sub_1ABD66CAC;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v68, v35, v36);
    v47 = swift_allocObject();
    v48 = v2;
    v45 = v47;
    *(_QWORD *)(v47 + 16) = v48;
    v49 = v48;
    v46 = (void (*)(uint64_t))sub_1ABD66F8C;
  }
  v50 = v70;
  v51 = (char *)sub_1ABD66D04(v19, v46, v45);
  v52 = v66;
  if (v50)
  {
    sub_1ABD66BAC(v17, v18, v19, v72, v73);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v36);
  }
  else
  {
    v71 = v51;
    sub_1ABD65CF8(v17, v18, (uint64_t (*)(uint64_t))v46, v66);
    sub_1ABD66BAC(v17, v18, v19, v72, v73);
    v53 = v36;
    v54 = v68;
    v55 = v69;
    v56 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v65, v68, v53);
    v57 = (uint64_t)v52;
    v58 = (uint64_t)v62;
    sub_1ABF30754();
    sub_1ABD00568((uint64_t)v71, v57, v61, v60, v56, v58, v63);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v53);
  }
  return swift_release();
}

uint64_t sub_1ABD65CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, char *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;

  v34 = a4;
  v35 = a1;
  sub_1ABD16EF8();
  v36 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v32 - v10;
  v12 = sub_1ABF30760();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v37 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - v16;
  v18 = v38;
  result = a3(a2);
  if (!v18)
  {
    v33 = v11;
    v20 = v36;
    v38 = v9;
    a3(v35);
    sub_1ABD47E5C();
    result = sub_1ABF31708();
    if ((result & 1) != 0)
    {
      v21 = v33;
      v22 = &v33[*(int *)(v20 + 48)];
      v23 = v13;
      v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v24(v33, v17, v12);
      v24(v22, v37, v12);
      v25 = v38;
      v26 = &v38[*(int *)(v20 + 48)];
      v27 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
      v27(v38, v21, v12);
      v27(v26, v22, v12);
      v28 = v34;
      v24(v34, v25, v12);
      v29 = *(void (**)(char *, uint64_t))(v23 + 8);
      v29(v26, v12);
      v30 = &v25[*(int *)(v36 + 48)];
      v24(v25, v21, v12);
      v24(v30, v22, v12);
      sub_1ABCFC730();
      v24(&v28[*(int *)(v31 + 36)], v30, v12);
      return ((uint64_t (*)(char *, uint64_t))v29)(v25, v12);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1ABD65F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;

  v29 = a5;
  v30 = a3;
  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v29 - v12;
  v14 = sub_1ABF3094C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v29 - v19;
  if (a2 == 1)
    goto LABEL_2;
  if ((a4 & 1) != 0)
  {
    if (!a2)
    {
LABEL_2:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v29, 1, 1, v14);
      return sub_1ABD66B98(a1, a2);
    }
    sub_1ABF2FF5C();
    sub_1ABF30904();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
    {
      sub_1ABD66C10((uint64_t)v11, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1ABD66B54();
      swift_allocError();
      *(_QWORD *)v23 = a1;
      v24 = 1;
      goto LABEL_9;
    }
    sub_1ABD66BFC(a1, a2);
    v27 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v27(v18, v11, v14);
    v28 = v29;
    v27(v29, v18, v14);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v28, 0, 1, v14);
  }
  else
  {
    v22 = v30;
    sub_1ABF30928();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_1ABD66C10((uint64_t)v13, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      sub_1ABD66B54();
      swift_allocError();
      a2 = 0;
      *(_QWORD *)v23 = v22;
      v24 = 2;
LABEL_9:
      *(_QWORD *)(v23 + 8) = a2;
      *(_BYTE *)(v23 + 16) = v24;
      return swift_willThrow();
    }
    v25 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v25(v20, v13, v14);
    v26 = v29;
    v25(v29, v20, v14);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v26, 0, 1, v14);
  }
}

uint64_t sub_1ABD66248@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1;
  v38 = a2;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v29 - v4;
  v5 = sub_1ABF3094C();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF303B8();
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1ABF308F8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v2);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v29 - v16;
  v18 = sub_1ABF30760();
  v30 = *(_QWORD *)(v18 - 8);
  v31 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30700();
  if (qword_1ED3471B0 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED347190);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v21, v11);
  sub_1ABF308D4();
  sub_1ABF308A4();
  v22 = v32;
  v23 = v7;
  v24 = v33;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v33);
  v25 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v36, v37, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v24);
  sub_1ABF303AC();
  sub_1ABF308BC();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v35);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v26 = v30;
  v27 = v31;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v17, 1, v31) == 1)
  {
    sub_1ABD66C10((uint64_t)v17, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v27);
    v20 = v17;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v38, v20, v27);
}

void sub_1ABD66570()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABD6659C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + qword_1ED346A58;
  v2 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_1ED346A50;
  v4 = sub_1ABF30B38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED346A48);
}

id sub_1ABD66624()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ABD66658(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v2 = a1 + qword_1ED346A58;
  v3 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = a1 + qword_1ED346A50;
  v5 = sub_1ABF30B38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED346A48);
}

uint64_t sub_1ABD666E8()
{
  return type metadata accessor for SDSChartOperation();
}

uint64_t sub_1ABD666F0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - v1;
  v3 = sub_1ABF3094C();
  __swift_allocate_value_buffer(v3, qword_1ED368378);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED368378);
  sub_1ABF30928();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t sub_1ABD667CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v0 = sub_1ABF3094C();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v15 - v5;
  v7 = sub_1ABF3088C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1ABF308F8();
  __swift_allocate_value_buffer(v11, qword_1ED347190);
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED347190);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0CB0EF8], v7);
  if (qword_1ED3471C0 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED368378);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v13(v6, v12, v0);
  sub_1ABF30898();
  v13(v4, (uint64_t)v6, v0);
  sub_1ABF308E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1ABD66970()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ABD6699C(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABD6542C(a1, *(void (**)(void **))(v1 + 16));
}

void sub_1ABD669A8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED34E4B8)
  {
    v2 = sub_1ABD66A00();
    v4 = type metadata accessor for SDSBaseOperationResponse(a1, (uint64_t)&type metadata for SDSQuoteResponse, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED34E4B8);
  }
}

unint64_t sub_1ABD66A00()
{
  unint64_t result;

  result = qword_1ED34CFE8;
  if (!qword_1ED34CFE8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40DA4, &type metadata for SDSQuoteResponse);
    atomic_store(result, (unint64_t *)&qword_1ED34CFE8);
  }
  return result;
}

uint64_t sub_1ABD66A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34E4C8, (uint64_t (*)(uint64_t))sub_1ABD669A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD66AA0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABD66AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD04578(0, &qword_1ED34EBB0, (uint64_t)&type metadata for SDSMetadata, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1ABD66B24(uint64_t *a1)
{
  sub_1ABD365D4(*a1, a1[1]);
  return a1;
}

unint64_t sub_1ABD66B54()
{
  unint64_t result;

  result = qword_1EEC41DB0;
  if (!qword_1EEC41DB0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF36F90, &type metadata for SDSChartOperationError);
    atomic_store(result, (unint64_t *)&qword_1EEC41DB0);
  }
  return result;
}

uint64_t sub_1ABD66B98(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return sub_1ABF2FF5C();
  return result;
}

uint64_t sub_1ABD66BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return sub_1ABD66BFC(a4, a5);
  }
  return result;
}

uint64_t sub_1ABD66BFC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1ABD66C10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_1ABCF5A54(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1ABD66C4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1ABF3094C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1ABD66CAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF3094C() - 8) + 80);
  return sub_1ABD66248(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1ABD66D04(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  char *v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v36 = a2;
  v37 = a3;
  v5 = sub_1ABF30760();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x1E0C80A78](v5);
  v31 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Chart.Entry(0);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = (int *)v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v45 = v3;
    v46 = MEMORY[0x1E0DEE9D8];
    sub_1ABD008FC(0, v10, 0);
    v11 = v46;
    v12 = (unsigned __int8 *)(a1 + 112);
    v13 = v31;
    while (1)
    {
      v43 = v10;
      v44 = v11;
      v14 = *((_QWORD *)v12 - 10);
      v15 = *(v12 - 72);
      v16 = *((_QWORD *)v12 - 8);
      v17 = *(v12 - 56);
      v42 = *((_QWORD *)v12 - 6);
      v41 = *(v12 - 40);
      v11 = *((_QWORD *)v12 - 4);
      v18 = *(v12 - 24);
      v19 = *((_QWORD *)v12 - 2);
      v40 = *((_QWORD *)v12 - 1);
      v20 = *v12;
      v38 = v17;
      v39 = v20;
      v21 = v45;
      v36(v19);
      if (v21)
        break;
      v45 = 0;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v9, v13, v35);
      v22 = v33;
      v23 = &v9[v33[5]];
      *(_QWORD *)v23 = v11;
      v23[8] = v18;
      v24 = &v9[v22[6]];
      *(_QWORD *)v24 = v14;
      v24[8] = v15;
      v25 = &v9[v22[7]];
      *(_QWORD *)v25 = v16;
      v25[8] = v38;
      v26 = &v9[v22[8]];
      *(_QWORD *)v26 = v42;
      v26[8] = v41;
      v27 = &v9[v22[9]];
      *(_QWORD *)v27 = v40;
      v27[8] = v39;
      v11 = v44;
      v46 = v44;
      v29 = *(_QWORD *)(v44 + 16);
      v28 = *(_QWORD *)(v44 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1ABD008FC(v28 > 1, v29 + 1, 1);
        v13 = v31;
        v11 = v46;
      }
      v12 += 88;
      *(_QWORD *)(v11 + 16) = v29 + 1;
      sub_1ABCFE2AC((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v29, type metadata accessor for Chart.Entry);
      v10 = v43 - 1;
      if (v43 == 1)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1ABD66F68()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1ABD66F8C()
{
  return sub_1ABF30700();
}

uint64_t sub_1ABD66FB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1ABD651D4(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1ABD66FD0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34DC78)
  {
    sub_1ABF30F34();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34DC78);
  }
}

uint64_t sub_1ABD6703C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return sub_1ABF2FF5C();
  return result;
}

uint64_t destroy for SDSChartOperationError(uint64_t a1)
{
  return sub_1ABD67064(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1ABD67064(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s10StocksCore22SDSChartOperationErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1ABD6703C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SDSChartOperationError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1ABD6703C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1ABD67064(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SDSChartOperationError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1ABD67064(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSChartOperationError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSChartOperationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1ABD671FC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1ABD67214(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SDSChartOperationError()
{
  return &type metadata for SDSChartOperationError;
}

uint64_t sub_1ABD6723C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  return ((uint64_t (*)(void))((char *)sub_1ABD67258 + 4 * byte_1ABF36ECB[a3]))();
}

uint64_t sub_1ABD67258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  return sub_1ABF3223C();
}

uint64_t ScoredArticle.article.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

double ScoredArticle.score.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double result;
  __int128 v7;
  __int128 v8;

  v3 = v2 + *(int *)(a1 + 36);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_BYTE *)(v3 + 56);
  result = *(double *)(v3 + 112);
  v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 32) = v4;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v3 + 40);
  *(_BYTE *)(a2 + 56) = v5;
  v8 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a2 + 80) = v8;
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v3 + 96);
  *(double *)(a2 + 112) = result;
  return result;
}

uint64_t *sub_1ABD67398(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 120 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    sub_1ABF2FF68();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_OWORD *)(v11 + 48);
    v14 = *(_OWORD *)v11;
    v13 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
    *(_OWORD *)(v10 + 48) = v12;
    *(_OWORD *)v10 = v14;
    *(_OWORD *)(v10 + 16) = v13;
    v16 = *(_OWORD *)(v11 + 80);
    v15 = *(_OWORD *)(v11 + 96);
    v17 = *(_OWORD *)(v11 + 64);
    *(_QWORD *)(v10 + 112) = *(_QWORD *)(v11 + 112);
    *(_OWORD *)(v10 + 80) = v16;
    *(_OWORD *)(v10 + 96) = v15;
    *(_OWORD *)(v10 + 64) = v17;
  }
  return v4;
}

uint64_t sub_1ABD67468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
  *(_BYTE *)(v7 + 56) = *(_BYTE *)(v8 + 56);
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(v8 + 72);
  *(_QWORD *)(v7 + 80) = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v7 + 96) = *(_QWORD *)(v8 + 96);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(v8 + 112);
  return a1;
}

uint64_t sub_1ABD67534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)(v8 + 48);
  v11 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 48) = v9;
  *(_OWORD *)v7 = v11;
  *(_OWORD *)(v7 + 16) = v10;
  v13 = *(_OWORD *)(v8 + 80);
  v12 = *(_OWORD *)(v8 + 96);
  v14 = *(_OWORD *)(v8 + 64);
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(v8 + 112);
  *(_OWORD *)(v7 + 80) = v13;
  *(_OWORD *)(v7 + 96) = v12;
  *(_OWORD *)(v7 + 64) = v14;
  return a1;
}

uint64_t sub_1ABD675B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
  *(_BYTE *)(v7 + 56) = *(_BYTE *)(v8 + 56);
  *(_QWORD *)(v7 + 64) = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(v8 + 72);
  *(_QWORD *)(v7 + 80) = *(_QWORD *)(v8 + 80);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v8 + 88);
  *(_QWORD *)(v7 + 96) = *(_QWORD *)(v8 + 96);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v8 + 104);
  *(_QWORD *)(v7 + 112) = *(_QWORD *)(v8 + 112);
  return a1;
}

uint64_t sub_1ABD6767C()
{
  sub_1ABF32308();
  sub_1ABF32314();
  return sub_1ABF32338();
}

uint64_t sub_1ABD676BC()
{
  return sub_1ABF32314();
}

uint64_t sub_1ABD676E0()
{
  sub_1ABF32308();
  sub_1ABF32314();
  return sub_1ABF32338();
}

uint64_t sub_1ABD6771C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABD67860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC41DB8);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC41DB8);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABD679D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC40EB8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1EEC41DB8, a1);
}

uint64_t sub_1ABD679F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v12[0] = sub_1ABF30484();
  v3 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF2FE54();
  __swift_allocate_value_buffer(v10, qword_1EEC41DD0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC41DD0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v12[0]);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1ABF2FE60();
}

uint64_t sub_1ABD67C24@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC40EC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1EEC41DD0, a1);
}

uint64_t sub_1ABD67C48@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t sub_1ABD67CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0C919C0];
  v3 = sub_1ABF30088();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1ABD67CF8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABCF4DA8(0, &qword_1EEC41DE8, (uint64_t (*)(void))sub_1ABD67E80, (uint64_t)&type metadata for DeleteWatchlistIntent, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABCF4DA8(0, &qword_1EEC41DF0, (uint64_t (*)(void))sub_1ABD67E80, (uint64_t)&type metadata for DeleteWatchlistIntent, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABD67E80();
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABD67F3C();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF74();
}

unint64_t sub_1ABD67E80()
{
  unint64_t result;

  result = qword_1ED3471E0;
  if (!qword_1ED3471E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37074, &type metadata for DeleteWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3471E0);
  }
  return result;
}

uint64_t sub_1ABD67EC4()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABD67EE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FDD0();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

void sub_1ABD67F3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC41DF8)
  {
    sub_1ABCF4DA8(255, &qword_1ED347078, (uint64_t (*)(void))sub_1ABD67FB8, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC41DF8);
  }
}

unint64_t sub_1ABD67FB8()
{
  unint64_t result;

  result = qword_1ED34E3E8;
  if (!qword_1ED34E3E8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistEntity, &type metadata for WatchlistEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34E3E8);
  }
  return result;
}

uint64_t sub_1ABD67FFC()
{
  return sub_1ABF2FDB8();
}

double sub_1ABD6801C@<D0>(uint64_t a1@<X8>)
{
  double result;
  uint64_t v3;
  __int128 v4;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  *(_QWORD *)a1 = v3;
  result = *(double *)&v4;
  *(_OWORD *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1ABD68084()
{
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABD680F8()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABD68134(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABD68180()
{
  return sub_1ABF2FBF0();
}

uint64_t sub_1ABD681A0()
{
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABD681EC(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[40];

  sub_1ABD07E04(a1, (uint64_t)v3);
  sub_1ABD07E04((uint64_t)v3, (uint64_t)&v2);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBFC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  swift_release();
  return swift_release();
}

uint64_t sub_1ABD68260(uint64_t a1)
{
  _BYTE v3[40];

  sub_1ABD07E04(a1, (uint64_t)v3);
  sub_1ABF2FBFC();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t (*sub_1ABD682A0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FBE4();
  return sub_1ABD6817C;
}

void sub_1ABD682E8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_1ABD68318()
{
  return sub_1ABF2FC08();
}

uint64_t sub_1ABD68338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t result;
  uint64_t *v26;
  _QWORD v27[2];
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a1;
  v1 = sub_1ABF2FFC8();
  v31 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  MEMORY[0x1E0C80A78](v1);
  v30 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C907D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v29 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)v27 - v7;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v3);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v27 - v9;
  v11 = sub_1ABF30484();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1ABF3049C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  sub_1ABCF4DA8(0, &qword_1ED347078, (uint64_t (*)(void))sub_1ABD67FB8, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
  v27[1] = v19;
  sub_1ABF31738();
  sub_1ABF30844();
  v20 = *MEMORY[0x1E0CAF9B8];
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v21(v14, v20, v11);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v21(v14, v20, v11);
  sub_1ABF304A8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
  v22 = sub_1ABF2FCD4();
  v38 = 0;
  v39 = 0;
  v37 = 0;
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v28, 1, 1, v22);
  v23(v29, 1, 1, v22);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34C7B8, (uint64_t (*)(uint64_t))sub_1ABD68798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  v34 = 0u;
  v35 = 0u;
  v36 = 0;
  sub_1ABF2FC38();
  *(_QWORD *)&v34 = sub_1ABF2FC14();
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v30, *MEMORY[0x1E0C91738], v32);
  sub_1ABD687EC();
  sub_1ABD68830();
  v24 = sub_1ABF2FDE8();
  v36 = 0;
  v34 = 0u;
  v35 = 0u;
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  v26 = v33;
  *v33 = v24;
  v26[1] = result;
  return result;
}

unint64_t sub_1ABD68798()
{
  unint64_t result;

  result = qword_1ED350780;
  if (!qword_1ED350780)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED350780);
  }
  return result;
}

unint64_t sub_1ABD687EC()
{
  unint64_t result;

  result = qword_1EEC41E00;
  if (!qword_1EEC41E00)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39CB0, &type metadata for RemovableWatchlistOptionsProvider);
    atomic_store(result, &qword_1EEC41E00);
  }
  return result;
}

unint64_t sub_1ABD68830()
{
  unint64_t result;

  result = qword_1ED3470B8;
  if (!qword_1ED3470B8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistEntity, &type metadata for WatchlistEntity);
    atomic_store(result, (unint64_t *)&qword_1ED3470B8);
  }
  return result;
}

uint64_t sub_1ABD68874(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 312) = a1;
  *(_OWORD *)(v2 + 320) = *v1;
  return swift_task_switch();
}

uint64_t sub_1ABD68894()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[42] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_retain_n();
  swift_retain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v14 = v5;
    *(_DWORD *)v4 = 136315138;
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FDB8();
    swift_release();
    swift_release();
    v7 = v0[33];
    v6 = v0[34];
    swift_release();
    v0[38] = sub_1ABD1FE2C(v7, v6, &v14);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Deleting watchlist id=%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v5, -1, -1);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_release_n();
  }

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  v8 = v0[22];
  v9 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v8);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  v10 = v0[24];
  v11 = v0[25];
  swift_release();
  v0[43] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 144))(v10, v11, v8, v9);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)swift_task_alloc();
  v0[44] = v12;
  *v12 = v0;
  v12[1] = sub_1ABD68B80;
  return sub_1ABF31150();
}

uint64_t sub_1ABD68B80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 360) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
  }
  return swift_task_switch();
}

uint64_t sub_1ABD68BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  NSObject *v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[5];
  __int16 v18;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 40);
    v16 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(_WORD *)(v0 + 56);
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FBF0();
    swift_release();
    swift_release();
    v6 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 144);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 112), v6);
    v17[0] = v4;
    v17[1] = v1;
    v17[2] = v3;
    v17[3] = v2;
    v17[4] = v16;
    v18 = v5;
    *(_QWORD *)(v0 + 368) = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 80))(v17, v6, v7);
    sub_1ABD365D4(v4, v1);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 376) = v8;
    *v8 = v0;
    v8[1] = sub_1ABD68EF8;
    return sub_1ABF31150();
  }
  else
  {
    swift_retain_n();
    swift_retain_n();
    v10 = sub_1ABF31324();
    v11 = sub_1ABF31BE8();
    if (os_log_type_enabled(v10, (os_log_type_t)v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v17[0] = v13;
      *(_DWORD *)v12 = 136315138;
      sub_1ABF2FF68();
      sub_1ABF2FF68();
      sub_1ABF2FDB8();
      swift_release();
      swift_release();
      v15 = *(_QWORD *)(v0 + 216);
      v14 = *(_QWORD *)(v0 + 224);
      swift_release();
      *(_QWORD *)(v0 + 288) = sub_1ABD1FE2C(v15, v14, v17);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release_n();
      _os_log_impl(&dword_1ABCEF000, v10, (os_log_type_t)v11, "No watchlist found matching id=%s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v13, -1, -1);
      MEMORY[0x1AF438FFC](v12, -1, -1);
    }
    else
    {
      swift_release_n();
      swift_release_n();
    }

    sub_1ABD694C8();
    swift_allocError();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1ABD68EF8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 384) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 112);
  }
  return swift_task_switch();
}

uint64_t sub_1ABD68F98()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  swift_retain_n();
  swift_retain_n();
  v1 = sub_1ABF31324();
  v2 = sub_1ABF31BF4();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FDB8();
    swift_release();
    swift_release();
    v6 = *(_QWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 248);
    swift_release();
    *(_QWORD *)(v0 + 296) = sub_1ABD1FE2C(v6, v5, &v8);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1ABCEF000, v1, v2, "Successfully deleted watchlist id=%s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v4, -1, -1);
    MEMORY[0x1AF438FFC](v3, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_release_n();
  }

  sub_1ABF2FD04();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD6916C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD691AC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD691EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40EB8 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC41DB8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABD69260@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0C919C0];
  v3 = sub_1ABF30088();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1ABD692A8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABCF4DA8(0, &qword_1EEC41DE8, (uint64_t (*)(void))sub_1ABD67E80, (uint64_t)&type metadata for DeleteWatchlistIntent, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABCF4DA8(0, &qword_1EEC41DF0, (uint64_t (*)(void))sub_1ABD67E80, (uint64_t)&type metadata for DeleteWatchlistIntent, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABD67F3C();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF74();
}

uint64_t sub_1ABD69434(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1ABD37AA0;
  *(_QWORD *)(v4 + 312) = a1;
  *(_OWORD *)(v4 + 320) = *v1;
  return swift_task_switch();
}

uint64_t sub_1ABD694A0()
{
  sub_1ABD67E80();
  return sub_1ABF2FCA4();
}

unint64_t sub_1ABD694C8()
{
  unint64_t result;

  result = qword_1EEC41E10;
  if (!qword_1EEC41E10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF371FC, &type metadata for DeleteWatchlistIntent.Error);
    atomic_store(result, (unint64_t *)&qword_1EEC41E10);
  }
  return result;
}

uint64_t sub_1ABD6950C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD69ABC();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

unint64_t sub_1ABD69658()
{
  unint64_t result;

  result = qword_1ED3471E8;
  if (!qword_1ED3471E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37104, &type metadata for DeleteWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3471E8);
  }
  return result;
}

unint64_t sub_1ABD696A0()
{
  unint64_t result;

  result = qword_1ED3471D8;
  if (!qword_1ED3471D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3712C, &type metadata for DeleteWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3471D8);
  }
  return result;
}

uint64_t sub_1ABD696E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ABD696F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for OpenSymbolIntent()
{
  swift_release();
  return swift_release();
}

_QWORD *_s10StocksCore16OpenSymbolIntentVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  return a1;
}

_QWORD *assignWithCopy for OpenSymbolIntent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF68();
  swift_release();
  a1[1] = a2[1];
  sub_1ABF2FF68();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for OpenSymbolIntent(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DeleteWatchlistIntent()
{
  return &type metadata for DeleteWatchlistIntent;
}

unint64_t sub_1ABD69820()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC41E20;
  if (!qword_1EEC41E20)
  {
    sub_1ABCF4DA8(255, &qword_1EEC41E28, (uint64_t (*)(void))sub_1ABD67E80, (uint64_t)&type metadata for DeleteWatchlistIntent, MEMORY[0x1E0C91678]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C916B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC41E20);
  }
  return result;
}

unint64_t sub_1ABD6988C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC41E30;
  if (!qword_1EEC41E30)
  {
    sub_1ABD698D4();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91590], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC41E30);
  }
  return result;
}

void sub_1ABD698D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC41E38)
  {
    sub_1ABD69948();
    sub_1ABD6998C();
    v0 = sub_1ABF2FF38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC41E38);
  }
}

unint64_t sub_1ABD69948()
{
  unint64_t result;

  result = qword_1EEC41E40;
  if (!qword_1EEC41E40)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91D70], MEMORY[0x1E0DEDCE8]);
    atomic_store(result, (unint64_t *)&qword_1EEC41E40);
  }
  return result;
}

unint64_t sub_1ABD6998C()
{
  unint64_t result;

  result = qword_1EEC41E48;
  if (!qword_1EEC41E48)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91D60], MEMORY[0x1E0DEDCE8]);
    atomic_store(result, (unint64_t *)&qword_1EEC41E48);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DeleteWatchlistIntent.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABD69A10 + 4 * byte_1ABF37040[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABD69A30 + 4 * byte_1ABF37045[v4]))();
}

_BYTE *sub_1ABD69A10(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABD69A30(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD69A38(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD69A40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD69A48(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD69A50(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1ABD69A5C()
{
  return 0;
}

ValueMetadata *type metadata accessor for DeleteWatchlistIntent.Error()
{
  return &type metadata for DeleteWatchlistIntent.Error;
}

unint64_t sub_1ABD69A78()
{
  unint64_t result;

  result = qword_1EEC41E50;
  if (!qword_1EEC41E50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF371D4, &type metadata for DeleteWatchlistIntent.Error);
    atomic_store(result, (unint64_t *)&qword_1EEC41E50);
  }
  return result;
}

void sub_1ABD69ABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E368)
  {
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E368);
  }
}

uint64_t sub_1ABD69B10()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1ABF3133C();
  __swift_allocate_value_buffer(v0, qword_1EEC41E58);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC41E58);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1ABF317A4();

  }
  return sub_1ABF31330();
}

uint64_t sub_1ABD69BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40EC8 != -1)
    swift_once();
  v2 = sub_1ABF3133C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC41E58);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

BOOL sub_1ABD69C64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1ABD69C78()
{
  sub_1ABF32308();
  sub_1ABF32314();
  return sub_1ABF32338();
}

uint64_t sub_1ABD69CBC()
{
  return sub_1ABF32314();
}

uint64_t sub_1ABD69CE4()
{
  sub_1ABF32308();
  sub_1ABF32314();
  return sub_1ABF32338();
}

void sub_1ABD69D24()
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1ABF305D4();
  MEMORY[0x1E0C80A78](v1);
  sub_1ABCF5968();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1ABD69DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  sub_1ABF317A4();
  v5 = (void *)sub_1ABF31780();
  v6 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  v7 = (id)FCPermanentURLForRecordID();

  if (!v7)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v0);
    goto LABEL_5;
  }
  sub_1ABF30580();

  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  v8(v1, v2, v0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v0) == 1)
  {
LABEL_5:
    __break(1u);
    JUMPOUT(0x1ABD69F34);
  }
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v8)(*(_QWORD *)(v4 - 88), v1, v0);
}

uint64_t sub_1ABD69F48()
{
  return swift_deallocClassInstance();
}

uint64_t storeEnumTagSinglePayload for PermanentURLFactory.Container(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABD69FA4 + 4 * byte_1ABF37245[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABD69FD8 + 4 * byte_1ABF37240[v4]))();
}

uint64_t sub_1ABD69FD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD69FE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD69FE8);
  return result;
}

uint64_t sub_1ABD69FF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD69FFCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABD6A000(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD6A008(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PermanentURLFactory.Container()
{
  return &type metadata for PermanentURLFactory.Container;
}

unint64_t sub_1ABD6A028()
{
  unint64_t result;

  result = qword_1EEC41E70;
  if (!qword_1EEC41E70)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF372C0, &type metadata for PermanentURLFactory.Container);
    atomic_store(result, (unint64_t *)&qword_1EEC41E70);
  }
  return result;
}

uint64_t type metadata accessor for YahooNewsOperation()
{
  uint64_t result;

  result = qword_1EEC41EB0;
  if (!qword_1EEC41EB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD6A0A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30B38();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1ABD6A134(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v20 = a1;
  v21 = a2;
  v4 = sub_1ABF30760();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + qword_1EEC41EA0 + 24);
  v19[2] = *(_QWORD *)(v2 + qword_1EEC41EA0 + 32);
  v19[1] = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + qword_1EEC41EA0), v8);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(inited + 32) = 0x7372656B636974;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v22 = *(_QWORD *)(v2 + qword_1EEC41E98);
  sub_1ABD165AC();
  sub_1ABD16600();
  sub_1ABF2FF5C();
  v10 = sub_1ABF316E4();
  v12 = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v12;
  v13 = sub_1ABD031C0(inited);
  v14 = v3 + qword_1EEC41EA8;
  sub_1ABD6B298();
  sub_1ABE60B4C();
  v15 = (void *)sub_1ABE60B50(3u, 0x6677656C7070612FLL, 0xED00007377656E2FLL, v13, (uint64_t)v7, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = swift_allocObject();
  v17 = v21;
  *(_QWORD *)(v16 + 16) = v20;
  *(_QWORD *)(v16 + 24) = v17;
  v18 = v15;
  sub_1ABF2FF68();
  sub_1ABF30BF8();

  objc_msgSend(v18, sel_start);
}

void sub_1ABD6A364(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(void *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  sub_1ABCF5A54(0, &qword_1EEC41EC8, (uint64_t (*)(uint64_t))type metadata accessor for YahooHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - v7;
  v9 = type metadata accessor for YahooHeadline();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - v13;
  v15 = *(_QWORD *)(a1 + 8);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v17 = *(_QWORD *)(a1 + 16);
    v16 = *(_QWORD *)(a1 + 24);
    v18 = *(void **)a1;
    v19 = v18;
    a2(v18, 1);
    sub_1ABD6B2E4(v18, v15, v17, v16, 1);
  }
  else
  {
    v36 = v12;
    v34 = a3;
    v20 = *(_QWORD *)(v15 + 16);
    if (v20)
    {
      v33 = a2;
      sub_1ABF2FF5C();
      v21 = 0;
      v22 = MEMORY[0x1E0DEE9D8];
      v35 = v9;
      v23 = v36;
      do
      {
        v24 = *(_QWORD *)(v15 + v21 + 48);
        v25 = *(_QWORD *)(v15 + v21 + 56);
        v27 = *(_OWORD *)(v15 + v21 + 80);
        v26 = *(_OWORD *)(v15 + v21 + 96);
        v28 = *(_QWORD *)(v15 + v21 + 112);
        v29 = *(_QWORD *)(v15 + v21 + 120);
        v37 = *(_OWORD *)(v15 + v21 + 32);
        v38 = v24;
        v39 = v25;
        v40 = *(_OWORD *)(v15 + v21 + 64);
        v41 = v27;
        v42 = v26;
        v43 = v28;
        v44 = v29;
        sub_1ABD6A62C((uint64_t *)&v37, v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        {
          sub_1ABD184CC((uint64_t)v8, &qword_1EEC41EC8, (uint64_t (*)(uint64_t))type metadata accessor for YahooHeadline);
        }
        else
        {
          sub_1ABD6B31C((uint64_t)v8, (uint64_t)v14);
          sub_1ABD6B31C((uint64_t)v14, v23);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v22 = sub_1ABD82434(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
          v31 = *(_QWORD *)(v22 + 16);
          v30 = *(_QWORD *)(v22 + 24);
          if (v31 >= v30 >> 1)
            v22 = sub_1ABD82434(v30 > 1, v31 + 1, 1, v22);
          *(_QWORD *)(v22 + 16) = v31 + 1;
          v23 = v36;
          sub_1ABD6B31C(v36, v22+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v31);
          v9 = v35;
        }
        v21 += 96;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease();
      v33((void *)v22, 0);
    }
    else
    {
      a2((void *)MEMORY[0x1E0DEE9D8], 0);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ABD6A62C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  int *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;

  v86 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v68 - v5;
  v83 = sub_1ABF30760();
  v7 = *(_QWORD *)(v83 - 8);
  v8 = MEMORY[0x1E0C80A78](v83);
  v80 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v79 = (char *)&v68 - v10;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v3);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v68 - v12;
  v14 = sub_1ABF305D4();
  v84 = *(_QWORD *)(v14 - 8);
  v85 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v68 - v17;
  v19 = *a1;
  v20 = a1[2];
  v74 = a1[1];
  v75 = v19;
  v22 = a1[3];
  v21 = a1[4];
  v72 = a1[5];
  v73 = v21;
  v23 = a1[7];
  v70 = a1[6];
  v71 = v23;
  v76 = a1[8];
  v78 = a1[9];
  v24 = a1[11];
  v81 = a1[10];
  v82 = v24;
  v87 = v20;
  v88 = v22;
  v25 = qword_1EEC40ED8;
  sub_1ABF2FF5C();
  if (v25 != -1)
    swift_once();
  v26 = sub_1ABF302A4();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EEC41E80);
  sub_1ABD0E288();
  v27 = MEMORY[0x1E0DEA968];
  sub_1ABF31DB0();
  v29 = v28;
  swift_bridgeObjectRelease();
  if (!v29)
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v34 + 56) = v27;
    *(_QWORD *)(v34 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v34 + 32) = v20;
    *(_QWORD *)(v34 + 40) = v22;
    sub_1ABD19560();
    sub_1ABF2FF5C();
    v33 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    goto LABEL_7;
  }
  sub_1ABF305BC();
  swift_bridgeObjectRelease();
  v31 = v84;
  v30 = v85;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v13, 1, v85) == 1)
  {
    sub_1ABD184CC((uint64_t)v13, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v32 + 56) = v27;
    *(_QWORD *)(v32 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v32 + 32) = v20;
    *(_QWORD *)(v32 + 40) = v22;
    sub_1ABD19560();
    sub_1ABF2FF5C();
    v33 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
LABEL_7:
    sub_1ABF31318();
    swift_bridgeObjectRelease();

LABEL_20:
    v67 = type metadata accessor for YahooHeadline();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v86, 1, 1, v67);
  }
  v35 = v18;
  v69 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v69(v18, v13, v30);
  if (qword_1EEC40ED0 != -1)
    swift_once();
  v36 = (void *)qword_1EEC41E78;
  v38 = v81;
  v37 = v82;
  v39 = (void *)sub_1ABF31780();
  v40 = objc_msgSend(v36, sel_dateFromString_, v39);

  v41 = v83;
  if (!v40)
  {
    v46 = v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v6, 1, 1, v83);
    goto LABEL_19;
  }
  v42 = v35;
  v43 = v80;
  sub_1ABF30724();

  v44 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v45 = v43;
  v35 = v42;
  v46 = MEMORY[0x1E0DEA968];
  v44(v6, v45, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v6, 0, 1, v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v41) == 1)
  {
LABEL_19:
    sub_1ABD184CC((uint64_t)v6, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v65 + 56) = v46;
    *(_QWORD *)(v65 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v65 + 32) = v38;
    *(_QWORD *)(v65 + 40) = v37;
    sub_1ABD19560();
    sub_1ABF2FF5C();
    v66 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v84 + 8))(v35, v85);
    goto LABEL_20;
  }
  v47 = v79;
  v44(v79, v6, v41);
  v48 = v84;
  v49 = v85;
  v50 = v77;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v77, v35, v85);
  if (v71)
    v51 = v70;
  else
    v51 = 0;
  v52 = 0xE000000000000000;
  if (v71)
    v52 = v71;
  v81 = v52;
  v82 = v51;
  v53 = *(void (**)(char *, uint64_t))(v48 + 8);
  v54 = v74;
  sub_1ABF2FF5C();
  v55 = v72;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v53(v35, v49);
  v56 = (int *)type metadata accessor for YahooHeadline();
  v57 = v86;
  v44(&v86[v56[8]], v47, v83);
  v69(v57, v50, v49);
  v58 = &v57[v56[5]];
  *(_QWORD *)v58 = v75;
  *((_QWORD *)v58 + 1) = v54;
  v59 = &v57[v56[6]];
  *(_QWORD *)v59 = v73;
  *((_QWORD *)v59 + 1) = v55;
  v60 = &v57[v56[7]];
  v61 = v81;
  *(_QWORD *)v60 = v82;
  *((_QWORD *)v60 + 1) = v61;
  v62 = &v57[v56[9]];
  v63 = v78;
  *(_QWORD *)v62 = v76;
  *((_QWORD *)v62 + 1) = v63;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v56 - 1) + 56))(v57, 0, 1, v56);
  return sub_1ABF2FF5C();
}

id sub_1ABD6AD20()
{
  id result;

  result = sub_1ABD6AD3C();
  qword_1EEC41E78 = (uint64_t)result;
  return result;
}

id sub_1ABD6AD3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v14;

  v0 = sub_1ABF30880();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - v5;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v8 = (void *)sub_1ABF31780();
  objc_msgSend(v7, sel_setDateFormat_, v8);

  sub_1ABF30928();
  v9 = sub_1ABF3094C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
  {
    v11 = (void *)sub_1ABF30934();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
  }
  objc_msgSend(v7, sel_setTimeZone_, v11);

  sub_1ABF3079C();
  v12 = (void *)sub_1ABF307E4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v7, sel_setLocale_, v12);

  return v7;
}

uint64_t sub_1ABD6AF0C()
{
  uint64_t v0;

  v0 = sub_1ABF302A4();
  __swift_allocate_value_buffer(v0, qword_1EEC41E80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC41E80);
  return sub_1ABD6AF54();
}

uint64_t sub_1ABD6AF54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  void (*v11)(char *, char *, uint64_t);
  uint64_t v13;

  v0 = sub_1ABF302A4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v13 - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  sub_1ABF30298();
  sub_1ABF30244();
  sub_1ABF30280();
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v9, v0);
  v11 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
  v11(v9, v7, v0);
  sub_1ABF30250();
  sub_1ABF30280();
  v10(v4, v0);
  v10(v9, v0);
  v11(v9, v7, v0);
  sub_1ABF3025C();
  sub_1ABF30280();
  v10(v4, v0);
  v10(v9, v0);
  v11(v9, v7, v0);
  sub_1ABF30268();
  sub_1ABF30280();
  v10(v7, v0);
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v0);
}

void sub_1ABD6B0EC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABD6B118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EEC41EA0);
  v1 = v0 + qword_1EEC41EA8;
  v2 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_1ABD6B174(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EEC41EA0);
  v2 = a1 + qword_1EEC41EA8;
  v3 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_1ABD6B1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABD6A134((uint64_t)sub_1ABD6B260, v4);
  return swift_release();
}

uint64_t sub_1ABD6B234()
{
  return type metadata accessor for YahooNewsOperation();
}

uint64_t sub_1ABD6B23C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABD6B260(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

unint64_t sub_1ABD6B298()
{
  unint64_t result;

  result = qword_1EEC41EC0;
  if (!qword_1EEC41EC0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43374, &type metadata for YahooNewsResponse);
    atomic_store(result, (unint64_t *)&qword_1EEC41EC0);
  }
  return result;
}

void sub_1ABD6B2DC(uint64_t a1)
{
  uint64_t v1;

  sub_1ABD6A364(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1ABD6B2E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ABD6B31C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YahooHeadline();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ABD6B360()
{
  unint64_t result;

  result = qword_1ED350010;
  if (!qword_1ED350010)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED350010);
  }
  return result;
}

uint64_t sub_1ABD6B3B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  v1 = v0 + OBJC_IVAR____TtC10StocksCore17UserLaunchHistory_startDate;
  v2 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABD6B418()
{
  return type metadata accessor for UserLaunchHistory();
}

uint64_t sub_1ABD6B420()
{
  return sub_1ABF30F88();
}

uint64_t sub_1ABD6B428()
{
  return sub_1ABF30F88();
}

uint64_t sub_1ABD6B430(uint64_t a1)
{
  uint64_t v2;

  sub_1ABD22B54();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABD6B46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1ABF30760();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t QuoteDetail.dayOpenPrice.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t QuoteDetail.dayLowPrice.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t QuoteDetail.dayHighPrice.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t QuoteDetail.yearLowPrice.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t QuoteDetail.yearHighPrice.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t QuoteDetail.dividendYield.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t QuoteDetail.volume.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t QuoteDetail.averageVolume.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t QuoteDetail.priceEarningsRatio.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t QuoteDetail.beta.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t QuoteDetail.earningsPerShare.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t QuoteDetail.earningsStartDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for QuoteDetail();
  return sub_1ABCF57B8(v1 + *(int *)(v3 + 60), a1, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t QuoteDetail.earningsEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for QuoteDetail();
  return sub_1ABCF57B8(v1 + *(int *)(v3 + 64), a1, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t QuoteDetail.currencyCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 68));
  sub_1ABF2FF5C();
  return v1;
}

uint64_t QuoteDetail.detailsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for QuoteDetail();
  return sub_1ABCF57B8(v1 + *(int *)(v3 + 72), a1, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t QuoteDetail.keyStatisticsURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for QuoteDetail();
  return sub_1ABCF57B8(v1 + *(int *)(v3 + 76), a1, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t QuoteDetail.marketTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for QuoteDetail();
  return sub_1ABCF57B8(v1 + *(int *)(v3 + 80), a1, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
}

uint64_t QuoteDetail.fundAssetClass.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 84));
  sub_1ABF2FF5C();
  return v1;
}

uint64_t QuoteDetail.fundCategory.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 88));
  sub_1ABF2FF5C();
  return v1;
}

uint64_t QuoteDetail.fundFocus.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 92));
  sub_1ABF2FF5C();
  return v1;
}

uint64_t QuoteDetail.fundNiche.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 96));
  sub_1ABF2FF5C();
  return v1;
}

uint64_t QuoteDetail.fundRegion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for QuoteDetail() + 100));
  sub_1ABF2FF5C();
  return v1;
}

uint64_t QuoteDetail.fundTopHoldings.getter()
{
  type metadata accessor for QuoteDetail();
  return sub_1ABF2FF5C();
}

uint64_t QuoteDetail.fundSectors.getter()
{
  type metadata accessor for QuoteDetail();
  return sub_1ABF2FF5C();
}

uint64_t QuoteDetail.dateLastRefreshed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for QuoteDetail() + 112);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t QuoteDetail.init(dayOpenPrice:dayLowPrice:dayHighPrice:yearLowPrice:yearHighPrice:dividendYield:volume:averageVolume:priceEarningsRatio:beta:earningsPerShare:earningsStartDate:earningsEndDate:currencyCode:detailsURL:keyStatisticsURL:marketTimeZone:fundAssetClass:fundCategory:fundFocus:fundNiche:fundRegion:fundTopHoldings:fundSectors:dateLastRefreshed:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int *v44;
  void (*v45)(uint64_t);
  _QWORD *v46;
  void (*v47)(uint64_t);
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;

  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11 & 1;
  *(_QWORD *)(a9 + 80) = a12;
  *(_BYTE *)(a9 + 88) = a13 & 1;
  *(_QWORD *)(a9 + 96) = a14;
  *(_BYTE *)(a9 + 104) = a15 & 1;
  *(_QWORD *)(a9 + 112) = a16;
  *(_BYTE *)(a9 + 120) = a17 & 1;
  *(_QWORD *)(a9 + 128) = a18;
  *(_BYTE *)(a9 + 136) = a19 & 1;
  *(_QWORD *)(a9 + 144) = a20;
  *(_BYTE *)(a9 + 152) = a21 & 1;
  *(_QWORD *)(a9 + 160) = a22;
  *(_BYTE *)(a9 + 168) = a23 & 1;
  v44 = (int *)type metadata accessor for QuoteDetail();
  v45 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABD6BB7C(a24, a9 + v44[15], (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1ABD6BB7C(a25, a9 + v44[16], (unint64_t *)&qword_1ED34EAB0, v45);
  v46 = (_QWORD *)(a9 + v44[17]);
  *v46 = a26;
  v46[1] = a27;
  v47 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1ABD6BB7C(a28, a9 + v44[18], (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1ABD6BB7C(a29, a9 + v44[19], (unint64_t *)&qword_1ED350380, v47);
  sub_1ABD6BB7C(a30, a9 + v44[20], &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  v48 = (_QWORD *)(a9 + v44[21]);
  *v48 = a31;
  v48[1] = a32;
  v49 = (_QWORD *)(a9 + v44[22]);
  *v49 = a33;
  v49[1] = a34;
  v50 = (_QWORD *)(a9 + v44[23]);
  *v50 = a35;
  v50[1] = a36;
  v51 = (_QWORD *)(a9 + v44[24]);
  *v51 = a37;
  v51[1] = a38;
  v52 = (_QWORD *)(a9 + v44[25]);
  *v52 = a39;
  v52[1] = a40;
  *(_QWORD *)(a9 + v44[26]) = a41;
  *(_QWORD *)(a9 + v44[27]) = a42;
  v53 = a9 + v44[28];
  v54 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v53, a43, v54);
}

uint64_t sub_1ABD6BB7C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1ABD00308(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1ABD6BBCC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABD6BC08 + 4 * byte_1ABF37410[a1]))(0x506E65704F796164, 0xEC00000065636972);
}

uint64_t sub_1ABD6BC08()
{
  return 0x7250776F4C796164;
}

uint64_t sub_1ABD6BC28()
{
  return 0x5068676948796164;
}

uint64_t sub_1ABD6BC3C()
{
  return 0x50776F4C72616579;
}

uint64_t sub_1ABD6BC50()
{
  return 0x6867694872616579;
}

uint64_t sub_1ABD6BC74()
{
  return 0x646E656469766964;
}

uint64_t sub_1ABD6BC98()
{
  return 0x656D756C6F76;
}

uint64_t sub_1ABD6BCAC()
{
  return 0x5665676172657661;
}

unint64_t sub_1ABD6BCD0()
{
  return 0xD000000000000012;
}

uint64_t sub_1ABD6BEBC()
{
  unsigned __int8 *v0;

  return sub_1ABD6BBCC(*v0);
}

uint64_t sub_1ABD6BEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABD715BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ABD6BEE8(_BYTE *a1@<X8>)
{
  *a1 = 25;
}

uint64_t sub_1ABD6BEF4()
{
  sub_1ABD6EE70();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD6BF1C()
{
  sub_1ABD6EE70();
  return sub_1ABF32398();
}

uint64_t QuoteDetail.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;
  char v15;
  uint64_t v16;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1ED34E298, (uint64_t (*)(void))sub_1ABD6EE70, (uint64_t)&type metadata for QuoteDetail.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD6EE70();
  sub_1ABF32368();
  LOBYTE(v16) = 0;
  sub_1ABF32158();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    sub_1ABF32158();
    LOBYTE(v16) = 2;
    sub_1ABF32158();
    LOBYTE(v16) = 3;
    sub_1ABF32158();
    LOBYTE(v16) = 4;
    sub_1ABF32158();
    LOBYTE(v16) = 5;
    sub_1ABF32158();
    LOBYTE(v16) = 6;
    sub_1ABF32170();
    LOBYTE(v16) = 7;
    sub_1ABF32170();
    LOBYTE(v16) = 8;
    sub_1ABF32158();
    LOBYTE(v16) = 9;
    sub_1ABF32158();
    LOBYTE(v16) = 10;
    sub_1ABF32158();
    v10 = (int *)type metadata accessor for QuoteDetail();
    LOBYTE(v16) = 11;
    sub_1ABF30760();
    sub_1ABCFE1EC(&qword_1ED34EAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1ABF3217C();
    LOBYTE(v16) = 12;
    sub_1ABF3217C();
    LOBYTE(v16) = 13;
    sub_1ABF32140();
    v14 = v3 + v10[18];
    LOBYTE(v16) = 14;
    v11 = sub_1ABF305D4();
    v13[1] = sub_1ABCFE1EC(&qword_1ED34EA80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    v14 = v11;
    sub_1ABF3217C();
    LOBYTE(v16) = 15;
    sub_1ABF3217C();
    v14 = v3 + v10[20];
    LOBYTE(v16) = 16;
    sub_1ABF3094C();
    sub_1ABCFE1EC(&qword_1ED34CCF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1488]);
    sub_1ABF3217C();
    LOBYTE(v16) = 17;
    sub_1ABF32140();
    LOBYTE(v16) = 18;
    sub_1ABF32140();
    LOBYTE(v16) = 19;
    sub_1ABF32140();
    LOBYTE(v16) = 20;
    sub_1ABF32140();
    LOBYTE(v16) = 21;
    sub_1ABF32140();
    v16 = *(_QWORD *)(v3 + v10[26]);
    v15 = 22;
    sub_1ABD12448(0, &qword_1ED34DEF8);
    sub_1ABD6EF3C(&qword_1ED34DF00, (uint64_t (*)(void))sub_1ABD6EEB4, MEMORY[0x1E0DEAF10]);
    sub_1ABF321D0();
    v16 = *(_QWORD *)(v3 + v10[27]);
    v15 = 23;
    sub_1ABD12448(0, &qword_1ED34DEE0);
    sub_1ABD6EFF4(&qword_1ED34DEE8, (uint64_t (*)(void))sub_1ABD6EEF8, MEMORY[0x1E0DEAF10]);
    sub_1ABF321D0();
    LOBYTE(v16) = 24;
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t QuoteDetail.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t *v40;
  char v41;
  uint64_t v42;
  uint64_t *v43;
  char v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  int *v76;
  uint64_t *v77;
  char v78;
  uint64_t v79;

  v68 = a2;
  v3 = sub_1ABF30760();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v5 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  v71 = v5;
  MEMORY[0x1E0C80A78](v3);
  v66 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v7);
  v67 = (uint64_t)&v65 - v8;
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v69 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v65 - v12;
  sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, v4);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v65 - v18;
  sub_1ABCF4DA8(0, &qword_1ED34E1E8, (uint64_t (*)(void))sub_1ABD6EE70, (uint64_t)&type metadata for QuoteDetail.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v73 = v20;
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v65 - v22;
  v76 = (int *)type metadata accessor for QuoteDetail();
  MEMORY[0x1E0C80A78](v76);
  v77 = (uint64_t *)((char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = a1[3];
  v75 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1ABD6EE70();
  v72 = v23;
  v26 = (uint64_t)v74;
  sub_1ABF3235C();
  if (v26)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  v74 = v13;
  v27 = v71;
  LOBYTE(v79) = 0;
  v28 = sub_1ABF320A4();
  v29 = v77;
  *v77 = v28;
  *((_BYTE *)v29 + 8) = v30 & 1;
  LOBYTE(v79) = 1;
  v29[2] = sub_1ABF320A4();
  *((_BYTE *)v29 + 24) = v31 & 1;
  LOBYTE(v79) = 2;
  v29[4] = sub_1ABF320A4();
  *((_BYTE *)v29 + 40) = v32 & 1;
  LOBYTE(v79) = 3;
  v29[6] = sub_1ABF320A4();
  *((_BYTE *)v29 + 56) = v33 & 1;
  LOBYTE(v79) = 4;
  v29[8] = sub_1ABF320A4();
  *((_BYTE *)v29 + 72) = v34 & 1;
  LOBYTE(v79) = 5;
  v29[10] = sub_1ABF320A4();
  *((_BYTE *)v29 + 88) = v35 & 1;
  LOBYTE(v79) = 6;
  v29[12] = sub_1ABF320BC();
  *((_BYTE *)v29 + 104) = v36 & 1;
  LOBYTE(v79) = 7;
  v29[14] = sub_1ABF320BC();
  *((_BYTE *)v29 + 120) = v37 & 1;
  LOBYTE(v79) = 8;
  v29[16] = sub_1ABF320A4();
  *((_BYTE *)v29 + 136) = v38 & 1;
  LOBYTE(v79) = 9;
  v39 = sub_1ABF320A4();
  v40 = v77;
  v77[18] = v39;
  *((_BYTE *)v40 + 152) = v41 & 1;
  LOBYTE(v79) = 10;
  v42 = sub_1ABF320A4();
  v43 = v77;
  v77[20] = v42;
  *((_BYTE *)v43 + 168) = v44 & 1;
  LOBYTE(v79) = 11;
  sub_1ABCFE1EC(&qword_1ED34CCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1ABF320C8();
  sub_1ABD6BB7C((uint64_t)v19, (uint64_t)v77 + v76[15], (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  LOBYTE(v79) = 12;
  sub_1ABF320C8();
  sub_1ABD6BB7C((uint64_t)v17, (uint64_t)v77 + v76[16], (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  LOBYTE(v79) = 13;
  v45 = sub_1ABF3208C();
  v46 = (uint64_t *)((char *)v77 + v76[17]);
  *v46 = v45;
  v46[1] = v47;
  sub_1ABF305D4();
  LOBYTE(v79) = 14;
  sub_1ABCFE1EC(&qword_1ED34EA90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  sub_1ABF320C8();
  sub_1ABD6BB7C((uint64_t)v74, (uint64_t)v77 + v76[18], (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  LOBYTE(v79) = 15;
  sub_1ABF320C8();
  sub_1ABD6BB7C(v69, (uint64_t)v77 + v76[19], (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1ABF3094C();
  LOBYTE(v79) = 16;
  sub_1ABCFE1EC(&qword_1ED34CCF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB14A0]);
  sub_1ABF320C8();
  sub_1ABD6BB7C(v67, (uint64_t)v77 + v76[20], &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  LOBYTE(v79) = 17;
  v48 = sub_1ABF3208C();
  v49 = (uint64_t *)((char *)v77 + v76[21]);
  *v49 = v48;
  v49[1] = v50;
  LOBYTE(v79) = 18;
  v51 = sub_1ABF3208C();
  v52 = (uint64_t *)((char *)v77 + v76[22]);
  *v52 = v51;
  v52[1] = v53;
  LOBYTE(v79) = 19;
  v54 = sub_1ABF3208C();
  v55 = (uint64_t *)((char *)v77 + v76[23]);
  *v55 = v54;
  v55[1] = v56;
  LOBYTE(v79) = 20;
  v57 = sub_1ABF3208C();
  v58 = (uint64_t *)((char *)v77 + v76[24]);
  *v58 = v57;
  v58[1] = v59;
  LOBYTE(v79) = 21;
  v60 = sub_1ABF3208C();
  v61 = (uint64_t *)((char *)v77 + v76[25]);
  *v61 = v60;
  v61[1] = v62;
  sub_1ABD12448(0, &qword_1ED34DEF8);
  v78 = 22;
  sub_1ABD6EF3C(&qword_1ED34DF08, (uint64_t (*)(void))sub_1ABD6EFB0, MEMORY[0x1E0DEAF40]);
  sub_1ABF32110();
  *(uint64_t *)((char *)v77 + v76[26]) = v79;
  sub_1ABD12448(0, &qword_1ED34DEE0);
  v78 = 23;
  sub_1ABD6EFF4(&qword_1ED34DEF0, (uint64_t (*)(void))sub_1ABD6F068, MEMORY[0x1E0DEAF40]);
  sub_1ABF32110();
  *(uint64_t *)((char *)v77 + v76[27]) = v79;
  LOBYTE(v79) = 24;
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v72, v73);
  v63 = (uint64_t)v77;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v77 + v76[28], v66, v70);
  sub_1ABD6F0AC(v63, v68);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  return sub_1ABD6F0F0(v63);
}

uint64_t sub_1ABD6D2E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return QuoteDetail.init(from:)(a1, a2);
}

uint64_t sub_1ABD6D2F4(_QWORD *a1)
{
  return QuoteDetail.encode(to:)(a1);
}

uint64_t sub_1ABD6D318()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x6C6F626D7973;
}

uint64_t sub_1ABD6D354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABD72104(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ABD6D378(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1ABD6D384()
{
  sub_1ABD6F12C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD6D3AC()
{
  sub_1ABD6F12C();
  return sub_1ABF32398();
}

uint64_t FundHolding.encode(to:)(_QWORD *a1)
{
  return sub_1ABD6D5E0(a1, &qword_1EEC41ED0, (uint64_t (*)(void))sub_1ABD6F12C, (uint64_t)&type metadata for FundHolding.CodingKeys);
}

uint64_t FundHolding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABD6D740(a1, &qword_1EEC41EE0, (uint64_t (*)(void))sub_1ABD6F12C, (uint64_t)&type metadata for FundHolding.CodingKeys, a2);
}

uint64_t sub_1ABD6D430@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FundHolding.init(from:)(a1, a2);
}

uint64_t sub_1ABD6D444(_QWORD *a1)
{
  return FundHolding.encode(to:)(a1);
}

uint64_t FundSector.sector.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

double FundSector.percentageOfAssets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

BOOL _s10StocksCore11FundHoldingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v5;
  _BOOL8 result;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_1ABF3223C();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

BOOL sub_1ABD6D4EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1ABD6D504()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x726F74636573;
}

uint64_t sub_1ABD6D540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABD721E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABD6D564()
{
  sub_1ABD6F170();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD6D58C()
{
  sub_1ABD6F170();
  return sub_1ABF32398();
}

uint64_t FundSector.encode(to:)(_QWORD *a1)
{
  return sub_1ABD6D5E0(a1, &qword_1EEC41EE8, (uint64_t (*)(void))sub_1ABD6F170, (uint64_t)&type metadata for FundSector.CodingKeys);
}

uint64_t sub_1ABD6D5E0(_QWORD *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  char v16;
  char v17;

  sub_1ABCF4DA8(0, a2, a3, a4, MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v15 - v10;
  v12 = *v4;
  v15[0] = v4[1];
  v15[1] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1ABF32368();
  v17 = 0;
  v13 = v15[2];
  sub_1ABF32194();
  if (!v13)
  {
    v16 = 1;
    sub_1ABF321AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t FundSector.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABD6D740(a1, &qword_1EEC41EF8, (uint64_t (*)(void))sub_1ABD6F170, (uint64_t)&type metadata for FundSector.CodingKeys, a2);
}

uint64_t sub_1ABD6D740@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  char v25;

  v22 = a5;
  sub_1ABCF4DA8(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v23 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1ABF3235C();
  if (v5)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12 = v9;
  v13 = v22;
  v14 = v23;
  v25 = 0;
  v15 = sub_1ABF320E0();
  v17 = v16;
  v24 = 1;
  sub_1ABF2FF5C();
  sub_1ABF320F8();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v14);
  *v13 = v15;
  v13[1] = v17;
  v13[2] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD6D8E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FundSector.init(from:)(a1, a2);
}

uint64_t sub_1ABD6D8F4(_QWORD *a1)
{
  return FundSector.encode(to:)(a1);
}

uint64_t _s10StocksCore11QuoteDetailV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  void (*v73)(uint64_t);
  uint64_t *v74;
  unint64_t *v75;
  void (*v76)(uint64_t);
  _BYTE *v77;
  uint64_t v78;
  void (*v79)(uint64_t);
  int *v80;
  void (*v81)(uint64_t);
  _BYTE *v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  void (*v85)(uint64_t);
  void (*v86)(uint64_t);
  char v87;
  uint64_t v89;
  void (*v90)(uint64_t);
  char v91;
  void (*v92)(_BYTE *, uint64_t);
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  char v98;
  int *v99;
  void (*v100)(uint64_t);
  _BYTE *v101;
  _BYTE *v102;
  _BYTE *v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  void (*v106)(uint64_t);
  uint64_t v107;
  _BYTE *v108;
  uint64_t v109;
  void (*v110)(uint64_t);
  _BYTE *v111;
  char v112;
  void (*v113)(_BYTE *, uint64_t);
  int *v114;
  void (*v115)(uint64_t);
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  uint64_t v119;
  void (*v120)(uint64_t);
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  void (*v124)(uint64_t);
  _BYTE *v125;
  char v126;
  void (*v127)(_BYTE *, uint64_t);
  int *v128;
  void (*v129)(uint64_t);
  _BYTE *v130;
  _BYTE *v131;
  _BYTE *v132;
  uint64_t v133;
  unsigned int (*v134)(uint64_t, uint64_t, uint64_t);
  void (*v135)(uint64_t);
  uint64_t v136;
  _BYTE *v137;
  uint64_t v138;
  void (*v139)(uint64_t);
  _BYTE *v140;
  char v141;
  void (*v142)(_BYTE *, uint64_t);
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  char v172;
  _BYTE v173[12];
  int v174;
  unsigned int (*v175)(uint64_t, uint64_t, uint64_t);
  int *v176;
  uint64_t v177;
  uint64_t v178;
  _BYTE *v179;
  _BYTE *v180;
  uint64_t v181;
  _BYTE *v182;
  uint64_t v183;
  _BYTE *v184;
  _BYTE *v185;
  _BYTE *v186;
  _BYTE *v187;
  uint64_t v188;
  _BYTE *v189;
  _BYTE *v190;
  _BYTE *v191;
  _BYTE *v192;
  _BYTE *v193;
  uint64_t v194;
  uint64_t v195;
  _BYTE *v196;
  _BYTE *v197;
  _BYTE *v198;
  uint64_t v199;
  _BYTE *v200;
  uint64_t v201;

  v0 = sub_1ABF3094C();
  v1 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
  v188 = v0;
  v183 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v180 = &v173[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABD722CC(0, (unint64_t *)&unk_1ED346660, &qword_1ED34CD08, v1);
  v181 = v3;
  MEMORY[0x1E0C80A78](v3);
  v187 = &v173[-v4];
  sub_1ABD00308(0, &qword_1ED34CD08, v1);
  v6 = MEMORY[0x1E0C80A78](v5);
  v182 = &v173[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x1E0C80A78](v6);
  v184 = &v173[-v9];
  MEMORY[0x1E0C80A78](v8);
  v185 = &v173[-v10];
  v11 = sub_1ABF305D4();
  v12 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v199 = v11;
  v195 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v186 = &v173[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABD722CC(0, (unint64_t *)&qword_1ED34EA98, (unint64_t *)&qword_1ED350380, v12);
  v194 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v192 = &v173[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v198 = &v173[-v17];
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v12);
  v19 = MEMORY[0x1E0C80A78](v18);
  v189 = &v173[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x1E0C80A78](v19);
  v190 = &v173[-v22];
  v23 = MEMORY[0x1E0C80A78](v21);
  v191 = &v173[-v24];
  v25 = MEMORY[0x1E0C80A78](v23);
  v193 = &v173[-v26];
  v27 = MEMORY[0x1E0C80A78](v25);
  v196 = &v173[-v28];
  MEMORY[0x1E0C80A78](v27);
  v197 = &v173[-v29];
  v30 = sub_1ABF30760();
  v31 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v201 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = &v173[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABD722CC(0, (unint64_t *)&qword_1ED34CCD0, (unint64_t *)&qword_1ED34EAB0, v31);
  v35 = v34;
  v36 = MEMORY[0x1E0C80A78](v34);
  v200 = &v173[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v36);
  v39 = &v173[-v38];
  sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, v31);
  v41 = MEMORY[0x1E0C80A78](v40);
  v43 = &v173[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = MEMORY[0x1E0C80A78](v41);
  v46 = &v173[-v45];
  v47 = MEMORY[0x1E0C80A78](v44);
  v49 = &v173[-v48];
  v50 = MEMORY[0x1E0C80A78](v47);
  v52 = &v173[-v51];
  v53 = MEMORY[0x1E0C80A78](v50);
  v55 = &v173[-v54];
  MEMORY[0x1E0C80A78](v53);
  v59 = &v173[-v58];
  v60 = *(_BYTE *)(v56 + 8);
  if ((*(_BYTE *)(v57 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 8))
      goto LABEL_81;
  }
  else
  {
    if (*(double *)v57 != *(double *)v56)
      v60 = 1;
    if ((v60 & 1) != 0)
      goto LABEL_81;
  }
  v61 = *(_BYTE *)(v56 + 24);
  if ((*(_BYTE *)(v57 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 24))
      goto LABEL_81;
  }
  else
  {
    if (*(double *)(v57 + 16) != *(double *)(v56 + 16))
      v61 = 1;
    if ((v61 & 1) != 0)
      goto LABEL_81;
  }
  v62 = *(_BYTE *)(v56 + 40);
  if ((*(_BYTE *)(v57 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 40))
      goto LABEL_81;
  }
  else
  {
    if (*(double *)(v57 + 32) != *(double *)(v56 + 32))
      v62 = 1;
    if ((v62 & 1) != 0)
      goto LABEL_81;
  }
  v63 = *(_BYTE *)(v56 + 56);
  if ((*(_BYTE *)(v57 + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 56))
      goto LABEL_81;
  }
  else
  {
    if (*(double *)(v57 + 48) != *(double *)(v56 + 48))
      v63 = 1;
    if ((v63 & 1) != 0)
      goto LABEL_81;
  }
  v64 = *(_BYTE *)(v56 + 72);
  if ((*(_BYTE *)(v57 + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 72))
      goto LABEL_81;
  }
  else
  {
    if (*(double *)(v57 + 64) != *(double *)(v56 + 64))
      v64 = 1;
    if ((v64 & 1) != 0)
      goto LABEL_81;
  }
  v65 = *(_BYTE *)(v56 + 88);
  if ((*(_BYTE *)(v57 + 88) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 88))
      goto LABEL_81;
  }
  else
  {
    if (*(double *)(v57 + 80) != *(double *)(v56 + 80))
      v65 = 1;
    if ((v65 & 1) != 0)
      goto LABEL_81;
  }
  v66 = *(_BYTE *)(v56 + 104);
  if ((*(_BYTE *)(v57 + 104) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 104))
      goto LABEL_81;
  }
  else
  {
    if (*(_QWORD *)(v57 + 96) != *(_QWORD *)(v56 + 96))
      v66 = 1;
    if ((v66 & 1) != 0)
      goto LABEL_81;
  }
  v67 = *(_BYTE *)(v56 + 120);
  if ((*(_BYTE *)(v57 + 120) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 120))
      goto LABEL_81;
  }
  else
  {
    if (*(_QWORD *)(v57 + 112) != *(_QWORD *)(v56 + 112))
      v67 = 1;
    if ((v67 & 1) != 0)
      goto LABEL_81;
  }
  v68 = *(_BYTE *)(v56 + 136);
  if ((*(_BYTE *)(v57 + 136) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 136))
      goto LABEL_81;
  }
  else
  {
    if (*(double *)(v57 + 128) != *(double *)(v56 + 128))
      v68 = 1;
    if ((v68 & 1) != 0)
      goto LABEL_81;
  }
  v69 = *(_BYTE *)(v56 + 152);
  if ((*(_BYTE *)(v57 + 152) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 152))
      goto LABEL_81;
  }
  else
  {
    if (*(double *)(v57 + 144) != *(double *)(v56 + 144))
      v69 = 1;
    if ((v69 & 1) != 0)
      goto LABEL_81;
  }
  v70 = *(_BYTE *)(v56 + 168);
  if ((*(_BYTE *)(v57 + 168) & 1) != 0)
  {
    if (!*(_BYTE *)(v56 + 168))
      goto LABEL_81;
  }
  else
  {
    if (*(double *)(v57 + 160) != *(double *)(v56 + 160))
      v70 = 1;
    if ((v70 & 1) != 0)
      goto LABEL_81;
  }
  v177 = v57;
  v178 = v56;
  v176 = (int *)type metadata accessor for QuoteDetail();
  sub_1ABCF57B8(v177 + v176[15], (uint64_t)v59, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1ABCF57B8(v178 + v176[15], (uint64_t)v55, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v179 = &v39[*(int *)(v35 + 48)];
  sub_1ABCF57B8((uint64_t)v59, (uint64_t)v39, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1ABCF57B8((uint64_t)v55, (uint64_t)v179, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v175 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48);
  if (v175((uint64_t)v39, 1, v30) == 1)
  {
    v71 = (uint64_t)v55;
    v72 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1ABD18510(v71, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1ABD18510((uint64_t)v59, (unint64_t *)&qword_1ED34EAB0, v72);
    if (v175((uint64_t)v179, 1, v30) == 1)
    {
      sub_1ABD18510((uint64_t)v39, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      goto LABEL_74;
    }
LABEL_72:
    v74 = &qword_1ED34CCD0;
    v75 = (unint64_t *)&qword_1ED34EAB0;
    v76 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    v77 = v39;
LABEL_80:
    sub_1ABD7232C((uint64_t)v77, (unint64_t *)v74, v75, v76);
    goto LABEL_81;
  }
  sub_1ABCF57B8((uint64_t)v39, (uint64_t)v52, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v175((uint64_t)v179, 1, v30) == 1)
  {
    v73 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1ABD18510((uint64_t)v55, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1ABD18510((uint64_t)v59, (unint64_t *)&qword_1ED34EAB0, v73);
    (*(void (**)(_BYTE *, uint64_t))(v201 + 8))(v52, v30);
    goto LABEL_72;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v201 + 32))(v33, v179, v30);
  sub_1ABCFE1EC(&qword_1ED34CCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v174 = sub_1ABF31720();
  v179 = *(_BYTE **)(v201 + 8);
  ((void (*)(_BYTE *, uint64_t))v179)(v33, v30);
  v78 = (uint64_t)v55;
  v79 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABD18510(v78, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1ABD18510((uint64_t)v59, (unint64_t *)&qword_1ED34EAB0, v79);
  ((void (*)(_BYTE *, uint64_t))v179)(v52, v30);
  sub_1ABD18510((uint64_t)v39, (unint64_t *)&qword_1ED34EAB0, v79);
  if ((v174 & 1) == 0)
    goto LABEL_81;
LABEL_74:
  v80 = v176;
  v81 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCF57B8(v177 + v176[16], (uint64_t)v49, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1ABCF57B8(v178 + v80[16], (uint64_t)v46, (unint64_t *)&qword_1ED34EAB0, v81);
  v82 = v200;
  v83 = (uint64_t)&v200[*(int *)(v35 + 48)];
  sub_1ABCF57B8((uint64_t)v49, (uint64_t)v200, (unint64_t *)&qword_1ED34EAB0, v81);
  sub_1ABCF57B8((uint64_t)v46, v83, (unint64_t *)&qword_1ED34EAB0, v81);
  v84 = v175;
  if (v175((uint64_t)v82, 1, v30) == 1)
  {
    v85 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1ABD18510((uint64_t)v46, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1ABD18510((uint64_t)v49, (unint64_t *)&qword_1ED34EAB0, v85);
    if (v84(v83, 1, v30) == 1)
    {
      sub_1ABD18510((uint64_t)v82, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      goto LABEL_84;
    }
    goto LABEL_79;
  }
  sub_1ABCF57B8((uint64_t)v82, (uint64_t)v43, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v84(v83, 1, v30) == 1)
  {
    v86 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1ABD18510((uint64_t)v46, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1ABD18510((uint64_t)v49, (unint64_t *)&qword_1ED34EAB0, v86);
    (*(void (**)(_BYTE *, uint64_t))(v201 + 8))(v43, v30);
LABEL_79:
    v74 = &qword_1ED34CCD0;
    v75 = (unint64_t *)&qword_1ED34EAB0;
    v76 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    v77 = v82;
    goto LABEL_80;
  }
  v89 = v201;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v201 + 32))(v33, v83, v30);
  v90 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCFE1EC(&qword_1ED34CCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v91 = sub_1ABF31720();
  v92 = *(void (**)(_BYTE *, uint64_t))(v89 + 8);
  v92(v33, v30);
  sub_1ABD18510((uint64_t)v46, (unint64_t *)&qword_1ED34EAB0, v90);
  sub_1ABD18510((uint64_t)v49, (unint64_t *)&qword_1ED34EAB0, v90);
  v92(v43, v30);
  sub_1ABD18510((uint64_t)v82, (unint64_t *)&qword_1ED34EAB0, v90);
  if ((v91 & 1) == 0)
    goto LABEL_81;
LABEL_84:
  v93 = v176[17];
  v94 = (_QWORD *)(v177 + v93);
  v95 = *(_QWORD *)(v177 + v93 + 8);
  v96 = (_QWORD *)(v178 + v93);
  v97 = v96[1];
  if (v95)
  {
    if (!v97)
      goto LABEL_81;
    if (*v94 != *v96 || v95 != v97)
    {
      v98 = sub_1ABF3223C();
      v87 = 0;
      if ((v98 & 1) == 0)
        return v87 & 1;
    }
  }
  else if (v97)
  {
    goto LABEL_81;
  }
  v99 = v176;
  v100 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v101 = v197;
  sub_1ABCF57B8(v177 + v176[18], (uint64_t)v197, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v102 = v196;
  sub_1ABCF57B8(v178 + v99[18], (uint64_t)v196, (unint64_t *)&qword_1ED350380, v100);
  v103 = v198;
  v104 = (uint64_t)&v198[*(int *)(v194 + 48)];
  sub_1ABCF57B8((uint64_t)v101, (uint64_t)v198, (unint64_t *)&qword_1ED350380, v100);
  sub_1ABCF57B8((uint64_t)v102, v104, (unint64_t *)&qword_1ED350380, v100);
  v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v195 + 48);
  if (v105((uint64_t)v103, 1, v199) == 1)
  {
    sub_1ABD18510((uint64_t)v196, (unint64_t *)&qword_1ED350380, v100);
    sub_1ABD18510((uint64_t)v197, (unint64_t *)&qword_1ED350380, v100);
    if (v105(v104, 1, v199) == 1)
    {
      sub_1ABD18510((uint64_t)v198, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      goto LABEL_98;
    }
    goto LABEL_96;
  }
  sub_1ABCF57B8((uint64_t)v198, (uint64_t)v193, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v105(v104, 1, v199) == 1)
  {
    v106 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1ABD18510((uint64_t)v196, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1ABD18510((uint64_t)v197, (unint64_t *)&qword_1ED350380, v106);
    (*(void (**)(_BYTE *, uint64_t))(v195 + 8))(v193, v199);
LABEL_96:
    v74 = &qword_1ED34EA98;
    v75 = (unint64_t *)&qword_1ED350380;
    v76 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v77 = v198;
    goto LABEL_80;
  }
  v107 = v195;
  v108 = v186;
  v109 = v199;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v195 + 32))(v186, v104, v199);
  v110 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1ABCFE1EC(&qword_1ED34EA88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v111 = v193;
  v112 = sub_1ABF31720();
  v113 = *(void (**)(_BYTE *, uint64_t))(v107 + 8);
  v113(v108, v109);
  sub_1ABD18510((uint64_t)v196, (unint64_t *)&qword_1ED350380, v110);
  sub_1ABD18510((uint64_t)v197, (unint64_t *)&qword_1ED350380, v110);
  v113(v111, v109);
  sub_1ABD18510((uint64_t)v198, (unint64_t *)&qword_1ED350380, v110);
  if ((v112 & 1) == 0)
    goto LABEL_81;
LABEL_98:
  v114 = v176;
  v115 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v116 = v191;
  sub_1ABCF57B8(v177 + v176[19], (uint64_t)v191, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v117 = v190;
  sub_1ABCF57B8(v178 + v114[19], (uint64_t)v190, (unint64_t *)&qword_1ED350380, v115);
  v118 = v192;
  v119 = (uint64_t)&v192[*(int *)(v194 + 48)];
  sub_1ABCF57B8((uint64_t)v116, (uint64_t)v192, (unint64_t *)&qword_1ED350380, v115);
  sub_1ABCF57B8((uint64_t)v117, v119, (unint64_t *)&qword_1ED350380, v115);
  if (v105((uint64_t)v118, 1, v199) == 1)
  {
    sub_1ABD18510((uint64_t)v190, (unint64_t *)&qword_1ED350380, v115);
    sub_1ABD18510((uint64_t)v191, (unint64_t *)&qword_1ED350380, v115);
    if (v105(v119, 1, v199) == 1)
    {
      sub_1ABD18510((uint64_t)v192, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      goto LABEL_105;
    }
    goto LABEL_103;
  }
  sub_1ABCF57B8((uint64_t)v192, (uint64_t)v189, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v105(v119, 1, v199) == 1)
  {
    v120 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1ABD18510((uint64_t)v190, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1ABD18510((uint64_t)v191, (unint64_t *)&qword_1ED350380, v120);
    (*(void (**)(_BYTE *, uint64_t))(v195 + 8))(v189, v199);
LABEL_103:
    v74 = &qword_1ED34EA98;
    v75 = (unint64_t *)&qword_1ED350380;
    v76 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v77 = v192;
    goto LABEL_80;
  }
  v121 = v195;
  v122 = v186;
  v123 = v199;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v195 + 32))(v186, v119, v199);
  v124 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1ABCFE1EC(&qword_1ED34EA88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v125 = v189;
  v126 = sub_1ABF31720();
  v127 = *(void (**)(_BYTE *, uint64_t))(v121 + 8);
  v127(v122, v123);
  sub_1ABD18510((uint64_t)v190, (unint64_t *)&qword_1ED350380, v124);
  sub_1ABD18510((uint64_t)v191, (unint64_t *)&qword_1ED350380, v124);
  v127(v125, v123);
  sub_1ABD18510((uint64_t)v192, (unint64_t *)&qword_1ED350380, v124);
  if ((v126 & 1) == 0)
    goto LABEL_81;
LABEL_105:
  v128 = v176;
  v129 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
  v130 = v185;
  sub_1ABCF57B8(v177 + v176[20], (uint64_t)v185, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  v131 = v184;
  sub_1ABCF57B8(v178 + v128[20], (uint64_t)v184, &qword_1ED34CD08, v129);
  v132 = v187;
  v133 = (uint64_t)&v187[*(int *)(v181 + 48)];
  sub_1ABCF57B8((uint64_t)v130, (uint64_t)v187, &qword_1ED34CD08, v129);
  sub_1ABCF57B8((uint64_t)v131, v133, &qword_1ED34CD08, v129);
  v134 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v183 + 48);
  if (v134((uint64_t)v132, 1, v188) == 1)
  {
    sub_1ABD18510((uint64_t)v184, &qword_1ED34CD08, v129);
    sub_1ABD18510((uint64_t)v185, &qword_1ED34CD08, v129);
    if (v134(v133, 1, v188) == 1)
    {
      sub_1ABD18510((uint64_t)v187, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
      goto LABEL_112;
    }
    goto LABEL_110;
  }
  sub_1ABCF57B8((uint64_t)v187, (uint64_t)v182, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  if (v134(v133, 1, v188) == 1)
  {
    v135 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
    sub_1ABD18510((uint64_t)v184, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    sub_1ABD18510((uint64_t)v185, &qword_1ED34CD08, v135);
    (*(void (**)(_BYTE *, uint64_t))(v183 + 8))(v182, v188);
LABEL_110:
    v74 = (uint64_t *)&unk_1ED346660;
    v75 = &qword_1ED34CD08;
    v76 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
    v77 = v187;
    goto LABEL_80;
  }
  v136 = v183;
  v137 = v180;
  v138 = v188;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v183 + 32))(v180, v133, v188);
  v139 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
  sub_1ABCFE1EC(&qword_1EEC41F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1498]);
  v140 = v182;
  v141 = sub_1ABF31720();
  v142 = *(void (**)(_BYTE *, uint64_t))(v136 + 8);
  v142(v137, v138);
  sub_1ABD18510((uint64_t)v184, &qword_1ED34CD08, v139);
  sub_1ABD18510((uint64_t)v185, &qword_1ED34CD08, v139);
  v142(v140, v138);
  sub_1ABD18510((uint64_t)v187, &qword_1ED34CD08, v139);
  if ((v141 & 1) == 0)
    goto LABEL_81;
LABEL_112:
  v143 = v176[21];
  v144 = (_QWORD *)(v177 + v143);
  v145 = *(_QWORD *)(v177 + v143 + 8);
  v146 = (_QWORD *)(v178 + v143);
  v147 = v146[1];
  if (v145)
  {
    if (!v147)
      goto LABEL_81;
    if (*v144 != *v146 || v145 != v147)
    {
      v148 = sub_1ABF3223C();
      v87 = 0;
      if ((v148 & 1) == 0)
        return v87 & 1;
    }
  }
  else if (v147)
  {
    goto LABEL_81;
  }
  v149 = v176[22];
  v150 = (_QWORD *)(v177 + v149);
  v151 = *(_QWORD *)(v177 + v149 + 8);
  v152 = (_QWORD *)(v178 + v149);
  v153 = v152[1];
  if (v151)
  {
    if (!v153)
      goto LABEL_81;
    if (*v150 != *v152 || v151 != v153)
    {
      v154 = sub_1ABF3223C();
      v87 = 0;
      if ((v154 & 1) == 0)
        return v87 & 1;
    }
  }
  else if (v153)
  {
    goto LABEL_81;
  }
  v155 = v176[23];
  v156 = (_QWORD *)(v177 + v155);
  v157 = *(_QWORD *)(v177 + v155 + 8);
  v158 = (_QWORD *)(v178 + v155);
  v159 = v158[1];
  if (v157)
  {
    if (!v159)
      goto LABEL_81;
    if (*v156 != *v158 || v157 != v159)
    {
      v160 = sub_1ABF3223C();
      v87 = 0;
      if ((v160 & 1) == 0)
        return v87 & 1;
    }
  }
  else if (v159)
  {
    goto LABEL_81;
  }
  v161 = v176[24];
  v162 = (_QWORD *)(v177 + v161);
  v163 = *(_QWORD *)(v177 + v161 + 8);
  v164 = (_QWORD *)(v178 + v161);
  v165 = v164[1];
  if (v163)
  {
    if (!v165)
      goto LABEL_81;
    if (*v162 != *v164 || v163 != v165)
    {
      v166 = sub_1ABF3223C();
      v87 = 0;
      if ((v166 & 1) == 0)
        return v87 & 1;
    }
  }
  else if (v165)
  {
    goto LABEL_81;
  }
  v167 = v176[25];
  v168 = (_QWORD *)(v177 + v167);
  v169 = *(_QWORD *)(v177 + v167 + 8);
  v170 = (_QWORD *)(v178 + v167);
  v171 = v170[1];
  if (!v169)
  {
    if (!v171)
      goto LABEL_147;
LABEL_81:
    v87 = 0;
    return v87 & 1;
  }
  if (!v171)
    goto LABEL_81;
  if (*v168 == *v170 && v169 == v171 || (v172 = sub_1ABF3223C(), v87 = 0, (v172 & 1) != 0))
  {
LABEL_147:
    if ((sub_1ABDE0FBC(*(_QWORD *)(v177 + v176[26]), *(_QWORD *)(v178 + v176[26])) & 1) != 0
      && (sub_1ABDE0FBC(*(_QWORD *)(v177 + v176[27]), *(_QWORD *)(v178 + v176[27])) & 1) != 0)
    {
      v87 = sub_1ABF30718();
      return v87 & 1;
    }
    goto LABEL_81;
  }
  return v87 & 1;
}

unint64_t sub_1ABD6EE70()
{
  unint64_t result;

  result = qword_1ED34CD58;
  if (!qword_1ED34CD58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37984, &type metadata for QuoteDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CD58);
  }
  return result;
}

unint64_t sub_1ABD6EEB4()
{
  unint64_t result;

  result = qword_1ED34CD48;
  if (!qword_1ED34CD48)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for FundHolding, &type metadata for FundHolding);
    atomic_store(result, (unint64_t *)&qword_1ED34CD48);
  }
  return result;
}

unint64_t sub_1ABD6EEF8()
{
  unint64_t result;

  result = qword_1ED34CD38;
  if (!qword_1ED34CD38)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for FundSector, &type metadata for FundSector);
    atomic_store(result, (unint64_t *)&qword_1ED34CD38);
  }
  return result;
}

uint64_t sub_1ABD6EF3C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD12448(255, &qword_1ED34DEF8);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABD6EFB0()
{
  unint64_t result;

  result = qword_1ED34CD50;
  if (!qword_1ED34CD50)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for FundHolding, &type metadata for FundHolding);
    atomic_store(result, (unint64_t *)&qword_1ED34CD50);
  }
  return result;
}

uint64_t sub_1ABD6EFF4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD12448(255, &qword_1ED34DEE0);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABD6F068()
{
  unint64_t result;

  result = qword_1ED34CD40;
  if (!qword_1ED34CD40)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for FundSector, &type metadata for FundSector);
    atomic_store(result, (unint64_t *)&qword_1ED34CD40);
  }
  return result;
}

uint64_t sub_1ABD6F0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD6F0F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1ABD6F12C()
{
  unint64_t result;

  result = qword_1EEC41ED8;
  if (!qword_1EEC41ED8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37934, &type metadata for FundHolding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41ED8);
  }
  return result;
}

unint64_t sub_1ABD6F170()
{
  unint64_t result;

  result = qword_1EEC41EF0;
  if (!qword_1EEC41EF0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF378E4, &type metadata for FundSector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41EF0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for QuoteDetail(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 48) = a2[6];
    v7 = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    *(_QWORD *)(a1 + 128) = a2[16];
    v8 = a2[18];
    *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
    *(_QWORD *)(a1 + 144) = v8;
    v9 = a2[20];
    *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
    *(_QWORD *)(a1 + 160) = v9;
    v10 = a3[15];
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = sub_1ABF30760();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v18 = a3[16];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v69 = v14;
    if (v15((char *)a2 + v18, 1, v13))
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v20, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
    }
    v22 = a3[17];
    v23 = a3[18];
    v24 = (_QWORD *)((char *)v4 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = (char *)v4 + v23;
    v28 = (char *)a2 + v23;
    v29 = sub_1ABF305D4();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    sub_1ABF2FF5C();
    if (v31(v28, 1, v29))
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v33 = a3[19];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    if (v31((char *)a2 + v33, 1, v29))
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v34, v35, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v34, 0, 1, v29);
    }
    v37 = a3[20];
    v38 = (char *)v4 + v37;
    v39 = (char *)a2 + v37;
    v40 = sub_1ABF3094C();
    v41 = *(_QWORD *)(v40 - 8);
    v70 = v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      sub_1ABD00308(0, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    v43 = a3[21];
    v44 = a3[22];
    v45 = (_QWORD *)((char *)v4 + v43);
    v46 = (uint64_t *)((char *)a2 + v43);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    v48 = (_QWORD *)((char *)v4 + v44);
    v49 = (uint64_t *)((char *)a2 + v44);
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    v51 = a3[23];
    v52 = a3[24];
    v53 = (_QWORD *)((char *)v4 + v51);
    v54 = (uint64_t *)((char *)a2 + v51);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    v56 = (_QWORD *)((char *)v4 + v52);
    v57 = (uint64_t *)((char *)a2 + v52);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    v59 = a3[25];
    v60 = a3[26];
    v61 = (_QWORD *)((char *)v4 + v59);
    v62 = (uint64_t *)((char *)a2 + v59);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    *(_QWORD *)((char *)v4 + v60) = *(uint64_t *)((char *)a2 + v60);
    v64 = a3[28];
    *(_QWORD *)((char *)v4 + a3[27]) = *(uint64_t *)((char *)a2 + a3[27]);
    v65 = (char *)v4 + v64;
    v66 = (uint64_t)a2 + v64;
    v67 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v67(v65, v66, v70);
  }
  return v4;
}

uint64_t destroy for QuoteDetail(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1 + a2[15];
  v5 = sub_1ABF30760();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[16];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  v9 = a1 + a2[18];
  v10 = sub_1ABF305D4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v13 = a1 + a2[19];
  if (!v12(v13, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
  v14 = a1 + a2[20];
  v15 = sub_1ABF3094C();
  v16 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1 + a2[28], v5);
}

uint64_t initializeWithCopy for QuoteDetail(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v7 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v7;
  v8 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v8;
  v9 = a3[15];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_1ABF30760();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = a3[16];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v67 = v13;
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v17, v18, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  v20 = a3[17];
  v21 = a3[18];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (void *)(a1 + v21);
  v26 = (const void *)(a2 + v21);
  v27 = sub_1ABF305D4();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  sub_1ABF2FF5C();
  if (v29(v26, 1, v27))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v31 = a3[19];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  if (v29((const void *)(a2 + v31), 1, v27))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v32, v33, v27);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
  }
  v35 = a3[20];
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  v38 = sub_1ABF3094C();
  v39 = *(_QWORD *)(v38 - 8);
  v68 = v12;
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    sub_1ABD00308(0, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v36, v37, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  v41 = a3[21];
  v42 = a3[22];
  v43 = (_QWORD *)(a1 + v41);
  v44 = (_QWORD *)(a2 + v41);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = (_QWORD *)(a1 + v42);
  v47 = (_QWORD *)(a2 + v42);
  v48 = v47[1];
  *v46 = *v47;
  v46[1] = v48;
  v49 = a3[23];
  v50 = a3[24];
  v51 = (_QWORD *)(a1 + v49);
  v52 = (_QWORD *)(a2 + v49);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  v54 = (_QWORD *)(a1 + v50);
  v55 = (_QWORD *)(a2 + v50);
  v56 = v55[1];
  *v54 = *v55;
  v54[1] = v56;
  v57 = a3[25];
  v58 = a3[26];
  v59 = (_QWORD *)(a1 + v57);
  v60 = (_QWORD *)(a2 + v57);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  *(_QWORD *)(a1 + v58) = *(_QWORD *)(a2 + v58);
  v62 = a3[28];
  *(_QWORD *)(a1 + a3[27]) = *(_QWORD *)(a2 + a3[27]);
  v63 = a1 + v62;
  v64 = a2 + v62;
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v65(v63, v64, v68);
  return a1;
}

uint64_t assignWithCopy for QuoteDetail(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v75;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  v9 = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  v10 = a2[8];
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 64) = v10;
  v11 = a2[10];
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  v12 = a2[12];
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  *(_QWORD *)(a1 + 96) = v12;
  v13 = a2[14];
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_QWORD *)(a1 + 112) = v13;
  v14 = a2[16];
  *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
  *(_QWORD *)(a1 + 128) = v14;
  v15 = a2[18];
  *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
  *(_QWORD *)(a1 + 144) = v15;
  v16 = a2[20];
  *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
  *(_QWORD *)(a1 + 160) = v16;
  v17 = a3[15];
  v18 = (void *)(a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = sub_1ABF30760();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  v26 = a3[16];
  v27 = (void *)(a1 + v26);
  v28 = (char *)a2 + v26;
  v29 = v22((void *)(a1 + v26), 1, v20);
  v30 = v22(v28, 1, v20);
  v75 = v21;
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v27, v28, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v27, v20);
LABEL_12:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v21 + 24))(v27, v28, v20);
LABEL_13:
  v32 = a3[17];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)((char *)a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v35 = a3[18];
  v36 = (void *)(a1 + v35);
  v37 = (char *)a2 + v35;
  v38 = sub_1ABF305D4();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40(v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
LABEL_18:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, char *, uint64_t))(v39 + 24))(v36, v37, v38);
LABEL_19:
  v44 = a3[19];
  v45 = (void *)(a1 + v44);
  v46 = (char *)a2 + v44;
  v47 = v40((void *)(a1 + v44), 1, v38);
  v48 = v40(v46, 1, v38);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v45, v46, v38);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v45, 0, 1, v38);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v45, v38);
LABEL_24:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v39 + 24))(v45, v46, v38);
LABEL_25:
  v50 = a3[20];
  v51 = (void *)(a1 + v50);
  v52 = (char *)a2 + v50;
  v53 = sub_1ABF3094C();
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 1, v53);
  v57 = v55(v52, 1, v53);
  if (!v56)
  {
    if (!v57)
    {
      (*(void (**)(void *, char *, uint64_t))(v54 + 24))(v51, v52, v53);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v54 + 8))(v51, v53);
    goto LABEL_30;
  }
  if (v57)
  {
LABEL_30:
    sub_1ABD00308(0, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
LABEL_31:
  v59 = a3[21];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (uint64_t *)((char *)a2 + v59);
  *v60 = *v61;
  v60[1] = v61[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v62 = a3[22];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)((char *)a2 + v62);
  *v63 = *v64;
  v63[1] = v64[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v65 = a3[23];
  v66 = (_QWORD *)(a1 + v65);
  v67 = (uint64_t *)((char *)a2 + v65);
  *v66 = *v67;
  v66[1] = v67[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v68 = a3[24];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)((char *)a2 + v68);
  *v69 = *v70;
  v69[1] = v70[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v71 = a3[25];
  v72 = (_QWORD *)(a1 + v71);
  v73 = (uint64_t *)((char *)a2 + v71);
  *v72 = *v73;
  v72[1] = v73[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[26]) = *(uint64_t *)((char *)a2 + a3[26]);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[27]) = *(uint64_t *)((char *)a2 + a3[27]);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 24))(a1 + a3[28], (uint64_t)a2 + a3[28], v20);
  return a1;
}

uint64_t initializeWithTake for QuoteDetail(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(const void *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v7 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v7;
  v8 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v8;
  v9 = a3[15];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = sub_1ABF30760();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v11, 1, v12))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v16 = a3[16];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  if (v14((const void *)(a2 + v16), 1, v12))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v17, v18, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
  }
  v20 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = sub_1ABF305D4();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v22, 1, v23))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v27 = a3[19];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  if (v25((const void *)(a2 + v27), 1, v23))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v28, v29, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
  }
  v31 = a3[20];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  v34 = sub_1ABF3094C();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    sub_1ABD00308(0, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v37 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(_OWORD *)(a1 + v37) = *(_OWORD *)(a2 + v37);
  v38 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  v39 = a3[26];
  *(_OWORD *)(a1 + a3[25]) = *(_OWORD *)(a2 + a3[25]);
  *(_QWORD *)(a1 + v39) = *(_QWORD *)(a2 + v39);
  v40 = a3[28];
  *(_QWORD *)(a1 + a3[27]) = *(_QWORD *)(a2 + a3[27]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(a1 + v40, a2 + v40, v12);
  return a1;
}

uint64_t assignWithTake for QuoteDetail(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v7 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v7;
  v8 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v8;
  v9 = a3[15];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1ABF30760();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  v18 = a3[16];
  v19 = (void *)(a1 + v18);
  v20 = (void *)(a2 + v18);
  v21 = v14((void *)(a1 + v18), 1, v12);
  v22 = v14(v20, 1, v12);
  v79 = v13;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v19, v20, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v19, v20, v12);
LABEL_13:
  v24 = a3[17];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = a3[18];
  v30 = (void *)(a1 + v29);
  v31 = (void *)(a2 + v29);
  v32 = sub_1ABF305D4();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v30, v32);
LABEL_18:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v30, v31, v32);
LABEL_19:
  v38 = a3[19];
  v39 = (void *)(a1 + v38);
  v40 = (void *)(a2 + v38);
  v41 = v34((void *)(a1 + v38), 1, v32);
  v42 = v34(v40, 1, v32);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v33 + 32))(v39, v40, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v39, 0, 1, v32);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v39, v32);
LABEL_24:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v33 + 40))(v39, v40, v32);
LABEL_25:
  v44 = a3[20];
  v45 = (void *)(a1 + v44);
  v46 = (void *)(a2 + v44);
  v47 = sub_1ABF3094C();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 1, v47);
  v51 = v49(v46, 1, v47);
  if (!v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, void *, uint64_t))(v48 + 40))(v45, v46, v47);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v45, v47);
    goto LABEL_30;
  }
  if (v51)
  {
LABEL_30:
    sub_1ABD00308(0, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, void *, uint64_t))(v48 + 32))(v45, v46, v47);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
LABEL_31:
  v53 = a3[21];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (uint64_t *)(a2 + v53);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  v58 = a3[22];
  v59 = (_QWORD *)(a1 + v58);
  v60 = (uint64_t *)(a2 + v58);
  v62 = *v60;
  v61 = v60[1];
  *v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  v63 = a3[23];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (uint64_t *)(a2 + v63);
  v67 = *v65;
  v66 = v65[1];
  *v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease();
  v68 = a3[24];
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)(a2 + v68);
  v72 = *v70;
  v71 = v70[1];
  *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease();
  v73 = a3[25];
  v74 = (_QWORD *)(a1 + v73);
  v75 = (uint64_t *)(a2 + v73);
  v77 = *v75;
  v76 = v75[1];
  *v74 = v77;
  v74[1] = v76;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[27]) = *(_QWORD *)(a2 + a3[27]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 40))(a1 + a3[28], a2 + a3[28], v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for QuoteDetail()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABD70D28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[15];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[18];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_1ABD00308(0, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  v7 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v9 = a3[20];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1ABF30760();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[28];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[26]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t storeEnumTagSinglePayload for QuoteDetail()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1ABD70E50(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[15];
  }
  else
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[18];
    }
    else
    {
      sub_1ABD00308(0, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
      v9 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v13;
        v11 = a4[20];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(_QWORD *)(a1 + a4[26]) = (a2 - 1);
          return;
        }
        v10 = sub_1ABF30760();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[28];
      }
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

ValueMetadata *type metadata accessor for FundHolding()
{
  return &type metadata for FundHolding;
}

_QWORD *_s10StocksCore11FundHoldingVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for NewsHeadlineScore.CohortMembership(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for NewsHeadlineScore.CohortMembership(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchlistEntity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchlistEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FundSector()
{
  return &type metadata for FundSector;
}

_BYTE *sub_1ABD710F0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FundSector.CodingKeys()
{
  return &type metadata for FundSector.CodingKeys;
}

uint64_t _s10StocksCore10FundSectorV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABD71158 + 4 * byte_1ABF3742E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABD7118C + 4 * byte_1ABF37429[v4]))();
}

uint64_t sub_1ABD7118C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD71194(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD7119CLL);
  return result;
}

uint64_t sub_1ABD711A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD711B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABD711B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD711BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FundHolding.CodingKeys()
{
  return &type metadata for FundHolding.CodingKeys;
}

uint64_t getEnumTagSinglePayload for QuoteDetail.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for QuoteDetail.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_1ABD712B4 + 4 * byte_1ABF37438[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_1ABD712E8 + 4 * byte_1ABF37433[v4]))();
}

uint64_t sub_1ABD712E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD712F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD712F8);
  return result;
}

uint64_t sub_1ABD71304(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD7130CLL);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_1ABD71310(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD71318(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetail.CodingKeys()
{
  return &type metadata for QuoteDetail.CodingKeys;
}

unint64_t sub_1ABD71338()
{
  unint64_t result;

  result = qword_1EEC41F00;
  if (!qword_1EEC41F00)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3774C, &type metadata for QuoteDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41F00);
  }
  return result;
}

unint64_t sub_1ABD71380()
{
  unint64_t result;

  result = qword_1EEC41F08;
  if (!qword_1EEC41F08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37804, &type metadata for FundHolding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41F08);
  }
  return result;
}

unint64_t sub_1ABD713C8()
{
  unint64_t result;

  result = qword_1EEC41F10;
  if (!qword_1EEC41F10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF378BC, &type metadata for FundSector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41F10);
  }
  return result;
}

unint64_t sub_1ABD71410()
{
  unint64_t result;

  result = qword_1EEC41F18;
  if (!qword_1EEC41F18)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3782C, &type metadata for FundSector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41F18);
  }
  return result;
}

unint64_t sub_1ABD71458()
{
  unint64_t result;

  result = qword_1EEC41F20;
  if (!qword_1EEC41F20)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37854, &type metadata for FundSector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41F20);
  }
  return result;
}

unint64_t sub_1ABD714A0()
{
  unint64_t result;

  result = qword_1EEC41F28;
  if (!qword_1EEC41F28)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37774, &type metadata for FundHolding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41F28);
  }
  return result;
}

unint64_t sub_1ABD714E8()
{
  unint64_t result;

  result = qword_1EEC41F30;
  if (!qword_1EEC41F30)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3779C, &type metadata for FundHolding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41F30);
  }
  return result;
}

unint64_t sub_1ABD71530()
{
  unint64_t result;

  result = qword_1ED34CD68;
  if (!qword_1ED34CD68)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF376BC, &type metadata for QuoteDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CD68);
  }
  return result;
}

unint64_t sub_1ABD71578()
{
  unint64_t result;

  result = qword_1ED34CD60;
  if (!qword_1ED34CD60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF376E4, &type metadata for QuoteDetail.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CD60);
  }
  return result;
}

uint64_t sub_1ABD715BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x506E65704F796164 && a2 == 0xEC00000065636972;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7250776F4C796164 && a2 == 0xEB00000000656369 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5068676948796164 && a2 == 0xEC00000065636972 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x50776F4C72616579 && a2 == 0xEC00000065636972 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6867694872616579 && a2 == 0xED00006563697250 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x646E656469766964 && a2 == 0xED0000646C656959 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D756C6F76 && a2 == 0xE600000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x5665676172657661 && a2 == 0xED0000656D756C6FLL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ABF53CF0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1635018082 && a2 == 0xE400000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ABF53C30 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ABF53D30 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x73676E696E726165 && a2 == 0xEF65746144646E45 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x55736C6961746564 && a2 == 0xEA00000000004C52 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ABF53CA0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x695474656B72616DLL && a2 == 0xEE00656E6F5A656DLL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x65737341646E7566 && a2 == 0xEE007373616C4374 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x65746143646E7566 && a2 == 0xEC00000079726F67 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x75636F46646E7566 && a2 == 0xE900000000000073 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6863694E646E7566 && a2 == 0xE900000000000065 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x69676552646E7566 && a2 == 0xEA00000000006E6FLL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x48706F54646E7566 && a2 == 0xEF73676E69646C6FLL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x74636553646E7566 && a2 == 0xEB0000000073726FLL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ABF55EC0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 24;
    else
      return 25;
  }
}

uint64_t sub_1ABD72104(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ABF55EE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1ABD721E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F74636573 && a2 == 0xE600000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ABF55EE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1ABD722CC(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_1ABD00308(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1ABD7232C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  sub_1ABD722CC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t type metadata accessor for YahooChartOperation()
{
  uint64_t result;

  result = qword_1ED351118;
  if (!qword_1ED351118)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD723BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF30B38();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_1ABD7246C()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF36EA0;
  *(_QWORD *)(inited + 32) = 0x72656B636974;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v2 = *(_QWORD *)(v0 + qword_1ED3510F0 + 8);
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v0 + qword_1ED3510F0);
  *(_QWORD *)(inited + 56) = v2;
  *(_QWORD *)(inited + 64) = 0x65676E6172;
  *(_QWORD *)(inited + 72) = 0xE500000000000000;
  __asm { BR              X11 }
}

void sub_1ABD72538(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  char v25;

  v5 = 0x73752D6E65;
  v3[10] = 25653;
  v3[11] = a1;
  v3[12] = 1701869940;
  v3[13] = 0xE400000000000000;
  v6 = 0xE500000000000000;
  v3[14] = 0x65746F7571;
  v3[15] = 0xE500000000000000;
  sub_1ABF2FF5C();
  v7 = sub_1ABD031C0((uint64_t)v3);
  __swift_project_boxed_opaque_existential_1(&v1[qword_1ED351108], *(_QWORD *)&v1[qword_1ED351108 + 24]);
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  v9 = v8;
  v25 = v4;
  if (!v8)
  {
    v15 = v1;
LABEL_8:

    v18 = 0xE200000000000000;
    v16 = 21333;
    v19 = v24;
    goto LABEL_9;
  }
  v10 = objc_msgSend(v8, sel_stocksLanguageCode);
  if (v10)
  {
    v11 = v10;
    v5 = sub_1ABF317A4();
    v6 = v12;

  }
  v13 = objc_msgSend(v9, sel_stocksCountryCode);
  if (!v13)
  {
    v15 = v1;
    goto LABEL_8;
  }
  v14 = v13;
  v15 = v1;
  v16 = sub_1ABF317A4();
  v18 = v17;

  v19 = v24;
LABEL_9:
  v20 = sub_1ABF22BC8(1, 0x6677656C7070612FLL, 0xEE0074726168632FLL, v7, v5, v6, v16, v18, (uint64_t)v15 + qword_1EEC41F40, (uint64_t)v15 + qword_1ED351110);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v15;
  *(_BYTE *)(v21 + 24) = v25;
  *(_QWORD *)(v21 + 32) = v19;
  *(_QWORD *)(v21 + 40) = v2;
  v22 = v20;
  v23 = v15;
  sub_1ABF2FF68();
  sub_1ABF30BF8();

  objc_msgSend(v22, sel_start);
}

uint64_t sub_1ABD727E4(uint64_t a1, uint64_t a2, int a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  int v35;
  void (*v36)(uint64_t *);
  void *v37;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *);
  __int128 v42;
  char v43;
  uint64_t v44;
  unint64_t v45;

  v41 = a4;
  sub_1ABCF5A54(0, &qword_1ED346DB8, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v39 - v10);
  sub_1ABCF5A54(0, &qword_1ED34DA40, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - v13;
  v15 = type metadata accessor for Chart(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a1 + 8);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v20 = *(_QWORD *)(a1 + 16);
    v40 = *(_QWORD *)(a1 + 24);
    v21 = *(id *)a1;
    v22 = *(id *)a1;
    sub_1ABF31BE8();
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1ABF366C0;
    swift_getErrorValue();
    v24 = sub_1ABF322C0();
    v26 = v25;
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v23 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v23 + 32) = v24;
    *(_QWORD *)(v23 + 40) = v26;
    sub_1ABD19560();
    v27 = (void *)sub_1ABF31D44();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    *v11 = (uint64_t)v21;
    swift_storeEnumTagMultiPayload();
    v28 = v21;
    v41(v11);
    sub_1ABD6B2E4(v21, v19, v20, v40, 1);
    return sub_1ABD72DA0((uint64_t)v11, &qword_1ED346DB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  }
  v39 = a5;
  v40 = v9;
  sub_1ABF2FF5C();
  v29 = sub_1ABDEA374(MEMORY[0x1E0DEE9D8]);
  v45 = v29;
  v30 = *(_QWORD *)(v19 + 16);
  if (v30)
  {
    sub_1ABF2FF5C();
    v31 = (_QWORD *)(v19 + 56);
    do
    {
      v32 = *v31;
      v33 = *((_BYTE *)v31 - 8);
      v42 = *(_OWORD *)(v31 - 3);
      v43 = v33;
      v44 = v32;
      sub_1ABECBB8C((uint64_t)&v42, a3, (uint64_t)&v45);
      v31 += 4;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    v34 = v45;
  }
  else
  {
    v34 = v29;
  }
  sub_1ABE0E824(v34, (uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  v36 = v41;
  if (v35 == 1)
  {
    sub_1ABD72DA0((uint64_t)v14, &qword_1ED34DA40, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABF31BE8();
    sub_1ABD19560();
    v37 = (void *)sub_1ABF31D44();
    sub_1ABF31318();

    sub_1ABD72DE8();
    *v11 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v36(v11);
    return sub_1ABD72DA0((uint64_t)v11, &qword_1ED346DB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  }
  sub_1ABD72E2C((uint64_t)v14, (uint64_t)v18);
  sub_1ABD177BC((uint64_t)v18, (uint64_t)v11);
  swift_storeEnumTagMultiPayload();
  v36(v11);
  sub_1ABD72DA0((uint64_t)v11, &qword_1ED346DB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  return sub_1ABD17800((uint64_t)v18);
}

void sub_1ABD72BF8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABD72C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + qword_1EEC41F40;
  v2 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED351100);
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED351108);
  v3 = v0 + qword_1ED351110;
  v4 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t sub_1ABD72CBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v2 = a1 + qword_1EEC41F40;
  v3 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED351100);
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED351108);
  v4 = a1 + qword_1ED351110;
  v5 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1ABD72D5C()
{
  return type metadata accessor for YahooChartOperation();
}

uint64_t sub_1ABD72D64()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABD72D90(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABD727E4(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1ABD72DA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;

  sub_1ABCF5A54(0, a2, type metadata accessor for Chart, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1ABD72DE8()
{
  unint64_t result;

  result = qword_1EEC41F48;
  if (!qword_1EEC41F48)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37AE0, &type metadata for YahooChartOperation.OperationError);
    atomic_store(result, (unint64_t *)&qword_1EEC41F48);
  }
  return result;
}

uint64_t sub_1ABD72E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Chart(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for YahooChartOperation.OperationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABD72EB0 + 4 * byte_1ABF379E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABD72ED0 + 4 * byte_1ABF379E5[v4]))();
}

_BYTE *sub_1ABD72EB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABD72ED0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD72ED8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD72EE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD72EE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD72EF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for YahooChartOperation.OperationError()
{
  return &type metadata for YahooChartOperation.OperationError;
}

unint64_t sub_1ABD72F10()
{
  unint64_t result;

  result = qword_1EEC41F50;
  if (!qword_1EEC41F50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37AB8, &type metadata for YahooChartOperation.OperationError);
    atomic_store(result, (unint64_t *)&qword_1EEC41F50);
  }
  return result;
}

uint64_t type metadata accessor for SDSQuoteDetailOperation()
{
  uint64_t result;

  result = qword_1ED34D780;
  if (!qword_1ED34D780)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD72F90()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF30B38();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_1ABD73038(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = v2;
  v13 = *(_QWORD *)&v2[qword_1ED34D778];
  swift_bridgeObjectRetain_n();
  sub_1ABF231D4(&v13);
  swift_bridgeObjectRelease();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD747CC((unint64_t *)&qword_1ED34DFE8, MEMORY[0x1E0DEAF50]);
  v6 = sub_1ABF31B64();
  swift_release();
  v7 = v3;
  sub_1ABD745EC(v6);
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1ABF31114();
  sub_1ABD74724();
  sub_1ABF3109C();
  swift_bridgeObjectRelease();

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  sub_1ABF2FF68();
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  sub_1ABF2FF68();
  v12 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABD7322C(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = MEMORY[0x1E0DEE9E0];
  v7 = MEMORY[0x1E0DEE9E0];
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v4)
  {
    sub_1ABF2FF5C();
    type metadata accessor for QuoteDetail();
    v5 = 0;
    do
    {
      ++v5;
      sub_1ABF2FF5C();
      sub_1ABF3103C();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

void sub_1ABD73320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  char *v21;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  __swift_project_boxed_opaque_existential_1(&a5[qword_1ED34D760], *(_QWORD *)&a5[qword_1ED34D760 + 24]);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF366E0;
  *(_QWORD *)(inited + 32) = 0x74655361746164;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = 0x65746F7571;
  *(_QWORD *)(inited + 56) = 0xE500000000000000;
  *(_QWORD *)(inited + 64) = 0x6C6F626D7973;
  *(_QWORD *)(inited + 72) = 0xE600000000000000;
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD747CC((unint64_t *)&qword_1ED34FCC0, MEMORY[0x1E0DEAF20]);
  sub_1ABF2FF68();
  *(_QWORD *)(inited + 80) = sub_1ABF316E4();
  *(_QWORD *)(inited + 88) = v14;
  sub_1ABD031C0(inited);
  v15 = (_QWORD *)sub_1ABE77C3C(2);
  swift_bridgeObjectRelease();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a6;
  v17 = (_QWORD *)((char *)v15 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v15) + 16));
  v18 = *v17;
  *v17 = (uint64_t)sub_1ABD74848;
  v17[1] = v16;
  sub_1ABF2FF5C();
  sub_1ABD12EC4(v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a3;
  v19[3] = a4;
  v19[4] = a5;
  v19[5] = sub_1ABD17048;
  v19[6] = v12;
  v20 = v15;
  sub_1ABF2FF68();
  v21 = a5;
  sub_1ABF30BF8();

  objc_msgSend(v20, sel_start);
}

uint64_t sub_1ABD73598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a3;
  sub_1ABD669A8(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34E4C8, (uint64_t (*)(uint64_t))sub_1ABD669A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (id *)((char *)&v28 - v12);
  sub_1ABD75274(a2, (uint64_t)&v28 - v12, (unint64_t *)&qword_1ED34E4C8, (uint64_t (*)(uint64_t))sub_1ABD669A8, v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    sub_1ABD66FD0();
    v15 = (_QWORD *)(a4 + *(int *)(v14 + 48));
    v16 = sub_1ABF30F34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a4, a1, v16);
    *v15 = *(_QWORD *)(v29 + 16);
    v15[1] = 0;
    v17 = MEMORY[0x1E0DEE9D8];
    v15[2] = MEMORY[0x1E0DEE9D8];
    v15[3] = v17;
    type metadata accessor for NetworkEvent();
    v15[4] = 0;
    v15[5] = 0;
  }
  else
  {
    sub_1ABD748D0((uint64_t)v13, (uint64_t)v9);
    v18 = sub_1ABF30F34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a4, a1, v18);
    v19 = *(_QWORD *)(v29 + 16);
    sub_1ABD04578(0, &qword_1ED34E4C0, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB44E8]);
    sub_1ABF30F64();
    v20 = v30;
    sub_1ABD365D4(v31, v32);
    v21 = *(_QWORD *)(v20 + 16);
    swift_bridgeObjectRelease();
    sub_1ABF30F64();
    swift_bridgeObjectRelease();
    v22 = v32;
    if (v32)
    {
      v23 = v31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = 0;
    }
    sub_1ABD66FD0();
    v25 = (_QWORD *)(a4 + *(int *)(v24 + 48));
    sub_1ABD75174((uint64_t)v9);
    *v25 = v19;
    v25[1] = v21;
    v26 = MEMORY[0x1E0DEE9D8];
    v25[2] = MEMORY[0x1E0DEE9D8];
    v25[3] = v26;
    v25[4] = v23;
    v25[5] = v22;
    type metadata accessor for NetworkEvent();
  }
  return swift_storeEnumTagMultiPayload();
}

void sub_1ABD73808(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  _BYTE v32[776];
  _QWORD v33[97];
  _QWORD v34[2];

  v29 = a6;
  v30 = a5;
  v31 = a4;
  sub_1ABD669A8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34E4C8, (uint64_t (*)(uint64_t))sub_1ABD669A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v24 - v14);
  sub_1ABD75274(a1, (uint64_t)v24 - v14, (unint64_t *)&qword_1ED34E4C8, (uint64_t (*)(uint64_t))sub_1ABD669A8, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = (void *)*v15;
    a2(*v15);

  }
  else
  {
    v27 = a2;
    v28 = a3;
    sub_1ABD748D0((uint64_t)v15, (uint64_t)v11);
    sub_1ABD04578(0, &qword_1ED34E4C0, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB44E8]);
    sub_1ABF30F64();
    v17 = v33[0];
    v18 = v33[1];
    v19 = v33[2];
    v20 = v33[5];
    v34[0] = MEMORY[0x1E0DEE9E0];
    v21 = *(_QWORD *)(v33[0] + 16);
    if (v21)
    {
      v25 = v33[2];
      v26 = v33[3];
      swift_bridgeObjectRetain_n();
      memcpy(v33, (const void *)(v17 + 32), sizeof(v33));
      memcpy(v32, v33, sizeof(v32));
      sub_1ABD74914((uint64_t)v33);
      sub_1ABD73B08((uint64_t)v34, (uint64_t)v32);
      v24[1] = v20;
      for (i = 808; ; i += 776)
      {
        sub_1ABD74D6C((uint64_t)v33);
        if (!--v21)
          break;
        memcpy(v33, (const void *)(v17 + i), sizeof(v33));
        memcpy(v32, v33, sizeof(v32));
        sub_1ABD74914((uint64_t)v33);
        sub_1ABD73B08((uint64_t)v34, (uint64_t)v32);
      }
      swift_bridgeObjectRelease_n();
      sub_1ABD365D4(v18, v25);
      v23 = v34[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1ABD365D4(v18, v19);
      v23 = MEMORY[0x1E0DEE9E0];
    }
    v30(v23);
    swift_bridgeObjectRelease();
    sub_1ABD75174((uint64_t)v11);
  }
}

uint64_t sub_1ABD73B08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t result;
  int v30;
  uint64_t v31;
  void (*v32)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v33)(uint64_t);
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _BYTE v54[12];
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  _BYTE *v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  _BYTE *v95;
  _BYTE v96[584];
  _BYTE v97[64];
  uint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 v105;
  uint64_t v106;
  unsigned __int8 v107;
  uint64_t v108;
  unsigned __int8 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned __int8 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE *v136;

  v91 = a1;
  v3 = sub_1ABF30760();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v90 = &v54[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v136 = &v54[-v9];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, v4, v7);
  v11 = MEMORY[0x1E0C80A78](v10);
  v95 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v94 = &v54[-v13];
  sub_1ABCF5A54(0, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, v7);
  MEMORY[0x1E0C80A78](v14);
  v16 = &v54[-v15];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v7);
  v18 = MEMORY[0x1E0C80A78](v17);
  v93 = &v54[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = MEMORY[0x1E0C80A78](v18);
  v92 = &v54[-v21];
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = &v54[-v23];
  MEMORY[0x1E0C80A78](v22);
  v26 = &v54[-v25];
  sub_1ABD751B0(a2 + 104, (uint64_t)v96);
  v88 = *(_QWORD *)(a2 + 720);
  v27 = *(_QWORD *)(a2 + 728);
  sub_1ABD751B0((uint64_t)v96, (uint64_t)v97);
  if (sub_1ABD7520C((uint64_t)v97) == 1)
  {
    sub_1ABD75230();
    swift_allocError();
    *v28 = 0;
    v28[1] = 0;
    return swift_willThrow();
  }
  sub_1ABD741E8(v110, v111, (uint64_t)v26);
  sub_1ABD741E8(v116, v117, (uint64_t)v24);
  v80 = (char *)&v119;
  v30 = v121;
  if ((v121 & 1) != 0)
  {
    v31 = 0;
  }
  else
  {
    v31 = v120;
    if (v120 < 0)
      goto LABEL_16;
  }
  v82 = v99;
  v87 = v16;
  v89 = v24;
  v83 = v31;
  if ((v99 & 1) == 0)
  {
    v81 = v98;
    if ((v98 & 0x8000000000000000) == 0)
      goto LABEL_9;
LABEL_16:
    result = sub_1ABF31FC0();
    __break(1u);
    return result;
  }
  v81 = 0;
LABEL_9:
  v32 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v32(v94, 1, 1, v3);
  v32(v95, 1, 1, v3);
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  v86 = v26;
  sub_1ABD75274((uint64_t)v26, (uint64_t)v92, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1ABD75274((uint64_t)v89, (uint64_t)v93, (unint64_t *)&qword_1ED350380, v33, v34);
  v35 = sub_1ABF3094C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v136, 1, 1, v35);
  v36 = v134;
  v37 = v135;
  if (v134)
    sub_1ABF2FF5C();
  v79 = v102;
  v38 = v103;
  v77 = v124;
  v39 = v125;
  v75 = v126;
  v40 = v127;
  v73 = v128;
  v41 = v129;
  v71 = v130;
  v42 = v131;
  v68 = v133;
  v69 = v132;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v78 = v38;
  sub_1ABF2FF5C();
  v76 = v39;
  sub_1ABF2FF5C();
  v74 = v40;
  sub_1ABF2FF5C();
  v72 = v41;
  sub_1ABF2FF5C();
  v70 = v42;
  sub_1ABF2FF5C();
  v59 = sub_1ABD752C4(v36, (void (*)(BOOL, unint64_t, uint64_t))sub_1ABDB5040);
  swift_bridgeObjectRelease();
  v85 = v27;
  v84 = v30;
  if (v36)
    sub_1ABF2FF5C();
  else
    v37 = 0;
  v67 = v108;
  v66 = v109;
  v65 = v106;
  v64 = v107;
  v63 = v104;
  v62 = v105;
  v61 = v123;
  v60 = v80[48];
  v58 = v80[32];
  v55 = v113;
  v56 = v112;
  v57 = v122;
  v43 = v118;
  v44 = *v80;
  v45 = v100;
  v46 = v101;
  v47 = v114;
  v48 = v115;
  v49 = sub_1ABD752C4(v37, (void (*)(BOOL, unint64_t, uint64_t))sub_1ABDB506C);
  swift_bridgeObjectRelease();
  v50 = (uint64_t)v90;
  sub_1ABF30754();
  v53 = v44;
  v51 = (uint64_t)v87;
  QuoteDetail.init(dayOpenPrice:dayLowPrice:dayHighPrice:yearLowPrice:yearHighPrice:dividendYield:volume:averageVolume:priceEarningsRatio:beta:earningsPerShare:earningsStartDate:earningsEndDate:currencyCode:detailsURL:keyStatisticsURL:marketTimeZone:fundAssetClass:fundCategory:fundFocus:fundNiche:fundRegion:fundTopHoldings:fundSectors:dateLastRefreshed:)(v67, v66, v65, v64, v63, v62, v61, v60, (uint64_t)v87, v57, v58, v56, v55, v83, v84, v81, v82, v43, v53,
    v45,
    v46,
    v47,
    v48,
    (uint64_t)v94,
    (uint64_t)v95,
    v79,
    v78,
    (uint64_t)v92,
    (uint64_t)v93,
    (uint64_t)v136,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v59,
    v49,
    v50);
  v52 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v51, 0, 1, v52);
  sub_1ABE33454(v51, v88, v85);
  sub_1ABCF59BC((uint64_t)v89);
  return sub_1ABCF59BC((uint64_t)v86);
}

uint64_t sub_1ABD741E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _QWORD v23[2];

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - v7;
  v9 = sub_1ABF302A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v23[0] = a1;
    v23[1] = a2;
    sub_1ABF30268();
    sub_1ABD0E288();
    sub_1ABF31DB0();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v14)
    {
      sub_1ABF305BC();
      swift_bridgeObjectRelease();
      v15 = sub_1ABF305D4();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
      {
        sub_1ABCF59BC((uint64_t)v8);
        v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
        v18 = a3;
        v19 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a3, v8, v15);
        v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
        v18 = a3;
        v19 = 0;
      }
      return v17(v18, v19, 1, v15);
    }
    else
    {
      v22 = sub_1ABF305D4();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, 1, 1, v22);
    }
  }
  else
  {
    v20 = sub_1ABF305D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a3, 1, 1, v20);
  }
}

void sub_1ABD743DC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABD74408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED34D760);
  v1 = v0 + qword_1ED34D770;
  v2 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_1ED34D768;
  v4 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t sub_1ABD7448C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED34D760);
  v2 = a1 + qword_1ED34D770;
  v3 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = a1 + qword_1ED34D768;
  v5 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1ABD74514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABD73038((uint64_t)sub_1ABD6B260, v4);
  return swift_release();
}

uint64_t sub_1ABD74574()
{
  return type metadata accessor for SDSQuoteDetailOperation();
}

uint64_t sub_1ABD7457C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABD745A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (!v3)
    return v4 == 0;
  if (!v4)
    return 0;
  if (*a1 == *a2 && v3 == v4)
    return 1;
  else
    return sub_1ABF3223C();
}

uint64_t sub_1ABD745EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    v4 = a1 + 32;
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34DD18, (uint64_t (*)(uint64_t))sub_1ABD74724, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    do
    {
      v4 += 8;
      MEMORY[0x1E0C80A78](v5);
      swift_allocObject();
      sub_1ABF2FF5C();
      sub_1ABF31228();
      swift_bridgeObjectRelease();
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      v5 = sub_1ABF31F00();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

void sub_1ABD74724()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE08)
  {
    type metadata accessor for QuoteDetail();
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE08);
  }
}

uint64_t sub_1ABD74788(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABD7322C(a1, *(void (**)(uint64_t, _QWORD))(v1 + 16));
}

uint64_t sub_1ABD747A0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, 1);
}

void sub_1ABD747C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABD73320(a1, a2, a3, a4, *(char **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABD747CC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD74824()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABD74848(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  v3 = *(_QWORD *)(v2 + 16);
  v5[2] = a1;
  v5[3] = v3;
  return sub_1ABF12034((void (*)(uint64_t))sub_1ABD753BC, (uint64_t)v5, a2);
}

uint64_t sub_1ABD7488C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1ABD748C0(uint64_t a1)
{
  uint64_t v1;

  sub_1ABD73808(a1, *(void (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1ABD748D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD669A8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD74914(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = *(_QWORD *)(a1 + 112);
  v38 = *(_QWORD *)(a1 + 104);
  v35 = *(_QWORD *)(a1 + 128);
  v36 = *(_QWORD *)(a1 + 120);
  v33 = *(_QWORD *)(a1 + 144);
  v34 = *(_QWORD *)(a1 + 136);
  v2 = *(_QWORD *)(a1 + 160);
  v32 = *(_QWORD *)(a1 + 152);
  v30 = *(_OWORD *)(a1 + 184);
  v31 = *(_OWORD *)(a1 + 168);
  v28 = *(_OWORD *)(a1 + 216);
  v29 = *(_OWORD *)(a1 + 200);
  v26 = *(_OWORD *)(a1 + 248);
  v27 = *(_OWORD *)(a1 + 232);
  v25 = *(_OWORD *)(a1 + 264);
  v23 = *(_OWORD *)(a1 + 296);
  v24 = *(_OWORD *)(a1 + 280);
  v21 = *(_OWORD *)(a1 + 328);
  v22 = *(_OWORD *)(a1 + 312);
  v19 = *(_OWORD *)(a1 + 360);
  v20 = *(_OWORD *)(a1 + 344);
  v17 = *(_OWORD *)(a1 + 392);
  v18 = *(_OWORD *)(a1 + 376);
  v15 = *(_OWORD *)(a1 + 424);
  v16 = *(_OWORD *)(a1 + 408);
  v13 = *(_OWORD *)(a1 + 456);
  v14 = *(_OWORD *)(a1 + 440);
  v11 = *(_OWORD *)(a1 + 488);
  v12 = *(_OWORD *)(a1 + 472);
  v9 = *(_OWORD *)(a1 + 520);
  v10 = *(_OWORD *)(a1 + 504);
  v7 = *(_OWORD *)(a1 + 552);
  v8 = *(_OWORD *)(a1 + 536);
  v5 = *(_OWORD *)(a1 + 584);
  v6 = *(_OWORD *)(a1 + 568);
  v4 = *(_OWORD *)(a1 + 600);
  sub_1ABD74BB4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD74C04(v38, v37, v36, v35, v34, v33, v32, v2, v31, *((uint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), v29, *((uint64_t *)&v29 + 1), v28, *((uint64_t *)&v28 + 1), v27, *((uint64_t *)&v27 + 1), v26,
    *((uint64_t *)&v26 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABD74BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a3)
  {
    sub_1ABF2FF5C();
    return sub_1ABD66B98(a4, a5);
  }
  return result;
}

uint64_t sub_1ABD74C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t result;

  if (a14 != 1)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABD74D40(a68);
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABD74D40(uint64_t result)
{
  if (result)
  {
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABD74D6C(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = *(_QWORD *)(a1 + 112);
  v38 = *(_QWORD *)(a1 + 104);
  v35 = *(_QWORD *)(a1 + 128);
  v36 = *(_QWORD *)(a1 + 120);
  v33 = *(_QWORD *)(a1 + 144);
  v34 = *(_QWORD *)(a1 + 136);
  v2 = *(_QWORD *)(a1 + 160);
  v32 = *(_QWORD *)(a1 + 152);
  v30 = *(_OWORD *)(a1 + 184);
  v31 = *(_OWORD *)(a1 + 168);
  v28 = *(_OWORD *)(a1 + 216);
  v29 = *(_OWORD *)(a1 + 200);
  v26 = *(_OWORD *)(a1 + 248);
  v27 = *(_OWORD *)(a1 + 232);
  v25 = *(_OWORD *)(a1 + 264);
  v23 = *(_OWORD *)(a1 + 296);
  v24 = *(_OWORD *)(a1 + 280);
  v21 = *(_OWORD *)(a1 + 328);
  v22 = *(_OWORD *)(a1 + 312);
  v19 = *(_OWORD *)(a1 + 360);
  v20 = *(_OWORD *)(a1 + 344);
  v17 = *(_OWORD *)(a1 + 392);
  v18 = *(_OWORD *)(a1 + 376);
  v15 = *(_OWORD *)(a1 + 424);
  v16 = *(_OWORD *)(a1 + 408);
  v13 = *(_OWORD *)(a1 + 456);
  v14 = *(_OWORD *)(a1 + 440);
  v11 = *(_OWORD *)(a1 + 488);
  v12 = *(_OWORD *)(a1 + 472);
  v9 = *(_OWORD *)(a1 + 520);
  v10 = *(_OWORD *)(a1 + 504);
  v7 = *(_OWORD *)(a1 + 552);
  v8 = *(_OWORD *)(a1 + 536);
  v5 = *(_OWORD *)(a1 + 584);
  v6 = *(_OWORD *)(a1 + 568);
  v4 = *(_OWORD *)(a1 + 600);
  sub_1ABD66BAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABD7500C(v38, v37, v36, v35, v34, v33, v32, v2, v31, *((uint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), v29, *((uint64_t *)&v29 + 1), v28, *((uint64_t *)&v28 + 1), v27, *((uint64_t *)&v27 + 1), v26,
    *((uint64_t *)&v26 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABD7500C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t result;

  result = a14;
  if (a14 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABD75148(a68);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABD75148(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABD75174(uint64_t a1)
{
  uint64_t v2;

  sub_1ABD669A8(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABD751B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD04578(0, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD7520C(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 104);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

unint64_t sub_1ABD75230()
{
  unint64_t result;

  result = qword_1EEC41F58;
  if (!qword_1EEC41F58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37BB8, &type metadata for SDSQuoteDetailOperationError);
    atomic_store(result, (unint64_t *)&qword_1EEC41F58);
  }
  return result;
}

uint64_t sub_1ABD75274(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;

  sub_1ABCF5A54(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1ABD752C4(uint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t))
{
  unint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (!a1)
    return MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    a2(0, v3, 0);
    v4 = v14;
    v6 = (uint64_t *)(a1 + 48);
    do
    {
      v8 = *(v6 - 2);
      v7 = *(v6 - 1);
      v9 = *v6;
      v10 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      sub_1ABF2FF5C();
      if (v10 >= v11 >> 1)
        a2(v11 > 1, v10 + 1, 1);
      *(_QWORD *)(v14 + 16) = v10 + 1;
      v12 = (_QWORD *)(v14 + 24 * v10);
      v12[4] = v8;
      v12[5] = v7;
      v12[6] = v9;
      v6 += 3;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1ABD753BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1ABD73598(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

_QWORD *initializeBufferWithCopyOfBuffer for SDSQuoteDetailOperationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for SDSQuoteDetailOperationError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SDSQuoteDetailOperationError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSQuoteDetailOperationError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SDSQuoteDetailOperationError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1ABD75518(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1ABD75530(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteDetailOperationError()
{
  return &type metadata for SDSQuoteDetailOperationError;
}

uint64_t sub_1ABD75570()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD75578(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_1ABD755A0())()
{
  return nullsub_2;
}

uint64_t sub_1ABD755B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CurrencyResponse() + 20);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for CurrencyResponse()
{
  uint64_t result;

  result = qword_1ED34C368;
  if (!qword_1ED34C368)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD75634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CurrencyResponse() + 20);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*sub_1ABD7567C())(_QWORD)
{
  type metadata accessor for CurrencyResponse();
  return nullsub_2;
}

uint64_t sub_1ABD756A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CurrencyResponse() + 24);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1ABD756EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CurrencyResponse() + 24);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*sub_1ABD75734())(_QWORD)
{
  type metadata accessor for CurrencyResponse();
  return nullsub_2;
}

uint64_t sub_1ABD7575C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CurrencyResponse();
  return sub_1ABCFC790(v1 + *(int *)(v3 + 28), a1, type metadata accessor for RawAttributionSource);
}

uint64_t sub_1ABD75798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CurrencyResponse() + 28);
  return sub_1ABD757C8(a1, v3);
}

uint64_t sub_1ABD757C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawAttributionSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1ABD7580C())(_QWORD)
{
  type metadata accessor for CurrencyResponse();
  return nullsub_2;
}

uint64_t sub_1ABD75834()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABD7586C + 4 * byte_1ABF37C00[*v0]))(0x69737265766E6F63, 0xEB00000000736E6FLL);
}

uint64_t sub_1ABD7586C()
{
  return 0x4164657461657263;
}

uint64_t sub_1ABD75888()
{
  return 0x7441656C617473;
}

uint64_t sub_1ABD758A0()
{
  return 0x656372756F73;
}

uint64_t sub_1ABD758B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABD7864C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ABD758D8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1ABD758E4()
{
  sub_1ABD75B7C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD7590C()
{
  sub_1ABD75B7C();
  return sub_1ABF32398();
}

uint64_t sub_1ABD75934(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1ED34C550, (uint64_t (*)(void))sub_1ABD75B7C, (uint64_t)&type metadata for CurrencyResponse.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD75B7C();
  sub_1ABF32368();
  v12 = *v3;
  v11[15] = 0;
  sub_1ABD75BC0();
  sub_1ABD76098(&qword_1ED34C500, (uint64_t (*)(void))sub_1ABD75C14, MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  if (!v2)
  {
    type metadata accessor for CurrencyResponse();
    v11[14] = 1;
    sub_1ABF30760();
    sub_1ABCFE1EC(&qword_1ED34EAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1ABF321D0();
    v11[13] = 2;
    sub_1ABF321D0();
    v11[12] = 3;
    type metadata accessor for RawAttributionSource(0);
    sub_1ABCFE1EC((unint64_t *)&unk_1ED34C400, type metadata accessor for RawAttributionSource, (uint64_t)&unk_1ABF3C2D4);
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1ABD75B7C()
{
  unint64_t result;

  result = qword_1ED34C340;
  if (!qword_1ED34C340)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37F10, &type metadata for CurrencyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C340);
  }
  return result;
}

void sub_1ABD75BC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C4F8)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C4F8);
  }
}

unint64_t sub_1ABD75C14()
{
  unint64_t result;

  result = qword_1ED34C3A0;
  if (!qword_1ED34C3A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37C90, &type metadata for CurrencyConversion);
    atomic_store(result, (unint64_t *)&qword_1ED34C3A0);
  }
  return result;
}

uint64_t sub_1ABD75C58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(uint64_t, char *, uint64_t);
  char *v23;
  uint64_t v24;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;

  v27 = a2;
  v28 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1E0C80A78](v28);
  v29 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30760();
  v5 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  v33 = v5;
  v6 = MEMORY[0x1E0C80A78](v4);
  v30 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v31 = (char *)&v26 - v8;
  sub_1ABCF4DA8(0, &qword_1EEC41F60, (uint64_t (*)(void))sub_1ABD75B7C, (uint64_t)&type metadata for CurrencyResponse.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v35 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - v11;
  v13 = (int *)type metadata accessor for CurrencyResponse();
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD **)((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD75B7C();
  v34 = v12;
  v16 = v36;
  sub_1ABF3235C();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = v31;
  v18 = v32;
  v36 = v10;
  v26 = a1;
  v19 = v33;
  sub_1ABD75BC0();
  v40 = 0;
  sub_1ABD76098(&qword_1EEC41F68, (uint64_t (*)(void))sub_1ABD760FC, MEMORY[0x1E0DEAF40]);
  sub_1ABF32110();
  v20 = (uint64_t)v15;
  *v15 = v41;
  v39 = 1;
  sub_1ABCFE1EC(&qword_1ED34CCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v21 = v17;
  sub_1ABF32110();
  v22 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 32);
  v22(v20 + v13[5], v21, v18);
  v38 = 2;
  v23 = v30;
  v31 = 0;
  sub_1ABF32110();
  v22(v20 + v13[6], v23, v18);
  v37 = 3;
  sub_1ABCFE1EC(&qword_1EEC41F78, type metadata accessor for RawAttributionSource, (uint64_t)&unk_1ABF3C2AC);
  v24 = (uint64_t)v29;
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
  sub_1ABD76140(v24, v20 + v13[7]);
  sub_1ABCFC790(v20, v27, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_1ABCFC3BC(v20, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
}

uint64_t sub_1ABD76098(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD75BC0();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABD760FC()
{
  unint64_t result;

  result = qword_1EEC41F70;
  if (!qword_1EEC41F70)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37C68, &type metadata for CurrencyConversion);
    atomic_store(result, (unint64_t *)&qword_1EEC41F70);
  }
  return result;
}

uint64_t sub_1ABD76140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawAttributionSource(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABD76184@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABD75C58(a1, a2);
}

uint64_t sub_1ABD76198(_QWORD *a1)
{
  return sub_1ABD75934(a1);
}

uint64_t sub_1ABD761AC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABD761D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

double sub_1ABD76204()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t sub_1ABD7620C()
{
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF31AF8();
  return 0;
}

uint64_t sub_1ABD762DC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6563697270;
  if (*v0 == 1)
    v1 = 0x79636E6572727563;
  if (*v0)
    return v1;
  else
    return 0x79636E6572727563;
}

uint64_t sub_1ABD76330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABD78820(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ABD76354(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1ABD76360()
{
  sub_1ABD76528();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD76388()
{
  sub_1ABD76528();
  return sub_1ABF32398();
}

uint64_t sub_1ABD763B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  char v13;
  char v14;

  sub_1ABCF4DA8(0, &qword_1ED34C558, (uint64_t (*)(void))sub_1ABD76528, (uint64_t)&type metadata for CurrencyConversion.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[0] = *(_QWORD *)(v1 + 24);
  v11[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD76528();
  sub_1ABF32368();
  v14 = 0;
  v9 = v11[2];
  sub_1ABF32194();
  if (!v9)
  {
    v13 = 1;
    sub_1ABF32194();
    v12 = 2;
    sub_1ABF321AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1ABD76528()
{
  unint64_t result;

  result = qword_1ED34C388;
  if (!qword_1ED34C388)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37EC0, &type metadata for CurrencyConversion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C388);
  }
  return result;
}

uint64_t sub_1ABD7656C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char v24;
  char v25;
  char v26;

  v23 = a2;
  sub_1ABCF4DA8(0, &qword_1EEC41F80, (uint64_t (*)(void))sub_1ABD76528, (uint64_t)&type metadata for CurrencyConversion.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD76528();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v26 = 0;
  v10 = sub_1ABF320E0();
  v12 = v11;
  v25 = 1;
  sub_1ABF2FF5C();
  v13 = sub_1ABF320E0();
  v15 = v14;
  v21 = v13;
  v24 = 2;
  sub_1ABF2FF5C();
  v22 = v15;
  sub_1ABF320F8();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v19 = v22;
  v18 = v23;
  *v23 = v10;
  v18[1] = v12;
  v18[2] = v21;
  v18[3] = v19;
  v18[4] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD767AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABD7656C(a1, a2);
}

uint64_t sub_1ABD767C0(_QWORD *a1)
{
  return sub_1ABD763B0(a1);
}

uint64_t *sub_1ABD767D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *__dst;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1ABF30760();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1ABF2FF5C();
    v12(v9, v10, v11);
    v12((char *)v7 + a3[6], (char *)a2 + a3[6], v11);
    v13 = a3[7];
    v14 = (uint64_t *)((char *)v7 + v13);
    v15 = (char *)a2 + v13;
    v16 = *(uint64_t *)((char *)a2 + v13 + 8);
    *v14 = *(uint64_t *)((char *)a2 + v13);
    v14[1] = v16;
    v17 = type metadata accessor for RawAttributionSource(0);
    v18 = *(int *)(v17 + 20);
    v19 = (char *)v14 + v18;
    v20 = &v15[v18];
    v21 = sub_1ABF305D4();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    sub_1ABF2FF5C();
    if (v23(v20, 1, v21))
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v25 = *(int *)(v17 + 24);
    v26 = (char *)v14 + v25;
    v27 = &v15[v25];
    v28 = type metadata accessor for RawAttributionSourceLogo(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v50 = v29;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v32 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      v32(v26, v27, v21);
      v33 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
      __dst = &v26[v33];
      v34 = &v27[v33];
      v35 = v23(&v27[v33], 1, v21);
      if (EnumCaseMultiPayload == 1)
      {
        if (v35)
        {
          sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          v32(__dst, v34, v21);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
        }
        v38 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        *(_QWORD *)&v26[v38[5]] = *(_QWORD *)&v27[v38[5]];
        v39 = v38[6];
        v40 = (uint64_t *)&v26[v39];
        v41 = (uint64_t *)&v27[v39];
        v42 = *v41;
        v43 = v41[1];
        sub_1ABD0F474(*v41, v43);
        *v40 = v42;
        v40[1] = v43;
        v44 = v38[7];
        v45 = &v26[v44];
        v46 = &v27[v44];
        v47 = *((_QWORD *)v46 + 1);
        if (v47 >> 60 == 15)
        {
          *(_OWORD *)v45 = *(_OWORD *)v46;
        }
        else
        {
          v48 = *(_QWORD *)v46;
          sub_1ABD0F474(*(_QWORD *)v46, *((_QWORD *)v46 + 1));
          *(_QWORD *)v45 = v48;
          *((_QWORD *)v45 + 1) = v47;
        }
      }
      else if (v35)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v32(__dst, v34, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v26, 0, 1, v28);
    }
  }
  return v7;
}

uint64_t sub_1ABD76B80(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  void (*v21)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1ABF30760();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  v7 = a1 + a2[7];
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for RawAttributionSource(0);
  v9 = v7 + *(int *)(v8 + 20);
  v10 = sub_1ABF305D4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v13 = v7 + *(int *)(v8 + 24);
  v14 = type metadata accessor for RawAttributionSourceLogo(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14);
  if (!(_DWORD)result)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v21 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v21(v13, v10);
    v17 = v13 + *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v17, 1, v10);
    if (EnumCaseMultiPayload == 1)
    {
      if (!(_DWORD)result)
        v21(v17, v10);
      v18 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      result = sub_1ABD0F430(*(_QWORD *)(v13 + *(int *)(v18 + 24)), *(_QWORD *)(v13 + *(int *)(v18 + 24) + 8));
      v19 = (uint64_t *)(v13 + *(int *)(v18 + 28));
      v20 = v19[1];
      if (v20 >> 60 != 15)
        return sub_1ABD0F430(*v19, v20);
    }
    else if (!(_DWORD)result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v21)(v17, v10);
    }
  }
  return result;
}

char *sub_1ABD76D5C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1ABF30760();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  sub_1ABF2FF5C();
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)&a2[v11 + 8];
  *(_QWORD *)v12 = *(_QWORD *)&a2[v11];
  *((_QWORD *)v12 + 1) = v14;
  v15 = type metadata accessor for RawAttributionSource(0);
  v16 = *(int *)(v15 + 20);
  v17 = &v12[v16];
  v18 = &v13[v16];
  v19 = sub_1ABF305D4();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  sub_1ABF2FF5C();
  if (v21(v18, 1, v19))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v23 = *(int *)(v15 + 24);
  v24 = &v12[v23];
  v25 = &v13[v23];
  v26 = type metadata accessor for RawAttributionSourceLogo(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v48 = v27;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v30 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    v30(v24, v25, v19);
    v31 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    __dst = &v24[v31];
    v32 = &v25[v31];
    v33 = v21(&v25[v31], 1, v19);
    if (EnumCaseMultiPayload == 1)
    {
      if (v33)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v30(__dst, v32, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
      }
      v36 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)&v24[v36[5]] = *(_QWORD *)&v25[v36[5]];
      v37 = v36[6];
      v38 = (uint64_t *)&v24[v37];
      v39 = (uint64_t *)&v25[v37];
      v40 = *v39;
      v41 = v39[1];
      sub_1ABD0F474(*v39, v41);
      *v38 = v40;
      v38[1] = v41;
      v42 = v36[7];
      v43 = &v24[v42];
      v44 = &v25[v42];
      v45 = *((_QWORD *)v44 + 1);
      if (v45 >> 60 == 15)
      {
        *(_OWORD *)v43 = *(_OWORD *)v44;
      }
      else
      {
        v46 = *(_QWORD *)v44;
        sub_1ABD0F474(*(_QWORD *)v44, *((_QWORD *)v44 + 1));
        *(_QWORD *)v43 = v46;
        *((_QWORD *)v43 + 1) = v45;
      }
    }
    else if (v33)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v30(__dst, v32, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

char *sub_1ABD770DC(char *a1, char *a2, int *a3)
{
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t v37;
  int v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  char *__dst;
  char *v71;

  v5 = a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &v5[v6];
  v8 = &a2[v6];
  v9 = sub_1ABF30760();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&v5[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v71 = v5;
  v12 = &v5[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)&a2[v11];
  *((_QWORD *)v12 + 1) = *(_QWORD *)&a2[v11 + 8];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for RawAttributionSource(0);
  v15 = *(int *)(v14 + 20);
  v16 = &v12[v15];
  v17 = &v13[v15];
  v18 = sub_1ABF305D4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v5) = v20(v16, 1, v18);
  v21 = v20(v17, 1, v18);
  if ((_DWORD)v5)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  v23 = *(int *)(v14 + 24);
  v24 = &v12[v23];
  v25 = &v13[v23];
  v26 = type metadata accessor for RawAttributionSourceLogo(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (v30)
      goto LABEL_12;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v33 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    v33(v24, v25, v18);
    v34 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    __dst = &v24[v34];
    v35 = &v25[v34];
    v36 = v20(&v25[v34], 1, v18);
    if (EnumCaseMultiPayload == 1)
    {
      if (v36)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v33(__dst, v35, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      v46 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)&v24[v46[5]] = *(_QWORD *)&v25[v46[5]];
      v47 = v46[6];
      v48 = (uint64_t *)&v24[v47];
      v49 = (uint64_t *)&v25[v47];
      v50 = *v49;
      v51 = v49[1];
      sub_1ABD0F474(*v49, v51);
      *v48 = v50;
      v48[1] = v51;
      v52 = v46[7];
      v53 = &v24[v52];
      v54 = &v25[v52];
      v55 = *((_QWORD *)v54 + 1);
      if (v55 >> 60 == 15)
      {
        *(_OWORD *)v53 = *(_OWORD *)v54;
      }
      else
      {
        v56 = *(_QWORD *)v54;
        sub_1ABD0F474(*(_QWORD *)v54, *((_QWORD *)v54 + 1));
        *(_QWORD *)v53 = v56;
        *((_QWORD *)v53 + 1) = v55;
      }
    }
    else if (v36)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v33(__dst, v35, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  else
  {
    if (v30)
    {
      sub_1ABCFC3BC((uint64_t)v24, type metadata accessor for RawAttributionSourceLogo);
LABEL_12:
      sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      return v71;
    }
    if (v71 != a2)
    {
      sub_1ABCFC3BC((uint64_t)v24, type metadata accessor for RawAttributionSourceLogo);
      v38 = swift_getEnumCaseMultiPayload();
      v39 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v39(v24, v25, v18);
      v40 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
      v41 = &v24[v40];
      v42 = &v25[v40];
      v43 = v20(&v25[v40], 1, v18);
      if (v38 == 1)
      {
        if (v43)
        {
          sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          v39(v41, v42, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v41, 0, 1, v18);
        }
        v59 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        *(_QWORD *)&v24[v59[5]] = *(_QWORD *)&v25[v59[5]];
        v60 = v59[6];
        v61 = (uint64_t *)&v24[v60];
        v62 = (uint64_t *)&v25[v60];
        v63 = *v62;
        v64 = v62[1];
        sub_1ABD0F474(*v62, v64);
        *v61 = v63;
        v61[1] = v64;
        v65 = v59[7];
        v66 = &v24[v65];
        v67 = &v25[v65];
        v68 = *((_QWORD *)v67 + 1);
        if (v68 >> 60 == 15)
        {
          *(_OWORD *)v66 = *(_OWORD *)v67;
        }
        else
        {
          v69 = *(_QWORD *)v67;
          sub_1ABD0F474(*(_QWORD *)v67, *((_QWORD *)v67 + 1));
          *(_QWORD *)v66 = v69;
          *((_QWORD *)v66 + 1) = v68;
        }
      }
      else if (v43)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        v39(v41, v42, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v41, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return v71;
}

char *sub_1ABD776B8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  char *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  void (*v36)(char *, char *, uint64_t);
  char *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1ABF30760();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  v14 = type metadata accessor for RawAttributionSource(0);
  v15 = *(int *)(v14 + 20);
  v16 = &v12[v15];
  v17 = &v13[v15];
  v18 = sub_1ABF305D4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 1, v18))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v22 = *(int *)(v14 + 24);
  v23 = &v12[v22];
  v24 = &v13[v22];
  v25 = type metadata accessor for RawAttributionSourceLogo(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v36 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v36(v23, v24, v18);
    v29 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    __dst = &v23[v29];
    v30 = &v24[v29];
    v31 = v20(&v24[v29], 1, v18);
    if (EnumCaseMultiPayload == 1)
    {
      if (v31)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        v36(__dst, v30, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      v34 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)&v23[v34[5]] = *(_QWORD *)&v24[v34[5]];
      *(_OWORD *)&v23[v34[6]] = *(_OWORD *)&v24[v34[6]];
      *(_OWORD *)&v23[v34[7]] = *(_OWORD *)&v24[v34[7]];
    }
    else if (v31)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v36(__dst, v30, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

char *sub_1ABD779DC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t v37;
  int v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  int *v49;
  char *__dst;
  uint64_t v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1ABF30760();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)&a2[v11 + 8];
  *(_QWORD *)v12 = *(_QWORD *)&a2[v11];
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v15 = type metadata accessor for RawAttributionSource(0);
  v16 = *(int *)(v15 + 20);
  v17 = &v12[v16];
  v18 = &v13[v16];
  v19 = sub_1ABF305D4();
  v51 = *(_QWORD *)(v19 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  LODWORD(v10) = v20(v17, 1, v19);
  v21 = v20(v18, 1, v19);
  if ((_DWORD)v10)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v19);
LABEL_6:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v17, v18, v19);
LABEL_7:
  v23 = *(int *)(v15 + 24);
  v24 = &v12[v23];
  v25 = &v13[v23];
  v26 = type metadata accessor for RawAttributionSourceLogo(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (v29)
  {
    if (v30)
      goto LABEL_12;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v33 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
    v33(v24, v25, v19);
    v34 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    __dst = &v24[v34];
    v35 = &v25[v34];
    v36 = v20(&v25[v34], 1, v19);
    if (EnumCaseMultiPayload == 1)
    {
      if (v36)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v33(__dst, v35, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v19);
      }
      v46 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)&v24[v46[5]] = *(_QWORD *)&v25[v46[5]];
      *(_OWORD *)&v24[v46[6]] = *(_OWORD *)&v25[v46[6]];
      *(_OWORD *)&v24[v46[7]] = *(_OWORD *)&v25[v46[7]];
    }
    else if (v36)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v33(__dst, v35, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  else
  {
    if (v30)
    {
      sub_1ABCFC3BC((uint64_t)v24, type metadata accessor for RawAttributionSourceLogo);
LABEL_12:
      sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      return a1;
    }
    if (a1 != a2)
    {
      sub_1ABCFC3BC((uint64_t)v24, type metadata accessor for RawAttributionSourceLogo);
      v38 = swift_getEnumCaseMultiPayload();
      v39 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
      v39(v24, v25, v19);
      v40 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
      v41 = &v24[v40];
      v42 = &v25[v40];
      v43 = v20(&v25[v40], 1, v19);
      if (v38 == 1)
      {
        if (v43)
        {
          sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          v39(v41, v42, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v41, 0, 1, v19);
        }
        v49 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        *(_QWORD *)&v24[v49[5]] = *(_QWORD *)&v25[v49[5]];
        *(_OWORD *)&v24[v49[6]] = *(_OWORD *)&v25[v49[6]];
        *(_OWORD *)&v24[v49[7]] = *(_OWORD *)&v25[v49[7]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v43)
        {
          sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          v39(v41, v42, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v41, 0, 1, v19);
        }
        swift_storeEnumTagMultiPayload();
      }
    }
  }
  return a1;
}

uint64_t sub_1ABD77F30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABD77F3C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1ABF30760();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for RawAttributionSource(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1ABD77FDC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1ABD77FE8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1ABF30760();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for RawAttributionSource(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_1ABD78084()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for RawAttributionSource(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeWithCopy for CurrencyConversion(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for CurrencyConversion(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

_QWORD *assignWithTake for CurrencyConversion(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrencyConversion(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for CurrencyConversion()
{
  return &type metadata for CurrencyConversion;
}

uint64_t storeEnumTagSinglePayload for CurrencyConversion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABD782C0 + 4 * byte_1ABF37C09[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABD782F4 + 4 * byte_1ABF37C04[v4]))();
}

uint64_t sub_1ABD782F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD782FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD78304);
  return result;
}

uint64_t sub_1ABD78310(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD78318);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABD7831C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD78324(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CurrencyConversion.CodingKeys()
{
  return &type metadata for CurrencyConversion.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CurrencyResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CurrencyResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABD7841C + 4 * byte_1ABF37C13[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABD78450 + 4 * byte_1ABF37C0E[v4]))();
}

uint64_t sub_1ABD78450(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD78458(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD78460);
  return result;
}

uint64_t sub_1ABD7846C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD78474);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABD78478(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD78480(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CurrencyResponse.CodingKeys()
{
  return &type metadata for CurrencyResponse.CodingKeys;
}

unint64_t sub_1ABD784A0()
{
  unint64_t result;

  result = qword_1EEC41F88;
  if (!qword_1EEC41F88)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37DE0, &type metadata for CurrencyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41F88);
  }
  return result;
}

unint64_t sub_1ABD784E8()
{
  unint64_t result;

  result = qword_1EEC41F90;
  if (!qword_1EEC41F90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37E98, &type metadata for CurrencyConversion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41F90);
  }
  return result;
}

unint64_t sub_1ABD78530()
{
  unint64_t result;

  result = qword_1ED34C398;
  if (!qword_1ED34C398)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37E08, &type metadata for CurrencyConversion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C398);
  }
  return result;
}

unint64_t sub_1ABD78578()
{
  unint64_t result;

  result = qword_1ED34C390;
  if (!qword_1ED34C390)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37E30, &type metadata for CurrencyConversion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C390);
  }
  return result;
}

unint64_t sub_1ABD785C0()
{
  unint64_t result;

  result = qword_1ED34C350;
  if (!qword_1ED34C350)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37D50, &type metadata for CurrencyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C350);
  }
  return result;
}

unint64_t sub_1ABD78608()
{
  unint64_t result;

  result = qword_1ED34C348;
  if (!qword_1ED34C348)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37D78, &type metadata for CurrencyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C348);
  }
  return result;
}

uint64_t sub_1ABD7864C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69737265766E6F63 && a2 == 0xEB00000000736E6FLL;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7441656C617473 && a2 == 0xE700000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1ABD78820(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79636E6572727563 && a2 == 0xEC0000006D6F7246;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEA00000000006F54 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6563697270 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1ABD78990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v8 = sub_1ABF30B38();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB3560], v8);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(a4 + 8))(a1, a2, v11, a3, a4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1ABD78A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for TagStocksFeedConfiguration()
{
  return &type metadata for TagStocksFeedConfiguration;
}

uint64_t sub_1ABD78A74(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1ABD78E6C(0, &qword_1EEC41F98, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD78E28();
  sub_1ABF32368();
  v10[1] = a2;
  sub_1ABD165AC();
  sub_1ABD10510((unint64_t *)&qword_1ED34FCB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABD78B94()
{
  return 0x73444964656566;
}

uint64_t sub_1ABD78BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73444964656566 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABD78C40()
{
  sub_1ABD78E28();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD78C68()
{
  sub_1ABD78E28();
  return sub_1ABF32398();
}

_QWORD *sub_1ABD78C90@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABD78CD0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABD78CB8(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABD78A74(a1, *v1);
}

_QWORD *sub_1ABD78CD0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD v10[2];

  sub_1ABD78E6C(0, &qword_1ED346FB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD78E28();
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABD165AC();
    sub_1ABD10510((unint64_t *)&qword_1ED34FCC8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8 = (_QWORD *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1ABD78E28()
{
  unint64_t result;

  result = qword_1ED346868;
  if (!qword_1ED346868)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF380C0, &type metadata for TagStocksFeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346868);
  }
  return result;
}

void sub_1ABD78E6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABD78E28();
    v7 = a3(a1, &type metadata for TagStocksFeedConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for TagStocksFeedConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABD78F08 + 4 * asc_1ABF37F80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABD78F28 + 4 * byte_1ABF37F85[v4]))();
}

_BYTE *sub_1ABD78F08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABD78F28(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD78F30(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD78F38(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD78F40(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD78F48(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TagStocksFeedConfiguration.CodingKeys()
{
  return &type metadata for TagStocksFeedConfiguration.CodingKeys;
}

unint64_t sub_1ABD78F68()
{
  unint64_t result;

  result = qword_1EEC41FA0;
  if (!qword_1EEC41FA0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38098, &type metadata for TagStocksFeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC41FA0);
  }
  return result;
}

unint64_t sub_1ABD78FB0()
{
  unint64_t result;

  result = qword_1ED346878;
  if (!qword_1ED346878)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38008, &type metadata for TagStocksFeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346878);
  }
  return result;
}

unint64_t sub_1ABD78FF8()
{
  unint64_t result;

  result = qword_1ED346870;
  if (!qword_1ED346870)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38030, &type metadata for TagStocksFeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346870);
  }
  return result;
}

uint64_t sub_1ABD7903C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC41FA8);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC41FA8);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABD791B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC40EE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1EEC41FA8, a1);
}

uint64_t sub_1ABD791D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v12[0] = sub_1ABF30484();
  v3 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF2FE54();
  __swift_allocate_value_buffer(v10, qword_1EEC41FC0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC41FC0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v12[0]);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1ABF2FE60();
}

uint64_t sub_1ABD79400@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC40EE8, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1EEC41FC0, a1);
}

uint64_t sub_1ABD79424()
{
  return 1;
}

uint64_t sub_1ABD7942C()
{
  uint64_t v1;

  sub_1ABF2FBF0();
  return v1;
}

double sub_1ABD7945C@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1ABD794A4()
{
  swift_unknownObjectRetain();
  sub_1ABF2FF68();
  sub_1ABF2FBFC();
  return swift_release();
}

uint64_t sub_1ABD794F0()
{
  swift_unknownObjectRetain();
  sub_1ABF2FBFC();
  return swift_unknownObjectRelease();
}

void (*sub_1ABD79530(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FBE4();
  return sub_1ABD682E8;
}

uint64_t sub_1ABD79578()
{
  return sub_1ABF2FC08();
}

uint64_t sub_1ABD79598@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABCF5A54(0, &qword_1ED34C7B0, (uint64_t (*)(uint64_t))sub_1ABD79618, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  *a1 = result;
  return result;
}

unint64_t sub_1ABD79618()
{
  unint64_t result;

  result = qword_1ED34CAF0;
  if (!qword_1ED34CAF0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34CAF0);
  }
  return result;
}

uint64_t sub_1ABD79668(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v3;
  return swift_task_switch();
}

uint64_t sub_1ABD79684()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t ObjectType;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD *, uint64_t, uint64_t);

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v1 = v0[6];
  v0[9] = v0[5];
  ObjectType = swift_getObjectType();
  v0[2] = 0;
  v0[3] = 0;
  v0[4] = 0x8000000000000000;
  v5 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[10] = v3;
  *v3 = v0;
  v3[1] = sub_1ABD79738;
  return v5(v0 + 2, ObjectType, v1);
}

uint64_t sub_1ABD79738()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1ABD797A4()
{
  uint64_t v0;

  sub_1ABF2FD04();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD797D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1ABD797E8()
{
  unint64_t result;

  result = qword_1ED347118;
  if (!qword_1ED347118)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF381A0, &type metadata for OpenBusinessNewsIntent);
    atomic_store(result, (unint64_t *)&qword_1ED347118);
  }
  return result;
}

unint64_t sub_1ABD79830()
{
  unint64_t result;

  result = qword_1ED347108;
  if (!qword_1ED347108)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF381C8, &type metadata for OpenBusinessNewsIntent);
    atomic_store(result, (unint64_t *)&qword_1ED347108);
  }
  return result;
}

uint64_t sub_1ABD79874()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ABD79884()
{
  sub_1ABD798C4();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1ABD798C4()
{
  unint64_t result;

  result = qword_1ED347110;
  if (!qword_1ED347110)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38110, &type metadata for OpenBusinessNewsIntent);
    atomic_store(result, (unint64_t *)&qword_1ED347110);
  }
  return result;
}

uint64_t sub_1ABD79908@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40EE0 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC41FA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABD79980(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1ABD37AA0;
  v5 = *v1;
  v4[7] = a1;
  v4[8] = v5;
  return swift_task_switch();
}

uint64_t sub_1ABD799E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABCF5A54(0, &qword_1ED34C7B0, (uint64_t (*)(uint64_t))sub_1ABD79618, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  *a1 = result;
  return result;
}

uint64_t sub_1ABD79A64()
{
  sub_1ABD798C4();
  return sub_1ABF2FCA4();
}

ValueMetadata *type metadata accessor for OpenBusinessNewsIntent()
{
  return &type metadata for OpenBusinessNewsIntent;
}

uint64_t sub_1ABD79AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_1ABD7E2B8;
  return v9(a3, a4);
}

uint64_t sub_1ABD79B18()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1ABD79B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1ABD7E2B8;
  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  v4[2] = v5;
  *v5 = v4;
  v5[1] = sub_1ABD7E2B8;
  return v7(v2, v3);
}

uint64_t sub_1ABD79C10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1ABD37AA0;
  return v7(a1, a2);
}

uint64_t sub_1ABD79C7C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistDeprecationService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD79CD0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_1ABD79CE8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if (qword_1ED34CA78 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[11] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3683C8);
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Will check for deprecated stocks...", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }
  v5 = (_QWORD *)v0[10];

  v6 = v5 + 2;
  v7 = v5[5];
  v8 = v5[6];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v0[12] = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 136))(v7, v8);
  v9 = (_QWORD *)swift_task_alloc();
  v0[13] = v9;
  *v9 = v0;
  v9[1] = sub_1ABD79E24;
  return sub_1ABF31150();
}

uint64_t sub_1ABD79E24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABD79E90()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 120) = v1;
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v19 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_1ABF2FF5C();
    v7 = MEMORY[0x1AF437C34](v6, &type metadata for Watchlist);
    v9 = v8;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = sub_1ABD1FE2C(v7, v9, &v19);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Deprecating stocks from watchlists %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v5, -1, -1);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v10 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 128) = v10;
  if (v10)
  {
    *(_QWORD *)(v0 + 136) = 0;
    v11 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v11 + 40);
    *(_QWORD *)(v0 + 144) = v12;
    v13 = *(_QWORD *)(v11 + 48);
    *(_QWORD *)(v0 + 152) = v13;
    v14 = *(_QWORD *)(v11 + 64);
    *(_QWORD *)(v0 + 160) = v14;
    v15 = *(_WORD *)(v11 + 72);
    v16 = *(_QWORD *)(v11 + 56);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v11 + 32);
    *(_QWORD *)(v0 + 24) = v12;
    *(_QWORD *)(v0 + 32) = v13;
    *(_QWORD *)(v0 + 40) = v16;
    *(_QWORD *)(v0 + 48) = v14;
    *(_WORD *)(v0 + 56) = v15;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v17;
    *v17 = v0;
    v17[1] = sub_1ABD7A0D8;
    return sub_1ABD7A2CC(v0 + 16);
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1ABD7A0D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1ABD7A168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 136) + 1;
  if (v1 == *(_QWORD *)(v0 + 128))
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 136) = v1;
    v3 = *(_QWORD *)(v0 + 120) + 48 * v1;
    v4 = *(_QWORD *)(v3 + 40);
    *(_QWORD *)(v0 + 144) = v4;
    v5 = *(_QWORD *)(v3 + 48);
    *(_QWORD *)(v0 + 152) = v5;
    v6 = *(_QWORD *)(v3 + 64);
    *(_QWORD *)(v0 + 160) = v6;
    v7 = *(_WORD *)(v3 + 72);
    v8 = *(_QWORD *)(v3 + 56);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v3 + 32);
    *(_QWORD *)(v0 + 24) = v4;
    *(_QWORD *)(v0 + 32) = v5;
    *(_QWORD *)(v0 + 40) = v8;
    *(_QWORD *)(v0 + 48) = v6;
    *(_WORD *)(v0 + 56) = v7;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v9;
    *v9 = v0;
    v9[1] = sub_1ABD7A0D8;
    return sub_1ABD7A2CC(v0 + 16);
  }
}

uint64_t sub_1ABD7A250()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD7A284()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD7A2CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 3384) = v1;
  sub_1ABD00308(0, (unint64_t *)&qword_1ED34DC20, (void (*)(uint64_t))MEMORY[0x1E0DB32D0]);
  *(_QWORD *)(v2 + 3392) = swift_task_alloc();
  *(_QWORD *)(v2 + 3400) = *(_QWORD *)a1;
  *(_OWORD *)(v2 + 3408) = *(_OWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 3424) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v2 + 3432) = v4;
  *(_WORD *)(v2 + 3178) = *(_WORD *)(a1 + 40);
  return swift_task_switch();
}

uint64_t sub_1ABD7A35C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0[427];
  v2 = (_QWORD *)v0[424];
  v3 = (_QWORD *)v0[423];
  swift_getObjectType();
  v4 = v3[11];
  v5 = v3[12];
  __swift_project_boxed_opaque_existential_1(v3 + 8, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  sub_1ABD7DDF4((uint64_t)(v0 + 2));
  *v2 = v0[46];
  v6 = *MEMORY[0x1E0DB32C8];
  v7 = sub_1ABF30B14();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 104))(v2, v6, v7);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  v0[430] = sub_1ABD0E930(v1);
  sub_1ABD0903C((uint64_t)v2);
  v9 = (_QWORD *)swift_task_alloc();
  v0[431] = v9;
  *v9 = v0;
  v9[1] = sub_1ABD7A494;
  return sub_1ABF31150();
}

uint64_t sub_1ABD7A494()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 3456) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABD7A500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  __int16 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  __int16 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  __int16 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v97;
  __int128 v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;

  v1 = *(_QWORD *)(v0 + 3368);
  *(_QWORD *)(v0 + 3464) = v1;
  if (qword_1ED34CA78 != -1)
LABEL_67:
    swift_once();
  v2 = sub_1ABF3133C();
  *(_QWORD *)(v0 + 3472) = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3683C8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v3 = sub_1ABF31324();
  v4 = sub_1ABF31BF4();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v104 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = sub_1ABF2FF5C();
    v8 = MEMORY[0x1AF437C34](v7, MEMORY[0x1E0DEA968]);
    v10 = v9;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 3376) = sub_1ABD1FE2C(v8, v10, &v104);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v3, v4, "Checking records for deprecated stocks, symbols=%s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v6, -1, -1);
    MEMORY[0x1AF438FFC](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v11 = 0;
  v12 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v0 + 3180) = v12;
  v13 = 1 << v12;
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v1 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  do
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v11 << 6);
      v19 = *(_QWORD *)(v0 + 3464);
    }
    else
    {
      v21 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      v19 = *(_QWORD *)(v0 + 3464);
      if (v21 >= v16)
        goto LABEL_27;
      v22 = v19 + 64;
      v23 = *(_QWORD *)(v19 + 64 + 8 * v21);
      ++v11;
      if (!v23)
      {
        v11 = v21 + 1;
        if (v21 + 1 >= v16)
          goto LABEL_27;
        v23 = *(_QWORD *)(v22 + 8 * v11);
        if (!v23)
        {
          v11 = v21 + 2;
          if (v21 + 2 >= v16)
            goto LABEL_27;
          v23 = *(_QWORD *)(v22 + 8 * v11);
          if (!v23)
          {
            v24 = v21 + 3;
            if (v24 >= v16)
            {
LABEL_27:
              swift_release();
              swift_task_dealloc();
              return (*(uint64_t (**)(void))(v0 + 8))();
            }
            v23 = *(_QWORD *)(v22 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                v11 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_66;
                if (v11 >= v16)
                  goto LABEL_27;
                v23 = *(_QWORD *)(v22 + 8 * v11);
                ++v24;
                if (v23)
                  goto LABEL_24;
              }
            }
            v11 = v24;
          }
        }
      }
LABEL_24:
      v15 = (v23 - 1) & v23;
      v18 = __clz(__rbit64(v23)) + (v11 << 6);
    }
    *(_QWORD *)(v0 + 3488) = v15;
    *(_QWORD *)(v0 + 3480) = v11;
    v20 = *(_QWORD *)(v19 + 56);
  }
  while ((*(_BYTE *)(v20 + 104 * v18 + 80) & 1) == 0);
  v25 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 16 * v18);
  v27 = *v25;
  v26 = v25[1];
  v28 = v20 + 104 * v18;
  v29 = *(_QWORD *)(v28 + 96);
  v99 = *(_QWORD *)(v28 + 88);
  sub_1ABF2FF5C();
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v30 = sub_1ABF31324();
  v31 = sub_1ABF31BF4();
  v103 = v27;
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    v104 = v33;
    *(_DWORD *)v32 = 136315138;
    sub_1ABF2FF5C();
    *(_QWORD *)(v32 + 4) = sub_1ABD1FE2C(v27, v26, &v104);
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v30, v31, "Will deprecated stock, symbol=%s", (uint8_t *)v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v33, -1, -1);
    MEMORY[0x1AF438FFC](v32, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (!v29)
    goto LABEL_39;
  sub_1ABF12AF0(45, 0xE100000000000000, v99, v29);
  if ((v35 & 1) != 0)
    goto LABEL_39;
  *(_QWORD *)(v0 + 3296) = 0;
  *(_QWORD *)(v0 + 3304) = 0xE000000000000000;
  sub_1ABF31870();
  sub_1ABF316D8();
  v36 = sub_1ABF318C4();
  swift_bridgeObjectRelease();
  if ((v36 & 1) == 0)
  {
    *(_QWORD *)(v0 + 3312) = 0;
    *(_QWORD *)(v0 + 3320) = 0xE000000000000000;
    sub_1ABF31870();
    sub_1ABF316D8();
    v37 = sub_1ABF318C4();
    swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
    {
LABEL_39:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v56 = sub_1ABF31324();
      v57 = sub_1ABF31BF4();
      if (os_log_type_enabled(v56, v57))
      {
        v58 = swift_slowAlloc();
        v59 = swift_slowAlloc();
        v104 = v59;
        *(_DWORD *)v58 = 136315138;
        sub_1ABF2FF5C();
        *(_QWORD *)(v58 + 4) = sub_1ABD1FE2C(v27, v26, &v104);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1ABCEF000, v56, v57, "Deprecating %s with no replacement", (uint8_t *)v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF438FFC](v59, -1, -1);
        MEMORY[0x1AF438FFC](v58, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v60 = v26;
      v61 = *(_WORD *)(v0 + 3178);
      v62 = *(_QWORD *)(v0 + 3432);
      v63 = *(_QWORD *)(v0 + 3424);
      v64 = *(_QWORD *)(v0 + 3400);
      v65 = *(_QWORD **)(v0 + 3384);
      v66 = v65[5];
      v67 = v65[6];
      v102 = *(_OWORD *)(v0 + 3408);
      __swift_project_boxed_opaque_existential_1(v65 + 2, v66);
      *(_QWORD *)(v0 + 3232) = v64;
      *(_OWORD *)(v0 + 3240) = v102;
      *(_QWORD *)(v0 + 3256) = v63;
      *(_QWORD *)(v0 + 3264) = v62;
      *(_WORD *)(v0 + 3272) = v61;
      *(_QWORD *)(v0 + 3544) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v67 + 168))(v103, v60, v0 + 3232, v66, v67);
      swift_bridgeObjectRelease();
      v68 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 3552) = v68;
      *v68 = v0;
      v68[1] = sub_1ABD7CA20;
      return sub_1ABF31150();
    }
  }
  v97 = v26;
  v38 = *(_QWORD *)(v0 + 3416);
  sub_1ABF2FF5C();
  v39 = sub_1ABF31858();
  v40 = sub_1ABD7E26C(v39, v99, v29);
  v42 = v41;
  v44 = v43;
  v46 = v45;
  swift_bridgeObjectRelease();
  v101 = MEMORY[0x1AF437A3C](v40, v42, v44, v46);
  v48 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v49 = *(_QWORD *)(v38 + 16);
  if (!v49)
    goto LABEL_48;
  v50 = *(_QWORD *)(v0 + 3416);
  v51 = v101;
  if (*(_QWORD *)(v50 + 32) == v101 && *(_QWORD *)(v50 + 40) == v48 || (sub_1ABF3223C() & 1) != 0)
    goto LABEL_37;
  if (v49 == 1)
    goto LABEL_48;
  v91 = *(_QWORD *)(v0 + 3416);
  v51 = v101;
  if (*(_QWORD *)(v91 + 48) == v101 && *(_QWORD *)(v91 + 56) == v48 || (result = sub_1ABF3223C(), (result & 1) != 0))
  {
LABEL_37:
    swift_bridgeObjectRetain_n();
    sub_1ABF2FF5C();
    v52 = sub_1ABF31324();
    v53 = sub_1ABF31BF4();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v55 = swift_slowAlloc();
      v104 = v55;
      *(_DWORD *)v54 = 136315394;
      sub_1ABF2FF5C();
      *(_QWORD *)(v54 + 4) = sub_1ABD1FE2C(v27, v97, &v104);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v54 + 12) = 2080;
      sub_1ABF2FF5C();
      *(_QWORD *)(v54 + 14) = sub_1ABD1FE2C(v51, v48, &v104);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ABCEF000, v52, v53, "Deprecating %s and ignoring its replacement %s because it's already in the watchlist", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v55, -1, -1);
      MEMORY[0x1AF438FFC](v54, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    v69 = *(_WORD *)(v0 + 3178);
    v70 = *(_QWORD *)(v0 + 3432);
    v71 = *(_QWORD *)(v0 + 3424);
    v72 = *(_QWORD *)(v0 + 3400);
    v73 = *(_QWORD **)(v0 + 3384);
    v74 = v73[5];
    v75 = v73[6];
    v100 = *(_OWORD *)(v0 + 3408);
    __swift_project_boxed_opaque_existential_1(v73 + 2, v74);
    *(_QWORD *)(v0 + 3136) = v72;
    *(_OWORD *)(v0 + 3144) = v100;
    *(_QWORD *)(v0 + 3160) = v71;
    *(_QWORD *)(v0 + 3168) = v70;
    *(_WORD *)(v0 + 3176) = v69;
    *(_QWORD *)(v0 + 3496) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v75 + 168))(v103, v97, v0 + 3136, v74, v75);
    swift_bridgeObjectRelease();
    v76 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 3504) = v76;
    *v76 = v0;
    v76[1] = sub_1ABD7B264;
    return sub_1ABF31150();
  }
  if (v49 == 2)
  {
LABEL_48:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v77 = sub_1ABF31324();
    v78 = sub_1ABF31BF4();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = swift_slowAlloc();
      v80 = swift_slowAlloc();
      v104 = v80;
      *(_DWORD *)v79 = 136315394;
      sub_1ABF2FF5C();
      *(_QWORD *)(v79 + 4) = sub_1ABD1FE2C(v27, v97, &v104);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v79 + 12) = 2080;
      sub_1ABF2FF5C();
      *(_QWORD *)(v79 + 14) = sub_1ABD1FE2C(v101, v48, &v104);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ABCEF000, v77, v78, "Deprecating %s and replacing it with %s", (uint8_t *)v79, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v80, -1, -1);
      MEMORY[0x1AF438FFC](v79, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    v81 = v48;
    v82 = v97;
    v83 = *(_WORD *)(v0 + 3178);
    v84 = *(_QWORD *)(v0 + 3432);
    v85 = *(_QWORD *)(v0 + 3424);
    v86 = *(_QWORD *)(v0 + 3400);
    v87 = *(_QWORD **)(v0 + 3384);
    v88 = v87[5];
    v89 = v87[6];
    v98 = *(_OWORD *)(v0 + 3408);
    __swift_project_boxed_opaque_existential_1(v87 + 2, v88);
    *(_QWORD *)(v0 + 3184) = v86;
    *(_OWORD *)(v0 + 3192) = v98;
    *(_QWORD *)(v0 + 3208) = v85;
    *(_QWORD *)(v0 + 3216) = v84;
    *(_WORD *)(v0 + 3224) = v83;
    *(_QWORD *)(v0 + 3520) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v89 + 192))(v103, v82, v101, v81, v0 + 3184, v88, v89);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v90 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 3528) = v90;
    *v90 = v0;
    v90[1] = sub_1ABD7BE38;
    return sub_1ABF31150();
  }
  v92 = 0;
  v93 = 2;
  v51 = v101;
  while (1)
  {
    v94 = v93 + 1;
    if (__OFADD__(v93, 1))
      break;
    v95 = *(_QWORD *)(v0 + 3416) + v92;
    if (*(_QWORD *)(v95 + 64) == v101 && *(_QWORD *)(v95 + 72) == v48)
      goto LABEL_37;
    result = sub_1ABF3223C();
    if ((result & 1) != 0)
      goto LABEL_37;
    ++v93;
    v92 += 16;
    if (v94 == v49)
      goto LABEL_48;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD7B264()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 3512) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

void sub_1ABD7B2EC()
{
  uint64_t v0;
  unint64_t v1;
  int64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int16 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t (*v62)();
  __int16 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int16 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;

  v1 = *(_QWORD *)(v0 + 3488);
  v2 = *(_QWORD *)(v0 + 3480);
  while (v1)
  {
    v3 = __clz(__rbit64(v1));
    v1 &= v1 - 1;
    v4 = v3 | (v2 << 6);
    v5 = *(_QWORD *)(v0 + 3464);
LABEL_3:
    *(_QWORD *)(v0 + 3488) = v1;
    *(_QWORD *)(v0 + 3480) = v2;
    v6 = *(_QWORD *)(v5 + 56);
    if ((*(_BYTE *)(v6 + 104 * v4 + 80) & 1) != 0)
    {
      v12 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v4);
      v14 = *v12;
      v13 = v12[1];
      v15 = v6 + 104 * v4;
      v16 = *(_QWORD *)(v15 + 96);
      v89 = *(_QWORD *)(v15 + 88);
      sub_1ABF2FF5C();
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v17 = sub_1ABF31324();
      v18 = sub_1ABF31BF4();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        v20 = swift_slowAlloc();
        v94 = v20;
        *(_DWORD *)v19 = 136315138;
        sub_1ABF2FF5C();
        *(_QWORD *)(v19 + 4) = sub_1ABD1FE2C(v14, v13, &v94);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1ABCEF000, v17, v18, "Will deprecated stock, symbol=%s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy();
        v21 = v20;
        v22 = v14;
        MEMORY[0x1AF438FFC](v21, -1, -1);
        MEMORY[0x1AF438FFC](v19, -1, -1);

        v23 = v89;
        if (!v16)
          goto LABEL_33;
      }
      else
      {
        swift_bridgeObjectRelease_n();

        v22 = v14;
        v23 = v89;
        if (!v16)
          goto LABEL_33;
      }
      sub_1ABF12AF0(45, 0xE100000000000000, v23, v16);
      if ((v24 & 1) == 0)
      {
        *(_QWORD *)(v0 + 3296) = 0;
        *(_QWORD *)(v0 + 3304) = 0xE000000000000000;
        sub_1ABF31870();
        sub_1ABF316D8();
        v25 = sub_1ABF318C4();
        swift_bridgeObjectRelease();
        if ((v25 & 1) != 0
          || (*(_QWORD *)(v0 + 3312) = 0,
              *(_QWORD *)(v0 + 3320) = 0xE000000000000000,
              sub_1ABF31870(),
              sub_1ABF316D8(),
              v26 = sub_1ABF318C4(),
              swift_bridgeObjectRelease(),
              (v26 & 1) != 0))
        {
          v27 = v13;
          v28 = v22;
          v29 = *(_QWORD *)(v0 + 3416);
          sub_1ABF2FF5C();
          v30 = sub_1ABF31858();
          v31 = sub_1ABD7E26C(v30, v23, v16);
          v33 = v32;
          v35 = v34;
          v37 = v36;
          swift_bridgeObjectRelease();
          v38 = MEMORY[0x1AF437A3C](v31, v33, v35, v37);
          v40 = v39;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v41 = *(_QWORD *)(v29 + 16);
          v42 = v28;
          v43 = v27;
          if (v41)
          {
            v44 = *(_QWORD *)(v0 + 3416);
            if (*(_QWORD *)(v44 + 32) == v38 && *(_QWORD *)(v44 + 40) == v40 || (sub_1ABF3223C() & 1) != 0)
              goto LABEL_31;
            if (v41 != 1)
            {
              v83 = *(_QWORD *)(v0 + 3416);
              if (*(_QWORD *)(v83 + 48) == v38 && *(_QWORD *)(v83 + 56) == v40 || (sub_1ABF3223C() & 1) != 0)
              {
LABEL_31:
                swift_bridgeObjectRetain_n();
                sub_1ABF2FF5C();
                v45 = sub_1ABF31324();
                v46 = sub_1ABF31BF4();
                if (os_log_type_enabled(v45, v46))
                {
                  v47 = swift_slowAlloc();
                  v48 = swift_slowAlloc();
                  v94 = v48;
                  *(_DWORD *)v47 = 136315394;
                  sub_1ABF2FF5C();
                  *(_QWORD *)(v47 + 4) = sub_1ABD1FE2C(v42, v43, &v94);
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v47 + 12) = 2080;
                  sub_1ABF2FF5C();
                  *(_QWORD *)(v47 + 14) = sub_1ABD1FE2C(v38, v40, &v94);
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_1ABCEF000, v45, v46, "Deprecating %s and ignoring its replacement %s because it's already in the watchlist", (uint8_t *)v47, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x1AF438FFC](v48, -1, -1);
                  MEMORY[0x1AF438FFC](v47, -1, -1);
                }
                else
                {
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                }

                v63 = *(_WORD *)(v0 + 3178);
                v64 = *(_QWORD *)(v0 + 3432);
                v65 = *(_QWORD *)(v0 + 3424);
                v66 = *(_QWORD *)(v0 + 3400);
                v67 = *(_QWORD **)(v0 + 3384);
                v68 = v67[5];
                v69 = v67[6];
                v93 = *(_OWORD *)(v0 + 3408);
                __swift_project_boxed_opaque_existential_1(v67 + 2, v68);
                *(_QWORD *)(v0 + 3136) = v66;
                *(_OWORD *)(v0 + 3144) = v93;
                *(_QWORD *)(v0 + 3160) = v65;
                *(_QWORD *)(v0 + 3168) = v64;
                *(_WORD *)(v0 + 3176) = v63;
                *(_QWORD *)(v0 + 3496) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v69 + 168))(v42, v43, v0 + 3136, v68, v69);
                swift_bridgeObjectRelease();
                v70 = (_QWORD *)swift_task_alloc();
                *(_QWORD *)(v0 + 3504) = v70;
                *v70 = v0;
                v70[1] = sub_1ABD7B264;
                goto LABEL_38;
              }
              if (v41 != 2)
              {
                v84 = 0;
                v85 = 2;
                do
                {
                  v86 = v85 + 1;
                  if (__OFADD__(v85, 1))
                    goto LABEL_62;
                  v87 = *(_QWORD *)(v0 + 3416) + v84;
                  v88 = *(_QWORD *)(v87 + 64) == v38 && *(_QWORD *)(v87 + 72) == v40;
                  if (v88 || (sub_1ABF3223C() & 1) != 0)
                    goto LABEL_31;
                  ++v85;
                  v84 += 16;
                }
                while (v86 != v41);
              }
            }
          }
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v71 = sub_1ABF31324();
          v72 = sub_1ABF31BF4();
          v90 = v38;
          if (os_log_type_enabled(v71, v72))
          {
            v73 = swift_slowAlloc();
            v74 = swift_slowAlloc();
            v94 = v74;
            *(_DWORD *)v73 = 136315394;
            sub_1ABF2FF5C();
            *(_QWORD *)(v73 + 4) = sub_1ABD1FE2C(v42, v43, &v94);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v73 + 12) = 2080;
            sub_1ABF2FF5C();
            *(_QWORD *)(v73 + 14) = sub_1ABD1FE2C(v38, v40, &v94);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1ABCEF000, v71, v72, "Deprecating %s and replacing it with %s", (uint8_t *)v73, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1AF438FFC](v74, -1, -1);
            MEMORY[0x1AF438FFC](v73, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }

          v75 = v42;
          v76 = *(_WORD *)(v0 + 3178);
          v77 = *(_QWORD *)(v0 + 3432);
          v78 = *(_QWORD *)(v0 + 3424);
          v79 = *(_QWORD *)(v0 + 3400);
          v80 = *(_QWORD **)(v0 + 3384);
          v81 = v80[5];
          v82 = v80[6];
          v91 = *(_OWORD *)(v0 + 3408);
          __swift_project_boxed_opaque_existential_1(v80 + 2, v81);
          *(_QWORD *)(v0 + 3184) = v79;
          *(_OWORD *)(v0 + 3192) = v91;
          *(_QWORD *)(v0 + 3208) = v78;
          *(_QWORD *)(v0 + 3216) = v77;
          *(_WORD *)(v0 + 3224) = v76;
          *(_QWORD *)(v0 + 3520) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v82 + 192))(v75, v43, v90, v40, v0 + 3184, v81, v82);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v61 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 3528) = v61;
          v62 = sub_1ABD7BE38;
          goto LABEL_37;
        }
      }
LABEL_33:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v49 = sub_1ABF31324();
      v50 = sub_1ABF31BF4();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = swift_slowAlloc();
        v52 = swift_slowAlloc();
        v94 = v52;
        *(_DWORD *)v51 = 136315138;
        sub_1ABF2FF5C();
        *(_QWORD *)(v51 + 4) = sub_1ABD1FE2C(v22, v13, &v94);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1ABCEF000, v49, v50, "Deprecating %s with no replacement", (uint8_t *)v51, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF438FFC](v52, -1, -1);
        MEMORY[0x1AF438FFC](v51, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v53 = v22;
      v54 = *(_WORD *)(v0 + 3178);
      v55 = *(_QWORD *)(v0 + 3432);
      v56 = *(_QWORD *)(v0 + 3424);
      v57 = *(_QWORD *)(v0 + 3400);
      v58 = *(_QWORD **)(v0 + 3384);
      v59 = v58[5];
      v60 = v58[6];
      v92 = *(_OWORD *)(v0 + 3408);
      __swift_project_boxed_opaque_existential_1(v58 + 2, v59);
      *(_QWORD *)(v0 + 3232) = v57;
      *(_OWORD *)(v0 + 3240) = v92;
      *(_QWORD *)(v0 + 3256) = v56;
      *(_QWORD *)(v0 + 3264) = v55;
      *(_WORD *)(v0 + 3272) = v54;
      *(_QWORD *)(v0 + 3544) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v60 + 168))(v53, v13, v0 + 3232, v59, v60);
      swift_bridgeObjectRelease();
      v61 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 3552) = v61;
      v62 = sub_1ABD7CA20;
LABEL_37:
      *v61 = v0;
      v61[1] = v62;
LABEL_38:
      sub_1ABF31150();
      return;
    }
  }
  v7 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  v8 = (unint64_t)((1 << *(_BYTE *)(v0 + 3180)) + 63) >> 6;
  v5 = *(_QWORD *)(v0 + 3464);
  if (v7 >= v8)
    goto LABEL_22;
  v9 = v5 + 64;
  v10 = *(_QWORD *)(v5 + 64 + 8 * v7);
  ++v2;
  if (v10)
    goto LABEL_18;
  v2 = v7 + 1;
  if (v7 + 1 >= v8)
    goto LABEL_22;
  v10 = *(_QWORD *)(v9 + 8 * v2);
  if (v10)
    goto LABEL_18;
  v2 = v7 + 2;
  if (v7 + 2 >= v8)
    goto LABEL_22;
  v10 = *(_QWORD *)(v9 + 8 * v2);
  if (v10)
  {
LABEL_18:
    v1 = (v10 - 1) & v10;
    v4 = __clz(__rbit64(v10)) + (v2 << 6);
    goto LABEL_3;
  }
  v11 = v7 + 3;
  if (v11 >= v8)
  {
LABEL_22:
    swift_release();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v10 = *(_QWORD *)(v9 + 8 * v11);
  if (v10)
  {
    v2 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v2 >= v8)
      goto LABEL_22;
    v10 = *(_QWORD *)(v9 + 8 * v2);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
}

uint64_t sub_1ABD7BE38()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 3536) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

void sub_1ABD7BEC0()
{
  uint64_t v0;
  unint64_t v1;
  int64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t (*v63)();
  uint64_t v64;
  __int16 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int16 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;

  v1 = *(_QWORD *)(v0 + 3488);
  v2 = *(_QWORD *)(v0 + 3480);
  while (v1)
  {
    v3 = __clz(__rbit64(v1));
    v1 &= v1 - 1;
    v4 = v3 | (v2 << 6);
    v5 = *(_QWORD *)(v0 + 3464);
LABEL_3:
    *(_QWORD *)(v0 + 3488) = v1;
    *(_QWORD *)(v0 + 3480) = v2;
    v6 = *(_QWORD *)(v5 + 56);
    if ((*(_BYTE *)(v6 + 104 * v4 + 80) & 1) != 0)
    {
      v12 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v4);
      v14 = *v12;
      v13 = v12[1];
      v15 = v6 + 104 * v4;
      v16 = *(_QWORD *)(v15 + 96);
      v91 = *(_QWORD *)(v15 + 88);
      sub_1ABF2FF5C();
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v17 = sub_1ABF31324();
      v18 = sub_1ABF31BF4();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        v20 = swift_slowAlloc();
        v96 = v20;
        *(_DWORD *)v19 = 136315138;
        sub_1ABF2FF5C();
        *(_QWORD *)(v19 + 4) = sub_1ABD1FE2C(v14, v13, &v96);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1ABCEF000, v17, v18, "Will deprecated stock, symbol=%s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy();
        v21 = v20;
        v22 = v14;
        MEMORY[0x1AF438FFC](v21, -1, -1);
        MEMORY[0x1AF438FFC](v19, -1, -1);

        v23 = v91;
        if (!v16)
          goto LABEL_33;
      }
      else
      {
        swift_bridgeObjectRelease_n();

        v22 = v14;
        v23 = v91;
        if (!v16)
          goto LABEL_33;
      }
      sub_1ABF12AF0(45, 0xE100000000000000, v23, v16);
      if ((v24 & 1) == 0)
      {
        *(_QWORD *)(v0 + 3296) = 0;
        *(_QWORD *)(v0 + 3304) = 0xE000000000000000;
        sub_1ABF31870();
        sub_1ABF316D8();
        v25 = sub_1ABF318C4();
        swift_bridgeObjectRelease();
        if ((v25 & 1) != 0
          || (*(_QWORD *)(v0 + 3312) = 0,
              *(_QWORD *)(v0 + 3320) = 0xE000000000000000,
              sub_1ABF31870(),
              sub_1ABF316D8(),
              v26 = sub_1ABF318C4(),
              swift_bridgeObjectRelease(),
              (v26 & 1) != 0))
        {
          v27 = v13;
          v28 = v22;
          v29 = *(_QWORD *)(v0 + 3416);
          sub_1ABF2FF5C();
          v30 = sub_1ABF31858();
          v31 = sub_1ABD7E26C(v30, v23, v16);
          v33 = v32;
          v35 = v34;
          v37 = v36;
          swift_bridgeObjectRelease();
          v38 = MEMORY[0x1AF437A3C](v31, v33, v35, v37);
          v40 = v39;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v41 = *(_QWORD *)(v29 + 16);
          v42 = v28;
          v43 = v27;
          if (v41)
          {
            v44 = *(_QWORD *)(v0 + 3416);
            v45 = v38;
            if (*(_QWORD *)(v44 + 32) == v38 && *(_QWORD *)(v44 + 40) == v40 || (sub_1ABF3223C() & 1) != 0)
              goto LABEL_31;
            if (v41 != 1)
            {
              v85 = *(_QWORD *)(v0 + 3416);
              v45 = v38;
              if (*(_QWORD *)(v85 + 48) == v38 && *(_QWORD *)(v85 + 56) == v40 || (sub_1ABF3223C() & 1) != 0)
              {
LABEL_31:
                swift_bridgeObjectRetain_n();
                sub_1ABF2FF5C();
                v46 = sub_1ABF31324();
                v47 = sub_1ABF31BF4();
                if (os_log_type_enabled(v46, v47))
                {
                  v48 = swift_slowAlloc();
                  v49 = swift_slowAlloc();
                  v96 = v49;
                  *(_DWORD *)v48 = 136315394;
                  sub_1ABF2FF5C();
                  *(_QWORD *)(v48 + 4) = sub_1ABD1FE2C(v42, v43, &v96);
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v48 + 12) = 2080;
                  sub_1ABF2FF5C();
                  *(_QWORD *)(v48 + 14) = sub_1ABD1FE2C(v45, v40, &v96);
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_1ABCEF000, v46, v47, "Deprecating %s and ignoring its replacement %s because it's already in the watchlist", (uint8_t *)v48, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x1AF438FFC](v49, -1, -1);
                  MEMORY[0x1AF438FFC](v48, -1, -1);
                }
                else
                {
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                }

                v64 = v42;
                v65 = *(_WORD *)(v0 + 3178);
                v66 = *(_QWORD *)(v0 + 3432);
                v67 = *(_QWORD *)(v0 + 3424);
                v68 = *(_QWORD *)(v0 + 3400);
                v69 = *(_QWORD **)(v0 + 3384);
                v70 = v69[5];
                v71 = v69[6];
                v94 = *(_OWORD *)(v0 + 3408);
                __swift_project_boxed_opaque_existential_1(v69 + 2, v70);
                *(_QWORD *)(v0 + 3136) = v68;
                *(_OWORD *)(v0 + 3144) = v94;
                *(_QWORD *)(v0 + 3160) = v67;
                *(_QWORD *)(v0 + 3168) = v66;
                *(_WORD *)(v0 + 3176) = v65;
                *(_QWORD *)(v0 + 3496) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v71 + 168))(v64, v43, v0 + 3136, v70, v71);
                swift_bridgeObjectRelease();
                v62 = (_QWORD *)swift_task_alloc();
                *(_QWORD *)(v0 + 3504) = v62;
                v63 = sub_1ABD7B264;
                goto LABEL_37;
              }
              if (v41 != 2)
              {
                v86 = 0;
                v87 = 2;
                do
                {
                  v88 = v87 + 1;
                  if (__OFADD__(v87, 1))
                    goto LABEL_62;
                  v89 = *(_QWORD *)(v0 + 3416) + v86;
                  v45 = v38;
                  v90 = *(_QWORD *)(v89 + 64) == v38 && *(_QWORD *)(v89 + 72) == v40;
                  if (v90 || (sub_1ABF3223C() & 1) != 0)
                    goto LABEL_31;
                  ++v87;
                  v86 += 16;
                }
                while (v88 != v41);
              }
            }
          }
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v72 = sub_1ABF31324();
          v73 = sub_1ABF31BF4();
          v95 = v38;
          if (os_log_type_enabled(v72, v73))
          {
            v74 = swift_slowAlloc();
            v75 = swift_slowAlloc();
            v96 = v75;
            *(_DWORD *)v74 = 136315394;
            sub_1ABF2FF5C();
            *(_QWORD *)(v74 + 4) = sub_1ABD1FE2C(v42, v43, &v96);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v74 + 12) = 2080;
            sub_1ABF2FF5C();
            *(_QWORD *)(v74 + 14) = sub_1ABD1FE2C(v38, v40, &v96);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1ABCEF000, v72, v73, "Deprecating %s and replacing it with %s", (uint8_t *)v74, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1AF438FFC](v75, -1, -1);
            MEMORY[0x1AF438FFC](v74, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }

          v76 = v42;
          v77 = *(_WORD *)(v0 + 3178);
          v78 = *(_QWORD *)(v0 + 3432);
          v79 = *(_QWORD *)(v0 + 3424);
          v80 = *(_QWORD *)(v0 + 3400);
          v81 = *(_QWORD **)(v0 + 3384);
          v82 = v81[5];
          v83 = v81[6];
          v92 = *(_OWORD *)(v0 + 3408);
          __swift_project_boxed_opaque_existential_1(v81 + 2, v82);
          *(_QWORD *)(v0 + 3184) = v80;
          *(_OWORD *)(v0 + 3192) = v92;
          *(_QWORD *)(v0 + 3208) = v79;
          *(_QWORD *)(v0 + 3216) = v78;
          *(_WORD *)(v0 + 3224) = v77;
          *(_QWORD *)(v0 + 3520) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v83 + 192))(v76, v43, v95, v40, v0 + 3184, v82, v83);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v84 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 3528) = v84;
          *v84 = v0;
          v84[1] = sub_1ABD7BE38;
          goto LABEL_38;
        }
      }
LABEL_33:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v50 = sub_1ABF31324();
      v51 = sub_1ABF31BF4();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        v96 = v53;
        *(_DWORD *)v52 = 136315138;
        sub_1ABF2FF5C();
        *(_QWORD *)(v52 + 4) = sub_1ABD1FE2C(v22, v13, &v96);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1ABCEF000, v50, v51, "Deprecating %s with no replacement", (uint8_t *)v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF438FFC](v53, -1, -1);
        MEMORY[0x1AF438FFC](v52, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v54 = v22;
      v55 = *(_WORD *)(v0 + 3178);
      v56 = *(_QWORD *)(v0 + 3432);
      v57 = *(_QWORD *)(v0 + 3424);
      v58 = *(_QWORD *)(v0 + 3400);
      v59 = *(_QWORD **)(v0 + 3384);
      v60 = v59[5];
      v61 = v59[6];
      v93 = *(_OWORD *)(v0 + 3408);
      __swift_project_boxed_opaque_existential_1(v59 + 2, v60);
      *(_QWORD *)(v0 + 3232) = v58;
      *(_OWORD *)(v0 + 3240) = v93;
      *(_QWORD *)(v0 + 3256) = v57;
      *(_QWORD *)(v0 + 3264) = v56;
      *(_WORD *)(v0 + 3272) = v55;
      *(_QWORD *)(v0 + 3544) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v61 + 168))(v54, v13, v0 + 3232, v60, v61);
      swift_bridgeObjectRelease();
      v62 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 3552) = v62;
      v63 = sub_1ABD7CA20;
LABEL_37:
      *v62 = v0;
      v62[1] = v63;
LABEL_38:
      sub_1ABF31150();
      return;
    }
  }
  v7 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  v8 = (unint64_t)((1 << *(_BYTE *)(v0 + 3180)) + 63) >> 6;
  v5 = *(_QWORD *)(v0 + 3464);
  if (v7 >= v8)
    goto LABEL_22;
  v9 = v5 + 64;
  v10 = *(_QWORD *)(v5 + 64 + 8 * v7);
  ++v2;
  if (v10)
    goto LABEL_18;
  v2 = v7 + 1;
  if (v7 + 1 >= v8)
    goto LABEL_22;
  v10 = *(_QWORD *)(v9 + 8 * v2);
  if (v10)
    goto LABEL_18;
  v2 = v7 + 2;
  if (v7 + 2 >= v8)
    goto LABEL_22;
  v10 = *(_QWORD *)(v9 + 8 * v2);
  if (v10)
  {
LABEL_18:
    v1 = (v10 - 1) & v10;
    v4 = __clz(__rbit64(v10)) + (v2 << 6);
    goto LABEL_3;
  }
  v11 = v7 + 3;
  if (v11 >= v8)
  {
LABEL_22:
    swift_release();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v10 = *(_QWORD *)(v9 + 8 * v11);
  if (v10)
  {
    v2 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v2 >= v8)
      goto LABEL_22;
    v10 = *(_QWORD *)(v9 + 8 * v2);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
}

uint64_t sub_1ABD7CA20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 3560) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_bridgeObjectRelease();
  swift_release();
  return swift_task_switch();
}

void sub_1ABD7CAA8()
{
  uint64_t v0;
  unint64_t v1;
  int64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  __int16 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int16 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  unint64_t v89;
  uint64_t v90;

  v1 = *(_QWORD *)(v0 + 3488);
  v2 = *(_QWORD *)(v0 + 3480);
  while (v1)
  {
    v3 = __clz(__rbit64(v1));
    v1 &= v1 - 1;
    v4 = v3 | (v2 << 6);
    v5 = *(_QWORD *)(v0 + 3464);
LABEL_3:
    *(_QWORD *)(v0 + 3488) = v1;
    *(_QWORD *)(v0 + 3480) = v2;
    v6 = *(_QWORD *)(v5 + 56);
    if ((*(_BYTE *)(v6 + 104 * v4 + 80) & 1) != 0)
    {
      v12 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v4);
      v14 = *v12;
      v13 = v12[1];
      v15 = v6 + 104 * v4;
      v16 = *(_QWORD *)(v15 + 96);
      v84 = *(_QWORD *)(v15 + 88);
      sub_1ABF2FF5C();
      v89 = v13;
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v17 = sub_1ABF31324();
      v18 = sub_1ABF31BF4();
      v83 = v14;
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        v20 = swift_slowAlloc();
        v90 = v20;
        *(_DWORD *)v19 = 136315138;
        sub_1ABF2FF5C();
        *(_QWORD *)(v19 + 4) = sub_1ABD1FE2C(v14, v13, &v90);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1ABCEF000, v17, v18, "Will deprecated stock, symbol=%s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF438FFC](v20, -1, -1);
        MEMORY[0x1AF438FFC](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      if (!v16)
        goto LABEL_33;
      sub_1ABF12AF0(45, 0xE100000000000000, v84, v16);
      if ((v21 & 1) != 0)
        goto LABEL_33;
      *(_QWORD *)(v0 + 3296) = 0;
      *(_QWORD *)(v0 + 3304) = 0xE000000000000000;
      sub_1ABF31870();
      sub_1ABF316D8();
      v22 = sub_1ABF318C4();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
      {
        *(_QWORD *)(v0 + 3312) = 0;
        *(_QWORD *)(v0 + 3320) = 0xE000000000000000;
        sub_1ABF31870();
        sub_1ABF316D8();
        v23 = sub_1ABF318C4();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
LABEL_33:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          v43 = sub_1ABF31324();
          v44 = sub_1ABF31BF4();
          if (os_log_type_enabled(v43, v44))
          {
            v45 = swift_slowAlloc();
            v46 = swift_slowAlloc();
            v90 = v46;
            *(_DWORD *)v45 = 136315138;
            sub_1ABF2FF5C();
            v47 = v14;
            *(_QWORD *)(v45 + 4) = sub_1ABD1FE2C(v14, v89, &v90);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1ABCEF000, v43, v44, "Deprecating %s with no replacement", (uint8_t *)v45, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AF438FFC](v46, -1, -1);
            MEMORY[0x1AF438FFC](v45, -1, -1);

          }
          else
          {
            swift_bridgeObjectRelease_n();

            v47 = v14;
          }
          v48 = *(_WORD *)(v0 + 3178);
          v49 = *(_QWORD *)(v0 + 3432);
          v50 = *(_QWORD *)(v0 + 3424);
          v51 = *(_QWORD *)(v0 + 3400);
          v52 = *(_QWORD **)(v0 + 3384);
          v53 = v52[5];
          v54 = v52[6];
          v87 = *(_OWORD *)(v0 + 3408);
          __swift_project_boxed_opaque_existential_1(v52 + 2, v53);
          *(_QWORD *)(v0 + 3232) = v51;
          *(_OWORD *)(v0 + 3240) = v87;
          *(_QWORD *)(v0 + 3256) = v50;
          *(_QWORD *)(v0 + 3264) = v49;
          *(_WORD *)(v0 + 3272) = v48;
          *(_QWORD *)(v0 + 3544) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v54 + 168))(v47, v89, v0 + 3232, v53, v54);
          swift_bridgeObjectRelease();
          v55 = (_QWORD *)swift_task_alloc();
          *(_QWORD *)(v0 + 3552) = v55;
          *v55 = v0;
          v55[1] = sub_1ABD7CA20;
          goto LABEL_37;
        }
      }
      v24 = *(_QWORD *)(v0 + 3416);
      sub_1ABF2FF5C();
      v25 = sub_1ABF31858();
      v26 = sub_1ABD7E26C(v25, v84, v16);
      v28 = v27;
      v30 = v29;
      v32 = v31;
      swift_bridgeObjectRelease();
      v33 = MEMORY[0x1AF437A3C](v26, v28, v30, v32);
      v35 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = *(_QWORD *)(v24 + 16);
      if (v36)
      {
        v37 = *(_QWORD *)(v0 + 3416);
        if (*(_QWORD *)(v37 + 32) == v33 && *(_QWORD *)(v37 + 40) == v35 || (sub_1ABF3223C() & 1) != 0)
          goto LABEL_31;
        if (v36 != 1)
        {
          v77 = *(_QWORD *)(v0 + 3416);
          if (*(_QWORD *)(v77 + 48) == v33 && *(_QWORD *)(v77 + 56) == v35 || (sub_1ABF3223C() & 1) != 0)
          {
LABEL_31:
            swift_bridgeObjectRetain_n();
            sub_1ABF2FF5C();
            v38 = sub_1ABF31324();
            v39 = sub_1ABF31BF4();
            if (os_log_type_enabled(v38, v39))
            {
              v40 = swift_slowAlloc();
              v41 = swift_slowAlloc();
              v90 = v41;
              *(_DWORD *)v40 = 136315394;
              sub_1ABF2FF5C();
              *(_QWORD *)(v40 + 4) = sub_1ABD1FE2C(v83, v89, &v90);
              v42 = v83;
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v40 + 12) = 2080;
              sub_1ABF2FF5C();
              *(_QWORD *)(v40 + 14) = sub_1ABD1FE2C(v33, v35, &v90);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1ABCEF000, v38, v39, "Deprecating %s and ignoring its replacement %s because it's already in the watchlist", (uint8_t *)v40, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1AF438FFC](v41, -1, -1);
              MEMORY[0x1AF438FFC](v40, -1, -1);

            }
            else
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();

              v42 = v83;
            }
            v56 = *(_WORD *)(v0 + 3178);
            v57 = *(_QWORD *)(v0 + 3432);
            v58 = *(_QWORD *)(v0 + 3424);
            v59 = *(_QWORD *)(v0 + 3400);
            v60 = *(_QWORD **)(v0 + 3384);
            v61 = v60[5];
            v62 = v60[6];
            v88 = *(_OWORD *)(v0 + 3408);
            __swift_project_boxed_opaque_existential_1(v60 + 2, v61);
            *(_QWORD *)(v0 + 3136) = v59;
            *(_OWORD *)(v0 + 3144) = v88;
            *(_QWORD *)(v0 + 3160) = v58;
            *(_QWORD *)(v0 + 3168) = v57;
            *(_WORD *)(v0 + 3176) = v56;
            *(_QWORD *)(v0 + 3496) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v62 + 168))(v42, v89, v0 + 3136, v61, v62);
            swift_bridgeObjectRelease();
            v63 = (_QWORD *)swift_task_alloc();
            *(_QWORD *)(v0 + 3504) = v63;
            *v63 = v0;
            v63[1] = sub_1ABD7B264;
LABEL_37:
            sub_1ABF31150();
            return;
          }
          if (v36 != 2)
          {
            v78 = 0;
            v79 = 2;
            do
            {
              v80 = v79 + 1;
              if (__OFADD__(v79, 1))
                goto LABEL_61;
              v81 = *(_QWORD *)(v0 + 3416) + v78;
              v82 = *(_QWORD *)(v81 + 64) == v33 && *(_QWORD *)(v81 + 72) == v35;
              if (v82 || (sub_1ABF3223C() & 1) != 0)
                goto LABEL_31;
              ++v79;
              v78 += 16;
            }
            while (v80 != v36);
          }
        }
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v64 = sub_1ABF31324();
      v65 = sub_1ABF31BF4();
      v85 = v33;
      if (os_log_type_enabled(v64, v65))
      {
        v66 = swift_slowAlloc();
        v67 = swift_slowAlloc();
        v90 = v67;
        *(_DWORD *)v66 = 136315394;
        sub_1ABF2FF5C();
        *(_QWORD *)(v66 + 4) = sub_1ABD1FE2C(v83, v89, &v90);
        v68 = v83;
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v66 + 12) = 2080;
        sub_1ABF2FF5C();
        *(_QWORD *)(v66 + 14) = sub_1ABD1FE2C(v33, v35, &v90);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1ABCEF000, v64, v65, "Deprecating %s and replacing it with %s", (uint8_t *)v66, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF438FFC](v67, -1, -1);
        MEMORY[0x1AF438FFC](v66, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        v68 = v83;
      }
      v69 = *(_WORD *)(v0 + 3178);
      v70 = *(_QWORD *)(v0 + 3432);
      v71 = *(_QWORD *)(v0 + 3424);
      v72 = *(_QWORD *)(v0 + 3400);
      v73 = *(_QWORD **)(v0 + 3384);
      v74 = v73[5];
      v75 = v73[6];
      v86 = *(_OWORD *)(v0 + 3408);
      __swift_project_boxed_opaque_existential_1(v73 + 2, v74);
      *(_QWORD *)(v0 + 3184) = v72;
      *(_OWORD *)(v0 + 3192) = v86;
      *(_QWORD *)(v0 + 3208) = v71;
      *(_QWORD *)(v0 + 3216) = v70;
      *(_WORD *)(v0 + 3224) = v69;
      *(_QWORD *)(v0 + 3520) = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v75 + 192))(v68, v89, v85, v35, v0 + 3184, v74, v75);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v76 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 3528) = v76;
      *v76 = v0;
      v76[1] = sub_1ABD7BE38;
      goto LABEL_37;
    }
  }
  v7 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_60;
  }
  v8 = (unint64_t)((1 << *(_BYTE *)(v0 + 3180)) + 63) >> 6;
  v5 = *(_QWORD *)(v0 + 3464);
  if (v7 >= v8)
    goto LABEL_21;
  v9 = v5 + 64;
  v10 = *(_QWORD *)(v5 + 64 + 8 * v7);
  ++v2;
  if (v10)
    goto LABEL_18;
  v2 = v7 + 1;
  if (v7 + 1 >= v8)
    goto LABEL_21;
  v10 = *(_QWORD *)(v9 + 8 * v2);
  if (v10)
    goto LABEL_18;
  v2 = v7 + 2;
  if (v7 + 2 >= v8)
    goto LABEL_21;
  v10 = *(_QWORD *)(v9 + 8 * v2);
  if (v10)
  {
LABEL_18:
    v1 = (v10 - 1) & v10;
    v4 = __clz(__rbit64(v10)) + (v2 << 6);
    goto LABEL_3;
  }
  v11 = v7 + 3;
  if (v11 >= v8)
  {
LABEL_21:
    swift_release();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v10 = *(_QWORD *)(v9 + 8 * v11);
  if (v10)
  {
    v2 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v2 >= v8)
      goto LABEL_21;
    v10 = *(_QWORD *)(v9 + 8 * v2);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
}

uint64_t sub_1ABD7D61C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  swift_release();
  v1 = *(void **)(v0 + 3456);
  if (qword_1ED34CA78 != -1)
    swift_once();
  v2 = sub_1ABF3133C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED3683C8);
  v3 = v1;
  v4 = v1;
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BE8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 3360) = v10;
    sub_1ABF31D80();
    *v8 = v10;

    _os_log_impl(&dword_1ABCEF000, v5, v6, "Failed to deprecate stock in watchlist. Error=%@", v7, 0xCu);
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34E160, (void (*)(uint64_t))sub_1ABD7E230);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD7D800()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  swift_release();
  v1 = *(void **)(v0 + 3512);
  if (qword_1ED34CA78 != -1)
    swift_once();
  v2 = sub_1ABF3133C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED3683C8);
  v3 = v1;
  v4 = v1;
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BE8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 3360) = v10;
    sub_1ABF31D80();
    *v8 = v10;

    _os_log_impl(&dword_1ABCEF000, v5, v6, "Failed to deprecate stock in watchlist. Error=%@", v7, 0xCu);
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34E160, (void (*)(uint64_t))sub_1ABD7E230);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD7D9DC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  swift_release();
  v1 = *(void **)(v0 + 3536);
  if (qword_1ED34CA78 != -1)
    swift_once();
  v2 = sub_1ABF3133C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED3683C8);
  v3 = v1;
  v4 = v1;
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BE8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 3360) = v10;
    sub_1ABF31D80();
    *v8 = v10;

    _os_log_impl(&dword_1ABCEF000, v5, v6, "Failed to deprecate stock in watchlist. Error=%@", v7, 0xCu);
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34E160, (void (*)(uint64_t))sub_1ABD7E230);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD7DBB8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  swift_release();
  v1 = *(void **)(v0 + 3560);
  if (qword_1ED34CA78 != -1)
    swift_once();
  v2 = sub_1ABF3133C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED3683C8);
  v3 = v1;
  v4 = v1;
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BE8();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 3360) = v10;
    sub_1ABF31D80();
    *v8 = v10;

    _os_log_impl(&dword_1ABCEF000, v5, v6, "Failed to deprecate stock in watchlist. Error=%@", v7, 0xCu);
    sub_1ABD00308(0, (unint64_t *)&qword_1ED34E160, (void (*)(uint64_t))sub_1ABD7E230);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD7DD94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1ABD37AA0;
  v3[10] = v2;
  return swift_task_switch();
}

uint64_t sub_1ABD7DDF4(uint64_t a1)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16 = *(_QWORD *)(a1 + 632);
  v17 = *(_QWORD *)(a1 + 624);
  v14 = *(_QWORD *)(a1 + 648);
  v15 = *(_QWORD *)(a1 + 640);
  v12 = *(_QWORD *)(a1 + 664);
  v13 = *(_QWORD *)(a1 + 656);
  v10 = *(_QWORD *)(a1 + 680);
  v11 = *(_QWORD *)(a1 + 672);
  v9 = *(_OWORD *)(a1 + 688);
  v7 = *(_OWORD *)(a1 + 720);
  v8 = *(_OWORD *)(a1 + 704);
  v6 = *(_OWORD *)(a1 + 736);
  v4 = *(_OWORD *)(a1 + 768);
  v5 = *(_OWORD *)(a1 + 752);
  v3 = *(_QWORD *)(a1 + 784);
  v18 = *(_QWORD *)(a1 + 2864);
  v19 = *(_QWORD *)(a1 + 2856);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABD1A400(v17, v16, v15, v14, v13, v12, v11, v10, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABD1A50C(v19, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABD7E1E0(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1ABD7E230()
{
  unint64_t result;

  result = qword_1ED34E158;
  if (!qword_1ED34E158)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34E158);
  }
  return result;
}

unint64_t sub_1ABD7E26C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1ABF318E8();
  __break(1u);
  return result;
}

uint64_t destroy for SDSNewsResponse(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for SDSNewsResponse(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *a1 = *a2;
  v4 = a1 + 1;
  v5 = a2[2];
  sub_1ABF2FF5C();
  if (v5)
  {
    a1[1] = a2[1];
    a1[2] = v5;
    v6 = a2[4];
    a1[3] = a2[3];
    a1[4] = v6;
    a1[5] = a2[5];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *v4 = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 3) = v7;
    a1[5] = a2[5];
  }
  return a1;
}

_QWORD *assignWithCopy for SDSNewsResponse(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2 + 1;
  v6 = a2[2];
  if (a1[2])
  {
    if (v6)
    {
      a1[1] = a2[1];
      a1[2] = a2[2];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[3] = a2[3];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD7E4BC((uint64_t)(a1 + 1));
      v7 = a2[5];
      v8 = *(_OWORD *)(a2 + 3);
      *v4 = *v5;
      *(_OWORD *)(a1 + 3) = v8;
      a1[5] = v7;
    }
  }
  else if (v6)
  {
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v9 = *v5;
    v10 = *(_OWORD *)(a2 + 3);
    a1[5] = a2[5];
    *v4 = v9;
    *(_OWORD *)(a1 + 3) = v10;
  }
  return a1;
}

uint64_t sub_1ABD7E4BC(uint64_t a1)
{
  destroy for SDSMetadata.Source();
  return a1;
}

uint64_t assignWithTake for SDSNewsResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    sub_1ABD7E4BC(a1 + 8);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    return a1;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSNewsResponse(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSNewsResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSNewsResponse()
{
  return &type metadata for SDSNewsResponse;
}

uint64_t sub_1ABD7E630(char *a1, char *a2)
{
  return sub_1ABDE3A8C(*a1, *a2);
}

uint64_t sub_1ABD7E63C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABD7E6C8()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD7E730()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABD7E7B8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1ABD7E814(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6D6574497377656ELL;
  if (*v1)
    v2 = 0x646174654D736473;
  v3 = 0xE900000000000073;
  if (*v1)
    v3 = 0xEB00000000617461;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABD7E860()
{
  _BYTE *v0;

  if (*v0)
    return 0x646174654D736473;
  else
    return 0x6D6574497377656ELL;
}

uint64_t sub_1ABD7E8A8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1ABD7E908()
{
  sub_1ABD7F72C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD7E930()
{
  sub_1ABD7F72C();
  return sub_1ABF32398();
}

uint64_t sub_1ABD7E958(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[5];
  _BYTE v12[40];
  char v13;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1EEC42048, (uint64_t (*)(void))sub_1ABD7F72C, (uint64_t)&type metadata for SDSNewsResponse.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD7F72C();
  sub_1ABF32368();
  v11[0] = *v3;
  v13 = 0;
  sub_1ABD04578(0, &qword_1EEC42030, (uint64_t)&type metadata for SDSNewsResponse.SDSNewsResponseItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD7F7B4(&qword_1EEC42050, (uint64_t (*)(void))sub_1ABD7F830, MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  if (!v2)
  {
    sub_1ABD66AC8((uint64_t)(v3 + 1), (uint64_t)v12);
    sub_1ABD66AC8((uint64_t)v12, (uint64_t)v11);
    v13 = 1;
    sub_1ABD46480();
    sub_1ABF3217C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1ABD7EB04(char *a1)
{
  sub_1ABDE3B3C(*a1);
}

void sub_1ABD7EB10()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABD7EB5C()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABD7EBE0()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD7EC1C()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD7EC8C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABD7ECD4()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABD7ED58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABD7FD18();
  *a1 = result;
  return result;
}

uint64_t sub_1ABD7ED84()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABD7EDB4 + 4 * byte_1ABF382CF[*v0]))();
}

void sub_1ABD7EDB4(_QWORD *a1@<X8>)
{
  *a1 = 0x446873696C627570;
  a1[1] = 0xEB00000000657461;
}

void sub_1ABD7EDD8(_QWORD *a1@<X8>)
{
  *a1 = 0x7972616D6D7573;
  a1[1] = 0xE700000000000000;
}

void sub_1ABD7EDF4(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

void sub_1ABD7EE0C(_QWORD *a1@<X8>)
{
  *a1 = 7107189;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1ABD7EE20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABD7EE50 + 4 * byte_1ABF382D4[*v0]))(0x72656469766F7270, 0xE800000000000000);
}

uint64_t sub_1ABD7EE50()
{
  return 0x446873696C627570;
}

uint64_t sub_1ABD7EE70()
{
  return 0x7972616D6D7573;
}

uint64_t sub_1ABD7EE88()
{
  return 0x656C746974;
}

uint64_t sub_1ABD7EE9C()
{
  return 7107189;
}

uint64_t sub_1ABD7EEAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABD7FD18();
  *a1 = result;
  return result;
}

void sub_1ABD7EED0(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1ABD7EEDC()
{
  sub_1ABD80000();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD7EF04()
{
  sub_1ABD80000();
  return sub_1ABF32398();
}

uint64_t sub_1ABD7EF2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;

  sub_1ABCF4DA8(0, &qword_1EEC42088, (uint64_t (*)(void))sub_1ABD80000, (uint64_t)&type metadata for SDSNewsResponse.SDSNewsResponseItem.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD80000();
  sub_1ABF32368();
  v14 = 0;
  sub_1ABF32194();
  if (!v1)
  {
    v13 = 1;
    sub_1ABF32194();
    v12 = 2;
    sub_1ABF32140();
    v11 = 3;
    sub_1ABF32194();
    v10 = 4;
    sub_1ABF32194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

__n128 sub_1ABD7F0D4@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_1ABD7FD60(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1ABD7F11C(_QWORD *a1)
{
  return sub_1ABD7EF2C(a1);
}

uint64_t sub_1ABD7F130(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_1ABD7F244(v8, v9) & 1;
}

double sub_1ABD7F188@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1ABD7F500(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1ABD7F1C8(_QWORD *a1)
{
  return sub_1ABD7E958(a1);
}

uint64_t sub_1ABD7F200(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_1ABD7F35C((uint64_t *)v7, (uint64_t *)v8) & 1;
}

uint64_t sub_1ABD7F244(_QWORD *a1, _QWORD *a2)
{
  char v5;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v5 = sub_1ABF3223C();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  if (a1[2] != a2[2] || a1[3] != a2[3])
  {
    v8 = sub_1ABF3223C();
    result = 0;
    if ((v8 & 1) == 0)
      return result;
  }
  v9 = a1[5];
  v10 = a2[5];
  if (v9)
  {
    if (v10)
    {
      if (a1[4] != a2[4] || v9 != v10)
      {
        v11 = sub_1ABF3223C();
        result = 0;
        if ((v11 & 1) == 0)
          return result;
      }
      goto LABEL_19;
    }
    return 0;
  }
  if (v10)
    return 0;
LABEL_19:
  if (a1[6] == a2[6] && a1[7] == a2[7] || (v12 = sub_1ABF3223C(), result = 0, (v12 & 1) != 0))
  {
    if (a1[8] == a2[8] && a1[9] == a2[9])
      return 1;
    else
      return sub_1ABF3223C();
  }
  return result;
}

uint64_t sub_1ABD7F35C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[5];
  _QWORD v17[5];

  if ((sub_1ABDE0AE8(*a1, *a2) & 1) == 0)
    goto LABEL_7;
  v5 = a1[1];
  v4 = a1[2];
  v7 = a1[3];
  v6 = a1[4];
  v8 = a1[5];
  v10 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v12 = a2[4];
  v13 = a2[5];
  if (!v4)
  {
    if (!v9)
    {
      v14 = 1;
      return v14 & 1;
    }
    goto LABEL_6;
  }
  if (!v9)
  {
LABEL_6:
    sub_1ABD7F874(v5, v4);
    sub_1ABD7F874(v10, v9);
    sub_1ABD365D4(v5, v4);
    sub_1ABD365D4(v10, v9);
LABEL_7:
    v14 = 0;
    return v14 & 1;
  }
  v16[0] = v5;
  v16[1] = v4;
  v16[2] = v7;
  v16[3] = v6;
  v16[4] = v8;
  v17[0] = v10;
  v17[1] = v9;
  v17[2] = v11;
  v17[3] = v12;
  v17[4] = v13;
  sub_1ABD7F874(v5, v4);
  sub_1ABD7F874(v5, v4);
  sub_1ABD7F874(v10, v9);
  v14 = sub_1ABEBC628(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABD365D4(v5, v4);
  return v14 & 1;
}

uint64_t sub_1ABD7F500@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v16 = a2;
  sub_1ABCF4DA8(0, &qword_1EEC42020, (uint64_t (*)(void))sub_1ABD7F72C, (uint64_t)&type metadata for SDSNewsResponse.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD7F72C();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v16;
  sub_1ABD04578(0, &qword_1EEC42030, (uint64_t)&type metadata for SDSNewsResponse.SDSNewsResponseItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v20 = 0;
  sub_1ABD7F7B4(&qword_1EEC42038, (uint64_t (*)(void))sub_1ABD7F770, MEMORY[0x1E0DEAF40]);
  sub_1ABF320C8();
  if ((_QWORD)v17)
    v11 = v17;
  else
    v11 = MEMORY[0x1E0DEE9D8];
  v20 = 1;
  sub_1ABD4643C();
  sub_1ABF320C8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v14 = v18;
  v15 = v17;
  v12 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)v10 = v11;
  *(_OWORD *)(v10 + 8) = v15;
  *(_OWORD *)(v10 + 24) = v14;
  *(_QWORD *)(v10 + 40) = v12;
  return result;
}

unint64_t sub_1ABD7F72C()
{
  unint64_t result;

  result = qword_1EEC42028;
  if (!qword_1EEC42028)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3850C, &type metadata for SDSNewsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42028);
  }
  return result;
}

unint64_t sub_1ABD7F770()
{
  unint64_t result;

  result = qword_1EEC42040;
  if (!qword_1EEC42040)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF384E4, &type metadata for SDSNewsResponse.SDSNewsResponseItem);
    atomic_store(result, (unint64_t *)&qword_1EEC42040);
  }
  return result;
}

uint64_t sub_1ABD7F7B4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, &qword_1EEC42030, (uint64_t)&type metadata for SDSNewsResponse.SDSNewsResponseItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABD7F830()
{
  unint64_t result;

  result = qword_1EEC42058;
  if (!qword_1EEC42058)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF384BC, &type metadata for SDSNewsResponse.SDSNewsResponseItem);
    atomic_store(result, (unint64_t *)&qword_1EEC42058);
  }
  return result;
}

uint64_t sub_1ABD7F874(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDSNewsResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABD7F8FC + 4 * byte_1ABF382DE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABD7F930 + 4 * byte_1ABF382D9[v4]))();
}

uint64_t sub_1ABD7F930(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD7F938(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD7F940);
  return result;
}

uint64_t sub_1ABD7F94C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD7F954);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABD7F958(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD7F960(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSNewsResponse.CodingKeys()
{
  return &type metadata for SDSNewsResponse.CodingKeys;
}

uint64_t destroy for SDSNewsResponse.SDSNewsResponseItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SDSNewsResponse.SDSNewsResponseItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for SDSNewsResponse.SDSNewsResponseItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

_QWORD *assignWithTake for SDSNewsResponse.SDSNewsResponseItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSNewsResponse.SDSNewsResponseItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSNewsResponse.SDSNewsResponseItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSNewsResponse.SDSNewsResponseItem()
{
  return &type metadata for SDSNewsResponse.SDSNewsResponseItem;
}

unint64_t sub_1ABD7FC44()
{
  unint64_t result;

  result = qword_1EEC42060;
  if (!qword_1EEC42060)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38494, &type metadata for SDSNewsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42060);
  }
  return result;
}

unint64_t sub_1ABD7FC8C()
{
  unint64_t result;

  result = qword_1EEC42068;
  if (!qword_1EEC42068)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF383CC, &type metadata for SDSNewsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42068);
  }
  return result;
}

unint64_t sub_1ABD7FCD4()
{
  unint64_t result;

  result = qword_1EEC42070;
  if (!qword_1EEC42070)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF383F4, &type metadata for SDSNewsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42070);
  }
  return result;
}

uint64_t sub_1ABD7FD18()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1ABD7FD60@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  v33 = a2;
  sub_1ABCF4DA8(0, &qword_1EEC42078, (uint64_t (*)(void))sub_1ABD80000, (uint64_t)&type metadata for SDSNewsResponse.SDSNewsResponseItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD80000();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v38 = 0;
  v10 = v5;
  v11 = sub_1ABF320E0();
  v13 = v12;
  v37 = 1;
  v14 = sub_1ABF320E0();
  v16 = v15;
  v32 = v14;
  v36 = 2;
  v30 = sub_1ABF3208C();
  v31 = v17;
  v35 = 3;
  v28 = sub_1ABF320E0();
  v29 = v18;
  v34 = 4;
  v19 = sub_1ABF320E0();
  v20 = v8;
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v20, v10);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v32;
  v25 = v33;
  *v33 = v11;
  v25[1] = v13;
  v25[2] = v24;
  v25[3] = v16;
  v26 = v31;
  v25[4] = v30;
  v25[5] = v26;
  v27 = v29;
  v25[6] = v28;
  v25[7] = v27;
  v25[8] = v19;
  v25[9] = v22;
  return result;
}

unint64_t sub_1ABD80000()
{
  unint64_t result;

  result = qword_1EEC42080;
  if (!qword_1EEC42080)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3864C, &type metadata for SDSNewsResponse.SDSNewsResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42080);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDSNewsResponse.SDSNewsResponseItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABD80090 + 4 * byte_1ABF382E8[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABD800C4 + 4 * byte_1ABF382E3[v4]))();
}

uint64_t sub_1ABD800C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD800CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD800D4);
  return result;
}

uint64_t sub_1ABD800E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD800E8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABD800EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD800F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSNewsResponse.SDSNewsResponseItem.CodingKeys()
{
  return &type metadata for SDSNewsResponse.SDSNewsResponseItem.CodingKeys;
}

unint64_t sub_1ABD80114()
{
  unint64_t result;

  result = qword_1EEC42090;
  if (!qword_1EEC42090)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38624, &type metadata for SDSNewsResponse.SDSNewsResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42090);
  }
  return result;
}

unint64_t sub_1ABD8015C()
{
  unint64_t result;

  result = qword_1EEC42098;
  if (!qword_1EEC42098)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3855C, &type metadata for SDSNewsResponse.SDSNewsResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42098);
  }
  return result;
}

unint64_t sub_1ABD801A4()
{
  unint64_t result;

  result = qword_1EEC420A0;
  if (!qword_1EEC420A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38584, &type metadata for SDSNewsResponse.SDSNewsResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC420A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDSEndpoint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABD80238 + 4 * byte_1ABF386A1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABD8026C + 4 * byte_1ABF3869C[v4]))();
}

uint64_t sub_1ABD8026C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD80274(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD8027CLL);
  return result;
}

uint64_t sub_1ABD80288(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD80290);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABD80294(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD8029C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSEndpoint()
{
  return &type metadata for SDSEndpoint;
}

unint64_t sub_1ABD802BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC420A8;
  if (!qword_1EEC420A8)
  {
    sub_1ABD80304();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC420A8);
  }
  return result;
}

void sub_1ABD80304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC420B0)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC420B0);
  }
}

void sub_1ABD80358(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5AE0708;
}

unint64_t sub_1ABD8036C()
{
  unint64_t result;

  result = qword_1EEC420B8;
  if (!qword_1EEC420B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38730, &type metadata for SDSEndpoint);
    atomic_store(result, (unint64_t *)&qword_1EEC420B8);
  }
  return result;
}

uint64_t sub_1ABD803B0()
{
  return sub_1ABF2FDB8();
}

uint64_t sub_1ABD803D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC420C0);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC420C0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABD8054C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40EF0 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC420C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABD805BC()
{
  return 1;
}

uint64_t sub_1ABD805C4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABCF4DA8(0, &qword_1EEC420D8, (uint64_t (*)(void))sub_1ABD80748, (uint64_t)&type metadata for OpenWatchlistIntent, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABCF4DA8(0, &qword_1EEC420E0, (uint64_t (*)(void))sub_1ABD80748, (uint64_t)&type metadata for OpenWatchlistIntent, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABD80748();
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABD807B0();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF74();
}

unint64_t sub_1ABD80748()
{
  unint64_t result;

  result = qword_1ED3470E0;
  if (!qword_1ED3470E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF387FC, &type metadata for OpenWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3470E0);
  }
  return result;
}

uint64_t sub_1ABD8078C()
{
  return sub_1ABF2FDD0();
}

void sub_1ABD807B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC420E8)
  {
    sub_1ABCF4DA8(255, &qword_1ED347078, (uint64_t (*)(void))sub_1ABD67FB8, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, &qword_1EEC420E8);
  }
}

uint64_t sub_1ABD8082C()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABD80868(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABD808B0()
{
  uint64_t v1;

  sub_1ABF2FBF0();
  return v1;
}

double sub_1ABD808E0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1ABD80940()
{
  swift_unknownObjectRetain();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBFC();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABD8099C()
{
  swift_unknownObjectRetain();
  sub_1ABF2FBFC();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ABD809DC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FBE4();
  return sub_1ABD6817C;
}

uint64_t sub_1ABD80A24()
{
  return sub_1ABF2FC08();
}

uint64_t sub_1ABD80A44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t result;
  uint64_t *v26;
  _QWORD v27[2];
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v33 = a1;
  v1 = sub_1ABF2FFC8();
  v31 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  MEMORY[0x1E0C80A78](v1);
  v30 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C907D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v29 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)v27 - v7;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v3);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v27 - v9;
  v11 = sub_1ABF30484();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1ABF3049C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  sub_1ABCF4DA8(0, &qword_1ED347078, (uint64_t (*)(void))sub_1ABD67FB8, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
  v27[1] = v19;
  sub_1ABF31738();
  sub_1ABF30844();
  v20 = *MEMORY[0x1E0CAF9B8];
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v21(v14, v20, v11);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v21(v14, v20, v11);
  sub_1ABF304A8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
  v22 = sub_1ABF2FCD4();
  *(_QWORD *)&v35 = 0;
  v34 = 0uLL;
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v28, 1, 1, v22);
  v23(v29, 1, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v30, *MEMORY[0x1E0C91738], v32);
  sub_1ABD68830();
  v24 = sub_1ABF2FE00();
  sub_1ABCF5A54(0, &qword_1ED34C7B0, (uint64_t (*)(uint64_t))sub_1ABD79618, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  v34 = 0u;
  v35 = 0u;
  v36 = 0;
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  v26 = v33;
  *v33 = v24;
  v26[1] = result;
  return result;
}

uint64_t sub_1ABD80E60@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  _OWORD v40[2];
  uint64_t v41;

  v39 = a2;
  v3 = sub_1ABF2FFC8();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C907D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v35 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v34 = (char *)&v30 - v9;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v5);
  MEMORY[0x1E0C80A78](v10);
  v31 = (char *)&v30 - v11;
  v12 = sub_1ABF30484();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1ABF3049C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v33 = *a1;
  sub_1ABCF4DA8(0, &qword_1ED347078, (uint64_t (*)(void))sub_1ABD67FB8, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
  v30 = v20;
  sub_1ABF31738();
  sub_1ABF30844();
  v21 = *MEMORY[0x1E0CAF9B8];
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v32 = *(_OWORD *)(a1 + 1);
  v22(v15, v21, v12);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v22(v15, v21, v12);
  v23 = v31;
  sub_1ABF304A8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
  v24 = sub_1ABF2FCD4();
  memset(v40, 0, 24);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v34, 1, 1, v24);
  v25(v35, 1, 1, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E0C91738], v38);
  sub_1ABD68830();
  v26 = sub_1ABF2FE00();
  sub_1ABCF5A54(0, &qword_1ED34C7B0, (uint64_t (*)(uint64_t))sub_1ABD79618, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  memset(v40, 0, sizeof(v40));
  v41 = 0;
  sub_1ABF2FF68();
  sub_1ABF2FC38();
  v27 = sub_1ABF2FC14();
  *(_QWORD *)&v40[0] = v33;
  *(_OWORD *)((char *)v40 + 8) = v32;
  swift_retain_n();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release_n();
  result = swift_release_n();
  v29 = v39;
  *v39 = v26;
  v29[1] = v27;
  return result;
}

uint64_t sub_1ABD812EC(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_OWORD *)(v2 + 64) = *v1;
  return swift_task_switch();
}

uint64_t sub_1ABD8130C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD *, uint64_t, uint64_t);

  v2 = v0[8];
  v1 = v0[9];
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  v3 = v0[6];
  v0[10] = v0[5];
  ObjectType = swift_getObjectType();
  v0[2] = v2;
  v0[3] = v1;
  v0[4] = 0x6000000000000000;
  v7 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_1ABD813F0;
  return v7(v0 + 2, ObjectType, v3);
}

uint64_t sub_1ABD813F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1ABD81478()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1ABD81488()
{
  unint64_t result;

  result = qword_1EEC420F8;
  if (!qword_1EEC420F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF387D4, &type metadata for OpenWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1EEC420F8);
  }
  return result;
}

unint64_t sub_1ABD814D0()
{
  unint64_t result;

  result = qword_1ED34E3E0;
  if (!qword_1ED34E3E0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistEntity, &type metadata for WatchlistEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34E3E0);
  }
  return result;
}

uint64_t sub_1ABD81514()
{
  return sub_1ABF2FDB8();
}

uint64_t sub_1ABD81534()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABD81570(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

unint64_t sub_1ABD815C0()
{
  unint64_t result;

  result = qword_1ED3470E8;
  if (!qword_1ED3470E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3888C, &type metadata for OpenWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3470E8);
  }
  return result;
}

unint64_t sub_1ABD81608()
{
  unint64_t result;

  result = qword_1ED3470D8;
  if (!qword_1ED3470D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF388B4, &type metadata for OpenWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3470D8);
  }
  return result;
}

uint64_t sub_1ABD8164C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ABD8165C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ABD8166C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40EF0 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC420C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABD816DC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABCF4DA8(0, &qword_1EEC420D8, (uint64_t (*)(void))sub_1ABD80748, (uint64_t)&type metadata for OpenWatchlistIntent, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABCF4DA8(0, &qword_1EEC420E0, (uint64_t (*)(void))sub_1ABD80748, (uint64_t)&type metadata for OpenWatchlistIntent, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABD807B0();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF74();
}

uint64_t sub_1ABD81860(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1ABD37AA0;
  *(_QWORD *)(v4 + 56) = a1;
  *(_OWORD *)(v4 + 64) = *v1;
  return swift_task_switch();
}

uint64_t sub_1ABD818CC()
{
  sub_1ABD80748();
  return sub_1ABF2FCA4();
}

ValueMetadata *type metadata accessor for OpenWatchlistIntent()
{
  return &type metadata for OpenWatchlistIntent;
}

unint64_t sub_1ABD81918()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC42108;
  if (!qword_1EEC42108)
  {
    sub_1ABCF4DA8(255, &qword_1EEC42110, (uint64_t (*)(void))sub_1ABD80748, (uint64_t)&type metadata for OpenWatchlistIntent, MEMORY[0x1E0C91678]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C916B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC42108);
  }
  return result;
}

StocksCore::AdConfiguration __swiftcall AdConfiguration.init(segmentsEnabled:feedNumberofViewportsBetweenAds:articleNumberofViewportsBetweenAds:)(Swift::Bool_optional segmentsEnabled, Swift::Double_optional feedNumberofViewportsBetweenAds, Swift::Double_optional articleNumberofViewportsBetweenAds)
{
  double v3;
  char v4;
  uint64_t v5;
  double v6;
  double v7;
  StocksCore::AdConfiguration result;

  v6 = *(double *)&feedNumberofViewportsBetweenAds.is_nil;
  v7 = 1.0;
  if (articleNumberofViewportsBetweenAds.is_nil)
    v6 = 1.0;
  *(_BYTE *)v5 = segmentsEnabled.value;
  if ((v4 & 1) == 0)
    v7 = v3;
  *(double *)(v5 + 8) = v6;
  *(double *)(v5 + 16) = v7;
  result.articleNumberofViewportsBetweenAds = v7;
  result.feedNumberofViewportsBetweenAds = v6;
  result.segmentsEnabled = segmentsEnabled.value;
  return result;
}

uint64_t AdConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  char *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  double v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  int v36;
  uint64_t v37;
  double v38;
  unsigned __int8 v39;
  char v40;
  _QWORD *v41;

  v37 = a2;
  sub_1ABCF4DA8(0, &qword_1ED34FE48, (uint64_t (*)(void))sub_1ABD81FD8, (uint64_t)&type metadata for AdConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v34 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD81FD8();
  sub_1ABF3235C();
  if (v2)
  {
    v23 = (uint64_t)a1;
  }
  else
  {
    v9 = v6;
    v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    LOBYTE(v38) = 0;
    sub_1ABF320C8();
    v10 = v5;
    v11 = v8;
    v12 = v40;
    v13 = v11;
    if (v40 == 2)
    {
      swift_beginAccess();
      v14 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v16 = v14[2];
      v15 = v14[3];
      if (v16 >= v15 >> 1)
        v14 = sub_1ABD12054((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
      v14[2] = v16 + 1;
      v17 = &v14[2 * v16];
      v17[4] = 0x73746E656D676573;
      v17[5] = 0xEF64656C62616E45;
      v41 = v14;
      swift_endAccess();
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v18 = v37;
    v40 = 1;
    sub_1ABF320C8();
    v19 = v38;
    v36 = v39;
    if ((v39 & 1) != 0)
    {
      swift_beginAccess();
      v14 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v21 = v14[2];
      v20 = v14[3];
      if (v21 >= v20 >> 1)
        v14 = sub_1ABD12054((_QWORD *)(v20 > 1), v21 + 1, 1, v14);
      v14[2] = v21 + 1;
      v22 = &v14[2 * v21];
      v22[4] = 0xD00000000000001FLL;
      v22[5] = 0x80000001ABF56310;
      v41 = v14;
      swift_endAccess();
      v18 = v37;
    }
    v40 = 2;
    sub_1ABF320C8();
    v35 = a1;
    if ((v39 & 1) != 0)
    {
      swift_beginAccess();
      v14 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v26 = v14[2];
      v25 = v14[3];
      if (v26 >= v25 >> 1)
        v14 = sub_1ABD12054((_QWORD *)(v25 > 1), v26 + 1, 1, v14);
      v14[2] = v26 + 1;
      v27 = &v14[2 * v26];
      v27[4] = 0xD000000000000022;
      v27[5] = 0x80000001ABF56330;
      v41 = v14;
      swift_endAccess();
      v28 = 1.0;
      v18 = v37;
    }
    else
    {
      v28 = v38;
    }
    v29 = v12 & 1;
    if (v36)
      v19 = 1.0;
    v30 = v9;
    if (v14[2])
    {
      sub_1ABD83CBC(0, (unint64_t *)&qword_1ED34FFF0, (void (*)(uint64_t))sub_1ABD6B360);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1ABF366C0;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      *(_QWORD *)(v31 + 56) = v32;
      *(_QWORD *)(v31 + 64) = sub_1ABD82448();
      *(_QWORD *)(v31 + 32) = v14;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v33 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v33 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
    swift_bridgeObjectRelease();
    *(_BYTE *)v18 = v29;
    *(double *)(v18 + 8) = v19;
    *(double *)(v18 + 16) = v28;
    v23 = (uint64_t)v35;
  }
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

BOOL sub_1ABD81F24(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

BOOL static AdConfiguration.== infix(_:_:)(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1ABD81F6C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001FLL;
  if (*v0 != 1)
    v1 = 0xD000000000000022;
  if (*v0)
    return v1;
  else
    return 0x73746E656D676573;
}

unint64_t sub_1ABD81FD8()
{
  unint64_t result;

  result = qword_1ED34ED88;
  if (!qword_1ED34ED88)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38A50, &type metadata for AdConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED88);
  }
  return result;
}

uint64_t sub_1ABD8201C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABD83B50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABD82040()
{
  sub_1ABD81FD8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD82068()
{
  sub_1ABD81FD8();
  return sub_1ABF32398();
}

uint64_t AdConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];
  char v10;
  char v11;
  char v12;

  sub_1ABCF4DA8(0, &qword_1ED34FF08, (uint64_t (*)(void))sub_1ABD81FD8, (uint64_t)&type metadata for AdConfiguration.CodingKeys, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v9 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD81FD8();
  sub_1ABF32368();
  v12 = 0;
  v7 = v9[1];
  sub_1ABF321A0();
  if (!v7)
  {
    v11 = 1;
    sub_1ABF321AC();
    v10 = 2;
    sub_1ABF321AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1ABD821F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AdConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1ABD8220C(_QWORD *a1)
{
  return AdConfiguration.encode(to:)(a1);
}

BOOL sub_1ABD82220(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

void sub_1ABD82258(char *a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t inited;
  uint64_t v6;
  void *v7;
  id v8;

  v1 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v2 = *((_QWORD *)a1 + 2);
  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1ABD83CBC(0, (unint64_t *)&qword_1ED34E358, (void (*)(uint64_t))sub_1ABD84198);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF36EA0;
  sub_1ABF31E40();
  *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 72) = v1;
  sub_1ABF31E40();
  v6 = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 168) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 144) = v3;
  sub_1ABF31E40();
  *(_QWORD *)(inited + 240) = v6;
  *(_QWORD *)(inited + 216) = v2;
  sub_1ABD18978(inited);
  v7 = (void *)sub_1ABF31618();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v4, sel_initWithConfigDictionary_, v7);

  if (!v8)
    __break(1u);
}

uint64_t sub_1ABD8240C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1ABD8241C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1ABD82434(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ABD8336C(a1, a2, a3, a4, &qword_1EEC42120, (void (*)(uint64_t))type metadata accessor for YahooHeadline);
}

unint64_t sub_1ABD82448()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34FCD0;
  if (!qword_1ED34FCD0)
  {
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34FCD0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AdConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[24])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AdConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdConfiguration()
{
  return &type metadata for AdConfiguration;
}

uint64_t storeEnumTagSinglePayload for AdConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABD8259C + 4 * byte_1ABF388F9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABD825D0 + 4 * asc_1ABF388F4[v4]))();
}

uint64_t sub_1ABD825D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD825D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD825E0);
  return result;
}

uint64_t sub_1ABD825EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD825F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABD825F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD82600(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdConfiguration.CodingKeys()
{
  return &type metadata for AdConfiguration.CodingKeys;
}

unint64_t sub_1ABD82620()
{
  unint64_t result;

  result = qword_1EEC42118;
  if (!qword_1EEC42118)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38A28, &type metadata for AdConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42118);
  }
  return result;
}

unint64_t sub_1ABD82668()
{
  unint64_t result;

  result = qword_1ED34ED98;
  if (!qword_1ED34ED98)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38998, &type metadata for AdConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED98);
  }
  return result;
}

unint64_t sub_1ABD826B0()
{
  unint64_t result;

  result = qword_1ED34ED90;
  if (!qword_1ED34ED90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF389C0, &type metadata for AdConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED90);
  }
  return result;
}

_QWORD *sub_1ABD826F4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, &qword_1ED347148, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1ABD83670(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD8282C(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1ABD83F80();
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34E558, (uint64_t (*)(void))sub_1ABD83FF4, (uint64_t)&type metadata for Stock, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB3B58]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1ABF31FC0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34E558, (uint64_t (*)(void))sub_1ABD83FF4, (uint64_t)&type metadata for Stock, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB3B58]);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1ABD83D08(0, v8, v20, a4, (unint64_t *)&qword_1ED34E558, (uint64_t (*)(void))sub_1ABD83FF4, (uint64_t)&type metadata for Stock, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB3B58]);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1ABD82A90(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ABD8336C(a1, a2, a3, a4, &qword_1ED34E4A0, (void (*)(uint64_t))sub_1ABD83F24);
}

uint64_t sub_1ABD82AA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ABD8336C(a1, a2, a3, a4, &qword_1EEC42128, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
}

_QWORD *sub_1ABD82AB8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, (unint64_t *)&unk_1ED34E2E8, (uint64_t)&type metadata for StockNewsFeed, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4])
          memmove(v12, a4 + 4, 160 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1ABD8387C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD82BEC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ABD8336C(a1, a2, a3, a4, &qword_1ED34CAB8, (void (*)(uint64_t))type metadata accessor for NewsFeedRequest);
}

_QWORD *sub_1ABD82C00(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, &qword_1EEC42150, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ABD83970(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD82D20(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1ABD840E0();
  sub_1ABCF4DA8(0, &qword_1EEC42148, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C91170]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1ABF31FC0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1ABCF4DA8(0, &qword_1EEC42148, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C91170]);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1ABD83D08(0, v8, v20, a4, &qword_1EEC42148, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C91170]);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

_QWORD *sub_1ABD82F84(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, &qword_1ED34C720, (uint64_t)&type metadata for WatchlistWidgetEntity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1ABD83A60(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1ABD830A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, &qword_1ED34E2D8, (uint64_t)&type metadata for StockRecord, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4])
          memmove(v12, a4 + 4, 104 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1ABD83580(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1ABD831E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1ABD04578(0, &qword_1ED34E320, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 144);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[18 * v8 + 4])
          memmove(v12, a4 + 4, 144 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1ABD83E30(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD8331C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ABD8336C(a1, a2, a3, a4, &qword_1ED34E890, (void (*)(uint64_t))MEMORY[0x1E0DB4348]);
}

uint64_t sub_1ABD83330(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ABD8336C(a1, a2, a3, a4, &qword_1ED34C908, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
}

uint64_t sub_1ABD83344(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ABD8336C(a1, a2, a3, a4, &qword_1EEC42130, (void (*)(uint64_t))sub_1ABD84038);
}

uint64_t sub_1ABD83358(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1ABD8336C(a1, a2, a3, a4, &qword_1ED34FFA8, (void (*)(uint64_t))MEMORY[0x1E0CAE690]);
}

uint64_t sub_1ABD8336C(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1ABD83CBC(0, a5, a6);
  v13 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1ABF31FC0();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1ABD83764(0, v11, v21, a4, (uint64_t (*)(_QWORD))a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1ABD83580(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 104 * a1 + 32;
    v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD83670(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD83764(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD8387C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 160 * a1 + 32;
    v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD83970(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD83A60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD83B50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73746E656D676573 && a2 == 0xEF64656C62616E45;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001ABF56310 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001ABF56330)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1ABD83CBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1ABF32200();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1ABD83D08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(void), uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;

  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    sub_1ABCF4DA8(0, a5, a6, a7, a8);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned __int8 *)(v13 + 80);
    v15 = *(_QWORD *)(v13 + 72);
    v16 = a4 + ((v14 + 32) & ~v14) + v15 * a1;
    v17 = v15 * v8;
    v18 = a3 + v17;
    v19 = v16 + v17;
    if (v16 >= v18 || v19 <= a3)
    {
      swift_arrayInitWithCopy();
      return v18;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD83E30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 144 * a1 + 32;
    v6 = a3 + 144 * v4;
    if (v5 >= v6 || v5 + 144 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

void sub_1ABD83F24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E420)
  {
    v0 = sub_1ABF30D30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E420);
  }
}

void sub_1ABD83F80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E618)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34E558, (uint64_t (*)(void))sub_1ABD83FF4, (uint64_t)&type metadata for Stock, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB3B58]);
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E618);
  }
}

unint64_t sub_1ABD83FF4()
{
  unint64_t result;

  result = qword_1ED34E550;
  if (!qword_1ED34E550)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF391C0, &type metadata for Stock);
    atomic_store(result, (unint64_t *)&qword_1ED34E550);
  }
  return result;
}

void sub_1ABD84038()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42138)
  {
    type metadata accessor for SymbolEntity();
    sub_1ABD84098();
    v0 = sub_1ABF2FE6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42138);
  }
}

unint64_t sub_1ABD84098()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34CB18;
  if (!qword_1ED34CB18)
  {
    v1 = type metadata accessor for SymbolEntity();
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for SymbolEntity, v1);
    atomic_store(result, (unint64_t *)&qword_1ED34CB18);
  }
  return result;
}

void sub_1ABD840E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42140)
  {
    sub_1ABCF4DA8(255, &qword_1EEC42148, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C91170]);
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42140);
  }
}

unint64_t sub_1ABD84154()
{
  unint64_t result;

  result = qword_1ED34C5E8;
  if (!qword_1ED34C5E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40458, &type metadata for SymbolWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C5E8);
  }
  return result;
}

void sub_1ABD84198()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34E170)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34E170);
  }
}

void __swiftcall PaywallConfig.init(paywallType:title:descriptionTrial:descriptionNonTrial:learnMoreTitle:learnMoreURL:subscriptionButton:visualSpecification:compactPortraitTopOffsetRatio:compactLandscapeTopOffsetRatio:regularPortraitTopOffsetRatio:regularLandscapeTopOffsetRatio:)(StocksCore::PaywallConfig *__return_ptr retstr, Swift::String_optional paywallType, Swift::String_optional title, Swift::String_optional descriptionTrial, Swift::String_optional descriptionNonTrial, Swift::String_optional learnMoreTitle, Swift::String_optional learnMoreURL, StocksCore::SubscriptionButtonConfig_optional *subscriptionButton, StocksCore::PaywallVisualSpec_optional *visualSpecification, Swift::Double_optional compactPortraitTopOffsetRatio, Swift::Double_optional compactLandscapeTopOffsetRatio, Swift::Double_optional regularPortraitTopOffsetRatio, Swift::Double_optional regularLandscapeTopOffsetRatio)
{
  void *object;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t countAndFlagsBits;
  _QWORD __src[81];
  _BYTE v39[152];
  _BYTE v40[376];
  char v41;
  double v42;
  char v43;
  double v44;
  char v45;
  double v46;
  char v47;

  object = descriptionNonTrial.value._object;
  countAndFlagsBits = descriptionNonTrial.value._countAndFlagsBits;
  v14 = descriptionTrial.value._object;
  v15 = descriptionTrial.value._countAndFlagsBits;
  v16 = title.value._object;
  v17 = title.value._countAndFlagsBits;
  v18 = paywallType.value._object;
  v19 = paywallType.value._countAndFlagsBits;
  sub_1ABD843F0((uint64_t)subscriptionButton, (uint64_t)v39, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
  sub_1ABD843F0((uint64_t)visualSpecification, (uint64_t)v40, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
  if (v18)
    v20 = v19;
  else
    v20 = 0;
  v21 = (void *)0xE000000000000000;
  if (v18)
    v22 = (unint64_t)v18;
  else
    v22 = 0xE000000000000000;
  if (v16)
    v23 = v17;
  else
    v23 = 0;
  if (v16)
    v24 = (unint64_t)v16;
  else
    v24 = 0xE000000000000000;
  if (v14)
    v25 = v15;
  else
    v25 = 0;
  if (v14)
    v26 = (unint64_t)v14;
  else
    v26 = 0xE000000000000000;
  v28 = learnMoreTitle.value._countAndFlagsBits;
  v27 = countAndFlagsBits;
  if (object)
  {
    v29 = (unint64_t)object;
  }
  else
  {
    v27 = 0;
    v29 = 0xE000000000000000;
  }
  if (learnMoreTitle.value._object)
  {
    v30 = learnMoreTitle.value._object;
  }
  else
  {
    v28 = 0;
    v30 = (void *)0xE000000000000000;
  }
  v31 = learnMoreURL.value._countAndFlagsBits;
  if (learnMoreURL.value._object)
    v21 = learnMoreURL.value._object;
  else
    v31 = 0;
  __src[0] = v20;
  __src[1] = v22;
  if ((v41 & 1) != 0)
    v32 = 0.0;
  else
    v32 = *(double *)&compactPortraitTopOffsetRatio.is_nil;
  __src[2] = v23;
  __src[3] = v24;
  if ((v43 & 1) != 0)
    v33 = 0.0;
  else
    v33 = v42;
  __src[4] = v25;
  __src[5] = v26;
  if ((v45 & 1) != 0)
    v34 = 0.0;
  else
    v34 = v44;
  __src[6] = v27;
  __src[7] = v29;
  if ((v47 & 1) != 0)
    v35 = 0.0;
  else
    v35 = v46;
  __src[8] = v28;
  __src[9] = v30;
  __src[10] = v31;
  __src[11] = v21;
  sub_1ABD843F0((uint64_t)v39, (uint64_t)&__src[12], &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
  sub_1ABD843F0((uint64_t)v40, (uint64_t)&__src[31], (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
  *(double *)&__src[77] = v32;
  *(double *)&__src[78] = v33;
  *(double *)&__src[79] = v34;
  *(double *)&__src[80] = v35;
  memcpy(retstr, __src, sizeof(StocksCore::PaywallConfig));
}

uint64_t sub_1ABD843F0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1ABD04578(0, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1ABD84448(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABD84484 + 4 * byte_1ABF38AA0[a1]))(0x546C6C6177796170, 0xEB00000000657079);
}

uint64_t sub_1ABD84484()
{
  return 0x656C746974;
}

unint64_t sub_1ABD84498()
{
  return 0xD000000000000010;
}

uint64_t sub_1ABD8458C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABD845C8 + 4 * byte_1ABF38AAC[a1]))(0x546C6C6177796170, 0xEB00000000657079);
}

uint64_t sub_1ABD845C8()
{
  return 0x656C746974;
}

unint64_t sub_1ABD845DC()
{
  return 0xD000000000000010;
}

uint64_t sub_1ABD846D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1ABD84448(*a1);
  v5 = v4;
  if (v3 == sub_1ABD84448(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABD84758()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABD84448(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABD847B8()
{
  unsigned __int8 *v0;

  sub_1ABD84448(*v0);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD847F8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABD84448(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABD84854@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABD88338();
  *a1 = result;
  return result;
}

uint64_t sub_1ABD84880@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABD84448(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABD848A8()
{
  unsigned __int8 *v0;

  return sub_1ABD8458C(*v0);
}

uint64_t sub_1ABD848B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABD88338();
  *a1 = result;
  return result;
}

void sub_1ABD848D4(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1ABD848E0()
{
  sub_1ABD85A54();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD84908()
{
  sub_1ABD85A54();
  return sub_1ABF32398();
}

uint64_t PaywallConfig.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *object;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  void *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  void *v35;
  void *v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  Swift::String_optional v65;
  Swift::String_optional v66;
  Swift::String_optional v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  Swift::String_optional learnMoreTitle;
  int v72;
  int64_t v73[2];
  int v74;
  int64_t v75;
  int v76;
  int64_t v77;
  int v78;
  int64_t v79;
  Swift::String_optional learnMoreURL;
  uint64_t v81;
  void *v82;
  void *v83;
  Swift::String_optional v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t countAndFlagsBits;
  void *v89;
  uint64_t v90;
  _QWORD *v91;
  StocksCore::PaywallConfig v92;
  int64_t v93;
  unsigned __int8 v94;
  char v95;
  StocksCore::PaywallVisualSpec_optional visualSpecification;
  _BYTE v97[368];
  _BYTE v98[368];
  Swift::String_optional v99;
  char v100;
  StocksCore::SubscriptionButtonConfig_optional subscriptionButton;
  _BYTE v102[152];
  _BYTE v103[152];
  _BYTE v104[168];
  _QWORD *v105;

  sub_1ABD868C4(0, &qword_1ED34FE30, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v73 - v8;
  v10 = a1[3];
  v91 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1ABD85A54();
  sub_1ABF3235C();
  if (!v2)
  {
    v89 = a2;
    v90 = v7;
    v105 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v98[0] = 0;
    sub_1ABF320C8();
    v11 = v6;
    object = v99.value._object;
    countAndFlagsBits = v99.value._countAndFlagsBits;
    if (v99.value._object)
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_beginAccess();
      v13 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v15 = v13[2];
      v14 = v13[3];
      if (v15 >= v14 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
      v13[2] = v15 + 1;
      v16 = &v13[2 * v15];
      v16[4] = 0x546C6C6177796170;
      v16[5] = 0xEB00000000657079;
      v105 = v13;
      swift_endAccess();
    }
    v98[0] = 1;
    sub_1ABF320C8();
    v17 = v99.value._object;
    v87 = v99.value._countAndFlagsBits;
    if (!v99.value._object)
    {
      swift_beginAccess();
      v13 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v19 = v13[2];
      v18 = v13[3];
      if (v19 >= v18 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v18 > 1), v19 + 1, 1, v13);
      v13[2] = v19 + 1;
      v20 = &v13[2 * v19];
      v20[4] = 0x656C746974;
      v20[5] = 0xE500000000000000;
      v105 = v13;
      swift_endAccess();
      v17 = 0;
    }
    v98[0] = 2;
    sub_1ABF320C8();
    v21 = v99.value._object;
    v85 = v99.value._countAndFlagsBits;
    if (!v99.value._object)
    {
      swift_beginAccess();
      v13 = v105;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v86 = v17;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v24 = v13[2];
      v23 = v13[3];
      if (v24 >= v23 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v23 > 1), v24 + 1, 1, v13);
      v13[2] = v24 + 1;
      v25 = &v13[2 * v24];
      v25[4] = 0xD000000000000010;
      v25[5] = 0x80000001ABF52F60;
      v105 = v13;
      swift_endAccess();
      v17 = v86;
    }
    v98[0] = 3;
    sub_1ABF320C8();
    v84 = v99;
    if (!v99.value._object)
    {
      swift_beginAccess();
      v13 = v105;
      v26 = swift_isUniquelyReferenced_nonNull_native();
      v86 = v17;
      if ((v26 & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v28 = v13[2];
      v27 = v13[3];
      if (v28 >= v27 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v27 > 1), v28 + 1, 1, v13);
      v13[2] = v28 + 1;
      v29 = &v13[2 * v28];
      v29[4] = 0xD000000000000013;
      v29[5] = 0x80000001ABF52F80;
      v105 = v13;
      swift_endAccess();
      v17 = v86;
    }
    v98[0] = 4;
    sub_1ABF320C8();
    v83 = v99.value._object;
    v81 = v99.value._countAndFlagsBits;
    if (!v99.value._object)
    {
      v82 = v21;
      v30 = object;
      swift_beginAccess();
      v13 = v105;
      v31 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v33 = v13[2];
      v32 = v13[3];
      if (v33 >= v32 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v32 > 1), v33 + 1, 1, v13);
      v13[2] = v33 + 1;
      v34 = (char *)&v13[2 * v33];
      strcpy(v34 + 32, "learnMoreTitle");
      v34[47] = -18;
      v105 = v13;
      swift_endAccess();
      v17 = v31;
      object = v30;
      v21 = v82;
    }
    v98[0] = 5;
    sub_1ABF320C8();
    learnMoreURL = v99;
    if (!v99.value._object)
    {
      v82 = v21;
      v35 = object;
      swift_beginAccess();
      v13 = v105;
      v36 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v38 = v13[2];
      v37 = v13[3];
      if (v38 >= v37 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v37 > 1), v38 + 1, 1, v13);
      v13[2] = v38 + 1;
      v39 = (char *)&v13[2 * v38];
      strcpy(v39 + 32, "learnMoreURL");
      v39[45] = 0;
      *((_WORD *)v39 + 23) = -5120;
      v105 = v13;
      swift_endAccess();
      v17 = v36;
      object = v35;
      v21 = v82;
    }
    v104[159] = 6;
    sub_1ABD85EB0();
    sub_1ABF320C8();
    sub_1ABD843F0((uint64_t)v104, (uint64_t)v102, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
    sub_1ABD843F0((uint64_t)v102, (uint64_t)v103, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
    if (sub_1ABD75518((uint64_t)v103) == 1)
    {
      swift_beginAccess();
      v13 = v105;
      v41 = swift_isUniquelyReferenced_nonNull_native();
      v86 = v17;
      if ((v41 & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v43 = v13[2];
      v42 = v13[3];
      if (v43 >= v42 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v42 > 1), v43 + 1, 1, v13);
      v13[2] = v43 + 1;
      v44 = &v13[2 * v43];
      v44[4] = 0xD000000000000012;
      v44[5] = 0x80000001ABF52FB0;
      v105 = v13;
      swift_endAccess();
      v17 = v86;
    }
    sub_1ABD843F0((uint64_t)v102, (uint64_t)&subscriptionButton, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
    v100 = 7;
    sub_1ABD85EF4();
    sub_1ABF320C8();
    sub_1ABD843F0((uint64_t)&v99, (uint64_t)v97, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
    sub_1ABD843F0((uint64_t)v97, (uint64_t)v98, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
    if (sub_1ABD85FD4((uint64_t)v98) == 1)
    {
      v86 = v17;
      swift_beginAccess();
      v13 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v46 = v13[2];
      v45 = v13[3];
      if (v46 >= v45 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v45 > 1), v46 + 1, 1, v13);
      v13[2] = v46 + 1;
      v47 = &v13[2 * v46];
      v47[4] = 0xD000000000000013;
      v47[5] = 0x80000001ABF52FD0;
      v105 = v13;
      swift_endAccess();
      v17 = v86;
    }
    sub_1ABD843F0((uint64_t)v97, (uint64_t)&visualSpecification, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
    v95 = 8;
    sub_1ABF320C8();
    v82 = v21;
    v48 = v17;
    v79 = v93;
    v78 = v94;
    if ((v94 & 1) != 0)
    {
      swift_beginAccess();
      v13 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v50 = v13[2];
      v49 = v13[3];
      if (v50 >= v49 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v49 > 1), v50 + 1, 1, v13);
      v13[2] = v50 + 1;
      v51 = &v13[2 * v50];
      v51[4] = 0xD00000000000001DLL;
      v51[5] = 0x80000001ABF52FF0;
      v105 = v13;
      swift_endAccess();
    }
    v95 = 9;
    sub_1ABF320C8();
    v77 = v93;
    v76 = v94;
    if ((v94 & 1) != 0)
    {
      swift_beginAccess();
      v13 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v53 = v13[2];
      v52 = v13[3];
      if (v53 >= v52 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v52 > 1), v53 + 1, 1, v13);
      v13[2] = v53 + 1;
      v54 = &v13[2 * v53];
      v54[4] = 0xD00000000000001ELL;
      v54[5] = 0x80000001ABF53010;
      v105 = v13;
      swift_endAccess();
    }
    v95 = 10;
    sub_1ABF320C8();
    v75 = v93;
    v74 = v94;
    if ((v94 & 1) != 0)
    {
      swift_beginAccess();
      v13 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v56 = v13[2];
      v55 = v13[3];
      if (v56 >= v55 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v55 > 1), v56 + 1, 1, v13);
      v13[2] = v56 + 1;
      v57 = &v13[2 * v56];
      v57[4] = 0xD00000000000001DLL;
      v57[5] = 0x80000001ABF53030;
      v105 = v13;
      swift_endAccess();
    }
    v95 = 11;
    sub_1ABF320C8();
    v73[1] = v93;
    if ((v94 & 1) != 0)
    {
      swift_beginAccess();
      v13 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_1ABD12054(0, v13[2] + 1, 1, v13);
      v63 = v13[2];
      v62 = v13[3];
      v73[0] = v63 + 1;
      if (v63 >= v62 >> 1)
        v13 = sub_1ABD12054((_QWORD *)(v62 > 1), v73[0], 1, v13);
      v13[2] = v73[0];
      v64 = &v13[2 * v63];
      v64[4] = 0xD00000000000001ELL;
      v64[5] = 0x80000001ABF53050;
      v105 = v13;
      swift_endAccess();
    }
    v72 = v79;
    learnMoreTitle.value._object = v83;
    learnMoreTitle.value._countAndFlagsBits = v81;
    v66.value._countAndFlagsBits = v87;
    v65.value._countAndFlagsBits = countAndFlagsBits;
    v65.value._object = object;
    v66.value._object = v48;
    v67.value._countAndFlagsBits = v85;
    v67.value._object = v82;
    PaywallConfig.init(paywallType:title:descriptionTrial:descriptionNonTrial:learnMoreTitle:learnMoreURL:subscriptionButton:visualSpecification:compactPortraitTopOffsetRatio:compactLandscapeTopOffsetRatio:regularPortraitTopOffsetRatio:regularLandscapeTopOffsetRatio:)(&v92, v65, v66, v67, v84, learnMoreTitle, learnMoreURL, &subscriptionButton, &visualSpecification, *(Swift::Double_optional *)&v58, *(Swift::Double_optional *)&v59, *(Swift::Double_optional *)&v60, *(Swift::Double_optional *)&v61);
    if (v13[2])
    {
      sub_1ABD0F55C();
      v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_1ABF366C0;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      *(_QWORD *)(v68 + 56) = v69;
      *(_QWORD *)(v68 + 64) = sub_1ABD82448();
      *(_QWORD *)(v68 + 32) = v13;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v70 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v70 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v90 + 8))(v9, v11);
    swift_bridgeObjectRelease();
    memcpy(v89, &v92, 0x288uLL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
}

unint64_t sub_1ABD85A54()
{
  unint64_t result;

  result = qword_1ED34ED08;
  if (!qword_1ED34ED08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38C48, &type metadata for PaywallConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED08);
  }
  return result;
}

uint64_t PaywallConfig.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[11];
  uint64_t v16;
  _BYTE v17[368];
  _BYTE v18[152];
  _BYTE v19[376];
  char v20;

  sub_1ABD868C4(0, &qword_1ED34FEF8, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v15 - v6;
  v8 = *v1;
  v15[9] = v1[2];
  v15[10] = v8;
  v9 = v1[3];
  v15[7] = v1[4];
  v15[8] = v9;
  v10 = v1[5];
  v15[5] = v1[6];
  v15[6] = v10;
  v11 = v1[7];
  v12 = v1[8];
  v15[3] = v1[9];
  v15[4] = v11;
  v15[0] = v1[10];
  v15[1] = v1[11];
  v15[2] = v12;
  sub_1ABD843F0((uint64_t)(v1 + 12), (uint64_t)v18, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
  sub_1ABD843F0((uint64_t)(v1 + 31), (uint64_t)v19, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD85A54();
  sub_1ABF32368();
  v17[0] = 0;
  v13 = v16;
  sub_1ABF32194();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v17[0] = 1;
  sub_1ABF32194();
  v17[0] = 2;
  sub_1ABF32194();
  v16 = v5;
  v17[0] = 3;
  sub_1ABF32194();
  v17[0] = 4;
  sub_1ABF32194();
  v17[0] = 5;
  sub_1ABF32194();
  sub_1ABD843F0((uint64_t)v18, (uint64_t)v17, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
  v20 = 6;
  sub_1ABD39B78();
  sub_1ABF3217C();
  sub_1ABD843F0((uint64_t)v19, (uint64_t)v17, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
  v20 = 7;
  sub_1ABD86920();
  sub_1ABF3217C();
  v17[0] = 8;
  sub_1ABF321AC();
  v17[0] = 9;
  sub_1ABF321AC();
  v17[0] = 10;
  sub_1ABF321AC();
  v17[0] = 11;
  sub_1ABF321AC();
  return (*(uint64_t (**)(char *, _QWORD))(v5 + 8))(v7, 0);
}

uint64_t sub_1ABD85E84@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return PaywallConfig.init(from:)(a1, a2);
}

uint64_t sub_1ABD85E98(_QWORD *a1)
{
  return PaywallConfig.encode(to:)(a1);
}

unint64_t sub_1ABD85EB0()
{
  unint64_t result;

  result = qword_1ED34F630;
  if (!qword_1ED34F630)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E690, &type metadata for SubscriptionButtonConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34F630);
  }
  return result;
}

unint64_t sub_1ABD85EF4()
{
  unint64_t result;

  result = qword_1ED34F0A0;
  if (!qword_1ED34F0A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F5AC, &type metadata for PaywallVisualSpec);
    atomic_store(result, (unint64_t *)&qword_1ED34F0A0);
  }
  return result;
}

uint64_t sub_1ABD85F38(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABD85FD4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 232);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1ABD85FEC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  if (a30)
  {
    sub_1ABD0E2CC(result, a2);
    sub_1ABD0E2CC(a7, a8);
    sub_1ABD0E2CC(a13, a14);
    sub_1ABD0E2CC(a19, a20);
    sub_1ABD86184(a25, a26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABD86184(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL _s10StocksCore13PaywallConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  double *v1;
  double *v2;
  double *v3;
  double *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  char v19;
  _BOOL8 result;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[368];
  _OWORD __dst[23];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _OWORD v58[23];
  _BYTE __src[368];
  uint64_t v60[19];
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  _BYTE v73[152];
  _BYTE v74[152];
  _BYTE v75[368];
  _QWORD v76[19];
  _BYTE v77[384];

  v1 = (double *)MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = v1;
  v6 = *v1;
  v5 = *((_QWORD *)v1 + 1);
  v7 = *((_QWORD *)v1 + 2);
  v45 = *((_QWORD *)v1 + 3);
  v43 = *((_QWORD *)v1 + 4);
  v41 = *((_QWORD *)v1 + 5);
  v39 = *((_QWORD *)v1 + 6);
  v37 = *((_QWORD *)v1 + 7);
  v35 = *((_QWORD *)v1 + 8);
  v33 = *((_QWORD *)v1 + 9);
  v31 = *((_QWORD *)v1 + 10);
  v29 = *((_QWORD *)v1 + 11);
  sub_1ABD843F0((uint64_t)(v1 + 12), (uint64_t)v74, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
  sub_1ABD843F0((uint64_t)(v4 + 31), (uint64_t)v75, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
  v8 = v4[77];
  v9 = v4[78];
  v10 = v4[79];
  v11 = v4[80];
  v12 = *v3;
  v13 = *((_QWORD *)v3 + 1);
  v44 = *((_QWORD *)v3 + 3);
  v42 = *((_QWORD *)v3 + 4);
  v40 = *((_QWORD *)v3 + 5);
  v38 = *((_QWORD *)v3 + 6);
  v36 = *((_QWORD *)v3 + 7);
  v34 = *((_QWORD *)v3 + 8);
  v32 = *((_QWORD *)v3 + 9);
  v30 = *((_QWORD *)v3 + 10);
  v28 = *((_QWORD *)v3 + 11);
  v14 = *((_QWORD *)v3 + 2);
  sub_1ABD843F0((uint64_t)(v3 + 12), (uint64_t)v76, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
  sub_1ABD843F0((uint64_t)(v3 + 31), (uint64_t)v77, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
  v15 = v3[77];
  v16 = v3[78];
  v17 = v3[79];
  v18 = v3[80];
  if (*(_QWORD *)&v6 == *(_QWORD *)&v12 && v5 == v13 || (v19 = sub_1ABF3223C(), result = 0, (v19 & 1) != 0))
  {
    if (v7 == v14 && v45 == v44 || (v21 = sub_1ABF3223C(), result = 0, (v21 & 1) != 0))
    {
      if (v43 == v42 && v41 == v40 || (v22 = sub_1ABF3223C(), result = 0, (v22 & 1) != 0))
      {
        if (v39 == v38 && v37 == v36 || (v23 = sub_1ABF3223C(), result = 0, (v23 & 1) != 0))
        {
          if (v35 == v34 && v33 == v32 || (v24 = sub_1ABF3223C(), result = 0, (v24 & 1) != 0))
          {
            if (v31 == v30 && v29 == v28 || (v25 = sub_1ABF3223C(), result = 0, (v25 & 1) != 0))
            {
              sub_1ABD843F0((uint64_t)v74, (uint64_t)v73, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
              if (sub_1ABD75518((uint64_t)v73) == 1)
              {
                sub_1ABD843F0((uint64_t)v76, (uint64_t)v60, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
                if (sub_1ABD75518((uint64_t)v60) == 1)
                {
LABEL_26:
                  sub_1ABD843F0((uint64_t)v75, (uint64_t)&v63, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
                  if (sub_1ABD85FD4((uint64_t)&v63) == 1)
                  {
                    sub_1ABD843F0((uint64_t)v77, (uint64_t)v60, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
                    if (sub_1ABD85FD4((uint64_t)v60) == 1)
                      goto LABEL_33;
                    goto LABEL_31;
                  }
                  sub_1ABD843F0((uint64_t)v75, (uint64_t)__src, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
                  sub_1ABD843F0((uint64_t)v77, (uint64_t)v60, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
                  if (sub_1ABD85FD4((uint64_t)v60) == 1)
                  {
                    memcpy(__dst, __src, sizeof(__dst));
                    sub_1ABD843F0((uint64_t)v75, (uint64_t)&v48, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
                    sub_1ABD843F0((uint64_t)v75, (uint64_t)v58, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
                    sub_1ABD88A14((uint64_t *)v58);
                    sub_1ABD88A14((uint64_t *)&v48);
                    sub_1ABD88B84((uint64_t *)__dst);
LABEL_31:
                    sub_1ABD843F0((uint64_t)v75, (uint64_t)v60, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
                    sub_1ABD843F0((uint64_t)v77, (uint64_t)&v62, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
                    sub_1ABD88588((uint64_t)v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD8861C);
                    sub_1ABD88824((uint64_t)v60);
                    return 0;
                  }
                  sub_1ABD843F0((uint64_t)v77, (uint64_t)__dst, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
                  memcpy(v46, __dst, sizeof(v46));
                  sub_1ABD843F0((uint64_t)v75, (uint64_t)&v48, (unint64_t *)&unk_1ED34F0A8, (uint64_t)&type metadata for PaywallVisualSpec);
                  sub_1ABD88588((uint64_t)v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD8861C);
                  sub_1ABD88A14((uint64_t *)&v48);
                  v27 = sub_1ABE15C78((uint64_t)__src, (uint64_t)v46);
                  memcpy(v58, __src, sizeof(v58));
                  sub_1ABD88B84((uint64_t *)v58);
                  sub_1ABD88588((uint64_t)v75, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD85FEC);
                  if ((v27 & 1) != 0)
                  {
LABEL_33:
                    if (v8 == v15 && v9 == v16 && v10 == v17)
                      return v11 == v18;
                  }
                  return 0;
                }
              }
              else
              {
                sub_1ABD843F0((uint64_t)v74, (uint64_t)&v63, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
                sub_1ABD843F0((uint64_t)v76, (uint64_t)v60, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
                if (sub_1ABD75518((uint64_t)v60) != 1)
                {
                  sub_1ABD843F0((uint64_t)v76, (uint64_t)&v48, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
                  __dst[6] = v54;
                  __dst[7] = v55;
                  __dst[8] = v56;
                  *(_QWORD *)&__dst[9] = v57;
                  __dst[2] = v50;
                  __dst[3] = v51;
                  __dst[4] = v52;
                  __dst[5] = v53;
                  __dst[0] = v48;
                  __dst[1] = v49;
                  v26 = sub_1ABEEC270((uint64_t)&v63, (uint64_t)__dst);
                  v58[6] = v69;
                  v58[7] = v70;
                  v58[8] = v71;
                  *(_QWORD *)&v58[9] = v72;
                  v58[2] = v65;
                  v58[3] = v66;
                  v58[4] = v67;
                  v58[5] = v68;
                  v58[0] = v63;
                  v58[1] = v64;
                  sub_1ABD843F0((uint64_t)v74, (uint64_t)__src, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
                  sub_1ABD88CF4((uint64_t)__src);
                  sub_1ABD88D9C((uint64_t)v58);
                  if ((v26 & 1) == 0)
                    return 0;
                  goto LABEL_26;
                }
                v54 = v69;
                v55 = v70;
                v56 = v71;
                v57 = v72;
                v50 = v65;
                v51 = v66;
                v52 = v67;
                v53 = v68;
                v48 = v63;
                v49 = v64;
                sub_1ABD843F0((uint64_t)v74, (uint64_t)v58, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
                sub_1ABD843F0((uint64_t)v74, (uint64_t)__src, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
                sub_1ABD88CF4((uint64_t)__src);
                sub_1ABD88CF4((uint64_t)v58);
                sub_1ABD88D9C((uint64_t)&v48);
              }
              sub_1ABD843F0((uint64_t)v74, (uint64_t)v60, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
              sub_1ABD843F0((uint64_t)v76, (uint64_t)&v61, &qword_1ED34F638, (uint64_t)&type metadata for SubscriptionButtonConfig);
              sub_1ABD88380(v76, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD883E4);
              sub_1ABD88480(v60);
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1ABD868C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABD85A54();
    v7 = a3(a1, &type metadata for PaywallConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1ABD86920()
{
  unint64_t result;

  result = qword_1ED34F098;
  if (!qword_1ED34F098)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F5D4, &type metadata for PaywallVisualSpec);
    atomic_store(result, (unint64_t *)&qword_1ED34F098);
  }
  return result;
}

uint64_t destroy for PaywallConfig(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = a1[13];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  if (a1[60])
  {
    if (a1[32])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[38])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[44])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[50])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[56])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PaywallConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 104);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v10)
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v10;
    v11 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v11;
    v12 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v12;
    v13 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v13;
    v14 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v14;
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    v15 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = v15;
    v16 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v16;
    v17 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = v17;
    v18 = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = v18;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v19;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v20 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v20;
    v21 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v21;
    v22 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v22;
  }
  v23 = (_OWORD *)(a1 + 248);
  v24 = (_OWORD *)(a2 + 248);
  v25 = *(_QWORD *)(a2 + 480);
  if (v25)
  {
    v26 = *(_QWORD *)(a2 + 256);
    if (v26)
    {
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = v26;
      v27 = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = v27;
      v28 = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = v28;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v29 = *(_QWORD *)(a2 + 304);
      if (v29)
        goto LABEL_7;
    }
    else
    {
      v40 = *(_OWORD *)(a2 + 264);
      *v23 = *v24;
      *(_OWORD *)(a1 + 264) = v40;
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      v29 = *(_QWORD *)(a2 + 304);
      if (v29)
      {
LABEL_7:
        *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
        *(_QWORD *)(a1 + 304) = v29;
        v30 = *(_QWORD *)(a2 + 320);
        *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
        *(_QWORD *)(a1 + 320) = v30;
        v31 = *(_QWORD *)(a2 + 336);
        *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
        *(_QWORD *)(a1 + 336) = v31;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        v32 = *(_QWORD *)(a2 + 352);
        if (v32)
          goto LABEL_8;
        goto LABEL_14;
      }
    }
    v41 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v41;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    v32 = *(_QWORD *)(a2 + 352);
    if (v32)
    {
LABEL_8:
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = v32;
      v33 = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = v33;
      v34 = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = v34;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v35 = *(_QWORD *)(a2 + 400);
      if (v35)
        goto LABEL_9;
      goto LABEL_15;
    }
LABEL_14:
    v42 = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 360) = v42;
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    v35 = *(_QWORD *)(a2 + 400);
    if (v35)
    {
LABEL_9:
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = v35;
      v36 = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = v36;
      v37 = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 432) = v37;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v38 = *(_QWORD *)(a2 + 448);
      if (v38)
      {
LABEL_10:
        *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
        *(_QWORD *)(a1 + 448) = v38;
        v39 = *(_QWORD *)(a2 + 464);
        *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
        *(_QWORD *)(a1 + 464) = v39;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
LABEL_17:
        *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
        *(_QWORD *)(a1 + 480) = v25;
        *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
        v45 = *(_OWORD *)(a2 + 512);
        *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
        *(_OWORD *)(a1 + 512) = v45;
        *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
        *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
        *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
        *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
        *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
        *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
        *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
        *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
        *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
        *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
        *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        goto LABEL_18;
      }
LABEL_16:
      v44 = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 456) = v44;
      goto LABEL_17;
    }
LABEL_15:
    v43 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v43;
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    v38 = *(_QWORD *)(a2 + 448);
    if (v38)
      goto LABEL_10;
    goto LABEL_16;
  }
  memcpy(v23, v24, 0x170uLL);
LABEL_18:
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  return a1;
}

uint64_t assignWithCopy for PaywallConfig(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 *v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _OWORD *v45;
  _OWORD *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _OWORD *v59;
  _OWORD *v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 96);
  v5 = (_OWORD *)(a2 + 96);
  v6 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 104))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87AB4(a1 + 96);
      v7 = *(_OWORD *)(a2 + 112);
      *v4 = *v5;
      *(_OWORD *)(a1 + 112) = v7;
      v8 = *(_OWORD *)(a2 + 176);
      v10 = *(_OWORD *)(a2 + 128);
      v9 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v8;
      *(_OWORD *)(a1 + 128) = v10;
      *(_OWORD *)(a1 + 144) = v9;
      v12 = *(_OWORD *)(a2 + 208);
      v11 = *(_OWORD *)(a2 + 224);
      v13 = *(_OWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 208) = v12;
      *(_OWORD *)(a1 + 224) = v11;
      *(_OWORD *)(a1 + 192) = v13;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 112);
    *v4 = *v5;
    *(_OWORD *)(a1 + 112) = v14;
    v15 = *(_OWORD *)(a2 + 128);
    v16 = *(_OWORD *)(a2 + 144);
    v17 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v17;
    *(_OWORD *)(a1 + 128) = v15;
    *(_OWORD *)(a1 + 144) = v16;
    v18 = *(_OWORD *)(a2 + 192);
    v19 = *(_OWORD *)(a2 + 208);
    v20 = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 208) = v19;
    *(_OWORD *)(a1 + 224) = v20;
    *(_OWORD *)(a1 + 192) = v18;
  }
  v21 = (__int128 *)(a1 + 248);
  v22 = (__int128 *)(a2 + 248);
  v23 = *(_QWORD *)(a2 + 480);
  if (!*(_QWORD *)(a1 + 480))
  {
    if (!v23)
    {
LABEL_21:
      memcpy((void *)(a1 + 248), (const void *)(a2 + 248), 0x170uLL);
      goto LABEL_61;
    }
    if (*(_QWORD *)(a2 + 256))
    {
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      if (*(_QWORD *)(a2 + 304))
        goto LABEL_16;
    }
    else
    {
      v27 = *v22;
      v28 = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = v28;
      *v21 = v27;
      if (*(_QWORD *)(a2 + 304))
      {
LABEL_16:
        *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
        *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
        *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
        *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
        *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
        *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        if (*(_QWORD *)(a2 + 352))
          goto LABEL_17;
        goto LABEL_27;
      }
    }
    v29 = *(_OWORD *)(a2 + 296);
    v30 = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 328) = v30;
    *(_OWORD *)(a1 + 296) = v29;
    if (*(_QWORD *)(a2 + 352))
    {
LABEL_17:
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      if (*(_QWORD *)(a2 + 400))
        goto LABEL_18;
      goto LABEL_28;
    }
LABEL_27:
    v31 = *(_OWORD *)(a2 + 344);
    v32 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v32;
    *(_OWORD *)(a1 + 344) = v31;
    if (*(_QWORD *)(a2 + 400))
    {
LABEL_18:
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      if (*(_QWORD *)(a2 + 448))
      {
LABEL_19:
        *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
        *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
        *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
        *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
LABEL_30:
        *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
        *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
        *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
        *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
        *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
        *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
        *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
        *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
        *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
        *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
        *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
        *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
        *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
        *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
        *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
        *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
        *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
        *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        goto LABEL_61;
      }
LABEL_29:
      v35 = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 456) = v35;
      goto LABEL_30;
    }
LABEL_28:
    v33 = *(_OWORD *)(a2 + 392);
    v34 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v34;
    *(_OWORD *)(a1 + 392) = v33;
    if (*(_QWORD *)(a2 + 448))
      goto LABEL_19;
    goto LABEL_29;
  }
  if (!v23)
  {
    sub_1ABD87B50((_QWORD *)(a1 + 248));
    goto LABEL_21;
  }
  v24 = *(_QWORD *)(a2 + 256);
  if (*(_QWORD *)(a1 + 256))
  {
    if (v24)
    {
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87AE8(a1 + 248);
      v26 = *(_OWORD *)(a2 + 264);
      v25 = *(_OWORD *)(a2 + 280);
      *v21 = *v22;
      *(_OWORD *)(a1 + 264) = v26;
      *(_OWORD *)(a1 + 280) = v25;
    }
  }
  else if (v24)
  {
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v36 = *v22;
    v37 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v37;
    *v21 = v36;
  }
  v38 = (_OWORD *)(a1 + 296);
  v39 = (_OWORD *)(a2 + 296);
  v40 = *(_QWORD *)(a2 + 304);
  if (*(_QWORD *)(a1 + 304))
  {
    if (v40)
    {
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87AE8(a1 + 296);
      v42 = *(_OWORD *)(a2 + 312);
      v41 = *(_OWORD *)(a2 + 328);
      *v38 = *v39;
      *(_OWORD *)(a1 + 312) = v42;
      *(_OWORD *)(a1 + 328) = v41;
    }
  }
  else if (v40)
  {
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v43 = *v39;
    v44 = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 328) = v44;
    *v38 = v43;
  }
  v45 = (_OWORD *)(a1 + 344);
  v46 = (_OWORD *)(a2 + 344);
  v47 = *(_QWORD *)(a2 + 352);
  if (*(_QWORD *)(a1 + 352))
  {
    if (v47)
    {
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87AE8(a1 + 344);
      v49 = *(_OWORD *)(a2 + 360);
      v48 = *(_OWORD *)(a2 + 376);
      *v45 = *v46;
      *(_OWORD *)(a1 + 360) = v49;
      *(_OWORD *)(a1 + 376) = v48;
    }
  }
  else if (v47)
  {
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v50 = *v46;
    v51 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v51;
    *v45 = v50;
  }
  v52 = (_OWORD *)(a1 + 392);
  v53 = (_OWORD *)(a2 + 392);
  v54 = *(_QWORD *)(a2 + 400);
  if (*(_QWORD *)(a1 + 400))
  {
    if (v54)
    {
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87AE8(a1 + 392);
      v56 = *(_OWORD *)(a2 + 408);
      v55 = *(_OWORD *)(a2 + 424);
      *v52 = *v53;
      *(_OWORD *)(a1 + 408) = v56;
      *(_OWORD *)(a1 + 424) = v55;
    }
  }
  else if (v54)
  {
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v57 = *v53;
    v58 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v58;
    *v52 = v57;
  }
  v59 = (_OWORD *)(a1 + 440);
  v60 = (_OWORD *)(a2 + 440);
  v61 = *(_QWORD *)(a2 + 448);
  if (*(_QWORD *)(a1 + 448))
  {
    if (v61)
    {
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87B1C(a1 + 440);
      v62 = *(_OWORD *)(a2 + 456);
      *v59 = *v60;
      *(_OWORD *)(a1 + 456) = v62;
    }
  }
  else if (v61)
  {
    *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
    *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
    *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
    *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v63 = *(_OWORD *)(a2 + 456);
    *v59 = *v60;
    *(_OWORD *)(a1 + 456) = v63;
  }
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
LABEL_61:
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  return a1;
}

uint64_t sub_1ABD87AB4(uint64_t a1)
{
  destroy for SubscriptionButtonConfig();
  return a1;
}

uint64_t sub_1ABD87AE8(uint64_t a1)
{
  destroy for MultiResolutionImage();
  return a1;
}

uint64_t sub_1ABD87B1C(uint64_t a1)
{
  destroy for CurrencyConversion();
  return a1;
}

_QWORD *sub_1ABD87B50(_QWORD *a1)
{
  destroy for PaywallVisualSpec(a1);
  return a1;
}

void *__swift_memcpy648_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x288uLL);
}

uint64_t assignWithTake for PaywallConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 104))
  {
    v10 = *(_QWORD *)(a2 + 104);
    if (v10)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v12;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v13;
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v14;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      v15 = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = v15;
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v17;
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1ABD87AB4(a1 + 96);
  }
  v19 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v19;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v20;
  v21 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v21;
  v22 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v22;
LABEL_6:
  if (*(_QWORD *)(a1 + 480))
  {
    if (*(_QWORD *)(a2 + 480))
    {
      if (*(_QWORD *)(a1 + 256))
      {
        v23 = *(_QWORD *)(a2 + 256);
        if (v23)
        {
          *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
          *(_QWORD *)(a1 + 256) = v23;
          swift_bridgeObjectRelease();
          v24 = *(_QWORD *)(a2 + 272);
          *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
          *(_QWORD *)(a1 + 272) = v24;
          swift_bridgeObjectRelease();
          v25 = *(_QWORD *)(a2 + 288);
          *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
          *(_QWORD *)(a1 + 288) = v25;
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        sub_1ABD87AE8(a1 + 248);
      }
      v26 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 264) = v26;
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
LABEL_15:
      if (*(_QWORD *)(a1 + 304))
      {
        v27 = *(_QWORD *)(a2 + 304);
        if (v27)
        {
          *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
          *(_QWORD *)(a1 + 304) = v27;
          swift_bridgeObjectRelease();
          v28 = *(_QWORD *)(a2 + 320);
          *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
          *(_QWORD *)(a1 + 320) = v28;
          swift_bridgeObjectRelease();
          v29 = *(_QWORD *)(a2 + 336);
          *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
          *(_QWORD *)(a1 + 336) = v29;
          swift_bridgeObjectRelease();
          goto LABEL_20;
        }
        sub_1ABD87AE8(a1 + 296);
      }
      v30 = *(_OWORD *)(a2 + 312);
      *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
      *(_OWORD *)(a1 + 312) = v30;
      *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
LABEL_20:
      if (*(_QWORD *)(a1 + 352))
      {
        v31 = *(_QWORD *)(a2 + 352);
        if (v31)
        {
          *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
          *(_QWORD *)(a1 + 352) = v31;
          swift_bridgeObjectRelease();
          v32 = *(_QWORD *)(a2 + 368);
          *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
          *(_QWORD *)(a1 + 368) = v32;
          swift_bridgeObjectRelease();
          v33 = *(_QWORD *)(a2 + 384);
          *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
          *(_QWORD *)(a1 + 384) = v33;
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
        sub_1ABD87AE8(a1 + 344);
      }
      v34 = *(_OWORD *)(a2 + 360);
      *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
      *(_OWORD *)(a1 + 360) = v34;
      *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
LABEL_25:
      if (*(_QWORD *)(a1 + 400))
      {
        v35 = *(_QWORD *)(a2 + 400);
        if (v35)
        {
          *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
          *(_QWORD *)(a1 + 400) = v35;
          swift_bridgeObjectRelease();
          v36 = *(_QWORD *)(a2 + 416);
          *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
          *(_QWORD *)(a1 + 416) = v36;
          swift_bridgeObjectRelease();
          v37 = *(_QWORD *)(a2 + 432);
          *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
          *(_QWORD *)(a1 + 432) = v37;
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        sub_1ABD87AE8(a1 + 392);
      }
      v38 = *(_OWORD *)(a2 + 408);
      *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
      *(_OWORD *)(a1 + 408) = v38;
      *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
LABEL_30:
      if (*(_QWORD *)(a1 + 448))
      {
        v39 = *(_QWORD *)(a2 + 448);
        if (v39)
        {
          *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
          *(_QWORD *)(a1 + 448) = v39;
          swift_bridgeObjectRelease();
          v40 = *(_QWORD *)(a2 + 464);
          *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
          *(_QWORD *)(a1 + 464) = v40;
          swift_bridgeObjectRelease();
LABEL_35:
          v42 = *(_QWORD *)(a2 + 480);
          *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
          *(_QWORD *)(a1 + 480) = v42;
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
          *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
          *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
          *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
          *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
          *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
          *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
          *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
          *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
          *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
        sub_1ABD87B1C(a1 + 440);
      }
      v41 = *(_OWORD *)(a2 + 456);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
      *(_OWORD *)(a1 + 456) = v41;
      goto LABEL_35;
    }
    sub_1ABD87B50((_QWORD *)(a1 + 248));
  }
  memcpy((void *)(a1 + 248), (const void *)(a2 + 248), 0x170uLL);
LABEL_36:
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaywallConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 648))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaywallConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 648) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 648) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallConfig()
{
  return &type metadata for PaywallConfig;
}

uint64_t getEnumTagSinglePayload for PaywallConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PaywallConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1ABD881E0 + 4 * byte_1ABF38ABD[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1ABD88214 + 4 * byte_1ABF38AB8[v4]))();
}

uint64_t sub_1ABD88214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD8821C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD88224);
  return result;
}

uint64_t sub_1ABD88230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD88238);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1ABD8823C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD88244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallConfig.CodingKeys()
{
  return &type metadata for PaywallConfig.CodingKeys;
}

unint64_t sub_1ABD88264()
{
  unint64_t result;

  result = qword_1EEC42158;
  if (!qword_1EEC42158)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38C20, &type metadata for PaywallConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42158);
  }
  return result;
}

unint64_t sub_1ABD882AC()
{
  unint64_t result;

  result = qword_1ED34ED18;
  if (!qword_1ED34ED18)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38B58, &type metadata for PaywallConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED18);
  }
  return result;
}

unint64_t sub_1ABD882F4()
{
  unint64_t result;

  result = qword_1ED34ED10;
  if (!qword_1ED34ED10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38B80, &type metadata for PaywallConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED10);
  }
  return result;
}

uint64_t sub_1ABD88338()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

_QWORD *sub_1ABD88380(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18]);
  return a1;
}

uint64_t sub_1ABD883E4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t *sub_1ABD88480(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[19];
  v3 = a1[20];
  sub_1ABD85F38(*a1, a1[1]);
  sub_1ABD85F38(v2, v3);
  return a1;
}

uint64_t sub_1ABD88588(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v10 = *(_OWORD *)(a1 + 320);
  v11 = *(_OWORD *)(a1 + 336);
  v8 = *(_OWORD *)(a1 + 288);
  v9 = *(_OWORD *)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    *(_QWORD *)(a1 + 352),
    *(_QWORD *)(a1 + 360));
  return a1;
}

uint64_t sub_1ABD8861C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  if (a30)
  {
    sub_1ABD887B8(result, a2);
    sub_1ABD887B8(a7, a8);
    sub_1ABD887B8(a13, a14);
    sub_1ABD887B8(a19, a20);
    sub_1ABD887F4(a25, a26);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABD887B8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABD887F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABD88824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 376);
  v21 = *(_QWORD *)(a1 + 368);
  v3 = *(_QWORD *)(a1 + 384);
  v4 = *(_QWORD *)(a1 + 392);
  v5 = *(_QWORD *)(a1 + 400);
  v6 = *(_QWORD *)(a1 + 408);
  v7 = *(_QWORD *)(a1 + 416);
  v8 = *(_QWORD *)(a1 + 424);
  v19 = *(_OWORD *)(a1 + 448);
  v20 = *(_OWORD *)(a1 + 432);
  v17 = *(_OWORD *)(a1 + 480);
  v18 = *(_OWORD *)(a1 + 464);
  v15 = *(_OWORD *)(a1 + 512);
  v16 = *(_OWORD *)(a1 + 496);
  v13 = *(_OWORD *)(a1 + 544);
  v14 = *(_OWORD *)(a1 + 528);
  v11 = *(_OWORD *)(a1 + 576);
  v12 = *(_OWORD *)(a1 + 560);
  v10 = *(_OWORD *)(a1 + 592);
  sub_1ABD85FEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232));
  sub_1ABD85FEC(v21, v2, v3, v4, v5, v6, v7, v8, v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t *sub_1ABD88A14(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[12];
  v5 = a1[13];
  v7 = a1[19];
  v8 = a1[18];
  v9 = a1[25];
  v10 = a1[24];
  sub_1ABD887B8(*a1, a1[1]);
  sub_1ABD887B8(v2, v3);
  sub_1ABD887B8(v4, v5);
  sub_1ABD887B8(v8, v7);
  sub_1ABD887F4(v10, v9);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t *sub_1ABD88B84(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[12];
  v5 = a1[13];
  v7 = a1[19];
  v8 = a1[18];
  v9 = a1[25];
  v10 = a1[24];
  sub_1ABD0E2CC(*a1, a1[1]);
  sub_1ABD0E2CC(v2, v3);
  sub_1ABD0E2CC(v4, v5);
  sub_1ABD0E2CC(v8, v7);
  sub_1ABD86184(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABD88CF4(uint64_t a1)
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABD88D9C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABD88E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;

  sub_1ABD88F14();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  sub_1ABF2FF5C();
  sub_1ABD1E23C(v10, a3, a4, a5);
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1ABF31114();
  type metadata accessor for Quote();
  v12 = sub_1ABF31174();
  swift_release();

  return v12;
}

void sub_1ABD88F14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FFD0)
  {
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FFD0);
  }
}

uint64_t sub_1ABD88F68(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  sub_1ABD21654(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Quote();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v14 - v10;
  sub_1ABE0E830(*a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1ABCFC3BC((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1ABD21654);
    sub_1ABD8AC30();
    swift_allocError();
    sub_1ABCF5A54(0, &qword_1EEC42178, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311D4();
  }
  else
  {
    sub_1ABCFE2AC((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    sub_1ABCFC790((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    sub_1ABCF5A54(0, &qword_1EEC42178, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v12 = sub_1ABF311E0();
    sub_1ABCFC3BC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  }
  return v12;
}

uint64_t sub_1ABD89140()
{
  sub_1ABCF5A54(0, &qword_1EEC42160, (uint64_t (*)(uint64_t))sub_1ABD21654, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABD891AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;

  sub_1ABD88E44(a6, a7, a8, a9, a10);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  sub_1ABF2FF68();
  v13 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  sub_1ABF2FF68();
  v15 = (id)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABD892B8(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  sub_1ABD21654(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCFC790(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  v7 = type metadata accessor for Quote();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  a2(v6);
  return sub_1ABCFC3BC((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1ABD21654);
}

uint64_t sub_1ABD89380(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1ABD21654(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Quote();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  a2(v5);
  return sub_1ABCFC3BC((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1ABD21654);
}

uint64_t sub_1ABD89420()
{
  sub_1ABD1F1CC();
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABD89474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABD1E23C(a6, a7, a8, a9);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1ABD17048;
  *(_QWORD *)(v15 + 24) = v14;
  sub_1ABF2FF68();
  v16 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1ABD17048;
  *(_QWORD *)(v17 + 24) = v14;
  v18 = (id)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABD895C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABD895D8(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1ABD1E23C);
}

uint64_t sub_1ABD895CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABD895D8(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1ABD89420);
}

uint64_t sub_1ABD895D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD))
{
  int64_t v7;
  uint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;

  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v18 = a5;
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1ABD16414(0, v7, 0);
    v8 = v19;
    v10 = (uint64_t *)(a1 + 56);
    do
    {
      v11 = *(v10 - 1);
      v12 = *v10;
      v14 = *(_QWORD *)(v19 + 16);
      v13 = *(_QWORD *)(v19 + 24);
      sub_1ABF2FF5C();
      if (v14 >= v13 >> 1)
        sub_1ABD16414(v13 > 1, v14 + 1, 1);
      *(_QWORD *)(v19 + 16) = v14 + 1;
      v15 = v19 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v12;
      v10 += 17;
      --v7;
    }
    while (v7);
    a5 = v18;
  }
  v16 = a5(v8, a2, a3);
  swift_bridgeObjectRelease();
  return v16;
}

_QWORD *sub_1ABD896DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[3];
  uint64_t v16;

  v15[2] = a2;
  v15[0] = a1;
  v3 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v3);
  v15[1] = (uint64_t)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF30EE0();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF30AE4();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8];
  MEMORY[0x1E0C80A78](v6);
  sub_1ABD200F0(0, &qword_1ED34DCC8, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DB49C0]);
  swift_allocObject();
  v2[7] = sub_1ABF310C0();
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE22C(&qword_1ED34DC18, 255, v7, MEMORY[0x1E0DB3208]);
  sub_1ABD33DE8(0);
  sub_1ABCFE22C(&qword_1ED34DFD0, 255, (uint64_t (*)(uint64_t))sub_1ABD33DE8, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  sub_1ABF30AFC();
  swift_allocObject();
  v2[8] = sub_1ABF30AF0();
  v8 = MEMORY[0x1E0DEE9D8];
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE22C((unint64_t *)&unk_1ED350B00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], MEMORY[0x1E0DB41A8]);
  sub_1ABD33D6C(0);
  v9 = MEMORY[0x1E0DEAF38];
  sub_1ABCFE22C((unint64_t *)&qword_1ED350B88, 255, (uint64_t (*)(uint64_t))sub_1ABD33D6C, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  sub_1ABD350B4();
  swift_allocObject();
  v2[9] = sub_1ABF30C34();
  v2[10] = v8;
  v10 = v15[0];
  sub_1ABD07E04(v15[0], (uint64_t)(v2 + 2));
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCF5A54(0, &qword_1ED350340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1ABF366C0;
  sub_1ABF30B20();
  v16 = v12;
  sub_1ABCFE22C((unint64_t *)&unk_1ED350AE0, 255, v11, MEMORY[0x1E0DB33D8]);
  sub_1ABD0B230(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED350B60, 255, (uint64_t (*)(uint64_t))sub_1ABD0B230, v9);
  sub_1ABF31E04();
  sub_1ABCF5A54(0, &qword_1ED34CC40, (uint64_t (*)(uint64_t))sub_1ABD0604C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v13 = sub_1ABF31078();
  __swift_destroy_boxed_opaque_existential_1(v10);
  v2[11] = v13;
  return v2;
}

uint64_t sub_1ABD89A80()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1ABD89ACC(void *a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void), const char *a5)
{
  uint64_t v10;
  id v11;
  id v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *oslog;
  uint64_t v19;

  if (qword_1ED34FAD8 != -1)
    swift_once();
  v10 = sub_1ABF3133C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED34E920);
  sub_1ABF2FF5C();
  v11 = a1;
  sub_1ABF2FF5C();
  v12 = a1;
  oslog = sub_1ABF31324();
  v13 = a4();
  if (os_log_type_enabled(oslog, v13))
  {
    v14 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    v19 = v15;
    *(_DWORD *)v14 = 136315394;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(a2, a3, &v19);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    swift_getErrorValue();
    v16 = sub_1ABF322C0();
    sub_1ABD1FE2C(v16, v17, &v19);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1ABCEF000, oslog, v13, a5, (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v15, -1, -1);
    MEMORY[0x1AF438FFC](v14, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_1ABD89D10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD8A848(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(v3 + 80) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD89DA4@<X0>(double *a1@<X8>)
{
  return sub_1ABD89DB8(a1, 60.0);
}

uint64_t sub_1ABD89DB0@<X0>(double *a1@<X8>)
{
  return sub_1ABD89DB8(a1, 5.0);
}

uint64_t sub_1ABD89DB8@<X0>(double *a1@<X8>, double a2@<D0>)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = a2;
  v3 = *MEMORY[0x1E0DB32C8];
  v4 = sub_1ABF30B14();
  return (*(uint64_t (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, v3, v4);
}

void sub_1ABD89E00(uint64_t a1, uint64_t a2, double a3)
{
  sub_1ABD89E20(a1, a2, a3);
}

void sub_1ABD89E20(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v4 = v3;
  v8 = sub_1ABF315A0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD133B8();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF530], v8);
  v12 = (void *)sub_1ABF31C48();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  sub_1ABD200F0(0, (unint64_t *)&qword_1ED34DE48, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_1ABF2FF5C();
  sub_1ABF31270();

  swift_release();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(double *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = v4;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  v15 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABD89FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  sub_1ABD88F14();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  sub_1ABF2FF5C();
  v6 = sub_1ABD1EF50();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1ABD8A060(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  double v25;
  _BYTE *v26;
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  _BYTE v45[4];
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;

  v56 = a4;
  sub_1ABD21654(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = (int *)type metadata accessor for Quote();
  v13 = *((_QWORD *)v12 - 1);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (double *)&v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v18 = (double *)&v45[-v17];
  v19 = *a1;
  if (!*(_QWORD *)(v19 + 16))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, int *))(v13 + 56))(v11, 1, 1, v12);
LABEL_7:
    v23 = (uint64_t (*)(_QWORD))sub_1ABD21654;
    v24 = (uint64_t)v11;
    return sub_1ABCFC3BC(v24, v23);
  }
  sub_1ABF2FF5C();
  v20 = sub_1ABD00F9C(a2, a3);
  if ((v21 & 1) != 0)
  {
    sub_1ABCFC790(*(_QWORD *)(v19 + 56) + *(_QWORD *)(v13 + 72) * v20, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, int *))(v13 + 56))(v11, v22, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(_BYTE *, uint64_t, int *))(v13 + 48))(v11, 1, v12) == 1)
    goto LABEL_7;
  sub_1ABCFE2AC((uint64_t)v11, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  if (((_BYTE)v18[1] & 1) != 0 || ((_BYTE)v18[3] & 1) != 0)
  {
    v23 = (uint64_t (*)(_QWORD))type metadata accessor for Quote;
    v24 = (uint64_t)v18;
  }
  else
  {
    v25 = v18[2] + a5 - *v18;
    v53 = *((_QWORD *)v18 + 4);
    v52 = *((unsigned __int8 *)v18 + 40);
    v51 = *((_QWORD *)v18 + 6);
    v50 = *((unsigned __int8 *)v18 + 56);
    v49 = *((_QWORD *)v18 + 8);
    v48 = *((unsigned __int8 *)v18 + 72);
    v55 = *((_QWORD *)v18 + 14);
    v47 = *((_QWORD *)v18 + 15);
    v54 = *((unsigned __int8 *)v18 + 128);
    v26 = (char *)v16 + v12[13];
    v27 = sub_1ABF30760();
    v28 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
    v28(v26, 1, 1, v27);
    v28((_BYTE *)v16 + v12[14], 1, 1, v27);
    sub_1ABCFC790((uint64_t)v18 + v12[15], (uint64_t)v16 + v12[15], (uint64_t (*)(_QWORD))sub_1ABD226F0);
    v29 = v12[17];
    v46 = *((unsigned __int8 *)v18 + v12[16]);
    LOBYTE(v28) = *((_BYTE *)v18 + v29);
    sub_1ABCFC790((uint64_t)v18 + v12[20], (uint64_t)v16 + v12[20], (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABCFC790((uint64_t)v18 + v12[21], (uint64_t)v16 + v12[21], (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABCFC790((uint64_t)v18 + v12[23], (uint64_t)v16 + v12[23], (uint64_t (*)(_QWORD))sub_1ABD226F0);
    v30 = v12[24];
    v31 = (char *)v18 + v30;
    v32 = (char *)v16 + v30;
    v33 = sub_1ABF3094C();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v32, v31, v33);
    v34 = v47;
    sub_1ABF2FF5C();
    sub_1ABF30754();
    *v16 = a5;
    *((_BYTE *)v16 + 8) = 0;
    v16[2] = v25;
    *((_BYTE *)v16 + 24) = 0;
    *((_QWORD *)v16 + 4) = v53;
    *((_BYTE *)v16 + 40) = v52;
    *((_QWORD *)v16 + 6) = v51;
    *((_BYTE *)v16 + 56) = v50;
    *((_QWORD *)v16 + 8) = v49;
    *((_BYTE *)v16 + 72) = v48;
    v16[10] = 0.0;
    *((_BYTE *)v16 + 88) = 1;
    v16[12] = 0.0;
    *((_BYTE *)v16 + 104) = 1;
    *((_QWORD *)v16 + 14) = v55;
    *((_QWORD *)v16 + 15) = v34;
    *((_BYTE *)v16 + 128) = v54;
    *((_BYTE *)v16 + v12[16]) = v46;
    *((_BYTE *)v16 + v12[17]) = (_BYTE)v28;
    *((_BYTE *)v16 + v12[18]) = 7;
    v35 = (char *)v16 + v12[19];
    *(_QWORD *)v35 = 0;
    v35[8] = 1;
    sub_1ABCF5A54(0, &qword_1EEC42168, (uint64_t (*)(uint64_t))sub_1ABD8A660, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1ABD8A660();
    v37 = v36;
    v38 = *(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80);
    v39 = (v38 + 32) & ~v38;
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1ABF366C0;
    v41 = (uint64_t *)(v40 + v39);
    v42 = v40 + v39 + *(int *)(v37 + 48);
    *v41 = a2;
    v41[1] = a3;
    sub_1ABCFC790((uint64_t)v16, v42, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    sub_1ABF2FF5C();
    v43 = sub_1ABDEA390(v40);
    sub_1ABD05E34(v43);
    swift_bridgeObjectRelease();
    sub_1ABCFC3BC((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v24 = (uint64_t)v18;
    v23 = (uint64_t (*)(_QWORD))type metadata accessor for Quote;
  }
  return sub_1ABCFC3BC(v24, v23);
}

uint64_t sub_1ABD8A4DC()
{
  uint64_t v0;

  sub_1ABD8AB8C(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABD8A500(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = a1[3];
  v5 = a1[4];
  v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  return sub_1ABD8A6F0((uint64_t)v6, a2, v2, v4, v5);
}

void sub_1ABD8A540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1ABD891AC(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[2], v4[3]);
}

void sub_1ABD8A56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1ABD89474(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[2], v4[3]);
}

uint64_t sub_1ABD8A598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_1ABD8A5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1ABD8A5A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1ABD8A5B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1ABD8A5B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1ABD8A5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for QuoteManager.StoreDescriptor()
{
  return &type metadata for QuoteManager.StoreDescriptor;
}

uint64_t sub_1ABD8A5D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABD8A5FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABD89FD0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1ABD8A614()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABD8A640(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABD8A060(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), *(double *)(v1 + 32));
}

void sub_1ABD8A660()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED347180)
  {
    type metadata accessor for Quote();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED347180);
  }
}

uint64_t sub_1ABD8A6C4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABD8A6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v13[5];

  v13[3] = a4;
  v13[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  if (MEMORY[0x1AF4390D4](a3 + 16))
  {
    v10 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v10 + 8))(v13, a2, ObjectType, v10);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1ABD8A78C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  sub_1ABD21670();
  sub_1ABF31F6C();
  sub_1ABF31870();
  type metadata accessor for Quote();
  result = sub_1ABF31F6C();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1ABD8A848(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t i;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_17:
    v3 = sub_1ABF31FE4();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      for (i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v5 = MEMORY[0x1AF4380CC](i, a1);
          v6 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_14:
            __break(1u);
            return v11;
          }
        }
        else
        {
          if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_17;
          }
          v5 = *(_QWORD *)(a1 + 8 * i + 32);
          sub_1ABF2FF68();
          v6 = i + 1;
          if (__OFADD__(i, 1))
            goto LABEL_14;
        }
        v7 = MEMORY[0x1AF4390D4](v5 + 16);
        if (v7 && (v8 = v7, swift_unknownObjectRelease(), v8 == a2))
        {
          swift_release();
        }
        else
        {
          sub_1ABF31EF4();
          sub_1ABF31F24();
          sub_1ABF31F30();
          sub_1ABF31F00();
        }
        if (v6 == v3)
          return v11;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1ABD8A9A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1ABF30760();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1ABF30B38();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_1ABD8AA6C(void *a1)
{
  uint64_t v1;

  sub_1ABD89ACC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), MEMORY[0x1E0DF2290], "Quote request with ID: %s completed with error: %s");
}

void sub_1ABD8AA94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E7C8)
  {
    sub_1ABD200F0(255, (unint64_t *)&qword_1ED34DE48, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    sub_1ABD8AB0C();
    v0 = sub_1ABF31F60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E7C8);
  }
}

unint64_t sub_1ABD8AB0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34E668;
  if (!qword_1ED34E668)
  {
    sub_1ABD200F0(255, (unint64_t *)&qword_1ED34DE48, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA0D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34E668);
  }
  return result;
}

void sub_1ABD8AB64(void *a1)
{
  uint64_t v1;

  sub_1ABD89ACC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), MEMORY[0x1E0DF2280], "Quote fetch with ID: %s returned error: %s");
}

uint64_t sub_1ABD8AB8C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1ABD8ABB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABD8ABD4()
{
  uint64_t v0;
  void (*v1)(void);

  v1 = *(void (**)(void))(v0 + 16);
  sub_1ABDEA390(MEMORY[0x1E0DEE9D8]);
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD8AC10(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABD892B8(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1ABD8AC28(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABD89380(a1, *(void (**)(char *))(v1 + 16));
}

unint64_t sub_1ABD8AC30()
{
  unint64_t result;

  result = qword_1EEC42170;
  if (!qword_1EEC42170)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38E7C, &type metadata for QuoteManagerError);
    atomic_store(result, (unint64_t *)&qword_1EEC42170);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for QuoteManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABD8ACB4 + 4 * byte_1ABF38CB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABD8ACD4 + 4 * byte_1ABF38CB5[v4]))();
}

_BYTE *sub_1ABD8ACB4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABD8ACD4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD8ACDC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD8ACE4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABD8ACEC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABD8ACF4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for QuoteManagerError()
{
  return &type metadata for QuoteManagerError;
}

unint64_t sub_1ABD8AD14()
{
  unint64_t result;

  result = qword_1EEC42180;
  if (!qword_1EEC42180)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38E54, &type metadata for QuoteManagerError);
    atomic_store(result, (unint64_t *)&qword_1EEC42180);
  }
  return result;
}

uint64_t WatchlistQuery.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34C7B8, (uint64_t (*)(uint64_t))sub_1ABD68798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  *(_QWORD *)(v0 + 16) = sub_1ABF2FC14();
  return v0;
}

uint64_t WatchlistQuery.init()()
{
  uint64_t v0;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34C7B8, (uint64_t (*)(uint64_t))sub_1ABD68798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  *(_QWORD *)(v0 + 16) = sub_1ABF2FC14();
  return v0;
}

uint64_t WatchlistQuery.entities(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = v1;
  return swift_task_switch();
}

uint64_t sub_1ABD8AEA8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[24] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[22];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[20] = v5;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v8 = sub_1ABF316E4();
    v0[21] = sub_1ABD1FE2C(v8, v9, &v14);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching watchlists for entities with identifiers=[%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v7, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v10 = v0[5];
  v11 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v10);
  v0[25] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(1, v10, v11);
  v12 = (_QWORD *)swift_task_alloc();
  v0[26] = v12;
  *v12 = v0;
  v12[1] = sub_1ABD8B124;
  return sub_1ABF31150();
}

uint64_t sub_1ABD8B124()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABD8B19C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v51;
  os_log_type_t v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v1 = v0 + 88;
  v2 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v3 = sub_1ABF31324();
  v4 = sub_1ABF31BF4();
  if (os_log_type_enabled(v3, v4))
  {
    v60 = v4;
    v5 = *(_QWORD *)(v0 + 176);
    v6 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    v62 = v58;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 128) = v5;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v7 = sub_1ABF316E4();
    *(_QWORD *)(v0 + 136) = sub_1ABD1FE2C(v7, v8, &v62);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    v9 = *(_QWORD *)(v2 + 16);
    v10 = MEMORY[0x1E0DEE9D8];
    if (v9)
    {
      v51 = v6;
      v53 = v3;
      v63 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v9, 0);
      v10 = v63;
      v11 = *(_QWORD *)(v63 + 16);
      v12 = 16 * v11;
      v55 = v2;
      v13 = (uint64_t *)(v2 + 40);
      do
      {
        v14 = *(v13 - 1);
        v15 = *v13;
        v63 = v10;
        v16 = v11 + 1;
        v17 = *(_QWORD *)(v10 + 24);
        sub_1ABF2FF5C();
        if (v11 >= v17 >> 1)
        {
          sub_1ABD16414(v17 > 1, v16, 1);
          v10 = v63;
        }
        *(_QWORD *)(v10 + 16) = v16;
        v18 = v10 + v12;
        *(_QWORD *)(v18 + 32) = v14;
        *(_QWORD *)(v18 + 40) = v15;
        v12 += 16;
        v13 += 6;
        ++v11;
        --v9;
      }
      while (v9);
      v2 = v55;
      v1 = v0 + 88;
      v6 = v51;
      v3 = v53;
    }
    *(_QWORD *)(v0 + 144) = v10;
    v19 = sub_1ABF316E4();
    v21 = v20;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 152) = sub_1ABD1FE2C(v19, v21, &v62);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v3, v60, "Fetching watchlists for entities with identifiers=[%s], watchlists=[%s]", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v58, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v22 = *(_QWORD *)(v0 + 176);
  sub_1ABF2FF5C();
  v23 = sub_1ABD94D28(v22, v2);
  swift_bridgeObjectRelease_n();
  if (v23[2])
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v24 = sub_1ABF31324();
    v25 = sub_1ABF31BF4();
    v26 = os_log_type_enabled(v24, v25);
    v27 = *(_QWORD *)(v0 + 176);
    if (v26)
    {
      v59 = (uint64_t *)(v1 + 16);
      v28 = swift_slowAlloc();
      v61 = swift_slowAlloc();
      v62 = v61;
      *(_DWORD *)v28 = 136315394;
      *(_QWORD *)(v1 - 16) = v27;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v29 = sub_1ABF316E4();
      *(_QWORD *)(v1 - 8) = sub_1ABD1FE2C(v29, v30, &v62);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2080;
      v31 = v23[2];
      v32 = MEMORY[0x1E0DEE9D8];
      if (v31)
      {
        v52 = v25;
        v54 = v28;
        v56 = v24;
        v63 = MEMORY[0x1E0DEE9D8];
        sub_1ABD16414(0, v31, 0);
        v32 = v63;
        v57 = v23;
        v33 = v23 + 6;
        do
        {
          sub_1ABF2FF5C();
          sub_1ABF2FF68();
          sub_1ABF2FD1C();
          swift_bridgeObjectRelease();
          swift_release();
          v34 = *(_QWORD *)(v0 + 56);
          v35 = *(_QWORD *)(v0 + 64);
          v63 = v32;
          v37 = *(_QWORD *)(v32 + 16);
          v36 = *(_QWORD *)(v32 + 24);
          if (v37 >= v36 >> 1)
          {
            sub_1ABD16414(v36 > 1, v37 + 1, 1);
            v32 = v63;
          }
          *(_QWORD *)(v32 + 16) = v37 + 1;
          v38 = v32 + 16 * v37;
          *(_QWORD *)(v38 + 32) = v34;
          *(_QWORD *)(v38 + 40) = v35;
          v33 += 3;
          --v31;
        }
        while (v31);
        v24 = v56;
        v23 = v57;
        v28 = v54;
        v25 = v52;
      }
      *(_QWORD *)(v1 + 8) = v32;
      v47 = sub_1ABF316E4();
      v49 = v48;
      swift_bridgeObjectRelease();
      *v59 = sub_1ABD1FE2C(v47, v49, &v62);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ABCEF000, v24, v25, "Matched watchlist entities to identifiers=[%s], watchlistEntities=[%s]", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v61, -1, -1);
      MEMORY[0x1AF438FFC](v28, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v39 = sub_1ABF31324();
    v40 = sub_1ABF31BE8();
    v41 = os_log_type_enabled(v39, v40);
    v42 = *(_QWORD *)(v0 + 176);
    if (v41)
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v63 = v44;
      *(_DWORD *)v43 = 136315138;
      *(_QWORD *)(v0 + 112) = v42;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v45 = sub_1ABF316E4();
      *(_QWORD *)(v0 + 120) = sub_1ABD1FE2C(v45, v46, &v63);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ABCEF000, v39, v40, "No matching watchlists found for identifiers=[%s]", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v44, -1, -1);
      MEMORY[0x1AF438FFC](v43, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v23);
}

uint64_t sub_1ABD8B924()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WatchlistQuery.suggestedEntities()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[12] = v0;
  v2 = sub_1ABF30484();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = swift_task_alloc();
  sub_1ABF30880();
  v1[16] = swift_task_alloc();
  v3 = sub_1ABF31774();
  v1[17] = v3;
  v1[18] = *(_QWORD *)(v3 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  sub_1ABF3049C();
  v1[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABD8BA3C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[22] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching watchlists for suggested entities.", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v5 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v0[23] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(1, v5, v6);
  v7 = (_QWORD *)swift_task_alloc();
  v0[24] = v7;
  *v7 = v0;
  v7[1] = sub_1ABD8BBA4;
  return sub_1ABF31150();
}

uint64_t sub_1ABD8BBA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABD8BC1C()
{
  _QWORD *v0;
  int64_t *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  int64_t *v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  os_log_type_t v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = (int64_t *)v0[9];
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  v49 = v0;
  v45 = v1;
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v54 = swift_slowAlloc();
    v56 = v54;
    *(_DWORD *)v4 = 136315138;
    v5 = v1[2];
    v6 = MEMORY[0x1E0DEE9D8];
    if (v5)
    {
      v50 = v3;
      v51 = v2;
      v57 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v5, 0);
      v6 = v57;
      v7 = *(_QWORD *)(v57 + 16);
      v8 = 16 * v7;
      v9 = v1 + 5;
      do
      {
        v10 = *(v9 - 1);
        v11 = *v9;
        v57 = v6;
        v12 = v7 + 1;
        v13 = *(_QWORD *)(v6 + 24);
        sub_1ABF2FF5C();
        if (v7 >= v13 >> 1)
        {
          sub_1ABD16414(v13 > 1, v12, 1);
          v6 = v57;
        }
        *(_QWORD *)(v6 + 16) = v12;
        v14 = v6 + v8;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v11;
        v8 += 16;
        v9 += 6;
        ++v7;
        --v5;
      }
      while (v5);
      v1 = v45;
      v2 = v51;
      v3 = v50;
    }
    v49[10] = v6;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v15 = sub_1ABF316E4();
    v17 = v16;
    swift_bridgeObjectRelease();
    v49[11] = sub_1ABD1FE2C(v15, v17, &v56);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetched watchlists for suggested entities, watchlists=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v54, -1, -1);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v18 = v1[2];
  if (!v18)
  {
    swift_bridgeObjectRelease();
    v40 = MEMORY[0x1E0DEE9D8];
    v19 = v49;
    goto LABEL_27;
  }
  v19 = v49;
  v20 = v49[18];
  v47 = v49[14];
  v57 = MEMORY[0x1E0DEE9D8];
  sub_1ABDB5098(0, v18, 0);
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
  v46 = *MEMORY[0x1E0CAF9B8];
  v21 = v1 + 8;
  v48 = v20;
  do
  {
    v55 = v18;
    v22 = v19[21];
    v23 = v19[15];
    v24 = v19[13];
    v25 = *(v21 - 4);
    v26 = *(v21 - 1);
    v27 = *v21;
    v52 = *(v21 - 3);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF31738();
    sub_1ABF30844();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v47 + 104))(v23, v46, v24);
    sub_1ABF304A8();
    v28 = MEMORY[0x1AF435F84](v22);
    v53 = v26;
    if (v26 == sub_1ABF317A4() && v27 == v29)
    {
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v30 = v48;
    }
    else
    {
      v31 = sub_1ABF3223C();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRelease();
      v30 = v48;
      if ((v31 & 1) == 0)
      {
        v19 = v49;
        v39 = v52;
        goto LABEL_20;
      }
    }
    v19 = v49;
    v32 = v49[19];
    v33 = v49[20];
    v34 = v49[17];
    sub_1ABF31738();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v32, v33, v34);
    if (qword_1ED34FD78 != -1)
      swift_once();
    v35 = v49[20];
    v36 = v49[17];
    v37 = (id)qword_1ED368428;
    sub_1ABF30844();
    v25 = sub_1ABF317EC();
    v39 = v38;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v35, v36);
    swift_bridgeObjectRelease();
LABEL_20:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19[7] = v25;
    v19[8] = v39;
    sub_1ABF2FD28();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    v40 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1ABDB5098(0, *(_QWORD *)(v40 + 16) + 1, 1);
      v40 = v57;
    }
    v42 = *(_QWORD *)(v40 + 16);
    v41 = *(_QWORD *)(v40 + 24);
    if (v42 >= v41 >> 1)
    {
      sub_1ABDB5098(v41 > 1, v42 + 1, 1);
      v40 = v57;
    }
    *(_QWORD *)(v40 + 16) = v42 + 1;
    v43 = (_QWORD *)(v40 + 24 * v42);
    v43[4] = v53;
    v43[5] = v27;
    v43[6] = v28;
    v21 += 6;
    v18 = v55 - 1;
  }
  while (v55 != 1);
  swift_bridgeObjectRelease();
LABEL_27:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t))v19[1])(v40);
}

uint64_t sub_1ABD8C25C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WatchlistQuery.defaultResult()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_1ABD8C2F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_1EEC40F08 != -1)
    swift_once();
  v2 = qword_1EEC42528;
  v1 = unk_1EEC42530;
  v3 = qword_1EEC42538;
  v4 = qword_1ED346718;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  if (v4 != -1)
    swift_once();
  v5 = sub_1ABF3133C();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v6 = sub_1ABF31324();
  v7 = sub_1ABF31BF4();
  if (os_log_type_enabled(v6, v7))
  {
    v13 = v2;
    v8 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v14 = v12;
    *(_DWORD *)v8 = 136315138;
    sub_1ABF2FF5C();
    sub_1ABF2FF68();
    sub_1ABF2FD1C();
    swift_bridgeObjectRelease();
    swift_release();
    *(_QWORD *)(v0 + 16) = sub_1ABD1FE2C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &v14);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    _os_log_impl(&dword_1ABCEF000, v6, v7, "Default watchlist entity requested, returning '%s' watchlist", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v12, -1, -1);
    v9 = v8;
    v2 = v13;
    MEMORY[0x1AF438FFC](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  v10 = *(uint64_t **)(v0 + 32);
  *v10 = v2;
  v10[1] = v1;
  v10[2] = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WatchlistQuery.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t WatchlistQuery.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABD8C594@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = swift_allocObject();
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34C7B8, (uint64_t (*)(uint64_t))sub_1ABD68798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  *(_QWORD *)(v2 + 16) = result;
  *a1 = v2;
  return result;
}

uint64_t sub_1ABD8C62C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1ABD8C690;
  v5[22] = a1;
  v5[23] = v4;
  return swift_task_switch();
}

uint64_t sub_1ABD8C690(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1ABD8C6E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1ABD98460;
  return WatchlistQuery.suggestedEntities()();
}

uint64_t sub_1ABD8C730()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1ABCFE22C((unint64_t *)&qword_1ED347090, v2, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistQuery, (uint64_t)&protocol conformance descriptor for WatchlistQuery);
  *v1 = v0;
  v1[1] = sub_1ABD37AA0;
  return sub_1ABF2FCC8();
}

uint64_t sub_1ABD8C7B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1ABD37AA0;
  v3[4] = a1;
  return swift_task_switch();
}

void sub_1ABD8C814()
{
  JUMPOUT(0x1AF436170);
}

uint64_t sub_1ABD8C81C()
{
  return sub_1ABF30010();
}

uint64_t WatchlistQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v4 = sub_1ABF30484();
  v3[19] = v4;
  v3[20] = *(_QWORD *)(v4 - 8);
  v3[21] = swift_task_alloc();
  sub_1ABF30880();
  v3[22] = swift_task_alloc();
  v5 = sub_1ABF31774();
  v3[23] = v5;
  v3[24] = *(_QWORD *)(v5 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  sub_1ABF3049C();
  v3[27] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABD8C900()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[28] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[17];
  if (v4)
  {
    v6 = v0[16];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1ABF2FF5C();
    v0[15] = sub_1ABD1FE2C(v6, v5, &v13);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Querying watchlists matching string=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v9 = v0[5];
  v10 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v9);
  v0[29] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(1, v9, v10);
  v11 = (_QWORD *)swift_task_alloc();
  v0[30] = v11;
  *v11 = v0;
  v11[1] = sub_1ABD8CB3C;
  return sub_1ABF31150();
}

uint64_t sub_1ABD8CB3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABD8CBB4()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint8_t *v67;
  NSObject *v68;
  uint64_t v69;
  NSObject *v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  os_log_type_t v78;
  os_log_type_t v79;
  uint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;

  v1 = v0[9];
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  v72 = v0;
  if (os_log_type_enabled(v2, v3))
  {
    v78 = v3;
    v4 = (uint8_t *)swift_slowAlloc();
    v75 = swift_slowAlloc();
    v82 = v75;
    *(_DWORD *)v4 = 136315138;
    v5 = *(_QWORD *)(v1 + 16);
    v6 = MEMORY[0x1E0DEE9D8];
    if (v5)
    {
      v67 = v4;
      v70 = v2;
      v83 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v5, 0);
      v6 = v83;
      v7 = *(_QWORD *)(v83 + 16);
      v8 = 16 * v7;
      v9 = (uint64_t *)(v1 + 40);
      do
      {
        v10 = *(v9 - 1);
        v11 = *v9;
        v83 = v6;
        v12 = v7 + 1;
        v13 = *(_QWORD *)(v6 + 24);
        sub_1ABF2FF5C();
        if (v7 >= v13 >> 1)
        {
          sub_1ABD16414(v13 > 1, v12, 1);
          v6 = v83;
        }
        *(_QWORD *)(v6 + 16) = v12;
        v14 = v6 + v8;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v11;
        v8 += 16;
        v9 += 6;
        ++v7;
        --v5;
      }
      while (v5);
      v2 = v70;
      v0 = v72;
      v4 = v67;
    }
    v0[13] = v6;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v15 = sub_1ABF316E4();
    v17 = v16;
    swift_bridgeObjectRelease();
    v0[14] = sub_1ABD1FE2C(v15, v17, &v82);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v78, "Fetched all watchlists for string query, watchlists=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v75, -1, -1);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1ABF2FF5C();
  v18 = sub_1ABD94AE8(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v19 = sub_1ABF31324();
  v20 = sub_1ABF31BF4();
  v21 = os_log_type_enabled(v19, v20);
  v22 = v0[17];
  v64 = v18;
  if (v21)
  {
    v79 = v20;
    v73 = v0 + 12;
    v23 = v0[16];
    v24 = swift_slowAlloc();
    v76 = swift_slowAlloc();
    v82 = v76;
    *(_DWORD *)v24 = 136315394;
    sub_1ABF2FF5C();
    v0[10] = sub_1ABD1FE2C(v23, v22, &v82);
    v71 = v0 + 11;
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    v25 = *(_QWORD *)(v18 + 16);
    v26 = MEMORY[0x1E0DEE9D8];
    if (v25)
    {
      v68 = v19;
      v83 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v25, 0);
      v26 = v83;
      v27 = *(_QWORD *)(v83 + 16);
      v28 = 16 * v27;
      v29 = (uint64_t *)(v18 + 40);
      do
      {
        v31 = *(v29 - 1);
        v30 = *v29;
        v83 = v26;
        v32 = v27 + 1;
        v33 = *(_QWORD *)(v26 + 24);
        sub_1ABF2FF5C();
        if (v27 >= v33 >> 1)
        {
          sub_1ABD16414(v33 > 1, v32, 1);
          v26 = v83;
        }
        *(_QWORD *)(v26 + 16) = v32;
        v34 = v26 + v28;
        *(_QWORD *)(v34 + 32) = v31;
        *(_QWORD *)(v34 + 40) = v30;
        v28 += 16;
        v29 += 6;
        ++v27;
        --v25;
      }
      while (v25);
      v18 = v64;
      v19 = v68;
    }
    *v71 = v26;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v60 = sub_1ABF316E4();
    v62 = v61;
    swift_bridgeObjectRelease();
    *v73 = sub_1ABD1FE2C(v60, v62, &v82);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v19, v79, "Filtered down watchlists matching string=%s, watchlists=[%s]", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v76, -1, -1);
    MEMORY[0x1AF438FFC](v24, -1, -1);

    v0 = v72;
    v35 = *(_QWORD *)(v18 + 16);
    if (!v35)
      goto LABEL_34;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v35 = *(_QWORD *)(v18 + 16);
    if (!v35)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      v56 = MEMORY[0x1E0DEE9D8];
      goto LABEL_35;
    }
  }
  v36 = v0[24];
  v66 = v0[20];
  v83 = MEMORY[0x1E0DEE9D8];
  sub_1ABDB5098(0, v35, 0);
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
  v65 = *MEMORY[0x1E0CAF9B8];
  v37 = (uint64_t *)(v18 + 64);
  v69 = v36;
  do
  {
    v81 = v35;
    v38 = v0[27];
    v39 = v0[21];
    v40 = v0[19];
    v41 = *(v37 - 4);
    v42 = *(v37 - 1);
    v43 = *v37;
    v77 = *(v37 - 3);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF31738();
    sub_1ABF30844();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v66 + 104))(v39, v65, v40);
    sub_1ABF304A8();
    v44 = MEMORY[0x1AF435F84](v38);
    v80 = v42;
    if (v42 == sub_1ABF317A4() && v43 == v45)
    {
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v46 = v69;
    }
    else
    {
      v47 = sub_1ABF3223C();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRelease();
      v46 = v69;
      if ((v47 & 1) == 0)
      {
        v0 = v72;
        v55 = v77;
        goto LABEL_27;
      }
    }
    v74 = v44;
    v0 = v72;
    v48 = v72[25];
    v49 = v72[26];
    v50 = v72[23];
    sub_1ABF31738();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v48, v49, v50);
    if (qword_1ED34FD78 != -1)
      swift_once();
    v51 = v72[26];
    v52 = v72[23];
    v53 = (id)qword_1ED368428;
    sub_1ABF30844();
    v41 = sub_1ABF317EC();
    v55 = v54;
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v51, v52);
    swift_bridgeObjectRelease();
    v44 = v74;
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[7] = v41;
    v0[8] = v55;
    sub_1ABF2FD28();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    v56 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1ABDB5098(0, *(_QWORD *)(v56 + 16) + 1, 1);
      v56 = v83;
    }
    v58 = *(_QWORD *)(v56 + 16);
    v57 = *(_QWORD *)(v56 + 24);
    if (v58 >= v57 >> 1)
    {
      sub_1ABDB5098(v57 > 1, v58 + 1, 1);
      v56 = v83;
    }
    *(_QWORD *)(v56 + 16) = v58 + 1;
    v59 = (_QWORD *)(v56 + 24 * v58);
    v59[4] = v80;
    v59[5] = v43;
    v59[6] = v44;
    v37 += 6;
    v35 = v81 - 1;
  }
  while (v81 != 1);
  swift_bridgeObjectRelease();
LABEL_35:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t))v0[1])(v56);
}

uint64_t sub_1ABD8D4C8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD8D54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1ABD8D5B0;
  return WatchlistQuery.entities(matching:)(a2, a3);
}

uint64_t sub_1ABD8D5B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t static WatchlistQuery.findIntentDescription.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v20 = a1;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v21 = (char *)&v17 - v2;
  v3 = sub_1ABF30484();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1ABF3049C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v19 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF31738();
  sub_1ABF30844();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v13(v6, v12, v3);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v21, 1, 1, v9);
  sub_1ABCF5A54(0, &qword_1EEC421D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1ABF38EC0;
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  v14 = v20;
  sub_1ABF2FE60();
  v15 = sub_1ABF2FE54();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1ABD8DB28()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABD94F70();
  v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1EEC42188);
  __swift_project_value_buffer(v1, (uint64_t)qword_1EEC42188);
  sub_1ABD94FD8();
  sub_1ABD68830();
  return sub_1ABF2FF20();
}

uint64_t sub_1ABD8DBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1ABD9815C();
  swift_getKeyPath();
  sub_1ABF2FEC0();
  sub_1ABD68830();
  v0 = sub_1ABF2FF68();
  swift_release();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ABF38ED0;
  *(_QWORD *)(v1 + 32) = v0;
  sub_1ABF31A20();
  sub_1ABD94FD8();
  sub_1ABF2FF68();
  v2 = sub_1ABF300A0();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_1ABD8DCA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FD34();
  swift_release();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABD8DCFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  sub_1ABD98220();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x1E0C80A78](v0);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - v6;
  sub_1ABD982D0();
  swift_allocObject();
  sub_1ABF2FE84();
  sub_1ABD68830();
  sub_1ABF300D0();
  swift_release();
  sub_1ABD98378();
  swift_allocObject();
  sub_1ABF2FE3C();
  sub_1ABF300D0();
  swift_release();
  sub_1ABCF5A54(0, &qword_1EEC42298, (uint64_t (*)(uint64_t))sub_1ABD98220, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = *(_QWORD *)(v2 + 72);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1ABF366E0;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 16);
  v12(v11, v7, v1);
  v12(v11 + v8, v5, v1);
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
  sub_1ABD94FD8();
  sub_1ABD94F2C();
  v13 = sub_1ABF300C4();
  swift_bridgeObjectRelease();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v5, v1);
  v14(v7, v1);
  return v13;
}

uint64_t sub_1ABD8DF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *a3 = sub_1ABD98454;
  a3[1] = v6;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD8DF9C@<X0>(_BYTE *a1@<X8>)
{
  char v2;
  uint64_t result;

  sub_1ABF31804();
  sub_1ABF31804();
  sub_1ABD0E288();
  v2 = sub_1ABF31DC8();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a1 = v2 & 1;
  return result;
}

uint64_t sub_1ABD8E038@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_1ABD9844C;
  a2[1] = v5;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD8E088@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t result;

  v2 = sub_1ABF31804();
  v4 = v3;
  if (v2 == sub_1ABF31804() && v4 == v5)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a1 = v7 & 1;
  return result;
}

uint64_t static WatchlistQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EEC40EF8 != -1)
    swift_once();
  sub_1ABD94F70();
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC42188);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t static WatchlistQuery.properties.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EEC40EF8 != -1)
    swift_once();
  sub_1ABD94F70();
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC42188);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v4, a1, v3);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
}

uint64_t (*static WatchlistQuery.properties.modify())()
{
  uint64_t v0;

  if (qword_1EEC40EF8 != -1)
    swift_once();
  sub_1ABD94F70();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC42188);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1ABD8E2F0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABCF4DA8(0, &qword_1EEC421F0, (uint64_t (*)(void))sub_1ABD68830, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E0C918C8]);
  v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1EEC421A0);
  __swift_project_value_buffer(v1, (uint64_t)qword_1EEC421A0);
  sub_1ABD68830();
  return sub_1ABF30028();
}

uint64_t sub_1ABD8E380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1ABCF4DA8(0, &qword_1EEC42260, (uint64_t (*)(void))sub_1ABD68830, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E0C91AC0]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x1E0C80A78](v0);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  swift_getKeyPath();
  sub_1ABD68830();
  sub_1ABD98080();
  sub_1ABF300DC();
  sub_1ABF30118();
  v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v5, v1);
  sub_1ABD980E8();
  v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1ABF366C0;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 16))(v10 + v9, v7, v1);
  v11 = sub_1ABF3010C();
  swift_bridgeObjectRelease();
  v8(v7, v1);
  return v11;
}

uint64_t static WatchlistQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EEC40F00 != -1)
    swift_once();
  sub_1ABCF4DA8(0, &qword_1EEC421F0, (uint64_t (*)(void))sub_1ABD68830, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E0C918C8]);
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC421A0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t static WatchlistQuery.sortingOptions.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EEC40F00 != -1)
    swift_once();
  sub_1ABCF4DA8(0, &qword_1EEC421F0, (uint64_t (*)(void))sub_1ABD68830, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E0C918C8]);
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC421A0);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v4, a1, v3);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
}

uint64_t (*static WatchlistQuery.sortingOptions.modify())()
{
  uint64_t v0;

  if (qword_1EEC40F00 != -1)
    swift_once();
  sub_1ABCF4DA8(0, &qword_1EEC421F0, (uint64_t (*)(void))sub_1ABD68830, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E0C918C8]);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC421A0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t WatchlistQuery.entities(matching:mode:sortedBy:limit:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v6 + 345) = a5;
  *(_QWORD *)(v6 + 224) = a4;
  *(_QWORD *)(v6 + 232) = v5;
  *(_BYTE *)(v6 + 344) = a2;
  *(_QWORD *)(v6 + 208) = a1;
  *(_QWORD *)(v6 + 216) = a3;
  v7 = sub_1ABF30484();
  *(_QWORD *)(v6 + 240) = v7;
  *(_QWORD *)(v6 + 248) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 256) = swift_task_alloc();
  sub_1ABF30880();
  *(_QWORD *)(v6 + 264) = swift_task_alloc();
  v8 = sub_1ABF31774();
  *(_QWORD *)(v6 + 272) = v8;
  *(_QWORD *)(v6 + 280) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 288) = swift_task_alloc();
  *(_QWORD *)(v6 + 296) = swift_task_alloc();
  sub_1ABF3049C();
  *(_QWORD *)(v6 + 304) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABD8E7F8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  *(_QWORD *)(v0 + 312) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v17 = *(_BYTE *)(v0 + 345);
    v4 = *(_QWORD *)(v0 + 216);
    v18 = *(_QWORD *)(v0 + 224);
    v5 = *(_QWORD *)(v0 + 208);
    v6 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v6 = 134218754;
    *(_QWORD *)(v0 + 176) = *(_QWORD *)(v5 + 16);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v7 = sub_1ABF3001C();
    v8 = (v7 & 1) == 0;
    if ((v7 & 1) != 0)
      v9 = 6581857;
    else
      v9 = 29295;
    if (v8)
      v10 = 0xE200000000000000;
    else
      v10 = 0xE300000000000000;
    *(_QWORD *)(v0 + 184) = sub_1ABD1FE2C(v9, v10, &v20);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2048;
    v11 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 192) = v11;
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 32) = 2048;
    v12 = v18;
    if ((v17 & 1) != 0)
      v12 = 0;
    *(_QWORD *)(v0 + 200) = v12;
    sub_1ABF31D80();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Querying watchlists matching property queryCount=%ld, comparatorMode=%s, sortCount=%ld, limit=%ld", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v19, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v13 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v13);
  *(_QWORD *)(v0 + 320) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 40))(1, v13, v14);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v15;
  *v15 = v0;
  v15[1] = sub_1ABD8EB10;
  return sub_1ABF31150();
}

uint64_t sub_1ABD8EB10()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 336) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABD8EB88()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint8_t *v24;
  unsigned __int8 *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  int v43;
  int v44;
  char v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  uint8_t *v60;
  os_log_type_t v61;
  _DWORD *v62;
  unint64_t v63;
  uint64_t v64;
  int64_t v65;
  int v66;
  int v67;
  char v68;
  int v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  int64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  char v83;
  BOOL v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  NSObject *v89;
  os_log_type_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  int v95;
  char v96;
  objc_class **v97;
  objc_class *v98;
  objc_class *v99;
  unint64_t isa;
  unint64_t v101;
  NSObject *v102;
  unsigned __int8 *v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint64_t v116;
  uint64_t v117;
  int64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  int64_t v124;
  unint64_t v125;
  int64_t v126;
  uint64_t v127;
  int64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  NSObject *v160;
  os_log_type_t v161;
  uint64_t v162;
  uint8_t *v163;
  uint64_t *v164;
  int64_t *v165;
  uint64_t *v166;
  NSObject **v167;
  uint64_t *v168;
  uint64_t v169;
  unsigned int v170;
  uint64_t v171;
  uint8_t *v172;
  os_log_type_t v173;
  unsigned __int8 *v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _DWORD *v181;
  unsigned int v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(char *__return_ptr, uint64_t *);
  NSObject *v186;
  uint64_t v187;
  NSObject *v188;
  uint8_t *v189;
  uint64_t v190;
  NSObject *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint8_t *v195;
  int64_t v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200[5];
  char v201;
  char v202;
  char v203[3];
  uint64_t v204[3];

  v3 = *(_QWORD *)(v1 + 72);
  swift_bridgeObjectRetain_n();
  v4 = sub_1ABF31324();
  v5 = sub_1ABF31BF4();
  v183 = v1;
  v184 = v3;
  if (os_log_type_enabled(v4, (os_log_type_t)v5))
  {
    LODWORD(v197) = (_DWORD)v5;
    v6 = (uint8_t *)swift_slowAlloc();
    v193 = swift_slowAlloc();
    v204[0] = v193;
    *(_DWORD *)v6 = 136315138;
    v2 = *(_QWORD *)(v3 + 16);
    v7 = MEMORY[0x1E0DEE9D8];
    if (v2)
    {
      v188 = v4;
      v200[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v2, 0);
      v7 = v200[0];
      v8 = *(_QWORD *)(v200[0] + 16);
      v9 = 16 * v8;
      v10 = (uint64_t *)(v3 + 40);
      do
      {
        v11 = *(v10 - 1);
        v12 = *v10;
        v200[0] = v7;
        v13 = v8 + 1;
        v14 = *(_QWORD *)(v7 + 24);
        sub_1ABF2FF5C();
        if (v8 >= v14 >> 1)
        {
          sub_1ABD16414(v14 > 1, v13, 1);
          v7 = v200[0];
        }
        *(_QWORD *)(v7 + 16) = v13;
        v15 = v7 + v9;
        *(_QWORD *)(v15 + 32) = v11;
        *(_QWORD *)(v15 + 40) = v12;
        v9 += 16;
        v10 += 6;
        ++v8;
        --v2;
      }
      while (v2);
      v3 = v184;
      v4 = v188;
    }
    v0 = (uint64_t)(v6 + 4);
    *(_QWORD *)(v183 + 160) = v7;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v16 = sub_1ABF316E4();
    v18 = v17;
    v1 = v183;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v183 + 168) = sub_1ABD1FE2C(v16, v18, v204);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v4, (os_log_type_t)v197, "Fetched all watchlists for property query, watchlists=[%s]", v6, 0xCu);
    v5 = v193;
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v193, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v19 = *(_QWORD *)(v1 + 208);
  v177 = *(_QWORD *)(v19 + 16);
  if (!v177)
  {
    swift_bridgeObjectRelease();
    sub_1ABD67FB8();
    v87 = sub_1ABF319F0();
    goto LABEL_67;
  }
  v164 = (uint64_t *)(v1 + 96);
  v167 = (NSObject **)(v1 + 104);
  v165 = (int64_t *)(v1 + 88);
  v166 = (uint64_t *)(v1 + 112);
  v175 = (uint64_t *)(v1 + 144);
  v168 = (uint64_t *)(v1 + 152);
  v189 = *(uint8_t **)(v3 + 16);
  v176 = v19 + 32;
  sub_1ABF2FF5C();
  v20 = 0;
  v21 = 0;
  v174 = (unsigned __int8 *)(v3 + 73);
  while (1)
  {
    v179 = v21;
    v180 = v20;
    v22 = v176 + 16 * v21;
    v185 = *(void (**)(char *__return_ptr, uint64_t *))v22;
    v191 = *(NSObject **)(v22 + 8);
    swift_retain_n();
    sub_1ABF2FF5C();
    if (v189)
    {
      v24 = 0;
      v25 = v174;
      v26 = MEMORY[0x1E0DEE9D8];
      while ((unint64_t)v24 < *(_QWORD *)(v3 + 16))
      {
        v27 = *(_QWORD *)(v25 - 33);
        v28 = *(_QWORD *)(v25 - 25);
        v29 = *(_QWORD *)(v25 - 17);
        v30 = *(_QWORD *)(v25 - 9);
        v0 = *(v25 - 1);
        v2 = *v25;
        v197 = *(_QWORD *)(v25 - 41);
        v200[0] = v197;
        v200[1] = v27;
        v200[2] = v28;
        v194 = v29;
        v200[3] = v29;
        v200[4] = v30;
        v201 = v0;
        v202 = v2;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        v5 = v191;
        v185(v203, v200);
        if (v203[0] == 1)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v204[0] = v26;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v5 = v204;
            sub_1ABDB50B4(0, *(_QWORD *)(v26 + 16) + 1, 1);
            v26 = v204[0];
          }
          v33 = *(_QWORD *)(v26 + 16);
          v32 = *(_QWORD *)(v26 + 24);
          v34 = v33 + 1;
          if (v33 >= v32 >> 1)
          {
            v5 = v204;
            sub_1ABDB50B4(v32 > 1, v33 + 1, 1);
            v34 = v33 + 1;
            v26 = v204[0];
          }
          *(_QWORD *)(v26 + 16) = v34;
          v35 = v26 + 48 * v33;
          *(_QWORD *)(v35 + 32) = v197;
          *(_QWORD *)(v35 + 40) = v27;
          *(_QWORD *)(v35 + 48) = v28;
          *(_QWORD *)(v35 + 56) = v194;
          *(_QWORD *)(v35 + 64) = v30;
          *(_BYTE *)(v35 + 72) = v0;
          *(_BYTE *)(v35 + 73) = v2;
          v3 = v184;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        ++v24;
        v25 += 48;
        if (v189 == v24)
          goto LABEL_26;
      }
      __break(1u);
LABEL_81:
      v94 = v5;
      v106 = v0;
      sub_1ABD97C9C(v2, (uint64_t)v25, v23);
      v91 = v189;
      v89 = v191;
      v90 = v185;
      v93 = v184;
      goto LABEL_83;
    }
    v26 = MEMORY[0x1E0DEE9D8];
LABEL_26:
    swift_bridgeObjectRelease();
    v0 = sub_1ABD95020(v26);
    swift_release();
    swift_bridgeObjectRetain_n();
    v36 = sub_1ABF31324();
    v2 = sub_1ABF31BDC();
    if (os_log_type_enabled(v36, (os_log_type_t)v2))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v39 = v38;
      v204[0] = v38;
      *(_DWORD *)v37 = 136315138;
      v40 = *(_QWORD *)(v0 + 16);
      if (v40)
      {
        v169 = v38;
        v170 = v2;
        v172 = v37;
        v200[0] = MEMORY[0x1E0DEE9D8];
        sub_1ABD16414(0, v40, 0);
        v41 = v200[0];
        v42 = sub_1ABD94960(v0);
        v44 = v43;
        v46 = v45 & 1;
        v195 = (uint8_t *)(v0 + 56);
        while ((v42 & 0x8000000000000000) == 0 && v42 < 1 << *(_BYTE *)(v0 + 32))
        {
          if (((*(_QWORD *)&v195[((unint64_t)v42 >> 3) & 0xFFFFFFFFFFFFF8] >> v42) & 1) == 0)
            goto LABEL_111;
          if (*(_DWORD *)(v0 + 36) != v44)
            goto LABEL_112;
          v47 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 48 * v42);
          v48 = v47[1];
          v197 = *v47;
          v200[0] = v41;
          v50 = *(_QWORD *)(v41 + 16);
          v49 = *(_QWORD *)(v41 + 24);
          sub_1ABF2FF5C();
          if (v50 >= v49 >> 1)
          {
            sub_1ABD16414(v49 > 1, v50 + 1, 1);
            v41 = v200[0];
          }
          *(_QWORD *)(v41 + 16) = v50 + 1;
          v51 = v41 + 16 * v50;
          *(_QWORD *)(v51 + 32) = v197;
          *(_QWORD *)(v51 + 40) = v48;
          v52 = sub_1ABD94A04(v42, v44, v46 & 1, v0);
          v42 = v52;
          v44 = v53;
          v46 = v54 & 1;
          if (!--v40)
          {
            sub_1ABD97C9C(v52, v53, v54 & 1);
            v3 = v184;
            v37 = v172;
            v2 = v170;
            v39 = v169;
            goto LABEL_39;
          }
        }
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      v41 = MEMORY[0x1E0DEE9D8];
LABEL_39:
      *v175 = v41;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v55 = sub_1ABF316E4();
      v57 = v56;
      swift_bridgeObjectRelease();
      *v168 = sub_1ABD1FE2C(v55, v57, v204);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ABCEF000, v36, (os_log_type_t)v2, "Filtered watchlists down to watchlists=[%s]", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v39, -1, -1);
      MEMORY[0x1AF438FFC](v37, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    if (!v180)
    {
      v5 = sub_1ABF31324();
      v59 = sub_1ABF31BDC();
      if (os_log_type_enabled(v5, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v60 = 0;
        _os_log_impl(&dword_1ABCEF000, v5, v59, "No existing result for watchlist filters, so storing first results", v60, 2u);
        MEMORY[0x1AF438FFC](v60, -1, -1);

        swift_release_n();
      }
      else
      {
        swift_release_n();

      }
      goto LABEL_13;
    }
    if ((*(_BYTE *)(v183 + 344) & 1) != 0)
    {
      v0 = sub_1ABD902D4(v0, v180);
    }
    else
    {
      v58 = sub_1ABD91BA0(v0, v180, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1ABD91D2C);
      swift_bridgeObjectRelease();
      v0 = v58;
    }
    swift_bridgeObjectRetain_n();
    v5 = sub_1ABF31324();
    v61 = sub_1ABF31BDC();
    if (os_log_type_enabled(v5, v61))
      break;
    swift_release_n();
    swift_bridgeObjectRelease_n();

LABEL_13:
    v21 = v179 + 1;
    v20 = v0;
    if (v179 + 1 == v177)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v89 = sub_1ABF31324();
      v90 = sub_1ABF31BF4();
      if (!os_log_type_enabled(v89, v90))
      {
        swift_bridgeObjectRelease_n();

        v105 = v0;
LABEL_84:
        v110 = *(_QWORD *)(v183 + 336);
        v111 = *(_QWORD *)(v183 + 216);
        v112 = sub_1ABD90FB0(v105);
        swift_bridgeObjectRelease();
        v200[0] = (uint64_t)v112;
        sub_1ABF2FF5C();
        sub_1ABF2FF68();
        sub_1ABD97BFC(v200, v111);
        if (v110)
        {
          swift_bridgeObjectRelease();
          return swift_release();
        }
        swift_bridgeObjectRelease();
        swift_release();
        v0 = v200[0];
        swift_retain_n();
        v113 = sub_1ABF31324();
        v114 = sub_1ABF31BF4();
        if (!os_log_type_enabled(v113, v114))
        {
          v1 = v183;
          swift_release_n();

          if ((*(_BYTE *)(v183 + 345) & 1) == 0)
            goto LABEL_115;
LABEL_94:
          v127 = v0;
          v128 = *(_QWORD *)(v0 + 16);
          if (!v128)
            goto LABEL_129;
LABEL_95:
          v129 = *(_QWORD *)(v1 + 280);
          v187 = *(_QWORD *)(v1 + 248);
          v200[0] = MEMORY[0x1E0DEE9D8];
          sub_1ABDB5098(0, v128, 0);
          sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
          v182 = *MEMORY[0x1E0CAF9B8];
          v178 = v129;
          v130 = (uint64_t *)(v127 + 64);
          while (1)
          {
            v196 = v128;
            v131 = *(_QWORD *)(v1 + 304);
            v132 = *(_QWORD *)(v1 + 256);
            v133 = *(_QWORD *)(v1 + 240);
            v134 = *(v130 - 4);
            v135 = *(v130 - 1);
            v136 = *v130;
            v192 = *(v130 - 3);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF31738();
            sub_1ABF30844();
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v187 + 104))(v132, v182, v133);
            sub_1ABF304A8();
            v137 = MEMORY[0x1AF435F84](v131);
            v199 = v135;
            if (v135 == sub_1ABF317A4() && v136 == v138)
              break;
            v140 = sub_1ABF3223C();
            swift_bridgeObjectRetain_n();
            swift_retain_n();
            swift_bridgeObjectRelease();
            v139 = v178;
            if ((v140 & 1) != 0)
              goto LABEL_100;
            v141 = v183;
            v150 = v192;
LABEL_104:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v141 + 56) = v134;
            *(_QWORD *)(v141 + 64) = v150;
            sub_1ABF2FD28();
            swift_bridgeObjectRelease_n();
            swift_release_n();
            v87 = v200[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1ABDB5098(0, *(_QWORD *)(v87 + 16) + 1, 1);
              v87 = v200[0];
            }
            v152 = *(_QWORD *)(v87 + 16);
            v151 = *(_QWORD *)(v87 + 24);
            if (v152 >= v151 >> 1)
            {
              sub_1ABDB5098(v151 > 1, v152 + 1, 1);
              v87 = v200[0];
            }
            *(_QWORD *)(v87 + 16) = v152 + 1;
            v153 = (_QWORD *)(v87 + 24 * v152);
            v153[4] = v199;
            v153[5] = v136;
            v153[6] = v137;
            v130 += 6;
            v128 = v196 - 1;
            v1 = v183;
            if (v196 == 1)
            {
              swift_bridgeObjectRelease();
              goto LABEL_67;
            }
          }
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          v139 = v178;
LABEL_100:
          v190 = v137;
          v141 = v183;
          v143 = *(_QWORD *)(v183 + 288);
          v142 = *(_QWORD *)(v183 + 296);
          v144 = *(_QWORD *)(v183 + 272);
          sub_1ABF31738();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16))(v143, v142, v144);
          if (qword_1ED34FD78 != -1)
            swift_once();
          v145 = *(_QWORD *)(v183 + 296);
          v146 = *(_QWORD *)(v183 + 272);
          v147 = (id)qword_1ED368428;
          sub_1ABF30844();
          v134 = sub_1ABF317EC();
          v149 = v148;
          (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v145, v146);
          swift_bridgeObjectRelease();
          v150 = v149;
          v137 = v190;
          goto LABEL_104;
        }
        v115 = (uint8_t *)swift_slowAlloc();
        v116 = swift_slowAlloc();
        v117 = v116;
        v204[0] = v116;
        *(_DWORD *)v115 = 136315138;
        v118 = *(_QWORD *)(v0 + 16);
        v40 = MEMORY[0x1E0DEE9D8];
        if (!v118)
        {
LABEL_114:
          *v165 = v40;
          sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1ABD16600();
          v154 = sub_1ABF316E4();
          v156 = v155;
          swift_bridgeObjectRelease();
          *v164 = sub_1ABD1FE2C(v154, v156, v204);
          sub_1ABF31D80();
          swift_bridgeObjectRelease();
          swift_release_n();
          _os_log_impl(&dword_1ABCEF000, v113, v114, "Applied sorts to sortedWatchlists=[%s]", v115, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1AF438FFC](v117, -1, -1);
          MEMORY[0x1AF438FFC](v115, -1, -1);

          v1 = v183;
          if ((*(_BYTE *)(v183 + 345) & 1) == 0)
          {
LABEL_115:
            v63 = *(_QWORD *)(v1 + 224);
            if ((v63 & 0x8000000000000000) == 0)
            {
              if (*(_QWORD *)(v0 + 16) >= v63)
              {
                sub_1ABF32254();
                swift_unknownObjectRetain_n();
                v157 = swift_dynamicCastClass();
                if (!v157)
                  goto LABEL_122;
                v158 = v63;
                goto LABEL_123;
              }
              goto LABEL_134;
            }
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            swift_release();
            v127 = sub_1ABD90E10(v0, v0 + 32, 0, (2 * v63) | 1);
            goto LABEL_126;
          }
          goto LABEL_94;
        }
        v189 = (uint8_t *)v116;
        LOBYTE(v191) = v114;
        v195 = v115;
        v197 = (uint64_t)v113;
        v200[0] = MEMORY[0x1E0DEE9D8];
        sub_1ABD16414(0, v118, 0);
        v40 = v200[0];
        v119 = *(_QWORD *)(v200[0] + 16);
        v120 = 16 * v119;
        v121 = (uint64_t *)(v0 + 40);
        do
        {
          v122 = *(v121 - 1);
          v123 = *v121;
          v200[0] = v40;
          v124 = v119 + 1;
          v125 = *(_QWORD *)(v40 + 24);
          sub_1ABF2FF5C();
          if (v119 >= v125 >> 1)
          {
            sub_1ABD16414(v125 > 1, v124, 1);
            v40 = v200[0];
          }
          *(_QWORD *)(v40 + 16) = v124;
          v126 = v40 + v120;
          *(_QWORD *)(v126 + 32) = v122;
          *(_QWORD *)(v126 + 40) = v123;
          v120 += 16;
          v121 += 6;
          ++v119;
          --v118;
        }
        while (v118);
LABEL_113:
        v115 = v195;
        v113 = v197;
        v114 = v191;
        v117 = (uint64_t)v189;
        goto LABEL_114;
      }
      v91 = (uint8_t *)swift_slowAlloc();
      v92 = swift_slowAlloc();
      v93 = v92;
      v204[0] = v92;
      *(_DWORD *)v91 = 136315138;
      v63 = *(_QWORD *)(v0 + 16);
      v94 = MEMORY[0x1E0DEE9D8];
      if (v63)
      {
        v184 = v92;
        LOBYTE(v185) = v90;
        v189 = v91;
        v191 = v89;
        v200[0] = MEMORY[0x1E0DEE9D8];
        sub_1ABD16414(0, v63, 0);
        v5 = v200[0];
        v2 = sub_1ABD94960(v0);
        LODWORD(v25) = v95;
        v23 = v96 & 1;
        while ((v2 & 0x8000000000000000) == 0 && v2 < 1 << *(_BYTE *)(v0 + 32))
        {
          if (((*(_QWORD *)(v0 + 56 + (((unint64_t)v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) == 0)
            goto LABEL_131;
          if (*(_DWORD *)(v0 + 36) != (_DWORD)v25)
            goto LABEL_132;
          v198 = v23;
          v97 = (objc_class **)(*(_QWORD *)(v0 + 48) + 48 * v2);
          v99 = *v97;
          v98 = v97[1];
          v200[0] = (uint64_t)v5;
          isa = (unint64_t)v5[2].isa;
          v101 = (unint64_t)v5[3].isa;
          sub_1ABF2FF5C();
          if (isa >= v101 >> 1)
          {
            sub_1ABD16414(v101 > 1, isa + 1, 1);
            v5 = v200[0];
          }
          v5[2].isa = (Class)(isa + 1);
          v102 = &v5[2 * isa];
          v102[4].isa = v99;
          v102[5].isa = v98;
          v2 = sub_1ABD94A04(v2, (int)v25, v198 & 1, v0);
          v25 = v103;
          v23 = v104 & 1;
          if (!--v63)
            goto LABEL_81;
        }
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
        goto LABEL_133;
      }
      v106 = v0;
LABEL_83:
      *v167 = v94;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v107 = sub_1ABF316E4();
      v109 = v108;
      swift_bridgeObjectRelease();
      *v166 = sub_1ABD1FE2C(v107, v109, v204);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      v105 = v106;
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ABCEF000, v89, v90, "Successfully applied all filters, found watchlists=[%s]", v91, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v93, -1, -1);
      MEMORY[0x1AF438FFC](v91, -1, -1);

      goto LABEL_84;
    }
  }
  v173 = v61;
  v186 = v5;
  v62 = (_DWORD *)swift_slowAlloc();
  v171 = swift_slowAlloc();
  v204[0] = v171;
  v181 = v62;
  *v62 = 136315394;
  v63 = *(_QWORD *)(v0 + 16);
  if (!v63)
  {
    v64 = MEMORY[0x1E0DEE9D8];
LABEL_59:
    v79 = v0;
    v2 = (int64_t)v181;
    *(_QWORD *)(v183 + 120) = v64;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v80 = sub_1ABF316E4();
    v82 = v81;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v183 + 128) = sub_1ABD1FE2C(v80, v82, v204);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *((_WORD *)v181 + 6) = 2080;
    v83 = sub_1ABF3001C();
    v84 = (v83 & 1) == 0;
    if ((v83 & 1) != 0)
      v85 = 6581857;
    else
      v85 = 29295;
    if (v84)
      v86 = 0xE200000000000000;
    else
      v86 = 0xE300000000000000;
    *(_QWORD *)(v183 + 136) = sub_1ABD1FE2C(v85, v86, v204);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    v5 = v186;
    _os_log_impl(&dword_1ABCEF000, v186, v173, "Combined watchlist filter results into accumulated results=[%s], comparatorMode=%s", (uint8_t *)v181, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v171, -1, -1);
    MEMORY[0x1AF438FFC](v181, -1, -1);

    swift_release_n();
    v0 = v79;
    goto LABEL_13;
  }
  v200[0] = MEMORY[0x1E0DEE9D8];
  sub_1ABF2FF5C();
  sub_1ABD16414(0, v63, 0);
  v64 = v200[0];
  v65 = sub_1ABD94960(v0);
  v67 = v66;
  v69 = v68 & 1;
  while ((v65 & 0x8000000000000000) == 0 && v65 < 1 << *(_BYTE *)(v0 + 32))
  {
    if (((*(_QWORD *)(v0 + 56 + (((unint64_t)v65 >> 3) & 0xFFFFFFFFFFFFF8)) >> v65) & 1) == 0)
      goto LABEL_120;
    if (*(_DWORD *)(v0 + 36) != v67)
      goto LABEL_121;
    LODWORD(v197) = v69;
    v70 = (uint64_t *)(*(_QWORD *)(v0 + 48) + 48 * v65);
    v71 = *v70;
    v72 = v70[1];
    v200[0] = v64;
    v74 = *(_QWORD *)(v64 + 16);
    v73 = *(_QWORD *)(v64 + 24);
    sub_1ABF2FF5C();
    if (v74 >= v73 >> 1)
    {
      sub_1ABD16414(v73 > 1, v74 + 1, 1);
      v64 = v200[0];
    }
    *(_QWORD *)(v64 + 16) = v74 + 1;
    v75 = v64 + 16 * v74;
    *(_QWORD *)(v75 + 32) = v71;
    *(_QWORD *)(v75 + 40) = v72;
    v76 = sub_1ABD94A04(v65, v67, v197 & 1, v0);
    v65 = v76;
    v67 = v77;
    v69 = v78 & 1;
    if (!--v63)
    {
      sub_1ABD97C9C(v76, v77, v69);
      swift_bridgeObjectRelease();
      v3 = v184;
      goto LABEL_59;
    }
  }
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  swift_release();
  v158 = *(_QWORD *)(v183 + 224);
  v157 = MEMORY[0x1E0DEE9D8];
LABEL_123:
  v159 = *(_QWORD *)(v157 + 16);
  swift_release();
  if (v159 != v158)
    goto LABEL_135;
  v127 = swift_dynamicCastClass();
  if (!v127)
  {
    swift_release();
    v127 = MEMORY[0x1E0DEE9D8];
  }
LABEL_126:
  swift_release();
  v160 = sub_1ABF31324();
  v161 = sub_1ABF31BF4();
  if (os_log_type_enabled(v160, v161))
  {
    v162 = *(_QWORD *)(v183 + 224);
    v163 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v163 = 134217984;
    *(_QWORD *)(v183 + 80) = v162;
    sub_1ABF31D80();
    _os_log_impl(&dword_1ABCEF000, v160, v161, "Limited results down to limit=%ld", v163, 0xCu);
    MEMORY[0x1AF438FFC](v163, -1, -1);
  }

  v1 = v183;
  v128 = *(_QWORD *)(v127 + 16);
  if (v128)
    goto LABEL_95;
LABEL_129:
  swift_bridgeObjectRelease();
  v87 = MEMORY[0x1E0DEE9D8];
LABEL_67:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v87);
}

uint64_t sub_1ABD90250()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD902D4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  _OWORD v21[2];

  v2 = result;
  v3 = 0;
  v5 = result + 56;
  v4 = *(_QWORD *)(result + 56);
  v19 = a2;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v4;
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    v15 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v9)
      goto LABEL_23;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v3;
    if (!v16)
    {
      v3 = v15 + 1;
      if (v15 + 1 >= v9)
        goto LABEL_23;
      v16 = *(_QWORD *)(v5 + 8 * v3);
      if (!v16)
      {
        v3 = v15 + 2;
        if (v15 + 2 >= v9)
          goto LABEL_23;
        v16 = *(_QWORD *)(v5 + 8 * v3);
        if (!v16)
        {
          v3 = v15 + 3;
          if (v15 + 3 >= v9)
            goto LABEL_23;
          v16 = *(_QWORD *)(v5 + 8 * v3);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v3 << 6);
LABEL_5:
    v12 = (__int128 *)(*(_QWORD *)(v2 + 48) + 48 * v11);
    v13 = *(__int128 *)((char *)v12 + 26);
    v14 = v12[1];
    v20 = *v12;
    v21[0] = v14;
    *(_OWORD *)((char *)v21 + 10) = v13;
    sub_1ABD04B78((uint64_t)&v20);
    sub_1ABE0832C(&v18, (uint64_t)&v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v17 = v15 + 4;
  if (v17 >= v9)
  {
LABEL_23:
    swift_release();
    return v19;
  }
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v3 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v3 >= v9)
      goto LABEL_23;
    v16 = *(_QWORD *)(v5 + 8 * v3);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1ABD90470(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  _OWORD v21[8];
  uint64_t v22;
  _OWORD v23[8];
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[8];
  uint64_t v27;

  v2 = result;
  v3 = 0;
  v25 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v18 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v8)
      goto LABEL_23;
    v19 = *(_QWORD *)(v4 + 8 * v18);
    ++v3;
    if (!v19)
    {
      v3 = v18 + 1;
      if (v18 + 1 >= v8)
        goto LABEL_23;
      v19 = *(_QWORD *)(v4 + 8 * v3);
      if (!v19)
      {
        v3 = v18 + 2;
        if (v18 + 2 >= v8)
          goto LABEL_23;
        v19 = *(_QWORD *)(v4 + 8 * v3);
        if (!v19)
        {
          v3 = v18 + 3;
          if (v18 + 3 >= v8)
            goto LABEL_23;
          v19 = *(_QWORD *)(v4 + 8 * v3);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v19 - 1) & v19;
    v10 = __clz(__rbit64(v19)) + (v3 << 6);
LABEL_5:
    v11 = *(_QWORD *)(v2 + 48) + 136 * v10;
    v26[0] = *(_OWORD *)v11;
    v12 = *(_OWORD *)(v11 + 64);
    v14 = *(_OWORD *)(v11 + 16);
    v13 = *(_OWORD *)(v11 + 32);
    v26[3] = *(_OWORD *)(v11 + 48);
    v26[4] = v12;
    v26[1] = v14;
    v26[2] = v13;
    v16 = *(_OWORD *)(v11 + 96);
    v15 = *(_OWORD *)(v11 + 112);
    v17 = *(_OWORD *)(v11 + 80);
    v27 = *(_QWORD *)(v11 + 128);
    v26[6] = v16;
    v26[7] = v15;
    v26[5] = v17;
    sub_1ABD97ECC((uint64_t)v26);
    sub_1ABE08788((uint64_t)v21, (uint64_t)v26);
    v23[6] = v21[6];
    v23[7] = v21[7];
    v24 = v22;
    v23[2] = v21[2];
    v23[3] = v21[3];
    v23[4] = v21[4];
    v23[5] = v21[5];
    v23[0] = v21[0];
    v23[1] = v21[1];
    result = sub_1ABD97F60((uint64_t)v23);
  }
  v20 = v18 + 4;
  if (v20 >= v8)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  v19 = *(_QWORD *)(v4 + 8 * v20);
  if (v19)
  {
    v3 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v19 = *(_QWORD *)(v4 + 8 * v3);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1ABD9065C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EEC40EF8 != -1)
    swift_once();
  sub_1ABD94F70();
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC42188);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_1ABD906F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EEC40F00 != -1)
    swift_once();
  sub_1ABCF4DA8(0, &qword_1EEC421F0, (uint64_t (*)(void))sub_1ABD68830, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E0C918C8]);
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC421A0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_1ABD907AC@<X0>(uint64_t a1@<X8>)
{
  return static WatchlistQuery.findIntentDescription.getter(a1);
}

uint64_t sub_1ABD907C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  char v10;
  char v11;
  _QWORD *v12;

  *(_QWORD *)(v6 + 16) = a1;
  v10 = a3 & 1;
  v11 = a6 & 1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_1ABD98460;
  return WatchlistQuery.entities(matching:mode:sortedBy:limit:)(a2, v10, a4, a5, v11);
}

uint64_t sub_1ABD90844(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v30[2];
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = v3;
  sub_1ABCF4DA8(0, &qword_1EEC42258, (uint64_t (*)(void))sub_1ABD68830, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E0C90C58]);
  v9 = v8;
  v48 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v30 - v10;
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v30[1] = v4;
    v13 = *a1;
    v46 = a1[1];
    v47 = v13;
    v14 = a1[2];
    v44 = a1[3];
    v45 = v14;
    v43 = a1[4];
    v42 = *((unsigned __int8 *)a1 + 40);
    v41 = *((unsigned __int8 *)a1 + 41);
    v38 = *a2;
    v37 = a2[1];
    v36 = a2[2];
    v35 = a2[3];
    v34 = a2[4];
    v33 = *((unsigned __int8 *)a2 + 40);
    v32 = *((unsigned __int8 *)a2 + 41);
    v15 = a3 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
    v31 = *(_QWORD *)(v48 + 72);
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
    v30[0] = a3;
    sub_1ABF2FF5C();
    v39 = MEMORY[0x1E0DEE9B8] + 8;
    while (1)
    {
      v40(v11, v15, v9);
      v55 = v47;
      v56 = v46;
      v57 = v45;
      v58 = v44;
      v59 = v43;
      v60 = v42;
      v61 = v41;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      WatchlistEntity.init(from:)((uint64_t)&v55, &v62);
      v18 = v62;
      v17 = v63;
      v19 = v64;
      sub_1ABF2FD94();
      v52 = v18;
      v53 = v17;
      v54 = v19;
      swift_getAtPartialKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if ((swift_dynamicCast() & 1) == 0)
        break;
      v20 = v15;
      v49 = v12;
      v21 = v50;
      v65 = v51;
      v55 = v38;
      v56 = v37;
      v57 = v36;
      v58 = v35;
      v59 = v34;
      v60 = v33;
      v61 = v32;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      WatchlistEntity.init(from:)((uint64_t)&v55, &v62);
      v23 = v62;
      v22 = v63;
      v24 = v64;
      sub_1ABF2FD94();
      v52 = v23;
      v53 = v22;
      v54 = v24;
      swift_getAtPartialKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        break;
      }
      v25 = v50;
      v26 = v51;
      if ((sub_1ABF2FDA0() & 1) != 0)
      {
        v27 = v20;
        if (v21 == v25 && v65 == v26)
        {
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v9);
        }
        else
        {
          v16 = sub_1ABF3223C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v9);
          if ((v16 & 1) != 0)
            goto LABEL_15;
        }
      }
      else
      {
        v27 = v20;
        if (v25 == v21 && v26 == v65)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v48 + 8))(v11, v9, v21);
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v28 = sub_1ABF3223C();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v9);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v28 & 1) != 0)
          {
LABEL_15:
            swift_bridgeObjectRelease();
            return 1;
          }
        }
      }
      v15 = v27 + v31;
      v12 = v49 - 1;
      if (v49 == 1)
        goto LABEL_15;
    }
    swift_bridgeObjectRelease();
    MEMORY[0x1AF436E0C]("Encountered a WatchlistEntity value in WatchlistQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E0DEE9D8]);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v9);
  }
  return 1;
}

_QWORD *sub_1ABD90D34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1ABD04578(0, &qword_1ED34E320, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 144);
  sub_1ABD97E18(a1);
  v5 = sub_1ABDF47C0(&v7, (uint64_t)(v3 + 4), v1);
  swift_release();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1ABD90E10(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  size_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = a2 + 48 * a3;
        if (v10 < (unint64_t)&v8[6 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 48 * v5)
          goto LABEL_17;
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1ABD04578(0, &qword_1ED34E328, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 48);
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

_QWORD *sub_1ABD90FB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1ABD04578(0, &qword_1ED34E328, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 48);
  v5 = sub_1ABD93F8C(&v7, (uint64_t)(v3 + 4), v1, a1);
  sub_1ABF2FF5C();
  sub_1ABD97E10();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1ABD910B8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  size_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = a2 + 144 * a3;
        if (v10 < (unint64_t)&v8[18 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 144 * v5)
          goto LABEL_17;
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1ABD04578(0, &qword_1ED34E320, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 144);
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD9125C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  size_t v9;
  unint64_t v10;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    if (v5 <= 0)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = a2 + 136 * a3;
        if (v10 < (unint64_t)&v8[17 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 136 * v5)
          goto LABEL_17;
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1ABD04578(0, &qword_1ED34E318, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v8 = (_QWORD *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 136);
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABD913F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  sub_1ABD04578(0, &qword_1ED34E318, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 136);
  v5 = sub_1ABD941C8(&v7, (char *)(v3 + 32), v1, a1);
  sub_1ABF2FF5C();
  sub_1ABD97E10();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

size_t sub_1ABD914FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  sub_1ABCF5A54(0, &qword_1ED350D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = *(_QWORD *)(sub_1ABF305D4() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_1ABF2FF5C();
      sub_1ABD94604(&v11, (char *)v6 + v5, v1, a1);
      v10 = v9;
      sub_1ABD97E10();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABD91608(char *__src, char *a2, unint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char *v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int16 v54;
  char v55;
  char v56;
  char *v57;
  unint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t result;
  char *v67;
  unint64_t v68;
  char *v69;
  char *v70;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int16 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int16 v87;
  char *v88;
  const void *v89[2];
  char *v90;

  v6 = v5;
  v7 = a2;
  v8 = __src;
  v9 = a2 - __src;
  v10 = (a2 - __src) / 48;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  v90 = __src;
  v89[0] = a4;
  if (v10 < v12)
  {
    if (v9 >= -47)
    {
      v13 = 48 * v10;
      v14 = a4;
      if (a4 != __src || &__src[v13] <= a4)
        memmove(a4, __src, v13);
      v69 = &a4[v13];
      v88 = &a4[v13];
      if ((unint64_t)v7 < a3 && v9 >= 48)
      {
        while (1)
        {
          v74 = v8;
          v15 = *((_QWORD *)v7 + 1);
          v17 = *((_QWORD *)v7 + 2);
          v16 = *((_QWORD *)v7 + 3);
          v18 = *((_QWORD *)v7 + 4);
          v19 = v7[40];
          v20 = v7;
          v21 = v7[41];
          v82 = *(_QWORD *)v7;
          v83 = v15;
          v84 = v17;
          v85 = v16;
          v86 = v18;
          LOBYTE(v87) = v19;
          HIBYTE(v87) = v21;
          v22 = *((_QWORD *)v14 + 1);
          v24 = *((_QWORD *)v14 + 2);
          v23 = *((_QWORD *)v14 + 3);
          v25 = *((_QWORD *)v14 + 4);
          v26 = v14[40];
          v27 = v14[41];
          v76 = *(_QWORD *)v14;
          v77 = v22;
          v78 = v24;
          v79 = v23;
          v80 = v25;
          LOBYTE(v81) = v26;
          HIBYTE(v81) = v27;
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          v28 = sub_1ABD90844(&v82, &v76, a5);
          if (v6)
            goto LABEL_47;
          v29 = v28;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v29 & 1) != 0)
          {
            v30 = v20 + 48;
            v31 = v74;
            if (v74 >= v20 && v74 < v30)
            {
              v6 = 0;
              if (v74 != v20)
              {
                v32 = *(_OWORD *)v20;
                v33 = *((_OWORD *)v20 + 2);
                *((_OWORD *)v74 + 1) = *((_OWORD *)v20 + 1);
                *((_OWORD *)v74 + 2) = v33;
                *(_OWORD *)v74 = v32;
              }
              goto LABEL_19;
            }
            v36 = *(_OWORD *)v20;
            v37 = *((_OWORD *)v20 + 2);
            *((_OWORD *)v74 + 1) = *((_OWORD *)v20 + 1);
            *((_OWORD *)v74 + 2) = v37;
            *(_OWORD *)v74 = v36;
          }
          else
          {
            v31 = v74;
            if (v74 != v14)
            {
              v34 = *(_OWORD *)v14;
              v35 = *((_OWORD *)v14 + 2);
              *((_OWORD *)v74 + 1) = *((_OWORD *)v14 + 1);
              *((_OWORD *)v74 + 2) = v35;
              *(_OWORD *)v74 = v34;
            }
            v14 += 48;
            v89[0] = v14;
            v30 = v20;
          }
          v6 = 0;
LABEL_19:
          v8 = v31 + 48;
          v90 = v8;
          if (v14 < v69)
          {
            v7 = v30;
            if ((unint64_t)v30 < a3)
              continue;
          }
          break;
        }
      }
LABEL_46:
      sub_1ABE8BE20((void **)&v90, v89, &v88);
      swift_bridgeObjectRelease();
      return 1;
    }
LABEL_49:
    swift_bridgeObjectRelease();
    result = sub_1ABF3202C();
    __break(1u);
    return result;
  }
  if (v11 < -47)
    goto LABEL_49;
  v38 = 48 * v12;
  if (a4 != a2 || &a2[v38] <= a4)
    memmove(a4, a2, 48 * v12);
  v39 = &a4[v38];
  v88 = &a4[v38];
  v90 = v7;
  if (v8 >= v7 || v11 < 48)
    goto LABEL_46;
  v40 = (char *)(a3 - 48);
  v41 = v7;
  v75 = v8;
  while (1)
  {
    v73 = v40;
    v68 = (unint64_t)v39;
    v70 = v7;
    v42 = *((_QWORD *)v39 - 6);
    v44 = *((_QWORD *)v39 - 5);
    v43 = v39 - 48;
    v46 = *((_QWORD *)v39 - 4);
    v45 = *((_QWORD *)v39 - 3);
    v47 = *((_QWORD *)v39 - 2);
    v48 = *((_WORD *)v39 - 4);
    v82 = v42;
    v83 = v44;
    v84 = v46;
    v85 = v45;
    v86 = v47;
    v87 = v48;
    v49 = *((_QWORD *)v41 - 6);
    v50 = *((_QWORD *)v41 - 5);
    v41 -= 48;
    v52 = *((_QWORD *)v41 + 2);
    v51 = *((_QWORD *)v41 + 3);
    v53 = *((_QWORD *)v41 + 4);
    v54 = *((_WORD *)v41 + 20);
    v76 = v49;
    v77 = v50;
    v78 = v52;
    v79 = v51;
    v80 = v53;
    v81 = v54;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v55 = sub_1ABD90844(&v82, &v76, a5);
    if (v6)
      break;
    v56 = v55;
    v67 = v73 + 48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v56 & 1) != 0)
    {
      v39 = (char *)v68;
      v57 = v73;
      v58 = (unint64_t)v75;
      if (v67 != v70 || v73 >= v70)
      {
        v59 = *(_OWORD *)v41;
        v60 = *((_OWORD *)v41 + 2);
        *((_OWORD *)v73 + 1) = *((_OWORD *)v41 + 1);
        *((_OWORD *)v73 + 2) = v60;
        *(_OWORD *)v73 = v59;
      }
      v90 = v41;
    }
    else
    {
      v88 = v43;
      v57 = v73;
      v58 = (unint64_t)v75;
      v41 = v70;
      if ((unint64_t)v67 >= v68 && (unint64_t)v73 < v68)
      {
        v6 = 0;
        if (v67 != (char *)v68)
        {
          v61 = *(_OWORD *)v43;
          v62 = *((_OWORD *)v43 + 2);
          *((_OWORD *)v73 + 1) = *((_OWORD *)v43 + 1);
          *((_OWORD *)v73 + 2) = v62;
          *(_OWORD *)v73 = v61;
        }
        v39 = v43;
        goto LABEL_42;
      }
      v63 = *(_OWORD *)v43;
      v64 = *((_OWORD *)v43 + 2);
      *((_OWORD *)v73 + 1) = *((_OWORD *)v43 + 1);
      *((_OWORD *)v73 + 2) = v64;
      *(_OWORD *)v73 = v63;
      v39 = v43;
    }
    v6 = 0;
LABEL_42:
    if (v39 > a4)
    {
      v40 = v57 - 48;
      v7 = v41;
      if ((unint64_t)v41 > v58)
        continue;
    }
    goto LABEL_46;
  }
LABEL_47:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABE8BE20((void **)&v90, v89, &v88);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1ABD91B54(uint64_t a1, uint64_t a2)
{
  return sub_1ABD91BA0(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1ABD92964);
}

uint64_t sub_1ABD91BA0(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a2 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x1AF438FFC](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_1ABD91D2C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v31;
  int64_t v32;
  int v33;

  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v17 = *(_QWORD *)(a3 + 56);
    v18 = 1 << *(_BYTE *)(a3 + 32);
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v31 = (unint64_t)(v18 + 63) >> 6;
    if ((v19 & v17) != 0)
    {
      v20 = __clz(__rbit64(v19 & v17));
    }
    else
    {
      if ((unint64_t)(v18 + 63) >> 6 <= 1)
        goto LABEL_48;
      v21 = *(_QWORD *)(a3 + 64);
      v22 = 1;
      if (!v21)
      {
        v22 = 2;
        if ((unint64_t)(v18 + 63) >> 6 <= 2)
          goto LABEL_48;
        v21 = *(_QWORD *)(a3 + 72);
        if (!v21)
        {
          v22 = 3;
          if ((unint64_t)(v18 + 63) >> 6 <= 3)
            goto LABEL_48;
          v21 = *(_QWORD *)(a3 + 80);
          if (!v21)
          {
            v23 = 4;
            if (v31 <= 4)
              goto LABEL_48;
            v21 = *(_QWORD *)(a3 + 88);
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_50;
                if (v22 >= v31)
                  goto LABEL_48;
                v21 = *(_QWORD *)(a3 + 56 + 8 * v22);
                ++v23;
                if (v21)
                  goto LABEL_42;
              }
            }
            v22 = 4;
          }
        }
      }
LABEL_42:
      v20 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = *(_QWORD *)(a3 + 48) + 48 * v20;
    v25 = *(_QWORD *)(v24 + 16);
    v33 = *(unsigned __int8 *)(v24 + 40);
    sub_1ABF32308();
    swift_bridgeObjectRetain_n();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF31840();
    swift_bridgeObjectRelease();
    sub_1ABF32314();
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      sub_1ABF2FF5C();
      v27 = v25 + 40;
      do
      {
        sub_1ABF2FF5C();
        sub_1ABF31840();
        swift_bridgeObjectRelease();
        v27 += 16;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    sub_1ABF2FF5C();
    sub_1ABF31840();
    swift_bridgeObjectRelease();
    __asm { BR              X8 }
  }
  v5 = *(_QWORD *)(a4 + 56);
  v6 = 1 << *(_BYTE *)(a4 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v32 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v5) != 0)
  {
    v8 = __clz(__rbit64(v7 & v5));
    goto LABEL_20;
  }
  if ((unint64_t)(v6 + 63) >> 6 > 1)
  {
    v9 = *(_QWORD *)(a4 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if ((unint64_t)(v6 + 63) >> 6 <= 2)
      goto LABEL_48;
    v9 = *(_QWORD *)(a4 + 72);
    if (v9)
      goto LABEL_19;
    v10 = 3;
    if ((unint64_t)(v6 + 63) >> 6 <= 3)
      goto LABEL_48;
    v9 = *(_QWORD *)(a4 + 80);
    if (v9)
    {
LABEL_19:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
      v12 = *(_QWORD *)(a4 + 48) + 48 * v8;
      v13 = *(_QWORD *)(v12 + 16);
      v14 = *(unsigned __int8 *)(v12 + 40);
      sub_1ABF32308();
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF31840();
      swift_bridgeObjectRelease();
      sub_1ABF32314();
      v15 = *(_QWORD *)(v13 + 16);
      if (v15)
      {
        sub_1ABF2FF5C();
        v16 = v13 + 40;
        do
        {
          sub_1ABF2FF5C();
          sub_1ABF31840();
          swift_bridgeObjectRelease();
          v16 += 16;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease();
      }
      sub_1ABF2FF5C();
      sub_1ABF31840();
      swift_bridgeObjectRelease();
      __asm { BR              X8 }
    }
    v11 = 4;
    if (v32 > 4)
    {
      v9 = *(_QWORD *)(a4 + 88);
      if (v9)
      {
        v10 = 4;
        goto LABEL_19;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
          break;
        if (v10 >= v32)
          goto LABEL_48;
        v9 = *(_QWORD *)(a4 + 56 + 8 * v10);
        ++v11;
        if (v9)
          goto LABEL_19;
      }
      __break(1u);
LABEL_50:
      __break(1u);
      JUMPOUT(0x1ABD92904);
    }
  }
LABEL_48:
  sub_1ABF2FF68();
  return sub_1ABD938A4(a1, a2, 0, a3);
}

unint64_t sub_1ABD92964(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  _OWORD *v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  __int128 v49;
  unint64_t v50;
  _OWORD *v51;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  int64_t v58;
  int64_t v59;
  int64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  __int128 v65;
  __int128 v66;
  unint64_t v67;
  unint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;

  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v55 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v57 = (unint64_t)(v7 + 63) >> 6;
    v86 = a3 + 56;
    while (1)
    {
      if (v9)
      {
        v10 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v11 = v10 | (v6 << 6);
      }
      else
      {
        v12 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
          goto LABEL_72;
        }
        if (v12 >= v57)
          goto LABEL_70;
        v13 = *(_QWORD *)(v55 + 8 * v12);
        ++v6;
        if (!v13)
        {
          v6 = v12 + 1;
          if (v12 + 1 >= v57)
            goto LABEL_70;
          v13 = *(_QWORD *)(v55 + 8 * v6);
          if (!v13)
          {
            v6 = v12 + 2;
            if (v12 + 2 >= v57)
              goto LABEL_70;
            v13 = *(_QWORD *)(v55 + 8 * v6);
            if (!v13)
            {
              v14 = v12 + 3;
              if (v14 >= v57)
                goto LABEL_70;
              v13 = *(_QWORD *)(v55 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  v6 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    break;
                  if (v6 >= v57)
                    goto LABEL_70;
                  v13 = *(_QWORD *)(v55 + 8 * v6);
                  ++v14;
                  if (v13)
                    goto LABEL_22;
                }
LABEL_73:
                __break(1u);
LABEL_74:
                __break(1u);
                JUMPOUT(0x1ABD9381CLL);
              }
              v6 = v14;
            }
          }
        }
LABEL_22:
        v9 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v6 << 6);
      }
      v15 = *(_QWORD *)(a4 + 48) + 136 * v11;
      v77 = *(_OWORD *)v15;
      v16 = *(_OWORD *)(v15 + 64);
      v18 = *(_OWORD *)(v15 + 16);
      v17 = *(_OWORD *)(v15 + 32);
      v80 = *(_OWORD *)(v15 + 48);
      v81 = v16;
      v78 = v18;
      v79 = v17;
      v20 = *(_OWORD *)(v15 + 96);
      v19 = *(_OWORD *)(v15 + 112);
      v21 = *(_OWORD *)(v15 + 80);
      v85 = *(_QWORD *)(v15 + 128);
      v83 = v20;
      v84 = v19;
      v82 = v21;
      sub_1ABF32308();
      sub_1ABD97ECC((uint64_t)&v77);
      sub_1ABD99914();
      v22 = sub_1ABF32338();
      v23 = -1 << *(_BYTE *)(a3 + 32);
      v24 = v22 & ~v23;
      if (((*(_QWORD *)(v86 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
      {
        v59 = v6;
        v25 = ~v23;
        v26 = v77;
        v27 = v78;
        *((_QWORD *)&v65 + 1) = v79;
        v67 = *((_QWORD *)&v78 + 1);
        v63 = v80;
        *(_QWORD *)&v65 = *((_QWORD *)&v79 + 1);
        v61 = *((_QWORD *)&v80 + 1);
        do
        {
          v28 = (_OWORD *)(*(_QWORD *)(a3 + 48) + 136 * v24);
          v75 = v28[4];
          v71 = v28[2];
          v73 = v28[3];
          v69 = v28[1];
          if ((*v28 == v26 || (sub_1ABF3223C() & 1) != 0)
            && (v69 == __PAIR128__(v67, v27) || (sub_1ABF3223C() & 1) != 0)
            && (__PAIR128__(v71, *((unint64_t *)&v71 + 1)) == v65 || (sub_1ABF3223C() & 1) != 0)
            && (v73 == __PAIR128__(v61, v63) || (sub_1ABF3223C() & 1) != 0))
          {
            __asm { BR              X9 }
          }
          v24 = (v24 + 1) & v25;
        }
        while (((*(_QWORD *)(v86 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0);
        sub_1ABD97F60((uint64_t)&v77);
        v6 = v59;
      }
      else
      {
        sub_1ABD97F60((uint64_t)&v77);
      }
    }
  }
  v29 = 0;
  v56 = a3 + 56;
  v30 = 1 << *(_BYTE *)(a3 + 32);
  if (v30 < 64)
    v31 = ~(-1 << v30);
  else
    v31 = -1;
  v32 = v31 & *(_QWORD *)(a3 + 56);
  v58 = (unint64_t)(v30 + 63) >> 6;
  v86 = a4 + 56;
  while (v32)
  {
    v33 = __clz(__rbit64(v32));
    v32 &= v32 - 1;
    v34 = v33 | (v29 << 6);
LABEL_57:
    v38 = *(_QWORD *)(a3 + 48) + 136 * v34;
    v77 = *(_OWORD *)v38;
    v39 = *(_OWORD *)(v38 + 64);
    v41 = *(_OWORD *)(v38 + 16);
    v40 = *(_OWORD *)(v38 + 32);
    v80 = *(_OWORD *)(v38 + 48);
    v81 = v39;
    v78 = v41;
    v79 = v40;
    v43 = *(_OWORD *)(v38 + 96);
    v42 = *(_OWORD *)(v38 + 112);
    v44 = *(_OWORD *)(v38 + 80);
    v85 = *(_QWORD *)(v38 + 128);
    v83 = v43;
    v84 = v42;
    v82 = v44;
    sub_1ABF32308();
    sub_1ABD97ECC((uint64_t)&v77);
    sub_1ABD99914();
    v45 = sub_1ABF32338();
    v46 = -1 << *(_BYTE *)(a4 + 32);
    v47 = v45 & ~v46;
    if (((*(_QWORD *)(v86 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v47) & 1) != 0)
    {
      v60 = v29;
      v48 = ~v46;
      v49 = v77;
      v50 = v78;
      *((_QWORD *)&v66 + 1) = v79;
      v68 = *((_QWORD *)&v78 + 1);
      v64 = v80;
      *(_QWORD *)&v66 = *((_QWORD *)&v79 + 1);
      v62 = *((_QWORD *)&v80 + 1);
      do
      {
        v51 = (_OWORD *)(*(_QWORD *)(a4 + 48) + 136 * v47);
        v76 = v51[4];
        v72 = v51[2];
        v74 = v51[3];
        v70 = v51[1];
        if ((*v51 == v49 || (sub_1ABF3223C() & 1) != 0)
          && (v70 == __PAIR128__(v68, v50) || (sub_1ABF3223C() & 1) != 0)
          && (__PAIR128__(v72, *((unint64_t *)&v72 + 1)) == v66 || (sub_1ABF3223C() & 1) != 0)
          && (v74 == __PAIR128__(v62, v64) || (sub_1ABF3223C() & 1) != 0))
        {
          __asm { BR              X9 }
        }
        v47 = (v47 + 1) & v48;
      }
      while (((*(_QWORD *)(v86 + ((v47 >> 3) & 0xFFFFFFFFFFFFF8)) >> v47) & 1) != 0);
      sub_1ABD97F60((uint64_t)&v77);
      v29 = v60;
    }
    else
    {
      sub_1ABD97F60((uint64_t)&v77);
    }
  }
  v35 = v29 + 1;
  if (__OFADD__(v29, 1))
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (v35 >= v58)
    goto LABEL_70;
  v36 = *(_QWORD *)(v56 + 8 * v35);
  ++v29;
  if (v36)
    goto LABEL_56;
  v29 = v35 + 1;
  if (v35 + 1 >= v58)
    goto LABEL_70;
  v36 = *(_QWORD *)(v56 + 8 * v29);
  if (v36)
    goto LABEL_56;
  v29 = v35 + 2;
  if (v35 + 2 >= v58)
    goto LABEL_70;
  v36 = *(_QWORD *)(v56 + 8 * v29);
  if (v36)
  {
LABEL_56:
    v32 = (v36 - 1) & v36;
    v34 = __clz(__rbit64(v36)) + (v29 << 6);
    goto LABEL_57;
  }
  v37 = v35 + 3;
  if (v37 >= v58)
    goto LABEL_70;
  v36 = *(_QWORD *)(v56 + 8 * v37);
  if (v36)
  {
    v29 = v37;
    goto LABEL_56;
  }
  while (1)
  {
    v29 = v37 + 1;
    if (__OFADD__(v37, 1))
      goto LABEL_74;
    if (v29 >= v58)
      break;
    v36 = *(_QWORD *)(v56 + 8 * v29);
    ++v37;
    if (v36)
      goto LABEL_56;
  }
LABEL_70:
  sub_1ABF2FF68();
  return sub_1ABD93CD8(a1, a2, 0, a3);
}

uint64_t sub_1ABD938A4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v18;

  v4 = a4;
  if (!a3)
  {
    v5 = MEMORY[0x1E0DEE9E8];
    goto LABEL_27;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    sub_1ABCF4DA8(0, &qword_1EEC42248, (uint64_t (*)(void))sub_1ABD98038, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
    v5 = sub_1ABF31E64();
    if (a2 < 1)
      v6 = 0;
    else
      v6 = *a1;
    if (v6)
    {
      v7 = __clz(__rbit64(v6));
      goto LABEL_22;
    }
    if (a2 > 1)
    {
      v8 = a1[1];
      v9 = 1;
      if (v8)
        goto LABEL_21;
      v9 = 2;
      if (a2 > 2)
      {
        v8 = a1[2];
        if (v8)
          goto LABEL_21;
        v9 = 3;
        if (a2 > 3)
        {
          v8 = a1[3];
          if (!v8)
          {
            v10 = 4;
            if (a2 > 4)
            {
              v8 = a1[4];
              if (v8)
              {
                v9 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v9 = v10 + 1;
                if (__OFADD__(v10, 1))
                {
                  __break(1u);
                  JUMPOUT(0x1ABD93CC0);
                }
                if (v9 >= a2)
                  break;
                v8 = a1[v9];
                ++v10;
                if (v8)
                  goto LABEL_21;
              }
            }
            goto LABEL_27;
          }
LABEL_21:
          v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_22:
          v11 = *(_QWORD *)(v4 + 48) + 48 * v7;
          v12 = *(_QWORD *)(v11 + 16);
          v18 = *(unsigned __int8 *)(v11 + 40);
          sub_1ABF32308();
          swift_bridgeObjectRetain_n();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF31840();
          swift_bridgeObjectRelease();
          sub_1ABF32314();
          v13 = *(_QWORD *)(v12 + 16);
          if (v13)
          {
            sub_1ABF2FF5C();
            v14 = v12 + 40;
            do
            {
              sub_1ABF2FF5C();
              sub_1ABF31840();
              swift_bridgeObjectRelease();
              v14 += 16;
              --v13;
            }
            while (v13);
            swift_bridgeObjectRelease();
          }
          sub_1ABF2FF5C();
          sub_1ABF31840();
          swift_bridgeObjectRelease();
          __asm { BR              X9 }
        }
      }
    }
LABEL_27:
    swift_release();
    return v5;
  }
  return v4;
}

unint64_t sub_1ABD93CD8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  unint64_t *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  sub_1ABCF4DA8(0, &qword_1EEC42240, (uint64_t (*)(void))sub_1ABD97FF4, (uint64_t)&type metadata for Stock, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  result = sub_1ABF31E64();
  v6 = result;
  v33 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_30;
      if (v15 >= a2)
      {
LABEL_27:
        swift_release();
        return v6;
      }
      v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          goto LABEL_27;
        v16 = v33[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            goto LABEL_27;
          v16 = v33[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              goto LABEL_27;
            v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_31;
                if (v11 >= a2)
                  goto LABEL_27;
                v16 = v33[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = *(_QWORD *)(a4 + 48) + 136 * v14;
    v19 = *(_OWORD *)(v18 + 16);
    v20 = *(_OWORD *)(v18 + 32);
    v21 = *(_OWORD *)(v18 + 64);
    v37 = *(_OWORD *)(v18 + 48);
    v38 = v21;
    v36 = v20;
    v23 = *(_OWORD *)(v18 + 96);
    v22 = *(_OWORD *)(v18 + 112);
    v24 = *(_OWORD *)(v18 + 80);
    v42 = *(_QWORD *)(v18 + 128);
    v40 = v23;
    v41 = v22;
    v39 = v24;
    v34 = *(_OWORD *)v18;
    v35 = v19;
    sub_1ABF32308();
    sub_1ABD97ECC((uint64_t)&v34);
    sub_1ABD99914();
    sub_1ABF32338();
    result = sub_1ABF31E1C();
    *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v25 = *(_QWORD *)(v6 + 48) + 136 * result;
    *(_OWORD *)v25 = v34;
    v26 = v38;
    v28 = v35;
    v27 = v36;
    *(_OWORD *)(v25 + 48) = v37;
    *(_OWORD *)(v25 + 64) = v26;
    *(_OWORD *)(v25 + 16) = v28;
    *(_OWORD *)(v25 + 32) = v27;
    v29 = v39;
    v30 = v40;
    v31 = v41;
    *(_QWORD *)(v25 + 128) = v42;
    *(_OWORD *)(v25 + 96) = v30;
    *(_OWORD *)(v25 + 112) = v31;
    *(_OWORD *)(v25 + 80) = v29;
    ++*(_QWORD *)(v6 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      goto LABEL_27;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

_QWORD *sub_1ABD93F8C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v5 = a4 + 56;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  v26 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = *(_QWORD *)(a4 + 48) + 48 * v15;
    v21 = *(_QWORD *)v19;
    v20 = *(_QWORD *)(v19 + 8);
    v23 = *(_QWORD *)(v19 + 16);
    v22 = *(_QWORD *)(v19 + 24);
    v24 = *(_QWORD *)(v19 + 32);
    LOWORD(v19) = *(_WORD *)(v19 + 40);
    *(_QWORD *)v10 = v21;
    *(_QWORD *)(v10 + 8) = v20;
    *(_QWORD *)(v10 + 16) = v23;
    *(_QWORD *)(v10 + 24) = v22;
    *(_QWORD *)(v10 + 32) = v24;
    *(_WORD *)(v10 + 40) = v19;
    if (v12 == v9)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      goto LABEL_38;
    }
    v10 += 48;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    result = (_QWORD *)sub_1ABF2FF5C();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        v8 = 0;
        v11 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 8 * v11);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_33;
        v17 = *(_QWORD *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          v17 = *(_QWORD *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            v16 = v11;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v13)
              {
                v8 = 0;
                v11 = v13 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v5 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v16 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v25;
      result = v26;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_1ABD941C8(_QWORD *result, char *__dst, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _OWORD v28[8];
  uint64_t v29;

  v5 = result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!__dst)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = __dst;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v27 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_OWORD *)(*(_QWORD *)(a4 + 48) + 136 * v16);
    v28[0] = *v20;
    v21 = v20[4];
    v23 = v20[1];
    v22 = v20[2];
    v28[3] = v20[3];
    v28[4] = v21;
    v28[1] = v23;
    v28[2] = v22;
    v25 = v20[6];
    v24 = v20[7];
    v26 = v20[5];
    v29 = *((_QWORD *)v20 + 16);
    v28[6] = v25;
    v28[7] = v24;
    v28[5] = v26;
    memmove(v11, v20, 0x88uLL);
    if (v13 == v10)
    {
      sub_1ABD97ECC((uint64_t)v28);
      goto LABEL_38;
    }
    v11 += 136;
    result = (_QWORD *)sub_1ABD97ECC((uint64_t)v28);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v27;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1ABD94408(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_1ABF2FF5C();
      goto LABEL_38;
    }
    v11 += 2;
    result = sub_1ABF2FF5C();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1ABD94604(_QWORD *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - v9;
  v11 = sub_1ABF305D4();
  v41 = *(_QWORD *)(v11 - 8);
  v12.n128_f64[0] = MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return;
  }
  if (!a3)
  {
    v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    v30(a2, v22, v11);
    if (v21 == v39)
    {
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v10, 1, 1, v11, v12);
          v19 = 0;
LABEL_38:
          sub_1ABCF59BC((uint64_t)v10);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_1ABD94960(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1ABD94A04(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1ABD94AE8(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = 0;
  v3 = result + 40;
  v20 = v1 - 1;
  v4 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(result + 16);
  v21 = result + 40;
  do
  {
    v22 = v4;
    if (v2 <= v1)
      v5 = v1;
    else
      v5 = v2;
    v28 = v5;
    for (i = v3 + 48 * v2; ; i += 48)
    {
      if (v28 == v2)
      {
        __break(1u);
        return result;
      }
      v7 = *(_QWORD *)i;
      v8 = *(_QWORD *)(i + 8);
      v26 = *(_QWORD *)(i + 16);
      v9 = *(_QWORD *)(i + 24);
      v10 = v2 + 1;
      v24 = *(_BYTE *)(i + 33);
      v25 = *(_BYTE *)(i + 32);
      v23 = *(_QWORD *)(i - 8);
      sub_1ABF31804();
      sub_1ABF31804();
      sub_1ABD0E288();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v11 = sub_1ABF31DC8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      ++v2;
      if (v27 == v10)
        return v22;
    }
    v4 = v22;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1ABDB50B4(0, *(_QWORD *)(v22 + 16) + 1, 1);
      v4 = v22;
    }
    v3 = v21;
    v12 = v26;
    v14 = v24;
    v13 = v25;
    v16 = *(_QWORD *)(v4 + 16);
    v15 = *(_QWORD *)(v4 + 24);
    v17 = v16 + 1;
    if (v16 >= v15 >> 1)
    {
      result = sub_1ABDB50B4(v15 > 1, v16 + 1, 1);
      v17 = v16 + 1;
      v14 = v24;
      v13 = v25;
      v12 = v26;
      v4 = v22;
    }
    *(_QWORD *)(v4 + 16) = v17;
    v18 = v4 + 48 * v16;
    *(_QWORD *)(v18 + 32) = v23;
    *(_QWORD *)(v18 + 40) = v7;
    *(_QWORD *)(v18 + 48) = v8;
    *(_QWORD *)(v18 + 56) = v12;
    *(_QWORD *)(v18 + 64) = v9;
    *(_BYTE *)(v18 + 72) = v13;
    *(_BYTE *)(v18 + 73) = v14;
    v19 = v20 == v2;
    v1 = v27;
    ++v2;
  }
  while (!v19);
  return v4;
}

_QWORD *sub_1ABD94D28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  _QWORD v31[5];
  char v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  int v36;

  v26 = *(_QWORD *)(a1 + 16);
  if (!v26)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v25 = a1 + 32;
  v3 = *(_QWORD *)(a2 + 16);
  sub_1ABF2FF5C();
  v4 = 0;
  v23 = (char *)(a2 + 73);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v24 = v3;
  do
  {
    if (v3)
    {
      v27 = v4;
      v28 = v5;
      v7 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v7;
      v9 = v7[1];
      v10 = v23;
      while (1)
      {
        v29 = *(_QWORD *)(v10 - 41);
        v11 = *(_QWORD *)(v10 - 33);
        v12 = *(_QWORD *)(v10 - 25);
        v13 = *(_QWORD *)(v10 - 17);
        v14 = *(_QWORD *)(v10 - 9);
        v36 = *(v10 - 1);
        v15 = *v10;
        if (v13 == v8 && v14 == v9)
          break;
        v17 = v8;
        v18 = v9;
        if ((sub_1ABF3223C() & 1) != 0)
          goto LABEL_16;
        v10 += 48;
        --v3;
        v8 = v17;
        v9 = v18;
        if (!v3)
        {
          v3 = v24;
          v5 = v28;
          goto LABEL_4;
        }
      }
      v13 = v8;
      v14 = v9;
LABEL_16:
      v31[0] = v29;
      v31[1] = v11;
      v31[2] = v12;
      v31[3] = v13;
      v31[4] = v14;
      v32 = v36;
      v33 = v15;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      WatchlistEntity.init(from:)((uint64_t)v31, &v34);
      v19 = v34;
      v30 = v35;
      v5 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1ABD826F4(0, v28[2] + 1, 1, v28);
      v3 = v24;
      v21 = v5[2];
      v20 = v5[3];
      if (v21 >= v20 >> 1)
        v5 = sub_1ABD826F4((_QWORD *)(v20 > 1), v21 + 1, 1, v5);
      v5[2] = v21 + 1;
      v6 = &v5[3 * v21];
      v6[4] = v19;
      *(_OWORD *)(v6 + 5) = v30;
LABEL_4:
      v4 = v27;
    }
    ++v4;
  }
  while (v4 != v26);
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1ABD94F2C()
{
  unint64_t result;

  result = qword_1ED34C918;
  if (!qword_1ED34C918)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91C78], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED34C918);
  }
  return result;
}

void sub_1ABD94F70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC421E0)
  {
    sub_1ABD94FD8();
    sub_1ABD68830();
    v0 = sub_1ABF2FF2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC421E0);
  }
}

unint64_t sub_1ABD94FD8()
{
  unint64_t result;

  result = qword_1EEC421E8;
  if (!qword_1EEC421E8)
  {
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EEC421E8);
  }
  return result;
}

uint64_t sub_1ABD95020(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  __int128 *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  _OWORD v9[2];

  v2 = *(_QWORD *)(a1 + 16);
  sub_1ABD98038();
  result = sub_1ABF31B34();
  v7 = result;
  if (v2)
  {
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v5 = v4[1];
      v8 = *v4;
      v9[0] = v5;
      *(_OWORD *)((char *)v9 + 10) = *(__int128 *)((char *)v4 + 26);
      sub_1ABD04B78((uint64_t)&v8);
      sub_1ABE0832C(&v6, (uint64_t)&v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 3;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1ABD950C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(_BYTE *, _QWORD, uint64_t);
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int16 v69;
  __int128 v70;
  __int128 v71;
  _BYTE v72[16];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(_BYTE *);
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  const __CFString *v99;
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int v118;

  v77 = a1;
  v102 = sub_1ABF30484();
  v85 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v101 = &v72[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v10);
  v110 = &v72[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v91 = sub_1ABF31774();
  v12 = *(_QWORD *)(v91 - 8);
  v13 = MEMORY[0x1E0C80A78](v91);
  v15 = &v72[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v72[-v16];
  v18 = sub_1ABF3049C();
  MEMORY[0x1E0C80A78](v18);
  v100 = &v72[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABCF4DA8(0, &qword_1EEC42258, (uint64_t (*)(void))sub_1ABD68830, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E0C90C58]);
  v92 = v20;
  v88 = *(_QWORD *)(v20 - 8);
  result = MEMORY[0x1E0C80A78](v20);
  v103 = &v72[-v22];
  v73 = a2;
  if (a3 != a2)
  {
    v23 = *a4;
    v24 = *(_QWORD *)(a5 + 16);
    v118 = *MEMORY[0x1E0CAF9B8];
    v99 = CFSTR("watchlist");
    v84 = MEMORY[0x1E0DEE9B8] + 8;
    v25 = v103;
    v81 = a5;
    v90 = v12;
    v89 = v15;
    v75 = v23;
    v74 = v24;
    do
    {
      v26 = a3;
      v76 = a3;
      do
      {
        v27 = v23 + 48 * v26;
        v28 = v27 - 48;
        v83 = *(_QWORD *)(v27 - 48);
        if (!v24)
          goto LABEL_38;
        v79 = v27 - 48;
        v80 = v26;
        v29 = *(_QWORD *)(v27 + 8);
        v82 = *(_QWORD *)v27;
        v31 = *(_QWORD *)(v27 + 16);
        v30 = *(_QWORD *)(v27 + 24);
        v32 = *(_QWORD *)(v27 + 32);
        v33 = *(_QWORD *)(v27 - 40);
        v106 = *(_QWORD *)(v27 - 32);
        v107 = *(_QWORD *)(v27 - 24);
        v108 = v30;
        v78 = v23 + 48 * v26;
        v98 = *(_QWORD *)(v27 - 16);
        v34 = v88;
        v105 = a5 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
        v35 = v24;
        sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
        v104 = v36;
        v86 = *(_QWORD *)(v34 + 72);
        v87 = *(void (**)(_BYTE *))(v34 + 16);
        v97 = v29;
        sub_1ABF2FF5C();
        v96 = v31;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        v37 = v105;
        v109 = v33;
        while (1)
        {
          v94 = v35;
          v105 = v37;
          v87(v25);
          v39 = v97;
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF31738();
          sub_1ABF30844();
          v40 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v85 + 104);
          v40(v101, v118, v102);
          v41 = v100;
          sub_1ABF304A8();
          v42 = MEMORY[0x1AF435F84](v41);
          if (v108 != sub_1ABF317A4())
            goto LABEL_11;
          if (v32 == v43)
          {
            swift_bridgeObjectRetain_n();
            swift_retain_n();
          }
          else
          {
LABEL_11:
            v44 = sub_1ABF3223C();
            swift_bridgeObjectRetain_n();
            swift_retain_n();
            swift_bridgeObjectRelease();
            v45 = v82;
            if ((v44 & 1) == 0)
              goto LABEL_15;
          }
          sub_1ABF31738();
          v46 = v90;
          v47 = v91;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v90 + 16))(v89, v17, v91);
          if (qword_1ED34FD78 != -1)
            swift_once();
          v48 = (id)qword_1ED368428;
          sub_1ABF30844();
          v45 = sub_1ABF317EC();
          v39 = v49;
          (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v17, v47);
          swift_bridgeObjectRelease();
LABEL_15:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v113 = v45;
          v114 = v39;
          sub_1ABF2FD28();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          v50 = v92;
          sub_1ABF2FD94();
          v115 = v108;
          v116 = v32;
          v117 = v42;
          swift_getAtPartialKeyPath();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            v25 = v103;
LABEL_35:
            MEMORY[0x1AF436E0C]("Encountered a WatchlistEntity value in WatchlistQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E0DEE9D8]);
            (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v25, v50);
            goto LABEL_37;
          }
          v93 = v111;
          v95 = v112;
          v51 = v109;
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          v52 = v98;
          sub_1ABF2FF5C();
          sub_1ABF31738();
          sub_1ABF30844();
          v40(v101, v118, v102);
          v53 = v100;
          sub_1ABF304A8();
          v54 = MEMORY[0x1AF435F84](v53);
          if (v107 != sub_1ABF317A4())
            goto LABEL_19;
          if (v52 == v55)
          {
            swift_bridgeObjectRetain_n();
            swift_retain_n();
          }
          else
          {
LABEL_19:
            v56 = sub_1ABF3223C();
            swift_bridgeObjectRetain_n();
            swift_retain_n();
            swift_bridgeObjectRelease();
            v57 = v52;
            v58 = v83;
            if ((v56 & 1) == 0)
              goto LABEL_23;
          }
          sub_1ABF31738();
          v59 = v90;
          v60 = v91;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v90 + 16))(v89, v17, v91);
          if (qword_1ED34FD78 != -1)
            swift_once();
          v61 = (id)qword_1ED368428;
          sub_1ABF30844();
          v58 = sub_1ABF317EC();
          v51 = v62;
          (*(void (**)(_BYTE *, uint64_t))(v59 + 8))(v17, v60);
          v57 = v98;
          swift_bridgeObjectRelease();
          v50 = v92;
LABEL_23:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v113 = v58;
          v114 = v51;
          sub_1ABF2FD28();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          v25 = v103;
          sub_1ABF2FD94();
          v115 = v107;
          v116 = v57;
          v117 = v54;
          swift_getAtPartialKeyPath();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_35;
          }
          v64 = v111;
          v63 = v112;
          if ((sub_1ABF2FDA0() & 1) != 0)
          {
            if (v93 == v64 && v95 == v63)
            {
              swift_bridgeObjectRelease_n();
              (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v25, v50);
            }
            else
            {
              v38 = sub_1ABF3223C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v25, v50);
              if ((v38 & 1) != 0)
                goto LABEL_36;
            }
            goto LABEL_7;
          }
          if (v64 != v93 || v63 != v95)
            break;
          (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v25, v50);
          swift_bridgeObjectRelease_n();
LABEL_7:
          v37 = v105 + v86;
          v35 = v94 - 1;
          if (v94 == 1)
            goto LABEL_36;
        }
        v65 = sub_1ABF3223C();
        (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v25, v50);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v65 & 1) == 0)
          goto LABEL_7;
LABEL_36:
        swift_bridgeObjectRelease();
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        a3 = v76;
        v23 = v75;
        v24 = v74;
        v26 = v80;
        v28 = v79;
        v27 = v78;
        a5 = v81;
LABEL_38:
        if (!v23)
        {
          __break(1u);
          return result;
        }
        --v26;
        v66 = *(_QWORD *)v27;
        v67 = *(_QWORD *)(v27 + 24);
        v68 = *(_QWORD *)(v27 + 32);
        v69 = *(_WORD *)(v27 + 40);
        v70 = *(_OWORD *)(v27 + 8);
        v71 = *(_OWORD *)(v28 + 16);
        *(_OWORD *)v27 = *(_OWORD *)v28;
        *(_OWORD *)(v27 + 16) = v71;
        *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
        *(_QWORD *)v28 = v66;
        *(_OWORD *)(v28 + 8) = v70;
        *(_QWORD *)(v28 + 24) = v67;
        *(_QWORD *)(v28 + 32) = v68;
        *(_WORD *)(v28 + 40) = v69;
      }
      while (v26 != v77);
      ++a3;
    }
    while (a3 != v73);
  }
  return result;
}

uint64_t sub_1ABD95CE4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  void (*v63)(char *, _QWORD, uint64_t);
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t);
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int16 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _OWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __int16 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  BOOL v175;
  unint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  BOOL v185;
  uint64_t v186;
  char v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  BOOL v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char *v204;
  uint64_t v205;
  unint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  char *v213;
  unint64_t v214;
  unint64_t v215;
  uint64_t result;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  char *v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  const __CFString *v256;
  void (*v257)(char *, uint64_t, uint64_t);
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void (*v261)(char *, uint64_t, uint64_t);
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  void (*v268)(char *, _QWORD, uint64_t);
  char *v269;
  unsigned int v270;
  char *v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  __int16 v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  __int16 v292;
  uint64_t v293;
  uint64_t v294;

  v273 = sub_1ABF30484();
  v252 = *(_QWORD *)(v273 - 8);
  MEMORY[0x1E0C80A78](v273);
  v272 = (char *)&v228 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v280 = (char *)&v228 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF31774();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v228 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v279 = (char *)&v228 - v13;
  v14 = sub_1ABF3049C();
  MEMORY[0x1E0C80A78](v14);
  v271 = (char *)&v228 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1EEC42258, (uint64_t (*)(void))sub_1ABD68830, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E0C90C58]);
  v262 = v16;
  v259 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v269 = (char *)&v228 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v239 = (char *)&v228 - v19;
  v231 = a1;
  v20 = a1[1];
  v246 = a2;
  swift_bridgeObjectRetain_n();
  v21 = sub_1ABF321E8();
  if (v21 >= v20)
  {
    if (v20 < 0)
      goto LABEL_196;
    if (v20)
    {
      v25 = v246;
      sub_1ABF2FF5C();
      sub_1ABD950C8(0, v20, 1, v231, v25);
    }
    return swift_bridgeObjectRelease_n();
  }
  v229 = v21;
  if (v20 >= 0)
    v22 = v20;
  else
    v22 = v20 + 1;
  if (v20 < -1)
    goto LABEL_205;
  v233 = v20;
  v237 = v2;
  if (v20 < 2)
  {
    v26 = (char *)MEMORY[0x1E0DEE9D8];
    v234 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v230 = MEMORY[0x1E0DEE9D8];
    if (v20 != 1)
    {
      v159 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      goto LABEL_162;
    }
  }
  else
  {
    v23 = v22 >> 1;
    v24 = sub_1ABF31A74();
    *(_QWORD *)(v24 + 16) = v23;
    v230 = v24;
    v234 = (char *)(v24 + 32);
  }
  v27 = 0;
  v28 = *v231;
  v270 = *MEMORY[0x1E0CAF9B8];
  v256 = CFSTR("watchlist");
  v238 = MEMORY[0x1E0DEE9B8] + 8;
  v236 = (char *)MEMORY[0x1E0DEE9D8];
  v249 = v9;
  v29 = v233;
  v241 = v28;
  v250 = v8;
  v248 = v12;
  while (2)
  {
    v30 = v27 + 1;
    v240 = v27;
    if (v27 + 1 >= v29)
    {
      v45 = v27 + 1;
      goto LABEL_56;
    }
    v31 = v27;
    v32 = v28 + 48 * v30;
    v33 = *(_QWORD *)v32;
    v34 = *(_QWORD *)(v32 + 8);
    v36 = *(_QWORD *)(v32 + 16);
    v35 = *(_QWORD *)(v32 + 24);
    v37 = *(char **)(v32 + 32);
    LOWORD(v32) = *(_WORD *)(v32 + 40);
    v287 = v33;
    v288 = v34;
    v289 = v36;
    v290 = v35;
    v291 = v37;
    v292 = v32;
    v38 = v28 + 48 * v31;
    v39 = *(_QWORD *)v38;
    v40 = *(char **)(v38 + 8);
    v42 = *(_QWORD *)(v38 + 16);
    v41 = *(_QWORD *)(v38 + 24);
    v43 = *(_QWORD *)(v38 + 32);
    LOWORD(v38) = *(_WORD *)(v38 + 40);
    v281 = (char *)v39;
    v282 = v40;
    v283 = v42;
    v284 = v41;
    v285 = v43;
    v286 = v38;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v44 = v237;
    v253 = sub_1ABD90844(&v287, (uint64_t *)&v281, v246);
    v237 = v44;
    if (v44)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_173;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v45 = v31 + 2;
    v29 = v233;
    if (v31 + 2 >= v233)
    {
      v28 = v241;
      if ((v253 & 1) == 0)
        goto LABEL_56;
LABEL_101:
      v94 = v240;
      v235 = v45;
      if (v240 < v45)
      {
        v145 = 48 * v45;
        v146 = 48 * v240;
        v147 = v240;
        while (1)
        {
          if (v147 != --v45)
          {
            if (!v28)
              goto LABEL_203;
            v148 = (_OWORD *)(v28 + v146);
            v149 = *(_QWORD *)(v28 + v146);
            v150 = v28 + v145;
            v151 = *(_QWORD *)(v28 + v146 + 24);
            v152 = *(_QWORD *)(v28 + v146 + 32);
            v153 = *(_WORD *)(v28 + v146 + 40);
            v154 = *(_OWORD *)(v28 + v146 + 8);
            v156 = *(_OWORD *)(v28 + v145 - 32);
            v155 = *(_OWORD *)(v28 + v145 - 16);
            *v148 = *(_OWORD *)(v28 + v145 - 48);
            v148[1] = v156;
            v148[2] = v155;
            *(_QWORD *)(v150 - 48) = v149;
            *(_OWORD *)(v150 - 40) = v154;
            *(_QWORD *)(v150 - 24) = v151;
            *(_QWORD *)(v150 - 16) = v152;
            *(_WORD *)(v150 - 8) = v153;
          }
          ++v147;
          v145 -= 48;
          v146 += 48;
          if (v147 >= v45)
            goto LABEL_108;
        }
      }
      goto LABEL_108;
    }
    v255 = *(_QWORD *)(v246 + 16);
    v235 = v31 + 2;
    v46 = v31 + 2;
    v47 = v262;
    v28 = v241;
    v48 = MEMORY[0x1E0DEA968];
    while (2)
    {
      if (!v255)
        goto LABEL_51;
      v254 = v46;
      v49 = (uint64_t *)(v28 + 48 * v46);
      v50 = v49[1];
      v258 = *v49;
      v268 = (void (*)(char *, _QWORD, uint64_t))v49[2];
      v52 = v49[3];
      v51 = (char *)v49[4];
      v277 = v52;
      v278 = v51;
      v53 = v28 + 48 * v30;
      v54 = *(char **)(v53 + 8);
      v257 = *(void (**)(char *, uint64_t, uint64_t))v53;
      v55 = *(_QWORD *)(v53 + 16);
      v276 = *(_QWORD *)(v53 + 24);
      v56 = *(char **)(v53 + 32);
      v57 = v259;
      v58 = v246 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
      sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, v48, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
      v274 = v59;
      v260 = *(_QWORD *)(v57 + 72);
      v261 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v275 = v54;
      sub_1ABF2FF5C();
      v265 = v55;
      sub_1ABF2FF5C();
      v264 = v56;
      sub_1ABF2FF5C();
      v60 = v255;
      v61 = v239;
      v263 = v50;
      while (1)
      {
        v267 = (char *)v60;
        v261(v61, v58, v47);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF31738();
        sub_1ABF30844();
        v63 = *(void (**)(char *, _QWORD, uint64_t))(v252 + 104);
        v63(v272, v270, v273);
        v64 = v271;
        v65 = v278;
        sub_1ABF304A8();
        v66 = MEMORY[0x1AF435F84](v64);
        if (v277 != sub_1ABF317A4())
          goto LABEL_24;
        if (v65 == v67)
        {
          swift_bridgeObjectRetain_n();
          swift_retain_n();
        }
        else
        {
LABEL_24:
          v68 = sub_1ABF3223C();
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          swift_bridgeObjectRelease();
          v69 = v258;
          v70 = v50;
          if ((v68 & 1) == 0)
            goto LABEL_28;
        }
        v71 = v279;
        sub_1ABF31738();
        v72 = v249;
        v73 = v250;
        (*(void (**)(char *, char *, uint64_t))(v249 + 16))(v248, v71, v250);
        if (qword_1ED34FD78 != -1)
          swift_once();
        v74 = (id)qword_1ED368428;
        sub_1ABF30844();
        v69 = sub_1ABF317EC();
        v70 = v75;
        (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v73);
        v65 = v278;
        swift_bridgeObjectRelease();
LABEL_28:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v287 = v69;
        v288 = v70;
        sub_1ABF2FD28();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        v47 = v262;
        sub_1ABF2FD94();
        v281 = (char *)v277;
        v282 = v65;
        v283 = v66;
        swift_getAtPartialKeyPath();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        v48 = MEMORY[0x1E0DEA968];
        if ((swift_dynamicCast() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v61 = v239;
LABEL_48:
          MEMORY[0x1AF436E0C]("Encountered a WatchlistEntity value in WatchlistQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E0DEE9D8]);
          (*(void (**)(char *, uint64_t))(v259 + 8))(v61, v47);
          v29 = v233;
          v46 = v254;
          goto LABEL_50;
        }
        v76 = v294;
        v266 = v293;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        v77 = v264;
        sub_1ABF2FF5C();
        sub_1ABF31738();
        sub_1ABF30844();
        v63(v272, v270, v273);
        v78 = v271;
        sub_1ABF304A8();
        v79 = MEMORY[0x1AF435F84](v78);
        if (v276 != sub_1ABF317A4())
          goto LABEL_32;
        if (v77 == v80)
        {
          swift_bridgeObjectRetain_n();
          swift_retain_n();
        }
        else
        {
LABEL_32:
          v81 = sub_1ABF3223C();
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          swift_bridgeObjectRelease();
          v82 = v77;
          v83 = (uint64_t)v257;
          v84 = (uint64_t)v275;
          if ((v81 & 1) == 0)
            goto LABEL_36;
        }
        v85 = v279;
        sub_1ABF31738();
        v86 = v249;
        v87 = v250;
        (*(void (**)(char *, char *, uint64_t))(v249 + 16))(v248, v85, v250);
        if (qword_1ED34FD78 != -1)
          swift_once();
        v88 = (id)qword_1ED368428;
        sub_1ABF30844();
        v83 = sub_1ABF317EC();
        v84 = v89;
        (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
        v82 = v264;
        swift_bridgeObjectRelease();
        v47 = v262;
LABEL_36:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v287 = v83;
        v288 = v84;
        sub_1ABF2FD28();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        v61 = v239;
        sub_1ABF2FD94();
        v281 = (char *)v276;
        v282 = v82;
        v283 = v79;
        swift_getAtPartialKeyPath();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        if ((swift_dynamicCast() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v48 = MEMORY[0x1E0DEA968];
          goto LABEL_48;
        }
        v91 = v293;
        v90 = v294;
        v92 = sub_1ABF2FDA0();
        v50 = v263;
        if ((v92 & 1) != 0)
        {
          if (v266 == v91 && v76 == v90)
          {
            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v259 + 8))(v61, v47);
          }
          else
          {
            v62 = sub_1ABF3223C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v259 + 8))(v61, v47);
            if ((v62 & 1) != 0)
              goto LABEL_49;
          }
          goto LABEL_20;
        }
        if (v91 != v266 || v90 != v76)
          break;
        (*(void (**)(char *, uint64_t))(v259 + 8))(v61, v47);
        swift_bridgeObjectRelease_n();
LABEL_20:
        v58 += v260;
        v60 = (uint64_t)(v267 - 1);
        if (v267 == (char *)1)
          goto LABEL_49;
      }
      v93 = sub_1ABF3223C();
      (*(void (**)(char *, uint64_t))(v259 + 8))(v61, v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v93 & 1) == 0)
        goto LABEL_20;
LABEL_49:
      swift_bridgeObjectRelease();
      v29 = v233;
      v48 = MEMORY[0x1E0DEA968];
      v46 = v254;
LABEL_50:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = v241;
LABEL_51:
      if ((v253 & 1) != 0)
      {
        v30 = v46++;
        if (v46 == v29)
        {
          v45 = v29;
          if (v29 < v240)
            goto LABEL_198;
          goto LABEL_101;
        }
        continue;
      }
      break;
    }
    v45 = v235;
LABEL_56:
    v235 = v45;
    if (v45 >= v29)
    {
      v94 = v240;
LABEL_108:
      if (v235 < v94)
        goto LABEL_192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v236 = sub_1ABE8BC6C(0, *((_QWORD *)v236 + 2) + 1, 1, v236);
      v158 = *((_QWORD *)v236 + 2);
      v157 = *((_QWORD *)v236 + 3);
      v159 = v158 + 1;
      if (v158 >= v157 >> 1)
        v236 = sub_1ABE8BC6C((char *)(v157 > 1), v158 + 1, 1, v236);
      v160 = v236;
      *((_QWORD *)v236 + 2) = v159;
      v161 = v160 + 32;
      v162 = &v160[16 * v158 + 32];
      v163 = v235;
      *(_QWORD *)v162 = v240;
      *((_QWORD *)v162 + 1) = v163;
      if (v158)
      {
        while (1)
        {
          v164 = v159 - 1;
          if (v159 >= 4)
          {
            v169 = &v161[16 * v159];
            v170 = *((_QWORD *)v169 - 8);
            v171 = *((_QWORD *)v169 - 7);
            v175 = __OFSUB__(v171, v170);
            v172 = v171 - v170;
            if (v175)
              goto LABEL_180;
            v174 = *((_QWORD *)v169 - 6);
            v173 = *((_QWORD *)v169 - 5);
            v175 = __OFSUB__(v173, v174);
            v167 = v173 - v174;
            v168 = v175;
            if (v175)
              goto LABEL_181;
            v176 = v159 - 2;
            v177 = &v161[16 * v159 - 32];
            v179 = *(_QWORD *)v177;
            v178 = *((_QWORD *)v177 + 1);
            v175 = __OFSUB__(v178, v179);
            v180 = v178 - v179;
            if (v175)
              goto LABEL_183;
            v175 = __OFADD__(v167, v180);
            v181 = v167 + v180;
            if (v175)
              goto LABEL_186;
            if (v181 >= v172)
            {
              v199 = &v161[16 * v164];
              v201 = *(_QWORD *)v199;
              v200 = *((_QWORD *)v199 + 1);
              v175 = __OFSUB__(v200, v201);
              v202 = v200 - v201;
              if (v175)
                goto LABEL_190;
              v192 = v167 < v202;
              goto LABEL_145;
            }
          }
          else
          {
            if (v159 != 3)
            {
              v193 = *((_QWORD *)v236 + 4);
              v194 = *((_QWORD *)v236 + 5);
              v175 = __OFSUB__(v194, v193);
              v186 = v194 - v193;
              v187 = v175;
              goto LABEL_139;
            }
            v166 = *((_QWORD *)v236 + 4);
            v165 = *((_QWORD *)v236 + 5);
            v175 = __OFSUB__(v165, v166);
            v167 = v165 - v166;
            v168 = v175;
          }
          if ((v168 & 1) != 0)
            goto LABEL_182;
          v176 = v159 - 2;
          v182 = &v161[16 * v159 - 32];
          v184 = *(_QWORD *)v182;
          v183 = *((_QWORD *)v182 + 1);
          v185 = __OFSUB__(v183, v184);
          v186 = v183 - v184;
          v187 = v185;
          if (v185)
            goto LABEL_185;
          v188 = &v161[16 * v164];
          v190 = *(_QWORD *)v188;
          v189 = *((_QWORD *)v188 + 1);
          v175 = __OFSUB__(v189, v190);
          v191 = v189 - v190;
          if (v175)
            goto LABEL_188;
          if (__OFADD__(v186, v191))
            goto LABEL_189;
          if (v186 + v191 >= v167)
          {
            v192 = v167 < v191;
LABEL_145:
            if (v192)
              v164 = v176;
            goto LABEL_147;
          }
LABEL_139:
          if ((v187 & 1) != 0)
            goto LABEL_184;
          v195 = &v161[16 * v164];
          v197 = *(_QWORD *)v195;
          v196 = *((_QWORD *)v195 + 1);
          v175 = __OFSUB__(v196, v197);
          v198 = v196 - v197;
          if (v175)
            goto LABEL_187;
          if (v198 < v186)
            goto LABEL_156;
LABEL_147:
          v203 = v164 - 1;
          if (v164 - 1 >= v159)
          {
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
            goto LABEL_200;
          }
          if (!v28)
            goto LABEL_202;
          v204 = &v161[16 * v203];
          v205 = *(_QWORD *)v204;
          v206 = v164;
          v207 = &v161[16 * v164];
          v208 = *((_QWORD *)v207 + 1);
          v209 = (char *)(v28 + 48 * *(_QWORD *)v204);
          v278 = (char *)(v28 + 48 * *(_QWORD *)v207);
          v210 = v246;
          sub_1ABF2FF5C();
          v211 = v209;
          v212 = v237;
          sub_1ABD91608(v211, v278, v28 + 48 * v208, v234, v210);
          if (v212)
            goto LABEL_173;
          v213 = v236;
          if (v208 < v205)
            goto LABEL_177;
          if (v206 > *((_QWORD *)v236 + 2))
            goto LABEL_178;
          v214 = v206;
          *(_QWORD *)v204 = v205;
          *(_QWORD *)&v161[16 * v203 + 8] = v208;
          v215 = *((_QWORD *)v213 + 2);
          if (v206 >= v215)
            goto LABEL_179;
          v237 = 0;
          v159 = v215 - 1;
          memmove(v207, v207 + 16, 16 * (v215 - 1 - v214));
          *((_QWORD *)v213 + 2) = v215 - 1;
          v192 = v215 > 2;
          v28 = v241;
          if (!v192)
            goto LABEL_156;
        }
      }
      v159 = 1;
LABEL_156:
      v29 = v233;
      v27 = v235;
      if (v235 >= v233)
      {
        v26 = v236;
LABEL_162:
        v236 = v26;
        if (v159 >= 2)
        {
          v217 = *v231;
          do
          {
            v218 = v159 - 2;
            if (v159 < 2)
              goto LABEL_191;
            if (!v217)
              goto LABEL_204;
            v219 = *(_QWORD *)&v236[16 * v218 + 32];
            v220 = *(_QWORD *)&v236[16 * v159 + 24];
            v221 = (char *)(v217 + 48 * *(_QWORD *)&v236[16 * v159 + 16]);
            v222 = v246;
            sub_1ABF2FF5C();
            v223 = v237;
            sub_1ABD91608((char *)(v217 + 48 * v219), v221, v217 + 48 * v220, v234, v222);
            v237 = v223;
            if (v223)
              break;
            if (v220 < v219)
              goto LABEL_193;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v236 = sub_1ABE8C050((uint64_t)v236);
            v224 = v236;
            if (v218 >= *((_QWORD *)v236 + 2))
              goto LABEL_194;
            v225 = v236 + 32;
            v226 = &v236[16 * v218 + 32];
            *(_QWORD *)v226 = v219;
            *((_QWORD *)v226 + 1) = v220;
            v227 = *((_QWORD *)v224 + 2);
            if (v159 > v227)
              goto LABEL_195;
            memmove(&v225[16 * v159 - 16], &v225[16 * v159], 16 * (v227 - v159));
            *((_QWORD *)v224 + 2) = v227 - 1;
            v159 = v227 - 1;
          }
          while (v227 > 2);
        }
LABEL_173:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v230 + 16) = 0;
        swift_bridgeObjectRelease_n();
        return swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  v94 = v240;
  if (__OFSUB__(v45, v240))
    goto LABEL_197;
  if (v45 - v240 >= v229)
    goto LABEL_108;
  if (__OFADD__(v240, v229))
    goto LABEL_199;
  v95 = v233;
  if (v240 + v229 < v233)
    v95 = v240 + v229;
  if (v95 >= v240)
  {
    if (v235 == v95)
      goto LABEL_108;
    v96 = *(char **)(v246 + 16);
    v97 = v235;
    v232 = v95;
    v245 = v96;
    while (1)
    {
      v235 = v97;
      v98 = v97;
      do
      {
        v99 = v28 + 48 * v98;
        v100 = v99 - 48;
        v258 = *(_QWORD *)(v99 - 48);
        if (!v96)
          goto LABEL_95;
        v243 = v99 - 48;
        v244 = v98;
        v101 = *(_QWORD *)(v99 + 8);
        v247 = *(_QWORD *)v99;
        v102 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 16);
        v278 = *(char **)(v99 + 24);
        v103 = *(char **)(v99 + 32);
        v105 = *(_QWORD *)(v99 - 40);
        v104 = *(_QWORD *)(v99 - 32);
        v106 = *(char **)(v99 - 16);
        v255 = *(_QWORD *)(v99 - 24);
        LODWORD(v254) = *(unsigned __int8 *)(v99 - 8);
        v242 = v28 + 48 * v98;
        v253 = *(unsigned __int8 *)(v99 - 7);
        v107 = v259;
        v108 = v246 + ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80));
        sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
        v274 = v109;
        v251 = *(_QWORD *)(v107 + 72);
        v257 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 16);
        sub_1ABF2FF5C();
        v277 = v101;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        v267 = v103;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        v110 = v245;
        v111 = v262;
        v112 = v269;
        v260 = v105;
        v261 = v102;
        v275 = v106;
        v276 = v104;
        while (1)
        {
          v264 = v110;
          v266 = v108;
          v257(v112, v108, v111);
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          v114 = v267;
          sub_1ABF2FF5C();
          sub_1ABF31738();
          sub_1ABF30844();
          v268 = *(void (**)(char *, _QWORD, uint64_t))(v252 + 104);
          v268(v272, v270, v273);
          v115 = v271;
          sub_1ABF304A8();
          v116 = MEMORY[0x1AF435F84](v115);
          if (v278 != (char *)sub_1ABF317A4())
            goto LABEL_74;
          if (v114 == v117)
          {
            swift_bridgeObjectRetain_n();
            swift_retain_n();
          }
          else
          {
LABEL_74:
            v118 = sub_1ABF3223C();
            swift_bridgeObjectRetain_n();
            swift_retain_n();
            swift_bridgeObjectRelease();
            v119 = v247;
            v120 = v277;
            if ((v118 & 1) == 0)
              goto LABEL_78;
          }
          v121 = v279;
          sub_1ABF31738();
          v122 = v249;
          v123 = v250;
          (*(void (**)(char *, char *, uint64_t))(v249 + 16))(v248, v121, v250);
          if (qword_1ED34FD78 != -1)
            swift_once();
          v124 = (id)qword_1ED368428;
          sub_1ABF30844();
          v119 = sub_1ABF317EC();
          v120 = v125;
          (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v123);
          v114 = v267;
          swift_bridgeObjectRelease();
          v111 = v262;
LABEL_78:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v287 = v119;
          v288 = v120;
          sub_1ABF2FD28();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          v126 = v269;
          sub_1ABF2FD94();
          v281 = v278;
          v282 = v114;
          v283 = v116;
          swift_getAtPartialKeyPath();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_92:
            MEMORY[0x1AF436E0C]("Encountered a WatchlistEntity value in WatchlistQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E0DEE9D8]);
            (*(void (**)(char *, uint64_t))(v259 + 8))(v126, v111);
            v28 = v241;
            v94 = v240;
            v96 = v245;
            goto LABEL_94;
          }
          v263 = v293;
          v265 = v294;
          sub_1ABF2FF5C();
          v127 = v276;
          sub_1ABF2FF5C();
          v128 = v275;
          sub_1ABF2FF5C();
          sub_1ABF31738();
          sub_1ABF30844();
          v268(v272, v270, v273);
          v129 = v271;
          v130 = v260;
          sub_1ABF304A8();
          v131 = MEMORY[0x1AF435F84](v129);
          v287 = v258;
          v288 = v130;
          v132 = v255;
          v289 = v127;
          v290 = v255;
          v291 = v128;
          LOBYTE(v292) = v254;
          HIBYTE(v292) = v253;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          v133 = sub_1ABD254E4();
          v135 = v134;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v287 = v133;
          v288 = v135;
          v111 = v262;
          sub_1ABF2FD28();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          sub_1ABF2FD94();
          v281 = (char *)v132;
          v282 = v128;
          v283 = v131;
          swift_getAtPartialKeyPath();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_92;
          }
          v137 = v293;
          v136 = v294;
          if ((sub_1ABF2FDA0() & 1) != 0)
            break;
          if (v137 != v263 || v136 != v265)
          {
            v138 = sub_1ABF3223C();
            v112 = v269;
            (*(void (**)(char *, uint64_t))(v259 + 8))(v269, v111);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_88;
          }
          v112 = v269;
          (*(void (**)(char *, uint64_t))(v259 + 8))(v269, v111);
          swift_bridgeObjectRelease_n();
LABEL_69:
          v113 = v266;
LABEL_70:
          v108 = v113 + v251;
          v110 = v264 - 1;
          if (v264 == (char *)1)
            goto LABEL_93;
        }
        if (v263 == v137 && v265 == v136)
        {
          swift_bridgeObjectRelease_n();
          v112 = v269;
          (*(void (**)(char *, uint64_t))(v259 + 8))(v269, v111);
          goto LABEL_69;
        }
        v138 = sub_1ABF3223C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v112 = v269;
        (*(void (**)(char *, uint64_t))(v259 + 8))(v269, v111);
LABEL_88:
        v113 = v266;
        if ((v138 & 1) == 0)
          goto LABEL_70;
LABEL_93:
        swift_bridgeObjectRelease();
        v28 = v241;
        v94 = v240;
        v96 = v245;
LABEL_94:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v98 = v244;
        v100 = v243;
        v99 = v242;
LABEL_95:
        if (!v28)
          goto LABEL_201;
        --v98;
        v139 = *(_QWORD *)v99;
        v140 = *(_QWORD *)(v99 + 24);
        v141 = *(_QWORD *)(v99 + 32);
        v142 = *(_WORD *)(v99 + 40);
        v143 = *(_OWORD *)(v99 + 8);
        v144 = *(_OWORD *)(v100 + 16);
        *(_OWORD *)v99 = *(_OWORD *)v100;
        *(_OWORD *)(v99 + 16) = v144;
        *(_OWORD *)(v99 + 32) = *(_OWORD *)(v100 + 32);
        *(_QWORD *)v100 = v139;
        *(_OWORD *)(v100 + 8) = v143;
        *(_QWORD *)(v100 + 24) = v140;
        *(_QWORD *)(v100 + 32) = v141;
        *(_WORD *)(v100 + 40) = v142;
      }
      while (v98 != v94);
      v97 = v235 + 1;
      if (v235 + 1 == v232)
      {
        v235 = v232;
        goto LABEL_108;
      }
    }
  }
LABEL_200:
  __break(1u);
LABEL_201:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_202:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_203:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_204:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_205:
  swift_bridgeObjectRelease_n();
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

uint64_t sub_1ABD97BFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1ABE8C078(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  sub_1ABF2FF5C();
  sub_1ABD95CE4(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1ABD97C9C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1ABD97CA8(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED3470A0, a2, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistQuery, (uint64_t)&protocol conformance descriptor for WatchlistQuery);
}

uint64_t type metadata accessor for WatchlistQuery()
{
  return objc_opt_self();
}

uint64_t sub_1ABD97CF4(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED3470A8, a2, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistQuery, (uint64_t)&protocol conformance descriptor for WatchlistQuery);
}

uint64_t sub_1ABD97D24(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED347098, a2, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistQuery, (uint64_t)&protocol conformance descriptor for WatchlistQuery);
}

unint64_t sub_1ABD97D58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC42210;
  if (!qword_1EEC42210)
  {
    sub_1ABD04578(255, qword_1EEC42218, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABD67FB8();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91CE0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC42210);
  }
  return result;
}

uint64_t sub_1ABD97DD0(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C((unint64_t *)&qword_1ED347090, a2, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistQuery, (uint64_t)&protocol conformance descriptor for WatchlistQuery);
}

uint64_t method lookup function for WatchlistQuery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WatchlistQuery.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1ABD97E10()
{
  return swift_release();
}

uint64_t sub_1ABD97E18(uint64_t a1)
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABD97ECC(uint64_t a1)
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABD97F60(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1ABD97FF4()
{
  unint64_t result;

  result = qword_1ED347168;
  if (!qword_1ED347168)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF391E8, &type metadata for Stock);
    atomic_store(result, (unint64_t *)&qword_1ED347168);
  }
  return result;
}

unint64_t sub_1ABD98038()
{
  unint64_t result;

  result = qword_1EEC42250;
  if (!qword_1EEC42250)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45908, &type metadata for Watchlist);
    atomic_store(result, (unint64_t *)&qword_1EEC42250);
  }
  return result;
}

unint64_t sub_1ABD98080()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC42268;
  if (!qword_1EEC42268)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C90BD8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC42268);
  }
  return result;
}

void sub_1ABD980E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42270)
  {
    sub_1ABCF4DA8(255, &qword_1EEC42260, (uint64_t (*)(void))sub_1ABD68830, (uint64_t)&type metadata for WatchlistEntity, MEMORY[0x1E0C91AC0]);
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42270);
  }
}

void sub_1ABD9815C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42278)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
    sub_1ABD94FD8();
    sub_1ABD68830();
    sub_1ABD94F2C();
    v0 = sub_1ABF2FEB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42278);
  }
}

void sub_1ABD98220()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42280)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
    sub_1ABD94FD8();
    sub_1ABD94F2C();
    v0 = sub_1ABF2FFF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42280);
  }
}

void sub_1ABD982D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42288)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
    sub_1ABD94FD8();
    sub_1ABD94F2C();
    v0 = sub_1ABF2FE90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42288);
  }
}

void sub_1ABD98378()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42290)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
    sub_1ABD94FD8();
    sub_1ABD94F2C();
    v0 = sub_1ABF2FE48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42290);
  }
}

uint64_t sub_1ABD98428()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABD9844C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1ABD8E088(a1);
}

uint64_t sub_1ABD98454@<X0>(_BYTE *a1@<X8>)
{
  return sub_1ABD8DF9C(a1);
}

uint64_t sub_1ABD98710()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1ABD98734()
{
  sub_1ABF322FC();
  return sub_1ABF31D08();
}

id sub_1ABD9881C(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  id v14;
  int v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  objc_super v19;
  _OWORD v20[2];
  _BYTE v21[24];
  uint64_t v22;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2;
  v13 = (void *)sub_1ABF31780();
  v14 = objc_msgSend(a1, sel_decodeObjectForKey_, v13);

  if (v14)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_1ABD22B10((uint64_t)v20, (uint64_t)v21);
  if (!v22)
  {
    sub_1ABCFC3BC((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1ABD22B54);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  v15 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v15 ^ 1u, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:

    sub_1ABCFC3BC((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v16(v11, v7, v8);
  v16(&v12[OBJC_IVAR___SCUpdateAppReviewRequestLastSeenDateCommand_appReviewRequestLastSeenDate], v11, v8);

  v19.receiver = v12;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, sel_init);

  return v17;
}

uint64_t sub_1ABD98B08()
{
  return type metadata accessor for UpdateAppReviewRequestLastSeenDateCommand();
}

uint64_t sub_1ABD98B10(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8[5];

  v3 = objc_msgSend(a1, sel_encryptedValues);
  swift_getObjectType();
  v4 = a2 + OBJC_IVAR___SCUpdateAppReviewRequestLastSeenDateCommand_appReviewRequestLastSeenDate;
  v5 = sub_1ABF30760();
  v8[3] = v5;
  v8[4] = MEMORY[0x1E0C94590];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_1, v4, v5);
  sub_1ABF31CD8();
  return swift_unknownObjectRelease();
}

uint64_t sub_1ABD98CF4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1ABD98D18(void *a1)
{
  uint64_t v1;

  return sub_1ABD98B10(a1, *(_QWORD *)(v1 + 16));
}

void sub_1ABD98D20(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD98D60()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD98E18(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD98E50()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD98ED0(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1ABD98F18()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD98FA4(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1ABD98FEC()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD99054(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD9909C()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD99130(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD99170()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD9922C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD99278()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD99328(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD9936C()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD99408(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD99454()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD9952C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD99568()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD99644(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD99690()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD99754(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD99790()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABD99890()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABD998BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABD998E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  sub_1ABF2FF5C();
  return v1;
}

void sub_1ABD99914()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 64);
  sub_1ABF2FF5C();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_1ABD99A24()
{
  uint64_t v0;
  uint64_t v2;

  sub_1ABF31840();
  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  if (v2)
  {
    sub_1ABF32320();
    sub_1ABF2FF5C();
    sub_1ABF31840();
    swift_bridgeObjectRelease();
    if (v0)
    {
LABEL_3:
      sub_1ABF32320();
      sub_1ABF2FF5C();
      sub_1ABF31840();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1ABF32320();
    if (v0)
      goto LABEL_3;
  }
  return sub_1ABF32320();
}

uint64_t sub_1ABD99BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABD9B55C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ABD99C00(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1ABD99C0C()
{
  sub_1ABCF5560();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD99C34()
{
  sub_1ABCF5560();
  return sub_1ABF32398();
}

uint64_t sub_1ABD99C5C()
{
  sub_1ABF32308();
  sub_1ABD99914();
  return sub_1ABF32338();
}

uint64_t sub_1ABD99C98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  _QWORD v62[8];
  char v63;
  _BYTE v64[7];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  _DWORD v74[3];
  _QWORD *v75;

  sub_1ABCF54C0(0, &qword_1ED34E290, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  v10 = a1[3];
  v75 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1ABCF5560();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  LOBYTE(v62[0]) = 0;
  v11 = sub_1ABF320E0();
  v13 = v12;
  LOBYTE(v62[0]) = 1;
  sub_1ABF2FF5C();
  v50 = sub_1ABF320E0();
  v51 = v11;
  LOBYTE(v62[0]) = 2;
  v15 = v14;
  sub_1ABF2FF5C();
  v16 = sub_1ABF320E0();
  v52 = v15;
  v49 = v16;
  LOBYTE(v62[0]) = 3;
  v18 = v17;
  sub_1ABF2FF5C();
  v19 = sub_1ABF320E0();
  v21 = v20;
  *(_QWORD *)&v48 = v19;
  LOBYTE(v53) = 4;
  sub_1ABD9B22C();
  sub_1ABF2FF5C();
  *((_QWORD *)&v48 + 1) = v21;
  sub_1ABF32110();
  v46 = LOBYTE(v62[0]);
  LOBYTE(v62[0]) = 5;
  v22 = sub_1ABF320E0();
  v47 = v23;
  v43 = v22;
  LOBYTE(v62[0]) = 6;
  sub_1ABF2FF5C();
  v44 = 0;
  v42 = sub_1ABF320E0();
  LOBYTE(v62[0]) = 7;
  v45 = v24;
  sub_1ABF2FF5C();
  v40 = sub_1ABF3208C();
  v41 = v25;
  v73 = 8;
  sub_1ABF2FF5C();
  v26 = sub_1ABF3208C();
  v39 = v27;
  v28 = v26;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)&v53 = v51;
  *((_QWORD *)&v53 + 1) = v13;
  *(_QWORD *)&v54 = v50;
  *((_QWORD *)&v54 + 1) = v52;
  *(_QWORD *)&v55 = v49;
  *((_QWORD *)&v55 + 1) = v18;
  v38 = v18;
  v29 = *((_QWORD *)&v48 + 1);
  v56 = v48;
  LOBYTE(v57) = v46;
  *((_QWORD *)&v57 + 1) = v43;
  *(_QWORD *)&v58 = v47;
  v30 = v45;
  *((_QWORD *)&v58 + 1) = v42;
  *(_QWORD *)&v59 = v45;
  *((_QWORD *)&v59 + 1) = v40;
  *(_QWORD *)&v60 = v41;
  *((_QWORD *)&v60 + 1) = v28;
  v61 = v39;
  sub_1ABD97ECC((uint64_t)&v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = v41;
  swift_bridgeObjectRelease();
  v33 = v60;
  *(_OWORD *)(a2 + 96) = v59;
  *(_OWORD *)(a2 + 112) = v33;
  *(_QWORD *)(a2 + 128) = v61;
  v34 = v56;
  *(_OWORD *)(a2 + 32) = v55;
  *(_OWORD *)(a2 + 48) = v34;
  v35 = v58;
  *(_OWORD *)(a2 + 64) = v57;
  *(_OWORD *)(a2 + 80) = v35;
  v36 = v54;
  *(_OWORD *)a2 = v53;
  *(_OWORD *)(a2 + 16) = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  v62[0] = v51;
  v62[1] = v13;
  v62[2] = v50;
  v62[3] = v52;
  v62[4] = v49;
  v62[5] = v31;
  v62[6] = v48;
  v62[7] = v29;
  v63 = v46;
  *(_DWORD *)v64 = v74[0];
  *(_DWORD *)&v64[3] = *(_DWORD *)((char *)v74 + 3);
  v65 = v43;
  v66 = v47;
  v67 = v42;
  v68 = v30;
  v69 = v40;
  v70 = v32;
  v71 = v28;
  v72 = v39;
  return sub_1ABD97F60((uint64_t)v62);
}

uint64_t sub_1ABD9A35C()
{
  sub_1ABF32308();
  sub_1ABD99914();
  return sub_1ABF32338();
}

uint64_t sub_1ABD9A39C()
{
  sub_1ABF32308();
  sub_1ABD99914();
  return sub_1ABF32338();
}

uint64_t sub_1ABD9A3D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABD99C98(a1, a2);
}

unint64_t sub_1ABD9A3F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1ABF31D14();
  return sub_1ABD9A668(a1, v2);
}

unint64_t sub_1ABD9A420(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  v2 = sub_1ABF32338();
  return sub_1ABD9A770(a1, v2);
}

unint64_t sub_1ABD9A4D0(unint64_t *a1)
{
  uint64_t v2;

  sub_1ABF32308();
  sub_1ABD99914();
  v2 = sub_1ABF32338();
  return sub_1ABD9A908(a1, v2);
}

unint64_t sub_1ABD9A528(uint64_t a1)
{
  uint64_t v2;

  sub_1ABF317A4();
  sub_1ABF32308();
  sub_1ABF31840();
  v2 = sub_1ABF32338();
  swift_bridgeObjectRelease();
  return sub_1ABD9AE58(a1, v2);
}

unint64_t sub_1ABD9A5B4(uint64_t a1)
{
  uint64_t v2;

  sub_1ABF305D4();
  sub_1ABD9B908((unint64_t *)&qword_1ED350508, MEMORY[0x1E0CB0018]);
  v2 = sub_1ABF316C0();
  return sub_1ABD9AFCC(a1, v2);
}

unint64_t sub_1ABD9A618(uint64_t a1)
{
  uint64_t v2;

  sub_1ABF31F84();
  v2 = sub_1ABF316C0();
  return sub_1ABD9B104(a1, v2);
}

unint64_t sub_1ABD9A668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1ABD22AD4();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1ABF31D20();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1ABF31D20();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1ABD9A770(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0xE600000000000000;
          v8 = 0x737961776C61;
          v9 = a1;
          if (!a1)
            goto LABEL_17;
        }
        else
        {
          v7 = 0xE500000000000000;
          v8 = 0x726576656ELL;
          v9 = a1;
          if (!a1)
          {
LABEL_17:
            v11 = 0xEA00000000007372;
            if (v8 != 0x756F487265746661)
              goto LABEL_19;
            goto LABEL_18;
          }
        }
      }
      else
      {
        v8 = 0x756F487265746661;
        v7 = 0xEA00000000007372;
        v9 = a1;
        if (!a1)
          goto LABEL_17;
      }
      if (v9 == 1)
        v10 = 0x737961776C61;
      else
        v10 = 0x726576656ELL;
      if (v9 == 1)
        v11 = 0xE600000000000000;
      else
        v11 = 0xE500000000000000;
      if (v8 != v10)
        goto LABEL_19;
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      v12 = sub_1ABF3223C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_1ABD9A908(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    v6 = *a1;
    v7 = a1[1];
    v8 = a1[2];
    v9 = a1[3];
    v10 = a1[4];
    *((_QWORD *)&v13 + 1) = a1[6];
    v14 = a1[5];
    *(_QWORD *)&v13 = a1[7];
    do
    {
      v11 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 136 * v4);
      v17 = v11[3];
      v18 = v11[4];
      v15 = v11[1];
      v16 = v11[2];
      if ((*v11 == __PAIR128__(v7, v6) || (sub_1ABF3223C() & 1) != 0)
        && (v15 == __PAIR128__(v9, v8) || (sub_1ABF3223C() & 1) != 0)
        && (v16 == __PAIR128__(v14, v10) || (sub_1ABF3223C() & 1) != 0)
        && (__PAIR128__(v17, *((unint64_t *)&v17 + 1)) == v13 || (sub_1ABF3223C() & 1) != 0))
      {
        __asm { BR              X9 }
      }
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1ABD9AE58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1ABF317A4();
    v8 = v7;
    if (v6 == sub_1ABF317A4() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1ABF317A4();
          v15 = v14;
          if (v13 == sub_1ABF317A4() && v15 == v16)
            break;
          v18 = sub_1ABF3223C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1ABD9AFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_1ABF305D4();
  v6 = *(_QWORD *)(v5 - 8);
  v7.n128_f64[0] = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      sub_1ABD9B908(&qword_1ED34EA88, MEMORY[0x1E0CB0028]);
      v15 = sub_1ABF31720();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_1ABD9B104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_1ABF31F84();
  v6 = *(_QWORD *)(v5 - 8);
  v7.n128_f64[0] = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      v15 = sub_1ABF31720();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_1ABD9B22C()
{
  unint64_t result;

  result = qword_1ED34DB40;
  if (!qword_1ED34DB40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AEB4, &type metadata for StockType);
    atomic_store(result, (unint64_t *)&qword_1ED34DB40);
  }
  return result;
}

unint64_t sub_1ABD9B274()
{
  unint64_t result;

  result = qword_1ED346728;
  if (!qword_1ED346728)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39228, &type metadata for Stock);
    atomic_store(result, (unint64_t *)&qword_1ED346728);
  }
  return result;
}

uint64_t sub_1ABD9B2B8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t assignWithCopy for Stock(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Stock(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Stock.CodingKeys()
{
  return &type metadata for Stock.CodingKeys;
}

unint64_t sub_1ABD9B4B4()
{
  unint64_t result;

  result = qword_1EEC42310;
  if (!qword_1EEC42310)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39384, &type metadata for Stock.CodingKeys);
    atomic_store(result, &qword_1EEC42310);
  }
  return result;
}

uint64_t sub_1ABD9B4F8(uint64_t a1)
{
  uint64_t v1;

  return a1 & ~(-1 << *(_BYTE *)(v1 + 32));
}

uint64_t sub_1ABD9B524()
{
  uint64_t v0;

  sub_1ABF32308();
  v0 = sub_1ABF32338();
  return sub_1ABD9B4F8(v0);
}

uint64_t sub_1ABD9B55C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xE800000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D614E74726F6873 && a2 == 0xE900000000000065 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4E746361706D6F63 && a2 == 0xEB00000000656D61 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F74636573 && a2 == 0xE600000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7972747375646E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1ABD9B908(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1ABF305D4();
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABD9B948()
{
  CGImage *v0;
  CGImage *v1;
  CGColorSpace *v2;
  CGColorSpace *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;

  v1 = v0;
  v2 = CGImageGetColorSpace(v0);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9DD90]), sel_initWithOptions_, 0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9DDC8]), sel_initWithCGImage_, v1);
  v6 = *MEMORY[0x1E0C9E070];
  sub_1ABDEA3AC(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for CIImageRepresentationOption(0);
  sub_1ABCFE22C((unint64_t *)&unk_1ED34C2F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1ABF36D74);
  v7 = (void *)sub_1ABF31618();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v4, sel_PNGRepresentationOfImage_format_colorSpace_options_, v5, v6, v3, v7);

  if (!v8)
  {

    return 0;
  }
  v9 = sub_1ABF30658();

  return v9;
}

uint64_t sub_1ABD9BAA8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;

  sub_1ABD9CBD4(0, &qword_1ED34C310, MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = &v13[-v10];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD9CB90();
  sub_1ABF32368();
  v14 = a2;
  v15 = a3;
  v13[15] = 0;
  sub_1ABD47EE8();
  sub_1ABF321D0();
  if (!v3)
  {
    LOBYTE(v14) = 1;
    sub_1ABF321AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1ABD9BBF0()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C616373;
  else
    return 1635017060;
}

uint64_t sub_1ABD9BC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABD9C8F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABD9BC44()
{
  sub_1ABD9CB90();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD9BC6C()
{
  sub_1ABD9CB90();
  return sub_1ABF32398();
}

void sub_1ABD9BC94(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;

  v6 = sub_1ABD9C9CC(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v6;
  }
}

uint64_t sub_1ABD9BCC0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABD9BAA8(a1, *v1, v1[1]);
}

uint64_t sub_1ABD9BCDC(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 + 48) = v2;
  *(double *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 32) = a1;
  v4 = sub_1ABF30B38();
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 72) = swift_task_alloc();
  v5 = sub_1ABF305D4();
  *(_QWORD *)(v3 + 80) = v5;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 96) = swift_task_alloc();
  sub_1ABF30184();
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABD9BD8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = v0[12];
  v3 = v0[10];
  v2 = v0[11];
  v5 = v0[8];
  v4 = v0[9];
  v6 = v0[6];
  v11 = v0[7];
  v7 = v0[4];
  sub_1ABF30BE0();
  sub_1ABD9C3C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v3);
  sub_1ABF30148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v6 + OBJC_IVAR____TtC10StocksCore29AttributionSourceAssetService_networkProxy, v11);
  v8 = (void *)sub_1ABF30D78();
  v0[14] = sub_1ABF30BBC();

  v9 = (_QWORD *)swift_task_alloc();
  v0[15] = v9;
  *v9 = v0;
  v9[1] = sub_1ABD9BEA4;
  return sub_1ABF31150();
}

uint64_t sub_1ABD9BEA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABD9BF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  double v8;

  v1 = *(_QWORD *)(v0 + 128);
  v3 = sub_1ABD9C680(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(double *)(v0 + 40));
  v5 = v4;
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = v2;
    v8 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t, double))(v0 + 8))(v5, v7, v8);
  }
}

uint64_t sub_1ABD9BFD4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD9C02C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10StocksCore29AttributionSourceAssetService_networkProxy;
  v2 = sub_1ABF30B38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABD9C07C()
{
  return swift_allocObject();
}

uint64_t sub_1ABD9C08C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1ABD9C094(uint64_t a1, unint64_t a2)
{
  sub_1ABD0F474(a1, a2);
  return a1;
}

uint64_t sub_1ABD9C0D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1ABD9C0D8()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ABD9C0E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t sub_1ABD9C118@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return sub_1ABD0F474(a1, a2);
}

uint64_t sub_1ABD9C140()
{
  return type metadata accessor for AttributionSourceAssetService();
}

uint64_t type metadata accessor for AttributionSourceAssetService()
{
  uint64_t result;

  result = qword_1ED34CC28;
  if (!qword_1ED34CC28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABD9C184()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30B38();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for SDSLogoDeserializer()
{
  return objc_opt_self();
}

uint64_t sub_1ABD9C210()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABD9C21C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t destroy for DownloadedImage(uint64_t a1)
{
  return sub_1ABD0F430(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *_s10StocksCore15DownloadedImageVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a2;
  v5 = a2[1];
  sub_1ABD0F474(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithCopy for DownloadedImage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_1ABD0F474(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1ABD0F430(v6, v7);
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithTake for DownloadedImage(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1ABD0F430(v4, v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for DownloadedImage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DownloadedImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadedImage()
{
  return &type metadata for DownloadedImage;
}

void sub_1ABD9C3C0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED34E570)
  {
    type metadata accessor for SDSLogoDeserializer();
    sub_1ABCFE22C(&qword_1ED34E548, v0, (uint64_t (*)(uint64_t))type metadata accessor for SDSLogoDeserializer, (uint64_t)&unk_1ABF3940C);
    v1 = sub_1ABF30D84();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED34E570);
  }
}

uint64_t sub_1ABD9C434(double a1, double a2, double a3)
{
  double v3;
  double v4;
  uint64_t result;

  v3 = ceil(a1 * a3);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v4 = ceil(a2 * a3);
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4 < 9.22337204e18)
    return (uint64_t)v3;
LABEL_13:
  __break(1u);
  return result;
}

int64_t sub_1ABD9C4CC(CGDataProvider *a1, double a2)
{
  CGPDFDocument *v3;
  CGPDFDocument *v4;
  CGPDFPage *v5;
  CGPDFPage *v6;
  CGFloat x;
  CGFloat y;
  double width;
  double height;
  int64_t result;
  CGColorSpace *v12;
  int64_t v13;
  int64_t v14;
  BOOL v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  size_t v21;
  size_t v22;
  CGContext *v23;
  CGContext *v24;
  CGImageRef Image;
  CGRect BoxRect;
  CGRect v27;

  v3 = CGPDFDocumentCreateWithProvider(a1);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = CGPDFDocumentGetPage(v3, 1uLL);
  if (!v5)
  {

    return 0;
  }
  v6 = v5;
  BoxRect = CGPDFPageGetBoxRect(v5, kCGPDFMediaBox);
  x = BoxRect.origin.x;
  y = BoxRect.origin.y;
  width = BoxRect.size.width;
  height = BoxRect.size.height;
  result = (int64_t)CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9DA10]);
  if (result)
  {
    v12 = (CGColorSpace *)result;
    result = CGColorSpaceGetNumberOfComponents((CGColorSpaceRef)result);
    v13 = result + 1;
    if (__OFADD__(result, 1))
    {
      __break(1u);
    }
    else
    {
      result = sub_1ABD9C434(width, height, a2);
      v14 = result * v13;
      if ((unsigned __int128)(result * (__int128)v13) >> 64 == (result * v13) >> 63)
      {
        v15 = __OFADD__(v14, 64);
        v16 = v14 + 64;
        if (!v15)
        {
          v18 = v16 - 1;
          v17 = v16 < 1;
          v19 = v16 + 62;
          if (!v17)
            v19 = v18;
          v20 = v19 & 0xFFFFFFFFFFFFFFC0;
          v21 = sub_1ABD9C434(width, height, a2);
          sub_1ABD9C434(width, height, a2);
          v23 = CGBitmapContextCreate(0, v21, v22, 8uLL, v20, v12, 0x2002u);
          if (v23)
          {
            v24 = v23;
            CGContextScaleCTM(v23, a2, a2);
            CGContextSetGrayFillColor(v24, 1.0, 0.0);
            v27.origin.x = x;
            v27.origin.y = y;
            v27.size.width = width;
            v27.size.height = height;
            CGContextFillRect(v24, v27);
            CGContextDrawPDFPage(v24, v6);
            Image = CGBitmapContextCreateImage(v24);

            return (int64_t)Image;
          }

          return 0;
        }
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_1ABD9C680(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  const __CFData *v10;
  CGDataProvider *v11;
  CGImageRef v12;
  _BYTE *v13;
  void *v15;
  unint64_t v16;
  _BYTE *v17;

  if (qword_1ED34C2E0 != -1)
    swift_once();
  v6 = sub_1ABF3133C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED347340);
  v7 = sub_1ABF31324();
  v8 = sub_1ABF31BF4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1ABCEF000, v7, v8, "Rasterizing attribution source logo", v9, 2u);
    MEMORY[0x1AF438FFC](v9, -1, -1);
  }

  v10 = (const __CFData *)sub_1ABF30640();
  v11 = CGDataProviderCreateWithCFData(v10);

  if (v11)
  {
    v12 = CGImageCreateWithPNGDataProvider(v11, 0, 0, kCGRenderingIntentDefault);
    if (v12 || (v12 = CGImageCreateWithJPEGDataProvider(v11, 0, 0, kCGRenderingIntentDefault)) != 0)
    {

      a3 = 1.0;
    }
    else
    {
      v15 = (void *)sub_1ABD9C4CC(v11, a3);
      if (!v15 || (sub_1ABD9B948(), v16 >> 60 == 15))
      {
        sub_1ABD9C8B0();
        swift_allocError();
        *v17 = 1;
        swift_willThrow();
        sub_1ABD0F430(a1, a2);

        return a3;
      }

      sub_1ABD0F430(a1, a2);
      v11 = (CGDataProvider *)v15;
    }

  }
  else
  {
    sub_1ABD9C8B0();
    swift_allocError();
    *v13 = 0;
    swift_willThrow();
    sub_1ABD0F430(a1, a2);
  }
  return a3;
}

unint64_t sub_1ABD9C8B0()
{
  unint64_t result;

  result = qword_1EEC42320;
  if (!qword_1EEC42320)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF396C0, &type metadata for DownloadedImage.ImageError);
    atomic_store(result, (unint64_t *)&qword_1EEC42320);
  }
  return result;
}

uint64_t sub_1ABD9C8F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

double sub_1ABD9C9CC(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  unint64_t v11;
  double v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  sub_1ABD9CBD4(0, (unint64_t *)&unk_1ED346828, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD9CB90();
  sub_1ABF3235C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v15 = 0;
    sub_1ABD47EA4();
    sub_1ABF32110();
    v10 = v13;
    v11 = v14;
    LOBYTE(v13) = 1;
    sub_1ABD0F474(v10, v14);
    sub_1ABF320F8();
    v2 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1ABD0F430(v10, v11);
  }
  return v2;
}

unint64_t sub_1ABD9CB90()
{
  unint64_t result;

  result = qword_1ED34CB50;
  if (!qword_1ED34CB50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39670, &type metadata for DownloadedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CB50);
  }
  return result;
}

void sub_1ABD9CBD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABD9CB90();
    v7 = a3(a1, &type metadata for DownloadedImage.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

ValueMetadata *type metadata accessor for DownloadedImage.CodingKeys()
{
  return &type metadata for DownloadedImage.CodingKeys;
}

uint64_t _s10StocksCore15DownloadedImageV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABD9CC90 + 4 * byte_1ABF39405[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABD9CCC4 + 4 * byte_1ABF39400[v4]))();
}

uint64_t sub_1ABD9CCC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD9CCCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD9CCD4);
  return result;
}

uint64_t sub_1ABD9CCE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD9CCE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABD9CCEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD9CCF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DownloadedImage.ImageError()
{
  return &type metadata for DownloadedImage.ImageError;
}

unint64_t sub_1ABD9CD14()
{
  unint64_t result;

  result = qword_1EEC42328;
  if (!qword_1EEC42328)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39590, &type metadata for DownloadedImage.ImageError);
    atomic_store(result, (unint64_t *)&qword_1EEC42328);
  }
  return result;
}

unint64_t sub_1ABD9CD5C()
{
  unint64_t result;

  result = qword_1EEC42330;
  if (!qword_1EEC42330)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39648, &type metadata for DownloadedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42330);
  }
  return result;
}

unint64_t sub_1ABD9CDA4()
{
  unint64_t result;

  result = qword_1ED34C7D0;
  if (!qword_1ED34C7D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF395B8, &type metadata for DownloadedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C7D0);
  }
  return result;
}

unint64_t sub_1ABD9CDEC()
{
  unint64_t result;

  result = qword_1ED34CB58;
  if (!qword_1ED34CB58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF395E0, &type metadata for DownloadedImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CB58);
  }
  return result;
}

uint64_t sub_1ABD9CE30()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABD9CE80()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABD9CE98()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABD9CEE4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ABD9CF34(_QWORD *a1@<X8>)
{
  *a1 = 0x617461646174656DLL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1ABD9CF50@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ABD9CFA4()
{
  sub_1ABCF9D68();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD9CFCC()
{
  sub_1ABCF9D68();
  return sub_1ABF32398();
}

uint64_t sub_1ABD9CFF4()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABD9CFFC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1ABD9D004@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;

  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6)
  {
    v8 = result;
    v9 = (uint64_t *)(v5 + 40);
    while (1)
    {
      v11 = *(v9 - 1);
      v10 = *v9;
      v12 = v9[1];
      v15 = *((_OWORD *)v9 + 1);
      v13 = v9[4];
      if (v11 == v8 && v10 == a2)
        break;
      result = sub_1ABF3223C();
      if ((result & 1) != 0)
        goto LABEL_11;
      v9 += 6;
      if (!--v6)
        goto LABEL_9;
    }
    v11 = v8;
    v10 = a2;
LABEL_11:
    *(_QWORD *)a3 = v11;
    *(_QWORD *)(a3 + 8) = v10;
    *(_QWORD *)(a3 + 16) = v12;
    *(_OWORD *)(a3 + 24) = v15;
    *(_QWORD *)(a3 + 40) = v13;
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  else
  {
LABEL_9:
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

void sub_1ABD9D100(char *a1)
{
  sub_1ABDE3920(*a1);
}

void sub_1ABD9D10C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABD9D164()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABD9D1D0()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABD9D218()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABD9D270()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABD9D2C4()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABD9D330@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABD9DACC();
  *a1 = result;
  return result;
}

uint64_t sub_1ABD9D35C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABD9D398 + 4 * byte_1ABF3970C[*v0]))();
}

void sub_1ABD9D398(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6F626D7973;
  a1[1] = 0xE600000000000000;
}

void sub_1ABD9D3B0(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6174726F706D69;
  a1[1] = 0xEA00000000006563;
}

void sub_1ABD9D3D0(_QWORD *a1@<X8>)
{
  *a1 = 0x726F697270;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1ABD9D3E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABD9DACC();
  *a1 = result;
  return result;
}

uint64_t sub_1ABD9D40C()
{
  sub_1ABCFA02C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABD9D434()
{
  sub_1ABCFA02C();
  return sub_1ABF32398();
}

uint64_t sub_1ABD9D45C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABD9D488()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

double sub_1ABD9D4B4()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double sub_1ABD9D4BC()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

uint64_t sub_1ABD9D4C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;
  char v14;
  char v15;

  sub_1ABCF4DA8(0, &qword_1EEC42338, (uint64_t (*)(void))sub_1ABCFA02C, (uint64_t)&type metadata for HeadlineMetadata.StockEntityMetadata.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCFA02C();
  sub_1ABF32368();
  v15 = 0;
  v9 = v11[3];
  sub_1ABF32194();
  if (!v9)
  {
    v14 = 1;
    sub_1ABF32140();
    v13 = 2;
    sub_1ABF321AC();
    v12 = 3;
    sub_1ABF321AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABD9D664(_QWORD *a1)
{
  return sub_1ABD9D4C4(a1);
}

uint64_t sub_1ABD9D678(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_1ABCF4DA8(0, &qword_1EEC42340, (uint64_t (*)(void))sub_1ABCF9D68, (uint64_t)&type metadata for HeadlineMetadata.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF9D68();
  sub_1ABF32368();
  v10[3] = v8;
  sub_1ABD9D7B0();
  sub_1ABCF9D04(&qword_1EEC42348, (uint64_t (*)(void))sub_1ABD9D804, MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1ABD9D7B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346F08)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346F08);
  }
}

unint64_t sub_1ABD9D804()
{
  unint64_t result;

  result = qword_1EEC42350;
  if (!qword_1EEC42350)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39750, &type metadata for HeadlineMetadata.StockEntityMetadata);
    atomic_store(result, (unint64_t *)&qword_1EEC42350);
  }
  return result;
}

uint64_t sub_1ABD9D848(_QWORD *a1)
{
  return sub_1ABD9D678(a1);
}

ValueMetadata *type metadata accessor for HeadlineMetadata()
{
  return &type metadata for HeadlineMetadata;
}

uint64_t initializeWithCopy for HeadlineMetadata.StockEntityMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for HeadlineMetadata.StockEntityMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for HeadlineMetadata.StockEntityMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiResolutionImage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiResolutionImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineMetadata.StockEntityMetadata()
{
  return &type metadata for HeadlineMetadata.StockEntityMetadata;
}

ValueMetadata *type metadata accessor for HeadlineMetadata.CodingKeys()
{
  return &type metadata for HeadlineMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for HeadlineMetadata.StockEntityMetadata.CodingKeys()
{
  return &type metadata for HeadlineMetadata.StockEntityMetadata.CodingKeys;
}

unint64_t sub_1ABD9DA40()
{
  unint64_t result;

  result = qword_1EEC42358;
  if (!qword_1EEC42358)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF398E8, &type metadata for HeadlineMetadata.StockEntityMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42358);
  }
  return result;
}

unint64_t sub_1ABD9DA88()
{
  unint64_t result;

  result = qword_1EEC42360;
  if (!qword_1EEC42360)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF399D8, &type metadata for HeadlineMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42360);
  }
  return result;
}

uint64_t sub_1ABD9DACC()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t storeEnumTagSinglePayload for YahooEndpoint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABD9DB60 + 4 * byte_1ABF39AA5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABD9DB94 + 4 * byte_1ABF39AA0[v4]))();
}

uint64_t sub_1ABD9DB94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD9DB9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABD9DBA4);
  return result;
}

uint64_t sub_1ABD9DBB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABD9DBB8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABD9DBBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABD9DBC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooEndpoint()
{
  return &type metadata for YahooEndpoint;
}

unint64_t sub_1ABD9DBE4()
{
  unint64_t result;

  result = qword_1EEC42368;
  if (!qword_1EEC42368)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39AFC, &type metadata for YahooEndpoint);
    atomic_store(result, (unint64_t *)&qword_1EEC42368);
  }
  return result;
}

uint64_t sub_1ABD9DC28(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABD9DC30()
{
  CFTimeInterval v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v0 = CACurrentMediaTime();
  type metadata accessor for ForYouConfigRecord(0);
  sub_1ABF3127C();
  *(CFTimeInterval *)(swift_allocObject() + 16) = v0;
  v1 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v2 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();

  sub_1ABF31144();
  swift_release();
  v3 = (void *)sub_1ABF31114();
  sub_1ABF31204();
  swift_release();

  sub_1ABF3127C();
  sub_1ABF2FF68();
  v4 = (void *)sub_1ABF31114();
  sub_1ABF31174();
  swift_release();
  swift_release();

  v5 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();

  v6 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();

  sub_1ABF31144();
  swift_release();
  v7 = (void *)sub_1ABF31114();
  sub_1ABF31204();
  swift_release();

  v8 = (void *)sub_1ABF31114();
  v9 = sub_1ABF31108();
  swift_release();
  swift_release();

  return v9;
}

double sub_1ABD9DE7C@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1ABF39B30;
  return result;
}

uint64_t sub_1ABD9DE8C(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v1 = a1[2];
  v2 = a1[3];
  if (v2 >> 60 == 15)
  {
    v3 = a1[1];
    if (v3 >> 60 == 15)
    {
      sub_1ABD9EA08();
      swift_allocError();
      *v4 = 0;
      v4[1] = 0;
      return swift_willThrow();
    }
    sub_1ABD0F474(*a1, v3);
  }
  sub_1ABD04578(0, &qword_1ED346DC0, MEMORY[0x1E0CB0338], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABD9EA4C(v1, v2);
  return sub_1ABF311E0();
}

uint64_t sub_1ABD9DF78(_QWORD *a1)
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1ABD19560();
  v2 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();

  v3 = a1 + 2;
  v5 = a1[5];
  v4 = a1[6];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v5, v4);
}

uint64_t sub_1ABD9E010@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  CFTimeInterval v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  _OWORD *v28;
  uint64_t v29;

  v6 = sub_1ABF317D4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD0F55C();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1ABF366E0;
  v11 = CACurrentMediaTime();
  v12 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v10 + 64) = v12;
  *(CFTimeInterval *)(v10 + 32) = (v11 - a3) * 1000.0;
  v13 = *a1;
  v14 = a1[1];
  *(_QWORD *)(v10 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 104) = sub_1ABD0F5C0();
  *(_QWORD *)(v10 + 72) = v13;
  *(_QWORD *)(v10 + 80) = v14;
  sub_1ABD19560();
  sub_1ABF2FF5C();
  v15 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  v16 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for ForYouConfigRecord(0) + 28));
  v17 = v16[1];
  v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v18 = *v16 & 0xFFFFFFFFFFFFLL;
  if (!v18)
  {
    sub_1ABF31BE8();
    v27 = (void *)sub_1ABF31D44();
    sub_1ABF31318();

    sub_1ABD9EA08();
    swift_allocError();
    *v28 = xmmword_1ABF39B40;
    return swift_willThrow();
  }
  sub_1ABF317C8();
  v19 = sub_1ABF317B0();
  v21 = v20;
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v21 >> 60 == 15)
  {
    sub_1ABF31BE8();
    v23 = (void *)sub_1ABF31D44();
    sub_1ABF31318();

    v25 = *v16;
    v24 = v16[1];
    sub_1ABD9EA08();
    swift_allocError();
    *v26 = v25;
    v26[1] = v24;
    sub_1ABF2FF5C();
    return swift_willThrow();
  }
  *a2 = v19;
  a2[1] = v21;
  return result;
}

void sub_1ABD9E2BC()
{
  uint64_t v0;
  void *v1;

  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_1ABD19560();
  v1 = (void *)sub_1ABF31D44();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

}

uint64_t sub_1ABD9E3BC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  char v4;
  CFTimeInterval v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v13;
  _OWORD *v14;

  v3 = *(_QWORD *)(a1 + 1344);
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED346D60 != -1)
    swift_once();
  objc_msgSend((id)objc_opt_self(), sel_enabledForCurrentLevel_, v3);
  v4 = sub_1ABF309D0();
  swift_release();
  if ((v4 & 1) != 0)
  {
    v5 = CACurrentMediaTime();
    sub_1ABD19560();
    v6 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    v7 = a2[10];
    v8 = a2[11];
    __swift_project_boxed_opaque_existential_1(a2 + 7, v7);
    __swift_project_boxed_opaque_existential_1(a2 + 12, a2[15]);
    v9 = sub_1ABE40528(0xD000000000000018, 0x80000001ABF56CF0, 0xD000000000000018, 0x80000001ABF56D10, 0, 0);
    (*(void (**)(id, uint64_t, uint64_t))(v8 + 8))(v9, v7, v8);

    *(CFTimeInterval *)(swift_allocObject() + 16) = v5;
    v10 = (void *)sub_1ABF31114();
    v11 = sub_1ABF31174();
    swift_release();
    swift_release();

    return v11;
  }
  else
  {
    sub_1ABD19560();
    v13 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    sub_1ABD9EA08();
    swift_allocError();
    *v14 = xmmword_1ABF39B50;
    return swift_willThrow();
  }
}

uint64_t sub_1ABD9E620(uint64_t *a1, double a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  CFTimeInterval v6;
  uint64_t v7;
  void *v8;

  v3 = *a1;
  v4 = a1[1];
  sub_1ABD0F55C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ABF366C0;
  v6 = CACurrentMediaTime();
  v7 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v5 + 64) = v7;
  *(CFTimeInterval *)(v5 + 32) = (v6 - a2) * 1000.0;
  sub_1ABD19560();
  v8 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FAC8, (uint64_t)&type metadata for RemoteConfigurationResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABD0F474(v3, v4);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABD9E770@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return sub_1ABD0F474(v3, v2);
}

void sub_1ABD9E7A0()
{
  uint64_t v0;
  void *v1;

  sub_1ABD0F55C();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_1ABD19560();
  v1 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

}

uint64_t sub_1ABD9E89C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouFeedConfigService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD9E900()
{
  void *v0;
  uint64_t v1;

  sub_1ABD9E990();
  sub_1ABF3127C();
  v0 = (void *)sub_1ABF31114();
  v1 = sub_1ABF31174();
  swift_release();

  return v1;
}

uint64_t sub_1ABD9E978()
{
  return sub_1ABD9DC30();
}

void sub_1ABD9E990()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED346860)
  {
    sub_1ABD04578(255, &qword_1ED346858, MEMORY[0x1E0CB0338], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED346860);
  }
}

unint64_t sub_1ABD9EA08()
{
  unint64_t result;

  result = qword_1ED346C10;
  if (!qword_1ED346C10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39C28, &type metadata for ForYouFeedConfigService.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED346C10);
  }
  return result;
}

uint64_t sub_1ABD9EA4C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1ABD0F474(a1, a2);
  return a1;
}

uint64_t sub_1ABD9EA60()
{
  _QWORD *v0;

  return sub_1ABD9DF78(v0);
}

uint64_t sub_1ABD9EA78()
{
  return swift_deallocObject();
}

uint64_t sub_1ABD9EA88@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1ABD9E010(a1, a2, *(double *)(v2 + 16));
}

uint64_t sub_1ABD9EAA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[21];
  v2 = v0[22];
  __swift_project_boxed_opaque_existential_1(v0 + 18, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2);
}

uint64_t sub_1ABD9EAEC(uint64_t a1)
{
  _QWORD *v1;

  return sub_1ABD9E3BC(a1, v1);
}

uint64_t sub_1ABD9EB04()
{
  return swift_deallocObject();
}

uint64_t sub_1ABD9EB14(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABD9E620(a1, *(double *)(v1 + 16));
}

unint64_t destroy for ForYouFeedConfigService.Errors(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s10StocksCore23ForYouFeedConfigServiceC6ErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    sub_1ABF2FF5C();
  }
  return a1;
}

_QWORD *assignWithCopy for ForYouFeedConfigService.Errors(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1ABF2FF5C();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ForYouFeedConfigService.Errors(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ForYouFeedConfigService.Errors(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ForYouFeedConfigService.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedConfigService.Errors()
{
  return &type metadata for ForYouFeedConfigService.Errors;
}

double sub_1ABD9ED48@<D0>(_OWORD *a1@<X8>)
{
  return sub_1ABD9DE7C(a1);
}

uint64_t sub_1ABD9ED5C()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1ABD9ED80()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABD9EDA4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1ABD9EDD4()
{
  unint64_t result;

  result = qword_1EEC423D8[0];
  if (!qword_1EEC423D8[0])
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39D10, &type metadata for RemovableWatchlistOptionsProvider);
    atomic_store(result, qword_1EEC423D8);
  }
  return result;
}

uint64_t sub_1ABD9EE18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[10] = a1;
  v2 = sub_1ABF30484();
  v1[11] = v2;
  v1[12] = *(_QWORD *)(v2 - 8);
  v1[13] = swift_task_alloc();
  sub_1ABF30880();
  v1[14] = swift_task_alloc();
  v3 = sub_1ABF31774();
  v1[15] = v3;
  v1[16] = *(_QWORD *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  sub_1ABF3049C();
  v1[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABD9EEF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1ABF2FBF0();
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v0[20] = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[21] = v3;
  *v3 = v0;
  v3[1] = sub_1ABD9EF90;
  return sub_1ABF31150();
}

uint64_t sub_1ABD9EF90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABD9F008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v4 = (char *)(v1 + 73);
    do
    {
      v51 = *(_QWORD *)(v4 - 41);
      v5 = *(_QWORD *)(v4 - 33);
      v6 = *(_QWORD *)(v4 - 25);
      v7 = *(_QWORD *)(v4 - 17);
      v8 = *(_QWORD *)(v4 - 9);
      v49 = *(v4 - 1);
      v47 = *v4;
      if (v7 == sub_1ABF317A4() && v8 == v9)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = sub_1ABF3223C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v53 = v3;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1ABDB50B4(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v12 = v3;
          v13 = *(_QWORD *)(v3 + 16);
          v14 = *(_QWORD *)(v12 + 24);
          if (v13 >= v14 >> 1)
          {
            sub_1ABDB50B4(v14 > 1, v13 + 1, 1);
            v12 = v53;
          }
          *(_QWORD *)(v12 + 16) = v13 + 1;
          v15 = v12 + 48 * v13;
          *(_QWORD *)(v15 + 32) = v51;
          *(_QWORD *)(v15 + 40) = v5;
          *(_QWORD *)(v15 + 48) = v6;
          *(_QWORD *)(v15 + 56) = v7;
          *(_QWORD *)(v15 + 64) = v8;
          *(_BYTE *)(v15 + 72) = v49;
          *(_BYTE *)(v15 + 73) = v47;
          v3 = v12;
        }
      }
      v4 += 48;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v3 + 16);
  if (!v16)
  {
    swift_release();
    v37 = MEMORY[0x1E0DEE9D8];
    goto LABEL_33;
  }
  v17 = *(_QWORD *)(v0 + 128);
  v43 = *(_QWORD *)(v0 + 96);
  v54 = MEMORY[0x1E0DEE9D8];
  sub_1ABDB5098(0, v16, 0);
  sub_1ABD9F6B0();
  v42 = *MEMORY[0x1E0CAF9B8];
  v18 = (uint64_t *)(v3 + 64);
  v44 = v17;
  do
  {
    v50 = v16;
    v19 = *(_QWORD *)(v0 + 152);
    v20 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 88);
    v45 = *(v18 - 4);
    v48 = *(v18 - 3);
    v22 = *(v18 - 1);
    v23 = *v18;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF31738();
    sub_1ABF30844();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v20, v42, v21);
    sub_1ABF304A8();
    v24 = MEMORY[0x1AF435F84](v19);
    v52 = v22;
    if (v22 == sub_1ABF317A4() && v23 == v25)
    {
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v26 = v44;
    }
    else
    {
      v27 = sub_1ABF3223C();
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRelease();
      v26 = v44;
      if ((v27 & 1) == 0)
      {
        v34 = v45;
        v36 = v48;
        goto LABEL_26;
      }
    }
    v46 = v24;
    v28 = *(_QWORD *)(v0 + 136);
    v29 = *(_QWORD *)(v0 + 144);
    v30 = *(_QWORD *)(v0 + 120);
    sub_1ABF31738();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v28, v29, v30);
    if (qword_1ED34FD78 != -1)
      swift_once();
    v31 = *(_QWORD *)(v0 + 144);
    v32 = *(_QWORD *)(v0 + 120);
    v33 = (id)qword_1ED368428;
    sub_1ABF30844();
    v34 = sub_1ABF317EC();
    v36 = v35;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v31, v32);
    swift_bridgeObjectRelease();
    v24 = v46;
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 56) = v34;
    *(_QWORD *)(v0 + 64) = v36;
    sub_1ABF2FD28();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    v37 = v54;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1ABDB5098(0, *(_QWORD *)(v54 + 16) + 1, 1);
      v37 = v54;
    }
    v39 = *(_QWORD *)(v37 + 16);
    v38 = *(_QWORD *)(v37 + 24);
    if (v39 >= v38 >> 1)
    {
      sub_1ABDB5098(v38 > 1, v39 + 1, 1);
      v37 = v54;
    }
    *(_QWORD *)(v37 + 16) = v39 + 1;
    v40 = (_QWORD *)(v37 + 24 * v39);
    v40[4] = v52;
    v40[5] = v23;
    v40[6] = v24;
    v18 += 6;
    v16 = v50 - 1;
  }
  while (v50 != 1);
  swift_release();
LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v37);
}

uint64_t sub_1ABD9F560()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABD9F5E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1ABD8D5B0;
  return sub_1ABD9EE18(v3);
}

uint64_t sub_1ABD9F630()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1ABD37AA0;
  return sub_1ABF2FF44();
}

ValueMetadata *type metadata accessor for RemovableWatchlistOptionsProvider()
{
  return &type metadata for RemovableWatchlistOptionsProvider;
}

void sub_1ABD9F6B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34CAD8)
  {
    sub_1ABD94F2C();
    v0 = sub_1ABF2FD88();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34CAD8);
  }
}

uint64_t sub_1ABD9F708()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for YahooBaseOperationFactory()
{
  return objc_opt_self();
}

uint64_t sub_1ABD9F74C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[8];
  uint64_t v36;
  uint64_t v37;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return result;
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1ABF31F18();
  result = sub_1ABE0FADC(v1);
  if (result < 0 || (v5 = result, result >= 1 << *(_BYTE *)(v1 + 32)))
  {
LABEL_22:
    __break(1u);
    return v37;
  }
  v6 = v1 + 64;
  v29 = v1 + 80;
  v30 = v2;
  v7 = 1;
  v32 = v1 + 64;
  v33 = v1;
  v31 = v4;
  while (1)
  {
    v8 = v5 >> 6;
    if ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
      break;
    if (*(_DWORD *)(v1 + 36) != v4)
      goto LABEL_26;
    v34 = v7;
    v9 = *(_QWORD *)(v1 + 56) + 136 * v5;
    v35[0] = *(_OWORD *)v9;
    v10 = *(_OWORD *)(v9 + 64);
    v12 = *(_OWORD *)(v9 + 16);
    v11 = *(_OWORD *)(v9 + 32);
    v35[3] = *(_OWORD *)(v9 + 48);
    v35[4] = v10;
    v35[1] = v12;
    v35[2] = v11;
    v14 = *(_OWORD *)(v9 + 96);
    v13 = *(_OWORD *)(v9 + 112);
    v15 = *(_OWORD *)(v9 + 80);
    v36 = *(_QWORD *)(v9 + 128);
    v35[6] = v14;
    v35[7] = v13;
    v35[5] = v15;
    v16 = objc_allocWithZone((Class)SCWWatchedStock);
    sub_1ABD97ECC((uint64_t)v35);
    v17 = (void *)sub_1ABF31780();
    v18 = (void *)sub_1ABF31780();
    v19 = (void *)sub_1ABF31780();
    v20 = (void *)sub_1ABF31780();
    v21 = (void *)sub_1ABF31780();
    objc_msgSend(v16, sel_initWithName_shortName_compactName_symbol_exchange_, v17, v18, v19, v20, v21);

    sub_1ABD97F60((uint64_t)v35);
    sub_1ABF31EF4();
    sub_1ABF31F24();
    v1 = v33;
    sub_1ABF31F30();
    result = sub_1ABF31F00();
    v22 = *(_BYTE *)(v33 + 32);
    if ((uint64_t)v5 >= 1 << v22)
      goto LABEL_27;
    v6 = v32;
    v23 = *(_QWORD *)(v32 + 8 * v8);
    if ((v23 & (1 << v5)) == 0)
      goto LABEL_28;
    v4 = v31;
    if (*(_DWORD *)(v33 + 36) != v31)
      goto LABEL_29;
    v24 = v23 & (-2 << (v5 & 0x3F));
    if (v24)
    {
      v5 = __clz(__rbit64(v24)) | v5 & 0xFFFFFFFFFFFFFFC0;
      v25 = v30;
    }
    else
    {
      v26 = v8 + 1;
      v27 = (unint64_t)((1 << v22) + 63) >> 6;
      v25 = v30;
      if (v8 + 1 >= v27)
        goto LABEL_18;
      v28 = *(_QWORD *)(v32 + 8 * v26);
      if (!v28)
      {
        while (v27 - 2 != v8)
        {
          v28 = *(_QWORD *)(v29 + 8 * v8++);
          if (v28)
          {
            v26 = v8 + 1;
            goto LABEL_17;
          }
        }
LABEL_18:
        v5 = 1 << v22;
        goto LABEL_19;
      }
LABEL_17:
      v5 = __clz(__rbit64(v28)) + (v26 << 6);
    }
LABEL_19:
    if (v34 == v25)
      return v37;
    if ((v5 & 0x8000000000000000) == 0)
    {
      v7 = v34 + 1;
      if ((uint64_t)v5 < 1 << v22)
        continue;
    }
    goto LABEL_22;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1ABD9FA18(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  id v6;
  void *v7;

  sub_1ABF31060();
  v6 = objc_msgSend(objc_allocWithZone((Class)SCWWatchlistManager), sel_initWithDatabase_metadataProvider_defaultsProvider_, v7, a1, a2);

  *a3 = v6;
}

id sub_1ABD9FA8C(id *a1, uint64_t a2)
{
  return objc_msgSend(*a1, sel_addObserver_, a2);
}

uint64_t sub_1ABD9FAA0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudKitWatchlistService()
{
  return objc_opt_self();
}

uint64_t sub_1ABD9FAFC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;

  v6 = *(_OWORD *)(a1 + 16);
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v1 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ABF366C0;
  v7 = v6;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1ABD0F5C0();
  *(_OWORD *)(v2 + 32) = v6;
  v3 = v1;
  sub_1ABD03ADC((uint64_t)&v7);
  sub_1ABF31BF4();
  sub_1ABF31318();

  v4 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v4);
  sub_1ABD04578(0, &qword_1EEC45230, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABD9FC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v12 = swift_allocObject();
  v13 = *(_OWORD *)(a6 + 64);
  *(_OWORD *)(v12 + 104) = *(_OWORD *)(a6 + 80);
  v14 = *(_OWORD *)(a6 + 112);
  *(_OWORD *)(v12 + 120) = *(_OWORD *)(a6 + 96);
  *(_OWORD *)(v12 + 136) = v14;
  v15 = *(_OWORD *)a6;
  *(_OWORD *)(v12 + 40) = *(_OWORD *)(a6 + 16);
  v16 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v12 + 72) = v16;
  *(_OWORD *)(v12 + 88) = v13;
  *(_QWORD *)(v12 + 16) = a5;
  v17 = *(_QWORD *)(a6 + 128);
  *(_OWORD *)(v12 + 24) = v15;
  *(_QWORD *)(v12 + 152) = v17;
  *(_QWORD *)(v12 + 160) = a3;
  *(_QWORD *)(v12 + 168) = a4;
  *(_QWORD *)(v12 + 176) = a1;
  *(_QWORD *)(v12 + 184) = a2;
  sub_1ABF2FF68();
  sub_1ABD97ECC(a6);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABD9FD54(id *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  id v31;
  __int128 aBlock;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v31 = *a1;
  v11 = a2[6];
  v12 = a2[7];
  __swift_project_boxed_opaque_existential_1(a2 + 3, v11);
  v13 = *(_OWORD *)(a3 + 112);
  v38 = *(_OWORD *)(a3 + 96);
  v39 = v13;
  v40 = *(_QWORD *)(a3 + 128);
  v14 = *(_OWORD *)(a3 + 48);
  v34 = *(_OWORD *)(a3 + 32);
  v35 = v14;
  v15 = *(_OWORD *)(a3 + 80);
  v36 = *(_OWORD *)(a3 + 64);
  v37 = v15;
  v16 = *(_OWORD *)(a3 + 16);
  aBlock = *(_OWORD *)a3;
  v33 = v16;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v12 + 16))(&aBlock, v11, v12);
  swift_release();
  v17 = objc_allocWithZone((Class)SCWWatchedStock);
  sub_1ABD97ECC(a3);
  v18 = (void *)sub_1ABF31780();
  v19 = (void *)sub_1ABF31780();
  v20 = (void *)sub_1ABF31780();
  v21 = (void *)sub_1ABF31780();
  v22 = (void *)sub_1ABF31780();
  sub_1ABD97F60(a3);
  v23 = objc_msgSend(v17, sel_initWithName_shortName_compactName_symbol_exchange_, v18, v19, v20, v21, v22);

  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a4;
  *(_QWORD *)(v24 + 24) = a5;
  *(_QWORD *)(v24 + 32) = a6;
  *(_QWORD *)(v24 + 40) = a7;
  v25 = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(v24 + 144) = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v24 + 160) = v25;
  *(_QWORD *)(v24 + 176) = *(_QWORD *)(a3 + 128);
  v26 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v24 + 80) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v24 + 96) = v26;
  v27 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v24 + 112) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v24 + 128) = v27;
  v28 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v24 + 48) = *(_OWORD *)a3;
  *(_OWORD *)(v24 + 64) = v28;
  *(_QWORD *)&v34 = sub_1ABDA97C0;
  *((_QWORD *)&v34 + 1) = v24;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v33 = sub_1ABD9FF74;
  *((_QWORD *)&v33 + 1) = &block_descriptor_244;
  v29 = _Block_copy(&aBlock);
  sub_1ABD97ECC(a3);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v31, sel_addStock_completion_, v23, v29);
  _Block_release(v29);

}

void sub_1ABD9FF74(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  sub_1ABF2FF68();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_1ABD9FFC8(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v4 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ABF366C0;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  v7 = v4;
  sub_1ABF2FF5C();
  sub_1ABF31BF4();
  sub_1ABF31318();

  v8 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v8);
  sub_1ABD04578(0, &qword_1ED346DF0, v6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA0110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  _QWORD *v14;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a6;
  v14[3] = a7;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = sub_1ABDA8864;
  v14[7] = v13;
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA01DC(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v17[6];

  v13 = *a1;
  v14 = (void *)sub_1ABF31780();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  v15[4] = a6;
  v15[5] = a7;
  v15[6] = a2;
  v15[7] = a3;
  v17[4] = sub_1ABDA8904;
  v17[5] = v15;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1ABD9FF74;
  v17[3] = &block_descriptor_235;
  v16 = _Block_copy(v17);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  swift_release();
  objc_msgSend(v13, sel_removeSymbol_completion_, v14, v16);
  _Block_release(v16);

}

uint64_t sub_1ABDA02EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v16;
  _BYTE v17[136];
  _QWORD v18[17];
  __int128 v19;
  _BYTE v20[136];

  v16 = *(_OWORD *)(a1 + 16);
  sub_1ABD843F0(a3, (uint64_t)v17, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  sub_1ABD843F0(a3, (uint64_t)v20, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v5 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1ABF36EA0;
  v19 = v16;
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  v8 = sub_1ABD0F5C0();
  *(_OWORD *)(v6 + 32) = v16;
  v9 = MEMORY[0x1E0DEBBF8];
  *(_QWORD *)(v6 + 96) = MEMORY[0x1E0DEBB98];
  *(_QWORD *)(v6 + 104) = v9;
  *(_QWORD *)(v6 + 64) = v8;
  *(_QWORD *)(v6 + 72) = a2;
  sub_1ABD843F0((uint64_t)v17, (uint64_t)v18, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  if (sub_1ABD75518((uint64_t)v18) == 1)
  {
    v10 = (_QWORD *)(v6 + 112);
    *(_QWORD *)(v6 + 136) = v7;
    *(_QWORD *)(v6 + 144) = v8;
LABEL_7:
    *v10 = 7104878;
    v12 = 0xE300000000000000;
    goto LABEL_8;
  }
  v11 = v18[2];
  v10 = (_QWORD *)(v6 + 112);
  *(_QWORD *)(v6 + 136) = v7;
  *(_QWORD *)(v6 + 144) = v8;
  v12 = sub_1ABF2FF5C();
  if (!v12)
    goto LABEL_7;
  *v10 = v11;
LABEL_8:
  *(_QWORD *)(v6 + 120) = v12;
  v13 = v5;
  sub_1ABD03ADC((uint64_t)&v19);
  sub_1ABF31BF4();
  sub_1ABF31318();

  v14 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v14);
  sub_1ABD04578(0, &qword_1EEC45230, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA054C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v13 = swift_allocObject();
  v14 = *(_OWORD *)(a6 + 112);
  *(_OWORD *)(v13 + 112) = *(_OWORD *)(a6 + 96);
  *(_OWORD *)(v13 + 128) = v14;
  *(_QWORD *)(v13 + 144) = *(_QWORD *)(a6 + 128);
  v15 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v13 + 64) = v15;
  v16 = *(_OWORD *)(a6 + 80);
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(a6 + 64);
  *(_OWORD *)(v13 + 96) = v16;
  v17 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a6;
  *(_OWORD *)(v13 + 32) = v17;
  sub_1ABD843F0((uint64_t)a7, v13 + 152, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  *(_QWORD *)(v13 + 288) = a3;
  *(_QWORD *)(v13 + 296) = a4;
  *(_QWORD *)(v13 + 304) = a1;
  *(_QWORD *)(v13 + 312) = a2;
  sub_1ABD97ECC(a6);
  sub_1ABDA89F4(a7);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA0630(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  _QWORD aBlock[6];
  _BYTE v23[16];

  v13 = *a1;
  v14 = (void *)sub_1ABF31780();
  sub_1ABD843F0(a3, (uint64_t)v23, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  if (sub_1ABD75518((uint64_t)v23) == 1)
    v15 = 0;
  else
    v15 = (void *)sub_1ABF31780();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a4;
  *(_QWORD *)(v16 + 24) = a5;
  *(_QWORD *)(v16 + 32) = a6;
  *(_QWORD *)(v16 + 40) = a7;
  v17 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v16 + 144) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v16 + 160) = v17;
  *(_QWORD *)(v16 + 176) = *(_QWORD *)(a2 + 128);
  v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v16 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v16 + 96) = v18;
  v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v16 + 112) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v16 + 128) = v19;
  v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v16 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(v16 + 64) = v20;
  aBlock[4] = sub_1ABDA97C0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD9FF74;
  aBlock[3] = &block_descriptor_222;
  v21 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABD97ECC(a2);
  swift_release();
  objc_msgSend(v13, sel_reorderSymbol_afterSymbol_completion_, v14, v15, v21);
  _Block_release(v21);

}

void sub_1ABDA07B0(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(_OWORD *), uint64_t a5, uint64_t a6)
{
  id v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[8];
  uint64_t v14;

  if (a1)
  {
    v8 = a1;
    a2(a1);

  }
  else
  {
    v9 = *(_OWORD *)(a6 + 112);
    v13[6] = *(_OWORD *)(a6 + 96);
    v13[7] = v9;
    v14 = *(_QWORD *)(a6 + 128);
    v10 = *(_OWORD *)(a6 + 48);
    v13[2] = *(_OWORD *)(a6 + 32);
    v13[3] = v10;
    v11 = *(_OWORD *)(a6 + 80);
    v13[4] = *(_OWORD *)(a6 + 64);
    v13[5] = v11;
    v12 = *(_OWORD *)(a6 + 16);
    v13[0] = *(_OWORD *)a6;
    v13[1] = v12;
    a4(v13);
  }
}

uint64_t sub_1ABDA0840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v8 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1ABF366E0;
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1ABD0F5C0();
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 72) = a3;
  *(_QWORD *)(v9 + 80) = a4;
  v12 = v8;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF31BF4();
  sub_1ABF31318();

  v13 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v13);
  sub_1ABD04578(0, &qword_1ED346DF0, v10, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA09AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  _QWORD *v16;

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a3;
  v16[7] = a4;
  v16[8] = sub_1ABDA8864;
  v16[9] = v15;
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA0A98(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  _QWORD v19[6];

  v14 = *a1;
  v15 = (void *)sub_1ABF31780();
  v16 = (void *)sub_1ABF31780();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a6;
  v17[3] = a7;
  v17[4] = a8;
  v17[5] = a9;
  v17[6] = a4;
  v17[7] = a5;
  v19[4] = sub_1ABDA8904;
  v19[5] = v17;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1ABD9FF74;
  v19[3] = &block_descriptor_200;
  v18 = _Block_copy(v19);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  swift_release();
  objc_msgSend(v14, sel_replaceSymbol_withSymbol_completion_, v15, v16, v18);
  _Block_release(v18);

}

uint64_t sub_1ABDA0BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = sub_1ABDAACEC;
  v11[6] = v10;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA0C84(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  _QWORD v14[6];

  v10 = *a1;
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v11;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = a6;
  v14[4] = sub_1ABDA955C;
  v14[5] = v12;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1ABDA13E4;
  v14[3] = &block_descriptor_187;
  v13 = _Block_copy(v14);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v10, sel_fetchStocksWithCompletion_, v13);
  _Block_release(v13);
}

void sub_1ABDA0D94(unint64_t a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, void (*a6)(uint64_t))
{
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  void (*v38)(uint64_t);
  uint64_t v39;

  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    v13 = sub_1ABF30B44();
    sub_1ABDA8E20();
    v14 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DB3590], v13);
    ((void (*)(void *))a4)(v14);
    goto LABEL_7;
  }
  if (!a2)
  {
    if (a1)
    {
      if (qword_1ED34D5E8 != -1)
        swift_once();
      v38 = a6;
      v16 = (void *)qword_1ED3683F0;
      sub_1ABD0F55C();
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1ABF366E0;
      if (a1 >> 62)
      {
        v36 = v16;
        sub_1ABF2FF5C();
        v18 = sub_1ABF31FE4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v18 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v19 = v16;
      }
      v20 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v17 + 64) = v20;
      v37 = (_QWORD *)v17;
      *(_QWORD *)(v17 + 32) = v18;
      if (v18)
      {
        v39 = MEMORY[0x1E0DEE9D8];
        sub_1ABD16414(0, v18 & ~(v18 >> 63), 0);
        if (v18 < 0)
        {
          __break(1u);
          return;
        }
        v21 = 0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
            v22 = (id)MEMORY[0x1AF4380CC](v21, a1);
          else
            v22 = *(id *)(a1 + 8 * v21 + 32);
          v23 = v22;
          v24 = objc_msgSend(v22, sel_symbol);
          v25 = sub_1ABF317A4();
          v27 = v26;

          v29 = *(_QWORD *)(v39 + 16);
          v28 = *(_QWORD *)(v39 + 24);
          if (v29 >= v28 >> 1)
            sub_1ABD16414(v28 > 1, v29 + 1, 1);
          ++v21;
          *(_QWORD *)(v39 + 16) = v29 + 1;
          v30 = v39 + 16 * v29;
          *(_QWORD *)(v30 + 32) = v25;
          *(_QWORD *)(v30 + 40) = v27;
        }
        while (v18 != v21);
      }
      v31 = MEMORY[0x1E0DEA968];
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD747CC((unint64_t *)&qword_1ED34FCC0, MEMORY[0x1E0DEAF20]);
      v32 = sub_1ABF316E4();
      v34 = v33;
      swift_bridgeObjectRelease();
      v37[12] = v31;
      v37[13] = sub_1ABD0F5C0();
      v37[9] = v32;
      v37[10] = v34;
      sub_1ABF31BF4();
      sub_1ABF31318();

      swift_bridgeObjectRelease();
      sub_1ABF2FF68();
      v35 = sub_1ABDA1244(a1);
      swift_release();
      v38(v35);
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    sub_1ABDA87F4();
    v14 = (void *)swift_allocError();
    a4();
    swift_release();
LABEL_7:

    return;
  }
  v10 = a2;
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v11 = (id)qword_1ED3683F0;
  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 40) = 0xE000000000000000;
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  ((void (*)(void *))a4)(a2);
  swift_release();

}

