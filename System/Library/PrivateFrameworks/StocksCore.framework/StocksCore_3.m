uint64_t sub_1ABEB3E7C()
{
  void *v0;
  uint64_t v1;

  sub_1ABEB3DB8(0, (unint64_t *)&qword_1ED34DE60, (unint64_t *)&unk_1ED34CA88);
  sub_1ABF3127C();
  v0 = (void *)sub_1ABF31114();
  sub_1ABEB3DB8(0, (unint64_t *)&qword_1ED34DE70, (unint64_t *)&qword_1ED34FCB0);
  sub_1ABEB3E1C();
  v1 = sub_1ABF31240();
  swift_release();

  return v1;
}

uint64_t type metadata accessor for StockFeedLookupService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEB3F78()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABEB3F84()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1ABEB3F8C()
{
  return sub_1ABEB3C2C();
}

uint64_t sub_1ABEB3FA0()
{
  uint64_t v0;
  id v1;
  id v2;

  v0 = sub_1ABF3133C();
  __swift_allocate_value_buffer(v0, qword_1ED3466E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED3466E0);
  v1 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1ABF317A4();

  }
  return sub_1ABF31330();
}

uint64_t sub_1ABEB4088@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED346718 != -1)
    swift_once();
  v2 = sub_1ABF3133C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3466E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t ScoringConfig.articleLengthAggregateWeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ScoringConfig.articleReadPenalty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ScoringConfig.audioMultiplierForAUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ScoringConfig.audioMultiplierForBUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t ScoringConfig.audioMultiplierForCUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t ScoringConfig.autofavoritedVoteCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t ScoringConfig.baselineRatePrior.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t ScoringConfig.bundleFreeMultiplierForAUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t ScoringConfig.bundleFreeMultiplierForBUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t ScoringConfig.bundleFreeMultiplierForCUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t ScoringConfig.bundlePaidMultiplierForAUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t ScoringConfig.bundlePaidMultiplierForBUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t ScoringConfig.bundlePaidMultiplierForCUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 192);
}

uint64_t ScoringConfig.channelTopicDiversificationInitialPenalty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 208);
}

uint64_t ScoringConfig.channelTopicDiversificationPenalty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 224);
}

uint64_t ScoringConfig.channelTopicDiversificationPenaltyHalfLife.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 240);
}

uint64_t ScoringConfig.conversionCoefficientForFreeUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 256);
}

uint64_t ScoringConfig.conversionCoefficientForPaidUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 272);
}

uint64_t ScoringConfig.conversionCoefficientForTrialUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 288);
}

__n128 ScoringConfig.conversionCohort.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;

  v2 = *(_QWORD *)(v1 + 400);
  v3 = *(_BYTE *)(v1 + 408);
  v4 = *(_BYTE *)(v1 + 409);
  v5 = *(_OWORD *)(v1 + 320);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 304);
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(v1 + 352);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 336);
  *(_OWORD *)(a1 + 48) = v6;
  result = *(__n128 *)(v1 + 368);
  v8 = *(_OWORD *)(v1 + 384);
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 96) = v2;
  *(_BYTE *)(a1 + 104) = v3;
  *(_BYTE *)(a1 + 105) = v4;
  return result;
}

uint64_t ScoringConfig.ctrWithOneAutofavorited.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 416);
}

uint64_t ScoringConfig.ctrWithOneSubscribed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 432);
}

uint64_t ScoringConfig.ctrWithSubscribedChannel.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 448);
}

uint64_t ScoringConfig.ctrWithThreeAutofavorited.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 464);
}

uint64_t ScoringConfig.ctrWithThreeSubscribed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 480);
}

uint64_t ScoringConfig.ctrWithTwoAutofavorited.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 496);
}

uint64_t ScoringConfig.ctrWithTwoSubscribed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 512);
}

uint64_t ScoringConfig.ctrWithZeroAutofavorited.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 528);
}

uint64_t ScoringConfig.ctrWithZeroSubscribed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 544);
}

uint64_t ScoringConfig.decayFactor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 560);
}

uint64_t ScoringConfig.democratizationFactor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 576);
}

uint64_t ScoringConfig.diversificationInitialPenalty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 592);
}

uint64_t ScoringConfig.diversificationPenalty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 608);
}

uint64_t ScoringConfig.diversificationPenaltyHalfLife.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 624);
}

uint64_t ScoringConfig.evergreenHalfLifeCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 640);
}

uint64_t ScoringConfig.evergreenMultiplierForAUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 656);
}

uint64_t ScoringConfig.evergreenMultiplierForBUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 672);
}

uint64_t ScoringConfig.evergreenMultiplierForCUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 688);
}

uint64_t ScoringConfig.featuredMultiplierForAUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 704);
}

uint64_t ScoringConfig.featuredMultiplierForBUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 720);
}

uint64_t ScoringConfig.featuredMultiplierForCUsers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 736);
}

uint64_t ScoringConfig.firstPassArticleFilter.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 752);
}

uint64_t ScoringConfig.firstPassDiversificationPenalty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 768);
}

uint64_t ScoringConfig.firstPassEvergreenHalfLifeCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 784);
}

uint64_t ScoringConfig.firstPassHalfLifeCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 800);
}

uint64_t ScoringConfig.globalScoreCoefficientFree.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 816);
}

uint64_t ScoringConfig.globalScoreCoefficientHalfLife.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 832);
}

uint64_t ScoringConfig.globalScoreCoefficientInitialMultiplier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 848);
}

uint64_t ScoringConfig.globalScoreCoefficientPaid.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 864);
}

uint64_t ScoringConfig.halfLifeCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 880);
}

uint64_t ScoringConfig.headlineSeenPenalty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 896);
}

uint64_t ScoringConfig.mutedVoteCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 912);
}

uint64_t ScoringConfig.personalizationCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 928);
}

uint64_t ScoringConfig.publisherAggregateWeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 944);
}

uint64_t ScoringConfig.sparseTagsPenalty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 960);
}

uint64_t ScoringConfig.subscribedChannelScoreCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 976);
}

uint64_t ScoringConfig.subscribedTopicsScoreCoefficient.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 992);
}

__n128 ScoringConfig.userCohort.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;

  v2 = *(_QWORD *)(v1 + 1104);
  v3 = *(_BYTE *)(v1 + 1112);
  v4 = *(_BYTE *)(v1 + 1113);
  v5 = *(_OWORD *)(v1 + 1024);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 1008);
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(v1 + 1056);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 1040);
  *(_OWORD *)(a1 + 48) = v6;
  result = *(__n128 *)(v1 + 1072);
  v8 = *(_OWORD *)(v1 + 1088);
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 96) = v2;
  *(_BYTE *)(a1 + 104) = v3;
  *(_BYTE *)(a1 + 105) = v4;
  return result;
}

uint64_t sub_1ABEB44B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABEB44E8 + 4 * byte_1ABF4A438[a1]))(0xD00000000000001CLL, 0x80000001ABF541C0);
}

uint64_t sub_1ABEB44E8(uint64_t a1)
{
  return a1 - 10;
}

uint64_t sub_1ABEB4868()
{
  return 0x6F686F4372657375;
}

uint64_t sub_1ABEB4884(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1ABEB44B0(*a1);
  v5 = v4;
  if (v3 == sub_1ABEB44B0(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABEB490C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABEB44B0(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEB496C()
{
  unsigned __int8 *v0;

  sub_1ABEB44B0(*v0);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEB49AC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABEB44B0(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEB4A08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEBAC00();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEB4A34@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABEB44B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABEB4A5C()
{
  unsigned __int8 *v0;

  return sub_1ABEB44B0(*v0);
}

uint64_t sub_1ABEB4A64@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEBAC00();
  *a1 = result;
  return result;
}

void sub_1ABEB4A88(_BYTE *a1@<X8>)
{
  *a1 = 58;
}

uint64_t sub_1ABEB4A94()
{
  sub_1ABEB6D10();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEB4ABC()
{
  sub_1ABEB6D10();
  return sub_1ABF32398();
}

uint64_t ScoringConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  int v177;
  int v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  unint64_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  int v207;
  uint64_t v208;
  int v209;
  uint64_t v210;
  int v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  int v215;
  uint64_t v216;
  uint64_t v217;
  int v218;
  int v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  int v225;
  _DWORD *v226;
  _DWORD *v227;
  _DWORD *v228;
  _DWORD *v229;
  _DWORD *v230;
  int v231;
  char v232;
  _BYTE v233[7];
  char v234;
  _BYTE v235[7];
  char v236;
  _BYTE v237[7];
  char v238;
  _BYTE v239[7];
  char v240;
  _BYTE v241[7];
  char v242;
  _BYTE v243[7];
  char v244;
  _BYTE v245[7];
  char v246;
  _BYTE v247[7];
  char v248;
  _BYTE v249[7];
  char v250;
  _BYTE v251[7];
  char v252;
  _BYTE v253[7];
  char v254;
  _BYTE v255[7];
  char v256;
  _BYTE v257[7];
  char v258;
  _BYTE v259[7];
  char v260;
  _BYTE v261[7];
  char v262;
  _BYTE v263[7];
  char v264;
  _BYTE v265[7];
  char v266;
  _BYTE v267[7];
  char v268;
  _BYTE v269[7];
  char v270;
  _BYTE v271[7];
  char v272;
  _BYTE v273[7];
  char v274;
  _BYTE v275[7];
  char v276;
  _BYTE v277[7];
  char v278;
  _BYTE v279[7];
  char v280;
  _BYTE v281[7];
  char v282;
  _BYTE v283[7];
  char v284;
  _BYTE v285[7];
  char v286;
  _BYTE v287[7];
  char v288;
  _BYTE v289[7];
  char v290;
  _BYTE v291[7];
  char v292;
  _BYTE v293[7];
  char v294;
  _BYTE v295[7];
  char v296;
  _BYTE v297[7];
  char v298;
  _BYTE v299[7];
  char v300;
  _BYTE v301[7];
  char v302;
  _BYTE v303[7];
  char v304;
  _BYTE v305[7];
  char v306;
  int v307;
  __int16 v308;
  char v309;
  _BYTE v310[7];
  char v311;
  _BYTE v312[7];
  char v313;
  _BYTE v314[7];
  char v315;
  _BYTE v316[7];
  char v317;
  _BYTE v318[7];
  char v319;
  _BYTE v320[7];
  char v321;
  _BYTE v322[7];
  char v323;
  _BYTE v324[7];
  char v325;
  _BYTE v326[7];
  char v327;
  _BYTE v328[7];
  char v329;
  _BYTE v330[7];
  char v331;
  _BYTE v332[7];
  char v333;
  _BYTE v334[7];
  char v335;
  _BYTE v336[7];
  char v337;
  _BYTE v338[7];
  char v339;
  _BYTE v340[7];
  char v341;
  _BYTE v342[7];
  char v343;
  _BYTE v344[7];
  char v345;
  _BYTE v346[7];
  char v347;
  char v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  uint64_t v355;
  unsigned __int8 v356;
  char v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  unsigned __int8 v371;
  unsigned __int8 v372;
  uint64_t v373;

  sub_1ABEB8108(0, &qword_1ED34FE38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v373 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v106 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEB6D10();
  sub_1ABF3235C();
  if (!v2)
  {
    v9 = v6;
    LOBYTE(v358) = 0;
    v10 = sub_1ABF320A4();
    v12 = v11;
    LOBYTE(v358) = 1;
    v230 = (_DWORD *)sub_1ABF320A4();
    v231 = v13;
    LOBYTE(v358) = 2;
    v228 = (_DWORD *)sub_1ABF320A4();
    LODWORD(v229) = v14;
    LOBYTE(v358) = 3;
    v226 = (_DWORD *)sub_1ABF320A4();
    LODWORD(v227) = v15;
    LOBYTE(v358) = 4;
    v224 = sub_1ABF320A4();
    v225 = v16;
    LOBYTE(v358) = 5;
    v222 = sub_1ABF320A4();
    v223 = v17;
    LOBYTE(v358) = 6;
    v220 = sub_1ABF320A4();
    v221 = v18;
    LOBYTE(v358) = 7;
    v217 = sub_1ABF320A4();
    v219 = v19;
    LOBYTE(v358) = 8;
    v216 = sub_1ABF320A4();
    v218 = v20;
    LOBYTE(v358) = 9;
    v214 = sub_1ABF320A4();
    v215 = v21;
    LOBYTE(v358) = 10;
    v212 = sub_1ABF320A4();
    v213 = v22;
    LOBYTE(v358) = 11;
    v210 = sub_1ABF320A4();
    v211 = v23;
    LOBYTE(v358) = 12;
    v208 = sub_1ABF320A4();
    v209 = v24;
    LOBYTE(v358) = 13;
    v206 = sub_1ABF320A4();
    v207 = v25;
    LOBYTE(v358) = 14;
    v204 = sub_1ABF320A4();
    v205 = v26;
    LOBYTE(v358) = 15;
    v202 = sub_1ABF320A4();
    v203 = v27;
    LOBYTE(v358) = 16;
    v200 = sub_1ABF320A4();
    v201 = v28;
    LOBYTE(v358) = 17;
    v198 = sub_1ABF320A4();
    v199 = v29;
    LOBYTE(v358) = 18;
    v196 = sub_1ABF320A4();
    v197 = v30;
    LOBYTE(v349) = 19;
    v195 = sub_1ABEB6D54();
    sub_1ABF320C8();
    v193 = v358;
    v192 = v359;
    v191 = v360;
    v190 = v361;
    v189 = v362;
    v188 = v363;
    v187 = v364;
    v186 = v365;
    v185 = v366;
    v184 = v367;
    v183 = v368;
    v182 = v369;
    v181 = v370;
    v180 = v371;
    v178 = v372;
    LOBYTE(v349) = 20;
    v179 = sub_1ABF320A4();
    v194 = v31;
    LOBYTE(v349) = 21;
    v176 = sub_1ABF320A4();
    v177 = v32;
    LOBYTE(v349) = 22;
    v174 = sub_1ABF320A4();
    v175 = v33;
    LOBYTE(v349) = 23;
    v172 = sub_1ABF320A4();
    v173 = v34;
    LOBYTE(v349) = 24;
    v170 = sub_1ABF320A4();
    v171 = v35;
    LOBYTE(v349) = 25;
    v168 = sub_1ABF320A4();
    v169 = v36;
    LOBYTE(v349) = 26;
    v166 = sub_1ABF320A4();
    v167 = v37;
    LOBYTE(v349) = 27;
    v164 = sub_1ABF320A4();
    v165 = v38;
    LOBYTE(v349) = 28;
    v162 = sub_1ABF320A4();
    v163 = v39;
    LOBYTE(v349) = 29;
    v160 = sub_1ABF320A4();
    v161 = v40;
    LOBYTE(v349) = 30;
    v158 = sub_1ABF320A4();
    v159 = v41;
    LOBYTE(v349) = 31;
    v156 = sub_1ABF320A4();
    v157 = v42;
    LOBYTE(v349) = 32;
    v154 = sub_1ABF320A4();
    v155 = v43;
    LOBYTE(v349) = 33;
    v152 = sub_1ABF320A4();
    v153 = v44;
    LOBYTE(v349) = 34;
    v150 = sub_1ABF320A4();
    v151 = v45;
    LOBYTE(v349) = 35;
    v148 = sub_1ABF320A4();
    v149 = v46;
    LOBYTE(v349) = 36;
    v146 = sub_1ABF320A4();
    v147 = v47;
    LOBYTE(v349) = 37;
    v144 = sub_1ABF320A4();
    v145 = v48;
    LOBYTE(v349) = 38;
    v142 = sub_1ABF320A4();
    v143 = v49;
    LOBYTE(v349) = 39;
    v140 = sub_1ABF320A4();
    v141 = v50;
    LOBYTE(v349) = 40;
    v138 = sub_1ABF320A4();
    v139 = v51;
    LOBYTE(v349) = 41;
    v136 = sub_1ABF320A4();
    v137 = v52;
    LOBYTE(v349) = 42;
    v134 = sub_1ABF320A4();
    v135 = v53;
    LOBYTE(v349) = 43;
    v132 = sub_1ABF320A4();
    v133 = v54;
    LOBYTE(v349) = 44;
    v130 = sub_1ABF320A4();
    v131 = v55;
    LOBYTE(v349) = 45;
    v124 = sub_1ABF320A4();
    v129 = v56;
    LOBYTE(v349) = 46;
    v122 = sub_1ABF320A4();
    v128 = v57;
    LOBYTE(v349) = 47;
    v120 = sub_1ABF320A4();
    v127 = v58;
    LOBYTE(v349) = 48;
    v118 = sub_1ABF320A4();
    v126 = v59;
    LOBYTE(v349) = 49;
    v116 = sub_1ABF320A4();
    v125 = v60;
    LOBYTE(v349) = 50;
    v114 = sub_1ABF320A4();
    v123 = v61;
    LOBYTE(v349) = 51;
    v112 = sub_1ABF320A4();
    v121 = v62;
    LOBYTE(v349) = 52;
    v110 = sub_1ABF320A4();
    v119 = v63;
    LOBYTE(v349) = 53;
    v109 = sub_1ABF320A4();
    v117 = v64;
    LOBYTE(v349) = 54;
    v108 = sub_1ABF320A4();
    v115 = v65;
    LOBYTE(v349) = 55;
    v107 = sub_1ABF320A4();
    v113 = v66;
    LOBYTE(v349) = 56;
    v106 = sub_1ABF320A4();
    v111 = v67;
    v348 = 57;
    sub_1ABF320C8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v373);
    v309 = v178;
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 16) = v230;
    *(_QWORD *)(a2 + 32) = v228;
    *(_QWORD *)(a2 + 48) = v226;
    *(_QWORD *)(a2 + 64) = v224;
    *(_QWORD *)(a2 + 80) = v222;
    *(_QWORD *)(a2 + 96) = v220;
    *(_QWORD *)(a2 + 112) = v217;
    *(_QWORD *)(a2 + 128) = v216;
    *(_QWORD *)(a2 + 144) = v214;
    *(_QWORD *)(a2 + 160) = v212;
    *(_QWORD *)(a2 + 176) = v210;
    *(_QWORD *)(a2 + 192) = v208;
    *(_QWORD *)(a2 + 208) = v206;
    *(_QWORD *)(a2 + 224) = v204;
    *(_QWORD *)(a2 + 240) = v202;
    *(_QWORD *)(a2 + 256) = v200;
    *(_QWORD *)(a2 + 272) = v198;
    *(_QWORD *)(a2 + 288) = v196;
    v69 = v192;
    *(_QWORD *)(a2 + 304) = v193;
    *(_QWORD *)(a2 + 312) = v69;
    v70 = v190;
    *(_QWORD *)(a2 + 320) = v191;
    *(_QWORD *)(a2 + 328) = v70;
    v71 = v188;
    *(_QWORD *)(a2 + 336) = v189;
    *(_QWORD *)(a2 + 344) = v71;
    v72 = v186;
    *(_QWORD *)(a2 + 352) = v187;
    *(_QWORD *)(a2 + 360) = v72;
    v73 = v184;
    *(_QWORD *)(a2 + 368) = v185;
    *(_QWORD *)(a2 + 376) = v73;
    v74 = v182;
    *(_QWORD *)(a2 + 384) = v183;
    *(_QWORD *)(a2 + 392) = v74;
    *(_QWORD *)(a2 + 400) = v181;
    *(_BYTE *)(a2 + 408) = v180;
    *(_QWORD *)(a2 + 416) = v179;
    *(_QWORD *)(a2 + 432) = v176;
    *(_QWORD *)(a2 + 448) = v174;
    *(_QWORD *)(a2 + 464) = v172;
    *(_QWORD *)(a2 + 480) = v170;
    *(_QWORD *)(a2 + 496) = v168;
    *(_QWORD *)(a2 + 512) = v166;
    *(_QWORD *)(a2 + 528) = v164;
    *(_QWORD *)(a2 + 544) = v162;
    *(_QWORD *)(a2 + 560) = v160;
    *(_QWORD *)(a2 + 576) = v158;
    *(_QWORD *)(a2 + 592) = v156;
    *(_QWORD *)(a2 + 608) = v154;
    *(_QWORD *)(a2 + 624) = v152;
    *(_QWORD *)(a2 + 640) = v150;
    *(_QWORD *)(a2 + 656) = v148;
    *(_QWORD *)(a2 + 672) = v146;
    *(_QWORD *)(a2 + 688) = v144;
    *(_QWORD *)(a2 + 704) = v142;
    *(_QWORD *)(a2 + 720) = v140;
    *(_QWORD *)(a2 + 736) = v138;
    *(_QWORD *)(a2 + 752) = v136;
    *(_QWORD *)(a2 + 768) = v134;
    *(_QWORD *)(a2 + 784) = v132;
    *(_QWORD *)(a2 + 800) = v130;
    *(_QWORD *)(a2 + 816) = v124;
    *(_QWORD *)(a2 + 832) = v122;
    *(_QWORD *)(a2 + 848) = v120;
    *(_QWORD *)(a2 + 864) = v118;
    *(_QWORD *)(a2 + 880) = v116;
    *(_QWORD *)(a2 + 896) = v114;
    *(_QWORD *)(a2 + 912) = v112;
    *(_QWORD *)(a2 + 928) = v110;
    *(_QWORD *)(a2 + 944) = v109;
    *(_QWORD *)(a2 + 960) = v108;
    *(_QWORD *)(a2 + 976) = v107;
    *(_QWORD *)(a2 + 992) = v106;
    v347 = v12 & 1;
    v345 = v231 & 1;
    v343 = v229 & 1;
    v341 = v227 & 1;
    v339 = v225 & 1;
    v337 = v223 & 1;
    v335 = v221 & 1;
    v333 = v219 & 1;
    v331 = v218 & 1;
    v329 = v215 & 1;
    v327 = v213 & 1;
    v325 = v211 & 1;
    v323 = v209 & 1;
    v321 = v207 & 1;
    v319 = v205 & 1;
    v317 = v203 & 1;
    v315 = v201 & 1;
    v313 = v199 & 1;
    v311 = v197 & 1;
    v306 = v194 & 1;
    v304 = v177 & 1;
    v302 = v175 & 1;
    v300 = v173 & 1;
    v298 = v171 & 1;
    v296 = v169 & 1;
    v294 = v167 & 1;
    v292 = v165 & 1;
    v290 = v163 & 1;
    v288 = v161 & 1;
    v373 = v355;
    v286 = v159 & 1;
    v231 = v356;
    v284 = v157 & 1;
    v282 = v155 & 1;
    v280 = v153 & 1;
    v278 = v151 & 1;
    v276 = v149 & 1;
    v274 = v147 & 1;
    v272 = v145 & 1;
    v270 = v143 & 1;
    v268 = v141 & 1;
    v266 = v139 & 1;
    v264 = v137 & 1;
    v262 = v135 & 1;
    v260 = v133 & 1;
    v258 = v131 & 1;
    v256 = v129 & 1;
    v254 = v128 & 1;
    v252 = v127 & 1;
    v250 = v126 & 1;
    v248 = v125 & 1;
    v246 = v123 & 1;
    v244 = v121 & 1;
    v242 = v119 & 1;
    v240 = v117 & 1;
    v238 = v115 & 1;
    v236 = v113 & 1;
    v234 = v111 & 1;
    v232 = v357;
    *(_BYTE *)(a2 + 8) = v12 & 1;
    v227 = (_DWORD *)(a2 + 569);
    *(_DWORD *)(a2 + 9) = *(_DWORD *)v346;
    *(_DWORD *)(a2 + 12) = *(_DWORD *)&v346[3];
    *(_BYTE *)(a2 + 24) = v345;
    *(_DWORD *)(a2 + 25) = *(_DWORD *)v344;
    *(_DWORD *)(a2 + 28) = *(_DWORD *)&v344[3];
    *(_BYTE *)(a2 + 40) = v343;
    v230 = (_DWORD *)(a2 + 601);
    *(_DWORD *)(a2 + 41) = *(_DWORD *)v342;
    *(_DWORD *)(a2 + 44) = *(_DWORD *)&v342[3];
    *(_BYTE *)(a2 + 56) = v341;
    v229 = (_DWORD *)(a2 + 617);
    *(_DWORD *)(a2 + 60) = *(_DWORD *)&v340[3];
    *(_DWORD *)(a2 + 57) = *(_DWORD *)v340;
    *(_BYTE *)(a2 + 72) = v339;
    v228 = (_DWORD *)(a2 + 633);
    *(_DWORD *)(a2 + 76) = *(_DWORD *)&v338[3];
    *(_DWORD *)(a2 + 73) = *(_DWORD *)v338;
    *(_BYTE *)(a2 + 88) = v337;
    v226 = (_DWORD *)(a2 + 649);
    *(_DWORD *)(a2 + 92) = *(_DWORD *)&v336[3];
    *(_DWORD *)(a2 + 89) = *(_DWORD *)v336;
    *(_BYTE *)(a2 + 104) = v335;
    LODWORD(v74) = *(_DWORD *)v334;
    *(_DWORD *)(a2 + 108) = *(_DWORD *)&v334[3];
    *(_DWORD *)(a2 + 105) = v74;
    *(_BYTE *)(a2 + 120) = v333;
    LODWORD(v74) = *(_DWORD *)v332;
    *(_DWORD *)(a2 + 124) = *(_DWORD *)&v332[3];
    *(_DWORD *)(a2 + 121) = v74;
    *(_BYTE *)(a2 + 136) = v331;
    LODWORD(v74) = *(_DWORD *)v330;
    *(_DWORD *)(a2 + 140) = *(_DWORD *)&v330[3];
    *(_DWORD *)(a2 + 137) = v74;
    *(_BYTE *)(a2 + 152) = v329;
    LODWORD(v74) = *(_DWORD *)v328;
    *(_DWORD *)(a2 + 156) = *(_DWORD *)&v328[3];
    *(_DWORD *)(a2 + 153) = v74;
    *(_BYTE *)(a2 + 168) = v327;
    LODWORD(v74) = *(_DWORD *)v326;
    *(_DWORD *)(a2 + 172) = *(_DWORD *)&v326[3];
    *(_DWORD *)(a2 + 169) = v74;
    *(_BYTE *)(a2 + 184) = v325;
    LODWORD(v74) = *(_DWORD *)v324;
    *(_DWORD *)(a2 + 188) = *(_DWORD *)&v324[3];
    *(_DWORD *)(a2 + 185) = v74;
    *(_BYTE *)(a2 + 200) = v323;
    LODWORD(v74) = *(_DWORD *)v322;
    *(_DWORD *)(a2 + 204) = *(_DWORD *)&v322[3];
    *(_DWORD *)(a2 + 201) = v74;
    *(_BYTE *)(a2 + 216) = v321;
    LODWORD(v74) = *(_DWORD *)v320;
    *(_DWORD *)(a2 + 220) = *(_DWORD *)&v320[3];
    *(_DWORD *)(a2 + 217) = v74;
    *(_BYTE *)(a2 + 232) = v319;
    LODWORD(v74) = *(_DWORD *)v318;
    *(_DWORD *)(a2 + 236) = *(_DWORD *)&v318[3];
    *(_DWORD *)(a2 + 233) = v74;
    *(_BYTE *)(a2 + 248) = v317;
    LODWORD(v74) = *(_DWORD *)v316;
    *(_DWORD *)(a2 + 252) = *(_DWORD *)&v316[3];
    *(_DWORD *)(a2 + 249) = v74;
    *(_BYTE *)(a2 + 264) = v315;
    v75 = *(_DWORD *)v314;
    *(_DWORD *)(a2 + 268) = *(_DWORD *)&v314[3];
    *(_DWORD *)(a2 + 265) = v75;
    *(_BYTE *)(a2 + 280) = v313;
    v76 = *(_DWORD *)v312;
    *(_DWORD *)(a2 + 284) = *(_DWORD *)&v312[3];
    *(_DWORD *)(a2 + 281) = v76;
    *(_BYTE *)(a2 + 296) = v311;
    v77 = *(_DWORD *)v310;
    *(_DWORD *)(a2 + 300) = *(_DWORD *)&v310[3];
    *(_DWORD *)(a2 + 297) = v77;
    *(_DWORD *)(a2 + 410) = v307;
    *(_DWORD *)(a2 + 428) = *(_DWORD *)&v305[3];
    *(_DWORD *)(a2 + 425) = *(_DWORD *)v305;
    *(_DWORD *)(a2 + 444) = *(_DWORD *)&v303[3];
    *(_DWORD *)(a2 + 441) = *(_DWORD *)v303;
    *(_DWORD *)(a2 + 460) = *(_DWORD *)&v301[3];
    *(_DWORD *)(a2 + 457) = *(_DWORD *)v301;
    *(_DWORD *)(a2 + 476) = *(_DWORD *)&v299[3];
    *(_DWORD *)(a2 + 473) = *(_DWORD *)v299;
    *(_DWORD *)(a2 + 492) = *(_DWORD *)&v297[3];
    *(_DWORD *)(a2 + 489) = *(_DWORD *)v297;
    *(_DWORD *)(a2 + 508) = *(_DWORD *)&v295[3];
    *(_DWORD *)(a2 + 505) = *(_DWORD *)v295;
    *(_DWORD *)(a2 + 524) = *(_DWORD *)&v293[3];
    *(_DWORD *)(a2 + 521) = *(_DWORD *)v293;
    *(_DWORD *)(a2 + 540) = *(_DWORD *)&v291[3];
    *(_DWORD *)(a2 + 537) = *(_DWORD *)v291;
    *(_DWORD *)(a2 + 556) = *(_DWORD *)&v289[3];
    *(_DWORD *)(a2 + 553) = *(_DWORD *)v289;
    *(_DWORD *)(a2 + 572) = *(_DWORD *)&v287[3];
    *v227 = *(_DWORD *)v287;
    *(_DWORD *)(a2 + 588) = *(_DWORD *)&v285[3];
    *(_DWORD *)(a2 + 585) = *(_DWORD *)v285;
    v78 = v349;
    v79 = v350;
    v80 = v351;
    v81 = v352;
    v82 = v353;
    v83 = v354;
    *(_BYTE *)(a2 + 409) = v309;
    *(_WORD *)(a2 + 414) = v308;
    *(_BYTE *)(a2 + 424) = v306;
    *(_BYTE *)(a2 + 440) = v304;
    *(_BYTE *)(a2 + 456) = v302;
    *(_BYTE *)(a2 + 472) = v300;
    *(_BYTE *)(a2 + 488) = v298;
    *(_BYTE *)(a2 + 504) = v296;
    *(_BYTE *)(a2 + 520) = v294;
    *(_BYTE *)(a2 + 536) = v292;
    *(_BYTE *)(a2 + 552) = v290;
    *(_BYTE *)(a2 + 568) = v288;
    *(_BYTE *)(a2 + 584) = v286;
    *(_BYTE *)(a2 + 600) = v284;
    *(_DWORD *)(a2 + 604) = *(_DWORD *)&v283[3];
    *v230 = *(_DWORD *)v283;
    *(_BYTE *)(a2 + 616) = v282;
    v84 = *(_DWORD *)v281;
    *(_DWORD *)(a2 + 620) = *(_DWORD *)&v281[3];
    *v229 = v84;
    *(_BYTE *)(a2 + 632) = v280;
    v85 = *(_DWORD *)v279;
    *(_DWORD *)(a2 + 636) = *(_DWORD *)&v279[3];
    *v228 = v85;
    *(_BYTE *)(a2 + 648) = v278;
    v86 = *(_DWORD *)v277;
    *(_DWORD *)(a2 + 652) = *(_DWORD *)&v277[3];
    *v226 = v86;
    *(_BYTE *)(a2 + 664) = v276;
    v87 = *(_DWORD *)v275;
    *(_DWORD *)(a2 + 668) = *(_DWORD *)&v275[3];
    *(_DWORD *)(a2 + 665) = v87;
    *(_BYTE *)(a2 + 680) = v274;
    v88 = *(_DWORD *)v273;
    *(_DWORD *)(a2 + 684) = *(_DWORD *)&v273[3];
    *(_DWORD *)(a2 + 681) = v88;
    *(_BYTE *)(a2 + 696) = v272;
    v89 = *(_DWORD *)v271;
    *(_DWORD *)(a2 + 700) = *(_DWORD *)&v271[3];
    *(_DWORD *)(a2 + 697) = v89;
    *(_BYTE *)(a2 + 712) = v270;
    v90 = *(_DWORD *)v269;
    *(_DWORD *)(a2 + 716) = *(_DWORD *)&v269[3];
    *(_DWORD *)(a2 + 713) = v90;
    *(_BYTE *)(a2 + 728) = v268;
    v91 = *(_DWORD *)v267;
    *(_DWORD *)(a2 + 732) = *(_DWORD *)&v267[3];
    *(_DWORD *)(a2 + 729) = v91;
    *(_BYTE *)(a2 + 744) = v266;
    v92 = *(_DWORD *)v265;
    *(_DWORD *)(a2 + 748) = *(_DWORD *)&v265[3];
    *(_DWORD *)(a2 + 745) = v92;
    *(_BYTE *)(a2 + 760) = v264;
    v93 = *(_DWORD *)v263;
    *(_DWORD *)(a2 + 764) = *(_DWORD *)&v263[3];
    *(_DWORD *)(a2 + 761) = v93;
    *(_BYTE *)(a2 + 776) = v262;
    v94 = *(_DWORD *)v261;
    *(_DWORD *)(a2 + 780) = *(_DWORD *)&v261[3];
    *(_DWORD *)(a2 + 777) = v94;
    *(_BYTE *)(a2 + 792) = v260;
    v95 = *(_DWORD *)v259;
    *(_DWORD *)(a2 + 796) = *(_DWORD *)&v259[3];
    *(_DWORD *)(a2 + 793) = v95;
    *(_BYTE *)(a2 + 808) = v258;
    v96 = *(_DWORD *)v257;
    *(_DWORD *)(a2 + 812) = *(_DWORD *)&v257[3];
    *(_DWORD *)(a2 + 809) = v96;
    *(_BYTE *)(a2 + 824) = v256;
    v97 = *(_DWORD *)v255;
    *(_DWORD *)(a2 + 828) = *(_DWORD *)&v255[3];
    *(_DWORD *)(a2 + 825) = v97;
    *(_BYTE *)(a2 + 840) = v254;
    v98 = *(_DWORD *)v253;
    *(_DWORD *)(a2 + 844) = *(_DWORD *)&v253[3];
    *(_DWORD *)(a2 + 841) = v98;
    *(_BYTE *)(a2 + 856) = v252;
    v99 = *(_DWORD *)v251;
    *(_DWORD *)(a2 + 860) = *(_DWORD *)&v251[3];
    *(_DWORD *)(a2 + 857) = v99;
    *(_BYTE *)(a2 + 872) = v250;
    v100 = *(_DWORD *)v249;
    *(_DWORD *)(a2 + 876) = *(_DWORD *)&v249[3];
    *(_DWORD *)(a2 + 873) = v100;
    *(_BYTE *)(a2 + 888) = v248;
    v101 = *(_DWORD *)v247;
    *(_DWORD *)(a2 + 892) = *(_DWORD *)&v247[3];
    *(_DWORD *)(a2 + 889) = v101;
    *(_BYTE *)(a2 + 904) = v246;
    v102 = *(_DWORD *)v245;
    *(_DWORD *)(a2 + 908) = *(_DWORD *)&v245[3];
    *(_DWORD *)(a2 + 905) = v102;
    *(_BYTE *)(a2 + 920) = v244;
    v103 = *(_DWORD *)v243;
    *(_DWORD *)(a2 + 924) = *(_DWORD *)&v243[3];
    *(_DWORD *)(a2 + 921) = v103;
    *(_BYTE *)(a2 + 936) = v242;
    v104 = *(_DWORD *)v241;
    *(_DWORD *)(a2 + 940) = *(_DWORD *)&v241[3];
    *(_DWORD *)(a2 + 937) = v104;
    *(_BYTE *)(a2 + 952) = v240;
    v105 = *(_DWORD *)v239;
    *(_DWORD *)(a2 + 956) = *(_DWORD *)&v239[3];
    *(_DWORD *)(a2 + 953) = v105;
    *(_BYTE *)(a2 + 968) = v238;
    LODWORD(v74) = *(_DWORD *)v237;
    *(_DWORD *)(a2 + 972) = *(_DWORD *)&v237[3];
    *(_DWORD *)(a2 + 969) = v74;
    *(_BYTE *)(a2 + 984) = v236;
    LODWORD(v74) = *(_DWORD *)v235;
    *(_DWORD *)(a2 + 988) = *(_DWORD *)&v235[3];
    *(_DWORD *)(a2 + 985) = v74;
    *(_BYTE *)(a2 + 1000) = v234;
    LODWORD(v74) = *(_DWORD *)v233;
    *(_DWORD *)(a2 + 1004) = *(_DWORD *)&v233[3];
    *(_DWORD *)(a2 + 1001) = v74;
    *(_OWORD *)(a2 + 1008) = v78;
    *(_OWORD *)(a2 + 1024) = v79;
    *(_OWORD *)(a2 + 1040) = v80;
    *(_OWORD *)(a2 + 1056) = v81;
    *(_OWORD *)(a2 + 1072) = v82;
    *(_OWORD *)(a2 + 1088) = v83;
    *(_QWORD *)(a2 + 1104) = v373;
    *(_BYTE *)(a2 + 1112) = v231;
    *(_BYTE *)(a2 + 1113) = v232;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1ABEB6D10()
{
  unint64_t result;

  result = qword_1ED34ED30;
  if (!qword_1ED34ED30)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A72C, &type metadata for ScoringConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED30);
  }
  return result;
}

unint64_t sub_1ABEB6D54()
{
  unint64_t result;

  result = qword_1ED34EC30;
  if (!qword_1ED34EC30)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for CohortConfig, &type metadata for CohortConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34EC30);
  }
  return result;
}

uint64_t ScoringConfig.encode(to:)(_QWORD *a1)
{
  char **v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  char *v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v11;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  char *v21;
  char *v22;
  int v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  int v37;
  char *v38;
  int v39;
  int v40;
  char *v41;
  int v42;
  char *v43;
  int v44;
  char *v45;
  int v46;
  char *v47;
  int v48;
  char *v49;
  int v50;
  int v51;
  char *v52;
  char *v53;
  int v54;
  char *v55;
  int v56;
  char *v57;
  int v58;
  char *v59;
  int v60;
  char *v61;
  int v62;
  char *v63;
  int v64;
  char *v65;
  int v66;
  char *v67;
  int v68;
  char *v69;
  int v70;
  char *v71;
  int v72;
  char *v73;
  int v74;
  char *v75;
  int v76;
  char *v77;
  int v78;
  char *v79;
  int v80;
  char *v81;
  int v82;
  char *v83;
  int v84;
  char *v85;
  int v86;
  char *v87;
  int v88;
  char *v89;
  int v90;
  char *v91;
  int v92;
  char *v93;
  int v94;
  char *v95;
  int v96;
  char *v97;
  int v98;
  char *v99;
  int v100;
  char *v101;
  int v102;
  char *v103;
  int v104;
  char *v105;
  int v106;
  char *v107;
  int v108;
  char *v109;
  int v110;
  char *v111;
  int v112;
  char *v113;
  int v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  int v124;
  char *v125;
  int v126;
  char *v127;
  int v128;
  char *v129;
  int v130;
  int v131;
  char *v132;
  int v133;
  char *v134;
  int v135;
  char *v136;
  char *v137;
  int v138;
  char *v139;
  int v140;
  char *v141;
  int v142;
  char *v143;
  int v144;
  char *v145;
  int v146;
  char *v147;
  int v148;
  char *v149;
  char *v150;
  char *v151;
  int v152;
  char *v153;
  int v154;
  char *v155;
  unint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char v175;
  char v176;
  int v177;
  char v178;

  sub_1ABEB8108(0, &qword_1ED34FF00, MEMORY[0x1E0DED170]);
  v161 = v3;
  v158 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - v4;
  v159 = *v1;
  LODWORD(v157) = *((unsigned __int8 *)v1 + 8);
  v6 = (unint64_t)v1[2];
  v177 = *((unsigned __int8 *)v1 + 24);
  v155 = v1[4];
  v156 = v6;
  v154 = *((unsigned __int8 *)v1 + 40);
  v153 = v1[6];
  v152 = *((unsigned __int8 *)v1 + 56);
  v147 = v1[8];
  v148 = *((unsigned __int8 *)v1 + 72);
  v145 = v1[10];
  v146 = *((unsigned __int8 *)v1 + 88);
  v143 = v1[12];
  v144 = *((unsigned __int8 *)v1 + 104);
  v141 = v1[14];
  v142 = *((unsigned __int8 *)v1 + 120);
  v139 = v1[16];
  v140 = *((unsigned __int8 *)v1 + 136);
  v137 = v1[18];
  v138 = *((unsigned __int8 *)v1 + 152);
  v136 = v1[20];
  v23 = *((unsigned __int8 *)v1 + 280);
  v37 = *((unsigned __int8 *)v1 + 296);
  v40 = *((unsigned __int8 *)v1 + 409);
  v42 = *((unsigned __int8 *)v1 + 424);
  v44 = *((unsigned __int8 *)v1 + 440);
  v46 = *((unsigned __int8 *)v1 + 456);
  v48 = *((unsigned __int8 *)v1 + 472);
  v50 = *((unsigned __int8 *)v1 + 488);
  v51 = *((unsigned __int8 *)v1 + 504);
  v135 = *((unsigned __int8 *)v1 + 168);
  v134 = v1[22];
  v133 = *((unsigned __int8 *)v1 + 184);
  v132 = v1[24];
  v131 = *((unsigned __int8 *)v1 + 200);
  v129 = v1[26];
  v130 = *((unsigned __int8 *)v1 + 216);
  v127 = v1[28];
  v128 = *((unsigned __int8 *)v1 + 232);
  v125 = v1[30];
  v126 = *((unsigned __int8 *)v1 + 248);
  v123 = v1[32];
  v124 = *((unsigned __int8 *)v1 + 264);
  v22 = v1[34];
  v24 = v1[36];
  v25 = v1[38];
  v26 = v1[39];
  v27 = v1[40];
  v28 = v1[41];
  v29 = v1[42];
  v30 = v1[43];
  v31 = v1[44];
  v32 = v1[45];
  v33 = v1[46];
  v34 = v1[47];
  v35 = v1[48];
  v36 = v1[49];
  v38 = v1[50];
  v39 = *((unsigned __int8 *)v1 + 408);
  v41 = v1[52];
  v43 = v1[54];
  v45 = v1[56];
  v47 = v1[58];
  v49 = v1[60];
  v52 = v1[62];
  v53 = v1[64];
  v54 = *((unsigned __int8 *)v1 + 520);
  v55 = v1[66];
  v56 = *((unsigned __int8 *)v1 + 536);
  v57 = v1[68];
  v58 = *((unsigned __int8 *)v1 + 552);
  v59 = v1[70];
  v60 = *((unsigned __int8 *)v1 + 568);
  v61 = v1[72];
  v62 = *((unsigned __int8 *)v1 + 584);
  v63 = v1[74];
  v64 = *((unsigned __int8 *)v1 + 600);
  v65 = v1[76];
  v66 = *((unsigned __int8 *)v1 + 616);
  v67 = v1[78];
  v68 = *((unsigned __int8 *)v1 + 632);
  v69 = v1[80];
  v70 = *((unsigned __int8 *)v1 + 648);
  v71 = v1[82];
  v72 = *((unsigned __int8 *)v1 + 664);
  v73 = v1[84];
  v74 = *((unsigned __int8 *)v1 + 680);
  v75 = v1[86];
  v76 = *((unsigned __int8 *)v1 + 696);
  v77 = v1[88];
  v78 = *((unsigned __int8 *)v1 + 712);
  v79 = v1[90];
  v80 = *((unsigned __int8 *)v1 + 728);
  v81 = v1[92];
  v82 = *((unsigned __int8 *)v1 + 744);
  v83 = v1[94];
  v84 = *((unsigned __int8 *)v1 + 760);
  v85 = v1[96];
  v86 = *((unsigned __int8 *)v1 + 776);
  v87 = v1[98];
  v88 = *((unsigned __int8 *)v1 + 792);
  v89 = v1[100];
  v90 = *((unsigned __int8 *)v1 + 808);
  v91 = v1[102];
  v92 = *((unsigned __int8 *)v1 + 824);
  v93 = v1[104];
  v94 = *((unsigned __int8 *)v1 + 840);
  v95 = v1[106];
  v96 = *((unsigned __int8 *)v1 + 856);
  v97 = v1[108];
  v98 = *((unsigned __int8 *)v1 + 872);
  v99 = v1[110];
  v100 = *((unsigned __int8 *)v1 + 888);
  v101 = v1[112];
  v102 = *((unsigned __int8 *)v1 + 904);
  v103 = v1[114];
  v104 = *((unsigned __int8 *)v1 + 920);
  v105 = v1[116];
  v106 = *((unsigned __int8 *)v1 + 936);
  v107 = v1[118];
  v108 = *((unsigned __int8 *)v1 + 952);
  v109 = v1[120];
  v110 = *((unsigned __int8 *)v1 + 968);
  v111 = v1[122];
  v112 = *((unsigned __int8 *)v1 + 984);
  v113 = v1[124];
  v114 = *((unsigned __int8 *)v1 + 1000);
  v151 = v1[126];
  v150 = v1[127];
  v149 = v1[128];
  v122 = v1[129];
  v121 = v1[130];
  v120 = v1[131];
  v119 = v1[132];
  v118 = v1[133];
  v117 = v1[134];
  v116 = v1[135];
  v115 = v1[136];
  v7 = v1[137];
  v8 = v1[138];
  v9 = *((unsigned __int8 *)v1 + 1112);
  v10 = *((unsigned __int8 *)v1 + 1113);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEB6D10();
  sub_1ABF32368();
  LOBYTE(v162) = 0;
  v11 = v160;
  v159 = v5;
  sub_1ABF32158();
  v160 = v11;
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v159, v161);
  v19 = v10;
  v20 = v9;
  v21 = v8;
  v157 = v7;
  v13 = v149;
  v14 = v150;
  v15 = v151;
  v16 = v158;
  LOBYTE(v162) = 1;
  sub_1ABF32158();
  LOBYTE(v162) = 2;
  sub_1ABF32158();
  LOBYTE(v162) = 3;
  sub_1ABF32158();
  LOBYTE(v162) = 4;
  sub_1ABF32158();
  LOBYTE(v162) = 5;
  sub_1ABF32158();
  LOBYTE(v162) = 6;
  sub_1ABF32158();
  LOBYTE(v162) = 7;
  sub_1ABF32158();
  LOBYTE(v162) = 8;
  sub_1ABF32158();
  v160 = 0;
  LOBYTE(v162) = 9;
  sub_1ABF32158();
  v160 = 0;
  LOBYTE(v162) = 10;
  sub_1ABF32158();
  v160 = 0;
  LOBYTE(v162) = 11;
  sub_1ABF32158();
  v160 = 0;
  LOBYTE(v162) = 12;
  sub_1ABF32158();
  v160 = 0;
  LOBYTE(v162) = 13;
  sub_1ABF32158();
  v160 = 0;
  LOBYTE(v162) = 14;
  sub_1ABF32158();
  v160 = 0;
  LOBYTE(v162) = 15;
  sub_1ABF32158();
  v160 = 0;
  LOBYTE(v162) = 16;
  sub_1ABF32158();
  v160 = 0;
  LOBYTE(v162) = 17;
  sub_1ABF32158();
  v160 = 0;
  LOBYTE(v162) = 18;
  sub_1ABF32158();
  v160 = 0;
  v162 = v25;
  v163 = v26;
  v164 = v27;
  v165 = v28;
  v166 = v29;
  v167 = v30;
  v168 = v31;
  v169 = v32;
  v170 = v33;
  v171 = v34;
  v172 = v35;
  v173 = v36;
  v174 = v38;
  v175 = v39;
  v176 = v40;
  v178 = 19;
  v17 = sub_1ABEB8164();
  v18 = v160;
  v156 = v17;
  sub_1ABF3217C();
  v160 = v18;
  if (!v18)
  {
    LOBYTE(v162) = 20;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 21;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 22;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 23;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 24;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 25;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 26;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 27;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 28;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 29;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 30;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 31;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 32;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 33;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 34;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 35;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 36;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 37;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 38;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 39;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 40;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 41;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 42;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 43;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 44;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 45;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 46;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 47;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 48;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 49;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 50;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 51;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 52;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 53;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 54;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 55;
    sub_1ABF32158();
    v160 = 0;
    LOBYTE(v162) = 56;
    sub_1ABF32158();
    v160 = 0;
    v162 = v15;
    v163 = v14;
    v164 = v13;
    v165 = v122;
    v166 = v121;
    v167 = v120;
    v168 = v119;
    v169 = v118;
    v170 = v117;
    v171 = v116;
    v172 = v115;
    v173 = v157;
    v174 = v21;
    v175 = v20;
    v176 = v19;
    v178 = 57;
    sub_1ABF3217C();
    v160 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v159, v161);
}

void sub_1ABEB8108(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABEB6D10();
    v7 = a3(a1, &type metadata for ScoringConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1ABEB8164()
{
  unint64_t result;

  result = qword_1ED34EC28;
  if (!qword_1ED34EC28)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for CohortConfig, &type metadata for CohortConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34EC28);
  }
  return result;
}

uint64_t ScoringConfig.hash(into:)()
{
  _BYTE *v0;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;

  v2 = v0[24];
  v3 = v0[40];
  v4 = v0[56];
  v5 = v0[72];
  v6 = v0[88];
  v7 = v0[104];
  v8 = v0[120];
  v9 = v0[136];
  v11 = v0[152];
  v18 = v0[280];
  v19 = v0[296];
  v20 = v0[409];
  v21 = v0[424];
  v22 = v0[440];
  v23 = v0[456];
  v24 = v0[472];
  v25 = v0[488];
  v26 = v0[504];
  v10 = v0[168];
  v12 = v0[184];
  v13 = v0[200];
  v14 = v0[216];
  v15 = v0[232];
  v16 = v0[248];
  v17 = v0[264];
  v27 = v0[520];
  v28 = v0[536];
  v29 = v0[552];
  v30 = v0[568];
  v31 = v0[584];
  v32 = v0[600];
  v33 = v0[616];
  v34 = v0[632];
  v35 = v0[648];
  v36 = v0[664];
  v37 = v0[680];
  v38 = v0[696];
  v39 = v0[712];
  v40 = v0[728];
  v41 = v0[744];
  v42 = v0[760];
  v43 = v0[776];
  v44 = v0[792];
  v45 = v0[808];
  v46 = v0[824];
  v47 = v0[840];
  v48 = v0[856];
  v49 = v0[872];
  v50 = v0[888];
  v51 = v0[904];
  v52 = v0[920];
  v53 = v0[936];
  v54 = v0[952];
  v55 = v0[968];
  v56 = v0[984];
  v57 = v0[1000];
  v58 = v0[1113];
  if (v0[8] == 1)
  {
    sub_1ABF32320();
    if (!v2)
      goto LABEL_3;
  }
  else
  {
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v2)
    {
LABEL_3:
      sub_1ABF32320();
      sub_1ABF3232C();
      if (!v3)
        goto LABEL_4;
      goto LABEL_62;
    }
  }
  sub_1ABF32320();
  if (!v3)
  {
LABEL_4:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v4)
      goto LABEL_5;
    goto LABEL_63;
  }
LABEL_62:
  sub_1ABF32320();
  if (!v4)
  {
LABEL_5:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v5)
      goto LABEL_6;
    goto LABEL_64;
  }
LABEL_63:
  sub_1ABF32320();
  if (!v5)
  {
LABEL_6:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v6)
      goto LABEL_7;
    goto LABEL_65;
  }
LABEL_64:
  sub_1ABF32320();
  if (!v6)
  {
LABEL_7:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v7)
      goto LABEL_8;
    goto LABEL_66;
  }
LABEL_65:
  sub_1ABF32320();
  if (!v7)
  {
LABEL_8:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v8)
      goto LABEL_9;
    goto LABEL_67;
  }
LABEL_66:
  sub_1ABF32320();
  if (!v8)
  {
LABEL_9:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v9)
      goto LABEL_10;
    goto LABEL_68;
  }
LABEL_67:
  sub_1ABF32320();
  if (!v9)
  {
LABEL_10:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v11)
      goto LABEL_11;
    goto LABEL_69;
  }
LABEL_68:
  sub_1ABF32320();
  if (!v11)
  {
LABEL_11:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v10)
      goto LABEL_12;
    goto LABEL_70;
  }
LABEL_69:
  sub_1ABF32320();
  if (!v10)
  {
LABEL_12:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v12)
      goto LABEL_13;
    goto LABEL_71;
  }
LABEL_70:
  sub_1ABF32320();
  if (!v12)
  {
LABEL_13:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v13)
      goto LABEL_14;
    goto LABEL_72;
  }
LABEL_71:
  sub_1ABF32320();
  if (!v13)
  {
LABEL_14:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v14)
      goto LABEL_15;
    goto LABEL_73;
  }
LABEL_72:
  sub_1ABF32320();
  if (!v14)
  {
LABEL_15:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v15)
      goto LABEL_16;
    goto LABEL_74;
  }
LABEL_73:
  sub_1ABF32320();
  if (!v15)
  {
LABEL_16:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v16)
      goto LABEL_17;
    goto LABEL_75;
  }
LABEL_74:
  sub_1ABF32320();
  if (!v16)
  {
LABEL_17:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v17)
      goto LABEL_18;
    goto LABEL_76;
  }
LABEL_75:
  sub_1ABF32320();
  if (!v17)
  {
LABEL_18:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v18)
      goto LABEL_19;
    goto LABEL_77;
  }
LABEL_76:
  sub_1ABF32320();
  if (!v18)
  {
LABEL_19:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v19)
      goto LABEL_20;
    goto LABEL_78;
  }
LABEL_77:
  sub_1ABF32320();
  if (!v19)
  {
LABEL_20:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v20)
      goto LABEL_21;
    goto LABEL_79;
  }
LABEL_78:
  sub_1ABF32320();
  if (!v20)
  {
LABEL_21:
    sub_1ABF32320();
    CohortConfig.hash(into:)();
    if (!v21)
      goto LABEL_22;
    goto LABEL_80;
  }
LABEL_79:
  sub_1ABF32320();
  if (!v21)
  {
LABEL_22:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v22)
      goto LABEL_23;
    goto LABEL_81;
  }
LABEL_80:
  sub_1ABF32320();
  if (!v22)
  {
LABEL_23:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v23)
      goto LABEL_24;
    goto LABEL_82;
  }
LABEL_81:
  sub_1ABF32320();
  if (!v23)
  {
LABEL_24:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v24)
      goto LABEL_25;
    goto LABEL_83;
  }
LABEL_82:
  sub_1ABF32320();
  if (!v24)
  {
LABEL_25:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v25)
      goto LABEL_26;
    goto LABEL_84;
  }
LABEL_83:
  sub_1ABF32320();
  if (!v25)
  {
LABEL_26:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v26)
      goto LABEL_27;
    goto LABEL_85;
  }
LABEL_84:
  sub_1ABF32320();
  if (!v26)
  {
LABEL_27:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v27)
      goto LABEL_28;
    goto LABEL_86;
  }
LABEL_85:
  sub_1ABF32320();
  if (!v27)
  {
LABEL_28:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v28)
      goto LABEL_29;
    goto LABEL_87;
  }
LABEL_86:
  sub_1ABF32320();
  if (!v28)
  {
LABEL_29:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v29)
      goto LABEL_30;
    goto LABEL_88;
  }
LABEL_87:
  sub_1ABF32320();
  if (!v29)
  {
LABEL_30:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v30)
      goto LABEL_31;
    goto LABEL_89;
  }
LABEL_88:
  sub_1ABF32320();
  if (!v30)
  {
LABEL_31:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v31)
      goto LABEL_32;
    goto LABEL_90;
  }
LABEL_89:
  sub_1ABF32320();
  if (!v31)
  {
LABEL_32:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v32)
      goto LABEL_33;
    goto LABEL_91;
  }
LABEL_90:
  sub_1ABF32320();
  if (!v32)
  {
LABEL_33:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v33)
      goto LABEL_34;
    goto LABEL_92;
  }
LABEL_91:
  sub_1ABF32320();
  if (!v33)
  {
LABEL_34:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v34)
      goto LABEL_35;
    goto LABEL_93;
  }
LABEL_92:
  sub_1ABF32320();
  if (!v34)
  {
LABEL_35:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v35)
      goto LABEL_36;
    goto LABEL_94;
  }
LABEL_93:
  sub_1ABF32320();
  if (!v35)
  {
LABEL_36:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v36)
      goto LABEL_37;
    goto LABEL_95;
  }
LABEL_94:
  sub_1ABF32320();
  if (!v36)
  {
LABEL_37:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v37)
      goto LABEL_38;
    goto LABEL_96;
  }
LABEL_95:
  sub_1ABF32320();
  if (!v37)
  {
LABEL_38:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v38)
      goto LABEL_39;
    goto LABEL_97;
  }
LABEL_96:
  sub_1ABF32320();
  if (!v38)
  {
LABEL_39:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v39)
      goto LABEL_40;
    goto LABEL_98;
  }
LABEL_97:
  sub_1ABF32320();
  if (!v39)
  {
LABEL_40:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v40)
      goto LABEL_41;
    goto LABEL_99;
  }
LABEL_98:
  sub_1ABF32320();
  if (!v40)
  {
LABEL_41:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v41)
      goto LABEL_42;
    goto LABEL_100;
  }
LABEL_99:
  sub_1ABF32320();
  if (!v41)
  {
LABEL_42:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v42)
      goto LABEL_43;
    goto LABEL_101;
  }
LABEL_100:
  sub_1ABF32320();
  if (!v42)
  {
LABEL_43:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v43)
      goto LABEL_44;
    goto LABEL_102;
  }
LABEL_101:
  sub_1ABF32320();
  if (!v43)
  {
LABEL_44:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v44)
      goto LABEL_45;
    goto LABEL_103;
  }
LABEL_102:
  sub_1ABF32320();
  if (!v44)
  {
LABEL_45:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v45)
      goto LABEL_46;
    goto LABEL_104;
  }
LABEL_103:
  sub_1ABF32320();
  if (!v45)
  {
LABEL_46:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v46)
      goto LABEL_47;
    goto LABEL_105;
  }
LABEL_104:
  sub_1ABF32320();
  if (!v46)
  {
LABEL_47:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v47)
      goto LABEL_48;
    goto LABEL_106;
  }
LABEL_105:
  sub_1ABF32320();
  if (!v47)
  {
LABEL_48:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v48)
      goto LABEL_49;
    goto LABEL_107;
  }
LABEL_106:
  sub_1ABF32320();
  if (!v48)
  {
LABEL_49:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v49)
      goto LABEL_50;
    goto LABEL_108;
  }
LABEL_107:
  sub_1ABF32320();
  if (!v49)
  {
LABEL_50:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v50)
      goto LABEL_51;
    goto LABEL_109;
  }
LABEL_108:
  sub_1ABF32320();
  if (!v50)
  {
LABEL_51:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v51)
      goto LABEL_52;
    goto LABEL_110;
  }
LABEL_109:
  sub_1ABF32320();
  if (!v51)
  {
LABEL_52:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v52)
      goto LABEL_53;
    goto LABEL_111;
  }
LABEL_110:
  sub_1ABF32320();
  if (!v52)
  {
LABEL_53:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v53)
      goto LABEL_54;
    goto LABEL_112;
  }
LABEL_111:
  sub_1ABF32320();
  if (!v53)
  {
LABEL_54:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v54)
      goto LABEL_55;
    goto LABEL_113;
  }
LABEL_112:
  sub_1ABF32320();
  if (!v54)
  {
LABEL_55:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v55)
      goto LABEL_56;
    goto LABEL_114;
  }
LABEL_113:
  sub_1ABF32320();
  if (!v55)
  {
LABEL_56:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v56)
      goto LABEL_57;
    goto LABEL_115;
  }
LABEL_114:
  sub_1ABF32320();
  if (!v56)
  {
LABEL_57:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v57)
      goto LABEL_58;
LABEL_116:
    sub_1ABF32320();
    if (!v58)
      goto LABEL_59;
    return sub_1ABF32320();
  }
LABEL_115:
  sub_1ABF32320();
  if (v57)
    goto LABEL_116;
LABEL_58:
  sub_1ABF32320();
  sub_1ABF3232C();
  if (!v58)
  {
LABEL_59:
    sub_1ABF32320();
    return CohortConfig.hash(into:)();
  }
  return sub_1ABF32320();
}

uint64_t ScoringConfig.hashValue.getter()
{
  sub_1ABF32308();
  ScoringConfig.hash(into:)();
  return sub_1ABF32338();
}

uint64_t sub_1ABEB93E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ScoringConfig.init(from:)(a1, a2);
}

uint64_t sub_1ABEB93FC(_QWORD *a1)
{
  return ScoringConfig.encode(to:)(a1);
}

uint64_t sub_1ABEB9414()
{
  sub_1ABF32308();
  ScoringConfig.hash(into:)();
  return sub_1ABF32338();
}

uint64_t sub_1ABEB9454()
{
  sub_1ABF32308();
  ScoringConfig.hash(into:)();
  return sub_1ABF32338();
}

uint64_t _s10StocksCore13ScoringConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  int v71;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  char v90;
  char v91;
  double v92;
  double v93;
  int v94;
  double v95;
  int v96;
  int v97;
  double v98;
  char v99;
  double v100;
  char v101;
  char v102;
  char v103;
  int v104;
  int v105;
  double v106;
  int v107;
  int v108;
  char v109;
  double v110;
  int v111;
  char v112;
  double v113;
  char v114;
  int v115;
  double v116;
  char v117;
  double v118;
  int v119;
  double v120;
  char v121;
  double v122;
  int v123;
  char v124;
  double v125;
  double v126;
  int v127;
  double v128;
  char v129;
  double v130;
  double v131;
  int v132;
  char v133;
  double v134;
  double v135;
  double v136;
  double v137;
  double v138;
  int v139;
  double v140;
  double v141;
  char v142;
  double v143;
  int v144;
  double v145;
  char v146;
  int v147;
  char v148;
  int v149;
  char v150;
  int v151;
  double v152;
  char v153;
  double v154;
  int v155;
  double v156;
  double v157;
  char v158;
  int v159;
  double v160;
  char v161;
  double v162;
  int v163;
  double v164;
  double v165;
  char v166;
  int v167;
  double v168;
  double v169;
  char v170;
  int v171;
  double v172;
  double v173;
  char v174;
  int v175;
  double v176;
  double v177;
  char v178;
  int v179;
  double v180;
  double v181;
  char v182;
  int v183;
  double v184;
  double v185;
  char v186;
  double v187;
  int v188;
  char v189;
  double v190;
  int v191;
  double v192;
  int v193;
  char v194;
  double v195;
  int v196;
  char v197;
  double v198;
  int v199;
  char v200;
  int v201;
  double v202;
  char v203;
  double v204;
  char v205;
  int v206;
  double v207;
  uint64_t v208;
  char v209;
  double v210;
  char v211;
  double v212;
  double v213;
  char v214;
  double v215;
  int v216;
  double v217;
  char v218;
  double v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  int v234;
  int v235;
  char v236;
  uint64_t v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  char v243;
  char v244;
  char v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char v250;
  uint64_t v251;
  char v252;
  uint64_t v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  char v257;
  uint64_t v258;
  char v259;
  uint64_t v260;
  char v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  char v265;
  uint64_t v266;
  char v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  uint64_t v274;
  char v275;
  char v276;

  v242 = *(_OWORD *)(a1 + 320);
  v241 = *(_OWORD *)(a1 + 336);
  v240 = *(_OWORD *)(a1 + 352);
  v239 = *(_OWORD *)(a1 + 368);
  v238 = *(_OWORD *)(a1 + 384);
  v219 = *(double *)(a1 + 416);
  v244 = *(_BYTE *)(a1 + 424);
  v215 = *(double *)(a1 + 432);
  v218 = *(_BYTE *)(a1 + 440);
  v212 = *(double *)(a1 + 448);
  v214 = *(_BYTE *)(a1 + 456);
  v211 = *(_BYTE *)(a1 + 472);
  v92 = *(double *)(a1 + 464);
  v93 = *(double *)(a1 + 480);
  v95 = *(double *)(a1 + 496);
  v90 = *(_BYTE *)(a1 + 488);
  v91 = *(_BYTE *)(a1 + 504);
  v98 = *(double *)(a1 + 512);
  v100 = *(double *)(a1 + 528);
  v243 = *(_BYTE *)(a2 + 409);
  v235 = *(unsigned __int8 *)(a2 + 424);
  v234 = *(unsigned __int8 *)(a2 + 440);
  v216 = *(unsigned __int8 *)(a2 + 456);
  v94 = *(unsigned __int8 *)(a2 + 472);
  v96 = *(unsigned __int8 *)(a2 + 488);
  v97 = *(unsigned __int8 *)(a2 + 504);
  v237 = *(_QWORD *)(a1 + 400);
  v236 = *(_BYTE *)(a1 + 408);
  v99 = *(_BYTE *)(a1 + 520);
  v103 = *(_BYTE *)(a1 + 536);
  v102 = *(_BYTE *)(a1 + 552);
  v101 = *(_BYTE *)(a1 + 568);
  v109 = *(_BYTE *)(a1 + 584);
  v112 = *(_BYTE *)(a1 + 600);
  v114 = *(_BYTE *)(a1 + 616);
  v117 = *(_BYTE *)(a1 + 632);
  v121 = *(_BYTE *)(a1 + 648);
  v124 = *(_BYTE *)(a1 + 664);
  v129 = *(_BYTE *)(a1 + 680);
  v133 = *(_BYTE *)(a1 + 696);
  v142 = *(_BYTE *)(a1 + 712);
  v146 = *(_BYTE *)(a1 + 728);
  v148 = *(_BYTE *)(a1 + 744);
  v150 = *(_BYTE *)(a1 + 760);
  v153 = *(_BYTE *)(a1 + 776);
  v158 = *(_BYTE *)(a1 + 792);
  v161 = *(_BYTE *)(a1 + 808);
  v166 = *(_BYTE *)(a1 + 824);
  v170 = *(_BYTE *)(a1 + 840);
  v174 = *(_BYTE *)(a1 + 856);
  v178 = *(_BYTE *)(a1 + 872);
  v182 = *(_BYTE *)(a1 + 888);
  v186 = *(_BYTE *)(a1 + 904);
  v189 = *(_BYTE *)(a1 + 920);
  v194 = *(_BYTE *)(a1 + 936);
  v197 = *(_BYTE *)(a1 + 952);
  v200 = *(_BYTE *)(a1 + 968);
  v203 = *(_BYTE *)(a1 + 984);
  v205 = *(_BYTE *)(a1 + 1000);
  v208 = *(_QWORD *)(a1 + 1104);
  v209 = *(_BYTE *)(a1 + 1112);
  v206 = *(unsigned __int8 *)(a1 + 1113);
  v2 = *(_BYTE *)(a2 + 8);
  v3 = *(_BYTE *)(a2 + 24);
  v220 = *(_QWORD *)(a2 + 304);
  v221 = *(_QWORD *)(a2 + 312);
  v222 = *(_QWORD *)(a2 + 320);
  v223 = *(_QWORD *)(a2 + 328);
  v224 = *(_QWORD *)(a2 + 336);
  v225 = *(_QWORD *)(a2 + 344);
  v226 = *(_QWORD *)(a2 + 352);
  v227 = *(_QWORD *)(a2 + 360);
  v228 = *(_QWORD *)(a2 + 368);
  v229 = *(_QWORD *)(a2 + 376);
  v230 = *(_QWORD *)(a2 + 384);
  v231 = *(_QWORD *)(a2 + 392);
  v232 = *(_QWORD *)(a2 + 400);
  v233 = *(_BYTE *)(a2 + 408);
  v104 = *(unsigned __int8 *)(a2 + 520);
  v105 = *(unsigned __int8 *)(a2 + 536);
  v107 = *(unsigned __int8 *)(a2 + 552);
  v108 = *(unsigned __int8 *)(a2 + 568);
  v111 = *(unsigned __int8 *)(a2 + 584);
  v115 = *(unsigned __int8 *)(a2 + 600);
  v119 = *(unsigned __int8 *)(a2 + 616);
  v123 = *(unsigned __int8 *)(a2 + 632);
  v127 = *(unsigned __int8 *)(a2 + 648);
  v132 = *(unsigned __int8 *)(a2 + 664);
  v139 = *(unsigned __int8 *)(a2 + 680);
  v144 = *(unsigned __int8 *)(a2 + 696);
  v147 = *(unsigned __int8 *)(a2 + 712);
  v149 = *(unsigned __int8 *)(a2 + 728);
  v151 = *(unsigned __int8 *)(a2 + 744);
  v155 = *(unsigned __int8 *)(a2 + 760);
  v159 = *(unsigned __int8 *)(a2 + 776);
  v163 = *(unsigned __int8 *)(a2 + 792);
  v167 = *(unsigned __int8 *)(a2 + 808);
  v171 = *(unsigned __int8 *)(a2 + 824);
  v175 = *(unsigned __int8 *)(a2 + 840);
  v179 = *(unsigned __int8 *)(a2 + 856);
  v183 = *(unsigned __int8 *)(a2 + 872);
  v188 = *(unsigned __int8 *)(a2 + 888);
  v191 = *(unsigned __int8 *)(a2 + 904);
  v193 = *(unsigned __int8 *)(a2 + 920);
  v196 = *(unsigned __int8 *)(a2 + 936);
  v199 = *(unsigned __int8 *)(a2 + 952);
  v201 = *(unsigned __int8 *)(a2 + 968);
  v4 = *(unsigned __int8 *)(a2 + 984);
  v5 = *(unsigned __int8 *)(a2 + 1000);
  v6 = *(_QWORD *)(a2 + 1008);
  v7 = *(_QWORD *)(a2 + 1032);
  v8 = *(_QWORD *)(a2 + 1048);
  v9 = *(_QWORD *)(a2 + 1064);
  v10 = *(_BYTE *)(a2 + 1112);
  v11 = *(_BYTE *)(a2 + 1113);
  v106 = *(double *)(a1 + 544);
  v110 = *(double *)(a1 + 560);
  v113 = *(double *)(a1 + 576);
  v118 = *(double *)(a1 + 592);
  v122 = *(double *)(a1 + 608);
  v126 = *(double *)(a1 + 624);
  v128 = *(double *)(a1 + 640);
  v134 = *(double *)(a1 + 656);
  v135 = *(double *)(a1 + 672);
  v137 = *(double *)(a1 + 688);
  v140 = *(double *)(a1 + 704);
  v143 = *(double *)(a1 + 720);
  v152 = *(double *)(a1 + 736);
  v156 = *(double *)(a1 + 752);
  v160 = *(double *)(a1 + 768);
  v164 = *(double *)(a1 + 784);
  v168 = *(double *)(a1 + 800);
  v172 = *(double *)(a1 + 816);
  v176 = *(double *)(a1 + 832);
  v180 = *(double *)(a1 + 848);
  v184 = *(double *)(a1 + 864);
  v187 = *(double *)(a1 + 880);
  v190 = *(double *)(a1 + 896);
  v192 = *(double *)(a1 + 912);
  v195 = *(double *)(a1 + 928);
  v198 = *(double *)(a1 + 944);
  v202 = *(double *)(a1 + 960);
  v204 = *(double *)(a1 + 976);
  v207 = *(double *)(a1 + 992);
  v84 = *(_OWORD *)(a1 + 1008);
  v85 = *(_OWORD *)(a1 + 1024);
  v86 = *(_OWORD *)(a1 + 1040);
  v87 = *(_OWORD *)(a1 + 1056);
  v88 = *(_OWORD *)(a1 + 1072);
  v89 = *(_OWORD *)(a1 + 1088);
  v217 = *(double *)(a2 + 416);
  v213 = *(double *)(a2 + 432);
  v210 = *(double *)(a2 + 448);
  v76 = *(double *)(a2 + 464);
  v77 = *(double *)(a2 + 480);
  v78 = *(double *)(a2 + 496);
  v79 = *(double *)(a2 + 512);
  v80 = *(double *)(a2 + 528);
  v81 = *(double *)(a2 + 544);
  v82 = *(double *)(a2 + 560);
  v83 = *(double *)(a2 + 576);
  v116 = *(double *)(a2 + 592);
  v120 = *(double *)(a2 + 608);
  v125 = *(double *)(a2 + 624);
  v130 = *(double *)(a2 + 640);
  v131 = *(double *)(a2 + 656);
  v136 = *(double *)(a2 + 672);
  v138 = *(double *)(a2 + 688);
  v141 = *(double *)(a2 + 704);
  v145 = *(double *)(a2 + 720);
  v154 = *(double *)(a2 + 736);
  v157 = *(double *)(a2 + 752);
  v162 = *(double *)(a2 + 768);
  v165 = *(double *)(a2 + 784);
  v169 = *(double *)(a2 + 800);
  v173 = *(double *)(a2 + 816);
  v177 = *(double *)(a2 + 832);
  v181 = *(double *)(a2 + 848);
  v185 = *(double *)(a2 + 864);
  v12 = *(double *)(a2 + 896);
  v13 = *(double *)(a2 + 928);
  v14 = *(double *)(a2 + 960);
  v15 = *(double *)(a2 + 976);
  v16 = *(double *)(a2 + 992);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
    {
LABEL_351:
      v70 = 0;
      return v70 & 1;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      goto LABEL_351;
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
      v3 = 1;
    if ((v3 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      goto LABEL_351;
  }
  else
  {
    if (*(double *)(a1 + 32) == *(double *)(a2 + 32))
      v17 = *(_BYTE *)(a2 + 40);
    else
      v17 = 1;
    if ((v17 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      goto LABEL_351;
  }
  else
  {
    if (*(double *)(a1 + 48) == *(double *)(a2 + 48))
      v18 = *(_BYTE *)(a2 + 56);
    else
      v18 = 1;
    if ((v18 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 72))
      goto LABEL_351;
  }
  else
  {
    if (*(double *)(a1 + 64) == *(double *)(a2 + 64))
      v19 = *(_BYTE *)(a2 + 72);
    else
      v19 = 1;
    if ((v19 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 88))
      goto LABEL_351;
  }
  else
  {
    if (*(double *)(a1 + 80) == *(double *)(a2 + 80))
      v20 = *(_BYTE *)(a2 + 88);
    else
      v20 = 1;
    if ((v20 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 104) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 104))
      goto LABEL_351;
  }
  else
  {
    if (*(double *)(a1 + 96) == *(double *)(a2 + 96))
      v21 = *(_BYTE *)(a2 + 104);
    else
      v21 = 1;
    if ((v21 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 120) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 120))
      goto LABEL_351;
  }
  else
  {
    if (*(double *)(a1 + 112) == *(double *)(a2 + 112))
      v22 = *(_BYTE *)(a2 + 120);
    else
      v22 = 1;
    if ((v22 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 136) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 136))
      goto LABEL_351;
  }
  else
  {
    if (*(double *)(a1 + 128) == *(double *)(a2 + 128))
      v23 = *(_BYTE *)(a2 + 136);
    else
      v23 = 1;
    if ((v23 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 152) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 152))
      goto LABEL_351;
  }
  else
  {
    v24 = *(_BYTE *)(a2 + 152);
    if (*(double *)(a1 + 144) != *(double *)(a2 + 144))
      v24 = 1;
    if ((v24 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 168) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 168))
      goto LABEL_351;
  }
  else
  {
    v25 = *(_BYTE *)(a2 + 168);
    if (*(double *)(a1 + 160) != *(double *)(a2 + 160))
      v25 = 1;
    if ((v25 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 184) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 184))
      goto LABEL_351;
  }
  else
  {
    v26 = *(_BYTE *)(a2 + 184);
    if (*(double *)(a1 + 176) != *(double *)(a2 + 176))
      v26 = 1;
    if ((v26 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 200) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 200))
      goto LABEL_351;
  }
  else
  {
    v27 = *(_BYTE *)(a2 + 200);
    if (*(double *)(a1 + 192) != *(double *)(a2 + 192))
      v27 = 1;
    if ((v27 & 1) != 0)
      goto LABEL_351;
  }
  v73 = *(double *)(a2 + 880);
  v74 = *(double *)(a2 + 912);
  v75 = *(double *)(a2 + 944);
  v245 = *(_QWORD *)(a2 + 1016);
  v246 = *(_QWORD *)(a2 + 1024);
  v247 = *(_QWORD *)(a2 + 1040);
  v248 = *(_QWORD *)(a2 + 1056);
  v249 = *(_QWORD *)(a2 + 1072);
  v250 = *(_QWORD *)(a2 + 1080);
  v251 = *(_QWORD *)(a2 + 1088);
  v252 = *(_QWORD *)(a2 + 1096);
  v253 = *(_QWORD *)(a2 + 1104);
  if ((*(_BYTE *)(a1 + 216) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 216))
      goto LABEL_351;
  }
  else
  {
    v28 = *(_BYTE *)(a2 + 216);
    if (*(double *)(a1 + 208) != *(double *)(a2 + 208))
      v28 = 1;
    if ((v28 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 232) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 232))
      goto LABEL_351;
  }
  else
  {
    v29 = *(_BYTE *)(a2 + 232);
    if (*(double *)(a1 + 224) != *(double *)(a2 + 224))
      v29 = 1;
    if ((v29 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 248) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 248))
      goto LABEL_351;
  }
  else
  {
    v30 = *(_BYTE *)(a2 + 248);
    if (*(double *)(a1 + 240) != *(double *)(a2 + 240))
      v30 = 1;
    if ((v30 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 264) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 264))
      goto LABEL_351;
  }
  else
  {
    v31 = *(_BYTE *)(a2 + 264);
    if (*(double *)(a1 + 256) != *(double *)(a2 + 256))
      v31 = 1;
    if ((v31 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 280) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 280))
      goto LABEL_351;
  }
  else
  {
    v32 = *(_BYTE *)(a2 + 280);
    if (*(double *)(a1 + 272) != *(double *)(a2 + 272))
      v32 = 1;
    if ((v32 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 296) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 296))
      goto LABEL_351;
  }
  else
  {
    v33 = *(_BYTE *)(a2 + 296);
    if (*(double *)(a1 + 288) != *(double *)(a2 + 288))
      v33 = 1;
    if ((v33 & 1) != 0)
      goto LABEL_351;
  }
  if ((*(_BYTE *)(a1 + 409) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 409) & 1) == 0)
      goto LABEL_351;
  }
  else
  {
    v268 = *(_OWORD *)(a1 + 304);
    v269 = v242;
    v270 = v241;
    v271 = v240;
    v272 = v239;
    v273 = v238;
    v274 = v237;
    v275 = v236;
    v276 = 0;
    if ((v243 & 1) != 0)
      goto LABEL_351;
    v254 = v220;
    v255 = v221 & 1;
    v256 = v222;
    v257 = v223 & 1;
    v258 = v224;
    v259 = v225 & 1;
    v260 = v226;
    v261 = v227 & 1;
    v262 = v228;
    v263 = v229 & 1;
    v264 = v230;
    v265 = v231 & 1;
    v266 = v232;
    v267 = v233 & 1;
    if ((_s10StocksCore12CohortConfigV2eeoiySbAC_ACtFZ_0((uint64_t)&v268, (uint64_t)&v254) & 1) == 0)
      goto LABEL_351;
  }
  if ((v244 & 1) != 0)
  {
    if (!v235)
      goto LABEL_351;
  }
  else
  {
    v34 = v235;
    if (v219 != v217)
      v34 = 1;
    if ((v34 & 1) != 0)
      goto LABEL_351;
  }
  if ((v218 & 1) != 0)
  {
    if (!v234)
      goto LABEL_351;
  }
  else
  {
    v35 = v234;
    if (v215 != v213)
      v35 = 1;
    if ((v35 & 1) != 0)
      goto LABEL_351;
  }
  if ((v214 & 1) != 0)
  {
    if (!v216)
      goto LABEL_351;
  }
  else
  {
    v36 = v216;
    if (v212 != v210)
      v36 = 1;
    if ((v36 & 1) != 0)
      goto LABEL_351;
  }
  if ((v211 & 1) != 0)
  {
    if (!v94)
      goto LABEL_351;
  }
  else
  {
    v37 = v94;
    if (v92 != v76)
      v37 = 1;
    if ((v37 & 1) != 0)
      goto LABEL_351;
  }
  if ((v90 & 1) != 0)
  {
    if (!v96)
      goto LABEL_351;
  }
  else
  {
    v38 = v96;
    if (v93 != v77)
      v38 = 1;
    if ((v38 & 1) != 0)
      goto LABEL_351;
  }
  if ((v91 & 1) != 0)
  {
    if (!v97)
      goto LABEL_351;
  }
  else
  {
    v39 = v97;
    if (v95 != v78)
      v39 = 1;
    if ((v39 & 1) != 0)
      goto LABEL_351;
  }
  if ((v99 & 1) != 0)
  {
    if (!v104)
      goto LABEL_351;
  }
  else
  {
    v40 = v104;
    if (v98 != v79)
      v40 = 1;
    if ((v40 & 1) != 0)
      goto LABEL_351;
  }
  if ((v103 & 1) != 0)
  {
    if (!v105)
      goto LABEL_351;
  }
  else
  {
    v41 = v105;
    if (v100 != v80)
      v41 = 1;
    if ((v41 & 1) != 0)
      goto LABEL_351;
  }
  if ((v102 & 1) != 0)
  {
    if (!v107)
      goto LABEL_351;
  }
  else
  {
    v42 = v107;
    if (v106 != v81)
      v42 = 1;
    if ((v42 & 1) != 0)
      goto LABEL_351;
  }
  if ((v101 & 1) != 0)
  {
    if (!v108)
      goto LABEL_351;
  }
  else
  {
    v43 = v108;
    if (v110 != v82)
      v43 = 1;
    if ((v43 & 1) != 0)
      goto LABEL_351;
  }
  if ((v109 & 1) != 0)
  {
    if (!v111)
      goto LABEL_351;
  }
  else
  {
    v44 = v111;
    if (v113 != v83)
      v44 = 1;
    if ((v44 & 1) != 0)
      goto LABEL_351;
  }
  if ((v112 & 1) != 0)
  {
    if (!v115)
      goto LABEL_351;
  }
  else
  {
    v45 = v115;
    if (v118 != v116)
      v45 = 1;
    if ((v45 & 1) != 0)
      goto LABEL_351;
  }
  if ((v114 & 1) != 0)
  {
    if (!v119)
      goto LABEL_351;
  }
  else
  {
    v46 = v119;
    if (v122 != v120)
      v46 = 1;
    if ((v46 & 1) != 0)
      goto LABEL_351;
  }
  if ((v117 & 1) != 0)
  {
    if (!v123)
      goto LABEL_351;
  }
  else
  {
    v47 = v123;
    if (v126 != v125)
      v47 = 1;
    if ((v47 & 1) != 0)
      goto LABEL_351;
  }
  if ((v121 & 1) != 0)
  {
    if (!v127)
      goto LABEL_351;
  }
  else
  {
    v48 = v127;
    if (v128 != v130)
      v48 = 1;
    if ((v48 & 1) != 0)
      goto LABEL_351;
  }
  if ((v124 & 1) != 0)
  {
    if (!v132)
      goto LABEL_351;
  }
  else
  {
    v49 = v132;
    if (v134 != v131)
      v49 = 1;
    if ((v49 & 1) != 0)
      goto LABEL_351;
  }
  if ((v129 & 1) != 0)
  {
    if (!v139)
      goto LABEL_351;
  }
  else
  {
    v50 = v139;
    if (v135 != v136)
      v50 = 1;
    if ((v50 & 1) != 0)
      goto LABEL_351;
  }
  if ((v133 & 1) != 0)
  {
    if (!v144)
      goto LABEL_351;
  }
  else
  {
    v51 = v144;
    if (v137 != v138)
      v51 = 1;
    if ((v51 & 1) != 0)
      goto LABEL_351;
  }
  if ((v142 & 1) != 0)
  {
    if (!v147)
      goto LABEL_351;
  }
  else
  {
    v52 = v147;
    if (v140 != v141)
      v52 = 1;
    if ((v52 & 1) != 0)
      goto LABEL_351;
  }
  if ((v146 & 1) != 0)
  {
    if (!v149)
      goto LABEL_351;
  }
  else
  {
    v53 = v149;
    if (v143 != v145)
      v53 = 1;
    if ((v53 & 1) != 0)
      goto LABEL_351;
  }
  if ((v148 & 1) != 0)
  {
    if (!v151)
      goto LABEL_351;
  }
  else
  {
    v54 = v151;
    if (v152 != v154)
      v54 = 1;
    if ((v54 & 1) != 0)
      goto LABEL_351;
  }
  if ((v150 & 1) != 0)
  {
    if (!v155)
      goto LABEL_351;
  }
  else
  {
    v55 = v155;
    if (v156 != v157)
      v55 = 1;
    if ((v55 & 1) != 0)
      goto LABEL_351;
  }
  if ((v153 & 1) != 0)
  {
    if (!v159)
      goto LABEL_351;
  }
  else
  {
    v56 = v159;
    if (v160 != v162)
      v56 = 1;
    if ((v56 & 1) != 0)
      goto LABEL_351;
  }
  if ((v158 & 1) != 0)
  {
    if (!v163)
      goto LABEL_351;
  }
  else
  {
    v57 = v163;
    if (v164 != v165)
      v57 = 1;
    if ((v57 & 1) != 0)
      goto LABEL_351;
  }
  if ((v161 & 1) != 0)
  {
    if (!v167)
      goto LABEL_351;
  }
  else
  {
    v58 = v167;
    if (v168 != v169)
      v58 = 1;
    if ((v58 & 1) != 0)
      goto LABEL_351;
  }
  if ((v166 & 1) != 0)
  {
    if (!v171)
      goto LABEL_351;
  }
  else
  {
    v59 = v171;
    if (v172 != v173)
      v59 = 1;
    if ((v59 & 1) != 0)
      goto LABEL_351;
  }
  if ((v170 & 1) != 0)
  {
    if (!v175)
      goto LABEL_351;
  }
  else
  {
    v60 = v175;
    if (v176 != v177)
      v60 = 1;
    if ((v60 & 1) != 0)
      goto LABEL_351;
  }
  if ((v174 & 1) != 0)
  {
    if (!v179)
      goto LABEL_351;
  }
  else
  {
    v61 = v179;
    if (v180 != v181)
      v61 = 1;
    if ((v61 & 1) != 0)
      goto LABEL_351;
  }
  if ((v178 & 1) != 0)
  {
    if (!v183)
      goto LABEL_351;
  }
  else
  {
    v62 = v183;
    if (v184 != v185)
      v62 = 1;
    if ((v62 & 1) != 0)
      goto LABEL_351;
  }
  if ((v182 & 1) != 0)
  {
    if (!v188)
      goto LABEL_351;
  }
  else
  {
    v63 = v188;
    if (v187 != v73)
      v63 = 1;
    if ((v63 & 1) != 0)
      goto LABEL_351;
  }
  if ((v186 & 1) != 0)
  {
    if (!v191)
      goto LABEL_351;
  }
  else
  {
    v64 = v191;
    if (v190 != v12)
      v64 = 1;
    if ((v64 & 1) != 0)
      goto LABEL_351;
  }
  if ((v189 & 1) != 0)
  {
    if (!v193)
      goto LABEL_351;
  }
  else
  {
    v65 = v193;
    if (v192 != v74)
      v65 = 1;
    if ((v65 & 1) != 0)
      goto LABEL_351;
  }
  if ((v194 & 1) != 0)
  {
    if (!v196)
      goto LABEL_351;
  }
  else
  {
    v66 = v196;
    if (v195 != v13)
      v66 = 1;
    if ((v66 & 1) != 0)
      goto LABEL_351;
  }
  if ((v197 & 1) != 0)
  {
    if (!v199)
      goto LABEL_351;
  }
  else
  {
    v67 = v199;
    if (v198 != v75)
      v67 = 1;
    if ((v67 & 1) != 0)
      goto LABEL_351;
  }
  if ((v200 & 1) != 0)
  {
    if (!v201)
      goto LABEL_351;
  }
  else
  {
    v68 = v201;
    if (v202 != v14)
      v68 = 1;
    if ((v68 & 1) != 0)
      goto LABEL_351;
  }
  if ((v203 & 1) != 0)
  {
    if (!v4)
      goto LABEL_351;
  }
  else
  {
    v69 = v4;
    if (v204 != v15)
      v69 = 1;
    if ((v69 & 1) != 0)
      goto LABEL_351;
  }
  if ((v205 & 1) == 0)
  {
    v71 = v5;
    if (v207 != v16)
      v71 = 1;
    if (((v71 | v206) & 1) != 0)
    {
      v70 = v11 & ~(_BYTE)v71;
      return v70 & 1;
    }
LABEL_350:
    v268 = v84;
    v269 = v85;
    v270 = v86;
    v271 = v87;
    v272 = v88;
    v273 = v89;
    v274 = v208;
    v275 = v209;
    v276 = 0;
    if ((v11 & 1) == 0)
    {
      v254 = v6;
      v255 = v245 & 1;
      v256 = v246;
      v257 = v7 & 1;
      v258 = v247;
      v259 = v8 & 1;
      v260 = v248;
      v261 = v9 & 1;
      v262 = v249;
      v263 = v250 & 1;
      v264 = v251;
      v265 = v252 & 1;
      v266 = v253;
      v267 = v10 & 1;
      v70 = _s10StocksCore12CohortConfigV2eeoiySbAC_ACtFZ_0((uint64_t)&v268, (uint64_t)&v254);
      return v70 & 1;
    }
    goto LABEL_351;
  }
  if (((v5 ^ 1 | v206) & 1) == 0)
    goto LABEL_350;
  v70 = v5 & v11;
  return v70 & 1;
}

unint64_t sub_1ABEBA81C()
{
  unint64_t result;

  result = qword_1EEC44990;
  if (!qword_1EEC44990)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for ScoringConfig, &type metadata for ScoringConfig);
    atomic_store(result, (unint64_t *)&qword_1EEC44990);
  }
  return result;
}

void *__swift_memcpy1114_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x45AuLL);
}

uint64_t storeEnumTagSinglePayload for ScoringConfig(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 1112) = 0;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 1114) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScoringConfig()
{
  return &type metadata for ScoringConfig;
}

uint64_t getEnumTagSinglePayload for ScoringConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xC7)
    goto LABEL_17;
  if (a2 + 57 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 57) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 57;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 57;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 57;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x3A;
  v8 = v6 - 58;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ScoringConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 57 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 57) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xC7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xC6)
    return ((uint64_t (*)(void))((char *)&loc_1ABEBAAA8 + 4 * byte_1ABF4A477[v4]))();
  *a1 = a2 + 57;
  return ((uint64_t (*)(void))((char *)sub_1ABEBAADC + 4 * byte_1ABF4A472[v4]))();
}

uint64_t sub_1ABEBAADC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEBAAE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEBAAECLL);
  return result;
}

uint64_t sub_1ABEBAAF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEBAB00);
  *(_BYTE *)result = a2 + 57;
  return result;
}

uint64_t sub_1ABEBAB04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEBAB0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScoringConfig.CodingKeys()
{
  return &type metadata for ScoringConfig.CodingKeys;
}

unint64_t sub_1ABEBAB2C()
{
  unint64_t result;

  result = qword_1EEC44998;
  if (!qword_1EEC44998)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A704, &type metadata for ScoringConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44998);
  }
  return result;
}

unint64_t sub_1ABEBAB74()
{
  unint64_t result;

  result = qword_1ED34ED40;
  if (!qword_1ED34ED40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A63C, &type metadata for ScoringConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED40);
  }
  return result;
}

unint64_t sub_1ABEBABBC()
{
  unint64_t result;

  result = qword_1ED34ED38;
  if (!qword_1ED34ED38)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A664, &type metadata for ScoringConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED38);
  }
  return result;
}

uint64_t sub_1ABEBAC00()
{
  unint64_t v0;

  v0 = sub_1ABF3226C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x3A)
    return 58;
  else
    return v0;
}

uint64_t sub_1ABEBAC50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[2];

  sub_1ABCF5968();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF30334();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30328();
  sub_1ABF3031C();
  sub_1ABF30304();
  v12[0] = 0x2F6C6F626D79732FLL;
  v12[1] = 0xE800000000000000;
  sub_1ABF31870();
  sub_1ABF30310();
  sub_1ABF302F8();
  v9 = sub_1ABF305D4();
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v4, v9);
  }
  return result;
}

double sub_1ABEBADC8(double a1, double a2)
{
  double v2;
  double result;

  v2 = a2 - a1;
  result = a1 / v2;
  if (v2 <= 0.0)
    return 0.0;
  return result;
}

uint64_t dispatch thunk of StocksIntentHandlerType.handle(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1ABD37AA0;
  return v9(a1, a2, a3);
}

ValueMetadata *type metadata accessor for SDSMetadata()
{
  return &type metadata for SDSMetadata;
}

unint64_t sub_1ABEBAE80()
{
  unint64_t result;

  result = qword_1EEC449A8;
  if (!qword_1EEC449A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A808, &type metadata for SDSMetadata);
    atomic_store(result, (unint64_t *)&qword_1EEC449A8);
  }
  return result;
}

uint64_t sub_1ABEBAEC4()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBAF10()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABEBAF24()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBAF6C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ABEBAFBC(_QWORD *a1@<X8>)
{
  *a1 = 0x656372756F73;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1ABEBAFD4()
{
  return 0x656372756F73;
}

uint64_t sub_1ABEBAFE8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ABEBB03C()
{
  sub_1ABEBC8E0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEBB064()
{
  sub_1ABEBC8E0();
  return sub_1ABF32398();
}

uint64_t sub_1ABEBB08C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  _OWORD v11[2];
  uint64_t v12;

  v2 = v1;
  sub_1ABCF4DA8(0, &qword_1ED34E2A0, (uint64_t (*)(void))sub_1ABEBC8E0, (uint64_t)&type metadata for SDSMetadata.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEBC8E0();
  sub_1ABF32368();
  v9 = *(_OWORD *)(v2 + 16);
  v11[0] = *(_OWORD *)v2;
  v11[1] = v9;
  v12 = *(_QWORD *)(v2 + 32);
  sub_1ABEBC968();
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABEBB1B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE4324(*a1, *a2);
}

uint64_t sub_1ABEBB1BC()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBB254()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEBB2C8()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBB35C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEBD1B0();
  *a1 = result;
  return result;
}

void sub_1ABEBB390(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x736C72556F676F6CLL;
  if (v2 != 1)
  {
    v5 = 0x6C7255656D6F68;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701667182;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ABEBB3E8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x736C72556F676F6CLL;
  if (*v0 != 1)
    v1 = 0x6C7255656D6F68;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_1ABEBB43C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEBD1B0();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBB468()
{
  sub_1ABEBCEE8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEBB490()
{
  sub_1ABEBCEE8();
  return sub_1ABF32398();
}

uint64_t sub_1ABEBB4B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1ED34E2B0, (uint64_t (*)(void))sub_1ABEBCEE8, (uint64_t)&type metadata for SDSMetadata.Source.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEBCEE8();
  sub_1ABF32368();
  v14 = 0;
  sub_1ABF32194();
  if (!v2)
  {
    v11[1] = *(_QWORD *)(v3 + 16);
    v13 = 1;
    sub_1ABEBCF2C();
    sub_1ABEBCFC4(&qword_1ED34DF10, (uint64_t (*)(void))sub_1ABEBD028, MEMORY[0x1E0DEAF10]);
    sub_1ABF3217C();
    v12 = 2;
    sub_1ABF32140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double sub_1ABEBB64C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1ABEBCCA4(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1ABEBB690(_QWORD *a1)
{
  return sub_1ABEBB4B8(a1);
}

uint64_t sub_1ABEBB6A4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_1ABEBC628(v5, v7) & 1;
}

uint64_t sub_1ABEBB6EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1ABF32308();
  sub_1ABF31840();
  sub_1ABEBC548((uint64_t)v4, v1);
  sub_1ABF32320();
  if (v2)
  {
    sub_1ABF2FF5C();
    sub_1ABF31840();
    swift_bridgeObjectRelease();
  }
  return sub_1ABF32338();
}

uint64_t sub_1ABEBB794(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  sub_1ABF31840();
  sub_1ABEBC548(a1, v3);
  if (!v4)
    return sub_1ABF32320();
  sub_1ABF32320();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEBB828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1ABF32308();
  sub_1ABF31840();
  sub_1ABEBC548((uint64_t)v4, v1);
  sub_1ABF32320();
  if (v2)
  {
    sub_1ABF2FF5C();
    sub_1ABF31840();
    swift_bridgeObjectRelease();
  }
  return sub_1ABF32338();
}

uint64_t sub_1ABEBB8CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE4224(*a1, *a2);
}

uint64_t sub_1ABEBB8D8()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBB96C()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEBB9DC()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBBA6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEBD1B0();
  *a1 = result;
  return result;
}

void sub_1ABEBBAA0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x544847494CLL;
  if (v2 != 1)
  {
    v5 = 1263681860;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E776F6E6B6E75;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ABEBBAF4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1ABEBD1F4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABEBBB1C()
{
  sub_1ABEBD818();
  return sub_1ABF31990();
}

uint64_t sub_1ABEBBB68(char *a1, char *a2)
{
  return sub_1ABDE442C(*a1, *a2);
}

uint64_t sub_1ABEBBB74()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBBBEC()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEBBC40()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBBCB4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1ABEBBD10(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7107189;
  if (*v1)
    v2 = 0x746E6169726176;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABEBBD48()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E6169726176;
  else
    return 7107189;
}

uint64_t sub_1ABEBBD7C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1ABEBBDDC()
{
  sub_1ABEBD494();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEBBE04()
{
  sub_1ABEBD494();
  return sub_1ABF32398();
}

uint64_t sub_1ABEBBE2C(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];
  int v13;
  char v14;
  char v15;
  char v16;

  v13 = a4;
  sub_1ABCF4DA8(0, &qword_1ED34E2A8, (uint64_t (*)(void))sub_1ABEBD494, (uint64_t)&type metadata for SDSMetadata.SourceLogo.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEBD494();
  sub_1ABF32368();
  v16 = 0;
  v10 = v12[1];
  sub_1ABF32194();
  if (!v10)
  {
    v15 = v13;
    v14 = 1;
    sub_1ABEBD51C();
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ABEBBF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  sub_1ABF32308();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  sub_1ABEBC548((uint64_t)v4, v1);
  sub_1ABF32320();
  if (v2)
  {
    sub_1ABF2FF5C();
    sub_1ABF31840();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBC068@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1ABEBD2EC(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1ABEBC094(_QWORD *a1)
{
  uint64_t v1;

  return sub_1ABEBBE2C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1ABEBC0B0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  BOOL v4;

  v2 = *(_BYTE *)(a1 + 16);
  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (sub_1ABF3223C() & 1) != 0)
    return sub_1ABDE4224(v2, v3);
  else
    return 0;
}

uint64_t sub_1ABEBC114()
{
  sub_1ABF32308();
  sub_1ABF31840();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBC1C4()
{
  sub_1ABF31840();
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEBC244()
{
  sub_1ABF32308();
  sub_1ABF31840();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

double sub_1ABEBC2F0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1ABEBC76C(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1ABEBC334(_QWORD *a1)
{
  return sub_1ABEBB08C(a1);
}

uint64_t sub_1ABEBC348(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_QWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_QWORD *)(a2 + 32);
  return sub_1ABEBC6B8(v5, v7) & 1;
}

uint64_t sub_1ABEBC394(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  sub_1ABEBC548(a1, v3);
  sub_1ABF32320();
  if (v4)
  {
    sub_1ABF2FF5C();
    sub_1ABF31840();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEBC468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1ABF32308();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  sub_1ABEBC548((uint64_t)v4, v1);
  sub_1ABF32320();
  if (v2)
  {
    sub_1ABF2FF5C();
    sub_1ABF31840();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBC548(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1ABF32314();
  if (v3)
  {
    v5 = a2 + 48;
    do
    {
      v5 += 24;
      sub_1ABF2FF5C();
      sub_1ABF31840();
      sub_1ABF31840();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1ABEBC628(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1ABF3223C() & 1) != 0)
  {
    v5 = a1[4];
    v6 = a2[4];
    if (v5)
    {
      if (v6)
      {
        v7 = a1[3] == a2[3] && v5 == v6;
        if (v7 || (sub_1ABF3223C() & 1) != 0)
          return sub_1ABDE0E00(a1[2], a2[2]);
      }
    }
    else if (!v6)
    {
      return sub_1ABDE0E00(a1[2], a2[2]);
    }
  }
  return 0;
}

uint64_t sub_1ABEBC6B8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  BOOL v9;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (sub_1ABF3223C() & 1) != 0)
  {
    if (v3)
    {
      if (v7)
      {
        v9 = v4 == v6 && v3 == v7;
        if (v9 || (sub_1ABF3223C() & 1) != 0)
          return sub_1ABDE0E00(v2, v5);
      }
    }
    else if (!v7)
    {
      return sub_1ABDE0E00(v2, v5);
    }
  }
  return 0;
}

uint64_t sub_1ABEBC76C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  sub_1ABCF4DA8(0, &qword_1ED34FE10, (uint64_t (*)(void))sub_1ABEBC8E0, (uint64_t)&type metadata for SDSMetadata.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEBC8E0();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v19;
  sub_1ABEBC924();
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v15;
  v11 = v17;
  v12 = v18;
  v14 = v16;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)v9 = v10;
  *(_OWORD *)(v9 + 8) = v14;
  *(_QWORD *)(v9 + 24) = v11;
  *(_QWORD *)(v9 + 32) = v12;
  return result;
}

unint64_t sub_1ABEBC8E0()
{
  unint64_t result;

  result = qword_1ED34EB40;
  if (!qword_1ED34EB40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AA3C, &type metadata for SDSMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EB40);
  }
  return result;
}

unint64_t sub_1ABEBC924()
{
  unint64_t result;

  result = qword_1ED34EB98;
  if (!qword_1ED34EB98)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AA14, &type metadata for SDSMetadata.Source);
    atomic_store(result, (unint64_t *)&qword_1ED34EB98);
  }
  return result;
}

unint64_t sub_1ABEBC968()
{
  unint64_t result;

  result = qword_1ED34CDC8;
  if (!qword_1ED34CDC8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A9EC, &type metadata for SDSMetadata.Source);
    atomic_store(result, (unint64_t *)&qword_1ED34CDC8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDSMetadata.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABEBC9EC + 4 * asc_1ABF4A798[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABEBCA0C + 4 * byte_1ABF4A79D[v4]))();
}

_BYTE *sub_1ABEBC9EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABEBCA0C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEBCA14(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEBCA1C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEBCA24(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEBCA2C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDSMetadata.CodingKeys()
{
  return &type metadata for SDSMetadata.CodingKeys;
}

_QWORD *_s10StocksCore11SDSMetadataV6SourceVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *_s10StocksCore11SDSMetadataV6SourceVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10StocksCore11SDSMetadataV6SourceVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SDSMetadata.Source()
{
  return &type metadata for SDSMetadata.Source;
}

unint64_t sub_1ABEBCB88()
{
  unint64_t result;

  result = qword_1EEC449B0;
  if (!qword_1EEC449B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A8D4, &type metadata for SDSMetadata.Source);
    atomic_store(result, (unint64_t *)&qword_1EEC449B0);
  }
  return result;
}

unint64_t sub_1ABEBCBD0()
{
  unint64_t result;

  result = qword_1EEC449B8;
  if (!qword_1EEC449B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A9C4, &type metadata for SDSMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC449B8);
  }
  return result;
}

unint64_t sub_1ABEBCC18()
{
  unint64_t result;

  result = qword_1ED34EB50;
  if (!qword_1ED34EB50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A8FC, &type metadata for SDSMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EB50);
  }
  return result;
}

unint64_t sub_1ABEBCC60()
{
  unint64_t result;

  result = qword_1ED34EB48;
  if (!qword_1ED34EB48)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4A924, &type metadata for SDSMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EB48);
  }
  return result;
}

uint64_t sub_1ABEBCCA4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v23 = a2;
  sub_1ABCF4DA8(0, &qword_1ED34FE20, (uint64_t (*)(void))sub_1ABEBCEE8, (uint64_t)&type metadata for SDSMetadata.Source.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEBCEE8();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v23;
  v27 = 0;
  v11 = sub_1ABF320E0();
  v13 = v12;
  sub_1ABEBCF2C();
  v26 = 1;
  sub_1ABEBCFC4(&qword_1ED34FBB0, (uint64_t (*)(void))sub_1ABEBCF80, MEMORY[0x1E0DEAF40]);
  sub_1ABF320C8();
  v22 = v24;
  v25 = 2;
  v14 = sub_1ABF3208C();
  v17 = v14;
  v18 = MEMORY[0x1E0DEE9D8];
  if (v22)
    v18 = v22;
  v22 = v18;
  v19 = v8;
  v20 = v15;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v13;
  v10[2] = v22;
  v10[3] = v17;
  v10[4] = v20;
  return result;
}

unint64_t sub_1ABEBCEE8()
{
  unint64_t result;

  result = qword_1ED34EB80;
  if (!qword_1ED34EB80)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AC40, &type metadata for SDSMetadata.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EB80);
  }
  return result;
}

void sub_1ABEBCF2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FBA8)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FBA8);
  }
}

unint64_t sub_1ABEBCF80()
{
  unint64_t result;

  result = qword_1ED34EB78;
  if (!qword_1ED34EB78)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AC18, &type metadata for SDSMetadata.SourceLogo);
    atomic_store(result, (unint64_t *)&qword_1ED34EB78);
  }
  return result;
}

uint64_t sub_1ABEBCFC4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABEBCF2C();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABEBD028()
{
  unint64_t result;

  result = qword_1ED34CDC0;
  if (!qword_1ED34CDC0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4ABF0, &type metadata for SDSMetadata.SourceLogo);
    atomic_store(result, (unint64_t *)&qword_1ED34CDC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSMetadata.Source.CodingKeys()
{
  return &type metadata for SDSMetadata.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSMetadata.SourceLogo()
{
  return &type metadata for SDSMetadata.SourceLogo;
}

unint64_t sub_1ABEBD094()
{
  unint64_t result;

  result = qword_1EEC449C0;
  if (!qword_1EEC449C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AAD8, &type metadata for SDSMetadata.SourceLogo);
    atomic_store(result, (unint64_t *)&qword_1EEC449C0);
  }
  return result;
}

unint64_t sub_1ABEBD0DC()
{
  unint64_t result;

  result = qword_1EEC449C8;
  if (!qword_1EEC449C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4ABC8, &type metadata for SDSMetadata.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC449C8);
  }
  return result;
}

unint64_t sub_1ABEBD124()
{
  unint64_t result;

  result = qword_1ED34EB90;
  if (!qword_1ED34EB90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AB00, &type metadata for SDSMetadata.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EB90);
  }
  return result;
}

unint64_t sub_1ABEBD16C()
{
  unint64_t result;

  result = qword_1ED34EB88;
  if (!qword_1ED34EB88)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AB28, &type metadata for SDSMetadata.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EB88);
  }
  return result;
}

uint64_t sub_1ABEBD1B0()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1ABEBD1F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  _QWORD v6[4];

  v3 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF32344();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    sub_1ABF32248();
    v5 = sub_1ABF32068();
    swift_bridgeObjectRelease();
    if (v5 == 2)
      v3 = 2;
    else
      v3 = v5 == 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

uint64_t sub_1ABEBD2EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1ABCF4DA8(0, &qword_1ED34FE18, (uint64_t (*)(void))sub_1ABEBD494, (uint64_t)&type metadata for SDSMetadata.SourceLogo.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEBD494();
  sub_1ABF3235C();
  if (!v1)
  {
    v12 = 0;
    v8 = sub_1ABF320E0();
    v11 = 1;
    sub_1ABEBD4D8();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1ABEBD494()
{
  unint64_t result;

  result = qword_1ED34EB58;
  if (!qword_1ED34EB58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AE78, &type metadata for SDSMetadata.SourceLogo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EB58);
  }
  return result;
}

unint64_t sub_1ABEBD4D8()
{
  unint64_t result;

  result = qword_1ED34EB70;
  if (!qword_1ED34EB70)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AE50, &type metadata for SDSMetadata.SourceLogo.Variant);
    atomic_store(result, (unint64_t *)&qword_1ED34EB70);
  }
  return result;
}

unint64_t sub_1ABEBD51C()
{
  unint64_t result;

  result = qword_1ED34CDB0;
  if (!qword_1ED34CDB0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AE28, &type metadata for SDSMetadata.SourceLogo.Variant);
    atomic_store(result, (unint64_t *)&qword_1ED34CDB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDSMetadata.SourceLogo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABEBD5AC + 4 * byte_1ABF4A7A7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABEBD5E0 + 4 * byte_1ABF4A7A2[v4]))();
}

uint64_t sub_1ABEBD5E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEBD5E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEBD5F0);
  return result;
}

uint64_t sub_1ABEBD5FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEBD604);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABEBD608(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEBD610(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSMetadata.SourceLogo.CodingKeys()
{
  return &type metadata for SDSMetadata.SourceLogo.CodingKeys;
}

uint64_t _s10StocksCore11SDSMetadataV10SourceLogoV7VariantOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABEBD678 + 4 * byte_1ABF4A7B1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABEBD6AC + 4 * byte_1ABF4A7AC[v4]))();
}

uint64_t sub_1ABEBD6AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEBD6B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEBD6BCLL);
  return result;
}

uint64_t sub_1ABEBD6C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEBD6D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABEBD6D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEBD6DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSMetadata.SourceLogo.Variant()
{
  return &type metadata for SDSMetadata.SourceLogo.Variant;
}

unint64_t sub_1ABEBD6FC()
{
  unint64_t result;

  result = qword_1EEC449D0;
  if (!qword_1EEC449D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AD10, &type metadata for SDSMetadata.SourceLogo.Variant);
    atomic_store(result, (unint64_t *)&qword_1EEC449D0);
  }
  return result;
}

unint64_t sub_1ABEBD744()
{
  unint64_t result;

  result = qword_1EEC449D8;
  if (!qword_1EEC449D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AE00, &type metadata for SDSMetadata.SourceLogo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC449D8);
  }
  return result;
}

unint64_t sub_1ABEBD78C()
{
  unint64_t result;

  result = qword_1ED34EB68;
  if (!qword_1ED34EB68)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AD38, &type metadata for SDSMetadata.SourceLogo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EB68);
  }
  return result;
}

unint64_t sub_1ABEBD7D4()
{
  unint64_t result;

  result = qword_1ED34EB60;
  if (!qword_1ED34EB60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AD60, &type metadata for SDSMetadata.SourceLogo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EB60);
  }
  return result;
}

unint64_t sub_1ABEBD818()
{
  unint64_t result;

  result = qword_1ED34CDB8;
  if (!qword_1ED34CDB8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AC98, &type metadata for SDSMetadata.SourceLogo.Variant);
    atomic_store(result, (unint64_t *)&qword_1ED34CDB8);
  }
  return result;
}

uint64_t CohortConfig.dilutionFactor.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CohortConfig.favoritedBoost.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t CohortConfig.globalWeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t CohortConfig.paddingFactor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t CohortConfig.postBaselineCurvature.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t CohortConfig.preBaselineCurvature.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t CohortConfig.userBaseline.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t sub_1ABEBD8B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEBD8F0 + 4 * byte_1ABF4AEC8[a1]))(0x6E6F6974756C6964, 0xEE00726F74636146);
}

uint64_t sub_1ABEBD8F0()
{
  return 0x657469726F766166;
}

uint64_t sub_1ABEBD914()
{
  return 0x65576C61626F6C67;
}

uint64_t sub_1ABEBD934()
{
  return 0x46676E6964646170;
}

unint64_t sub_1ABEBD958()
{
  return 0xD000000000000015;
}

unint64_t sub_1ABEBD978()
{
  return 0xD000000000000014;
}

uint64_t sub_1ABEBD994()
{
  return 0x6573614272657375;
}

uint64_t sub_1ABEBD9B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEBD9F4 + 4 * byte_1ABF4AECF[a1]))(0x6E6F6974756C6964, 0xEE00726F74636146);
}

uint64_t sub_1ABEBD9F4()
{
  return 0x657469726F766166;
}

uint64_t sub_1ABEBDA18()
{
  return 0x65576C61626F6C67;
}

uint64_t sub_1ABEBDA38()
{
  return 0x46676E6964646170;
}

unint64_t sub_1ABEBDA5C()
{
  return 0xD000000000000015;
}

unint64_t sub_1ABEBDA7C()
{
  return 0xD000000000000014;
}

uint64_t sub_1ABEBDA98()
{
  return 0x6573614272657375;
}

void sub_1ABEBDAB8(char *a1)
{
  sub_1ABDE3D6C(*a1);
}

void sub_1ABEBDAC4()
{
  char *v0;

  sub_1ABF0FFEC(0, *v0);
}

void sub_1ABEBDAD0(uint64_t a1)
{
  char *v1;

  sub_1ABD99408(a1, *v1);
}

void sub_1ABEBDAD8(uint64_t a1)
{
  char *v1;

  sub_1ABF0FFEC(a1, *v1);
}

uint64_t sub_1ABEBDAE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEBE9F4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBDB0C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABEBD8B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABEBDB34()
{
  unsigned __int8 *v0;

  return sub_1ABEBD9B4(*v0);
}

uint64_t sub_1ABEBDB3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEBE9F4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBDB60()
{
  sub_1ABEBDED0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEBDB88()
{
  sub_1ABEBDED0();
  return sub_1ABF32398();
}

void __swiftcall CohortConfig.init(dilutionFactor:favoritedBoost:globalWeight:paddingFactor:postBaselineCurvature:preBaselineCurvature:userBaseline:)(StocksCore::CohortConfig *__return_ptr retstr, Swift::Double_optional dilutionFactor, Swift::Double_optional favoritedBoost, Swift::Double_optional globalWeight, Swift::Double_optional paddingFactor, Swift::Double_optional postBaselineCurvature, Swift::Double_optional preBaselineCurvature, Swift::Double_optional userBaseline)
{
  char v8;
  Swift::Double v9;
  char v10;
  Swift::Double v11;
  char v12;
  Swift::Double v13;
  char v14;

  retstr->dilutionFactor.value = *(Swift::Double *)&dilutionFactor.is_nil;
  retstr->dilutionFactor.is_nil = favoritedBoost.is_nil;
  retstr->favoritedBoost.value = *(Swift::Double *)&globalWeight.is_nil;
  retstr->favoritedBoost.is_nil = paddingFactor.is_nil;
  retstr->globalWeight.value = *(Swift::Double *)&postBaselineCurvature.is_nil;
  retstr->globalWeight.is_nil = preBaselineCurvature.is_nil;
  retstr->paddingFactor.value = *(Swift::Double *)&userBaseline.is_nil;
  retstr->paddingFactor.is_nil = v8 & 1;
  retstr->postBaselineCurvature.value = v9;
  retstr->postBaselineCurvature.is_nil = v10 & 1;
  retstr->preBaselineCurvature.value = v11;
  retstr->preBaselineCurvature.is_nil = v12 & 1;
  retstr->userBaseline.value = v13;
  retstr->userBaseline.is_nil = v14 & 1;
}

uint64_t CohortConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v24;
  char *v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  sub_1ABEBE18C(0, &qword_1ED34FE28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEBDED0();
  sub_1ABF3235C();
  if (!v2)
  {
    v44 = 0;
    v10 = sub_1ABF320A4();
    v12 = v11;
    v43 = 1;
    v13 = sub_1ABF320A4();
    v36 = v14;
    v37 = v13;
    v42 = 2;
    v15 = sub_1ABF320A4();
    v34 = v16;
    v35 = v15;
    v41 = 3;
    v17 = sub_1ABF320A4();
    v32 = v18;
    v33 = v17;
    v40 = 4;
    v19 = sub_1ABF320A4();
    v30 = v20;
    v31 = v19;
    v39 = 5;
    v21 = sub_1ABF320A4();
    HIDWORD(v28) = v22;
    v29 = v21;
    v38 = 6;
    v24 = sub_1ABF320A4();
    v25 = v9;
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v12 & 1;
    *(_QWORD *)(a2 + 16) = v37;
    *(_BYTE *)(a2 + 24) = v36 & 1;
    *(_QWORD *)(a2 + 32) = v35;
    *(_BYTE *)(a2 + 40) = v34 & 1;
    *(_QWORD *)(a2 + 48) = v33;
    *(_BYTE *)(a2 + 56) = v32 & 1;
    *(_QWORD *)(a2 + 64) = v31;
    *(_BYTE *)(a2 + 72) = v30 & 1;
    *(_QWORD *)(a2 + 80) = v29;
    *(_BYTE *)(a2 + 88) = BYTE4(v28) & 1;
    *(_QWORD *)(a2 + 96) = v24;
    *(_BYTE *)(a2 + 104) = v27 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1ABEBDED0()
{
  unint64_t result;

  result = qword_1ED34EC10;
  if (!qword_1ED34EC10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B0C4, &type metadata for CohortConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EC10);
  }
  return result;
}

uint64_t CohortConfig.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  sub_1ABEBE18C(0, &qword_1ED34FEF0, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v23 = *(_QWORD *)(v1 + 16);
  v22 = *(unsigned __int8 *)(v1 + 24);
  v21 = *(_QWORD *)(v1 + 32);
  v20 = *(unsigned __int8 *)(v1 + 40);
  v19 = *(_QWORD *)(v1 + 48);
  v18 = *(unsigned __int8 *)(v1 + 56);
  v17 = *(_QWORD *)(v1 + 64);
  v8 = *(unsigned __int8 *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 80);
  v15 = *(unsigned __int8 *)(v1 + 88);
  v16 = v8;
  v13 = *(_QWORD *)(v1 + 96);
  v14 = v9;
  v12[1] = *(unsigned __int8 *)(v1 + 104);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEBDED0();
  sub_1ABF32368();
  v31 = 0;
  v10 = v24;
  sub_1ABF32158();
  if (!v10)
  {
    v30 = 1;
    sub_1ABF32158();
    v29 = 2;
    sub_1ABF32158();
    v28 = 3;
    sub_1ABF32158();
    v27 = 4;
    sub_1ABF32158();
    v26 = 5;
    sub_1ABF32158();
    v25 = 6;
    sub_1ABF32158();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1ABEBE18C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABEBDED0();
    v7 = a3(a1, &type metadata for CohortConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t CohortConfig.hash(into:)()
{
  _BYTE *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v7;

  v1 = v0[24];
  v7 = v0[40];
  v2 = v0[56];
  v3 = v0[72];
  v4 = v0[88];
  v5 = v0[104];
  if (v0[8] == 1)
  {
    sub_1ABF32320();
    if (!v1)
      goto LABEL_3;
  }
  else
  {
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v1)
    {
LABEL_3:
      sub_1ABF32320();
      sub_1ABF3232C();
      if (!v7)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  sub_1ABF32320();
  if (!v7)
  {
LABEL_4:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v2)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  sub_1ABF32320();
  if (!v2)
  {
LABEL_5:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v3)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  sub_1ABF32320();
  if (!v3)
  {
LABEL_6:
    sub_1ABF32320();
    sub_1ABF3232C();
    if (!v4)
      goto LABEL_7;
LABEL_14:
    sub_1ABF32320();
    if (!v5)
      goto LABEL_8;
    return sub_1ABF32320();
  }
LABEL_13:
  sub_1ABF32320();
  if (v4)
    goto LABEL_14;
LABEL_7:
  sub_1ABF32320();
  sub_1ABF3232C();
  if (!v5)
  {
LABEL_8:
    sub_1ABF32320();
    return sub_1ABF3232C();
  }
  return sub_1ABF32320();
}

uint64_t CohortConfig.hashValue.getter()
{
  sub_1ABF32308();
  CohortConfig.hash(into:)();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBE474@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CohortConfig.init(from:)(a1, a2);
}

uint64_t sub_1ABEBE488(_QWORD *a1)
{
  return CohortConfig.encode(to:)(a1);
}

uint64_t sub_1ABEBE4A0()
{
  sub_1ABF32308();
  CohortConfig.hash(into:)();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBE554()
{
  sub_1ABF32308();
  CohortConfig.hash(into:)();
  return sub_1ABF32338();
}

uint64_t _s10StocksCore12CohortConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  char v3;
  double v4;
  char v5;
  double v6;
  char v7;
  double v8;
  char v9;
  double v10;
  char v11;
  double v12;
  int v13;
  int v14;
  unsigned int v15;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  int v22;

  v2 = *(double *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(double *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(double *)(a1 + 48);
  v7 = *(_BYTE *)(a1 + 56);
  v8 = *(double *)(a1 + 64);
  v9 = *(_BYTE *)(a1 + 72);
  v10 = *(double *)(a1 + 80);
  v11 = *(_BYTE *)(a1 + 88);
  v12 = *(double *)(a1 + 96);
  v13 = *(unsigned __int8 *)(a1 + 104);
  v14 = *(unsigned __int8 *)(a2 + 88);
  v15 = *(unsigned __int8 *)(a2 + 104);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 == *(double *)a2)
      v17 = *(_BYTE *)(a2 + 8);
    else
      v17 = 1;
    if ((v17 & 1) != 0)
      return 0;
  }
  if ((v3 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (v2 == *(double *)(a2 + 16))
      v18 = *(_BYTE *)(a2 + 24);
    else
      v18 = 1;
    if ((v18 & 1) != 0)
      return 0;
  }
  if ((v5 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (v4 == *(double *)(a2 + 32))
      v19 = *(_BYTE *)(a2 + 40);
    else
      v19 = 1;
    if ((v19 & 1) != 0)
      return 0;
  }
  if ((v7 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      return 0;
  }
  else
  {
    if (v6 == *(double *)(a2 + 48))
      v20 = *(_BYTE *)(a2 + 56);
    else
      v20 = 1;
    if ((v20 & 1) != 0)
      return 0;
  }
  if ((v9 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 72))
      return 0;
  }
  else
  {
    if (v8 == *(double *)(a2 + 64))
      v21 = *(_BYTE *)(a2 + 72);
    else
      v21 = 1;
    if ((v21 & 1) != 0)
      return 0;
  }
  if ((v11 & 1) != 0)
  {
    if (((v14 ^ 1 | v13) & 1) != 0)
      return v14 & v15;
  }
  else
  {
    if (v10 == *(double *)(a2 + 80))
      v22 = *(unsigned __int8 *)(a2 + 88);
    else
      v22 = 1;
    if (((v22 | v13) & 1) != 0)
      return v15 & ~v22;
  }
  return (v12 == *(double *)(a2 + 96)) & ~v15;
}

unint64_t sub_1ABEBE768()
{
  unint64_t result;

  result = qword_1EEC449E0;
  if (!qword_1EEC449E0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for CohortConfig, &type metadata for CohortConfig);
    atomic_store(result, (unint64_t *)&qword_1EEC449E0);
  }
  return result;
}

__n128 __swift_memcpy105_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CohortConfig(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 105))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CohortConfig(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 105) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CohortConfig()
{
  return &type metadata for CohortConfig;
}

uint64_t storeEnumTagSinglePayload for CohortConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1ABEBE89C + 4 * byte_1ABF4AEDB[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1ABEBE8D0 + 4 * byte_1ABF4AED6[v4]))();
}

uint64_t sub_1ABEBE8D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEBE8D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEBE8E0);
  return result;
}

uint64_t sub_1ABEBE8EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEBE8F4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1ABEBE8F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEBE900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CohortConfig.CodingKeys()
{
  return &type metadata for CohortConfig.CodingKeys;
}

unint64_t sub_1ABEBE920()
{
  unint64_t result;

  result = qword_1EEC449E8;
  if (!qword_1EEC449E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B09C, &type metadata for CohortConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC449E8);
  }
  return result;
}

unint64_t sub_1ABEBE968()
{
  unint64_t result;

  result = qword_1ED34EC20;
  if (!qword_1ED34EC20)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AFD4, &type metadata for CohortConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EC20);
  }
  return result;
}

unint64_t sub_1ABEBE9B0()
{
  unint64_t result;

  result = qword_1ED34EC18;
  if (!qword_1ED34EC18)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4AFFC, &type metadata for CohortConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EC18);
  }
  return result;
}

uint64_t sub_1ABEBE9F4()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1ABEBEA3C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEBEA78 + 4 * byte_1ABF4B120[a1]))(0x6F626D79735F6469, 0xE90000000000006CLL);
}

uint64_t sub_1ABEBEA78()
{
  return 0x6563697270;
}

uint64_t sub_1ABEBEA8C()
{
  return 0x65676E616863;
}

uint64_t sub_1ABEBEAA0()
{
  return 0x635F74656B72616DLL;
}

uint64_t sub_1ABEBEAC0()
{
  return 0x6B6D5F7265746661;
}

unint64_t sub_1ABEBEAE4()
{
  return 0xD000000000000010;
}

uint64_t sub_1ABEBEB00()
{
  return 0x79636E6572727563;
}

uint64_t sub_1ABEBEB18()
{
  return 0x65676E6168637865;
}

uint64_t sub_1ABEBEB30()
{
  return 0x616E5F74726F6873;
}

uint64_t sub_1ABEBEB4C()
{
  return 0x7079745F61746164;
}

uint64_t sub_1ABEBEB68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEBEBA4 + 4 * byte_1ABF4B12A[a1]))(0x6F626D79735F6469, 0xE90000000000006CLL);
}

uint64_t sub_1ABEBEBA4()
{
  return 0x6563697270;
}

uint64_t sub_1ABEBEBB8()
{
  return 0x65676E616863;
}

uint64_t sub_1ABEBEBCC()
{
  return 0x635F74656B72616DLL;
}

uint64_t sub_1ABEBEBEC()
{
  return 0x6B6D5F7265746661;
}

unint64_t sub_1ABEBEC10()
{
  return 0xD000000000000010;
}

uint64_t sub_1ABEBEC2C()
{
  return 0x79636E6572727563;
}

uint64_t sub_1ABEBEC44()
{
  return 0x65676E6168637865;
}

uint64_t sub_1ABEBEC5C()
{
  return 0x616E5F74726F6873;
}

uint64_t sub_1ABEBEC78()
{
  return 0x7079745F61746164;
}

uint64_t sub_1ABEBEC94(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABE28538(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1ABEBEA3C);
}

uint64_t sub_1ABEBECA0(uint64_t a1, uint64_t a2)
{
  return sub_1ABE285D0(a1, a2, (void (*)(uint64_t))sub_1ABEBEA3C);
}

uint64_t sub_1ABEBECAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABE28640(a1, a2, a3, (void (*)(_QWORD))sub_1ABEBEA3C);
}

uint64_t sub_1ABEBECB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABE2868C(a1, a2, a3, (void (*)(uint64_t))sub_1ABEBEA3C);
}

uint64_t sub_1ABEBECC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEC18F4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBECF8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABEBEA3C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABEBED20()
{
  unsigned __int8 *v0;

  return sub_1ABEBEB68(*v0);
}

uint64_t sub_1ABEBED28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEC18F4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBED54()
{
  sub_1ABEC5258();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEBED7C()
{
  sub_1ABEC5258();
  return sub_1ABF32398();
}

uint64_t sub_1ABEBEDA4()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1ABEBEDF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEBEE1C + 4 * byte_1ABF4B134[a1]))(7823730, 0xE300000000000000);
}

uint64_t sub_1ABEBEE1C()
{
  return 0x6E69727453776172;
}

uint64_t sub_1ABEBEE38()
{
  return 7630182;
}

uint64_t sub_1ABEBEE44()
{
  return 0x756F735F61746164;
}

uint64_t sub_1ABEBEE64(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEBEE90 + 4 * byte_1ABF4B138[a1]))(7823730, 0xE300000000000000);
}

uint64_t sub_1ABEBEE90()
{
  return 0x6E69727453776172;
}

uint64_t sub_1ABEBEEAC()
{
  return 7630182;
}

uint64_t sub_1ABEBEEB8()
{
  return 0x756F735F61746164;
}

void *sub_1ABEBEED8@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _BYTE __src[360];

  result = sub_1ABEC0E64(a1, __src);
  if (!v2)
    return memcpy(a2, __src, 0x168uLL);
  return result;
}

uint64_t sub_1ABEBEF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1AF438F30](&unk_1ABF4C080, a3);
  return sub_1ABF32260();
}

uint64_t sub_1ABEBEF7C(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4C080, a1);
  return sub_1ABF319A8();
}

uint64_t sub_1ABEBEFC8()
{
  MEMORY[0x1AF438F30](&unk_1ABF4C080);
  return sub_1ABF319C0();
}

uint64_t sub_1ABEBF018()
{
  MEMORY[0x1AF438F30](&unk_1ABF4C080);
  return sub_1ABF319B4();
}

uint64_t sub_1ABEBF068@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEBEDA4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBF094@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABEBEDF0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABEBF0BC()
{
  unsigned __int8 *v0;

  return sub_1ABEBEE64(*v0);
}

uint64_t sub_1ABEBF0C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEBEDEC();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBF0E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEC18EC();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBF110(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4C1C8, a1);
  return sub_1ABF3238C();
}

uint64_t sub_1ABEBF144(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4C1C8, a1);
  return sub_1ABF32398();
}

uint64_t sub_1ABEBF178@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char v61;
  char v62;
  char v63;

  v52 = a4;
  v7 = sub_1ABF31D5C();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)v46 - v8;
  v54 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v9);
  v49 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for YahooMultiQuoteResponse.Value.CodingKeys(255, a2, a3, v11);
  MEMORY[0x1AF438F30](&unk_1ABF4C1C8, v12);
  v58 = sub_1ABF32128();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v14 = (char *)v46 - v13;
  v55 = a3;
  v57 = type metadata accessor for YahooMultiQuoteResponse.Value(0, a2, a3, v15);
  v16 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v18 = (char *)v46 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v59 = v14;
  v19 = v60;
  sub_1ABF3235C();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v60 = v16;
  v20 = (int *)v57;
  v63 = 0;
  v21 = sub_1ABF320E0();
  v23 = (uint64_t *)&v18[v20[9]];
  *v23 = v21;
  v23[1] = v24;
  v62 = 2;
  v25 = v24;
  v26 = v21;
  sub_1ABF2FF5C();
  v27 = sub_1ABF320E0();
  v46[1] = v26;
  v47 = 0;
  v48 = v25;
  v29 = (uint64_t *)&v18[v20[10]];
  *v29 = v27;
  v29[1] = v28;
  v61 = 3;
  v30 = sub_1ABF320E0();
  v31 = v20;
  v32 = (uint64_t *)&v18[v20[11]];
  *v32 = v30;
  v32[1] = v33;
  v34 = a2;
  v35 = v53;
  v36 = v55;
  sub_1ABF32218();
  v37 = v54;
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48))(v35, 1, v34);
  v39 = v59;
  if (v38 == 1)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v51);
    v41 = type metadata accessor for YahooMultiQuoteResponse.Value.ValueError(0, v34, v36, v40);
    MEMORY[0x1AF438F30](&unk_1ABF4C188, v41);
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v58);
    v42 = v47;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    if (!v42)
      swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v59, v58);
    v43 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v44 = v49;
    v43(v49, v35, v34);
    v43(v18, v44, v34);
    v45 = v60;
    (*(void (**)(uint64_t, char *, int *))(v60 + 16))(v52, v18, v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (*(uint64_t (**)(char *, int *))(v45 + 8))(v18, v31);
  }
}

uint64_t sub_1ABEBF5C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEBF600 + 4 * byte_1ABF4B13C[a1]))(0x5F52414C55474552, 0xEE0054454B52414DLL);
}

uint64_t sub_1ABEBF600()
{
  return 0x4B52414D5F455250;
}

unint64_t sub_1ABEBF61C()
{
  return 0xD000000000000014;
}

uint64_t sub_1ABEBF6DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ABEBF178(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1ABEBF6F8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABE28538(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1ABEBF5C0);
}

uint64_t sub_1ABEBF704(uint64_t a1, uint64_t a2)
{
  return sub_1ABE285D0(a1, a2, (void (*)(uint64_t))sub_1ABEBF5C0);
}

uint64_t sub_1ABEBF710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABE28640(a1, a2, a3, (void (*)(_QWORD))sub_1ABEBF5C0);
}

uint64_t sub_1ABEBF71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABE2868C(a1, a2, a3, (void (*)(uint64_t))sub_1ABEBF5C0);
}

uint64_t sub_1ABEBF728@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEC18F4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBF75C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABEBF5C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1ABEBF784(char *a1)
{
  sub_1ABDE16AC(*a1);
}

void sub_1ABEBF790()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABEBF7D0()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABEBF85C()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABEBF88C()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABEBF904()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABEBF940()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBF9CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEC1938();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBF9F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABEBFA1C + 4 * byte_1ABF4B155[*v0]))();
}

void sub_1ABEBFA1C(_QWORD *a1@<X8>)
{
  *a1 = 1701667182;
  a1[1] = 0xE400000000000000;
}

void sub_1ABEBFA30(_QWORD *a1@<X8>)
{
  *a1 = 0x737574617473;
  a1[1] = 0xE600000000000000;
}

void sub_1ABEBFA48(_QWORD *a1@<X8>)
{
  *a1 = 0x695F6D6165727473;
  a1[1] = 0xEF6C61767265746ELL;
}

void sub_1ABEBFA70(_QWORD *a1@<X8>)
{
  *a1 = 0x65706F5F7478656ELL;
  a1[1] = 0xE90000000000006ELL;
}

uint64_t sub_1ABEBFA90()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEBFAB4 + 4 * byte_1ABF4B15A[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1ABEBFAB4()
{
  return 1701667182;
}

uint64_t sub_1ABEBFAC4()
{
  return 0x737574617473;
}

uint64_t sub_1ABEBFAD8()
{
  return 0x695F6D6165727473;
}

uint64_t sub_1ABEBFAFC()
{
  return 0x65706F5F7478656ELL;
}

uint64_t sub_1ABEBFB18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEC1938();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBFB3C()
{
  sub_1ABEC2C84();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEBFB64()
{
  sub_1ABEC2C84();
  return sub_1ABF32398();
}

uint64_t sub_1ABEBFB8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABEBFBC8 + 4 * byte_1ABF4B15F[a1]))(0xD000000000000020, 0x80000001ABF54B70);
}

uint64_t sub_1ABEBFBC8()
{
  uint64_t v0;

  return v0 + 1;
}

unint64_t sub_1ABEBFC00()
{
  return 0xD000000000000025;
}

uint64_t sub_1ABEBFC28()
{
  return 0x4E574F4E4B4E55;
}

__n128 sub_1ABEBFC40@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_1ABEC1980(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1ABEBFC90(char *a1, char *a2)
{
  return sub_1ABDE1830(*a1, *a2);
}

uint64_t sub_1ABEBFC9C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBFD08()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEBFD50()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEBFDB8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1ABEBFE14(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 25705;
  if (*v1)
    v2 = 1701667182;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABEBFE40()
{
  _BYTE *v0;

  if (*v0)
    return 1701667182;
  else
    return 25705;
}

uint64_t sub_1ABEBFE68@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1ABEBFEC8()
{
  sub_1ABEC2CC8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEBFEF0()
{
  sub_1ABEC2CC8();
  return sub_1ABF32398();
}

void sub_1ABEBFF18(char *a1)
{
  sub_1ABDE18C0(*a1);
}

void sub_1ABEBFF24()
{
  char *v0;

  sub_1ABF10804(0, *v0);
}

void sub_1ABEBFF30(uint64_t a1)
{
  char *v1;

  sub_1ABD98ED0(a1, *v1);
}

void sub_1ABEBFF38(uint64_t a1)
{
  char *v1;

  sub_1ABF10804(a1, *v1);
}

uint64_t sub_1ABEBFF40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEC1D1C();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEBFF6C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABEBFB8C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABEBFF94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1ABEC1D64(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1ABEBFFC0@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

uint64_t sub_1ABEBFFCC@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABEBFFD8()
{
  sub_1ABEC32C4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEC0000()
{
  sub_1ABEC32C4();
  return sub_1ABF32398();
}

_QWORD *sub_1ABEC0028@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1ABEC1F20(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1ABEC0054(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE1A78(*a1, *a2);
}

uint64_t sub_1ABEC0060()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEC0108()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEC018C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEC0230@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEC2078();
  *a1 = result;
  return result;
}

void sub_1ABEC025C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE900000000000073;
  v5 = 0x65676E6168637865;
  if (v2 != 1)
  {
    v5 = 0x756F735F61746164;
    v4 = 0xEC00000073656372;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7365746F7571;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ABEC02C4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65676E6168637865;
  if (*v0 != 1)
    v1 = 0x756F735F61746164;
  if (*v0)
    return v1;
  else
    return 0x7365746F7571;
}

uint64_t sub_1ABEC0328@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEC2078();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEC034C()
{
  sub_1ABEC3630();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEC0374()
{
  sub_1ABEC3630();
  return sub_1ABF32398();
}

uint64_t sub_1ABEC039C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1ABEC20C0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1ABEC03C8@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

uint64_t sub_1ABEC03D4@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABEC03E0()
{
  sub_1ABEC3914();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEC0408()
{
  sub_1ABEC3914();
  return sub_1ABF32398();
}

uint64_t sub_1ABEC0430@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1ABEC2334(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABEC0458()
{
  return sub_1ABDE6D7C();
}

uint64_t sub_1ABEC0470()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABEC0488()
{
  return sub_1ABDE6DE0();
}

uint64_t sub_1ABEC04A0@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

void sub_1ABEC04AC(_QWORD *a1@<X8>)
{
  *a1 = 0x65676E6168637865;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1ABEC04C8()
{
  return 0x65676E6168637865;
}

uint64_t sub_1ABEC04E0@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABEC04EC()
{
  sub_1ABEC399C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEC0514()
{
  sub_1ABEC399C();
  return sub_1ABF32398();
}

uint64_t sub_1ABEC053C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1ABEC2568(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABEC0564()
{
  return sub_1ABDE6D7C();
}

uint64_t sub_1ABEC0584()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABEC05A4()
{
  return sub_1ABDE6DE0();
}

uint64_t sub_1ABEC05C4@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

void sub_1ABEC05D0(_QWORD *a1@<X8>)
{
  *a1 = 0x756F735F61746164;
  a1[1] = 0xEB00000000656372;
}

uint64_t sub_1ABEC05F4()
{
  return 0x756F735F61746164;
}

uint64_t sub_1ABEC0614@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABEC0620()
{
  sub_1ABEC3A24();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEC0648()
{
  sub_1ABEC3A24();
  return sub_1ABF32398();
}

uint64_t sub_1ABEC0670@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1ABEC2828(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABEC0698()
{
  sub_1ABEC2BFC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEC06C0()
{
  sub_1ABEC2BFC();
  return sub_1ABF32398();
}

_QWORD *sub_1ABEC06E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1ABEC2AA4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1ABEC0714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  if (a1)
    v1 = a1;
  else
    v1 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    sub_1ABF2FF5C();
    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_21:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v3 = v1 + 48;
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v6 = *(_QWORD *)(v3 - 8);
    v26 = v2;
    v27 = *(_QWORD *)(v3 - 16);
    v8 = *(_QWORD *)v3;
    v7 = *(_QWORD *)(v3 + 8);
    v28 = *(_BYTE *)(v3 + 16);
    v9 = *(_QWORD *)(v3 + 32);
    v10 = *(_QWORD *)(v3 + 48);
    v29 = *(_QWORD *)(v3 + 24);
    v30 = *(_QWORD *)(v3 + 40);
    sub_1ABF2FF5C();
    swift_bridgeObjectRetain_n();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = sub_1ABD00F9C(v8, v7);
    v14 = v4[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      break;
    v17 = v12;
    if (v4[3] >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1ABE6FEC8();
        if ((v17 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1ABE6C918(v16, isUniquelyReferenced_nonNull_native);
      v18 = sub_1ABD00F9C(v8, v7);
      if ((v17 & 1) != (v19 & 1))
        goto LABEL_24;
      v13 = v18;
      if ((v17 & 1) != 0)
      {
LABEL_6:
        v5 = v4[7] + 72 * v13;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)v5 = v27;
        *(_QWORD *)(v5 + 8) = v6;
        *(_QWORD *)(v5 + 16) = v8;
        *(_QWORD *)(v5 + 24) = v7;
        *(_BYTE *)(v5 + 32) = v28;
        *(_QWORD *)(v5 + 40) = v29;
        *(_QWORD *)(v5 + 48) = v9;
        *(_QWORD *)(v5 + 56) = v30;
        *(_QWORD *)(v5 + 64) = v10;
        goto LABEL_7;
      }
    }
    v4[(v13 >> 6) + 8] |= 1 << v13;
    v20 = (uint64_t *)(v4[6] + 16 * v13);
    *v20 = v8;
    v20[1] = v7;
    v21 = v4[7] + 72 * v13;
    *(_QWORD *)v21 = v27;
    *(_QWORD *)(v21 + 8) = v6;
    *(_QWORD *)(v21 + 16) = v8;
    *(_QWORD *)(v21 + 24) = v7;
    *(_BYTE *)(v21 + 32) = v28;
    *(_QWORD *)(v21 + 40) = v29;
    *(_QWORD *)(v21 + 48) = v9;
    *(_QWORD *)(v21 + 56) = v30;
    *(_QWORD *)(v21 + 64) = v10;
    v22 = v4[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_23;
    v4[2] = v24;
    sub_1ABF2FF5C();
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 += 72;
    v2 = v26 - 1;
    if (v26 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABEC09A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char isUniquelyReferenced_nonNull_native;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t result;

  if (a1)
    v1 = a1;
  else
    v1 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    sub_1ABF2FF5C();
    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_21:
    swift_bridgeObjectRelease();
    return (uint64_t)v4;
  }
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v3 = (_BYTE *)(v1 + 48);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v7 = *((_QWORD *)v3 - 2);
    v6 = *((_QWORD *)v3 - 1);
    v8 = *v3;
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = sub_1ABD00F9C(v7, v6);
    v12 = v4[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
      break;
    v15 = v10;
    if (v4[3] >= v14)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1ABE700F0();
        if ((v15 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1ABE6CCA8(v14, isUniquelyReferenced_nonNull_native);
      v16 = sub_1ABD00F9C(v7, v6);
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_24;
      v11 = v16;
      if ((v15 & 1) != 0)
      {
LABEL_6:
        v5 = v4[7] + 24 * v11;
        swift_bridgeObjectRelease();
        *(_QWORD *)v5 = v7;
        *(_QWORD *)(v5 + 8) = v6;
        *(_BYTE *)(v5 + 16) = v8;
        goto LABEL_7;
      }
    }
    v4[(v11 >> 6) + 8] |= 1 << v11;
    v18 = (uint64_t *)(v4[6] + 16 * v11);
    *v18 = v7;
    v18[1] = v6;
    v19 = v4[7] + 24 * v11;
    *(_QWORD *)v19 = v7;
    *(_QWORD *)(v19 + 8) = v6;
    *(_BYTE *)(v19 + 16) = v8;
    v20 = v4[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_23;
    v4[2] = v22;
    sub_1ABF2FF5C();
LABEL_7:
    v3 += 24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse()
{
  return &type metadata for YahooMultiQuoteResponse;
}

uint64_t destroy for YahooMultiQuoteResponse.Exchange()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YahooMultiQuoteResponse.Exchange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for YahooMultiQuoteResponse.Exchange(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for YahooMultiQuoteResponse.Exchange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsUIConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsUIConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Exchange()
{
  return &type metadata for YahooMultiQuoteResponse.Exchange;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.DataSource()
{
  return &type metadata for YahooMultiQuoteResponse.DataSource;
}

void *sub_1ABEC0E64@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  void *v119;
  _QWORD v120[45];
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;

  v119 = a2;
  sub_1ABDE97D0(0, &qword_1ED3516B0, (void (*)(void))sub_1ABEC5258);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v73 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEC5258();
  v8 = v166;
  sub_1ABF3235C();
  if (v8)
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v166 = v5;
  v118 = a1;
  LOBYTE(v121) = 0;
  v9 = sub_1ABF320E0();
  v12 = v11;
  v117 = v9;
  LOBYTE(v121) = 6;
  sub_1ABF2FF5C();
  v13 = sub_1ABF3208C();
  v15 = v14;
  v114 = v13;
  LOBYTE(v121) = 7;
  sub_1ABF2FF5C();
  v116 = v4;
  v112 = sub_1ABF3208C();
  v113 = v15;
  LOBYTE(v121) = 8;
  v17 = v16;
  sub_1ABF2FF5C();
  v18 = sub_1ABF3208C();
  v115 = v17;
  v111 = v18;
  LOBYTE(v121) = 9;
  v20 = v19;
  sub_1ABF2FF5C();
  v21 = sub_1ABF3208C();
  v23 = v22;
  v89 = v21;
  v78 = v20;
  v81 = v12;
  sub_1ABEC4464(0, v22, v24, v25);
  LOBYTE(v120[0]) = 1;
  sub_1ABEC529C(v26, v27, v28, v29);
  v88 = v23;
  sub_1ABF2FF5C();
  v30 = v116;
  sub_1ABF320C8();
  if (v123)
    v31 = v121;
  else
    v31 = 0;
  if (v123)
    v32 = v122;
  else
    v32 = 0;
  if (v123)
    v33 = v123;
  else
    v33 = 0;
  if (v123)
    v34 = v124;
  else
    v34 = 0;
  if (v123)
    v35 = v125;
  else
    v35 = 0;
  if (v123)
    v36 = v126;
  else
    v36 = 0;
  if (v123)
    v37 = v127;
  else
    v37 = 0;
  LOBYTE(v120[0]) = 2;
  v86 = v32;
  v87 = v31;
  v84 = v34;
  v85 = v33;
  v82 = v36;
  v83 = v35;
  v110 = v37;
  sub_1ABEB225C(v31, v32, v33);
  sub_1ABF320C8();
  if (v123)
    v38 = v121;
  else
    v38 = 0;
  if (v123)
    v39 = v122;
  else
    v39 = 0;
  if (v123)
    v40 = v123;
  else
    v40 = 0;
  if (v123)
    v41 = v124;
  else
    v41 = 0;
  if (v123)
    v42 = v125;
  else
    v42 = 0;
  if (v123)
    v43 = v126;
  else
    v43 = 0;
  if (v123)
    v44 = v127;
  else
    v44 = 0;
  LOBYTE(v120[0]) = 3;
  v103 = v38;
  v104 = v44;
  v108 = v40;
  v109 = v39;
  v106 = v42;
  v107 = v41;
  v105 = v43;
  sub_1ABEB225C(v38, v39, v40);
  sub_1ABF320C8();
  if (v123)
    v45 = v121;
  else
    v45 = 0;
  if (v123)
    v46 = v122;
  else
    v46 = 0;
  if (v123)
    v47 = v123;
  else
    v47 = 0;
  if (v123)
    v48 = v124;
  else
    v48 = 0;
  if (v123)
    v49 = v125;
  else
    v49 = 0;
  if (v123)
    v50 = v126;
  else
    v50 = 0;
  if (v123)
    v51 = v127;
  else
    v51 = 0;
  LOBYTE(v120[0]) = 4;
  v96 = v45;
  v97 = v51;
  v101 = v47;
  v102 = v46;
  v99 = v49;
  v100 = v48;
  v98 = v50;
  sub_1ABEB225C(v45, v46, v47);
  sub_1ABF320C8();
  if (v123)
    v52 = v121;
  else
    v52 = 0;
  if (v123)
    v53 = v122;
  else
    v53 = 0;
  if (v123)
    v54 = v123;
  else
    v54 = 0;
  if (v123)
    v55 = v124;
  else
    v55 = 0;
  if (v123)
    v56 = v125;
  else
    v56 = 0;
  if (v123)
    v57 = v126;
  else
    v57 = 0;
  if (v123)
    v58 = v127;
  else
    v58 = 0;
  LOBYTE(v120[0]) = 5;
  v59 = v52;
  v94 = v54;
  v95 = v53;
  v92 = v56;
  v93 = v55;
  v90 = v58;
  v91 = v57;
  sub_1ABEB225C(v52, v53, v54);
  sub_1ABF320C8();
  (*(void (**)(char *, uint64_t))(v166 + 8))(v7, v30);
  v60 = v123;
  if (v123)
  {
    v60 = v121;
    v61 = v122;
    v62 = v124;
    v63 = v125;
    v64 = v126;
    v65 = v127;
  }
  else
  {
    v61 = 0;
    v62 = 0;
    v63 = 0;
    v64 = 0;
    v65 = 0;
  }
  v120[0] = v117;
  v120[1] = v81;
  v120[2] = v87;
  v120[3] = v86;
  v120[4] = v85;
  v120[5] = v84;
  v120[6] = v83;
  v120[7] = v82;
  v120[8] = v110;
  v120[9] = v103;
  v120[10] = v109;
  v120[11] = v108;
  v120[12] = v107;
  v120[13] = v106;
  v120[14] = v105;
  v120[15] = v104;
  v120[16] = v96;
  v120[17] = v102;
  v120[18] = v101;
  v120[19] = v100;
  v120[20] = v99;
  v120[21] = v98;
  v120[22] = v97;
  v80 = v59;
  v120[23] = v59;
  v120[24] = v95;
  v120[25] = v94;
  v120[26] = v93;
  v120[27] = v92;
  v120[28] = v91;
  v120[29] = v90;
  v120[30] = v60;
  v120[31] = v61;
  v120[32] = v123;
  v166 = v123;
  v120[33] = v62;
  v120[34] = v63;
  v120[35] = v64;
  v120[36] = v65;
  v120[37] = v114;
  v120[38] = v113;
  v120[39] = v112;
  v120[40] = v115;
  v120[41] = v111;
  v120[42] = v78;
  v120[43] = v89;
  v120[44] = v88;
  v116 = v60;
  v79 = v61;
  v74 = v62;
  v75 = v63;
  v76 = v64;
  v77 = v65;
  sub_1ABEB225C(v60, v61, v123);
  sub_1ABEB20A8(v120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABEB2448(v116, v79, v166);
  sub_1ABEB2448(v80, v95, v94);
  sub_1ABEB2448(v96, v102, v101);
  sub_1ABEB2448(v103, v109, v108);
  v67 = v86;
  v66 = v87;
  v68 = v84;
  v69 = v85;
  v70 = v82;
  v71 = v83;
  sub_1ABEB2448(v87, v86, v85);
  v72 = v81;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
  v121 = v117;
  v122 = v72;
  v123 = v66;
  v124 = v67;
  v125 = v69;
  v126 = v68;
  v127 = v71;
  v128 = v70;
  v129 = v110;
  v130 = v103;
  v131 = v109;
  v132 = v108;
  v133 = v107;
  v134 = v106;
  v135 = v105;
  v136 = v104;
  v137 = v96;
  v138 = v102;
  v139 = v101;
  v140 = v100;
  v141 = v99;
  v142 = v98;
  v143 = v97;
  v144 = v80;
  v145 = v95;
  v146 = v94;
  v147 = v93;
  v148 = v92;
  v149 = v91;
  v150 = v90;
  v151 = v116;
  v152 = v79;
  v153 = v166;
  v154 = v74;
  v155 = v75;
  v156 = v76;
  v157 = v77;
  v158 = v114;
  v159 = v113;
  v160 = v112;
  v161 = v115;
  v162 = v111;
  v163 = v78;
  v164 = v89;
  v165 = v88;
  sub_1ABEB2298(&v121);
  return memcpy(v119, v120, 0x168uLL);
}

uint64_t sub_1ABEC18EC()
{
  return 4;
}

uint64_t sub_1ABEC18F4()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_1ABEC1938()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1ABEC1980@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v35 = a2;
  sub_1ABDE97D0(0, &qword_1ED3514C8, (void (*)(void))sub_1ABEC2C84);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEC2C84();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v34 = a1;
  v9 = v6;
  v40 = 0;
  v10 = v5;
  v12 = sub_1ABF320E0();
  v14 = v13;
  v39 = 1;
  sub_1ABF2FF5C();
  v15 = sub_1ABF320E0();
  v33 = v16;
  v31 = v15;
  v38 = 3;
  sub_1ABF2FF5C();
  v30 = sub_1ABF3208C();
  v37 = 4;
  v18 = v17;
  sub_1ABF2FF5C();
  v19 = sub_1ABF3208C();
  v32 = v18;
  v29 = v19;
  v36 = 2;
  v21 = v20;
  sub_1ABF2FF5C();
  sub_1ABF320E0();
  v22 = sub_1ABEC18F4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  if (v22 == 10)
    v22 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  v23 = v21;
  swift_bridgeObjectRelease();
  v24 = v32;
  swift_bridgeObjectRelease();
  v25 = v12;
  v26 = v33;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v27 = v35;
  *v35 = v25;
  v27[1] = v14;
  v27[2] = v31;
  v27[3] = v26;
  *((_BYTE *)v27 + 32) = v22;
  v27[5] = v30;
  v27[6] = v24;
  v27[7] = v29;
  v27[8] = v23;
  return result;
}

uint64_t sub_1ABEC1D1C()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1ABEC1D64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1ABDE97D0(0, &qword_1ED3514D8, (void (*)(void))sub_1ABEC2CC8);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEC2CC8();
  sub_1ABF3235C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_1ABF320E0();
    v11 = 1;
    sub_1ABF2FF5C();
    sub_1ABF320E0();
    sub_1ABEC1D1C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

_QWORD *sub_1ABEC1F20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1ED351518, (void (*)(void))sub_1ABEC32C4);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEC32C4();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABEC3308();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1ABEC2078()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1ABEC20C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_1ABDE97D0(0, &qword_1ED351540, (void (*)(void))sub_1ABEC3630);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ABEC3630();
  sub_1ABF3235C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    sub_1ABEC3674();
    sub_1ABF320C8();
    v8 = v12;
    v11 = 1;
    sub_1ABEC36B8();
    sub_1ABF2FF5C();
    sub_1ABF320C8();
    v11 = 2;
    sub_1ABEC36FC();
    sub_1ABF2FF5C();
    sub_1ABF320C8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1ABF2FF5C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1ABEC2334(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1ABDE97D0(0, &qword_1ED351578, (void (*)(void))sub_1ABEC3914);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ABEC3914();
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABD04578(0, &qword_1ED351588, (uint64_t)&type metadata for YahooMultiQuoteResponse.Quote, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABDE8CE4(&qword_1ED351590, &qword_1ED351588, (uint64_t)&type metadata for YahooMultiQuoteResponse.Quote, (uint64_t (*)(void))sub_1ABEC3958);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8 = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

uint64_t sub_1ABEC2568(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  sub_1ABDE97D0(0, &qword_1ED3515A0, (void (*)(void))sub_1ABEC399C);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ABEC399C();
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABD04578(0, &qword_1ED3515B0, (uint64_t)&type metadata for YahooMultiQuoteResponse.Exchange, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABDE8CE4(&qword_1ED3515B8, &qword_1ED3515B0, (uint64_t)&type metadata for YahooMultiQuoteResponse.Exchange, (uint64_t (*)(void))sub_1ABEC39E0);
    sub_1ABF320C8();
    if (v11)
      v8 = v11;
    else
      v8 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

uint64_t sub_1ABEC2828(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  sub_1ABDE97D0(0, &qword_1ED3515C8, (void (*)(void))sub_1ABEC3A24);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ABEC3A24();
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABD04578(0, &qword_1ED3515D8, (uint64_t)&type metadata for YahooMultiQuoteResponse.DataSource, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABDE8CE4(&qword_1ED3515E0, &qword_1ED3515D8, (uint64_t)&type metadata for YahooMultiQuoteResponse.DataSource, (uint64_t (*)(void))sub_1ABEC3A68);
    sub_1ABF320C8();
    if (v11)
      v8 = v11;
    else
      v8 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

_QWORD *sub_1ABEC2AA4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1ED3514B0, (void (*)(void))sub_1ABEC2BFC);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEC2BFC();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABEC2C40();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABEC2BFC()
{
  unint64_t result;

  result = qword_1ED3514B8;
  if (!qword_1ED3514B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B728, &type metadata for YahooMultiQuoteResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3514B8);
  }
  return result;
}

unint64_t sub_1ABEC2C40()
{
  unint64_t result;

  result = qword_1ED3514C0;
  if (!qword_1ED3514C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B700, &type metadata for YahooMultiQuoteResponse.Finance);
    atomic_store(result, (unint64_t *)&qword_1ED3514C0);
  }
  return result;
}

unint64_t sub_1ABEC2C84()
{
  unint64_t result;

  result = qword_1ED3514D0;
  if (!qword_1ED3514D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B6B0, &type metadata for YahooMultiQuoteResponse.Exchange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3514D0);
  }
  return result;
}

unint64_t sub_1ABEC2CC8()
{
  unint64_t result;

  result = qword_1ED3514E0;
  if (!qword_1ED3514E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B660, &type metadata for YahooMultiQuoteResponse.DataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3514E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for YahooMultiQuoteResponse.DataSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABEC2D58 + 4 * byte_1ABF4B16B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABEC2D8C + 4 * byte_1ABF4B166[v4]))();
}

uint64_t sub_1ABEC2D8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC2D94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEC2D9CLL);
  return result;
}

uint64_t sub_1ABEC2DA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEC2DB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABEC2DB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC2DBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.DataSource.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.DataSource.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for YahooMultiQuoteResponse.Exchange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABEC2E24 + 4 * byte_1ABF4B175[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABEC2E58 + 4 * byte_1ABF4B170[v4]))();
}

uint64_t sub_1ABEC2E58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC2E60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEC2E68);
  return result;
}

uint64_t sub_1ABEC2E74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEC2E7CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABEC2E80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC2E88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Exchange.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.Exchange.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Finance()
{
  return &type metadata for YahooMultiQuoteResponse.Finance;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Exchange.Status()
{
  return &type metadata for YahooMultiQuoteResponse.Exchange.Status;
}

uint64_t storeEnumTagSinglePayload for YahooMultiQuoteResponse.DataSource.Source(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1ABEC2F2C + 4 * byte_1ABF4B17F[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1ABEC2F60 + 4 * byte_1ABF4B17A[v4]))();
}

uint64_t sub_1ABEC2F60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC2F68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEC2F70);
  return result;
}

uint64_t sub_1ABEC2F7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEC2F84);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1ABEC2F88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC2F90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.DataSource.Source()
{
  return &type metadata for YahooMultiQuoteResponse.DataSource.Source;
}

unint64_t sub_1ABEC2FB0()
{
  unint64_t result;

  result = qword_1EEC449F0;
  if (!qword_1EEC449F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B300, &type metadata for YahooMultiQuoteResponse.DataSource.Source);
    atomic_store(result, (unint64_t *)&qword_1EEC449F0);
  }
  return result;
}

unint64_t sub_1ABEC2FF8()
{
  unint64_t result;

  result = qword_1EEC449F8;
  if (!qword_1EEC449F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B3A0, &type metadata for YahooMultiQuoteResponse.Exchange.Status);
    atomic_store(result, (unint64_t *)&qword_1EEC449F8);
  }
  return result;
}

unint64_t sub_1ABEC3040()
{
  unint64_t result;

  result = qword_1EEC44A00;
  if (!qword_1EEC44A00)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B458, &type metadata for YahooMultiQuoteResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44A00);
  }
  return result;
}

unint64_t sub_1ABEC3088()
{
  unint64_t result;

  result = qword_1EEC44A08;
  if (!qword_1EEC44A08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B548, &type metadata for YahooMultiQuoteResponse.Exchange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44A08);
  }
  return result;
}

unint64_t sub_1ABEC30D0()
{
  unint64_t result;

  result = qword_1EEC44A10;
  if (!qword_1EEC44A10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B638, &type metadata for YahooMultiQuoteResponse.DataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44A10);
  }
  return result;
}

unint64_t sub_1ABEC3118()
{
  unint64_t result;

  result = qword_1ED3514E8;
  if (!qword_1ED3514E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B570, &type metadata for YahooMultiQuoteResponse.DataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3514E8);
  }
  return result;
}

unint64_t sub_1ABEC3160()
{
  unint64_t result;

  result = qword_1ED3514F0;
  if (!qword_1ED3514F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B598, &type metadata for YahooMultiQuoteResponse.DataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3514F0);
  }
  return result;
}

unint64_t sub_1ABEC31A8()
{
  unint64_t result;

  result = qword_1ED3514F8;
  if (!qword_1ED3514F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B480, &type metadata for YahooMultiQuoteResponse.Exchange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3514F8);
  }
  return result;
}

unint64_t sub_1ABEC31F0()
{
  unint64_t result;

  result = qword_1ED351500;
  if (!qword_1ED351500)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B4A8, &type metadata for YahooMultiQuoteResponse.Exchange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351500);
  }
  return result;
}

unint64_t sub_1ABEC3238()
{
  unint64_t result;

  result = qword_1ED351508;
  if (!qword_1ED351508)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B3C8, &type metadata for YahooMultiQuoteResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351508);
  }
  return result;
}

unint64_t sub_1ABEC3280()
{
  unint64_t result;

  result = qword_1ED351510;
  if (!qword_1ED351510)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B3F0, &type metadata for YahooMultiQuoteResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351510);
  }
  return result;
}

unint64_t sub_1ABEC32C4()
{
  unint64_t result;

  result = qword_1ED351520;
  if (!qword_1ED351520)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B8A0, &type metadata for YahooMultiQuoteResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351520);
  }
  return result;
}

unint64_t sub_1ABEC3308()
{
  unint64_t result;

  result = qword_1ED351528;
  if (!qword_1ED351528)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B878, &type metadata for YahooMultiQuoteResponse.QuoteService);
    atomic_store(result, (unint64_t *)&qword_1ED351528);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Finance.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.Finance.CodingKeys;
}

uint64_t _s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *_s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwta_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwet_0(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s10StocksCore23YahooMultiQuoteResponseV12QuoteServiceVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.QuoteService()
{
  return &type metadata for YahooMultiQuoteResponse.QuoteService;
}

unint64_t sub_1ABEC355C()
{
  unint64_t result;

  result = qword_1EEC44A18;
  if (!qword_1EEC44A18)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B850, &type metadata for YahooMultiQuoteResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44A18);
  }
  return result;
}

unint64_t sub_1ABEC35A4()
{
  unint64_t result;

  result = qword_1ED351530;
  if (!qword_1ED351530)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B788, &type metadata for YahooMultiQuoteResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351530);
  }
  return result;
}

unint64_t sub_1ABEC35EC()
{
  unint64_t result;

  result = qword_1ED351538;
  if (!qword_1ED351538)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B7B0, &type metadata for YahooMultiQuoteResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351538);
  }
  return result;
}

unint64_t sub_1ABEC3630()
{
  unint64_t result;

  result = qword_1ED351548;
  if (!qword_1ED351548)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BA78, &type metadata for YahooMultiQuoteResponse.QuoteService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351548);
  }
  return result;
}

unint64_t sub_1ABEC3674()
{
  unint64_t result;

  result = qword_1ED351550;
  if (!qword_1ED351550)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BA50, &type metadata for YahooMultiQuoteResponse.Quotes);
    atomic_store(result, (unint64_t *)&qword_1ED351550);
  }
  return result;
}

unint64_t sub_1ABEC36B8()
{
  unint64_t result;

  result = qword_1ED351558;
  if (!qword_1ED351558)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BA28, &type metadata for YahooMultiQuoteResponse.Exchanges);
    atomic_store(result, (unint64_t *)&qword_1ED351558);
  }
  return result;
}

unint64_t sub_1ABEC36FC()
{
  unint64_t result;

  result = qword_1ED351560;
  if (!qword_1ED351560)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BA00, &type metadata for YahooMultiQuoteResponse.DataSources);
    atomic_store(result, (unint64_t *)&qword_1ED351560);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for YahooMultiQuoteResponse.QuoteService.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABEC378C + 4 * byte_1ABF4B189[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABEC37C0 + 4 * byte_1ABF4B184[v4]))();
}

uint64_t sub_1ABEC37C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC37C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEC37D0);
  return result;
}

uint64_t sub_1ABEC37DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEC37E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABEC37E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC37F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.QuoteService.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.QuoteService.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.DataSources()
{
  return &type metadata for YahooMultiQuoteResponse.DataSources;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Exchanges()
{
  return &type metadata for YahooMultiQuoteResponse.Exchanges;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Quotes()
{
  return &type metadata for YahooMultiQuoteResponse.Quotes;
}

unint64_t sub_1ABEC3840()
{
  unint64_t result;

  result = qword_1EEC44A20;
  if (!qword_1EEC44A20)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B9D8, &type metadata for YahooMultiQuoteResponse.QuoteService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44A20);
  }
  return result;
}

unint64_t sub_1ABEC3888()
{
  unint64_t result;

  result = qword_1ED351568;
  if (!qword_1ED351568)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B910, &type metadata for YahooMultiQuoteResponse.QuoteService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351568);
  }
  return result;
}

unint64_t sub_1ABEC38D0()
{
  unint64_t result;

  result = qword_1ED351570;
  if (!qword_1ED351570)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B938, &type metadata for YahooMultiQuoteResponse.QuoteService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351570);
  }
  return result;
}

unint64_t sub_1ABEC3914()
{
  unint64_t result;

  result = qword_1ED351580;
  if (!qword_1ED351580)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BEC0, &type metadata for YahooMultiQuoteResponse.Quotes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351580);
  }
  return result;
}

unint64_t sub_1ABEC3958()
{
  unint64_t result;

  result = qword_1ED351598;
  if (!qword_1ED351598)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BE98, &type metadata for YahooMultiQuoteResponse.Quote);
    atomic_store(result, (unint64_t *)&qword_1ED351598);
  }
  return result;
}

unint64_t sub_1ABEC399C()
{
  unint64_t result;

  result = qword_1ED3515A8;
  if (!qword_1ED3515A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BE48, &type metadata for YahooMultiQuoteResponse.Exchanges.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3515A8);
  }
  return result;
}

unint64_t sub_1ABEC39E0()
{
  unint64_t result;

  result = qword_1ED3515C0;
  if (!qword_1ED3515C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B214, &type metadata for YahooMultiQuoteResponse.Exchange);
    atomic_store(result, (unint64_t *)&qword_1ED3515C0);
  }
  return result;
}

unint64_t sub_1ABEC3A24()
{
  unint64_t result;

  result = qword_1ED3515D0;
  if (!qword_1ED3515D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BDF8, &type metadata for YahooMultiQuoteResponse.DataSources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3515D0);
  }
  return result;
}

unint64_t sub_1ABEC3A68()
{
  unint64_t result;

  result = qword_1ED3515E8;
  if (!qword_1ED3515E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B1EC, &type metadata for YahooMultiQuoteResponse.DataSource);
    atomic_store(result, (unint64_t *)&qword_1ED3515E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.DataSources.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.DataSources.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Exchanges.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.Exchanges.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Quotes.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.Quotes.CodingKeys;
}

uint64_t destroy for YahooMultiQuoteResponse.Quote(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  if (a1[4])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[18])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[25])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[32])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YahooMultiQuoteResponse.Quote(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  sub_1ABF2FF5C();
  if (v5)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    v6 = *(_QWORD *)(a2 + 40);
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = v6;
    v8 = *(_QWORD *)(a2 + 56);
    v9 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v9;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v10 = *(_QWORD *)(a2 + 88);
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v30 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v30;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    v10 = *(_QWORD *)(a2 + 88);
    if (v10)
    {
LABEL_3:
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      v11 = *(_QWORD *)(a2 + 96);
      v12 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 88) = v10;
      *(_QWORD *)(a1 + 96) = v11;
      v13 = *(_QWORD *)(a2 + 112);
      v14 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 104) = v12;
      *(_QWORD *)(a1 + 112) = v13;
      *(_QWORD *)(a1 + 120) = v14;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v15 = *(_QWORD *)(a2 + 144);
      if (v15)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  v31 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v31;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v15 = *(_QWORD *)(a2 + 144);
  if (v15)
  {
LABEL_4:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    v16 = *(_QWORD *)(a2 + 152);
    v17 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 144) = v15;
    *(_QWORD *)(a1 + 152) = v16;
    v18 = *(_QWORD *)(a2 + 168);
    v19 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 160) = v17;
    *(_QWORD *)(a1 + 168) = v18;
    *(_QWORD *)(a1 + 176) = v19;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v20 = *(_QWORD *)(a2 + 200);
    if (v20)
      goto LABEL_5;
LABEL_10:
    v33 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v33;
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    v25 = *(_QWORD *)(a2 + 256);
    if (v25)
      goto LABEL_6;
LABEL_11:
    v34 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v34;
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    goto LABEL_12;
  }
LABEL_9:
  v32 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v32;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v20 = *(_QWORD *)(a2 + 200);
  if (!v20)
    goto LABEL_10;
LABEL_5:
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  v21 = *(_QWORD *)(a2 + 208);
  v22 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 200) = v20;
  *(_QWORD *)(a1 + 208) = v21;
  v23 = *(_QWORD *)(a2 + 224);
  v24 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 216) = v22;
  *(_QWORD *)(a1 + 224) = v23;
  *(_QWORD *)(a1 + 232) = v24;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v25 = *(_QWORD *)(a2 + 256);
  if (!v25)
    goto LABEL_11;
LABEL_6:
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  v26 = *(_QWORD *)(a2 + 264);
  v27 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 256) = v25;
  *(_QWORD *)(a1 + 264) = v26;
  v28 = *(_QWORD *)(a2 + 280);
  v29 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 272) = v27;
  *(_QWORD *)(a1 + 280) = v28;
  *(_QWORD *)(a1 + 288) = v29;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
LABEL_12:
  v35 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v35;
  v36 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v36;
  v37 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v37;
  v38 = *(_QWORD *)(a2 + 344);
  v39 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v38;
  *(_QWORD *)(a1 + 352) = v39;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for YahooMultiQuoteResponse.Quote(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  __int128 *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  __int128 *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD *v34;
  __int128 *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v7 = a1 + 2;
  v8 = (__int128 *)(a2 + 2);
  v9 = a2[4];
  if (a1[4])
  {
    if (v9)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      a1[6] = a2[6];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      a1[8] = a2[8];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABEC4428((uint64_t)(a1 + 2), v4, v5, v6);
      v11 = *((_OWORD *)a2 + 2);
      v10 = *((_OWORD *)a2 + 3);
      v12 = *v8;
      a1[8] = a2[8];
      *((_OWORD *)a1 + 2) = v11;
      *((_OWORD *)a1 + 3) = v10;
      *v7 = v12;
    }
  }
  else if (v9)
  {
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v13 = *v8;
    v14 = *((_OWORD *)a2 + 2);
    v15 = *((_OWORD *)a2 + 3);
    a1[8] = a2[8];
    *((_OWORD *)a1 + 2) = v14;
    *((_OWORD *)a1 + 3) = v15;
    *v7 = v13;
  }
  v16 = a1 + 9;
  v17 = (__int128 *)(a2 + 9);
  v18 = a2[11];
  if (a1[11])
  {
    if (v18)
    {
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[12] = a2[12];
      a1[13] = a2[13];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[14] = a2[14];
      a1[15] = a2[15];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABEC4428((uint64_t)(a1 + 9), v4, v5, v6);
      v20 = *(_OWORD *)(a2 + 11);
      v19 = *(_OWORD *)(a2 + 13);
      v21 = *v17;
      a1[15] = a2[15];
      *(_OWORD *)(a1 + 11) = v20;
      *(_OWORD *)(a1 + 13) = v19;
      *v16 = v21;
    }
  }
  else if (v18)
  {
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    a1[15] = a2[15];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v22 = *v17;
    v23 = *(_OWORD *)(a2 + 11);
    v24 = *(_OWORD *)(a2 + 13);
    a1[15] = a2[15];
    *(_OWORD *)(a1 + 11) = v23;
    *(_OWORD *)(a1 + 13) = v24;
    *v16 = v22;
  }
  v25 = a1 + 16;
  v26 = (__int128 *)(a2 + 16);
  v27 = a2[18];
  if (a1[18])
  {
    if (v27)
    {
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[19] = a2[19];
      a1[20] = a2[20];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[21] = a2[21];
      a1[22] = a2[22];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABEC4428((uint64_t)(a1 + 16), v4, v5, v6);
      v29 = *((_OWORD *)a2 + 9);
      v28 = *((_OWORD *)a2 + 10);
      v30 = *v26;
      a1[22] = a2[22];
      *((_OWORD *)a1 + 9) = v29;
      *((_OWORD *)a1 + 10) = v28;
      *v25 = v30;
    }
  }
  else if (v27)
  {
    a1[16] = a2[16];
    a1[17] = a2[17];
    a1[18] = a2[18];
    a1[19] = a2[19];
    a1[20] = a2[20];
    a1[21] = a2[21];
    a1[22] = a2[22];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v31 = *v26;
    v32 = *((_OWORD *)a2 + 9);
    v33 = *((_OWORD *)a2 + 10);
    a1[22] = a2[22];
    *((_OWORD *)a1 + 9) = v32;
    *((_OWORD *)a1 + 10) = v33;
    *v25 = v31;
  }
  v34 = a1 + 23;
  v35 = (__int128 *)(a2 + 23);
  v36 = a2[25];
  if (a1[25])
  {
    if (v36)
    {
      a1[23] = a2[23];
      a1[24] = a2[24];
      a1[25] = a2[25];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[26] = a2[26];
      a1[27] = a2[27];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[28] = a2[28];
      a1[29] = a2[29];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABEC4428((uint64_t)(a1 + 23), v4, v5, v6);
      v38 = *(_OWORD *)(a2 + 25);
      v37 = *(_OWORD *)(a2 + 27);
      v39 = *v35;
      a1[29] = a2[29];
      *(_OWORD *)(a1 + 25) = v38;
      *(_OWORD *)(a1 + 27) = v37;
      *v34 = v39;
    }
  }
  else if (v36)
  {
    a1[23] = a2[23];
    a1[24] = a2[24];
    a1[25] = a2[25];
    a1[26] = a2[26];
    a1[27] = a2[27];
    a1[28] = a2[28];
    a1[29] = a2[29];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v40 = *v35;
    v41 = *(_OWORD *)(a2 + 25);
    v42 = *(_OWORD *)(a2 + 27);
    a1[29] = a2[29];
    *(_OWORD *)(a1 + 25) = v41;
    *(_OWORD *)(a1 + 27) = v42;
    *v34 = v40;
  }
  v43 = a1 + 30;
  v44 = (__int128 *)(a2 + 30);
  v45 = a2[32];
  if (a1[32])
  {
    if (v45)
    {
      a1[30] = a2[30];
      a1[31] = a2[31];
      a1[32] = a2[32];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[33] = a2[33];
      a1[34] = a2[34];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[35] = a2[35];
      a1[36] = a2[36];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABEC4428((uint64_t)(a1 + 30), v4, v5, v6);
      v47 = *((_OWORD *)a2 + 16);
      v46 = *((_OWORD *)a2 + 17);
      v48 = *v44;
      a1[36] = a2[36];
      *((_OWORD *)a1 + 16) = v47;
      *((_OWORD *)a1 + 17) = v46;
      *v43 = v48;
    }
  }
  else if (v45)
  {
    a1[30] = a2[30];
    a1[31] = a2[31];
    a1[32] = a2[32];
    a1[33] = a2[33];
    a1[34] = a2[34];
    a1[35] = a2[35];
    a1[36] = a2[36];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v49 = *v44;
    v50 = *((_OWORD *)a2 + 16);
    v51 = *((_OWORD *)a2 + 17);
    a1[36] = a2[36];
    *((_OWORD *)a1 + 16) = v50;
    *((_OWORD *)a1 + 17) = v51;
    *v43 = v49;
  }
  a1[37] = a2[37];
  a1[38] = a2[38];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[39] = a2[39];
  a1[40] = a2[40];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[41] = a2[41];
  a1[42] = a2[42];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[43] = a2[43];
  a1[44] = a2[44];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABEC4428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  sub_1ABEC4464(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1ABEC4464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3515F8[0])
  {
    v4 = type metadata accessor for YahooMultiQuoteResponse.Value(0, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8], a4);
    if (!v5)
      atomic_store(v4, qword_1ED3515F8);
  }
}

uint64_t type metadata accessor for YahooMultiQuoteResponse.Value(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooMultiQuoteResponse.Value);
}

void *__swift_memcpy360_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x168uLL);
}

uint64_t assignWithTake for YahooMultiQuoteResponse.Quote(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
  {
    v8 = *(_QWORD *)(a2 + 32);
    if (v8)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1ABEC4428(a1 + 16, v5, v6, v7);
  }
  v11 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v11;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
LABEL_6:
  if (*(_QWORD *)(a1 + 88))
  {
    v12 = *(_QWORD *)(a2 + 88);
    if (v12)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v12;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v13;
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1ABEC4428(a1 + 72, v5, v6, v7);
  }
  v15 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v15;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
LABEL_11:
  if (*(_QWORD *)(a1 + 144))
  {
    v16 = *(_QWORD *)(a2 + 144);
    if (v16)
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v17;
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1ABEC4428(a1 + 128, v5, v6, v7);
  }
  v19 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v19;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
LABEL_16:
  if (*(_QWORD *)(a1 + 200))
  {
    v20 = *(_QWORD *)(a2 + 200);
    if (v20)
    {
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v20;
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = v21;
      swift_bridgeObjectRelease();
      v22 = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = v22;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1ABEC4428(a1 + 184, v5, v6, v7);
  }
  v23 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v23;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
LABEL_21:
  if (!*(_QWORD *)(a1 + 256))
  {
LABEL_25:
    v27 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v27;
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    goto LABEL_26;
  }
  v24 = *(_QWORD *)(a2 + 256);
  if (!v24)
  {
    sub_1ABEC4428(a1 + 240, v5, v6, v7);
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v24;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v25;
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v26;
  swift_bridgeObjectRelease();
LABEL_26:
  v28 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v28;
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = v29;
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = v30;
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = v31;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for YahooMultiQuoteResponse.Quote(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 360))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooMultiQuoteResponse.Quote(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 360) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 360) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Quote()
{
  return &type metadata for YahooMultiQuoteResponse.Quote;
}

uint64_t sub_1ABEC4874()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ABEC48EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    sub_1ABF2FF68();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    v14 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v15;
    v14[1] = v15[1];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  return v4;
}

uint64_t sub_1ABEC4A08(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEC4A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v11[1] = v12[1];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABEC4B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v11[1] = v12[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABEC4BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _OWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1ABEC4C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABEC4D2C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1ABEC4DB8 + 4 * byte_1ABF4B18E[v10]))();
  }
}

void sub_1ABEC4E3C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1ABEC4F40()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1ABEC4FB8);
}

void sub_1ABEC4F48(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1ABEC4F50);
  JUMPOUT(0x1ABEC4FB8);
}

void sub_1ABEC4F94()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1ABEC4FB8);
}

void sub_1ABEC4F9C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1ABEC4FB8);
}

uint64_t sub_1ABEC4FA4(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1ABEC4FB0);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1ABEC4FB8);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

unint64_t sub_1ABEC4FD4()
{
  unint64_t result;

  result = qword_1EEC44A38;
  if (!qword_1EEC44A38)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BBF0, &type metadata for YahooMultiQuoteResponse.Quotes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44A38);
  }
  return result;
}

unint64_t sub_1ABEC501C()
{
  unint64_t result;

  result = qword_1EEC44A40;
  if (!qword_1EEC44A40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BCE0, &type metadata for YahooMultiQuoteResponse.Exchanges.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44A40);
  }
  return result;
}

unint64_t sub_1ABEC5064()
{
  unint64_t result;

  result = qword_1EEC44A48[0];
  if (!qword_1EEC44A48[0])
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BDD0, &type metadata for YahooMultiQuoteResponse.DataSources.CodingKeys);
    atomic_store(result, qword_1EEC44A48);
  }
  return result;
}

unint64_t sub_1ABEC50AC()
{
  unint64_t result;

  result = qword_1ED351680;
  if (!qword_1ED351680)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BD08, &type metadata for YahooMultiQuoteResponse.DataSources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351680);
  }
  return result;
}

unint64_t sub_1ABEC50F4()
{
  unint64_t result;

  result = qword_1ED351688;
  if (!qword_1ED351688)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BD30, &type metadata for YahooMultiQuoteResponse.DataSources.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351688);
  }
  return result;
}

unint64_t sub_1ABEC513C()
{
  unint64_t result;

  result = qword_1ED351690;
  if (!qword_1ED351690)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BC18, &type metadata for YahooMultiQuoteResponse.Exchanges.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351690);
  }
  return result;
}

unint64_t sub_1ABEC5184()
{
  unint64_t result;

  result = qword_1ED351698;
  if (!qword_1ED351698)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BC40, &type metadata for YahooMultiQuoteResponse.Exchanges.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351698);
  }
  return result;
}

unint64_t sub_1ABEC51CC()
{
  unint64_t result;

  result = qword_1ED3516A0;
  if (!qword_1ED3516A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BB28, &type metadata for YahooMultiQuoteResponse.Quotes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3516A0);
  }
  return result;
}

unint64_t sub_1ABEC5214()
{
  unint64_t result;

  result = qword_1ED3516A8;
  if (!qword_1ED3516A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BB50, &type metadata for YahooMultiQuoteResponse.Quotes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3516A8);
  }
  return result;
}

unint64_t sub_1ABEC5258()
{
  unint64_t result;

  result = qword_1ED3516B8;
  if (!qword_1ED3516B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C218, &type metadata for YahooMultiQuoteResponse.Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3516B8);
  }
  return result;
}

unint64_t sub_1ABEC529C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result;
  uint64_t v5;

  result = qword_1ED3516C0[0];
  if (!qword_1ED3516C0[0])
  {
    sub_1ABEC4464(255, a2, a3, a4);
    result = MEMORY[0x1AF438F30](&unk_1ABF4BB00, v5);
    atomic_store(result, qword_1ED3516C0);
  }
  return result;
}

uint64_t type metadata accessor for YahooMultiQuoteResponse.Value.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooMultiQuoteResponse.Value.CodingKeys);
}

uint64_t type metadata accessor for YahooMultiQuoteResponse.Value.ValueError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooMultiQuoteResponse.Value.ValueError);
}

uint64_t _s10StocksCore23YahooMultiQuoteResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABEC533C + 4 * byte_1ABF4B19D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABEC535C + 4 * byte_1ABF4B1A2[v4]))();
}

_BYTE *sub_1ABEC533C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABEC535C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEC5364(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEC536C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEC5374(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEC537C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1ABEC5388(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABEC53D4 + 4 * byte_1ABF4B1AC[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABEC5408 + 4 * byte_1ABF4B1A7[v4]))();
}

uint64_t sub_1ABEC5408(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC5410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEC5418);
  return result;
}

uint64_t sub_1ABEC5424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEC542CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABEC5430(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC5438(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s10StocksCore23YahooMultiQuoteResponseV8ExchangeV6StatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1ABEC5490 + 4 * byte_1ABF4B1B6[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1ABEC54C4 + 4 * byte_1ABF4B1B1[v4]))();
}

uint64_t sub_1ABEC54C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC54CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEC54D4);
  return result;
}

uint64_t sub_1ABEC54E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEC54E8);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1ABEC54EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEC54F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooMultiQuoteResponse.Quote.CodingKeys()
{
  return &type metadata for YahooMultiQuoteResponse.Quote.CodingKeys;
}

unint64_t sub_1ABEC5514()
{
  unint64_t result;

  result = qword_1EEC44AD0;
  if (!qword_1EEC44AD0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C008, &type metadata for YahooMultiQuoteResponse.Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44AD0);
  }
  return result;
}

void sub_1ABEC5558()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABEC5568()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABEC5578()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABEC5588()
{
  JUMPOUT(0x1AF438F30);
}

unint64_t sub_1ABEC559C()
{
  unint64_t result;

  result = qword_1ED351748;
  if (!qword_1ED351748)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BF40, &type metadata for YahooMultiQuoteResponse.Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351748);
  }
  return result;
}

unint64_t sub_1ABEC55E4()
{
  unint64_t result;

  result = qword_1ED351750;
  if (!qword_1ED351750)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4BF68, &type metadata for YahooMultiQuoteResponse.Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351750);
  }
  return result;
}

uint64_t sub_1ABEC5628()
{
  return sub_1ABF2FDB8();
}

uint64_t sub_1ABEC5648@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t *v35;
  _QWORD v36[2];
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v47 = a1;
  v48 = a2;
  v42 = type metadata accessor for SymbolEntity();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v46 = (uint64_t)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v45 = (uint64_t)v36 - v4;
  v5 = sub_1ABF2FFC8();
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C907D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v38 = (char *)v36 - v11;
  sub_1ABCF5A54(0, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, v7);
  MEMORY[0x1E0C80A78](v12);
  v37 = (char *)v36 - v13;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v7);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v36 - v15;
  v17 = sub_1ABF30484();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v21);
  v22 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v22);
  v23 = sub_1ABF3049C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  sub_1ABDBAB38();
  v36[1] = v25;
  sub_1ABF31738();
  sub_1ABF30844();
  v26 = *MEMORY[0x1E0CAF9B8];
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
  v27(v20, v26, v17);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v27(v20, v26, v17);
  sub_1ABF304A8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v16, 0, 1, v23);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v37, 1, 1, v42);
  v28 = sub_1ABF2FCD4();
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v29(v38, 1, 1, v28);
  v29(v39, 1, 1, v28);
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v41, *MEMORY[0x1E0C91738], v44);
  sub_1ABCFE1EC(&qword_1ED3467A8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  v30 = sub_1ABF2FE00();
  sub_1ABCF5A54(0, &qword_1ED34C7B0, (uint64_t (*)(uint64_t))sub_1ABD79618, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  v49 = 0u;
  v50 = 0u;
  v51 = 0;
  sub_1ABF2FF68();
  sub_1ABF2FC38();
  v31 = sub_1ABF2FC14();
  v32 = v47;
  v33 = v45;
  sub_1ABDBAE80(v47, v45);
  sub_1ABDBAE80(v33, v46);
  swift_retain_n();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  sub_1ABD64AD4(v33);
  sub_1ABD64AD4(v32);
  swift_release_n();
  result = swift_release_n();
  v35 = v48;
  *v48 = v30;
  v35[1] = v31;
  return result;
}

uint64_t sub_1ABEC5B90()
{
  return 0x746E496B636F7453;
}

uint64_t sub_1ABEC5BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC44AD8);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC44AD8);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABEC5D28@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC410A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1EEC44AD8, a1);
}

uint64_t sub_1ABEC5D4C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v12[0] = sub_1ABF30484();
  v3 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF2FE54();
  __swift_allocate_value_buffer(v10, qword_1EEC44AF0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC44AF0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v12[0]);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1ABF2FE60();
}

uint64_t sub_1ABEC5F78@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(qword_1EEC410A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1EEC44AF0, a1);
}

uint64_t sub_1ABEC5F9C()
{
  return 1;
}

uint64_t sub_1ABEC5FA4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABEC6E40(0, &qword_1EEC44B08, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABEC6E40(0, &qword_1EEC44B10, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABE19BE4();
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABEC62C4();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF74();
}

uint64_t sub_1ABEC6110()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABEC6130()
{
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABEC617C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1ABDBAE80(a1, (uint64_t)&v9 - v6);
  sub_1ABDBAE80((uint64_t)v7, (uint64_t)v4);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  sub_1ABD64AD4((uint64_t)v7);
  swift_release();
  return swift_release();
}

uint64_t sub_1ABEC6244(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1ABDBAE80(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABF2FDC4();
  return sub_1ABD64AD4(a1);
}

void sub_1ABEC62C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC44B18)
  {
    sub_1ABDBAB38();
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, &qword_1EEC44B18);
  }
}

uint64_t (*sub_1ABEC6320(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABEC6368()
{
  uint64_t v1;

  sub_1ABF2FBF0();
  return v1;
}

uint64_t sub_1ABEC6398()
{
  swift_unknownObjectRetain();
  sub_1ABF2FBFC();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ABEC63D8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FBE4();
  return sub_1ABD6817C;
}

uint64_t sub_1ABEC6420()
{
  return sub_1ABF2FC08();
}

uint64_t sub_1ABEC6440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v37 = a1;
  v1 = sub_1ABF2FFC8();
  v35 = *(_QWORD *)(v1 - 8);
  v36 = v1;
  MEMORY[0x1E0C80A78](v1);
  v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C907D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v32 = (char *)&v30 - v7;
  sub_1ABCF5A54(0, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, v3);
  MEMORY[0x1E0C80A78](v8);
  v31 = (char *)&v30 - v9;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v3);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  v13 = sub_1ABF30484();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v18);
  v19 = sub_1ABF3049C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  sub_1ABDBAB38();
  v30 = v21;
  sub_1ABF31738();
  sub_1ABF30844();
  v22 = *MEMORY[0x1E0CAF9B8];
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v23(v16, v22, v13);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v23(v16, v22, v13);
  sub_1ABF304A8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
  v24 = type metadata accessor for SymbolEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v31, 1, 1, v24);
  v25 = sub_1ABF2FCD4();
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v32, 1, 1, v25);
  v26(v33, 1, 1, v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v34, *MEMORY[0x1E0C91738], v36);
  sub_1ABCFE1EC(&qword_1ED3467A8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  v27 = sub_1ABF2FE00();
  sub_1ABCF5A54(0, &qword_1ED34C7B0, (uint64_t (*)(uint64_t))sub_1ABD79618, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  v38 = 0u;
  v39 = 0u;
  v40 = 0;
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  v29 = v37;
  *v37 = v27;
  v29[1] = result;
  return result;
}

uint64_t sub_1ABEC68B4(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_OWORD *)(v2 + 64) = *v1;
  return swift_task_switch();
}

uint64_t sub_1ABEC68D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD *, uint64_t, uint64_t);

  v2 = v0[8];
  v1 = v0[9];
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  v3 = v0[6];
  v0[10] = v0[5];
  ObjectType = swift_getObjectType();
  v0[2] = v2;
  v0[3] = v1;
  v0[4] = 0x4000000000000000;
  v7 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v3 + 16) + *(_QWORD *)(v3 + 16));
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_1ABD813F0;
  return v7(v0 + 2, ObjectType, v3);
}

unint64_t sub_1ABEC69BC()
{
  unint64_t result;

  result = qword_1EEC44B28;
  if (!qword_1EEC44B28)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C2E4, &type metadata for OpenSymbolIntent);
    atomic_store(result, (unint64_t *)&qword_1EEC44B28);
  }
  return result;
}

uint64_t sub_1ABEC6A00()
{
  return sub_1ABCFE1EC(&qword_1ED34CB10, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABEC6A2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1ABDBAE80(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABF2FDC4();
  return sub_1ABD64AD4(a1);
}

unint64_t sub_1ABEC6AB0()
{
  unint64_t result;

  result = qword_1ED34C7D8;
  if (!qword_1ED34C7D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C39C, &type metadata for OpenSymbolIntent);
    atomic_store(result, (unint64_t *)&qword_1ED34C7D8);
  }
  return result;
}

unint64_t sub_1ABEC6AF8()
{
  unint64_t result;

  result = qword_1ED34CB70;
  if (!qword_1ED34CB70)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C3C4, &type metadata for OpenSymbolIntent);
    atomic_store(result, (unint64_t *)&qword_1ED34CB70);
  }
  return result;
}

uint64_t sub_1ABEC6B3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ABEC6B4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ABEC6B5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC410A0 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC44AD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABEC6BCC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABEC6E40(0, &qword_1EEC44B08, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABEC6E40(0, &qword_1EEC44B10, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABEC62C4();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF74();
}

uint64_t sub_1ABEC6D30(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1ABD37AA0;
  *(_QWORD *)(v4 + 56) = a1;
  *(_OWORD *)(v4 + 64) = *v1;
  return swift_task_switch();
}

uint64_t sub_1ABEC6D9C()
{
  sub_1ABE19BE4();
  return sub_1ABF2FCA4();
}

ValueMetadata *type metadata accessor for OpenSymbolIntent()
{
  return &type metadata for OpenSymbolIntent;
}

unint64_t sub_1ABEC6DE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC44B38;
  if (!qword_1EEC44B38)
  {
    sub_1ABEC6E40(255, &qword_1EEC44B40, MEMORY[0x1E0C91678]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C916B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC44B38);
  }
  return result;
}

void sub_1ABEC6E40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE19BE4();
    v7 = a3(a1, &type metadata for OpenSymbolIntent, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1ABEC6E9C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_1ABF31B7C();
  if (!v18)
    return sub_1ABF31A68();
  v19 = v18;
  v25 = v15;
  v39 = sub_1ABF3160C();
  v32 = sub_1ABF31F54();
  sub_1ABF31F0C();
  v36 = v17;
  result = sub_1ABF31B58();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_1ABF31BA0();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_1ABF31F3C();
      sub_1ABF31B88();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t ArticleScorer.init(subscribedTags:config:currentDate:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v6;
  uint64_t v7;

  *a4 = a1;
  sub_1ABD065C8(a2, (uint64_t)(a4 + 1));
  v6 = (char *)a4 + *(int *)(type metadata accessor for ArticleScorer() + 24);
  v7 = sub_1ABF30760();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a3, v7);
}

long double sub_1ABEC71D8@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  int v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  _BOOL4 v14;
  long double v15;
  double v16;
  long double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  BOOL v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  long double v74;
  long double v75;
  long double v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  double v81;
  long double v82;
  long double v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  long double v87;
  long double result;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;

  v98 = *(double *)a1;
  v99 = *(double *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  v100 = *(double *)(a1 + 24);
  v101 = *(double *)(a1 + 40);
  v102 = *(double *)(a1 + 48);
  v103 = *(double *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 56);
  v7 = *(double *)(a1 + 64);
  v8 = *(double *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(_QWORD *)(a1 + 88);
  v11 = a2[3];
  v12 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 136))(v11, v12);
  v14 = v8 > 0.0 && v7 > 0.0;
  v15 = 1.0;
  v96 = v8;
  v97 = v7;
  v16 = v7 / v8;
  v17 = 1.0;
  if (v14)
    v17 = exp2(-(v13 * v16));
  v95 = v17;
  v18 = a2[3];
  v19 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 48))(v18, v19);
  if (v14)
    v15 = exp2(-(v20 * v16));
  v90 = v15;
  v21 = a2[3];
  v22 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v21);
  v23 = (*(double (**)(uint64_t, uint64_t))(v22 + 40))(v21, v22);
  v24 = a2[3];
  v25 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v24);
  v93 = (*(double (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
  v26 = a2[3];
  v27 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v26);
  v91 = (*(double (**)(uint64_t, uint64_t))(v27 + 32))(v26, v27);
  sub_1ABD2F118(v5, a2);
  v92 = v28;
  v29 = a2[3];
  v30 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v29);
  v89 = (*(double (**)(uint64_t, uint64_t))(v30 + 104))(v29, v30);
  v31 = a2[3];
  v32 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v31);
  v33 = (*(double (**)(uint64_t, uint64_t))(v32 + 112))(v31, v32);
  v34 = a2[3];
  v35 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v34);
  v36 = (*(double (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
  v37 = a2[3];
  v38 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v37);
  v39 = (*(double (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
  v40 = a2[3];
  v41 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v40);
  v42 = (*(double (**)(uint64_t, uint64_t))(v41 + 56))(v40, v41);
  v43 = a2[3];
  v44 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v43);
  v45 = (*(double (**)(uint64_t, uint64_t))(v44 + 96))(v43, v44);
  v46 = a2[3];
  v47 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v46);
  v48 = (*(double (**)(uint64_t, uint64_t))(v47 + 120))(v46, v47);
  v49 = a2[3];
  v50 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v49);
  v51 = (*(double (**)(uint64_t, uint64_t))(v50 + 152))(v49, v50);
  v52 = 1.0;
  if (v6)
  {
    v53 = a2[3];
    v54 = a2[4];
    v55 = v51;
    __swift_project_boxed_opaque_existential_1(a2, v53);
    v56 = (*(double (**)(uint64_t, uint64_t))(v54 + 144))(v53, v54);
    v51 = v55;
    v52 = 1.0 - v56;
  }
  v57 = v36;
  v58 = v39;
  v59 = v36 + v39 + v42 + v45 + v48;
  if (v59 <= 0.0)
    v59 = 1.0;
  v60 = v101 * v89 + v33;
  if (v60 <= 1.0)
    v61 = v101 * v89 + v33;
  else
    v61 = 1.0;
  v62 = v60 > 0.0;
  v63 = 0.0;
  if (!v62)
    v61 = 0.0;
  v64 = v99 * v93 + v91;
  if (v64 <= 1.0)
    v65 = v99 * v93 + v91;
  else
    v65 = 1.0;
  if (v64 > 0.0)
    v63 = v65;
  v66 = (1.0 - v23) * v63;
  v94 = v90 * (v100 * v23) + v95 * v66;
  v67 = v52 / v59;
  v68 = (v100 * v23 + v66) * v36;
  v69 = v103 * v58;
  v70 = v92 * v42;
  v71 = v61 * v45;
  v72 = v102 * v48;
  v73 = (v68 + v103 * v58 + v70 + v71 + v72) * v67;
  v74 = pow(1.0 - v51, (double)v10);
  v75 = v74 * v73;
  v76 = v74 * ((v94 * v57 + v95 * (v69 + v70 + v71 + v72)) * v67);
  v77 = a2[3];
  v78 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v77);
  v79 = (*(double (**)(uint64_t, uint64_t))(v78 + 160))(v77, v78);
  v80 = v98 * v79;
  v81 = 1.0 - v79;
  v82 = v98 * v79 + v75 * (1.0 - v79);
  v83 = v98 * v79 + v76 * (1.0 - v79);
  v84 = a2[3];
  v85 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v84);
  v86 = (*(double (**)(uint64_t, uint64_t))(v85 + 128))(v84, v85);
  v87 = pow(1.0 - v86, (double)v9);
  *(double *)a3 = v98;
  *(double *)(a3 + 8) = v103;
  result = v80 + v81 * (v76 * v87);
  *(double *)(a3 + 16) = v99;
  *(double *)(a3 + 24) = v100;
  *(_QWORD *)(a3 + 32) = v5;
  *(double *)(a3 + 40) = v101;
  *(double *)(a3 + 48) = v102;
  *(_BYTE *)(a3 + 56) = v6;
  *(double *)(a3 + 64) = v97;
  *(double *)(a3 + 72) = v96;
  *(_QWORD *)(a3 + 80) = v9;
  *(_QWORD *)(a3 + 88) = v10;
  *(long double *)(a3 + 96) = v82;
  *(long double *)(a3 + 104) = v83;
  *(long double *)(a3 + 112) = result;
  return result;
}

long double static ArticleScorer.applyRankPenalty(score:penalty:rank:)(uint64_t a1, double a2, double a3)
{
  return pow(1.0 - a3, (double)a1) * a2;
}

uint64_t sub_1ABEC7708(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_1ABF31D5C();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_1ABF31918();
  v57 = sub_1ABF3160C();
  v53 = sub_1ABF31F54();
  sub_1ABF31F0C();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_1ABF318F4();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1ABF31D74();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_1ABF31F3C();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_1ABF31D74();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_1ABF31F3C();
      sub_1ABF31D74();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t sub_1ABEC7C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for ArticleScorer(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    sub_1ABF2FF68();
  }
  else
  {
    v8 = a2 + 1;
    v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    sub_1ABF2FF5C();
    v11(a1 + 8, v8, v10);
    v12 = *(int *)(a3 + 24);
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1ABF30760();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t initializeWithCopy for ArticleScorer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  sub_1ABF2FF5C();
  v9(a1 + 8, v6, v8);
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

_QWORD *assignWithCopy for ArticleScorer(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2 + 1;
  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        sub_1ABF2FF68();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          sub_1ABF2FF68();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          sub_1ABF2FF68();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithTake for ArticleScorer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ArticleScorer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScorer()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABEC808C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1ABF30760();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ArticleScorer()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1ABEC8114(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1ABF30760();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

BOOL sub_1ABEC8188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;

  v7 = type metadata accessor for ScoredArticle(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return *(double *)(a2 + *(int *)(v7 + 36) + 104) < *(double *)(a1 + *(int *)(v7 + 36) + 104);
}

uint64_t sub_1ABEC81E0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t (*v6)(uint64_t, char *);
  uint64_t v7;
  uint64_t TupleTypeMetadata2;

  v6 = (uint64_t (*)(uint64_t, char *))v4[4];
  v7 = *(_QWORD *)a1;
  type metadata accessor for ScoredArticle(255, v4[2], v4[3], a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v6(v7, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_1ABEC8260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v9 = sub_1ABF31594();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1ABF315D0();
  v13 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a2;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a6;
  v17[3] = sub_1ABD17050;
  v17[4] = v16;
  aBlock[4] = sub_1ABEC89AC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_34;
  v18 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF315AC();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v10, MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, v10);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v15, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

uint64_t sub_1ABEC8498(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint32_t v16;
  unsigned int v17;
  double v18;
  uint32_t v19;
  unsigned int v20;
  double v21;
  uint32_t v22;
  unsigned int v23;
  double v24;
  uint32_t v25;
  unsigned int v26;
  double v27;
  uint32_t v28;
  unsigned int v29;
  double v30;
  uint32_t v31;
  unsigned int v32;
  double v33;
  uint32_t v34;
  unsigned int v35;
  double v36;
  uint32_t v37;
  unsigned int v38;
  double v39;
  uint32_t v40;
  unsigned int v41;
  double v42;
  uint32_t v43;
  unsigned int v44;
  double v45;
  uint32_t v46;
  unsigned int v47;
  double v48;
  uint32_t v49;
  unsigned int v50;
  double v51;
  uint32_t v52;
  uint64_t v53;
  uint32_t v54;
  uint64_t v55;
  uint32_t v56;
  unsigned int v57;
  double v58;
  uint32_t v59;
  unsigned int v60;
  double v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v78[3];
  void (*v79)(uint64_t);
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v6 = (int *)type metadata accessor for QuoteDetail();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (double *)((char *)v78 - v10);
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v78[2] = a3;
    v79 = a2;
    sub_1ABF2FF5C();
    v13 = MEMORY[0x1E0DEE9E0];
    v78[1] = a1;
    v14 = (uint64_t *)(a1 + 40);
    v80 = xmmword_1ABF4C460;
    do
    {
      v15 = *(v14 - 1);
      v82 = *v14;
      v83 = v15;
      sub_1ABF2FF5C();
      v16 = arc4random_uniform(0x64u);
      if (v16 <= 1)
        v17 = 1;
      else
        v17 = v16;
      v18 = (double)v17;
      v19 = arc4random_uniform(0x64u);
      if (v19 <= 1)
        v20 = 1;
      else
        v20 = v19;
      v21 = v18 / (double)v20;
      v22 = arc4random_uniform(0x64u);
      if (v22 <= 1)
        v23 = 1;
      else
        v23 = v22;
      v24 = (double)v23;
      v25 = arc4random_uniform(0x64u);
      if (v25 <= 1)
        v26 = 1;
      else
        v26 = v25;
      v27 = v24 / (double)v26;
      v28 = arc4random_uniform(0x64u);
      if (v28 <= 1)
        v29 = 1;
      else
        v29 = v28;
      v30 = (double)v29;
      v31 = arc4random_uniform(0x64u);
      if (v31 <= 1)
        v32 = 1;
      else
        v32 = v31;
      v33 = v30 / (double)v32;
      v34 = arc4random_uniform(0x64u);
      if (v34 <= 1)
        v35 = 1;
      else
        v35 = v34;
      v36 = (double)v35;
      v37 = arc4random_uniform(0x64u);
      if (v37 <= 1)
        v38 = 1;
      else
        v38 = v37;
      v39 = v36 / (double)v38;
      v40 = arc4random_uniform(0x64u);
      if (v40 <= 1)
        v41 = 1;
      else
        v41 = v40;
      v42 = (double)v41;
      v43 = arc4random_uniform(0x64u);
      if (v43 <= 1)
        v44 = 1;
      else
        v44 = v43;
      v45 = v42 / (double)v44;
      v46 = arc4random_uniform(0x64u);
      if (v46 <= 1)
        v47 = 1;
      else
        v47 = v46;
      v48 = (double)v47;
      v49 = arc4random_uniform(0x64u);
      if (v49 <= 1)
        v50 = 1;
      else
        v50 = v49;
      v51 = v48 / (double)v50;
      v52 = arc4random_uniform(0x64u);
      if (v52 <= 1)
        v53 = 1;
      else
        v53 = v52;
      v81 = v53;
      v54 = arc4random_uniform(0x64u);
      if (v54 <= 1)
        v55 = 1;
      else
        v55 = v54;
      v56 = arc4random_uniform(0x64u);
      if (v56 <= 1)
        v57 = 1;
      else
        v57 = v56;
      v58 = (double)v57;
      v59 = arc4random_uniform(0x64u);
      if (v59 <= 1)
        v60 = 1;
      else
        v60 = v59;
      v61 = v58 / (double)v60;
      v62 = (char *)v11 + v6[15];
      v63 = sub_1ABF30760();
      v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56);
      v64(v62, 1, 1, v63);
      v64((char *)v11 + v6[16], 1, 1, v63);
      v65 = (char *)v11 + v6[18];
      v66 = sub_1ABF305D4();
      v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56);
      v67(v65, 1, 1, v66);
      v67((char *)v11 + v6[19], 1, 1, v66);
      v68 = (char *)v11 + v6[20];
      v69 = sub_1ABF3094C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 1, 1, v69);
      sub_1ABF30754();
      *v11 = v21;
      *((_BYTE *)v11 + 8) = 0;
      v11[2] = v27;
      *((_BYTE *)v11 + 24) = 0;
      v11[4] = v33;
      *((_BYTE *)v11 + 40) = 0;
      v11[6] = v39;
      *((_BYTE *)v11 + 56) = 0;
      v11[8] = v45;
      *((_BYTE *)v11 + 72) = 0;
      v11[10] = v51;
      *((_BYTE *)v11 + 88) = 0;
      *((_QWORD *)v11 + 12) = v81;
      *((_BYTE *)v11 + 104) = 0;
      *((_QWORD *)v11 + 14) = v55;
      *((_BYTE *)v11 + 120) = 0;
      v11[16] = v61;
      *((_BYTE *)v11 + 136) = 0;
      v11[18] = 0.0;
      *((_BYTE *)v11 + 152) = 1;
      v11[20] = 0.0;
      *((_BYTE *)v11 + 168) = 1;
      *(_OWORD *)((char *)v11 + v6[17]) = v80;
      v70 = (char *)v11 + v6[21];
      *(_QWORD *)v70 = 0;
      *((_QWORD *)v70 + 1) = 0;
      v71 = (char *)v11 + v6[22];
      *(_QWORD *)v71 = 0;
      *((_QWORD *)v71 + 1) = 0;
      v72 = (char *)v11 + v6[23];
      *(_QWORD *)v72 = 0;
      *((_QWORD *)v72 + 1) = 0;
      v73 = (char *)v11 + v6[24];
      *(_QWORD *)v73 = 0;
      *((_QWORD *)v73 + 1) = 0;
      v74 = (char *)v11 + v6[25];
      *(_QWORD *)v74 = 0;
      *((_QWORD *)v74 + 1) = 0;
      v75 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)((char *)v11 + v6[26]) = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)((char *)v11 + v6[27]) = v75;
      sub_1ABEB32EC((uint64_t)v11, (uint64_t)v8);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v84 = v13;
      sub_1ABDF0E1C((uint64_t)v8, v83, v82, isUniquelyReferenced_nonNull_native);
      v13 = v84;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 += 2;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v79(v13);
  }
  else
  {
    a2(MEMORY[0x1E0DEE9E0]);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEC88EC()
{
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34DD18, (uint64_t (*)(uint64_t))sub_1ABD74724, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABEC8954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABEC8260(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABEC895C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEC8980()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEC89AC()
{
  uint64_t v0;

  return sub_1ABEC8498(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1ABEC89B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEC89DC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEC8A08()
{
  uint64_t result;

  result = sub_1ABCFB180(0xD000000000000017, 0x80000001ABF62400);
  qword_1EEC44B48 = result;
  return result;
}

uint64_t sub_1ABEC8A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1ABF31594();
  v17 = *(_QWORD *)(v2 - 8);
  v18 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF315D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1ABF31C78();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABEC8E28();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1ABF310C0();
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_1ABF310C0();
  sub_1ABEC8E88();
  sub_1ABF31C6C();
  v13 = sub_1ABF31C84();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)(v1 + 32) = v13;
  swift_getObjectType();
  v14 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1ABEC8EE8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_36;
  v15 = _Block_copy(aBlock);
  swift_release();
  sub_1ABF315AC();
  sub_1ABEC8CFC();
  sub_1ABF31C90();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v18);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1ABF31CB4();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1ABEC8C98()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1ABF310B4();
    sub_1ABF310B4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1ABEC8CFC()
{
  sub_1ABF31594();
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABD1339C(0);
  sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCA0, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
  return sub_1ABF31E04();
}

uint64_t sub_1ABEC8DA4()
{
  swift_getObjectType();
  sub_1ABF31C9C();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1ABEC8E28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DCC0)
  {
    v0 = sub_1ABF310CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DCC0);
  }
}

unint64_t sub_1ABEC8E88()
{
  unint64_t result;

  result = qword_1ED34E098;
  if (!qword_1ED34E098)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34E098);
  }
  return result;
}

uint64_t sub_1ABEC8EC4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABEC8EE8()
{
  return sub_1ABEC8C98();
}

unint64_t sub_1ABEC8EF0()
{
  unint64_t result;

  result = qword_1ED3467F8;
  if (!qword_1ED3467F8)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED3467F8);
  }
  return result;
}

uint64_t sub_1ABEC8F34@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  char v7;

  v3 = sub_1ABF31804();
  v4 = v2;
  if (v3 == 0x79636E6572727563 && v2 == 0xE800000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 1;
  }
  else if (v3 == 0x75636F7470797263 && v4 == 0xEE0079636E657272 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 2;
  }
  else if (v3 == 0x6B636F7473 && v4 == 0xE500000000000000
         || (sub_1ABF3223C() & 1) != 0
         || v3 == 0x797469757165 && v4 == 0xE600000000000000
         || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 3;
  }
  else if (v3 == 6714469 && v4 == 0xE300000000000000
         || (sub_1ABF3223C() & 1) != 0
         || v3 == 0x74652D6B636F7473 && v4 == 0xE900000000000066
         || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 4;
  }
  else if (v3 == 0x7865646E69 && v4 == 0xE500000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 6;
  }
  else if (v3 == 0x75666C617574756DLL && v4 == 0xEA0000000000646ELL || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v6 = 7;
  }
  else if (v3 == 0x73657275747566 && v4 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v6 = 5;
  }
  else
  {
    v7 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      v6 = 5;
    else
      v6 = 0;
  }
  *a1 = v6;
  return result;
}

uint64_t sub_1ABEC92EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v4 = sub_1ABF31594();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v17 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1ABF315D0();
  v8 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1ABEC9594;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_1ABEC95DC;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_37;
  v13 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF315AC();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v5, MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, v5);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v10, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  return swift_release();
}

uint64_t sub_1ABEC9514()
{
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34DD40, (uint64_t (*)(uint64_t))sub_1ABD33E04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABEC9570()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEC9594(uint64_t a1, char a2)
{
  uint64_t v2;
  void (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(void (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2;
  sub_1ABF2FF5C();
  v3(&v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEC95DC()
{
  uint64_t v0;
  void (*v1)(void);

  v1 = *(void (**)(void))(v0 + 16);
  sub_1ABD14C28(50);
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SDSStockFeedService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEC963C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _BYTE v23[24];
  uint64_t v24;

  v6 = sub_1ABF30B38();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1ABF30BE0();
  v11 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  sub_1ABD07E04(a2 + 16, (uint64_t)v23);
  v12 = *(_QWORD *)(a2 + 56);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)&v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  v18 = *v16;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v19 = sub_1ABEC9854(v11, v10, v18, v12, (uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  v20 = sub_1ABF30BBC();

  return v20;
}

uint64_t sub_1ABEC9798()
{
  void *v0;
  uint64_t v1;

  sub_1ABE01244();
  sub_1ABF3127C();
  v0 = (void *)sub_1ABF31114();
  sub_1ABD33E04();
  v1 = sub_1ABF31180();
  swift_release();

  return v1;
}

id sub_1ABEC9854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  objc_super v25;
  _QWORD v26[5];
  _QWORD v27[5];

  v10 = type metadata accessor for SDSBaseOperationFactory();
  v27[3] = v10;
  v27[4] = &off_1E5AEC4C0;
  v27[0] = a3;
  v11 = (objc_class *)type metadata accessor for SDSNewsOperation();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v10);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  v18 = *v16;
  v26[3] = v10;
  v26[4] = &off_1E5AEC4C0;
  v26[0] = v18;
  v19 = &v12[qword_1EEC44920];
  *(_QWORD *)v19 = a1;
  *((_QWORD *)v19 + 1) = a2;
  sub_1ABD07E04((uint64_t)v26, (uint64_t)&v12[qword_1EEC44928]);
  *(_QWORD *)&v12[qword_1EEC44930] = a4;
  v20 = &v12[qword_1EEC44938];
  v21 = sub_1ABF30B38();
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, a5, v21);
  v25.receiver = v12;
  v25.super_class = v11;
  v23 = objc_msgSendSuper2(&v25, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a5, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v23;
}

uint64_t sub_1ABEC99CC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, char a3@<W4>, uint64_t a4@<X6>, _BYTE *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void (*v36)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v37;
  double v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  char v50;
  _BYTE *v51;
  int *v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  _BYTE *v57;
  unsigned __int8 *v58;
  int v59;
  uint64_t v60;
  _BYTE v61[4];
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;

  v70 = a4;
  v72 = a5;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = &v61[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v13 = &v61[-v12];
  v14 = sub_1ABF30760();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v17 = MEMORY[0x1E0C80A78](v16);
  v71 = &v61[-v19];
  v20 = *a1;
  v21 = a1[1];
  v22 = a1[2];
  if ((a3 & 1) == 0)
  {
    v76 = 0;
    v23 = MEMORY[0x1E0C80A78](v17);
    *(_QWORD *)&v61[-16] = &v76;
    if ((v21 & 0x1000000000000000) != 0 || !(v21 & 0x2000000000000000 | v20 & 0x1000000000000000))
    {
      v68 = v25;
      v69 = v24;
      sub_1ABF2FF5C();
      sub_1ABF31E7C();
      swift_bridgeObjectRelease();
      if ((v75 & 1) == 0)
        goto LABEL_16;
    }
    else
    {
      MEMORY[0x1E0C80A78](v23);
      *(_QWORD *)&v61[-16] = sub_1ABECC3B8;
      *(_QWORD *)&v61[-8] = &v61[-32];
      if ((v21 & 0x2000000000000000) == 0)
      {
        v68 = v27;
        v69 = v26;
        if ((v20 & 0x1000000000000000) != 0)
        {
          v28 = (v21 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v29 = v20 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          v28 = sub_1ABF31EE8();
          v29 = v60;
        }
        sub_1ABF2FF5C();
        v30 = sub_1ABEB1A50(v28, v29, (void (*)(uint64_t *__return_ptr))sub_1ABECC3A4);
        swift_bridgeObjectRelease();
        if ((v30 & 1) != 0)
          goto LABEL_8;
LABEL_16:
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_20:
        sub_1ABD184CC((uint64_t)v13, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
LABEL_21:
        v34 = type metadata accessor for Chart.Entry(0);
        return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v72, 1, 1, v34);
      }
      v73 = v20;
      v74 = v21 & 0xFFFFFFFFFFFFFFLL;
      if (v20 <= 0x20u && ((1 << v20) & 0x100003E01) != 0)
      {
        sub_1ABF2FF5C();
LABEL_15:
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      v68 = v27;
      v69 = v26;
      sub_1ABF2FF5C();
      v58 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
      if (!v58)
        goto LABEL_15;
      v59 = *v58;
      swift_bridgeObjectRelease();
      if (v59)
        goto LABEL_16;
    }
LABEL_8:
    sub_1ABF30700();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    goto LABEL_19;
  }
  if (!a2)
    goto LABEL_16;
  v68 = v18;
  v69 = v22;
  v31 = (void *)sub_1ABF31780();
  v32 = objc_msgSend(a2, sel_dateFromString_, v31);

  if (v32)
  {
    sub_1ABF30724();

    v33 = 0;
  }
  else
  {
    v33 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v11, v33, 1, v14);
  sub_1ABD241F8((uint64_t)v11, (uint64_t)v13);
LABEL_19:
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    goto LABEL_20;
  v36 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32);
  v37 = v71;
  v36(v71, v13, v14);
  sub_1ABF3070C();
  if (v38 == 0.0 || (v39 = v69, !*(_QWORD *)(v69 + 16)))
  {
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v37, v14);
    goto LABEL_21;
  }
  v40 = v68;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 16))(v68, v37, v14);
  v41 = v70;
  v67 = sub_1ABECAF20(*(_QWORD *)v70, *(_BYTE *)(v70 + 8), v39);
  v66 = v42;
  v65 = sub_1ABECAF20(*(_QWORD *)(v41 + 16), *(_BYTE *)(v41 + 24), v39);
  v64 = v43;
  v63 = sub_1ABECAF20(*(_QWORD *)(v41 + 32), *(_BYTE *)(v41 + 40), v39);
  v62 = v44;
  v45 = sub_1ABECAF20(*(_QWORD *)(v41 + 48), *(_BYTE *)(v41 + 56), v39);
  v47 = v46;
  v48 = sub_1ABECAF20(*(_QWORD *)(v41 + 64), *(_BYTE *)(v41 + 72), v39);
  v50 = v49;
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v71, v14);
  v51 = v72;
  v36(v72, v40, v14);
  v52 = (int *)type metadata accessor for Chart.Entry(0);
  v53 = &v51[v52[5]];
  *(_QWORD *)v53 = v67;
  v53[8] = v66 & 1;
  v54 = &v51[v52[6]];
  *(_QWORD *)v54 = v65;
  v54[8] = v64 & 1;
  v55 = &v51[v52[7]];
  *(_QWORD *)v55 = v63;
  v55[8] = v62 & 1;
  v56 = &v51[v52[8]];
  *(_QWORD *)v56 = v45;
  v56[8] = v47 & 1;
  v57 = &v51[v52[9]];
  *(_QWORD *)v57 = v48;
  v57[8] = v50 & 1;
  return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, int *))(*((_QWORD *)v52 - 1) + 56))(v51, 0, 1, v52);
}

uint64_t sub_1ABEC9F68@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X4>, void *a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  char *v49;
  void *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  char *v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  char *v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  void (*v90)(char *, uint64_t, uint64_t);
  char *v91;
  char *v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  unsigned int (*v101)(uint64_t, uint64_t, uint64_t);
  void (*v102)(char *, uint64_t, uint64_t, uint64_t);
  void (*v103)(char *, uint64_t, uint64_t);
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  char *v107;
  void *v108;
  char *v109;
  char *v110;
  int v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;

  v116 = a3;
  v111 = a2;
  sub_1ABD16EF8();
  v113 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v115 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v112 = (char *)&v101 - v11;
  sub_1ABCFC730();
  v119 = *(_QWORD *)(v12 - 8);
  v120 = v12;
  MEMORY[0x1E0C80A78](v12);
  v114 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v15 = MEMORY[0x1E0C80A78](v14);
  v110 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v101 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v101 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v101 - v23;
  v25 = sub_1ABF30760();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v28 = MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v32 = *(_QWORD *)(a1 + 16);
  if (!v32)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v24, 1, 1, v25);
    v22 = v24;
    goto LABEL_8;
  }
  v107 = v19;
  v108 = a4;
  v117 = a5;
  v118 = (char *)&v101 - v29;
  v106 = v31;
  v109 = v30;
  v33 = *(_QWORD *)(type metadata accessor for Chart.Entry(0) - 8);
  v34 = a1 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v35(v24, v34, v25);
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v36(v24, 0, 1, v25);
  v37 = v26;
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v38(v24, 1, v25) == 1)
  {
    v22 = v24;
LABEL_7:
    a5 = v117;
LABEL_8:
    v42 = v119;
    v41 = v120;
    sub_1ABD184CC((uint64_t)v22, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1ABF31BE8();
    sub_1ABD19560();
    v43 = (void *)sub_1ABF31D44();
    sub_1ABF31318();

    v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
    v45 = a5;
    v46 = 1;
    return v44(v45, v46, 1, v41);
  }
  v39 = v24;
  v40 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v40(v118, v39, v25);
  v35(v22, v34 + *(_QWORD *)(v33 + 72) * (v32 - 1), v25);
  v36(v22, 0, 1, v25);
  if (v38(v22, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v118, v25);
    goto LABEL_7;
  }
  v104 = v37;
  v102 = v36;
  v101 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v38;
  v103 = v35;
  v105 = (void (*)(uint64_t, uint64_t, uint64_t))v40;
  v40(v109, v22, v25);
  v48 = *(_QWORD *)(v116 + 16);
  v49 = v118;
  v50 = v108;
  if (!v48)
    goto LABEL_43;
  v51 = (uint64_t *)(v116 + 56);
  while (1)
  {
    v52 = *(v51 - 1);
    v53 = *v51;
    if (*(v51 - 3) == 0xD000000000000013 && *(v51 - 2) == 0x80000001ABF62600)
      break;
    if ((sub_1ABF3223C() & 1) != 0)
      break;
    v51 += 4;
    if (!--v48)
      goto LABEL_43;
  }
  v54 = sub_1ABF2FF5C();
  if (v53)
  {
    if ((v111 & 1) != 0)
    {
      v63 = (uint64_t)v107;
      if (v50)
      {
        v64 = (void *)sub_1ABF31780();
        v65 = objc_msgSend(v50, sel_dateFromString_, v64);

        if (v65)
        {
          v66 = v110;
          sub_1ABF30724();

          v67 = 0;
          v68 = v105;
          v56 = v109;
        }
        else
        {
          v67 = 1;
          v68 = v105;
          v56 = v109;
          v66 = v110;
        }
        v69 = v101;
        v102(v66, v67, 1, v25);
        v70 = (uint64_t)v66;
        v60 = (uint64_t)v107;
        sub_1ABD241F8(v70, (uint64_t)v107);
        goto LABEL_37;
      }
      v102(v107, 1, 1, v25);
      v68 = v105;
      v60 = v63;
      v56 = v109;
      goto LABEL_34;
    }
    v124 = 0;
    v55 = MEMORY[0x1E0C80A78](v54);
    *(&v101 - 2) = (unsigned int (*)(uint64_t, uint64_t, uint64_t))&v124;
    if ((v53 & 0x1000000000000000) != 0 || !(v53 & 0x2000000000000000 | v52 & 0x1000000000000000))
      goto LABEL_49;
    MEMORY[0x1E0C80A78](v55);
    *(&v101 - 2) = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_1ABECC3B8;
    *(&v101 - 1) = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(&v101 - 4);
    if ((v53 & 0x2000000000000000) != 0)
    {
      v121 = v52;
      v122 = v53 & 0xFFFFFFFFFFFFFFLL;
      v56 = v109;
      if (v52 <= 0x20u && ((1 << v52) & 0x100003E01) != 0)
        goto LABEL_31;
      v99 = (_BYTE *)_swift_stdlib_strtod_clocale();
      if (!v99 || *v99)
        goto LABEL_31;
    }
    else
    {
      v56 = v109;
      if ((v52 & 0x1000000000000000) != 0)
      {
        v57 = (v53 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v58 = v52 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v57 = sub_1ABF31EE8();
        v58 = v100;
      }
      sub_1ABF2FF5C();
      v59 = sub_1ABEB1A50(v57, v58, (void (*)(uint64_t *__return_ptr))sub_1ABECC3A4);
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0)
        goto LABEL_31;
    }
    goto LABEL_25;
  }
  while (1)
  {
    while (1)
    {
LABEL_43:
      sub_1ABD47E5C();
      v85 = v109;
      if ((sub_1ABF31708() & 1) != 0)
      {
        v87 = v112;
        v86 = v113;
        v88 = &v112[*(int *)(v113 + 48)];
        v89 = v49;
        v90 = (void (*)(char *, uint64_t, uint64_t))v105;
        v105((uint64_t)v112, (uint64_t)v89, v25);
        v90(v88, (uint64_t)v85, v25);
        v91 = v115;
        v92 = &v115[*(int *)(v86 + 48)];
        v93 = (void (*)(char *, char *, uint64_t))v103;
        v103(v115, (uint64_t)v87, v25);
        v93(v92, v88, v25);
        v94 = (uint64_t)v114;
        v90(v114, (uint64_t)v91, v25);
        v95 = *(void (**)(char *, uint64_t))(v104 + 8);
        v95(v92, v25);
        v96 = &v91[*(int *)(v86 + 48)];
        v90(v91, (uint64_t)v87, v25);
        v90(v96, (uint64_t)v88, v25);
        v97 = v120;
        v90((char *)(v94 + *(int *)(v120 + 36)), (uint64_t)v96, v25);
        v95(v91, v25);
        v98 = v117;
        sub_1ABCFE2AC(v94, v117, (uint64_t (*)(_QWORD))sub_1ABCFC730);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v119 + 56))(v98, 0, 1, v97);
      }
      __break(1u);
LABEL_49:
      sub_1ABF2FF5C();
      sub_1ABF31E7C();
      swift_bridgeObjectRelease();
      v56 = v109;
      if ((v123 & 1) != 0)
      {
LABEL_25:
        v60 = (uint64_t)v107;
        sub_1ABF30700();
        v61 = v60;
        v62 = 0;
      }
      else
      {
LABEL_31:
        v60 = (uint64_t)v107;
        v61 = (uint64_t)v107;
        v62 = 1;
      }
      v102((char *)v61, v62, 1, v25);
      v68 = v105;
LABEL_34:
      v69 = v101;
LABEL_37:
      swift_bridgeObjectRelease();
      if (v69(v60, 1, v25) != 1)
        break;
      sub_1ABD184CC(v60, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    }
    v71 = v106;
    v68(v106, v60, v25);
    if ((sub_1ABF306DC() & 1) != 0)
      break;
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v71, v25);
  }
  sub_1ABD47E5C();
  v72 = sub_1ABF31708();
  v73 = *(uint64_t (**)(uint64_t, uint64_t))(v104 + 8);
  result = v73((uint64_t)v56, v25);
  if ((v72 & 1) != 0)
  {
    v75 = v112;
    v74 = v113;
    v76 = &v112[*(int *)(v113 + 48)];
    v77 = v49;
    v78 = (void (*)(char *, uint64_t, uint64_t))v105;
    v105((uint64_t)v112, (uint64_t)v77, v25);
    v78(v76, v71, v25);
    v79 = v115;
    v80 = &v115[*(int *)(v74 + 48)];
    v81 = (void (*)(char *, char *, uint64_t))v103;
    v103(v115, (uint64_t)v75, v25);
    v81(v80, v76, v25);
    v82 = (uint64_t)v114;
    v78(v114, (uint64_t)v79, v25);
    v73((uint64_t)v80, v25);
    v83 = &v79[*(int *)(v74 + 48)];
    v78(v79, (uint64_t)v75, v25);
    v78(v83, (uint64_t)v76, v25);
    v41 = v120;
    v78((char *)(v82 + *(int *)(v120 + 36)), (uint64_t)v83, v25);
    v73((uint64_t)v79, v25);
    v84 = v117;
    sub_1ABCFE2AC(v82, v117, (uint64_t (*)(_QWORD))sub_1ABCFC730);
    v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56);
    v45 = v84;
    v46 = 0;
    return v44(v45, v46, 1, v41);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABECA938@<X0>(uint64_t a1@<X3>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  char v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *i;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  unsigned __int8 *v48;
  unsigned int v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  _QWORD v58[3];

  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v52 - v7;
  v9 = sub_1ABF3094C();
  v57 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return sub_1ABF3091C();
  v53 = (char *)&v52 - v12;
  v54 = v8;
  v14 = a2;
  v15 = 0xE900000000000074;
  v16 = (unint64_t *)(a1 + 56);
  v17 = v13;
  while (1)
  {
    v19 = *(v16 - 1);
    v18 = *v16;
    v20 = *(v16 - 3) == 0x657366666F746D67 && *(v16 - 2) == 0xE900000000000074;
    if (v20 || (sub_1ABF3223C() & 1) != 0)
      break;
    v16 += 4;
    if (!--v17)
    {
      v22 = v14;
LABEL_57:
      v38 = 0;
      for (i = (uint64_t *)(a1 + 56); ; i += 4)
      {
        v40 = v38 + 1;
        if (__OFADD__(v38, 1))
        {
          __break(1u);
          goto LABEL_74;
        }
        a1 = *(i - 1);
        v15 = *i;
        v41 = *(i - 3) == 0x656E6F7A656D6974 && *(i - 2) == 0xE800000000000000;
        if (v41 || (sub_1ABF3223C() & 1) != 0)
          break;
        ++v38;
        if (v40 == v13)
          return sub_1ABF3091C();
      }
      sub_1ABF2FF5C();
      if (!v15)
        return sub_1ABF3091C();
      v42 = (uint64_t)v56;
      sub_1ABF3091C();
      swift_bridgeObjectRelease();
      v15 = v57;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v42, 1, v9) == 1)
      {
        sub_1ABD184CC(v42, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470]);
        return sub_1ABF3091C();
      }
      v43 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
      v44 = v55;
      v43(v55, v42, v9);
      v45 = v22;
      v46 = v44;
LABEL_72:
      v43(v45, (uint64_t)v46, v9);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v22, 0, 1, v9);
    }
  }
  result = sub_1ABF2FF5C();
  v22 = v14;
  if (!v18)
    goto LABEL_57;
  v24 = HIBYTE(v18) & 0xF;
  v25 = v19 & 0xFFFFFFFFFFFFLL;
  if ((v18 & 0x2000000000000000) != 0)
    v26 = HIBYTE(v18) & 0xF;
  else
    v26 = v19 & 0xFFFFFFFFFFFFLL;
  if (!v26)
  {
    swift_bridgeObjectRelease();
    goto LABEL_57;
  }
  if ((v18 & 0x1000000000000000) != 0)
  {
    v15 = (uint64_t)sub_1ABE411D8(v19, v18, 10);
    LOBYTE(v19) = v51;
    goto LABEL_54;
  }
  if ((v18 & 0x2000000000000000) == 0)
  {
    if ((v19 & 0x1000000000000000) != 0)
      v27 = (unsigned __int8 *)((v18 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v27 = (unsigned __int8 *)sub_1ABF31EE8();
    v15 = (uint64_t)sub_1ABE411C4(v27, v25, 10);
    LOBYTE(v19) = v28 & 1;
    goto LABEL_54;
  }
  v58[0] = v19;
  v58[1] = v18 & 0xFFFFFFFFFFFFFFLL;
  if (v19 != 43)
  {
    if (v19 == 45)
    {
      if (v24)
      {
        if (v24 != 1 && (BYTE1(v19) - 48) <= 9u)
        {
          if (v24 == 2)
          {
            LOBYTE(v19) = 0;
            v15 = -(uint64_t)(BYTE1(v19) - 48);
LABEL_54:
            swift_bridgeObjectRelease();
            if ((v19 & 1) != 0)
              goto LABEL_57;
            v37 = (uint64_t)v54;
            sub_1ABF30928();
            v15 = v57;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v37, 1, v9) == 1)
            {
              sub_1ABD184CC(v37, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470]);
              goto LABEL_57;
            }
            v43 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
            v47 = v53;
            v43(v53, v37, v9);
            v45 = v22;
            v46 = v47;
            goto LABEL_72;
          }
          if ((BYTE2(v19) - 48) <= 9u)
          {
            v15 = -10 * (BYTE1(v19) - 48) - (BYTE2(v19) - 48);
            v21 = v24 - 3;
            if (!v21)
              goto LABEL_53;
LABEL_74:
            v48 = (unsigned __int8 *)v58 + 3;
            while (1)
            {
              v49 = *v48 - 48;
              if (v49 > 9)
                break;
              v50 = 10 * v15;
              if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
                break;
              v15 = v50 - v49;
              if (__OFSUB__(v50, v49))
                break;
              LOBYTE(v19) = 0;
              ++v48;
              if (!--v21)
                goto LABEL_54;
            }
          }
        }
LABEL_41:
        v15 = 0;
        LOBYTE(v19) = 1;
        goto LABEL_54;
      }
      __break(1u);
      goto LABEL_84;
    }
    if (!v24 || (v19 - 48) > 9u)
      goto LABEL_41;
    v15 = (v19 - 48);
    if (v24 != 1)
    {
      if ((BYTE1(v19) - 48) > 9u)
        goto LABEL_41;
      v15 = 10 * (v19 - 48) + (BYTE1(v19) - 48);
      v33 = v24 - 2;
      if (v33)
      {
        v34 = (unsigned __int8 *)v58 + 2;
        while (1)
        {
          v35 = *v34 - 48;
          if (v35 > 9)
            goto LABEL_41;
          v36 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
            goto LABEL_41;
          v15 = v36 + v35;
          if (__OFADD__(v36, v35))
            goto LABEL_41;
          LOBYTE(v19) = 0;
          ++v34;
          if (!--v33)
            goto LABEL_54;
        }
      }
    }
LABEL_53:
    LOBYTE(v19) = 0;
    goto LABEL_54;
  }
  if (v24)
  {
    if (v24 == 1 || (BYTE1(v19) - 48) > 9u)
      goto LABEL_41;
    v15 = (BYTE1(v19) - 48);
    if (v24 != 2)
    {
      if ((BYTE2(v19) - 48) > 9u)
        goto LABEL_41;
      v15 = 10 * (BYTE1(v19) - 48) + (BYTE2(v19) - 48);
      v29 = v24 - 3;
      if (v29)
      {
        v30 = (unsigned __int8 *)v58 + 3;
        while (1)
        {
          v31 = *v30 - 48;
          if (v31 > 9)
            goto LABEL_41;
          v32 = 10 * v15;
          if ((unsigned __int128)(v15 * (__int128)10) >> 64 != (10 * v15) >> 63)
            goto LABEL_41;
          v15 = v32 + v31;
          if (__OFADD__(v32, v31))
            goto LABEL_41;
          LOBYTE(v19) = 0;
          ++v30;
          if (!--v29)
            goto LABEL_54;
        }
      }
    }
    goto LABEL_53;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for YahooChartModelEngine()
{
  return objc_opt_self();
}

uint64_t sub_1ABECAF20(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  if ((a2 & 1) != 0 || *(_QWORD *)(a3 + 16) <= a1)
    return 0;
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3 + 16 * a1;
    v5 = *(_QWORD *)(v3 + 32);
    v4 = *(_QWORD *)(v3 + 40);
    v15 = 0;
    v6 = MEMORY[0x1E0C80A78](a1);
    if ((v4 & 0x1000000000000000) != 0 || !(v4 & 0x2000000000000000 | v5 & 0x1000000000000000))
    {
      sub_1ABF2FF5C();
      sub_1ABF31E7C();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
        return v15;
      return 0;
    }
    MEMORY[0x1E0C80A78](v6);
    if ((v4 & 0x2000000000000000) != 0)
    {
      if (v5 <= 0x20u && ((1 << v5) & 0x100003E01) != 0)
      {
        sub_1ABF2FF5C();
      }
      else
      {
        sub_1ABF2FF5C();
        v11 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
        if (v11)
        {
          v12 = *v11;
          swift_bridgeObjectRelease();
          if (!v12)
            return v15;
          return 0;
        }
      }
      swift_bridgeObjectRelease();
      return 0;
    }
    if ((v5 & 0x1000000000000000) != 0)
    {
      v7 = (v4 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v8 = v5 & 0xFFFFFFFFFFFFLL;
      goto LABEL_9;
    }
  }
  v7 = sub_1ABF31EE8();
  v8 = v13;
LABEL_9:
  sub_1ABF2FF5C();
  v9 = sub_1ABEB1A50(v7, v8, (void (*)(uint64_t *__return_ptr))sub_1ABECC3A4);
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return v15;
  return 0;
}

unint64_t sub_1ABECB11C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  int v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];
  uint64_t v35;

  v35 = a7;
  v32 = a4;
  v33 = a6;
  v30 = a2;
  v31 = a3;
  sub_1ABCF5A54(0, &qword_1ED34DA00, type metadata accessor for Chart.Entry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - v11;
  v29 = type metadata accessor for Chart.Entry(0);
  v13 = *(_QWORD *)(v29 - 8);
  v14 = MEMORY[0x1E0C80A78](v29);
  v28 = (uint64_t)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v26 - v16;
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return MEMORY[0x1E0DEE9D8];
  v27 = a5 & 1;
  sub_1ABF2FF5C();
  v26[1] = a1;
  v19 = (uint64_t *)(a1 + 48);
  v20 = MEMORY[0x1E0DEE9D8];
  do
  {
    v21 = *(v19 - 1);
    v22 = *v19;
    v34[0] = *(v19 - 2);
    v34[1] = v21;
    v34[2] = v22;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABEC99CC(v34, v30, v27, v35, v12);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v29) == 1)
    {
      sub_1ABD184CC((uint64_t)v12, &qword_1ED34DA00, type metadata accessor for Chart.Entry);
    }
    else
    {
      sub_1ABCFE2AC((uint64_t)v12, (uint64_t)v17, type metadata accessor for Chart.Entry);
      sub_1ABCFE2AC((uint64_t)v17, v28, type metadata accessor for Chart.Entry);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1ABD83330(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v24 = *(_QWORD *)(v20 + 16);
      v23 = *(_QWORD *)(v20 + 24);
      if (v24 >= v23 >> 1)
        v20 = sub_1ABD83330(v23 > 1, v24 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v24 + 1;
      sub_1ABCFE2AC(v28, v20+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v24, type metadata accessor for Chart.Entry);
    }
    v19 += 3;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1ABECB3CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  if (*(_QWORD *)(result + 16))
  {
    v2 = result;
    sub_1ABF2FF5C();
    __asm { BR              X9 }
  }
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  *(_QWORD *)(a2 + 48) = 0;
  *(_BYTE *)(a2 + 56) = 1;
  *(_QWORD *)(a2 + 64) = 0;
  *(_BYTE *)(a2 + 72) = 1;
  return result;
}

void sub_1ABECB894()
{
  swift_bridgeObjectRelease();
  JUMPOUT(0x1ABECB830);
}

uint64_t sub_1ABECB91C(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1)
    return 0;
  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
    return 0;
  for (i = (uint64_t *)(a2 + 56); ; i += 4)
  {
    v5 = *(i - 3);
    v7 = *(i - 1);
    v6 = *i;
    if (v5 == 0x73756F6976657270 && *(i - 2) == 0xEE0065736F6C635FLL)
      break;
    v5 = sub_1ABF3223C();
    if ((v5 & 1) != 0)
      break;
    if (!--v3)
      return 0;
  }
  if (!v6)
    return 0;
  v9 = MEMORY[0x1E0C80A78](v5);
  if ((v6 & 0x1000000000000000) != 0 || !(v6 & 0x2000000000000000 | v7 & 0x1000000000000000))
  {
    sub_1ABF2FF5C();
    sub_1ABF31E7C();
    swift_bridgeObjectRelease();
  }
  else
  {
    MEMORY[0x1E0C80A78](v9);
    if ((v6 & 0x2000000000000000) != 0)
    {
      switch((char)v7)
      {
        case 0:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 32:
          sub_1ABF2FF5C();
          break;
        default:
          sub_1ABF2FF5C();
          _swift_stdlib_strtod_clocale();
          break;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v7 & 0x1000000000000000) != 0)
      {
        v10 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v11 = v7 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v10 = sub_1ABF31EE8();
        v11 = v12;
      }
      sub_1ABF2FF5C();
      sub_1ABEB1A50(v10, v11, (void (*)(uint64_t *__return_ptr))sub_1ABECC38C);
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

void sub_1ABECBB8C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  id v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[88];
  uint64_t v77;

  v68 = a3;
  v70 = a2;
  v4 = sub_1ABF30760();
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34DA40, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v66 = (void **)((char *)&v59 - v8);
  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], v6);
  MEMORY[0x1E0C80A78](v9);
  v69 = (char *)&v59 - v10;
  v11 = sub_1ABF3094C();
  v12 = *(_QWORD *)(v11 - 8);
  v71 = v11;
  v72 = v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v64 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v65 = (char *)&v59 - v15;
  sub_1ABCF5A54(0, &qword_1ED34DEB0, (uint64_t (*)(uint64_t))sub_1ABCFC730, v6);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v59 - v17;
  sub_1ABCFC730();
  v74 = *(_QWORD *)(v19 - 8);
  v75 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v63 = (uint64_t)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v73 = (uint64_t)&v59 - v22;
  v23 = *(_QWORD *)(a1 + 24);
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24)
    goto LABEL_14;
  v25 = *(_QWORD *)a1;
  v62 = *(_QWORD *)(a1 + 8);
  v26 = (uint64_t *)(v23 + 56);
  v61 = *(unsigned __int8 *)(a1 + 16);
  while (1)
  {
    v27 = *(v26 - 1);
    v28 = *v26;
    v29 = *(v26 - 3) == 0x72656B636974 && *(v26 - 2) == 0xE600000000000000;
    if (v29 || (sub_1ABF3223C() & 1) != 0)
      break;
    v26 += 4;
    if (!--v24)
      goto LABEL_14;
  }
  if (!v28)
  {
LABEL_14:
    sub_1ABF31BE8();
    sub_1ABD19560();
    v44 = (void *)sub_1ABF31D44();
    sub_1ABF31318();
LABEL_15:

    return;
  }
  v30 = v25;
  v31 = *(_QWORD *)(v25 + 16);
  sub_1ABF2FF5C();
  if (!v31)
  {
    sub_1ABF31BE8();
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v45 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v45 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v45 + 32) = v27;
    *(_QWORD *)(v45 + 40) = v28;
    sub_1ABD19560();
    v44 = (void *)sub_1ABF31D44();
    sub_1ABF31318();
    goto LABEL_17;
  }
  sub_1ABECB3CC(v25, (uint64_t)v76);
  v32 = (void *)sub_1ABF31780();
  v33 = objc_msgSend((id)objc_opt_self(), sel_dateFormatterWithFormat_forReuse_, v32, 1);

  sub_1ABF2FF5C();
  v34 = v33;
  v35 = v33;
  v59 = v33;
  v36 = v34;
  sub_1ABF2FF5C();
  v37 = v62;
  v38 = sub_1ABF2FF5C();
  v39 = v35;
  v40 = v61;
  v41 = v77;
  v42 = sub_1ABECB11C(v38, v39, v30, v37, v61, v23, (uint64_t)v76);
  v77 = v41;
  swift_bridgeObjectRelease();
  v60 = v36;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABEC9F68(v42, v40, v23, v59, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v18, 1, v75) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1ABD184CC((uint64_t)v18, &qword_1ED34DEB0, (uint64_t (*)(uint64_t))sub_1ABCFC730);
    sub_1ABF31BE8();
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v43 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v43 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v43 + 32) = v27;
    *(_QWORD *)(v43 + 40) = v28;
    sub_1ABD19560();
    v44 = (void *)sub_1ABF31D44();
    sub_1ABF31318();

LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v75 = v42;
  sub_1ABCFE2AC((uint64_t)v18, v73, (uint64_t (*)(_QWORD))sub_1ABCFC730);
  v74 = sub_1ABECB91C(v70, v23);
  v47 = v46;
  v48 = v69;
  sub_1ABECA938(v23, v69);
  v50 = v71;
  v49 = v72;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v48, 1, v71) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABD184CC((uint64_t)v48, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470]);
    sub_1ABF31BE8();
    sub_1ABD19560();
    v51 = (void *)sub_1ABF31D44();
    sub_1ABF31318();

    sub_1ABECC2F4(v73);
  }
  else
  {
    v70 = v47 & 1;
    v52 = v65;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v65, v48, v50);
    v53 = v73;
    v54 = v63;
    sub_1ABECC330(v73, v63);
    v55 = (uint64_t)v64;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v64, v52, v50);
    v56 = (uint64_t)v67;
    sub_1ABF30754();
    v57 = v66;
    sub_1ABD00568(v75, v54, v74, v70, v55, v56, v66);
    v58 = type metadata accessor for Chart(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 0, 1, v58);
    sub_1ABE3371C((uint64_t)v57, v27, v28);

    (*(void (**)(char *, uint64_t))(v72 + 8))(v52, v50);
    sub_1ABECC2F4(v53);
  }
}

uint64_t sub_1ABECC2F4(uint64_t a1)
{
  uint64_t v2;

  sub_1ABCFC730();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABECC330(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCFC730();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_BYTE *sub_1ABECC374@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1ABEB19E8(a1, a2);
}

_QWORD *sub_1ABECC38C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1ABEB1AA4(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

_QWORD *sub_1ABECC3A4@<X0>(_BYTE *a1@<X8>)
{
  return sub_1ABECC38C(a1);
}

_BYTE *sub_1ABECC3B8@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1ABECC374(a1, a2);
}

_QWORD *sub_1ABECC3CC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v9 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1ABECC4E0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);
  v9 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v10 = &v7[v9];
  v11 = &v8[v9];
  v12 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_1ABECC588(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_bridgeObjectRelease();
  v10 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v11 = &v8[v10];
  v12 = &v9[v10];
  v13 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABECC664()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABECC670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ForYouConfigRecord.Configuration(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1ABECC6EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABECC6F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ForYouConfigRecord.Configuration(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t *sub_1ABECC76C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1ABF30760();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    sub_1ABF2FF5C();
    v11(v8, v9, v10);
  }
  return a1;
}

_QWORD *sub_1ABECC810(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1ABECC888(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1ABECC8F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1ABECC960()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABECC96C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1ABECC9A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABECC9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t *sub_1ABECC9F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    sub_1ABF2FF68();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1ABF30760();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    sub_1ABF2FF5C();
    v10(v7, v8, v9);
  }
  return v5;
}

_QWORD *sub_1ABECCA8C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_1ABECCB00(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1ABECCB5C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1ABECCBC8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1ABF30760();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

char *sub_1ABECCC44(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1ABF30760();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1ABECCCB8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABECCCF4 + 4 * byte_1ABF4C680[a1]))(0x4E64726F6365725FLL, 0xEB00000000656D61);
}

uint64_t sub_1ABECCCF4()
{
  return 0x72756769666E6F63;
}

unint64_t sub_1ABECCD18()
{
  return 0xD000000000000014;
}

unint64_t sub_1ABECCD34()
{
  return 0xD000000000000016;
}

void sub_1ABECCD70(char *a1)
{
  sub_1ABDE28C0(*a1);
}

void sub_1ABECCD7C()
{
  char *v0;

  sub_1ABF0FA0C(*v0);
}

void sub_1ABECCD84(uint64_t a1)
{
  char *v1;

  sub_1ABD99054(a1, *v1);
}

void sub_1ABECCD8C(uint64_t a1)
{
  char *v1;

  sub_1ABF10634(a1, *v1);
}

uint64_t sub_1ABECCD94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABECE44C();
  *a1 = result;
  return result;
}

uint64_t sub_1ABECCDC0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABECCCB8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABECCDE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABECE44C();
  *a1 = result;
  return result;
}

uint64_t sub_1ABECCE0C()
{
  sub_1ABD40238();
  return sub_1ABF3238C();
}

uint64_t sub_1ABECCE34()
{
  sub_1ABD40238();
  return sub_1ABF32398();
}

uint64_t sub_1ABECCE5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;

  v2 = v1;
  v4 = sub_1ABF317D4();
  MEMORY[0x1E0C80A78](v4);
  v24[1] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF301F0();
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1EEC44BB0, (uint64_t (*)(void))sub_1ABD40238, (uint64_t)&type metadata for ForYouConfigRecord.CodingKeys, MEMORY[0x1E0DED170]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v24 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD40238();
  sub_1ABF32368();
  LOBYTE(v29) = 0;
  v14 = v27;
  sub_1ABF32194();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v27 = v8;
  v16 = v11;
  v17 = type metadata accessor for ForYouConfigRecord(0);
  v29 = *(_QWORD *)(v2 + *(int *)(v17 + 24));
  v28 = 2;
  sub_1ABD165AC();
  sub_1ABD10510((unint64_t *)&qword_1ED34FCB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  LOBYTE(v29) = 3;
  sub_1ABF32194();
  v29 = *(_QWORD *)*(int *)(v17 + 32);
  v28 = 4;
  sub_1ABF321D0();
  v24[0] = v10;
  sub_1ABF30220();
  swift_allocObject();
  v18 = sub_1ABF30214();
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x1E0CAE150], v26);
  sub_1ABF301FC();
  type metadata accessor for ForYouConfigRecord.Configuration(0);
  sub_1ABCFE1EC(&qword_1EEC44BB8, type metadata accessor for ForYouConfigRecord.Configuration, (uint64_t)&unk_1ABF4C75C);
  v19 = sub_1ABF30208();
  v21 = v20;
  v27 = (char *)v18;
  sub_1ABF317C8();
  result = sub_1ABF317BC();
  if (v22)
  {
    LOBYTE(v29) = 1;
    v23 = v24[0];
    sub_1ABF32194();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v23);
    sub_1ABD0F430(v19, v21);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABECD20C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABECD260()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABECD27C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABECD2CC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ABECD31C(_QWORD *a1@<X8>)
{
  *a1 = 0x69726F7453706F74;
  a1[1] = 0xEA00000000007365;
}

uint64_t sub_1ABECD33C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ABECD390()
{
  sub_1ABD40164();
  return sub_1ABF3238C();
}

uint64_t sub_1ABECD3B8()
{
  sub_1ABD40164();
  return sub_1ABF32398();
}

uint64_t sub_1ABECD3E0(char *a1, char *a2)
{
  return sub_1ABDE2810(*a1, *a2);
}

uint64_t sub_1ABECD3EC()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABECD478()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABECD4E0()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABECD568@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1ABECD5C4(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x446873696C627570;
  if (*v1)
    v2 = 0xD000000000000011;
  v3 = 0x80000001ABF54CD0;
  if (!*v1)
    v3 = 0xEB00000000657461;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABECD610@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1ABECD670()
{
  sub_1ABD3FFE8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABECD698()
{
  sub_1ABD3FFE8();
  return sub_1ABF32398();
}

uint64_t sub_1ABECD6C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;

  sub_1ABCF4DA8(0, &qword_1EEC44C00, (uint64_t (*)(void))sub_1ABD20C18, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD20C18();
  sub_1ABF32368();
  type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article(0);
  v12 = 0;
  sub_1ABF30760();
  sub_1ABCFE1EC(&qword_1ED34EAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1ABF3217C();
  if (!v1)
  {
    v11 = 1;
    sub_1ABF32140();
    v10 = 2;
    sub_1ABF32194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABECD864(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1EEC44BD0, (uint64_t (*)(void))sub_1ABD3FFE8, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.TopStories.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD3FFE8();
  sub_1ABF32368();
  type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  v13 = 0;
  sub_1ABF30760();
  sub_1ABCFE1EC(&qword_1ED34EAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1ABF321D0();
  if (!v2)
  {
    v11[1] = *v3;
    v12 = 1;
    sub_1ABCF5A54(0, &qword_1ED346F28, type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD33F50(&qword_1EEC44BD8, &qword_1EEC44BE0, (uint64_t)&unk_1ABF4CAF8, MEMORY[0x1E0DEAF10]);
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ABECDA30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE2700(*a1, *a2);
}

uint64_t sub_1ABECDA3C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABECDADC()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABECDB58()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABECDBF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABECE4EC();
  *a1 = result;
  return result;
}

void sub_1ABECDC20(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB00000000657461;
  v4 = 0xE900000000000065;
  v5 = 0x70795479726F7473;
  if (v2 != 1)
  {
    v5 = 25705;
    v4 = 0xE200000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x4479616C70736964;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ABECDC80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABECE4EC();
  *a1 = result;
  return result;
}

uint64_t sub_1ABECDCA4()
{
  sub_1ABD20C18();
  return sub_1ABF3238C();
}

uint64_t sub_1ABECDCCC()
{
  sub_1ABD20C18();
  return sub_1ABF32398();
}

uint64_t sub_1ABECDCF4(_QWORD *a1)
{
  return sub_1ABECD6C0(a1);
}

uint64_t sub_1ABECDD08(_QWORD *a1)
{
  return sub_1ABECD864(a1);
}

uint64_t sub_1ABECDD1C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1ABCF4DA8(0, &qword_1EEC44BC0, (uint64_t (*)(void))sub_1ABD40164, (uint64_t)&type metadata for ForYouConfigRecord.Configuration.CodingKeys, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD40164();
  sub_1ABF32368();
  type metadata accessor for ForYouConfigRecord.Configuration.TopStories(0);
  sub_1ABCFE1EC(&qword_1EEC44BC8, type metadata accessor for ForYouConfigRecord.Configuration.TopStories, (uint64_t)&unk_1ABF4C70C);
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1ABECDE4C(_QWORD *a1)
{
  return sub_1ABECCE5C(a1);
}

ValueMetadata *type metadata accessor for ForYouConfigRecord.Configuration.TopStories.CodingKeys()
{
  return &type metadata for ForYouConfigRecord.Configuration.TopStories.CodingKeys;
}

ValueMetadata *type metadata accessor for ForYouConfigRecord.Configuration.CodingKeys()
{
  return &type metadata for ForYouConfigRecord.Configuration.CodingKeys;
}

ValueMetadata *type metadata accessor for ForYouConfigRecord.CodingKeys()
{
  return &type metadata for ForYouConfigRecord.CodingKeys;
}

_QWORD *sub_1ABECDE90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF30760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1ABECE000(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF30760();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_1ABECE0EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1ABF30760();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABECE23C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABECE248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1ABECE2DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABECE2E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

unint64_t sub_1ABECE378()
{
  unint64_t result;

  result = qword_1EEC44BE8;
  if (!qword_1EEC44BE8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C8F0, &type metadata for ForYouConfigRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44BE8);
  }
  return result;
}

unint64_t sub_1ABECE3C0()
{
  unint64_t result;

  result = qword_1EEC44BF0;
  if (!qword_1EEC44BF0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C9E0, &type metadata for ForYouConfigRecord.Configuration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44BF0);
  }
  return result;
}

unint64_t sub_1ABECE408()
{
  unint64_t result;

  result = qword_1EEC44BF8;
  if (!qword_1EEC44BF8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CAD0, &type metadata for ForYouConfigRecord.Configuration.TopStories.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44BF8);
  }
  return result;
}

uint64_t sub_1ABECE44C()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

ValueMetadata *type metadata accessor for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys()
{
  return &type metadata for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys;
}

unint64_t sub_1ABECE4A8()
{
  unint64_t result;

  result = qword_1EEC44C08;
  if (!qword_1EEC44C08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CD00, &type metadata for ForYouConfigRecord.Configuration.TopStories.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44C08);
  }
  return result;
}

uint64_t sub_1ABECE4EC()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1ABECE534@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[1128];

  sub_1ABECE570(v1, (uint64_t)v4);
  return sub_1ABECE570((uint64_t)v4, a1);
}

uint64_t sub_1ABECE570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABECE5B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABECE5B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34ED50)
  {
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34ED50);
  }
}

uint64_t sub_1ABECE608()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABECE65C()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABECE678()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABECE6C8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ABECE718(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x80000001ABF54D00;
}

unint64_t sub_1ABECE738()
{
  return 0xD000000000000014;
}

uint64_t sub_1ABECE754@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ABECE7A8()
{
  sub_1ABCF8294();
  return sub_1ABF3238C();
}

uint64_t sub_1ABECE7D0()
{
  sub_1ABCF8294();
  return sub_1ABF32398();
}

uint64_t sub_1ABECE7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[1120];

  sub_1ABECE570(a1, (uint64_t)v4);
  return sub_1ABECE570((uint64_t)v4, a2);
}

uint64_t sub_1ABECE830@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  _BYTE v12[1120];
  _BYTE v13[1120];
  uint64_t v14;
  void *v15;

  v15 = a2;
  sub_1ABCF8238(0, &qword_1ED34FEC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v12[-v7 - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF8294();
  sub_1ABF3235C();
  if (!v2)
  {
    v9 = v15;
    sub_1ABECE994();
    sub_1ABF320C8();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    sub_1ABECE570((uint64_t)&v14, (uint64_t)v12);
    sub_1ABECE570((uint64_t)v12, (uint64_t)v13);
    memcpy(v9, v13, 0x45BuLL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1ABECE994()
{
  unint64_t result;

  result = qword_1ED34ED48;
  if (!qword_1ED34ED48)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for ScoringConfig, &type metadata for ScoringConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34ED48);
  }
  return result;
}

uint64_t sub_1ABECE9DC(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[1114];
  _BYTE __src[1120];
  _BYTE v5[1120];
  _BYTE v6[1120];

  MEMORY[0x1E0C80A78](a1);
  sub_1ABECE570(v1, (uint64_t)v5);
  sub_1ABECE570((uint64_t)v5, (uint64_t)v6);
  if (sub_1ABECED88((uint64_t)v6) == 1)
    return sub_1ABF32320();
  sub_1ABECE570((uint64_t)v5, (uint64_t)__src);
  memcpy(v3, __src, sizeof(v3));
  sub_1ABF32320();
  return ScoringConfig.hash(into:)();
}

uint64_t sub_1ABECEA8C(uint64_t a1)
{
  uint64_t v1;
  _BYTE __dst[1114];
  _BYTE __src[1120];
  _BYTE v5[1120];
  _BYTE v6[1120];

  MEMORY[0x1E0C80A78](a1);
  sub_1ABECE570(v1, (uint64_t)v5);
  sub_1ABF32308();
  sub_1ABECE570((uint64_t)v5, (uint64_t)v6);
  if (sub_1ABECED88((uint64_t)v6) == 1)
  {
    sub_1ABF32320();
  }
  else
  {
    sub_1ABECE570((uint64_t)v5, (uint64_t)__src);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1ABF32320();
    ScoringConfig.hash(into:)();
  }
  return sub_1ABF32338();
}

uint64_t sub_1ABECEB44@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1ABECE830(a1, a2);
}

uint64_t sub_1ABECEB5C(uint64_t a1)
{
  uint64_t v1;
  _BYTE __dst[1114];
  _BYTE __src[1120];
  _BYTE v5[1120];
  _BYTE v6[1120];

  MEMORY[0x1E0C80A78](a1);
  sub_1ABECE570(v1, (uint64_t)v5);
  sub_1ABF32308();
  sub_1ABECE570((uint64_t)v5, (uint64_t)v6);
  if (sub_1ABECED88((uint64_t)v6) == 1)
  {
    sub_1ABF32320();
  }
  else
  {
    sub_1ABECE570((uint64_t)v5, (uint64_t)__src);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1ABF32320();
    ScoringConfig.hash(into:)();
  }
  return sub_1ABF32338();
}

uint64_t sub_1ABECEC14(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[1114];
  _BYTE __src[1120];
  _BYTE v5[1120];
  _BYTE v6[1120];

  MEMORY[0x1E0C80A78](a1);
  sub_1ABECE570(v1, (uint64_t)v5);
  sub_1ABECE570((uint64_t)v5, (uint64_t)v6);
  if (sub_1ABECED88((uint64_t)v6) == 1)
    return sub_1ABF32320();
  sub_1ABECE570((uint64_t)v5, (uint64_t)__src);
  memcpy(v3, __src, sizeof(v3));
  sub_1ABF32320();
  return ScoringConfig.hash(into:)();
}

uint64_t sub_1ABECECC4(uint64_t a1)
{
  uint64_t v1;
  _BYTE __dst[1114];
  _BYTE __src[1120];
  _BYTE v5[1120];
  _BYTE v6[1120];

  MEMORY[0x1E0C80A78](a1);
  sub_1ABECE570(v1, (uint64_t)v5);
  sub_1ABF32308();
  sub_1ABECE570((uint64_t)v5, (uint64_t)v6);
  if (sub_1ABECED88((uint64_t)v6) == 1)
  {
    sub_1ABF32320();
  }
  else
  {
    sub_1ABECE570((uint64_t)v5, (uint64_t)__src);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1ABF32320();
    ScoringConfig.hash(into:)();
  }
  return sub_1ABF32338();
}

uint64_t sub_1ABECED88(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 1114))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

unint64_t sub_1ABECEDA8()
{
  unint64_t result;

  result = qword_1EEC44C10;
  if (!qword_1EEC44C10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CDDC, &type metadata for NewsPersonalizationTreatment);
    atomic_store(result, (unint64_t *)&qword_1EEC44C10);
  }
  return result;
}

void *__swift_memcpy1115_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x45BuLL);
}

uint64_t getEnumTagSinglePayload for NewsPersonalizationTreatment(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 1115))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NewsPersonalizationTreatment(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 1114) = 0;
    *(_WORD *)(result + 1112) = 0;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 1115) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NewsPersonalizationTreatment()
{
  return &type metadata for NewsPersonalizationTreatment;
}

uint64_t storeEnumTagSinglePayload for NewsPersonalizationTreatment.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABECEFBC + 4 * byte_1ABF4CD80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABECEFDC + 4 * byte_1ABF4CD85[v4]))();
}

_BYTE *sub_1ABECEFBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABECEFDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABECEFE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABECEFEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABECEFF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABECEFFC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NewsPersonalizationTreatment.CodingKeys()
{
  return &type metadata for NewsPersonalizationTreatment.CodingKeys;
}

unint64_t sub_1ABECF01C()
{
  unint64_t result;

  result = qword_1EEC44C18;
  if (!qword_1EEC44C18)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CF40, &type metadata for NewsPersonalizationTreatment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44C18);
  }
  return result;
}

id sub_1ABECF060()
{
  if (qword_1ED350AA0 != -1)
    swift_once();
  qword_1ED34E030 = *(_QWORD *)(qword_1ED350A90 + OBJC_IVAR____TtC10StocksCore8AppGroup_userDefaults);
  return (id)qword_1ED34E030;
}

id sub_1ABECF0B8()
{
  return sub_1ABECF178(&qword_1ED34E040, (id *)&qword_1ED34E030);
}

void sub_1ABECF0D4(void *a1)
{
  sub_1ABECF1E8(a1, &qword_1ED34E040, (void **)&qword_1ED34E030);
}

uint64_t (*sub_1ABECF0F0())()
{
  if (qword_1ED34E040 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1ABECF15C()
{
  return sub_1ABECF178(&qword_1ED34E968, (id *)&qword_1ED34E958);
}

id sub_1ABECF178(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return *a2;
}

void sub_1ABECF1CC(void *a1)
{
  sub_1ABECF1E8(a1, &qword_1ED34E968, (void **)&qword_1ED34E958);
}

void sub_1ABECF1E8(void *a1, _QWORD *a2, void **a3)
{
  void *v5;

  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  v5 = *a3;
  *a3 = a1;

}

uint64_t (*sub_1ABECF24C())()
{
  if (qword_1ED34E968 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1ABECF2B8()
{
  return sub_1ABECF178(&qword_1ED34E050, (id *)&qword_1ED34E048);
}

void sub_1ABECF2D4(void *a1)
{
  sub_1ABECF1E8(a1, &qword_1ED34E050, (void **)&qword_1ED34E048);
}

uint64_t (*sub_1ABECF2F0())()
{
  if (qword_1ED34E050 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1ABECF35C(uint64_t a1)
{
  sub_1ABD33658(a1, 0xD00000000000001ALL, 0x80000001ABF62620, &qword_1ED368420);
}

uint64_t assignWithCopy for StockRecord(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StockRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StockRecord()
{
  return &type metadata for StockRecord;
}

uint64_t sub_1ABECF510(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABECF540 + 4 * byte_1ABF4CFC0[a1]))(0x6C6F626D7973, 0xE600000000000000);
}

unint64_t sub_1ABECF540()
{
  return 0xD000000000000011;
}

uint64_t sub_1ABECF55C()
{
  return 0x4E79616C70736964;
}

uint64_t sub_1ABECF57C()
{
  return 0x5379616C70736964;
}

uint64_t sub_1ABECF5A0()
{
  return 0x746E456B636F7473;
}

uint64_t sub_1ABECF5C4()
{
  return 0x6365727065447369;
}

uint64_t sub_1ABECF5E4()
{
  return 0x6D6563616C706572;
}

void sub_1ABECF608(char *a1)
{
  sub_1ABDE3FE0(*a1);
}

void sub_1ABECF614()
{
  char *v0;

  sub_1ABF0FEB4(0, *v0);
}

void sub_1ABECF620(uint64_t a1)
{
  char *v1;

  sub_1ABD9952C(a1, *v1);
}

void sub_1ABECF628(uint64_t a1)
{
  char *v1;

  sub_1ABF0FEB4(a1, *v1);
}

uint64_t sub_1ABECF630@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABECFC98();
  *a1 = result;
  return result;
}

uint64_t sub_1ABECF65C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABECF510(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABECF684@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABECFC98();
  *a1 = result;
  return result;
}

uint64_t sub_1ABECF6A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[16];
  _BYTE v22[16];
  _BYTE v23[16];
  _BYTE v24[16];
  char v25;

  v2 = v1;
  v4 = sub_1ABF317D4();
  MEMORY[0x1E0C80A78](v4);
  sub_1ABCF4DA8(0, &qword_1EEC44C20, (uint64_t (*)(void))sub_1ABD0D824, (uint64_t)&type metadata for StockRecord.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD0D824();
  sub_1ABF32368();
  LOBYTE(v19) = 0;
  v10 = v18;
  sub_1ABF32194();
  if (v10)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = v7;
  sub_1ABE788B0(v2 + 32, (uint64_t)v24);
  sub_1ABE788B0((uint64_t)v24, (uint64_t)&v19);
  v25 = 2;
  sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FB80, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEB940]);
  sub_1ABECFCE0();
  sub_1ABF321D0();
  v12 = v6;
  sub_1ABE788B0(v2 + 48, (uint64_t)v23);
  sub_1ABE788B0((uint64_t)v23, (uint64_t)&v19);
  v25 = 3;
  sub_1ABF321D0();
  sub_1ABE788B0(v2 + 64, (uint64_t)v22);
  sub_1ABE788B0((uint64_t)v22, (uint64_t)&v19);
  v25 = 4;
  sub_1ABF321D0();
  LOBYTE(v19) = 5;
  sub_1ABF321A0();
  sub_1ABE788B0(88, (uint64_t)v21);
  sub_1ABE788B0((uint64_t)v21, (uint64_t)&v19);
  v25 = 6;
  sub_1ABF321D0();
  sub_1ABF30220();
  swift_allocObject();
  sub_1ABF30214();
  v19 = *(_OWORD *)(v2 + 16);
  v20 = v19;
  sub_1ABECFD48();
  sub_1ABF2FF5C();
  v13 = sub_1ABF30208();
  v15 = v14;
  sub_1ABDE55E4((uint64_t)&v20);
  swift_release();
  sub_1ABF317C8();
  result = sub_1ABF317BC();
  if (v16)
  {
    LOBYTE(v19) = 1;
    sub_1ABF32194();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v12);
    sub_1ABD0F430(v13, v15);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABECFA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x444964656566 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABECFAFC()
{
  sub_1ABD0D148();
  return sub_1ABF3238C();
}

uint64_t sub_1ABECFB24()
{
  sub_1ABD0D148();
  return sub_1ABF32398();
}

uint64_t sub_1ABECFB4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1ABCF4DA8(0, &qword_1EEC44C38, (uint64_t (*)(void))sub_1ABD0D148, (uint64_t)&type metadata for StockRecord.FeedConfiguration.CodingKeys, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD0D148();
  sub_1ABF32368();
  sub_1ABF32194();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1ABECFC50(_QWORD *a1)
{
  return sub_1ABECF6A8(a1);
}

uint64_t sub_1ABECFC98()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

unint64_t sub_1ABECFCE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EEC43878;
  if (!qword_1EEC43878)
  {
    sub_1ABD1248C(255, (unint64_t *)&qword_1ED34FB80, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEB940]);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEC43878);
  }
  return result;
}

unint64_t sub_1ABECFD48()
{
  unint64_t result;

  result = qword_1EEC44C28;
  if (!qword_1EEC44C28)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D164, &type metadata for StockRecord.FeedConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EEC44C28);
  }
  return result;
}

ValueMetadata *type metadata accessor for StockRecord.CodingKeys()
{
  return &type metadata for StockRecord.CodingKeys;
}

ValueMetadata *type metadata accessor for StockRecord.FeedConfiguration()
{
  return &type metadata for StockRecord.FeedConfiguration;
}

unint64_t sub_1ABECFDB0()
{
  unint64_t result;

  result = qword_1EEC44C30;
  if (!qword_1EEC44C30)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D13C, &type metadata for StockRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44C30);
  }
  return result;
}

ValueMetadata *type metadata accessor for StockRecord.FeedConfiguration.CodingKeys()
{
  return &type metadata for StockRecord.FeedConfiguration.CodingKeys;
}

unint64_t sub_1ABECFE08()
{
  unint64_t result;

  result = qword_1EEC44C40;
  if (!qword_1EEC44C40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4D294, &type metadata for StockRecord.FeedConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44C40);
  }
  return result;
}

uint64_t type metadata accessor for SDSSearchOperation()
{
  uint64_t result;

  result = qword_1EEC44C60;
  if (!qword_1EEC44C60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABECFE88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30B38();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1ABECFF10(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

void sub_1ABECFF48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t inited;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE v16[64];

  v5 = sub_1ABF30760();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + qword_1EEC44C50), *(_QWORD *)(v2 + qword_1EEC44C50 + 24));
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(inited + 32) = 0x7972657571;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v10 = *(_QWORD *)(v2 + qword_1EEC44C48 + 8);
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v2 + qword_1EEC44C48);
  *(_QWORD *)(inited + 56) = v10;
  sub_1ABF2FF5C();
  sub_1ABD031C0(inited);
  sub_1ABF30754();
  v11 = (_QWORD *)sub_1ABE77D90(3);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)((char *)v11 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v11) + 16));
  v13 = *v12;
  *v12 = (uint64_t)sub_1ABED012C;
  v12[1] = 0;
  sub_1ABD12EC4(v13);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = v11;
  sub_1ABF2FF68();
  sub_1ABF30BF8();

  objc_msgSend(v15, sel_start);
}

uint64_t sub_1ABED012C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[4];

  v3[2] = a1;
  return sub_1ABF12034((void (*)(uint64_t))sub_1ABED0964, (uint64_t)v3, a2);
}

uint64_t sub_1ABED016C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v22[2];

  sub_1ABED07DC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, &qword_1EEC44C78, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (id *)((char *)v22 - v11);
  sub_1ABED0834(a2, (uint64_t)v22 - v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    sub_1ABD66FD0();
    v14 = *(_DWORD *)(v13 + 48);
    v15 = sub_1ABF30F34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a3, a1, v15);
    v16 = 0;
  }
  else
  {
    sub_1ABED0890((uint64_t)v12, (uint64_t)v8);
    sub_1ABD66FD0();
    v14 = *(_DWORD *)(v17 + 48);
    v18 = sub_1ABF30F34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a3, a1, v18);
    sub_1ABED08D4();
    sub_1ABF30F64();
    v16 = *(_QWORD *)(v22[1] + 16);
    swift_bridgeObjectRelease();
    sub_1ABED0928((uint64_t)v8);
  }
  v19 = (_QWORD *)(a3 + v14);
  *v19 = 1;
  v19[1] = v16;
  v20 = MEMORY[0x1E0DEE9D8];
  v19[2] = MEMORY[0x1E0DEE9D8];
  v19[3] = v20;
  type metadata accessor for NetworkEvent();
  v19[4] = 0;
  v19[5] = 0;
  return swift_storeEnumTagMultiPayload();
}

void sub_1ABED0324(uint64_t a1, void (*a2)(id, uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  id *v12;
  id v13;
  id v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(id, uint64_t);
  uint64_t i;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  char v46;
  _OWORD v47[8];
  unint64_t v48;
  unint64_t *v49;

  sub_1ABED07DC(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, &qword_1EEC44C78, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (id *)((char *)&v38 - v11);
  sub_1ABED0834(a1, (uint64_t)&v38 - v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = *v12;
    v14 = *v12;
    a2(v13, 1);

  }
  else
  {
    sub_1ABED0890((uint64_t)v12, (uint64_t)v8);
    sub_1ABED08D4();
    sub_1ABF30F64();
    v15 = *(_QWORD *)&v47[0];
    v16 = *(_QWORD *)(*(_QWORD *)&v47[0] + 16);
    if (v16)
    {
      v39 = v8;
      v40 = a3;
      v41 = a2;
      v49 = (unint64_t *)MEMORY[0x1E0DEE9D8];
      sub_1ABD080B8(0, v16, 0);
      v17 = 0;
      v18 = v49;
      v44 = v16 - 1;
      for (i = v15; ; v15 = i)
      {
        v43 = v17;
        v19 = v15 + v17;
        v20 = *(_QWORD *)(v19 + 40);
        v45 = *(_QWORD *)(v19 + 32);
        v21 = *(_QWORD *)(v19 + 48);
        v22 = *(_QWORD *)(v19 + 56);
        v24 = *(_QWORD *)(v19 + 64);
        v23 = *(_QWORD *)(v19 + 72);
        v25 = *(_QWORD *)(v19 + 80);
        v26 = *(_QWORD *)(v19 + 88);
        v27 = *(_QWORD *)(v19 + 96);
        v28 = *(_QWORD *)(v19 + 104);
        v46 = *(_BYTE *)(v19 + 112);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABD15B80(v24, v23, v21, v22, v45, v20, &v46, v27, (uint64_t)v47, v28, v25, v26, 0, 0, 0, 0);
        v49 = v18;
        v30 = v18[2];
        v29 = v18[3];
        if (v30 >= v29 >> 1)
        {
          sub_1ABD080B8(v29 > 1, v30 + 1, 1);
          v18 = v49;
        }
        v18[2] = v30 + 1;
        v31 = &v18[17 * v30];
        *((_OWORD *)v31 + 2) = v47[0];
        v32 = v47[1];
        v33 = v47[2];
        v34 = v47[4];
        *((_OWORD *)v31 + 5) = v47[3];
        *((_OWORD *)v31 + 6) = v34;
        *((_OWORD *)v31 + 3) = v32;
        *((_OWORD *)v31 + 4) = v33;
        v35 = v47[5];
        v36 = v47[6];
        v37 = v47[7];
        v31[20] = v48;
        *((_OWORD *)v31 + 8) = v36;
        *((_OWORD *)v31 + 9) = v37;
        *((_OWORD *)v31 + 7) = v35;
        if (!v44)
          break;
        --v44;
        v17 = v43 + 88;
      }
      swift_bridgeObjectRelease();
      v8 = v39;
      v41(v18, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      a2((id)MEMORY[0x1E0DEE9D8], 0);
    }
    swift_bridgeObjectRelease();
    sub_1ABED0928((uint64_t)v8);
  }
}

void sub_1ABED0658()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABED0684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EEC44C50);
  v1 = v0 + qword_1EEC44C58;
  v2 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_1ABED06E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EEC44C50);
  v2 = a1 + qword_1EEC44C58;
  v3 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_1ABED0748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABECFF48((uint64_t)sub_1ABD6B260, v4);
  return swift_release();
}

uint64_t sub_1ABED07A8()
{
  return type metadata accessor for SDSSearchOperation();
}

uint64_t sub_1ABED07B0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ABED07D4(uint64_t a1)
{
  uint64_t v1;

  sub_1ABED0324(a1, *(void (**)(id, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1ABED07DC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EEC44C70)
  {
    v2 = sub_1ABE78BB4();
    v4 = type metadata accessor for SDSBaseOperationResponse(a1, (uint64_t)&type metadata for SDSSearchResponse, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EEC44C70);
  }
}

uint64_t sub_1ABED0834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5A54(0, &qword_1EEC44C78, (uint64_t (*)(uint64_t))sub_1ABED07DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABED0890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABED07DC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABED08D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC44C80)
  {
    v0 = sub_1ABF30F7C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC44C80);
  }
}

uint64_t sub_1ABED0928(uint64_t a1)
{
  uint64_t v2;

  sub_1ABED07DC(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABED0964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1ABED016C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t SymbolQuery.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  SymbolQuery.init()();
  return v0;
}

uint64_t sub_1ABED09B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC44C88);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC44C88);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABED0B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC44CA0);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC44CA0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

_QWORD *SymbolQuery.init()()
{
  _QWORD *v0;

  sub_1ABDAE5B8(0, &qword_1ED346610, (unint64_t *)&unk_1ED3506E8);
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  v0[2] = sub_1ABF2FC14();
  sub_1ABDAE5B8(0, &qword_1ED346618, &qword_1ED3508C8);
  sub_1ABF2FC38();
  v0[3] = sub_1ABF2FC14();
  sub_1ABDAE5B8(0, (unint64_t *)&qword_1ED34C7B8, (unint64_t *)&qword_1ED350780);
  sub_1ABF2FC38();
  v0[4] = sub_1ABF2FC14();
  return v0;
}

uint64_t SymbolQuery.entities(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_1ABF30B38();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v4 = sub_1ABF30760();
  v2[20] = v4;
  v2[21] = *(_QWORD *)(v4 - 8);
  v2[22] = swift_task_alloc();
  v5 = sub_1ABF30C28();
  v2[23] = v5;
  v2[24] = *(_QWORD *)(v5 - 8);
  v2[25] = swift_task_alloc();
  v6 = sub_1ABF30B14();
  v2[26] = v6;
  v2[27] = *(_QWORD *)(v6 - 8);
  v2[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABED0E94()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[29] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[15];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v27 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[13] = v5;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v8 = sub_1ABF316E4();
    v0[14] = sub_1ABD1FE2C(v8, v9, &v27);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching stocks for symbol query with identifiers=[%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v7, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v10 = v0[27];
  v11 = v0[28];
  v12 = v0[25];
  v13 = v0[22];
  v26 = v0[23];
  v23 = v0[21];
  v14 = v0[19];
  v24 = v0[20];
  v25 = v0[24];
  v19 = v0[26];
  v20 = v0[18];
  v21 = v0[17];
  v22 = v0[15];
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v15 = v0[5];
  v16 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v11, *MEMORY[0x1E0DB32A8], v19);
  sub_1ABF30C1C();
  sub_1ABF30754();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v14, *MEMORY[0x1E0DB3560], v21);
  v0[30] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v22, v11, v12, v13, v14, v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v14, v21);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v24);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v12, v26);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v19);
  v17 = (_QWORD *)swift_task_alloc();
  v0[31] = v17;
  *v17 = v0;
  v17[1] = sub_1ABED11F8;
  return sub_1ABF31150();
}

uint64_t sub_1ABED11F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABED1270()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  os_log_type_t type;
  uint64_t v17;
  uint64_t v18[2];

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 120);
    v5 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18[0] = v17;
    *(_DWORD *)v5 = 136315394;
    type = v3;
    *(_QWORD *)(v0 + 64) = v4;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v6 = sub_1ABF316E4();
    *(_QWORD *)(v0 + 72) = sub_1ABD1FE2C(v6, v7, v18);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    v8 = sub_1ABF2FF5C();
    v9 = sub_1ABDAB2A0(v8);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = v9;
    v10 = sub_1ABF316E4();
    v12 = v11;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 96) = sub_1ABD1FE2C(v10, v12, v18);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, type, "Fetched stocks for symbol query with identifiers=[%s], stocks=[%s]", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v17, -1, -1);
    MEMORY[0x1AF438FFC](v5, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  v13 = *(_QWORD *)(v0 + 120);
  sub_1ABF2FF5C();
  v14 = sub_1ABED7B5C(v13, v1);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v14);
}

uint64_t SymbolQuery.suggestedEntities()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = v1;
  return swift_task_switch();
}

uint64_t sub_1ABED155C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[12] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching watched stocks for suggested symbol entities.", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v5 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v0[13] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
  v7 = (_QWORD *)swift_task_alloc();
  v0[14] = v7;
  *v7 = v0;
  v7[1] = sub_1ABED16C0;
  return sub_1ABF31150();
}

uint64_t sub_1ABED16C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABED1738()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v6 = v5;
    v26 = v5;
    *(_DWORD *)v4 = 136315138;
    v7 = *(_QWORD *)(v1 + 16);
    v8 = MEMORY[0x1E0DEE9D8];
    if (v7)
    {
      v21 = v5;
      v22 = v3;
      v23 = v4;
      v24 = v2;
      v27 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v7, 0);
      v8 = v27;
      v9 = *(_QWORD *)(v27 + 16);
      v10 = 16 * v9;
      v25 = v1;
      v11 = (uint64_t *)(v1 + 40);
      do
      {
        v12 = *(v11 - 1);
        v13 = *v11;
        v27 = v8;
        v14 = v9 + 1;
        v15 = *(_QWORD *)(v8 + 24);
        sub_1ABF2FF5C();
        if (v9 >= v15 >> 1)
        {
          sub_1ABD16414(v15 > 1, v14, 1);
          v8 = v27;
        }
        *(_QWORD *)(v8 + 16) = v14;
        v16 = v8 + v10;
        *(_QWORD *)(v16 + 32) = v12;
        *(_QWORD *)(v16 + 40) = v13;
        v10 += 16;
        v11 += 17;
        ++v9;
        --v7;
      }
      while (v7);
      v2 = v24;
      v1 = v25;
      v4 = v23;
      v3 = v22;
      v6 = v21;
    }
    *(_QWORD *)(v0 + 64) = v8;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v17 = sub_1ABF316E4();
    v19 = v18;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = sub_1ABD1FE2C(v17, v19, &v26);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetched watched stocks for suggested symbol entities, stocks=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v6, -1, -1);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1ABED1C84(v1, MEMORY[0x1E0DEE9D8], *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABED19D0()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  uint64_t v25;
  _QWORD *v26;

  v1 = *(void **)(v0 + 120);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain_n();
  v3 = sub_1ABF31324();
  v4 = sub_1ABF31BD0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v7 = v6;
    v25 = v6;
    *(_DWORD *)v5 = 136315138;
    v8 = v2[2];
    if (v8)
    {
      v21 = v6;
      v22 = v4;
      v23 = v5;
      v24 = v3;
      v26 = v2;
      sub_1ABD16414(0, v8, 0);
      v9 = v2 + 5;
      v10 = v2[2];
      v11 = 2 * v10;
      do
      {
        v12 = *(v9 - 1);
        v13 = *v9;
        v26 = v2;
        v14 = v10 + 1;
        v15 = v2[3];
        sub_1ABF2FF5C();
        if (v10 >= v15 >> 1)
        {
          sub_1ABD16414(v15 > 1, v14, 1);
          v2 = v26;
        }
        v2[2] = v14;
        v16 = &v2[v11];
        v16[4] = v12;
        v16[5] = v13;
        v11 += 2;
        v9 += 17;
        ++v10;
        --v8;
      }
      while (v8);
      v5 = v23;
      v3 = v24;
      v4 = v22;
      v7 = v21;
    }
    *(_QWORD *)(v0 + 64) = v2;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v17 = sub_1ABF316E4();
    v19 = v18;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = sub_1ABD1FE2C(v17, v19, &v25);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v3, v4, "Fetched watched stocks for suggested symbol entities, stocks=[%s]", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v7, -1, -1);
    MEMORY[0x1AF438FFC](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1ABED1C84(MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABED1C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;

  v75 = a3;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v74 = (char *)&v66 - v6;
  v7 = sub_1ABF3049C();
  v72 = *(_QWORD *)(v7 - 8);
  v73 = v7;
  MEMORY[0x1E0C80A78](v7);
  v77 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABED9A80(0, (unint64_t *)&qword_1EEC42138, (unint64_t *)&qword_1ED34CB18, (uint64_t)&protocol conformance descriptor for SymbolEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C91170]);
  v70 = *(_QWORD *)(v9 - 8);
  v71 = v9;
  MEMORY[0x1E0C80A78](v9);
  v69 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v76 = (char *)&v66 - v12;
  v79 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v79);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABED9A80(0, (unint64_t *)&qword_1EEC42590, (unint64_t *)&qword_1ED34CB18, (uint64_t)&protocol conformance descriptor for SymbolEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90720]);
  v78 = v15;
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v66 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  v23 = MEMORY[0x1E0DEE9D8];
  if (v22)
  {
    v67 = a2;
    v68 = v18;
    v98 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB5250(0, v22, 0);
    v23 = v98;
    v24 = a1 + 32;
    do
    {
      v25 = *(_OWORD *)(v24 + 80);
      v26 = *(_OWORD *)(v24 + 112);
      v95 = *(_OWORD *)(v24 + 96);
      v96 = v26;
      v27 = *(_OWORD *)(v24 + 16);
      v28 = *(_OWORD *)(v24 + 48);
      v91 = *(_OWORD *)(v24 + 32);
      v92 = v28;
      v29 = *(_OWORD *)(v24 + 48);
      v30 = *(_OWORD *)(v24 + 80);
      v93 = *(_OWORD *)(v24 + 64);
      v94 = v30;
      v31 = *(_OWORD *)(v24 + 16);
      v89 = *(_OWORD *)v24;
      v90 = v31;
      v32 = *(_OWORD *)(v24 + 112);
      v86 = v95;
      v87 = v32;
      v82 = v91;
      v83 = v29;
      v84 = v93;
      v85 = v25;
      v97 = *(_QWORD *)(v24 + 128);
      v88 = *(_QWORD *)(v24 + 128);
      v80 = v89;
      v81 = v27;
      sub_1ABD97ECC((uint64_t)&v89);
      sub_1ABD97ECC((uint64_t)&v89);
      SymbolEntity.init(from:)(&v80, (uint64_t)v14);
      sub_1ABCFE22C((unint64_t *)&qword_1ED34CB18, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
      sub_1ABF2FCBC();
      sub_1ABD97F60((uint64_t)&v89);
      v98 = v23;
      v34 = *(_QWORD *)(v23 + 16);
      v33 = *(_QWORD *)(v23 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1ABDB5250(v33 > 1, v34 + 1, 1);
        v23 = v98;
      }
      *(_QWORD *)(v23 + 16) = v34 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v23+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v34, v21, v78);
      v24 += 136;
      --v22;
    }
    while (v22);
    a2 = v67;
    v18 = v68;
  }
  v35 = *(_QWORD *)(a2 + 16);
  v36 = MEMORY[0x1E0DEE9D8];
  if (v35)
  {
    v98 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB5250(0, v35, 0);
    v36 = v98;
    v37 = a2 + 32;
    do
    {
      v38 = *(_OWORD *)(v37 + 80);
      v39 = *(_OWORD *)(v37 + 112);
      v95 = *(_OWORD *)(v37 + 96);
      v96 = v39;
      v40 = *(_OWORD *)(v37 + 16);
      v41 = *(_OWORD *)(v37 + 48);
      v91 = *(_OWORD *)(v37 + 32);
      v92 = v41;
      v42 = *(_OWORD *)(v37 + 48);
      v43 = *(_OWORD *)(v37 + 80);
      v93 = *(_OWORD *)(v37 + 64);
      v94 = v43;
      v44 = *(_OWORD *)(v37 + 16);
      v89 = *(_OWORD *)v37;
      v90 = v44;
      v45 = *(_OWORD *)(v37 + 112);
      v86 = v95;
      v87 = v45;
      v82 = v91;
      v83 = v42;
      v84 = v93;
      v85 = v38;
      v97 = *(_QWORD *)(v37 + 128);
      v88 = *(_QWORD *)(v37 + 128);
      v80 = v89;
      v81 = v40;
      sub_1ABD97ECC((uint64_t)&v89);
      sub_1ABD97ECC((uint64_t)&v89);
      SymbolEntity.init(from:)(&v80, (uint64_t)v14);
      sub_1ABCFE22C((unint64_t *)&qword_1ED34CB18, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
      sub_1ABF2FCBC();
      sub_1ABD97F60((uint64_t)&v89);
      v98 = v36;
      v46 = v18;
      v48 = *(_QWORD *)(v36 + 16);
      v47 = *(_QWORD *)(v36 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_1ABDB5250(v47 > 1, v48 + 1, 1);
        v36 = v98;
      }
      *(_QWORD *)(v36 + 16) = v48 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v36+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v48, v46, v78);
      v37 += 136;
      --v35;
      v18 = v46;
    }
    while (v35);
  }
  v50 = v72;
  v49 = v73;
  v52 = v70;
  v51 = v71;
  v53 = v69;
  if (*(_QWORD *)(v23 + 16))
  {
    if (qword_1EEC410C0 != -1)
      swift_once();
    v54 = __swift_project_value_buffer(v49, (uint64_t)qword_1EEC44C88);
    v55 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v77, v54, v49);
    v56 = sub_1ABCFE22C((unint64_t *)&qword_1ED34CB18, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    MEMORY[0x1AF436098](v55, v23, v79, v56);
    v57 = sub_1ABD83344(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v59 = *(_QWORD *)(v57 + 16);
    v58 = *(_QWORD *)(v57 + 24);
    if (v59 >= v58 >> 1)
      v57 = sub_1ABD83344(v58 > 1, v59 + 1, 1, v57);
    *(_QWORD *)(v57 + 16) = v59 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v57+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v59, v76, v51);
    if (*(_QWORD *)(v36 + 16))
      goto LABEL_18;
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  v57 = MEMORY[0x1E0DEE9D8];
  if (!*(_QWORD *)(v36 + 16))
    goto LABEL_26;
LABEL_18:
  if (qword_1EEC410C8 != -1)
    swift_once();
  v60 = __swift_project_value_buffer(v49, (uint64_t)qword_1EEC44CA0);
  v61 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v77, v60, v49);
  v62 = sub_1ABCFE22C((unint64_t *)&qword_1ED34CB18, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  MEMORY[0x1AF436098](v61, v36, v79, v62);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v57 = sub_1ABD83344(0, *(_QWORD *)(v57 + 16) + 1, 1, v57);
  v64 = *(_QWORD *)(v57 + 16);
  v63 = *(_QWORD *)(v57 + 24);
  if (v64 >= v63 >> 1)
    v57 = sub_1ABD83344(v63 > 1, v64 + 1, 1, v57);
  *(_QWORD *)(v57 + 16) = v64 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v57+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v64, v53, v51);
LABEL_27:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v74, 1, 1, v49);
  sub_1ABCFE22C((unint64_t *)&qword_1ED34CB18, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  return sub_1ABF2FEE4();
}

uint64_t SymbolQuery.defaultResult()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = v1;
  return swift_task_switch();
}

uint64_t sub_1ABED23F8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[28] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Default symbol entity requested", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v5 = v0[22];
  v6 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v5);
  v0[29] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
  v7 = (_QWORD *)swift_task_alloc();
  v0[30] = v7;
  *v7 = v0;
  v7[1] = sub_1ABED255C;
  return sub_1ABF31150();
}

uint64_t sub_1ABED255C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
  }
  return swift_task_switch();
}

uint64_t sub_1ABED25D4()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;

  v1 = *(_QWORD *)(v0 + 192);
  if (*(_QWORD *)(v1 + 16))
  {
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
    v2 = *(_OWORD *)(v1 + 96);
    v4 = *(_OWORD *)(v1 + 48);
    v3 = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v0 + 80) = v2;
    *(_OWORD *)(v0 + 32) = v4;
    *(_OWORD *)(v0 + 48) = v3;
    v6 = *(_OWORD *)(v1 + 128);
    v5 = *(_OWORD *)(v1 + 144);
    v7 = *(_OWORD *)(v1 + 112);
    *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + 160);
    *(_OWORD *)(v0 + 112) = v6;
    *(_OWORD *)(v0 + 128) = v5;
    *(_OWORD *)(v0 + 96) = v7;
    sub_1ABD97ECC(v0 + 16);
    swift_bridgeObjectRelease();
    v39 = *(_OWORD *)(v0 + 120);
    v40 = *(_OWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 96);
    v42 = *(_BYTE *)(v0 + 80);
    v43 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 24);
    v37 = *(_QWORD *)(v0 + 32);
    v38 = *(_QWORD *)(v0 + 72);
    v35 = *(_QWORD *)(v0 + 40);
    v36 = *(_QWORD *)(v0 + 56);
    v41 = *(_QWORD *)(v0 + 16);
    sub_1ABD97ECC(v0 + 16);
    v14 = sub_1ABF31324();
    v15 = sub_1ABF31BD0();
    if (os_log_type_enabled(v14, v15))
    {
      v34 = v11;
      v16 = (uint8_t *)swift_slowAlloc();
      v33 = v9;
      v17 = swift_slowAlloc();
      *(_QWORD *)&v45 = v17;
      *(_DWORD *)v16 = 136315138;
      sub_1ABF2FF5C();
      *(_QWORD *)(v0 + 200) = sub_1ABD1FE2C(v41, v13, (uint64_t *)&v45);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      sub_1ABD97F60(v0 + 16);
      _os_log_impl(&dword_1ABCEF000, v14, v15, "Returning first watched stock for default symbol entity, stock=%s", v16, 0xCu);
      swift_arrayDestroy();
      v18 = v17;
      v9 = v33;
      MEMORY[0x1AF438FFC](v18, -1, -1);
      v19 = v16;
      v11 = v34;
      MEMORY[0x1AF438FFC](v19, -1, -1);
    }
    else
    {
      sub_1ABD97F60(v0 + 16);
    }

    v28 = v39;
    v29 = v40;
    v24 = v37;
    v27 = v38;
    v25 = v35;
    v26 = v36;
    v23 = v41;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = sub_1ABF31324();
    v21 = sub_1ABF31BE8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1ABCEF000, v20, v21, "No watched symbols to return as default symbol entity, falling back to AAPL", v22, 2u);
      MEMORY[0x1AF438FFC](v22, -1, -1);
    }

    v44 = 3;
    sub_1ABD15B80(1280328001, 0xE400000000000000, 0x6E4920656C707041, 0xEA00000000002E63, 0x51414453414ELL, 0xE600000000000000, &v44, 0, (uint64_t)&v45, 0, 0, 0, 0, 0, 0, 0);
    v13 = *((_QWORD *)&v45 + 1);
    v23 = v45;
    v24 = v46;
    v25 = v47;
    v12 = v48;
    v26 = v49;
    v27 = v51;
    v43 = v50;
    v42 = v52;
    v11 = v53;
    v10 = v54;
    v8 = v55;
    v9 = v56;
    v28 = v57;
    v29 = v58;
  }
  v30 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)&v45 = v23;
  *((_QWORD *)&v45 + 1) = v13;
  v46 = v24;
  v47 = v25;
  v48 = v12;
  v49 = v26;
  v50 = v43;
  v51 = v27;
  v52 = v42;
  v53 = v11;
  v54 = v10;
  v55 = v8;
  v56 = v9;
  v57 = v28;
  v58 = v29;
  SymbolEntity.init(from:)(&v45, v30);
  v31 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABED2970()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  __int128 v9;

  v1 = *(void **)(v0 + 248);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);

  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BE8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "No watched symbols to return as default symbol entity, falling back to AAPL", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }

  v8 = 3;
  sub_1ABD15B80(1280328001, 0xE400000000000000, 0x6E4920656C707041, 0xEA00000000002E63, 0x51414453414ELL, 0xE600000000000000, &v8, 0, (uint64_t)&v9, 0, 0, 0, 0, 0, 0, 0);
  v5 = *(_QWORD *)(v0 + 208);
  SymbolEntity.init(from:)(&v9, v5);
  v6 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SymbolQuery.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t SymbolQuery.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *sub_1ABED2B60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  v2 = swift_allocObject();
  result = SymbolQuery.init()();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABED2B98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1ABD8C690;
  return SymbolQuery.entities(for:)(a1);
}

uint64_t sub_1ABED2BE8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1ABD7E2B8;
  v5[10] = a1;
  v5[11] = v4;
  return swift_task_switch();
}

uint64_t sub_1ABED2C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *v3;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1ABD37AA0;
  v9[14] = a3;
  v9[15] = v8;
  v9[12] = a1;
  v9[13] = a2;
  return swift_task_switch();
}

uint64_t SymbolQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  return swift_task_switch();
}

uint64_t sub_1ABED2CE0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[14];
  if (v4)
  {
    v6 = v0[13];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1ABF2FF5C();
    v0[11] = sub_1ABD1FE2C(v6, v5, &v15);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching stocks for symbol entities matching string='%s'", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = v0[14];
  v10 = v0[13];
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v11 = v0[5];
  v12 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
  v0[17] = sub_1ABD78990(v10, v9, v11, v12);
  v13 = (_QWORD *)swift_task_alloc();
  v0[18] = v13;
  *v13 = v0;
  v13[1] = sub_1ABED2F1C;
  return sub_1ABF31150();
}

uint64_t sub_1ABED2F1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABED2F94()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0[7];
  v0[20] = v1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v5 = v0[13];
    v4 = v0[14];
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v30 = v7;
    *(_DWORD *)v6 = 136315394;
    sub_1ABF2FF5C();
    v0[8] = sub_1ABD1FE2C(v5, v4, &v30);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    v8 = *(_QWORD *)(v1 + 16);
    v9 = MEMORY[0x1E0DEE9D8];
    if (v8)
    {
      v25 = v7;
      v26 = v3;
      v27 = v6;
      v28 = v2;
      v31 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v8, 0);
      v9 = v31;
      v10 = *(_QWORD *)(v31 + 16);
      v11 = 16 * v10;
      v29 = v1;
      v12 = (uint64_t *)(v1 + 40);
      do
      {
        v13 = *(v12 - 1);
        v14 = *v12;
        v31 = v9;
        v15 = v10 + 1;
        v16 = *(_QWORD *)(v9 + 24);
        sub_1ABF2FF5C();
        if (v10 >= v16 >> 1)
        {
          sub_1ABD16414(v16 > 1, v15, 1);
          v9 = v31;
        }
        *(_QWORD *)(v9 + 16) = v15;
        v17 = v9 + v11;
        *(_QWORD *)(v17 + 32) = v13;
        *(_QWORD *)(v17 + 40) = v14;
        v11 += 16;
        v12 += 17;
        ++v10;
        --v8;
      }
      while (v8);
      v2 = v28;
      v1 = v29;
      v6 = v27;
      v3 = v26;
      v7 = v25;
    }
    v0[9] = v9;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v18 = sub_1ABF316E4();
    v20 = v19;
    swift_bridgeObjectRelease();
    v0[10] = sub_1ABD1FE2C(v18, v20, &v30);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetched stocks for symbol entities matching string='%s', stocks=[%s]", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v7, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v21 = (_QWORD *)swift_task_alloc();
  v0[21] = v21;
  *v21 = v0;
  v21[1] = sub_1ABE03A18;
  v22 = v0[15];
  v23 = v0[12];
  v21[40] = v1;
  v21[41] = v22;
  v21[39] = v23;
  return swift_task_switch();
}

uint64_t sub_1ABED32BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1ABCFE22C(&qword_1ED3467A0, v2, (uint64_t (*)(uint64_t))type metadata accessor for SymbolQuery, (uint64_t)&protocol conformance descriptor for SymbolQuery);
  *v1 = v0;
  v1[1] = sub_1ABD7E2B8;
  return sub_1ABF2FCC8();
}

uint64_t sub_1ABED3340(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1ABD37AA0;
  v5[26] = a1;
  v5[27] = v4;
  return swift_task_switch();
}

uint64_t sub_1ABED33A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[40] = a2;
  v3[41] = v2;
  v3[39] = a1;
  return swift_task_switch();
}

uint64_t sub_1ABED33C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v1 = v0[22];
  v2 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v1);
  v0[42] = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[43] = v3;
  *v3 = v0;
  v3[1] = sub_1ABED3474;
  return sub_1ABF31150();
}

uint64_t sub_1ABED3474()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 352) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
  }
  return swift_task_switch();
}

uint64_t sub_1ABED34EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _QWORD *v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  os_log_type_t v87;
  uint64_t v88;
  NSObject *log;
  _DWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;

  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 240) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 248) = v1;
  v92 = (_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v93 = (_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(v0 + 16);
    v6 = v3 + 32;
    sub_1ABF2FF5C();
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v8 = v4;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      *(_OWORD *)v5 = *(_OWORD *)v6;
      v17 = *(_OWORD *)(v6 + 16);
      v18 = *(_OWORD *)(v6 + 32);
      v19 = *(_OWORD *)(v6 + 64);
      *((_OWORD *)v93 - 11) = *(_OWORD *)(v6 + 48);
      *((_OWORD *)v93 - 10) = v19;
      *((_OWORD *)v93 - 13) = v17;
      *((_OWORD *)v93 - 12) = v18;
      v20 = *(_OWORD *)(v6 + 80);
      v21 = *(_OWORD *)(v6 + 96);
      v22 = *(_OWORD *)(v6 + 112);
      *(v93 - 12) = *(_QWORD *)(v6 + 128);
      *((_OWORD *)v93 - 8) = v21;
      *((_OWORD *)v93 - 7) = v22;
      *((_OWORD *)v93 - 9) = v20;
      sub_1ABD97ECC((uint64_t)v5);
      if ((sub_1ABEEFBAC(v5, v2) & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1ABD32E4C(0, v9[2] + 1, 1, v9);
        v24 = v9[2];
        v23 = v9[3];
        if (v24 >= v23 >> 1)
          v9 = sub_1ABD32E4C((_QWORD *)(v23 > 1), v24 + 1, 1, v9);
        v9[2] = v24 + 1;
        v10 = &v9[17 * v24];
        *((_OWORD *)v10 + 2) = *(_OWORD *)v5;
        v11 = *((_OWORD *)v93 - 13);
        v12 = *((_OWORD *)v93 - 12);
        v13 = *((_OWORD *)v93 - 10);
        *((_OWORD *)v10 + 5) = *((_OWORD *)v93 - 11);
        *((_OWORD *)v10 + 6) = v13;
        *((_OWORD *)v10 + 3) = v11;
        *((_OWORD *)v10 + 4) = v12;
        v14 = *((_OWORD *)v93 - 9);
        v15 = *((_OWORD *)v93 - 8);
        v16 = *((_OWORD *)v93 - 7);
        v10[20] = *(v93 - 12);
        *((_OWORD *)v10 + 8) = v15;
        *((_OWORD *)v10 + 9) = v16;
        *((_OWORD *)v10 + 7) = v14;
        *v92 = v9;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1ABD32E4C(0, v7[2] + 1, 1, v7);
        v26 = v7[2];
        v25 = v7[3];
        if (v26 >= v25 >> 1)
          v7 = sub_1ABD32E4C((_QWORD *)(v25 > 1), v26 + 1, 1, v7);
        v7[2] = v26 + 1;
        v27 = &v7[17 * v26];
        *((_OWORD *)v27 + 2) = *(_OWORD *)v5;
        v28 = *((_OWORD *)v93 - 13);
        v29 = *((_OWORD *)v93 - 12);
        v30 = *((_OWORD *)v93 - 10);
        *((_OWORD *)v27 + 5) = *((_OWORD *)v93 - 11);
        *((_OWORD *)v27 + 6) = v30;
        *((_OWORD *)v27 + 3) = v28;
        *((_OWORD *)v27 + 4) = v29;
        v31 = *((_OWORD *)v93 - 9);
        v32 = *((_OWORD *)v93 - 8);
        v33 = *((_OWORD *)v93 - 7);
        v27[20] = *(v93 - 12);
        *((_OWORD *)v27 + 8) = v32;
        *((_OWORD *)v27 + 9) = v33;
        *((_OWORD *)v27 + 7) = v31;
        *v93 = v7;
      }
      v6 += 136;
      --v8;
    }
    while (v8);
    v0 = v91;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1ED346718 != -1)
    swift_once();
  v34 = sub_1ABF3133C();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED3466E0);
  v35 = *(_QWORD *)(v0 + 240);
  v36 = *(_QWORD *)(v0 + 248);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v37 = sub_1ABF31324();
  v38 = sub_1ABF31BF4();
  if (os_log_type_enabled(v37, v38))
  {
    v87 = v38;
    log = v37;
    v39 = v93 + 5;
    v40 = (_DWORD *)swift_slowAlloc();
    v86 = swift_slowAlloc();
    v94 = v86;
    v90 = v40;
    *v40 = 136315650;
    v41 = MEMORY[0x1E0DEE9D8];
    v88 = v35;
    if (v4)
    {
      v42 = *(_QWORD *)(v0 + 320);
      v95 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v4, 0);
      v41 = v95;
      v43 = *(_QWORD *)(v95 + 16);
      v44 = 16 * v43;
      v45 = (uint64_t *)(v42 + 40);
      do
      {
        v46 = *(v45 - 1);
        v47 = *v45;
        v95 = v41;
        v48 = v43 + 1;
        v49 = *(_QWORD *)(v41 + 24);
        sub_1ABF2FF5C();
        if (v43 >= v49 >> 1)
        {
          sub_1ABD16414(v49 > 1, v48, 1);
          v41 = v95;
        }
        *(_QWORD *)(v41 + 16) = v48;
        v50 = v41 + v44;
        *(_QWORD *)(v50 + 32) = v46;
        *(_QWORD *)(v50 + 40) = v47;
        v44 += 16;
        v45 += 17;
        ++v43;
        --v4;
      }
      while (v4);
      v0 = v91;
      v39 = v93 + 5;
    }
    v51 = v93 + 6;
    *(_QWORD *)(v0 + 264) = v41;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v52 = sub_1ABF316E4();
    v54 = v53;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 272) = sub_1ABD1FE2C(v52, v54, &v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *((_WORD *)v90 + 6) = 2080;
    v55 = *(_QWORD *)(v36 + 16);
    v56 = MEMORY[0x1E0DEE9D8];
    if (v55)
    {
      v95 = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABD16414(0, v55, 0);
      v57 = 0;
      v56 = v95;
      v58 = *(_QWORD *)(v95 + 16);
      v59 = 16 * v58;
      do
      {
        v60 = *(_QWORD *)(v36 + v57 + 32);
        v61 = *(_QWORD *)(v36 + v57 + 40);
        v95 = v56;
        v62 = *(_QWORD *)(v56 + 24);
        v63 = v58 + 1;
        sub_1ABF2FF5C();
        if (v58 >= v62 >> 1)
        {
          sub_1ABD16414(v62 > 1, v63, 1);
          v56 = v95;
        }
        *(_QWORD *)(v56 + 16) = v63;
        v64 = v56 + v59;
        *(_QWORD *)(v64 + 32) = v60;
        *(_QWORD *)(v64 + 40) = v61;
        v59 += 16;
        v57 += 136;
        ++v58;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease();
      v39 = v93 + 5;
      v51 = v93 + 6;
    }
    *v39 = v56;
    v65 = sub_1ABF316E4();
    v67 = v66;
    swift_bridgeObjectRelease();
    *v51 = sub_1ABD1FE2C(v65, v67, &v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *((_WORD *)v90 + 11) = 2080;
    v68 = v88;
    v69 = *(_QWORD *)(v88 + 16);
    v70 = MEMORY[0x1E0DEE9D8];
    v0 = v91;
    if (v69)
    {
      v95 = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABD16414(0, v69, 0);
      v71 = 0;
      v70 = v95;
      v72 = *(_QWORD *)(v95 + 16);
      v73 = 16 * v72;
      do
      {
        v74 = v68;
        v76 = *(_QWORD *)(v68 + v71 + 32);
        v75 = *(_QWORD *)(v68 + v71 + 40);
        v95 = v70;
        v77 = *(_QWORD *)(v70 + 24);
        v78 = v72 + 1;
        sub_1ABF2FF5C();
        if (v72 >= v77 >> 1)
        {
          sub_1ABD16414(v77 > 1, v78, 1);
          v70 = v95;
        }
        *(_QWORD *)(v70 + 16) = v78;
        v79 = v70 + v73;
        *(_QWORD *)(v79 + 32) = v76;
        *(_QWORD *)(v79 + 40) = v75;
        v73 += 16;
        v71 += 136;
        ++v72;
        --v69;
        v68 = v74;
      }
      while (v69);
      swift_bridgeObjectRelease();
      v0 = v91;
    }
    *(_QWORD *)(v0 + 296) = v70;
    v80 = sub_1ABF316E4();
    v82 = v81;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 304) = sub_1ABD1FE2C(v80, v82, &v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v37 = log;
    _os_log_impl(&dword_1ABCEF000, log, v87, "Sectioned stocks=[%s] into watched=[%s], notWatched=[%s]", (uint8_t *)v90, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v86, -1, -1);
    MEMORY[0x1AF438FFC](v90, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v83 = *(_QWORD *)(v0 + 312);
  swift_beginAccess();
  v84 = *(_QWORD *)(v0 + 248);
  swift_beginAccess();
  sub_1ABED1C84(v84, *(_QWORD *)(v0 + 240), v83);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABED3CD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _QWORD *v40;
  _DWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  int64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  os_log_type_t v88;
  uint64_t v89;
  NSObject *log;
  _DWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;

  v1 = *(void **)(v0 + 352);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);

  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 240) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 248) = v2;
  v93 = (_QWORD *)(v0 + 248);
  v94 = (_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v3 + 16);
  v92 = v0;
  if (v4)
  {
    v5 = (uint64_t *)(v0 + 16);
    v6 = v3 + 32;
    sub_1ABF2FF5C();
    v7 = MEMORY[0x1E0DEE9D8];
    v8 = v4;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      *(_OWORD *)v5 = *(_OWORD *)v6;
      v18 = *(_OWORD *)(v6 + 16);
      v19 = *(_OWORD *)(v6 + 32);
      v20 = *(_OWORD *)(v6 + 64);
      *((_OWORD *)v94 - 11) = *(_OWORD *)(v6 + 48);
      *((_OWORD *)v94 - 10) = v20;
      *((_OWORD *)v94 - 13) = v18;
      *((_OWORD *)v94 - 12) = v19;
      v21 = *(_OWORD *)(v6 + 80);
      v22 = *(_OWORD *)(v6 + 96);
      v23 = *(_OWORD *)(v6 + 112);
      *(v94 - 12) = *(_QWORD *)(v6 + 128);
      *((_OWORD *)v94 - 8) = v22;
      *((_OWORD *)v94 - 7) = v23;
      *((_OWORD *)v94 - 9) = v21;
      sub_1ABD97ECC((uint64_t)v5);
      if ((sub_1ABEEFBAC(v5, v7) & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_1ABD32E4C(0, v10[2] + 1, 1, v10);
        v25 = v10[2];
        v24 = v10[3];
        if (v25 >= v24 >> 1)
          v10 = sub_1ABD32E4C((_QWORD *)(v24 > 1), v25 + 1, 1, v10);
        v10[2] = v25 + 1;
        v11 = &v10[17 * v25];
        *((_OWORD *)v11 + 2) = *(_OWORD *)v5;
        v12 = *((_OWORD *)v94 - 13);
        v13 = *((_OWORD *)v94 - 12);
        v14 = *((_OWORD *)v94 - 10);
        *((_OWORD *)v11 + 5) = *((_OWORD *)v94 - 11);
        *((_OWORD *)v11 + 6) = v14;
        *((_OWORD *)v11 + 3) = v12;
        *((_OWORD *)v11 + 4) = v13;
        v15 = *((_OWORD *)v94 - 9);
        v16 = *((_OWORD *)v94 - 8);
        v17 = *((_OWORD *)v94 - 7);
        v11[20] = *(v94 - 12);
        *((_OWORD *)v11 + 8) = v16;
        *((_OWORD *)v11 + 9) = v17;
        *((_OWORD *)v11 + 7) = v15;
        *v93 = v10;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1ABD32E4C(0, v9[2] + 1, 1, v9);
        v27 = v9[2];
        v26 = v9[3];
        if (v27 >= v26 >> 1)
          v9 = sub_1ABD32E4C((_QWORD *)(v26 > 1), v27 + 1, 1, v9);
        v9[2] = v27 + 1;
        v28 = &v9[17 * v27];
        *((_OWORD *)v28 + 2) = *(_OWORD *)v5;
        v29 = *((_OWORD *)v94 - 13);
        v30 = *((_OWORD *)v94 - 12);
        v31 = *((_OWORD *)v94 - 10);
        *((_OWORD *)v28 + 5) = *((_OWORD *)v94 - 11);
        *((_OWORD *)v28 + 6) = v31;
        *((_OWORD *)v28 + 3) = v29;
        *((_OWORD *)v28 + 4) = v30;
        v32 = *((_OWORD *)v94 - 9);
        v33 = *((_OWORD *)v94 - 8);
        v34 = *((_OWORD *)v94 - 7);
        v28[20] = *(v94 - 12);
        *((_OWORD *)v28 + 8) = v33;
        *((_OWORD *)v28 + 9) = v34;
        *((_OWORD *)v28 + 7) = v32;
        *v94 = v9;
      }
      v6 += 136;
      --v8;
    }
    while (v8);
    v0 = v92;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1ED346718 != -1)
    swift_once();
  v35 = sub_1ABF3133C();
  __swift_project_value_buffer(v35, (uint64_t)qword_1ED3466E0);
  v36 = *(_QWORD *)(v0 + 240);
  v37 = *(_QWORD *)(v0 + 248);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v38 = sub_1ABF31324();
  v39 = sub_1ABF31BF4();
  if (os_log_type_enabled(v38, v39))
  {
    v88 = v39;
    log = v38;
    v40 = v94 + 5;
    v41 = (_DWORD *)swift_slowAlloc();
    v87 = swift_slowAlloc();
    v95 = v87;
    v91 = v41;
    *v41 = 136315650;
    v42 = MEMORY[0x1E0DEE9D8];
    v89 = v36;
    if (v4)
    {
      v43 = *(_QWORD *)(v0 + 320);
      v96 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v4, 0);
      v42 = v96;
      v44 = *(_QWORD *)(v96 + 16);
      v45 = 16 * v44;
      v46 = (uint64_t *)(v43 + 40);
      do
      {
        v47 = *(v46 - 1);
        v48 = *v46;
        v96 = v42;
        v49 = v44 + 1;
        v50 = *(_QWORD *)(v42 + 24);
        sub_1ABF2FF5C();
        if (v44 >= v50 >> 1)
        {
          sub_1ABD16414(v50 > 1, v49, 1);
          v42 = v96;
        }
        *(_QWORD *)(v42 + 16) = v49;
        v51 = v42 + v45;
        *(_QWORD *)(v51 + 32) = v47;
        *(_QWORD *)(v51 + 40) = v48;
        v45 += 16;
        v46 += 17;
        ++v44;
        --v4;
      }
      while (v4);
      v0 = v92;
      v40 = v94 + 5;
    }
    v52 = v94 + 6;
    *(_QWORD *)(v0 + 264) = v42;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v53 = sub_1ABF316E4();
    v55 = v54;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 272) = sub_1ABD1FE2C(v53, v55, &v95);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *((_WORD *)v91 + 6) = 2080;
    v56 = *(_QWORD *)(v37 + 16);
    v57 = MEMORY[0x1E0DEE9D8];
    if (v56)
    {
      v96 = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABD16414(0, v56, 0);
      v58 = 0;
      v57 = v96;
      v59 = *(_QWORD *)(v96 + 16);
      v60 = 16 * v59;
      do
      {
        v61 = *(_QWORD *)(v37 + v58 + 32);
        v62 = *(_QWORD *)(v37 + v58 + 40);
        v96 = v57;
        v63 = *(_QWORD *)(v57 + 24);
        v64 = v59 + 1;
        sub_1ABF2FF5C();
        if (v59 >= v63 >> 1)
        {
          sub_1ABD16414(v63 > 1, v64, 1);
          v57 = v96;
        }
        *(_QWORD *)(v57 + 16) = v64;
        v65 = v57 + v60;
        *(_QWORD *)(v65 + 32) = v61;
        *(_QWORD *)(v65 + 40) = v62;
        v60 += 16;
        v58 += 136;
        ++v59;
        --v56;
      }
      while (v56);
      swift_bridgeObjectRelease();
      v40 = v94 + 5;
      v52 = v94 + 6;
    }
    *v40 = v57;
    v66 = sub_1ABF316E4();
    v68 = v67;
    swift_bridgeObjectRelease();
    *v52 = sub_1ABD1FE2C(v66, v68, &v95);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *((_WORD *)v91 + 11) = 2080;
    v69 = v89;
    v70 = *(_QWORD *)(v89 + 16);
    v71 = MEMORY[0x1E0DEE9D8];
    v0 = v92;
    if (v70)
    {
      v96 = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABD16414(0, v70, 0);
      v72 = 0;
      v71 = v96;
      v73 = *(_QWORD *)(v96 + 16);
      v74 = 16 * v73;
      do
      {
        v75 = v69;
        v77 = *(_QWORD *)(v69 + v72 + 32);
        v76 = *(_QWORD *)(v69 + v72 + 40);
        v96 = v71;
        v78 = *(_QWORD *)(v71 + 24);
        v79 = v73 + 1;
        sub_1ABF2FF5C();
        if (v73 >= v78 >> 1)
        {
          sub_1ABD16414(v78 > 1, v79, 1);
          v71 = v96;
        }
        *(_QWORD *)(v71 + 16) = v79;
        v80 = v71 + v74;
        *(_QWORD *)(v80 + 32) = v77;
        *(_QWORD *)(v80 + 40) = v76;
        v74 += 16;
        v72 += 136;
        ++v73;
        --v70;
        v69 = v75;
      }
      while (v70);
      swift_bridgeObjectRelease();
      v0 = v92;
    }
    *(_QWORD *)(v0 + 296) = v71;
    v81 = sub_1ABF316E4();
    v83 = v82;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 304) = sub_1ABD1FE2C(v81, v83, &v95);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v38 = log;
    _os_log_impl(&dword_1ABCEF000, log, v88, "Sectioned stocks=[%s] into watched=[%s], notWatched=[%s]", (uint8_t *)v91, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v87, -1, -1);
    MEMORY[0x1AF438FFC](v91, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v84 = *(_QWORD *)(v0 + 312);
  swift_beginAccess();
  v85 = *(_QWORD *)(v0 + 248);
  swift_beginAccess();
  sub_1ABED1C84(v85, *(_QWORD *)(v0 + 240), v84);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static SymbolQuery.findIntentDescription.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v20 = a1;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v21 = (char *)&v17 - v2;
  v3 = sub_1ABF30484();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1ABF3049C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v19 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF31738();
  sub_1ABF30844();
  v12 = *MEMORY[0x1E0CAF9B8];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v13(v6, v12, v3);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v21, 1, 1, v9);
  sub_1ABCF5A54(0, &qword_1EEC421D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1ABF3B7C0;
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v13(v6, v12, v3);
  sub_1ABF304A8();
  v14 = v20;
  sub_1ABF2FE60();
  v15 = sub_1ABF2FE54();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
}

uint64_t sub_1ABED4A24()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABED7E50();
  v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1EEC44CB8);
  __swift_project_value_buffer(v1, (uint64_t)qword_1EEC44CB8);
  type metadata accessor for SymbolEntity();
  sub_1ABCFE22C(&qword_1ED3467A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  return sub_1ABF2FF20();
}

uint64_t sub_1ABED4AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1ABED9BC8();
  swift_getKeyPath();
  sub_1ABF2FEC0();
  sub_1ABCFE22C(&qword_1ED3467A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  v0 = sub_1ABF2FF68();
  swift_release();
  swift_getKeyPath();
  sub_1ABF2FF68();
  sub_1ABF2FEC0();
  v1 = sub_1ABF2FF68();
  swift_release();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ABF3EC20;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v1;
  sub_1ABF31A20();
  type metadata accessor for SymbolEntity();
  sub_1ABF2FF68();
  v3 = sub_1ABF300A0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1ABED4C30()
{
  return sub_1ABED4C80();
}

uint64_t sub_1ABED4C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1ABE052DC(a1, a2, (uint64_t)sub_1ABE0DD70, a3);
}

uint64_t sub_1ABED4C58@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABE0539C(a1, (uint64_t)sub_1ABE0DD44, a2);
}

uint64_t sub_1ABED4C6C()
{
  return sub_1ABED4C80();
}

uint64_t sub_1ABED4C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  sub_1ABED9C88();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - v6;
  sub_1ABED9D1C();
  swift_allocObject();
  sub_1ABF2FE84();
  type metadata accessor for SymbolEntity();
  sub_1ABCFE22C(&qword_1ED3467A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  sub_1ABF300D0();
  swift_release();
  sub_1ABED9D9C();
  swift_allocObject();
  sub_1ABF2FE3C();
  sub_1ABF300D0();
  swift_release();
  sub_1ABCF5A54(0, &qword_1EEC44DA0, (uint64_t (*)(uint64_t))sub_1ABED9C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = *(_QWORD *)(v2 + 72);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1ABF366E0;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 16);
  v12(v11, v7, v1);
  v12(v11 + v8, v4, v1);
  sub_1ABD9F6B0();
  sub_1ABD94F2C();
  v13 = sub_1ABF300C4();
  swift_bridgeObjectRelease();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v4, v1);
  v14(v7, v1);
  return v13;
}

uint64_t sub_1ABED4EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1ABE052DC(a1, a2, (uint64_t)sub_1ABE0DD3C, a3);
}

uint64_t sub_1ABED4EDC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABE0539C(a1, (uint64_t)sub_1ABE0DD10, a2);
}

uint64_t static SymbolQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABED532C(&qword_1EEC410D0, (uint64_t (*)(_QWORD))sub_1ABED7E50, (uint64_t)qword_1EEC44CB8, a1);
}

uint64_t static SymbolQuery.properties.setter(uint64_t a1)
{
  return sub_1ABED53DC(a1, &qword_1EEC410D0, (uint64_t (*)(_QWORD))sub_1ABED7E50, (uint64_t)qword_1EEC44CB8);
}

uint64_t (*static SymbolQuery.properties.modify())()
{
  uint64_t v0;

  if (qword_1EEC410D0 != -1)
    swift_once();
  sub_1ABED7E50();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC44CB8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1ABED4FB0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABED7ED4(0);
  v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1EEC44CD0);
  __swift_project_value_buffer(v1, (uint64_t)qword_1EEC44CD0);
  type metadata accessor for SymbolEntity();
  sub_1ABCFE22C(&qword_1ED3467A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  return sub_1ABF30028();
}

uint64_t sub_1ABED503C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(unint64_t, char *, uint64_t);
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;

  sub_1ABED9B2C(0);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - v9;
  MEMORY[0x1E0C80A78](v11);
  v28 = (char *)&v25 - v12;
  swift_getKeyPath();
  sub_1ABCFE22C(&qword_1ED3467A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  sub_1ABCFE22C((unint64_t *)&qword_1EEC42268, 255, (uint64_t (*)(uint64_t))sub_1ABD9F6B0, MEMORY[0x1E0C90BD8]);
  sub_1ABF300DC();
  v13 = type metadata accessor for SymbolEntity();
  sub_1ABF30118();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v10, v1);
  swift_getKeyPath();
  sub_1ABF300DC();
  v27 = v13;
  sub_1ABF30118();
  v26 = v7;
  v14(v7, v1);
  swift_getKeyPath();
  sub_1ABF300DC();
  sub_1ABF30118();
  v14(v4, v1);
  sub_1ABCF5A54(0, &qword_1EEC44D78, (uint64_t (*)(uint64_t))sub_1ABED9B2C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = *(_QWORD *)(v2 + 72);
  v16 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1ABF36EA0;
  v18 = v17 + v16;
  v19 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 16);
  v20 = v28;
  v19(v18, v28, v1);
  v19(v18 + v15, v10, v1);
  v21 = v18 + 2 * v15;
  v22 = v26;
  v19(v21, v26, v1);
  v23 = sub_1ABF3010C();
  swift_bridgeObjectRelease();
  v14(v22, v1);
  v14(v10, v1);
  v14(v20, v1);
  return v23;
}

uint64_t static SymbolQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABED532C(&qword_1EEC410D8, (uint64_t (*)(_QWORD))sub_1ABED7ED4, (uint64_t)qword_1EEC44CD0, a1);
}

uint64_t sub_1ABED532C@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t static SymbolQuery.sortingOptions.setter(uint64_t a1)
{
  return sub_1ABED53DC(a1, &qword_1EEC410D8, (uint64_t (*)(_QWORD))sub_1ABED7ED4, (uint64_t)qword_1EEC44CD0);
}

uint64_t sub_1ABED53DC(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*a2 != -1)
    swift_once();
  v7 = a3(0);
  v8 = __swift_project_value_buffer(v7, a4);
  swift_beginAccess();
  v9 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v8, a1, v7);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v7);
}

uint64_t (*static SymbolQuery.sortingOptions.modify())()
{
  uint64_t v0;

  if (qword_1EEC410D8 != -1)
    swift_once();
  sub_1ABED7ED4(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC44CD0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t SymbolQuery.entities(matching:mode:sortedBy:limit:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 576) = v6;
  *(_BYTE *)(v7 + 689) = a6;
  *(_QWORD *)(v7 + 568) = a5;
  *(_QWORD *)(v7 + 560) = a4;
  *(_BYTE *)(v7 + 688) = a3;
  *(_QWORD *)(v7 + 552) = a2;
  *(_QWORD *)(v7 + 544) = a1;
  return swift_task_switch();
}

uint64_t sub_1ABED552C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  *(_QWORD *)(v0 + 584) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v27 = *(_BYTE *)(v0 + 689);
    v28 = *(_QWORD *)(v0 + 568);
    v4 = *(_QWORD *)(v0 + 560);
    v5 = *(_QWORD *)(v0 + 552);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v30 = v7;
    *(_DWORD *)v6 = 134218754;
    *(_QWORD *)(v0 + 512) = *(_QWORD *)(v5 + 16);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v8 = sub_1ABF3001C();
    v9 = (v8 & 1) == 0;
    if ((v8 & 1) != 0)
      v10 = 6581857;
    else
      v10 = 29295;
    if (v9)
      v11 = 0xE200000000000000;
    else
      v11 = 0xE300000000000000;
    *(_QWORD *)(v0 + 520) = sub_1ABD1FE2C(v10, v11, &v30);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2048;
    v12 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 528) = v12;
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 32) = 2048;
    v13 = v28;
    if ((v27 & 1) != 0)
      v13 = 0;
    *(_QWORD *)(v0 + 536) = v13;
    sub_1ABF31D80();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Querying stocks for symbol entities matching property queryCount=%ld, comparatorMode=%s, sortCount=%ld, limit=%ld", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v7, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }

  v14 = *(_QWORD **)(v0 + 552);
  v15 = v14[2];
  *(_QWORD *)(v0 + 592) = v15;
  if (v15)
  {
    *(_OWORD *)(v0 + 600) = 0u;
    v16 = v14[4];
    *(_QWORD *)(v0 + 616) = v16;
    v17 = v14[5];
    *(_QWORD *)(v0 + 624) = v17;
    *(_QWORD *)(v0 + 632) = v14[6];
    *(_QWORD *)(v0 + 640) = v14[7];
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    sub_1ABF2FF5C();
    v18 = sub_1ABF31324();
    v19 = sub_1ABF31BDC();
    if (os_log_type_enabled(v18, v19))
    {
      v29 = v16;
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v30 = v21;
      *(_DWORD *)v20 = 136315138;
      sub_1ABF2FF5C();
      *(_QWORD *)(v0 + 504) = sub_1ABD1FE2C(v29, v17, &v30);
      sub_1ABF31D80();
      swift_bridgeObjectRelease_n();
      swift_release();
      _os_log_impl(&dword_1ABCEF000, v18, v19, "Querying stocks for symbol entities matching property query=%s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v21, -1, -1);
      v22 = v20;
      v16 = v29;
      MEMORY[0x1AF438FFC](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }

    sub_1ABF2FF68();
    sub_1ABF2FBF0();
    swift_release();
    v24 = *(_QWORD *)(v0 + 312);
    v25 = *(_QWORD *)(v0 + 320);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 288), v24);
    *(_QWORD *)(v0 + 648) = sub_1ABD78990(v16, v17, v24, v25);
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 656) = v26;
    *v26 = v0;
    v26[1] = sub_1ABED5A38;
    return sub_1ABF31150();
  }
  else
  {
    type metadata accessor for SymbolEntity();
    sub_1ABCFE22C((unint64_t *)&qword_1ED34CB18, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    sub_1ABF2FEF0();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1ABED5A38()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 664) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 288);
  }
  return swift_task_switch();
}

uint64_t sub_1ABED5AD8()
{
  int64_t v0;
  int64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  unint64_t v24;
  _QWORD *v25;
  NSObject *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  _BOOL4 v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  os_log_type_t v80;
  _DWORD *v81;
  int64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  char v100;
  BOOL v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  os_log_type_t v106;
  uint8_t *v107;
  int64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  _QWORD *v122;
  uint64_t v123;
  unint64_t v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  NSObject *v139;
  os_log_type_t v140;
  uint8_t *v141;
  int64_t isa;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  NSObject *v146;
  Class v147;
  Class v148;
  int64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  NSObject *v159;
  os_log_type_t v160;
  uint64_t v161;
  uint8_t *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  os_log_type_t v168;
  os_log_type_t v169;
  uint64_t v170;
  uint8_t *v171;
  _DWORD *v172;
  os_log_type_t v173;
  os_log_type_t v174;
  NSObject *v175;
  NSObject *v176;
  uint8_t *v177;
  uint64_t v178;
  uint8_t *v179;
  NSObject *log;
  uint64_t *loga;
  os_log_t logb;
  os_log_t logc;
  _QWORD *v184;
  uint64_t *v185;
  uint64_t *v186;
  _QWORD *v187;
  _QWORD *v188;
  _QWORD *v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  char v200;
  char v201;
  char v202;
  os_log_type_t v203;
  _OWORD v204[8];
  uint64_t v205;
  uint64_t v206[3];

  v1 = v0;
  v2 = (uint64_t *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v3 + 16);
  sub_1ABD97FF4();
  v5 = sub_1ABF31B34();
  *(_QWORD *)(v0 + 328) = v5;
  if (v4)
  {
    v6 = (_OWORD *)(v0 + 16);
    v7 = (_OWORD *)(v0 + 152);
    v8 = v4 - 1;
    for (i = 32; ; i += 136)
    {
      *v6 = *(_OWORD *)(v3 + i);
      v10 = *(_OWORD *)(v3 + i + 16);
      v11 = *(_OWORD *)(v3 + i + 32);
      v12 = *(_OWORD *)(v3 + i + 64);
      *(_OWORD *)(v1 + 64) = *(_OWORD *)(v3 + i + 48);
      *(_OWORD *)(v1 + 80) = v12;
      *(_OWORD *)(v1 + 32) = v10;
      *(_OWORD *)(v1 + 48) = v11;
      v13 = *(_OWORD *)(v3 + i + 80);
      v14 = *(_OWORD *)(v3 + i + 96);
      v15 = *(_OWORD *)(v3 + i + 112);
      *(_QWORD *)(v1 + 144) = *(_QWORD *)(v3 + i + 128);
      *(_OWORD *)(v1 + 112) = v14;
      *(_OWORD *)(v1 + 128) = v15;
      *(_OWORD *)(v1 + 96) = v13;
      sub_1ABD97ECC(v1 + 16);
      sub_1ABE08788((uint64_t)v204, v1 + 16);
      v16 = v204[7];
      *(_OWORD *)(v1 + 248) = v204[6];
      *(_OWORD *)(v1 + 264) = v16;
      *(_QWORD *)(v1 + 280) = v205;
      v17 = v204[3];
      *(_OWORD *)(v1 + 184) = v204[2];
      *(_OWORD *)(v1 + 200) = v17;
      v18 = v204[5];
      *(_OWORD *)(v1 + 216) = v204[4];
      *(_OWORD *)(v1 + 232) = v18;
      v19 = v204[1];
      *v7 = v204[0];
      *(_OWORD *)(v1 + 168) = v19;
      sub_1ABD97F60(v1 + 152);
      if (!v8)
        break;
      --v8;
    }
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(v1 + 328);
  }
  else
  {
    v20 = v5;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  v21 = sub_1ABF31324();
  v22 = sub_1ABF31BDC();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(_QWORD *)(v1 + 624);
  v185 = v2;
  v188 = (_QWORD *)v1;
  if (v23)
  {
    v174 = v22;
    log = v21;
    v25 = (_QWORD *)(v1 + 480);
    v26 = *(NSObject **)(v1 + 616);
    v27 = swift_slowAlloc();
    v170 = swift_slowAlloc();
    *(_QWORD *)(v1 + 464) = v170;
    *(_DWORD *)v27 = 136315394;
    sub_1ABF2FF5C();
    *(_QWORD *)(v1 + 472) = sub_1ABD1FE2C((uint64_t)v26, v24, v2);
    v28 = (_QWORD *)(v1 + 480);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_release();
    v177 = (uint8_t *)v27;
    *(_WORD *)(v27 + 12) = 2080;
    v1 = *(_QWORD *)(v20 + 16);
    v29 = MEMORY[0x1E0DEE9D8];
    if (v1)
    {
      *v25 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v1, 0);
      v30 = *v25;
      v31 = sub_1ABD9495C(v20);
      v33 = v32;
      v35 = v34 & 1;
      v189 = v25;
      v194 = v20 + 56;
      while ((v31 & 0x8000000000000000) == 0 && v31 < 1 << *(_BYTE *)(v20 + 32))
      {
        if (((*(_QWORD *)(v194 + (((unint64_t)v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
          goto LABEL_103;
        if (*(_DWORD *)(v20 + 36) != (_DWORD)v33)
          goto LABEL_104;
        v199 = v35;
        v36 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 136 * v31);
        v37 = *v36;
        v26 = v36[1];
        *v28 = v30;
        v38 = v20;
        v39 = *(_QWORD *)(v30 + 16);
        v40 = *(_QWORD *)(v30 + 24);
        sub_1ABF2FF5C();
        if (v39 >= v40 >> 1)
        {
          sub_1ABD16414(v40 > 1, v39 + 1, 1);
          v30 = *v189;
        }
        *(_QWORD *)(v30 + 16) = v39 + 1;
        v41 = v30 + 16 * v39;
        *(_QWORD *)(v41 + 32) = v37;
        *(_QWORD *)(v41 + 40) = v26;
        v42 = sub_1ABD94A00(v31, v33, v199 & 1, v38);
        v31 = v42;
        v33 = v43;
        v35 = v44 & 1;
        --v1;
        v20 = v38;
        v28 = v189;
        if (!v1)
        {
          v29 = v30;
          sub_1ABD97C9C(v42, v43, v35);
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
LABEL_19:
    v1 = (int64_t)v188;
    v188[61] = v29;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v45 = sub_1ABF316E4();
    v47 = v46;
    swift_bridgeObjectRelease();
    v188[62] = sub_1ABD1FE2C(v45, v47, v185);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v21 = log;
    _os_log_impl(&dword_1ABCEF000, log, v174, "Successfully found stocks for symbol entities matching property query=%s, results=[%s]", v177, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v170, -1, -1);
    MEMORY[0x1AF438FFC](v177, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
  }

  v26 = (v1 + 424);
  v48 = *(_QWORD *)(v1 + 664);
  v49 = *(_QWORD *)(v1 + 640);
  v50 = *(_QWORD *)(v1 + 632);
  sub_1ABF2FF68();
  v51 = sub_1ABE0B5AC(v50, v49, v20);
  v178 = v48;
  swift_release();
  swift_retain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  v52 = sub_1ABF31324();
  v20 = sub_1ABF31BDC();
  v53 = os_log_type_enabled(v52, (os_log_type_t)v20);
  v54 = *(_QWORD *)(v1 + 624);
  if (v53)
  {
    v168 = v20;
    v175 = v52;
    v20 = v1 + 440;
    v55 = *(_QWORD *)(v1 + 616);
    v56 = swift_slowAlloc();
    v166 = swift_slowAlloc();
    *(_QWORD *)(v1 + 424) = v166;
    *(_DWORD *)v56 = 136315394;
    sub_1ABF2FF5C();
    loga = (uint64_t *)(v1 + 424);
    *(_QWORD *)(v1 + 432) = sub_1ABD1FE2C(v55, v54, (uint64_t *)(v1 + 424));
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_release();
    v171 = (uint8_t *)v56;
    *(_WORD *)(v56 + 12) = 2080;
    v57 = *(_QWORD *)(v51 + 16);
    v58 = MEMORY[0x1E0DEE9D8];
    if (v57)
    {
      *(_QWORD *)v20 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v57, 0);
      v59 = *(_QWORD *)v20;
      v60 = sub_1ABD9495C(v51);
      v1 = v61;
      v63 = v62 & 1;
      v190 = (uint64_t *)v20;
      v195 = v51 + 56;
      while ((v60 & 0x8000000000000000) == 0 && v60 < 1 << *(_BYTE *)(v51 + 32))
      {
        if (((*(_QWORD *)(v195 + (((unint64_t)v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) == 0)
          goto LABEL_106;
        if (*(_DWORD *)(v51 + 36) != (_DWORD)v1)
          goto LABEL_107;
        v200 = v63;
        v64 = *(_QWORD *)(v51 + 48) + 136 * v60;
        v65 = v51;
        v26 = *(NSObject **)v64;
        v66 = *(_QWORD *)(v64 + 8);
        *(_QWORD *)v20 = v59;
        v67 = *(_QWORD *)(v59 + 16);
        v68 = *(_QWORD *)(v59 + 24);
        sub_1ABF2FF5C();
        if (v67 >= v68 >> 1)
        {
          sub_1ABD16414(v68 > 1, v67 + 1, 1);
          v59 = *v190;
        }
        *(_QWORD *)(v59 + 16) = v67 + 1;
        v69 = v59 + 16 * v67;
        *(_QWORD *)(v69 + 32) = v26;
        *(_QWORD *)(v69 + 40) = v66;
        v70 = sub_1ABD94A00(v60, v1, v200 & 1, v65);
        v60 = v70;
        v1 = v71;
        v63 = v72 & 1;
        --v57;
        v51 = v65;
        v20 = (unint64_t)v190;
        if (!v57)
        {
          v58 = v59;
          sub_1ABD97C9C(v70, v71, v63);
          v1 = (int64_t)v188;
          goto LABEL_32;
        }
      }
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
LABEL_32:
    v26 = v171;
    *(_QWORD *)(v1 + 448) = v58;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v73 = sub_1ABF316E4();
    v75 = v74;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 456) = sub_1ABD1FE2C(v73, v75, loga);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1ABCEF000, v175, v168, "Filtered stocks for symbol entities matching property query=%s, filtered=[%s]", v171, 0x16u);
    v20 = v166;
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v166, -1, -1);
    MEMORY[0x1AF438FFC](v171, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();

  }
  v186 = (uint64_t *)(v1 + 384);
  v76 = *(_QWORD *)(v1 + 600);
  if (v76)
  {
    if ((*(_BYTE *)(v1 + 688) & 1) != 0)
    {
      v51 = sub_1ABD90470(v51, v76);
    }
    else
    {
      v77 = sub_1ABD91B54(v51, v76);
      swift_release();
      v51 = v77;
    }
    swift_bridgeObjectRetain_n();
    v20 = sub_1ABF31324();
    v80 = sub_1ABF31BDC();
    if (os_log_type_enabled((os_log_t)v20, v80))
    {
      v169 = v80;
      v176 = v20;
      v81 = (_DWORD *)swift_slowAlloc();
      v167 = swift_slowAlloc();
      *v186 = v167;
      v172 = v81;
      *v81 = 136315394;
      v82 = *(_QWORD *)(v51 + 16);
      v83 = MEMORY[0x1E0DEE9D8];
      if (v82)
      {
        v84 = (uint64_t *)(v1 + 392);
        *(_QWORD *)(v1 + 392) = MEMORY[0x1E0DEE9D8];
        sub_1ABF2FF5C();
        sub_1ABD16414(0, v82, 0);
        v83 = *(_QWORD *)(v1 + 392);
        v85 = sub_1ABD9495C(v51);
        v87 = v86;
        v89 = v88 & 1;
        v191 = v51 + 56;
        while ((v85 & 0x8000000000000000) == 0 && v85 < 1 << *(_BYTE *)(v51 + 32))
        {
          if (((*(_QWORD *)(v191 + (((unint64_t)v85 >> 3) & 0xFFFFFFFFFFFFF8)) >> v85) & 1) == 0)
            goto LABEL_109;
          if (*(_DWORD *)(v51 + 36) != (_DWORD)v87)
            goto LABEL_110;
          v201 = v89;
          v90 = (uint64_t *)(*(_QWORD *)(v51 + 48) + 136 * v85);
          v196 = *v90;
          v1 = v51;
          v91 = v90[1];
          *v84 = v83;
          v20 = *(_QWORD *)(v83 + 16);
          v92 = *(_QWORD *)(v83 + 24);
          v26 = (v20 + 1);
          sub_1ABF2FF5C();
          if (v20 >= v92 >> 1)
          {
            sub_1ABD16414(v92 > 1, v20 + 1, 1);
            v83 = *v84;
          }
          *(_QWORD *)(v83 + 16) = v26;
          v93 = v83 + 16 * v20;
          *(_QWORD *)(v93 + 32) = v196;
          *(_QWORD *)(v93 + 40) = v91;
          v94 = sub_1ABD94A00(v85, v87, v201 & 1, v1);
          v85 = v94;
          v87 = v95;
          v89 = v96 & 1;
          --v82;
          v51 = v1;
          if (!v82)
          {
            sub_1ABD97C9C(v94, v95, v89);
            swift_bridgeObjectRelease();
            goto LABEL_52;
          }
        }
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
LABEL_52:
      v188[50] = v83;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v97 = sub_1ABF316E4();
      v99 = v98;
      swift_bridgeObjectRelease();
      v188[51] = sub_1ABD1FE2C(v97, v99, v186);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *((_WORD *)v172 + 6) = 2080;
      v1 = (int64_t)v188;
      v100 = sub_1ABF3001C();
      v101 = (v100 & 1) == 0;
      if ((v100 & 1) != 0)
        v102 = 6581857;
      else
        v102 = 29295;
      if (v101)
        v103 = 0xE200000000000000;
      else
        v103 = 0xE300000000000000;
      v188[52] = sub_1ABD1FE2C(v102, v103, v186);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1ABCEF000, v176, v169, "Combined stock query results into accumulated results=[%s], comparatorMode=%s", (uint8_t *)v172, 0x16u);
      v20 = v167;
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v167, -1, -1);
      MEMORY[0x1AF438FFC](v172, -1, -1);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();

    }
  }
  else
  {
    v78 = sub_1ABF31324();
    v79 = sub_1ABF31BDC();
    if (os_log_type_enabled(v78, v79))
    {
      v20 = swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1ABCEF000, v78, v79, "No existing result for symbol property queries, so storing first results", (uint8_t *)v20, 2u);
      MEMORY[0x1AF438FFC](v20, -1, -1);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();

    }
  }
  v104 = *(_QWORD *)(v1 + 608) + 1;
  if (v104 == *(_QWORD *)(v1 + 592))
  {
    v105 = (_QWORD *)(v1 + 368);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v26 = sub_1ABF31324();
    v106 = sub_1ABF31BF4();
    if (os_log_type_enabled(v26, v106))
    {
      v107 = (uint8_t *)swift_slowAlloc();
      v192 = swift_slowAlloc();
      v206[0] = v192;
      *(_DWORD *)v107 = 136315138;
      v108 = *(_QWORD *)(v51 + 16);
      v109 = MEMORY[0x1E0DEE9D8];
      if (v108)
      {
        v173 = v106;
        logb = v26;
        v184 = (_QWORD *)(v1 + 368);
        *(_QWORD *)&v204[0] = MEMORY[0x1E0DEE9D8];
        sub_1ABD16414(0, v108, 0);
        v109 = *(_QWORD *)&v204[0];
        v110 = sub_1ABD9495C(v51);
        v1 = v111;
        v113 = v112 & 1;
        v197 = v51 + 56;
        while ((v110 & 0x8000000000000000) == 0 && v110 < 1 << *(_BYTE *)(v51 + 32))
        {
          if (((*(_QWORD *)(v197 + (((unint64_t)v110 >> 3) & 0xFFFFFFFFFFFFF8)) >> v110) & 1) == 0)
            goto LABEL_112;
          if (*(_DWORD *)(v51 + 36) != (_DWORD)v1)
            goto LABEL_113;
          v202 = v113;
          v114 = *(_QWORD *)(v51 + 48) + 136 * v110;
          v115 = v51;
          v26 = *(NSObject **)v114;
          v116 = *(_QWORD *)(v114 + 8);
          *(_QWORD *)&v204[0] = v109;
          v20 = *(_QWORD *)(v109 + 16);
          v117 = *(_QWORD *)(v109 + 24);
          sub_1ABF2FF5C();
          if (v20 >= v117 >> 1)
          {
            sub_1ABD16414(v117 > 1, v20 + 1, 1);
            v109 = *(_QWORD *)&v204[0];
          }
          *(_QWORD *)(v109 + 16) = v20 + 1;
          v118 = v109 + 16 * v20;
          *(_QWORD *)(v118 + 32) = v26;
          *(_QWORD *)(v118 + 40) = v116;
          v119 = sub_1ABD94A00(v110, v1, v202 & 1, v115);
          v110 = v119;
          v1 = v120;
          v113 = v121 & 1;
          --v108;
          v51 = v115;
          if (!v108)
          {
            sub_1ABD97C9C(v119, v120, v113);
            v1 = (int64_t)v188;
            v26 = logb;
            v105 = v184;
            v106 = v173;
            goto LABEL_76;
          }
        }
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
        goto LABEL_114;
      }
LABEL_76:
      *v105 = v109;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v133 = sub_1ABF316E4();
      v135 = v134;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 376) = sub_1ABD1FE2C(v133, v135, v206);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ABCEF000, v26, v106, "Successfully applied all queries, found stocks=[%s]", v107, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v192, -1, -1);
      MEMORY[0x1AF438FFC](v107, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v136 = *(_QWORD *)(v1 + 560);
    v137 = sub_1ABD913F8(v51);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v204[0] = v137;
    sub_1ABF2FF5C();
    sub_1ABF2FF68();
    sub_1ABED985C((uint64_t *)v204, v136);
    if (v178)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    v138 = (_QWORD *)(v1 + 352);
    swift_bridgeObjectRelease();
    swift_release();
    v26 = *(NSObject **)&v204[0];
    swift_retain_n();
    v139 = sub_1ABF31324();
    v140 = sub_1ABF31BF4();
    if (os_log_type_enabled(v139, v140))
    {
      v203 = v140;
      v193 = (uint64_t *)(v1 + 360);
      v141 = (uint8_t *)swift_slowAlloc();
      v198 = swift_slowAlloc();
      v206[0] = v198;
      *(_DWORD *)v141 = 136315138;
      isa = (int64_t)v26[2].isa;
      v143 = MEMORY[0x1E0DEE9D8];
      if (isa)
      {
        v179 = v141;
        logc = v139;
        v187 = (_QWORD *)(v1 + 352);
        *(_QWORD *)&v204[0] = MEMORY[0x1E0DEE9D8];
        sub_1ABD16414(0, isa, 0);
        v143 = *(_QWORD *)&v204[0];
        v144 = *(_QWORD *)(*(_QWORD *)&v204[0] + 16);
        v145 = 16 * v144;
        v146 = v26 + 5;
        do
        {
          v147 = v146[-1].isa;
          v148 = v146->isa;
          *(_QWORD *)&v204[0] = v143;
          v149 = v144 + 1;
          v150 = *(_QWORD *)(v143 + 24);
          sub_1ABF2FF5C();
          if (v144 >= v150 >> 1)
          {
            sub_1ABD16414(v150 > 1, v149, 1);
            v143 = *(_QWORD *)&v204[0];
          }
          *(_QWORD *)(v143 + 16) = v149;
          v151 = v143 + v145;
          *(_QWORD *)(v151 + 32) = v147;
          *(_QWORD *)(v151 + 40) = v148;
          v145 += 16;
          v146 += 17;
          ++v144;
          --isa;
        }
        while (isa);
        v138 = v187;
        v1 = (int64_t)v188;
        v139 = logc;
        v141 = v179;
      }
      *v138 = v143;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v152 = sub_1ABF316E4();
      v154 = v153;
      swift_bridgeObjectRelease();
      *v193 = sub_1ABD1FE2C(v152, v154, v206);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1ABCEF000, v139, v203, "Applied sorts to sortedStocks=[%s]", v141, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v198, -1, -1);
      MEMORY[0x1AF438FFC](v141, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    if ((*(_BYTE *)(v1 + 689) & 1) != 0)
    {
      v157 = (uint64_t)v26;
LABEL_101:
      *(_QWORD *)(v1 + 672) = v157;
      v163 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 680) = v163;
      *v163 = v1;
      v163[1] = sub_1ABE07764;
      v164 = *(_QWORD *)(v1 + 576);
      v165 = *(_QWORD *)(v1 + 544);
      v163[40] = v157;
      v163[41] = v164;
      v163[39] = v165;
      return swift_task_switch();
    }
    v20 = *(_QWORD *)(v1 + 568);
    if ((v20 & 0x8000000000000000) == 0)
    {
      if (v26[2].isa >= (Class)v20)
      {
        sub_1ABF32254();
        swift_unknownObjectRetain_n();
        v155 = swift_dynamicCastClass();
        if (v155)
        {
          v156 = v20;
        }
        else
        {
          swift_release();
          v156 = *(_QWORD *)(v1 + 568);
          v155 = MEMORY[0x1E0DEE9D8];
        }
        v158 = *(_QWORD *)(v155 + 16);
        swift_release();
        if (v158 == v156)
        {
          v157 = swift_dynamicCastClass();
          if (!v157)
          {
            swift_release();
            v157 = MEMORY[0x1E0DEE9D8];
          }
          goto LABEL_98;
        }
LABEL_116:
        swift_release();
        v157 = sub_1ABD9125C((uint64_t)v26, (uint64_t)&v26[4], 0, (2 * v20) | 1);
LABEL_98:
        swift_release();
        v159 = sub_1ABF31324();
        v160 = sub_1ABF31BF4();
        if (os_log_type_enabled(v159, v160))
        {
          v161 = *(_QWORD *)(v1 + 568);
          v162 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v162 = 134217984;
          *(_QWORD *)(v1 + 344) = v161;
          sub_1ABF31D80();
          _os_log_impl(&dword_1ABCEF000, v159, v160, "Limited results down to limit=%ld", v162, 0xCu);
          MEMORY[0x1AF438FFC](v162, -1, -1);
        }

        goto LABEL_101;
      }
LABEL_115:
      __break(1u);
      goto LABEL_116;
    }
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  *(_QWORD *)(v1 + 608) = v104;
  *(_QWORD *)(v1 + 600) = v51;
  v122 = (_QWORD *)(*(_QWORD *)(v1 + 552) + 32 * v104);
  v123 = v122[4];
  *(_QWORD *)(v1 + 616) = v123;
  v124 = v122[5];
  *(_QWORD *)(v1 + 624) = v124;
  *(_QWORD *)(v1 + 632) = v122[6];
  *(_QWORD *)(v1 + 640) = v122[7];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v125 = sub_1ABF31324();
  v126 = sub_1ABF31BDC();
  if (os_log_type_enabled(v125, v126))
  {
    v127 = (uint8_t *)swift_slowAlloc();
    v128 = swift_slowAlloc();
    *(_QWORD *)&v204[0] = v128;
    *(_DWORD *)v127 = 136315138;
    sub_1ABF2FF5C();
    v188[63] = sub_1ABD1FE2C(v123, v124, (uint64_t *)v204);
    v1 = (int64_t)v188;
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_release();
    _os_log_impl(&dword_1ABCEF000, v125, v126, "Querying stocks for symbol entities matching property query=%s", v127, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v128, -1, -1);
    MEMORY[0x1AF438FFC](v127, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v129 = *(_QWORD *)(v1 + 312);
  v130 = *(_QWORD *)(v1 + 320);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 288), v129);
  *(_QWORD *)(v1 + 648) = sub_1ABD78990(v123, v124, v129, v130);
  v131 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 656) = v131;
  *v131 = v1;
  v131[1] = sub_1ABED5A38;
  return sub_1ABF31150();
}

uint64_t sub_1ABED70E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABED7130(&qword_1EEC410D0, (uint64_t (*)(_QWORD))sub_1ABED7E50, (uint64_t)qword_1EEC44CB8, a1);
}

uint64_t sub_1ABED710C@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABED7130(&qword_1EEC410D8, (uint64_t (*)(_QWORD))sub_1ABED7ED4, (uint64_t)qword_1EEC44CD0, a1);
}

uint64_t sub_1ABED7130@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t sub_1ABED71C0@<X0>(uint64_t a1@<X8>)
{
  return static SymbolQuery.findIntentDescription.getter(a1);
}

uint64_t sub_1ABED71D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  v12 = *v6;
  v13 = a3 & 1;
  v14 = a6 & 1;
  v15 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *(_QWORD *)v15 = v7;
  *(_QWORD *)(v15 + 8) = sub_1ABD7E2B8;
  *(_QWORD *)(v15 + 576) = v12;
  *(_BYTE *)(v15 + 689) = v14;
  *(_QWORD *)(v15 + 568) = a5;
  *(_QWORD *)(v15 + 560) = a4;
  *(_BYTE *)(v15 + 688) = v13;
  *(_QWORD *)(v15 + 552) = a2;
  *(_QWORD *)(v15 + 544) = a1;
  return swift_task_switch();
}

uint64_t sub_1ABED727C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  _QWORD v39[3];
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;

  v7 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v7);
  v44 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v45 = (uint64_t)v39 - v10;
  sub_1ABED9A80(0, &qword_1EEC44D68, &qword_1ED3467A8, (uint64_t)&protocol conformance descriptor for SymbolEntity, MEMORY[0x1E0C90C58]);
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v39 - v14;
  v16 = *(_OWORD *)(a1 + 112);
  v64 = *(_OWORD *)(a1 + 96);
  v65 = v16;
  v66 = *(_QWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 48);
  v60 = *(_OWORD *)(a1 + 32);
  v61 = v17;
  v18 = *(_OWORD *)(a1 + 80);
  v62 = *(_OWORD *)(a1 + 64);
  v63 = v18;
  v19 = *(_OWORD *)(a1 + 16);
  v58 = *(_OWORD *)a1;
  v59 = v19;
  v20 = *(_OWORD *)(a2 + 112);
  v73 = *(_OWORD *)(a2 + 96);
  v74 = v20;
  v75 = *(_QWORD *)(a2 + 128);
  v21 = *(_OWORD *)(a2 + 48);
  v69 = *(_OWORD *)(a2 + 32);
  v70 = v21;
  v22 = *(_OWORD *)(a2 + 80);
  v71 = *(_OWORD *)(a2 + 64);
  v72 = v22;
  v23 = *(_OWORD *)(a2 + 16);
  v67 = *(_OWORD *)a2;
  v68 = v23;
  v24 = *(_QWORD *)(a3 + 16);
  if (v24)
  {
    v25 = a3;
    v26 = a3 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v27 = *(_QWORD *)(v13 + 72);
    v39[2] = v3;
    v40 = v27;
    v42 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v43 = v13;
    v39[1] = v25;
    sub_1ABF2FF5C();
    v41 = MEMORY[0x1E0DEE9B8] + 8;
    v28 = MEMORY[0x1E0DEA968];
    v76 = v12;
    while (1)
    {
      v42(v15, v26, v12);
      v55 = v64;
      v56 = v65;
      v57 = v66;
      v51 = v60;
      v52 = v61;
      v53 = v62;
      v54 = v63;
      v49 = v58;
      v50 = v59;
      sub_1ABD97ECC((uint64_t)&v58);
      v29 = v45;
      SymbolEntity.init(from:)(&v49, v45);
      sub_1ABF2FD94();
      swift_getAtPartialKeyPath();
      swift_release();
      sub_1ABD64AD4(v29);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        MEMORY[0x1AF436E0C]("Encountered a SymbolEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 136, 2, MEMORY[0x1E0DEE9D8]);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v12);
        return 1;
      }
      v46 = v24;
      v30 = v47;
      v31 = v48;
      v55 = v73;
      v56 = v74;
      v57 = v75;
      v51 = v69;
      v52 = v70;
      v53 = v71;
      v54 = v72;
      v49 = v67;
      v50 = v68;
      sub_1ABD97ECC((uint64_t)&v67);
      v32 = v44;
      SymbolEntity.init(from:)(&v49, v44);
      sub_1ABF2FD94();
      v33 = v28;
      swift_getAtPartialKeyPath();
      swift_release();
      sub_1ABD64AD4(v32);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      v34 = v47;
      v35 = v48;
      if ((sub_1ABF2FDA0() & 1) != 0)
      {
        if (v30 == v34 && v31 == v35)
        {
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v76);
          goto LABEL_4;
        }
        v37 = sub_1ABF3223C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v76);
        v28 = v33;
        if ((v37 & 1) != 0)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
        if (v34 == v30 && v35 == v31)
        {
          (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v76);
          swift_bridgeObjectRelease_n();
LABEL_4:
          v28 = v33;
          goto LABEL_5;
        }
        v36 = sub_1ABF3223C();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v76);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v28 = v33;
        if ((v36 & 1) != 0)
          goto LABEL_17;
      }
LABEL_5:
      v26 += v40;
      v24 = v46 - 1;
      v12 = v76;
      if (v46 == 1)
        goto LABEL_17;
    }
  }
  return 1;
}

uint64_t sub_1ABED76E0(char *a1, char *__src, unint64_t a3, char *__dst, uint64_t a5)
{
  uint64_t v5;
  char *v7;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;
  char *v31;
  BOOL v32;
  char *v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;
  char v50;
  uint64_t v51;
  char *v52;
  BOOL v53;
  char *v54;
  uint64_t result;
  char *v56;
  _BYTE v58[136];
  _BYTE __dsta[136];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;

  v7 = __dst;
  v9 = __src;
  v10 = __src - a1;
  v11 = (__src - a1) / 136;
  v12 = a3 - (_QWORD)__src;
  v13 = (uint64_t)(a3 - (_QWORD)__src) / 136;
  v80 = a1;
  v79 = __dst;
  if (v11 >= v13)
  {
    if (v12 < -135)
      goto LABEL_50;
    if (__dst != __src || &__src[136 * v13] <= __dst)
      memmove(__dst, __src, 136 * v13);
    v34 = &v7[136 * v13];
    v78 = v34;
    v80 = v9;
    if (a1 >= v9 || v12 < 136)
      goto LABEL_49;
    v35 = (char *)(a3 - 136);
    v56 = v7;
    while (1)
    {
      v60 = *(_OWORD *)(v34 - 136);
      v36 = *(_OWORD *)(v34 - 120);
      v37 = *(_OWORD *)(v34 - 104);
      v38 = *(_OWORD *)(v34 - 72);
      v63 = *(_OWORD *)(v34 - 88);
      v64 = v38;
      v61 = v36;
      v62 = v37;
      v39 = *(_OWORD *)(v34 - 56);
      v40 = *(_OWORD *)(v34 - 40);
      v41 = *(_OWORD *)(v34 - 24);
      v68 = *((_QWORD *)v34 - 1);
      v66 = v40;
      v67 = v41;
      v65 = v39;
      memmove(__dsta, v34 - 136, 0x88uLL);
      v42 = v9 - 136;
      v69 = *(_OWORD *)(v9 - 136);
      v43 = *(_OWORD *)(v9 - 120);
      v44 = *(_OWORD *)(v9 - 104);
      v45 = *(_OWORD *)(v9 - 72);
      v72 = *(_OWORD *)(v9 - 88);
      v73 = v45;
      v70 = v43;
      v71 = v44;
      v46 = *(_OWORD *)(v9 - 56);
      v47 = *(_OWORD *)(v9 - 40);
      v48 = *(_OWORD *)(v9 - 24);
      v77 = *((_QWORD *)v9 - 1);
      v75 = v47;
      v76 = v48;
      v74 = v46;
      memmove(v58, v9 - 136, 0x88uLL);
      sub_1ABD97ECC((uint64_t)&v60);
      sub_1ABD97ECC((uint64_t)&v69);
      v49 = sub_1ABED727C((uint64_t)__dsta, (uint64_t)v58, a5);
      if (v5)
      {
        v78 = v34;
        v80 = v9;
LABEL_45:
        sub_1ABD97F60((uint64_t)&v69);
        sub_1ABD97F60((uint64_t)&v60);
        goto LABEL_49;
      }
      v50 = v49;
      v51 = a5;
      v52 = v35 + 136;
      sub_1ABD97F60((uint64_t)&v69);
      sub_1ABD97F60((uint64_t)&v60);
      if ((v50 & 1) != 0)
      {
        if (v52 == v9)
        {
          v53 = v35 >= v9;
          v9 -= 136;
          goto LABEL_32;
        }
        v9 -= 136;
      }
      else
      {
        v42 = v34 - 136;
        if (v52 == v34)
        {
          v53 = v35 >= v34;
          v34 -= 136;
LABEL_32:
          a5 = v51;
          v54 = a1;
          if (!v53)
            goto LABEL_39;
          goto LABEL_38;
        }
        v34 -= 136;
      }
      a5 = v51;
      v54 = a1;
LABEL_38:
      memmove(v35, v42, 0x88uLL);
LABEL_39:
      if (v34 <= v56 || v9 <= v54)
      {
        v78 = v34;
        v80 = v9;
        goto LABEL_49;
      }
      v35 -= 136;
    }
  }
  if (v10 < -135)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    result = sub_1ABF3202C();
    __break(1u);
    return result;
  }
  v14 = a1;
  if (__dst != a1 || &a1[136 * v11] <= __dst)
    memmove(__dst, a1, 136 * v11);
  v15 = &v7[136 * v11];
  v78 = v15;
  if ((unint64_t)v9 >= a3 || v10 < 136)
    goto LABEL_49;
  v16 = v7;
  while (1)
  {
    v60 = *(_OWORD *)v9;
    v17 = *((_OWORD *)v9 + 1);
    v18 = *((_OWORD *)v9 + 2);
    v19 = *((_OWORD *)v9 + 4);
    v63 = *((_OWORD *)v9 + 3);
    v64 = v19;
    v61 = v17;
    v62 = v18;
    v20 = *((_OWORD *)v9 + 5);
    v21 = *((_OWORD *)v9 + 6);
    v22 = *((_OWORD *)v9 + 7);
    v68 = *((_QWORD *)v9 + 16);
    v66 = v21;
    v67 = v22;
    v65 = v20;
    memmove(__dsta, v9, 0x88uLL);
    v69 = *(_OWORD *)v16;
    v23 = *((_OWORD *)v16 + 1);
    v24 = *((_OWORD *)v16 + 2);
    v25 = *((_OWORD *)v16 + 4);
    v72 = *((_OWORD *)v16 + 3);
    v73 = v25;
    v70 = v23;
    v71 = v24;
    v26 = *((_OWORD *)v16 + 5);
    v27 = *((_OWORD *)v16 + 6);
    v28 = *((_OWORD *)v16 + 7);
    v77 = *((_QWORD *)v16 + 16);
    v75 = v27;
    v76 = v28;
    v74 = v26;
    memmove(v58, v16, 0x88uLL);
    sub_1ABD97ECC((uint64_t)&v60);
    sub_1ABD97ECC((uint64_t)&v69);
    v29 = sub_1ABED727C((uint64_t)__dsta, (uint64_t)v58, a5);
    if (v5)
    {
      v79 = v7;
      v80 = v14;
      goto LABEL_45;
    }
    v30 = v29;
    sub_1ABD97F60((uint64_t)&v69);
    sub_1ABD97F60((uint64_t)&v60);
    if ((v30 & 1) == 0)
    {
      v7 = v16 + 136;
      v31 = v16;
      v32 = v14 == v16;
      v16 += 136;
      if (v32)
        goto LABEL_16;
LABEL_15:
      memmove(v14, v31, 0x88uLL);
      goto LABEL_16;
    }
    v31 = v9;
    v32 = v14 == v9;
    v9 += 136;
    if (!v32)
      goto LABEL_15;
LABEL_16:
    v33 = v14 + 136;
    if (v16 >= v15)
    {
      v79 = v7;
      goto LABEL_48;
    }
    if ((unint64_t)v9 >= a3)
      break;
    v14 += 136;
  }
  v79 = v7;
  v33 = v14 + 136;
LABEL_48:
  v80 = v33;
LABEL_49:
  sub_1ABE8BF98((void **)&v80, (const void **)&v79, &v78);
  swift_bridgeObjectRelease();
  return 1;
}

unint64_t sub_1ABED7B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  __int128 v38[8];
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  sub_1ABCF5A54(0, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v35 - v6;
  v49 = type metadata accessor for SymbolEntity();
  v8 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v37 = (uint64_t)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v36 = (uint64_t)v35 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x1E0DEE9D8];
  v35[1] = v2;
  sub_1ABF2FF5C();
  v35[0] = a1;
  v13 = (uint64_t *)(a1 + 40);
  v14 = MEMORY[0x1E0DEE9D8];
  do
  {
    v15 = *(v13 - 1);
    v16 = *v13;
    v17 = *(_QWORD *)(a2 + 16);
    sub_1ABF2FF5C();
    if (v17)
    {
      sub_1ABF2FF5C();
      v18 = sub_1ABD00F9C(v15, v16);
      if ((v19 & 1) != 0)
      {
        v20 = *(_QWORD *)(a2 + 56) + 136 * v18;
        v40 = *(_OWORD *)v20;
        v21 = *(_OWORD *)(v20 + 64);
        v23 = *(_OWORD *)(v20 + 16);
        v22 = *(_OWORD *)(v20 + 32);
        v43 = *(_OWORD *)(v20 + 48);
        v44 = v21;
        v41 = v23;
        v42 = v22;
        v25 = *(_OWORD *)(v20 + 96);
        v24 = *(_OWORD *)(v20 + 112);
        v26 = *(_OWORD *)(v20 + 80);
        v48 = *(_QWORD *)(v20 + 128);
        v46 = v25;
        v47 = v24;
        v45 = v26;
        sub_1ABD97ECC((uint64_t)&v40);
        swift_bridgeObjectRelease();
        v38[6] = v46;
        v38[7] = v47;
        v39 = v48;
        v38[2] = v42;
        v38[3] = v43;
        v38[4] = v44;
        v38[5] = v45;
        v38[0] = v40;
        v38[1] = v41;
        SymbolEntity.init(from:)(v38, (uint64_t)v7);
        v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v28 = v7;
        v29 = 0;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v28 = v7;
    v29 = 1;
LABEL_10:
    v30 = v49;
    v27(v28, v29, 1, v49);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v30) == 1)
    {
      sub_1ABDAC710((uint64_t)v7);
    }
    else
    {
      v31 = v36;
      sub_1ABDAC75C((uint64_t)v7, v36);
      sub_1ABDAC75C(v31, v37);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD82AA4(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
      v33 = *(_QWORD *)(v14 + 16);
      v32 = *(_QWORD *)(v14 + 24);
      if (v33 >= v32 >> 1)
        v14 = sub_1ABD82AA4(v32 > 1, v33 + 1, 1, v14);
      *(_QWORD *)(v14 + 16) = v33 + 1;
      sub_1ABDAC75C(v37, v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v33);
    }
    v13 += 2;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1ABED7E50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC44D10)
  {
    type metadata accessor for SymbolEntity();
    sub_1ABCFE22C(&qword_1ED3467A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    v0 = sub_1ABF2FF2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC44D10);
  }
}

void sub_1ABED7ED4(uint64_t a1)
{
  sub_1ABED9A80(a1, &qword_1EEC44D18, &qword_1ED3467A8, (uint64_t)&protocol conformance descriptor for SymbolEntity, MEMORY[0x1E0C918C8]);
}

void sub_1ABED7EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;

  v63 = a1;
  v9 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v9);
  v67 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v69 = (uint64_t)&v57 - v12;
  sub_1ABED9A80(0, &qword_1EEC44D68, &qword_1ED3467A8, (uint64_t)&protocol conformance descriptor for SymbolEntity, MEMORY[0x1E0C90C58]);
  v72 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v57 - v15;
  v58 = a2;
  if (a3 != a2)
  {
    v17 = v14;
    v18 = *a4;
    v62 = *(_QWORD *)(a5 + 16);
    v68 = MEMORY[0x1E0DEE9B8] + 8;
    v19 = MEMORY[0x1E0DEA968];
    v60 = a5;
    v61 = v18;
    v66 = v14;
    do
    {
      v59 = a3;
      v20 = a3;
      v21 = v62;
      do
      {
        v22 = v18 + 136 * v20;
        v84 = *(_OWORD *)v22;
        v23 = *(_OWORD *)(v22 + 16);
        v24 = *(_OWORD *)(v22 + 32);
        v25 = *(_OWORD *)(v22 + 64);
        v87 = *(_OWORD *)(v22 + 48);
        v88 = v25;
        v85 = v23;
        v86 = v24;
        v26 = *(_OWORD *)(v22 + 80);
        v27 = *(_OWORD *)(v22 + 96);
        v28 = *(_OWORD *)(v22 + 112);
        v92 = *(_QWORD *)(v22 + 128);
        v90 = v27;
        v91 = v28;
        v89 = v26;
        v93 = *(_OWORD *)(v22 - 136);
        v29 = *(_OWORD *)(v22 - 120);
        v30 = *(_OWORD *)(v22 - 104);
        v31 = *(_OWORD *)(v22 - 72);
        v96 = *(_OWORD *)(v22 - 88);
        v97 = v31;
        v94 = v29;
        v95 = v30;
        v32 = *(_OWORD *)(v22 - 56);
        v33 = *(_OWORD *)(v22 - 40);
        v34 = *(_OWORD *)(v22 - 24);
        v101 = *(_QWORD *)(v22 - 8);
        v99 = v33;
        v100 = v34;
        v98 = v32;
        if (!v21)
          goto LABEL_28;
        v64 = v18 + 136 * v20;
        v65 = v20;
        v35 = v72;
        v36 = a5 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
        sub_1ABD97ECC((uint64_t)&v84);
        sub_1ABD97ECC((uint64_t)&v93);
        sub_1ABF2FF5C();
        v37 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
        v70 = *(_QWORD *)(v35 + 72);
        v71 = v37;
        v38 = v21;
        v37(v16, v36, v17);
        while (1)
        {
          v81 = v90;
          v82 = v91;
          v83 = v92;
          v77 = v86;
          v78 = v87;
          v79 = v88;
          v80 = v89;
          v75 = v84;
          v76 = v85;
          sub_1ABD97ECC((uint64_t)&v84);
          v40 = v69;
          SymbolEntity.init(from:)(&v75, v69);
          sub_1ABF2FD94();
          swift_getAtPartialKeyPath();
          swift_release();
          sub_1ABD64AD4(v40);
          if (!swift_dynamicCast())
          {
            a5 = v60;
            swift_bridgeObjectRelease();
LABEL_24:
            MEMORY[0x1AF436E0C]("Encountered a SymbolEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 136, 2, MEMORY[0x1E0DEE9D8]);
            (*(void (**)(char *, uint64_t))(v72 + 8))(v16, v17);
            goto LABEL_26;
          }
          v102 = v36;
          v42 = v73;
          v41 = v74;
          v81 = v99;
          v82 = v100;
          v83 = v101;
          v77 = v95;
          v78 = v96;
          v79 = v97;
          v80 = v98;
          v75 = v93;
          v76 = v94;
          sub_1ABD97ECC((uint64_t)&v93);
          v43 = v19;
          v44 = v67;
          SymbolEntity.init(from:)(&v75, v67);
          sub_1ABF2FD94();
          swift_getAtPartialKeyPath();
          swift_release();
          v45 = v44;
          v19 = v43;
          sub_1ABD64AD4(v45);
          if ((swift_dynamicCast() & 1) == 0)
          {
            a5 = v60;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_24;
          }
          v47 = v73;
          v46 = v74;
          if ((sub_1ABF2FDA0() & 1) != 0)
          {
            if (v42 == v47 && v41 == v46)
            {
              swift_bridgeObjectRelease_n();
              v17 = v66;
              (*(void (**)(char *, uint64_t))(v72 + 8))(v16, v66);
              goto LABEL_7;
            }
            v50 = sub_1ABF3223C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v17 = v66;
            (*(void (**)(char *, uint64_t))(v72 + 8))(v16, v66);
            v39 = v102;
            if ((v50 & 1) != 0)
            {
LABEL_21:
              v51 = v60;
              swift_bridgeObjectRelease();
              v21 = v62;
              v19 = v43;
              a5 = v51;
              goto LABEL_27;
            }
          }
          else
          {
            if (v47 == v42 && v46 == v41)
            {
              v17 = v66;
              (*(void (**)(char *, uint64_t))(v72 + 8))(v16, v66);
              swift_bridgeObjectRelease_n();
LABEL_7:
              v39 = v102;
              goto LABEL_8;
            }
            v48 = sub_1ABF3223C();
            v49 = v66;
            (*(void (**)(char *, uint64_t))(v72 + 8))(v16, v66);
            swift_bridgeObjectRelease();
            v17 = v49;
            swift_bridgeObjectRelease();
            v39 = v102;
            if ((v48 & 1) != 0)
              goto LABEL_21;
          }
LABEL_8:
          v36 = v39 + v70;
          --v38;
          v19 = v43;
          if (!v38)
            break;
          v71(v16, v36, v17);
        }
        a5 = v60;
        swift_bridgeObjectRelease();
LABEL_26:
        v21 = v62;
LABEL_27:
        sub_1ABD97F60((uint64_t)&v93);
        sub_1ABD97F60((uint64_t)&v84);
        v18 = v61;
        v22 = v64;
        v20 = v65;
LABEL_28:
        if (!v18)
        {
          __break(1u);
          return;
        }
        --v20;
        v52 = v22 - 136;
        v80 = *(_OWORD *)(v22 + 80);
        v81 = *(_OWORD *)(v22 + 96);
        v82 = *(_OWORD *)(v22 + 112);
        v83 = *(_QWORD *)(v22 + 128);
        v76 = *(_OWORD *)(v22 + 16);
        v77 = *(_OWORD *)(v22 + 32);
        v78 = *(_OWORD *)(v22 + 48);
        v79 = *(_OWORD *)(v22 + 64);
        v75 = *(_OWORD *)v22;
        v53 = *(_OWORD *)(v22 - 56);
        *(_OWORD *)(v22 + 64) = *(_OWORD *)(v22 - 72);
        *(_OWORD *)(v22 + 80) = v53;
        v54 = *(_OWORD *)(v22 - 24);
        *(_OWORD *)(v22 + 96) = *(_OWORD *)(v22 - 40);
        *(_OWORD *)(v22 + 112) = v54;
        *(_QWORD *)(v22 + 128) = *(_QWORD *)(v22 - 8);
        v55 = *(_OWORD *)(v22 - 88);
        *(_OWORD *)(v22 + 32) = *(_OWORD *)(v22 - 104);
        *(_OWORD *)(v22 + 48) = v55;
        v56 = *(_OWORD *)(v22 - 120);
        *(_OWORD *)v22 = *(_OWORD *)(v22 - 136);
        *(_OWORD *)(v22 + 16) = v56;
        *(_OWORD *)(v52 + 64) = v79;
        *(_OWORD *)(v52 + 80) = v80;
        *(_OWORD *)(v52 + 96) = v81;
        *(_OWORD *)(v52 + 112) = v82;
        *(_QWORD *)(v52 + 128) = v83;
        *(_OWORD *)(v52 + 16) = v76;
        *(_OWORD *)(v52 + 32) = v77;
        *(_OWORD *)(v52 + 48) = v78;
        *(_OWORD *)v52 = v75;
      }
      while (v20 != v63);
      a3 = v59 + 1;
    }
    while (v59 + 1 != v58);
  }
}

uint64_t sub_1ABED850C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  _OWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  char *v101;
  void (*v102)(char *, char *, uint64_t);
  char v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  __int128 v107;
  char v108;
  uint64_t v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  BOOL v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  char v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  BOOL v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  unint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  unint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  unint64_t v181;
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  char *v186;
  unint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  void (*v215)(char *, char *, uint64_t);
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  uint64_t v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  uint64_t v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  uint64_t v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  uint64_t v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  uint64_t v263;
  char *v264;

  v5 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v5);
  v211 = (uint64_t)&v189 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v213 = (uint64_t)&v189 - v8;
  MEMORY[0x1E0C80A78](v9);
  v200 = (uint64_t)&v189 - v10;
  MEMORY[0x1E0C80A78](v11);
  v202 = (uint64_t)&v189 - v12;
  sub_1ABED9A80(0, &qword_1EEC44D68, &qword_1ED3467A8, (uint64_t)&protocol conformance descriptor for SymbolEntity, MEMORY[0x1E0C90C58]);
  v14 = v13;
  v216 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v189 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v203 = (char *)&v189 - v18;
  v192 = a1;
  v19 = a1[1];
  v209 = a2;
  swift_bridgeObjectRetain_n();
  v20 = sub_1ABF321E8();
  if (v20 >= v19)
  {
    if (v19 < 0)
      goto LABEL_179;
    if (v19)
    {
      v24 = v209;
      sub_1ABF2FF5C();
      sub_1ABED7EF8(0, v19, 1, v192, v24);
    }
    return swift_bridgeObjectRelease_n();
  }
  if (v19 >= 0)
    v21 = v19;
  else
    v21 = v19 + 1;
  if (v19 < -1)
    goto LABEL_187;
  v191 = v20;
  v199 = v2;
  if (v19 < 2)
  {
    v197 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v190 = MEMORY[0x1E0DEE9D8];
    if (v19 != 1)
    {
      v116 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v173 = (char *)MEMORY[0x1E0DEE9D8];
      if (v116 < 2)
      {
LABEL_156:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v190 + 16) = 0;
        swift_bridgeObjectRelease_n();
        return swift_bridgeObjectRelease();
      }
LABEL_143:
      v174 = *v192;
      v216 = *v192;
      v175 = v209;
      while (1)
      {
        v176 = v116 - 2;
        if (v116 < 2)
          goto LABEL_173;
        if (!v174)
          goto LABEL_186;
        v177 = v173;
        v178 = *(_QWORD *)&v173[16 * v176 + 32];
        v179 = *(_QWORD *)&v173[16 * v116 + 24];
        v180 = (char *)(v174 + 136 * v178);
        v264 = (char *)(v174 + 136 * *(_QWORD *)&v173[16 * v116 + 16]);
        v181 = v174 + 136 * v179;
        sub_1ABF2FF5C();
        v182 = v180;
        v183 = v199;
        sub_1ABED76E0(v182, v264, v181, v197, v175);
        v199 = v183;
        if (v183)
          goto LABEL_156;
        if (v179 < v178)
          goto LABEL_175;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v177 = sub_1ABE8C050((uint64_t)v177);
        if (v176 >= *((_QWORD *)v177 + 2))
          goto LABEL_176;
        v184 = v177;
        v185 = v177 + 32;
        v186 = &v177[16 * v176 + 32];
        *(_QWORD *)v186 = v178;
        *((_QWORD *)v186 + 1) = v179;
        v187 = *((_QWORD *)v177 + 2);
        if (v116 > v187)
          goto LABEL_177;
        v188 = v184;
        memmove(&v185[16 * v116 - 16], &v185[16 * v116], 16 * (v187 - v116));
        *((_QWORD *)v188 + 2) = v187 - 1;
        v116 = v187 - 1;
        v173 = v188;
        v174 = v216;
        if (v187 <= 2)
          goto LABEL_156;
      }
    }
  }
  else
  {
    v22 = v21 >> 1;
    v23 = sub_1ABF31A74();
    *(_QWORD *)(v23 + 16) = v22;
    v190 = v23;
    v197 = (char *)(v23 + 32);
  }
  v26 = 0;
  v27 = *v192;
  v196 = v19 - 1;
  v189 = v27 - 136;
  v201 = MEMORY[0x1E0DEE9B8] + 8;
  v193 = (char *)MEMORY[0x1E0DEE9D8];
  v194 = v19;
  v212 = v14;
  v210 = v16;
  v206 = v27;
  while (1)
  {
    v28 = v26;
    v29 = v26 + 1;
    v148 = v26 + 1 < v19;
    v30 = v193;
    v205 = v26;
    if (!v148)
    {
      v75 = v26 + 1;
LABEL_41:
      if (v75 >= v194)
        goto LABEL_89;
      v76 = v75 - v28;
      if (__OFSUB__(v75, v28))
        goto LABEL_178;
      goto LABEL_48;
    }
    v31 = v27 + 136 * v29;
    v246 = *(_OWORD *)v31;
    v32 = *(_OWORD *)(v31 + 16);
    v33 = *(_OWORD *)(v31 + 32);
    v34 = *(_OWORD *)(v31 + 64);
    v249 = *(_OWORD *)(v31 + 48);
    v250 = v34;
    v247 = v32;
    v248 = v33;
    v35 = *(_OWORD *)(v31 + 80);
    v36 = *(_OWORD *)(v31 + 96);
    v37 = *(_OWORD *)(v31 + 112);
    v254 = *(_QWORD *)(v31 + 128);
    v252 = v36;
    v253 = v37;
    v251 = v35;
    v242 = *(_OWORD *)(v31 + 80);
    v243 = *(_OWORD *)(v31 + 96);
    v244 = *(_OWORD *)(v31 + 112);
    v245 = *(_QWORD *)(v31 + 128);
    v238 = *(_OWORD *)(v31 + 16);
    v239 = *(_OWORD *)(v31 + 32);
    v240 = *(_OWORD *)(v31 + 48);
    v241 = *(_OWORD *)(v31 + 64);
    v237 = *(_OWORD *)v31;
    v38 = v27 + 136 * v26;
    v255 = *(_OWORD *)v38;
    v39 = *(_OWORD *)(v38 + 16);
    v40 = *(_OWORD *)(v38 + 32);
    v41 = *(_OWORD *)(v38 + 64);
    v258 = *(_OWORD *)(v38 + 48);
    v259 = v41;
    v256 = v39;
    v257 = v40;
    v42 = *(_OWORD *)(v38 + 80);
    v43 = *(_OWORD *)(v38 + 96);
    v44 = *(_OWORD *)(v38 + 112);
    v263 = *(_QWORD *)(v38 + 128);
    v261 = v43;
    v262 = v44;
    v260 = v42;
    v233 = *(_OWORD *)(v38 + 80);
    v234 = *(_OWORD *)(v38 + 96);
    v235 = *(_OWORD *)(v38 + 112);
    v236 = *(_QWORD *)(v38 + 128);
    v229 = *(_OWORD *)(v38 + 16);
    v230 = *(_OWORD *)(v38 + 32);
    v231 = *(_OWORD *)(v38 + 48);
    v232 = *(_OWORD *)(v38 + 64);
    v228 = *(_OWORD *)v38;
    sub_1ABD97ECC((uint64_t)&v246);
    sub_1ABD97ECC((uint64_t)&v255);
    v45 = v199;
    LODWORD(v207) = sub_1ABED727C((uint64_t)&v237, (uint64_t)&v228, v209);
    v199 = v45;
    if (v45)
    {
      sub_1ABD97F60((uint64_t)&v255);
      sub_1ABD97F60((uint64_t)&v246);
      goto LABEL_156;
    }
    sub_1ABD97F60((uint64_t)&v255);
    sub_1ABD97F60((uint64_t)&v246);
    if (v28 + 2 >= v194)
    {
      if ((v207 & 1) != 0)
      {
        v27 = v206;
        v75 = v28 + 2;
LABEL_57:
        if (v28 >= v75)
          goto LABEL_89;
        v79 = v30;
        v80 = (_OWORD *)(v189 + 136 * v75);
        v81 = v28;
        v82 = v75;
        v83 = v81;
        v84 = (_OWORD *)(v27 + 136 * v81);
        while (1)
        {
          if (v83 != --v75)
          {
            if (!v27)
              goto LABEL_185;
            v242 = v84[5];
            v243 = v84[6];
            v244 = v84[7];
            v245 = *((_QWORD *)v84 + 16);
            v238 = v84[1];
            v239 = v84[2];
            v240 = v84[3];
            v241 = v84[4];
            v237 = *v84;
            memmove(v84, v80, 0x88uLL);
            v80[5] = v242;
            v80[6] = v243;
            v80[7] = v244;
            *((_QWORD *)v80 + 16) = v245;
            v80[1] = v238;
            v80[2] = v239;
            v80[3] = v240;
            v80[4] = v241;
            *v80 = v237;
            v27 = v206;
          }
          ++v83;
          v80 = (_OWORD *)((char *)v80 - 136);
          v84 = (_OWORD *)((char *)v84 + 136);
          if (v83 >= v75)
          {
            v75 = v82;
            v28 = v205;
            v30 = v79;
            goto LABEL_89;
          }
        }
      }
      v27 = v206;
      v75 = v28 + 2;
      goto LABEL_41;
    }
    v46 = *(char **)(v209 + 16);
    v198 = v28 + 2;
    v47 = v28 + 2;
    v27 = v206;
    v204 = v46;
    while (1)
    {
      v48 = v27 + 136 * v47;
      v228 = *(_OWORD *)v48;
      v49 = *(_OWORD *)(v48 + 16);
      v50 = *(_OWORD *)(v48 + 32);
      v51 = *(_OWORD *)(v48 + 64);
      v231 = *(_OWORD *)(v48 + 48);
      v232 = v51;
      v229 = v49;
      v230 = v50;
      v52 = *(_OWORD *)(v48 + 80);
      v53 = *(_OWORD *)(v48 + 96);
      v54 = *(_OWORD *)(v48 + 112);
      v236 = *(_QWORD *)(v48 + 128);
      v234 = v53;
      v235 = v54;
      v233 = v52;
      v55 = v27 + 136 * v29;
      v237 = *(_OWORD *)v55;
      v56 = *(_OWORD *)(v55 + 16);
      v57 = *(_OWORD *)(v55 + 32);
      v58 = *(_OWORD *)(v55 + 64);
      v240 = *(_OWORD *)(v55 + 48);
      v241 = v58;
      v238 = v56;
      v239 = v57;
      v59 = *(_OWORD *)(v55 + 80);
      v60 = *(_OWORD *)(v55 + 96);
      v61 = *(_OWORD *)(v55 + 112);
      v245 = *(_QWORD *)(v55 + 128);
      v243 = v60;
      v244 = v61;
      v242 = v59;
      if (v46)
      {
        v208 = v47;
        v62 = v216;
        v63 = (char *)(v209
                     + ((*(unsigned __int8 *)(v216 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v216 + 80)));
        sub_1ABF2FF5C();
        sub_1ABD97ECC((uint64_t)&v228);
        sub_1ABD97ECC((uint64_t)&v237);
        v64 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
        v214 = *(char **)(v62 + 72);
        v215 = v64;
        v65 = v46;
        while (1)
        {
          v67 = v203;
          v215(v203, v63, v14);
          v225 = v234;
          v226 = v235;
          v227 = v236;
          v221 = v230;
          v222 = v231;
          v223 = v232;
          v224 = v233;
          v219 = v228;
          v220 = v229;
          sub_1ABD97ECC((uint64_t)&v228);
          v68 = v202;
          SymbolEntity.init(from:)(&v219, v202);
          sub_1ABF2FD94();
          swift_getAtPartialKeyPath();
          swift_release();
          sub_1ABD64AD4(v68);
          if (!swift_dynamicCast())
            break;
          v264 = v63;
          v69 = v217;
          v70 = v218;
          v225 = v243;
          v226 = v244;
          v227 = v245;
          v221 = v239;
          v222 = v240;
          v223 = v241;
          v224 = v242;
          v219 = v237;
          v220 = v238;
          sub_1ABD97ECC((uint64_t)&v237);
          v71 = v200;
          SymbolEntity.init(from:)(&v219, v200);
          sub_1ABF2FD94();
          swift_getAtPartialKeyPath();
          swift_release();
          sub_1ABD64AD4(v71);
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            break;
          }
          v72 = v217;
          v73 = v218;
          if ((sub_1ABF2FDA0() & 1) != 0)
          {
            if (v69 == v72 && v70 == v73)
            {
              swift_bridgeObjectRelease_n();
              v14 = v212;
              (*(void (**)(char *, uint64_t))(v216 + 8))(v67, v212);
            }
            else
            {
              v66 = sub_1ABF3223C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v14 = v212;
              (*(void (**)(char *, uint64_t))(v216 + 8))(v67, v212);
              if ((v66 & 1) != 0)
                goto LABEL_33;
            }
          }
          else if (v72 == v69 && v73 == v70)
          {
            v14 = v212;
            (*(void (**)(char *, uint64_t))(v216 + 8))(v67, v212);
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v74 = sub_1ABF3223C();
            v14 = v212;
            (*(void (**)(char *, uint64_t))(v216 + 8))(v67, v212);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v74 & 1) != 0)
            {
LABEL_33:
              swift_bridgeObjectRelease();
              goto LABEL_37;
            }
          }
          v63 = &v214[(_QWORD)v264];
          if (!--v65)
            goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        MEMORY[0x1AF436E0C]("Encountered a SymbolEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 136, 2, MEMORY[0x1E0DEE9D8]);
        (*(void (**)(char *, uint64_t))(v216 + 8))(v203, v14);
LABEL_37:
        v16 = v210;
        v46 = v204;
        v28 = v205;
        v47 = v208;
        sub_1ABD97F60((uint64_t)&v237);
        sub_1ABD97F60((uint64_t)&v228);
        v27 = v206;
      }
      if ((v207 & 1) == 0)
        break;
      if (v47 == v196)
      {
        v30 = v193;
        v75 = v194;
        if (v194 < v28)
          goto LABEL_180;
        goto LABEL_57;
      }
      v29 = v47++;
    }
    v75 = v198;
    v30 = v193;
    v76 = v198 - v28;
    if (__OFSUB__(v198, v28))
      goto LABEL_178;
LABEL_48:
    v77 = v75;
    if (v76 < v191)
    {
      v78 = v28 + v191;
      if (__OFADD__(v28, v191))
        goto LABEL_181;
      if (v78 >= v194)
        v78 = v194;
      if (v78 < v28)
      {
LABEL_182:
        __break(1u);
        goto LABEL_183;
      }
      if (v75 != v78)
        break;
    }
LABEL_89:
    if (v75 < v28)
      goto LABEL_174;
    v198 = v75;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_1ABE8BC6C(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
    v115 = *((_QWORD *)v30 + 2);
    v114 = *((_QWORD *)v30 + 3);
    v116 = v115 + 1;
    v27 = v206;
    if (v115 >= v114 >> 1)
    {
      v172 = sub_1ABE8BC6C((char *)(v114 > 1), v115 + 1, 1, v30);
      v27 = v206;
      v30 = v172;
    }
    *((_QWORD *)v30 + 2) = v116;
    v214 = v30 + 32;
    v117 = &v30[16 * v115 + 32];
    v118 = v198;
    *(_QWORD *)v117 = v28;
    *((_QWORD *)v117 + 1) = v118;
    if (v115)
    {
      v119 = v214;
      while (1)
      {
        v120 = v116 - 1;
        if (v116 >= 4)
        {
          v125 = &v119[16 * v116];
          v126 = *((_QWORD *)v125 - 8);
          v127 = *((_QWORD *)v125 - 7);
          v131 = __OFSUB__(v127, v126);
          v128 = v127 - v126;
          if (v131)
            goto LABEL_162;
          v130 = *((_QWORD *)v125 - 6);
          v129 = *((_QWORD *)v125 - 5);
          v131 = __OFSUB__(v129, v130);
          v123 = v129 - v130;
          v124 = v131;
          if (v131)
            goto LABEL_163;
          v132 = v116 - 2;
          v133 = &v119[16 * v116 - 32];
          v135 = *(_QWORD *)v133;
          v134 = *((_QWORD *)v133 + 1);
          v131 = __OFSUB__(v134, v135);
          v136 = v134 - v135;
          if (v131)
            goto LABEL_165;
          v131 = __OFADD__(v123, v136);
          v137 = v123 + v136;
          if (v131)
            goto LABEL_168;
          if (v137 >= v128)
          {
            v155 = &v119[16 * v120];
            v157 = *(_QWORD *)v155;
            v156 = *((_QWORD *)v155 + 1);
            v131 = __OFSUB__(v156, v157);
            v158 = v156 - v157;
            if (v131)
              goto LABEL_172;
            v148 = v123 < v158;
            goto LABEL_127;
          }
        }
        else
        {
          if (v116 != 3)
          {
            v149 = *((_QWORD *)v30 + 4);
            v150 = *((_QWORD *)v30 + 5);
            v131 = __OFSUB__(v150, v149);
            v142 = v150 - v149;
            v143 = v131;
            goto LABEL_121;
          }
          v122 = *((_QWORD *)v30 + 4);
          v121 = *((_QWORD *)v30 + 5);
          v131 = __OFSUB__(v121, v122);
          v123 = v121 - v122;
          v124 = v131;
        }
        if ((v124 & 1) != 0)
          goto LABEL_164;
        v132 = v116 - 2;
        v138 = &v119[16 * v116 - 32];
        v140 = *(_QWORD *)v138;
        v139 = *((_QWORD *)v138 + 1);
        v141 = __OFSUB__(v139, v140);
        v142 = v139 - v140;
        v143 = v141;
        if (v141)
          goto LABEL_167;
        v144 = &v119[16 * v120];
        v146 = *(_QWORD *)v144;
        v145 = *((_QWORD *)v144 + 1);
        v131 = __OFSUB__(v145, v146);
        v147 = v145 - v146;
        if (v131)
          goto LABEL_170;
        if (__OFADD__(v142, v147))
          goto LABEL_171;
        if (v142 + v147 >= v123)
        {
          v148 = v123 < v147;
LABEL_127:
          if (v148)
            v120 = v132;
          goto LABEL_129;
        }
LABEL_121:
        if ((v143 & 1) != 0)
          goto LABEL_166;
        v151 = &v119[16 * v120];
        v153 = *(_QWORD *)v151;
        v152 = *((_QWORD *)v151 + 1);
        v131 = __OFSUB__(v152, v153);
        v154 = v152 - v153;
        if (v131)
          goto LABEL_169;
        if (v154 < v142)
          goto LABEL_138;
LABEL_129:
        v159 = v120 - 1;
        if (v120 - 1 >= v116)
        {
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
          goto LABEL_182;
        }
        if (!v27)
          goto LABEL_184;
        v160 = v30;
        v161 = &v119[16 * v159];
        v162 = v119;
        v163 = *(_QWORD *)v161;
        v164 = v120;
        v165 = &v162[16 * v120];
        v166 = *((_QWORD *)v165 + 1);
        v167 = (char *)(v27 + 136 * *(_QWORD *)v161);
        v264 = (char *)(v27 + 136 * *(_QWORD *)v165);
        v215 = (void (*)(char *, char *, uint64_t))(v27 + 136 * v166);
        v168 = v209;
        sub_1ABF2FF5C();
        v169 = v167;
        v170 = v199;
        sub_1ABED76E0(v169, v264, (unint64_t)v215, v197, v168);
        if (v170)
          goto LABEL_156;
        if (v166 < v163)
          goto LABEL_159;
        if (v164 > *((_QWORD *)v160 + 2))
          goto LABEL_160;
        *(_QWORD *)v161 = v163;
        v119 = v214;
        *(_QWORD *)&v214[16 * v159 + 8] = v166;
        v171 = *((_QWORD *)v160 + 2);
        if (v164 >= v171)
          goto LABEL_161;
        v199 = 0;
        v116 = v171 - 1;
        memmove(v165, v165 + 16, 16 * (v171 - 1 - v164));
        *((_QWORD *)v160 + 2) = v171 - 1;
        v14 = v212;
        v16 = v210;
        v27 = v206;
        v30 = v160;
        if (v171 <= 2)
          goto LABEL_138;
      }
    }
    v116 = 1;
LABEL_138:
    v193 = v30;
    v19 = v194;
    v26 = v198;
    if (v198 >= v194)
    {
      v173 = v193;
      if (v116 < 2)
        goto LABEL_156;
      goto LABEL_143;
    }
  }
  v195 = v78;
  v85 = *(char **)(v209 + 16);
  v204 = v85;
LABEL_65:
  v198 = v77;
  v86 = v77;
  while (2)
  {
    v87 = v27 + 136 * v86;
    v246 = *(_OWORD *)v87;
    v88 = *(_OWORD *)(v87 + 16);
    v89 = *(_OWORD *)(v87 + 32);
    v90 = *(_OWORD *)(v87 + 64);
    v249 = *(_OWORD *)(v87 + 48);
    v250 = v90;
    v247 = v88;
    v248 = v89;
    v91 = *(_OWORD *)(v87 + 80);
    v92 = *(_OWORD *)(v87 + 96);
    v93 = *(_OWORD *)(v87 + 112);
    v254 = *(_QWORD *)(v87 + 128);
    v252 = v92;
    v253 = v93;
    v251 = v91;
    v255 = *(_OWORD *)(v87 - 136);
    v94 = *(_OWORD *)(v87 - 120);
    v95 = *(_OWORD *)(v87 - 104);
    v96 = *(_OWORD *)(v87 - 72);
    v258 = *(_OWORD *)(v87 - 88);
    v259 = v96;
    v256 = v94;
    v257 = v95;
    v97 = *(_OWORD *)(v87 - 56);
    v98 = *(_OWORD *)(v87 - 40);
    v99 = *(_OWORD *)(v87 - 24);
    v263 = *(_QWORD *)(v87 - 8);
    v261 = v98;
    v262 = v99;
    v260 = v97;
    if (!v85)
      goto LABEL_85;
    v207 = v27 + 136 * v86;
    v208 = v86;
    v100 = v216;
    v101 = (char *)(v209
                  + ((*(unsigned __int8 *)(v216 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v216 + 80)));
    sub_1ABF2FF5C();
    sub_1ABD97ECC((uint64_t)&v246);
    sub_1ABD97ECC((uint64_t)&v255);
    v102 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
    v214 = *(char **)(v100 + 72);
    v215 = v102;
    v102(v16, v101, v14);
    while (2)
    {
      v243 = v252;
      v244 = v253;
      v245 = v254;
      v239 = v248;
      v240 = v249;
      v241 = v250;
      v242 = v251;
      v237 = v246;
      v238 = v247;
      sub_1ABD97ECC((uint64_t)&v246);
      v104 = v213;
      SymbolEntity.init(from:)(&v237, v213);
      sub_1ABF2FD94();
      swift_getAtPartialKeyPath();
      swift_release();
      sub_1ABD64AD4(v104);
      if (!swift_dynamicCast())
        goto LABEL_82;
      v264 = v85;
      v105 = v228;
      v243 = v261;
      v244 = v262;
      v245 = v263;
      v239 = v257;
      v240 = v258;
      v241 = v259;
      v242 = v260;
      v237 = v255;
      v238 = v256;
      sub_1ABD97ECC((uint64_t)&v255);
      v106 = v211;
      SymbolEntity.init(from:)(&v237, v211);
      sub_1ABF2FD94();
      swift_getAtPartialKeyPath();
      swift_release();
      sub_1ABD64AD4(v106);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_82:
        swift_bridgeObjectRelease();
        MEMORY[0x1AF436E0C]("Encountered a SymbolEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 136, 2, MEMORY[0x1E0DEE9D8]);
        (*(void (**)(char *, uint64_t))(v216 + 8))(v16, v14);
        goto LABEL_84;
      }
      v107 = v228;
      if ((sub_1ABF2FDA0() & 1) != 0)
      {
        if (v105 == v107)
        {
          swift_bridgeObjectRelease_n();
          v16 = v210;
          v14 = v212;
          (*(void (**)(char *, uint64_t))(v216 + 8))(v210, v212);
        }
        else
        {
          v103 = sub_1ABF3223C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 = v210;
          v14 = v212;
          (*(void (**)(char *, uint64_t))(v216 + 8))(v210, v212);
          if ((v103 & 1) != 0)
            goto LABEL_83;
        }
        goto LABEL_69;
      }
      if (v107 == v105)
      {
        v16 = v210;
        v14 = v212;
        (*(void (**)(char *, uint64_t))(v216 + 8))(v210, v212);
        swift_bridgeObjectRelease_n();
LABEL_69:
        v101 = &v214[(_QWORD)v101];
        v85 = v264 - 1;
        if (v264 == (char *)1)
          goto LABEL_83;
        v215(v16, v101, v14);
        continue;
      }
      break;
    }
    v108 = sub_1ABF3223C();
    v16 = v210;
    v14 = v212;
    (*(void (**)(char *, uint64_t))(v216 + 8))(v210, v212);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v108 & 1) == 0)
      goto LABEL_69;
LABEL_83:
    swift_bridgeObjectRelease();
LABEL_84:
    v85 = v204;
    v28 = v205;
    v87 = v207;
    v86 = v208;
    sub_1ABD97F60((uint64_t)&v255);
    sub_1ABD97F60((uint64_t)&v246);
    v27 = v206;
LABEL_85:
    if (v27)
    {
      --v86;
      v109 = v87 - 136;
      v242 = *(_OWORD *)(v87 + 80);
      v243 = *(_OWORD *)(v87 + 96);
      v244 = *(_OWORD *)(v87 + 112);
      v245 = *(_QWORD *)(v87 + 128);
      v238 = *(_OWORD *)(v87 + 16);
      v239 = *(_OWORD *)(v87 + 32);
      v240 = *(_OWORD *)(v87 + 48);
      v241 = *(_OWORD *)(v87 + 64);
      v237 = *(_OWORD *)v87;
      v110 = *(_OWORD *)(v87 - 56);
      *(_OWORD *)(v87 + 64) = *(_OWORD *)(v87 - 72);
      *(_OWORD *)(v87 + 80) = v110;
      v111 = *(_OWORD *)(v87 - 24);
      *(_OWORD *)(v87 + 96) = *(_OWORD *)(v87 - 40);
      *(_OWORD *)(v87 + 112) = v111;
      *(_QWORD *)(v87 + 128) = *(_QWORD *)(v87 - 8);
      v112 = *(_OWORD *)(v87 - 88);
      *(_OWORD *)(v87 + 32) = *(_OWORD *)(v87 - 104);
      *(_OWORD *)(v87 + 48) = v112;
      v113 = *(_OWORD *)(v87 - 120);
      *(_OWORD *)v87 = *(_OWORD *)(v87 - 136);
      *(_OWORD *)(v87 + 16) = v113;
      *(_OWORD *)(v109 + 64) = v241;
      *(_OWORD *)(v109 + 80) = v242;
      *(_OWORD *)(v109 + 96) = v243;
      *(_OWORD *)(v109 + 112) = v244;
      *(_QWORD *)(v109 + 128) = v245;
      *(_OWORD *)(v109 + 16) = v238;
      *(_OWORD *)(v109 + 32) = v239;
      *(_OWORD *)(v109 + 48) = v240;
      *(_OWORD *)v109 = v237;
      if (v86 != v28)
        continue;
      v77 = v198 + 1;
      if (v198 + 1 == v195)
      {
        v75 = v195;
        v30 = v193;
        goto LABEL_89;
      }
      goto LABEL_65;
    }
    break;
  }
LABEL_183:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_185:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_187:
  swift_bridgeObjectRelease_n();
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

uint64_t sub_1ABED985C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1ABE8C0A0(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  sub_1ABF2FF5C();
  sub_1ABED850C(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1ABED98FC(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED34CB00, a2, (uint64_t (*)(uint64_t))type metadata accessor for SymbolQuery, (uint64_t)&protocol conformance descriptor for SymbolQuery);
}

uint64_t type metadata accessor for SymbolQuery()
{
  return objc_opt_self();
}

uint64_t sub_1ABED9948(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED34CB08, a2, (uint64_t (*)(uint64_t))type metadata accessor for SymbolQuery, (uint64_t)&protocol conformance descriptor for SymbolQuery);
}

uint64_t sub_1ABED9974()
{
  return sub_1ABCFE22C(&qword_1ED3467A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABED99A4(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED3467A0, a2, (uint64_t (*)(uint64_t))type metadata accessor for SymbolQuery, (uint64_t)&protocol conformance descriptor for SymbolQuery);
}

uint64_t sub_1ABED99D0(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED34CAF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for SymbolQuery, (uint64_t)&protocol conformance descriptor for SymbolQuery);
}

uint64_t sub_1ABED99FC()
{
  return sub_1ABCFE22C((unint64_t *)&qword_1ED34CB18, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABED9A2C()
{
  return sub_1ABCFE22C(&qword_1EEC44D40, 255, (uint64_t (*)(uint64_t))sub_1ABED9A5C, MEMORY[0x1E0C91390]);
}

void sub_1ABED9A5C(uint64_t a1)
{
  sub_1ABED9A80(a1, qword_1EEC44D48, (unint64_t *)&qword_1ED34CB18, (uint64_t)&protocol conformance descriptor for SymbolEntity, MEMORY[0x1E0C91380]);
}

void sub_1ABED9A80(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  if (!*a2)
  {
    v10 = type metadata accessor for SymbolEntity();
    v11 = sub_1ABCFE22C(a3, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, a4);
    v12 = a5(a1, v10, v11);
    if (!v13)
      atomic_store(v12, a2);
  }
}

ValueMetadata *type metadata accessor for FilteredStockQuery()
{
  return &type metadata for FilteredStockQuery;
}

uint64_t method lookup function for SymbolQuery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SymbolQuery.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1ABED9B2C(uint64_t a1)
{
  sub_1ABED9A80(a1, &qword_1EEC44D70, &qword_1ED3467A8, (uint64_t)&protocol conformance descriptor for SymbolEntity, MEMORY[0x1E0C91AC0]);
}

uint64_t sub_1ABED9B50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABF2FD34();
  *a1 = result;
  return result;
}

uint64_t sub_1ABED9B78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABF2FD34();
  *a1 = result;
  return result;
}

uint64_t sub_1ABED9BA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABF2FD34();
  *a1 = result;
  return result;
}

void sub_1ABED9BC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC44D80)
  {
    type metadata accessor for SymbolEntity();
    sub_1ABD9F6B0();
    sub_1ABCFE22C(&qword_1ED3467A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    sub_1ABD94F2C();
    v0 = sub_1ABF2FEB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC44D80);
  }
}

void sub_1ABED9C88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC44D88)
  {
    type metadata accessor for SymbolEntity();
    sub_1ABD9F6B0();
    sub_1ABD94F2C();
    v0 = sub_1ABF2FFF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC44D88);
  }
}

void sub_1ABED9D1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC44D90)
  {
    sub_1ABD9F6B0();
    sub_1ABD94F2C();
    v0 = sub_1ABF2FE90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC44D90);
  }
}

void sub_1ABED9D9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC44D98)
  {
    sub_1ABD9F6B0();
    sub_1ABD94F2C();
    v0 = sub_1ABF2FE48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC44D98);
  }
}

uint64_t sub_1ABED9E24()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t type metadata accessor for YahooChartService()
{
  return objc_opt_self();
}

uint64_t sub_1ABED9E74(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  char v11;
  id v12;
  uint64_t v13;
  char v15;

  v10 = *v5;
  v11 = *a3;
  sub_1ABF30BE0();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 40));
  v15 = v11;
  v12 = sub_1ABE55448(a1, a2, &v15, a4, a5);
  v13 = sub_1ABF30BBC();

  return v13;
}

uint64_t sub_1ABED9F14()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1ABED9F1C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ABED9F34(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v9;
  _QWORD v10[22];
  __int128 v11;
  __int128 v12;
  _BYTE v13[25];
  _QWORD v14[65];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[32];
  _BYTE v24[168];
  _BYTE v25[1120];

  MEMORY[0x1E0C80A78](a1);
  v22 = 0u;
  v21 = 0u;
  v20 = 0;
  v19 = 0u;
  v18 = 0u;
  v17 = 0u;
  v16 = 0u;
  v14[64] = 2;
  v15 = 0u;
  sub_1ABE7C13C(v23);
  sub_1ABD843F0((uint64_t)v23, (uint64_t)v14, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  v10[21] = 1;
  v11 = 0u;
  v12 = 0u;
  memset(v13, 0, sizeof(v13));
  sub_1ABE7C18C((uint64_t)v24);
  sub_1ABD843F0((uint64_t)v24, (uint64_t)v10, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1ABE7C1B0(v25);
  sub_1ABD843F0((uint64_t)v25, (uint64_t)&v9, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  sub_1ABEF3EC4(2, 0, 0, 0, 1, 0, 1, 0, 0.0, v1, v2, v3, v4, v5, v6, v7, 1, 0.0, 1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    2,
    2,
    0.0,
    1,
    2,
    2,
    0,
    1,
    0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0,
    0,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0);
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FAC0, (uint64_t)&type metadata for AppConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABEDA41C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for DefaultAppConfigurationService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEDA444()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SDSQuoteService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEDA470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _BYTE v26[24];
  uint64_t v27;

  v7 = sub_1ABF30B38();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_1ABF30760();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1ABD07E04(v3 + 16, (uint64_t)v26);
  v15 = *(_QWORD *)(v3 + 56);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)&v26[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v20 + 16))(v19, v17);
  v21 = *v19;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v22 = sub_1ABEDA62C(a1, v21, v15, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  sub_1ABF30BE0();
  v23 = sub_1ABF30BBC();

  return v23;
}

uint64_t sub_1ABEDA60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABEDA470(a1, a2, a3);
}

id sub_1ABEDA62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  objc_super v27;
  _QWORD v28[5];
  _QWORD v29[5];

  v10 = type metadata accessor for SDSBaseOperationFactory();
  v29[3] = v10;
  v29[4] = &off_1E5AEC4C0;
  v29[0] = a2;
  v11 = (objc_class *)type metadata accessor for SDSQuoteOperation();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v10);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  v18 = *v16;
  v28[3] = v10;
  v28[4] = &off_1E5AEC4C0;
  v28[0] = v18;
  *(_QWORD *)&v12[qword_1ED34C940] = a1;
  sub_1ABD07E04((uint64_t)v28, (uint64_t)&v12[qword_1ED34D028]);
  v19 = &v12[qword_1ED34D038];
  v20 = sub_1ABF30760();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a4, v20);
  *(_QWORD *)&v12[qword_1ED34D040] = a3;
  v22 = &v12[qword_1ED34D030];
  v23 = sub_1ABF30B38();
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a5, v23);
  v27.receiver = v12;
  v27.super_class = v11;
  v25 = objc_msgSendSuper2(&v27, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a5, v23);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a4, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v25;
}

uint64_t dispatch thunk of ArticleScorable.globalCohort.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ArticleScorable.cohorts.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ArticleScorable.sourceChannelID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ArticleScorable.topics.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ArticleScorable.newsPersonalizationScore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ArticleScorable.globalScore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ArticleScorable.tabiScore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ArticleScorable.importanceScore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ArticleScorable.publisherPrior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ArticleScorable.publishedDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of ArticleScorable.halfLife.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ArticleScorable.hasBeenRead.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_1ABEDA840()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABEDA87C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  uint64_t v32;

  v29 = a5;
  v30 = a1;
  v9 = sub_1ABF30B38();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1ABF30760();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v5 + 16;
  v18 = *a3;
  sub_1ABD07E04(v17, (uint64_t)v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v29, v9);
  v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (uint64_t *)((char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v23 + 16))(v22, v20);
  v24 = *v22;
  sub_1ABF2FF5C();
  v25 = sub_1ABEDAA68(v30, a2, v18, v24, (uint64_t)v16, (uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  sub_1ABF30BE0();
  sub_1ABF30BA4();
  v26 = sub_1ABF30BB0();

  swift_release();
  return v26;
}

uint64_t type metadata accessor for SDSChartService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEDAA48(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  return sub_1ABEDA87C(a1, a2, a3, a4, a5);
}

id sub_1ABEDAA68(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  objc_class *v13;
  _BYTE *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  objc_super v30;
  _QWORD v31[5];
  _QWORD v32[5];

  v12 = type metadata accessor for SDSBaseOperationFactory();
  v32[3] = v12;
  v32[4] = &off_1E5AEC4C0;
  v32[0] = a4;
  v13 = (objc_class *)type metadata accessor for SDSChartOperation();
  v14 = objc_allocWithZone(v13);
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v12);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
  v20 = *v18;
  v31[3] = v12;
  v31[4] = &off_1E5AEC4C0;
  v31[0] = v20;
  v21 = &v14[qword_1ED346A68];
  *v21 = a1;
  v21[1] = a2;
  v14[qword_1ED346A60] = a3;
  v22 = &v14[qword_1ED346A58];
  v23 = sub_1ABF30760();
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a5, v23);
  v25 = &v14[qword_1ED346A50];
  v26 = sub_1ABF30B38();
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, a6, v26);
  sub_1ABD07E04((uint64_t)v31, (uint64_t)&v14[qword_1ED346A48]);
  v30.receiver = v14;
  v30.super_class = v13;
  v28 = objc_msgSendSuper2(&v30, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(a6, v26);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a5, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return v28;
}

uint64_t sub_1ABEDAC24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABEDAC50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1ABF30790();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1ABF2FBD8();
  v6 = sub_1ABF30778();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 24) = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEDACEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1ABF30790();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1ABF2FBD8();
  v6 = sub_1ABF30778();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEDAD88@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1ABEDAD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  _QWORD v6[4];

  v6[2] = a2;
  v6[3] = a3;
  sub_1ABF121A8((void (*)(uint64_t *__return_ptr, _OWORD *))sub_1ABEDAE10, (uint64_t)v6, a1);
  v3 = (void *)sub_1ABF31114();
  v4 = sub_1ABF3109C();
  swift_bridgeObjectRelease();

  return v4;
}

uint64_t sub_1ABEDAE10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t result;
  _OWORD v11[8];
  uint64_t v12;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_OWORD *)(a1 + 112);
  v11[6] = *(_OWORD *)(a1 + 96);
  v11[7] = v6;
  v12 = *(_QWORD *)(a1 + 128);
  v7 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v7;
  v8 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v8;
  v9 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v9;
  result = (*(uint64_t (**)(_OWORD *, uint64_t))(v5 + 8))(v11, v4);
  *a2 = result;
  return result;
}

uint64_t sub_1ABEDAE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  uint64_t v14;
  _OWORD v16[8];
  uint64_t v17;

  v4 = *(_OWORD *)(a1 + 112);
  v16[6] = *(_OWORD *)(a1 + 96);
  v16[7] = v4;
  v17 = *(_QWORD *)(a1 + 128);
  v5 = *(_OWORD *)(a1 + 48);
  v16[2] = *(_OWORD *)(a1 + 32);
  v16[3] = v5;
  v6 = *(_OWORD *)(a1 + 80);
  v16[4] = *(_OWORD *)(a1 + 64);
  v16[5] = v6;
  v7 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v7;
  (*(void (**)(_QWORD, _QWORD, uint64_t))(a3 + 16))(v7, *((_QWORD *)&v7 + 1), a2);
  v8 = swift_allocObject();
  v9 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v8 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v8 + 128) = v9;
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(a1 + 128);
  v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v8 + 64) = v10;
  v11 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v8 + 96) = v11;
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v12;
  sub_1ABD97ECC((uint64_t)v16);
  v13 = (void *)sub_1ABF31114();
  v14 = sub_1ABF31180();
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1ABEDAF74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABEDAFD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 112) = v2;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v1 + 144);
  v3 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 48) = v3;
  v4 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 80) = v4;
  v5 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v5;
  return sub_1ABD97ECC(v1 + 16);
}

uint64_t WatchlistDiff.changes.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t WatchlistDiff.newWatchlist.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t WatchlistDiff.updatedName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

void WatchlistDiff.updatedSortState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

void WatchlistDiff.updatedDisplayState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 33);
}

BOOL WatchlistDiff.isEmpty.getter()
{
  uint64_t v0;
  BOOL v2;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16))
    return 0;
  if (*(_QWORD *)(*(_QWORD *)(v0 + 8) + 16) | *(_QWORD *)(v0 + 24))
    v2 = 0;
  else
    v2 = *(unsigned __int8 *)(v0 + 32) > 0xFDu;
  return v2 && *(_BYTE *)(v0 + 33) == 3;
}

uint64_t WatchlistDiff.didAddStocks.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  void (*v14)(char *, uint64_t);
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD v20[2];
  _OWORD v21[8];
  uint64_t v22;

  sub_1ABEDB25C();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - v7;
  v9 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v9)
    return 0;
  v10 = *(_QWORD *)v0 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v11 = *MEMORY[0x1E0DB3B48];
  v12 = *(_QWORD *)(v3 + 72);
  v13 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
  v20[1] = *(_QWORD *)v0;
  swift_bridgeObjectRetain_n();
  while (1)
  {
    v13(v8, v10, v2);
    v13(v5, (unint64_t)v8, v2);
    if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v5, v2) == v11)
      break;
    v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v5, v2);
    v14(v8, v2);
    v10 += v12;
    if (!--v9)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
  v16 = *((_OWORD *)v5 + 7);
  v21[6] = *((_OWORD *)v5 + 6);
  v21[7] = v16;
  v22 = *((_QWORD *)v5 + 16);
  v17 = *((_OWORD *)v5 + 3);
  v21[2] = *((_OWORD *)v5 + 2);
  v21[3] = v17;
  v18 = *((_OWORD *)v5 + 5);
  v21[4] = *((_OWORD *)v5 + 4);
  v21[5] = v18;
  v19 = *((_OWORD *)v5 + 1);
  v21[0] = *(_OWORD *)v5;
  v21[1] = v19;
  sub_1ABD97F60((uint64_t)v21);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  swift_bridgeObjectRelease_n();
  return 1;
}

void sub_1ABEDB25C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E558)
  {
    sub_1ABD83FF4();
    v0 = sub_1ABF30D30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E558);
  }
}

uint64_t WatchlistDiff.init(changes:newWatchlist:updatedName:updatedSortState:updatedDisplayState:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v7;
  char v8;

  v7 = *a5;
  v8 = *a6;
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_BYTE *)(a7 + 32) = v7;
  *(_BYTE *)(a7 + 33) = v8;
  return result;
}

uint64_t sub_1ABEDB2D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  int64_t v26;

  v1 = *v0;
  v25 = *v0 + 64;
  v2 = 1 << *(_BYTE *)(*v0 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(*v0 + 64);
  v26 = (unint64_t)(v2 + 63) >> 6;
  result = sub_1ABF2FF5C();
  v6 = 0;
  v7 = MEMORY[0x1E0DEA968];
  while (1)
  {
    if (v4)
    {
      v17 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v18 = v17 | (v6 << 6);
      goto LABEL_22;
    }
    v19 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v26)
      goto LABEL_24;
    v20 = *(_QWORD *)(v25 + 8 * v19);
    ++v6;
    if (!v20)
    {
      v6 = v19 + 1;
      if (v19 + 1 >= v26)
        goto LABEL_24;
      v20 = *(_QWORD *)(v25 + 8 * v6);
      if (!v20)
      {
        v6 = v19 + 2;
        if (v19 + 2 >= v26)
          goto LABEL_24;
        v20 = *(_QWORD *)(v25 + 8 * v6);
        if (!v20)
          break;
      }
    }
LABEL_21:
    v4 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v6 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v18);
    sub_1ABF2FF5C();
    v23 = v22;
    sub_1ABF31E94();
    sub_1ABF31870();
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    v24 = objc_msgSend(v23, sel_updatedName);
    if (v24)
    {
      v8 = v24;
      sub_1ABF317A4();

    }
    sub_1ABD34558();
    sub_1ABF317F8();
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    v9 = objc_msgSend(v23, sel_addedSymbols);
    v10 = sub_1ABF31A08();

    MEMORY[0x1AF437C34](v10, v7);
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    v11 = objc_msgSend(v23, sel_removedSymbols);
    v12 = sub_1ABF31A08();

    MEMORY[0x1AF437C34](v12, v7);
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    v13 = objc_msgSend(v23, sel_reorderedSymbols);
    v14 = sub_1ABF31A08();

    MEMORY[0x1AF437C34](v14, v7);
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    v15 = objc_msgSend(v23, sel_updatedSortState);
    sub_1ABEDB834();
    sub_1ABF317F8();
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    v16 = objc_msgSend(v23, sel_updatedSortOrderState);
    sub_1ABF317F8();
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    objc_msgSend(v23, sel_updatedDisplayState);
    sub_1ABF317F8();
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    sub_1ABF31870();

    result = swift_bridgeObjectRelease();
  }
  v21 = v19 + 3;
  if (v21 >= v26)
  {
LABEL_24:
    swift_release();
    return 0x73696C6863746157;
  }
  v20 = *(_QWORD *)(v25 + 8 * v21);
  if (v20)
  {
    v6 = v21;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v6 >= v26)
      goto LABEL_24;
    v20 = *(_QWORD *)(v25 + 8 * v6);
    ++v21;
    if (v20)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1ABEDB834()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E498)
  {
    sub_1ABD22AD4();
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E498);
  }
}

uint64_t sub_1ABEDB88C()
{
  return sub_1ABF2FF5C();
}

unint64_t sub_1ABEDB894()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  int v12;
  _QWORD v14[2];
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  _QWORD v20[2];
  unint64_t v21;
  unint64_t v22;

  v1 = 0xD000000000000015;
  sub_1ABD83F24();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v0;
  v21 = 0xD000000000000015;
  v22 = 0x80000001ABF62BB0;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v18 = *MEMORY[0x1E0DB3B48];
    v17 = *MEMORY[0x1E0DB3B50];
    v16 = *MEMORY[0x1E0DB3B40];
    v14[1] = v7;
    sub_1ABF2FF5C();
    while (1)
    {
      v11(v6, v9, v3);
      v12 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
      if (v12 == v18)
      {
        (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
        strcpy((char *)v20, "[Added: ");
        BYTE1(v20[1]) = 0;
        WORD1(v20[1]) = 0;
        HIDWORD(v20[1]) = -402653184;
      }
      else if (v12 == v17)
      {
        (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
        strcpy((char *)v20, "[Removed: ");
        BYTE3(v20[1]) = 0;
        HIDWORD(v20[1]) = -369098752;
      }
      else
      {
        if (v12 != v16)
        {
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
          goto LABEL_5;
        }
        (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
        v15 = *((_QWORD *)v6 + 2);
        v20[0] = 0;
        v20[1] = 0xE000000000000000;
        sub_1ABF31E94();
        swift_bridgeObjectRelease();
        strcpy((char *)v20, "[Reordered: ");
        BYTE5(v20[1]) = 0;
        HIWORD(v20[1]) = -5120;
        sub_1ABF31870();
        swift_bridgeObjectRelease();
        sub_1ABF31870();
        v19 = v15;
        sub_1ABF321F4();
      }
      sub_1ABF31870();
      swift_bridgeObjectRelease();
      sub_1ABF31870();
      sub_1ABF31870();
      swift_bridgeObjectRelease();
LABEL_5:
      v9 += v10;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
  }
  return v1;
}

uint64_t sub_1ABEDBB74(_QWORD *a1, uint64_t a2)
{
  return sub_1ABEDBB8C(a1, a2, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABEDBC84);
}

uint64_t sub_1ABEDBB80(_QWORD *a1, uint64_t a2)
{
  return sub_1ABEDBB8C(a1, a2, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABEDBD24);
}

uint64_t sub_1ABEDBB8C(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = a1[3];
  v6 = a1[4];
  v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
  return a3(v7, a2, v3, v5, v6);
}

uint64_t sub_1ABEDBBDC()
{
  uint64_t v0;

  sub_1ABD8AB8C(v0 + 16);
  return v0;
}

uint64_t sub_1ABEDBBF8()
{
  uint64_t v0;

  sub_1ABD8AB8C(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABEDBC1C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABEDBC34(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABEDBC84);
}

uint64_t sub_1ABEDBC28(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABEDBC34(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABEDBD24);
}

uint64_t sub_1ABEDBC34(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v7 = a1[3];
  v8 = a1[4];
  v9 = __swift_project_boxed_opaque_existential_1(a1, v7);
  return a5(v9, a2, v5, v7, v8);
}

uint64_t sub_1ABEDBC84(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15[5];

  v15[3] = a4;
  v15[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  v10 = *a2;
  if (MEMORY[0x1AF4390D4](a3 + 16))
  {
    v11 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    v14 = v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v11 + 8))(v15, &v14, ObjectType, v11);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_1ABEDBD24(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15[5];

  v15[3] = a4;
  v15[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  v10 = *a2;
  if (MEMORY[0x1AF4390D4](a3 + 16))
  {
    v11 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    v14 = v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t, uint64_t))(v11 + 16))(v15, &v14, ObjectType, v11);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_1ABEDBDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ABEDBDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1ABEDBDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_1ABEDBDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1ABEDBDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t sub_1ABEDBDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1ABEDBDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_1ABEDBDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1ABEDBE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_1ABEDBE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t sub_1ABEDBE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t sub_1ABEDBE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t sub_1ABEDBE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t sub_1ABEDBE2C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1ABEDBE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t sub_1ABEDBE3C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t sub_1ABEDBE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 144))();
}

uint64_t sub_1ABEDBE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

uint64_t sub_1ABEDBE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 160))();
}

uint64_t sub_1ABEDBE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 168))();
}

uint64_t sub_1ABEDBE64(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t sub_1ABEDBE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t sub_1ABEDBE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t sub_1ABEDBE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 200))();
}

uint64_t initializeWithCopy for WatchlistDiff(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for WatchlistDiff(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WatchlistDiff(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchlistDiff(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 34))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchlistDiff(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 34) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistDiff()
{
  return &type metadata for WatchlistDiff;
}

ValueMetadata *type metadata accessor for WatchlistSymbolsDiff()
{
  return &type metadata for WatchlistSymbolsDiff;
}

ValueMetadata *type metadata accessor for WatchlistOrderDiff()
{
  return &type metadata for WatchlistOrderDiff;
}

uint64_t sub_1ABEDC088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1ABEDC090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1ABEDC098()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABEDC0A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_1ABEDC0B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t static CacheDatabase.Default.getter()
{
  return 0x746C7561666544;
}

uint64_t static CacheDatabase.Shared.getter()
{
  return 0x646572616853;
}

uint64_t static CacheDatabase.Charts.getter()
{
  return 0x737472616843;
}

unint64_t static CacheDatabase.shouldPersistCharts.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1ABEDC120@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABEDC1A0(a1, 0x61642D6568636163, 0xEE00657361626174, a2);
}

uint64_t sub_1ABEDC164@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABEDC1A0(a1, 0x642D646572616873, 0xEF65736162617461, a2);
}

uint64_t sub_1ABEDC1A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t *v20;
  _QWORD v21[3];
  uint64_t *v22;

  v21[1] = a2;
  v21[2] = a3;
  v22 = a4;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v21 - v6;
  v8 = sub_1ABF305D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v21 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF30B5C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    sub_1ABF3055C();
    v16 = sub_1ABF305A4();
    v18 = v17;
    v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v11, v8);
    result = ((uint64_t (*)(char *, uint64_t))v19)(v14, v8);
    v20 = v22;
    *v22 = v16;
    v20[1] = v18;
  }
  return result;
}

uint64_t sub_1ABEDC344@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABEDC1A0(a1, 0xD000000000000012, 0x80000001ABF62C30, a2);
}

uint64_t sub_1ABEDC37C()
{
  sub_1ABF30C58();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABF30F4C();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABEDC468()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1ABF314E0();
  __swift_allocate_value_buffer(v0, qword_1EEC44DA8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EEC44DA8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0DB2E28], v0);
}

uint64_t sub_1ABEDC4C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABEDC554(&qword_1EEC410E0, (uint64_t)qword_1EEC44DA8, a1);
}

uint64_t sub_1ABEDC4DC()
{
  uint64_t v0;

  v0 = sub_1ABF314E0();
  __swift_allocate_value_buffer(v0, qword_1EEC44DC0);
  *(_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EEC44DC0) = 0;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 - 8) + 104))();
}

uint64_t sub_1ABEDC538@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABEDC554(&qword_1EEC410E8, (uint64_t)qword_1EEC44DC0, a1);
}

uint64_t sub_1ABEDC554@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1ABF314E0();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1ABEDC5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v6[2];

  v6[0] = a1;
  v6[1] = a2;
  result = sub_1ABEDD194(v6, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1ABEDC5F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v26 = a1;
  v1 = sub_1ABF31498();
  v24 = *(_QWORD *)(v1 - 8);
  v25 = v1;
  MEMORY[0x1E0C80A78](v1);
  v23 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1ABF314E0();
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1ABF314B0();
  v5 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF314A4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1ABF31444();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2B10];
  MEMORY[0x1E0C80A78](v12);
  v14 = sub_1ABF314C8();
  v15 = MEMORY[0x1E0C80A78](v14);
  (*(void (**)(char *, _QWORD, double))(v17 + 104))((char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0DB2DF8], v15);
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1ABEDD7A4(&qword_1ED3504D8, MEMORY[0x1E0DB2B28]);
  sub_1ABCF5A54(0, &qword_1ED3504E8, v13, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABEDD134();
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB2D88], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB2DA8], v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v20, *MEMORY[0x1E0DB2E28], v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v23, *MEMORY[0x1E0DB2D58], v25);
  sub_1ABF314EC();
  swift_allocObject();
  LOBYTE(v27) = 1;
  result = sub_1ABF314D4();
  *v26 = result;
  return result;
}

uint64_t sub_1ABEDC900()
{
  uint64_t v0;
  NSArray *v1;
  uint64_t v2;
  uint64_t result;

  v0 = sub_1ABF305D4();
  __swift_allocate_value_buffer(v0, qword_1EEC44DD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC44DD8);
  v1 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  v2 = sub_1ABF31A08();

  if (*(_QWORD *)(v2 + 16))
  {
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    sub_1ABF30538();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABEDC9BC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1ABF305D4();
  __swift_allocate_value_buffer(v0, qword_1EEC44DF0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EEC44DF0);
  return sub_1ABEDCA04(v1);
}

uint64_t sub_1ABEDCA04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v29 = a1;
  v28 = sub_1ABF30520();
  v1 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - v5;
  v7 = sub_1ABF305D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - v12;
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v15 = (void *)sub_1ABF31780();
  v16 = objc_msgSend(v14, sel_containerURLForSecurityApplicationGroupIdentifier_, v15);

  if (v16)
  {
    sub_1ABF30580();

    v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v6, v10, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v17(v13, v6, v7);
      v30 = 0x7972617262694CLL;
      v31 = 0xE700000000000000;
      v18 = *MEMORY[0x1E0CAFD60];
      v27 = v13;
      v19 = v1;
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
      v21 = v28;
      v20(v3, v18, v28);
      sub_1ABD0E288();
      sub_1ABF305C8();
      v22 = *(void (**)(char *, uint64_t))(v19 + 8);
      v22(v3, v21);
      swift_bridgeObjectRelease();
      v30 = 0x736568636143;
      v31 = 0xE600000000000000;
      v20(v3, v18, v21);
      sub_1ABF305C8();
      v22(v3, v21);
      swift_bridgeObjectRelease();
      v23 = *(void (**)(char *, uint64_t))(v8 + 8);
      v23(v10, v7);
      return ((uint64_t (*)(char *, uint64_t))v23)(v27, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1ABCF59BC((uint64_t)v6);
  if (qword_1EEC410F0 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v7, (uint64_t)qword_1EEC44DD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v29, v25, v7);
}

uint64_t sub_1ABEDCD60()
{
  return 0x746C7561666544;
}

uint64_t sub_1ABEDCD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = sub_1ABF305D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEC410F0 != -1)
    swift_once();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC44DD8);
  sub_1ABF3055C();
  v4 = sub_1ABF305A4();
  v6 = v5;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1ED34DAF0 = v4;
  *(_QWORD *)algn_1ED34DAF8 = v6;
  return result;
}

uint64_t sub_1ABEDCE70()
{
  return sub_1ABEDCFEC(qword_1ED34DB00, &qword_1ED34DAF0);
}

uint64_t sub_1ABEDCE90()
{
  return 0x646572616853;
}

uint64_t sub_1ABEDCEA4(uint64_t a1)
{
  return sub_1ABEDCED4(a1, 0x642D646572616873, 0xEF65736162617461, &qword_1ED34DAD8, &qword_1ED34DAE0);
}

uint64_t sub_1ABEDCED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v7 = sub_1ABF305D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEC410F8 != -1)
    swift_once();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EEC44DF0);
  sub_1ABF3055C();
  v11 = sub_1ABF305A4();
  v13 = v12;
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *a4 = v11;
  *a5 = v13;
  return result;
}

uint64_t sub_1ABEDCFCC()
{
  return sub_1ABEDCFEC(&qword_1ED34DAE8, &qword_1ED34DAD8);
}

uint64_t sub_1ABEDCFEC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  sub_1ABF2FF5C();
  return v3;
}

uint64_t sub_1ABEDD03C()
{
  return 0x737472616843;
}

uint64_t sub_1ABEDD050(uint64_t a1)
{
  return sub_1ABEDCED4(a1, 0xD000000000000012, 0x80000001ABF62C30, qword_1ED34DAB8, &qword_1ED34DAB8[1]);
}

uint64_t sub_1ABEDD078()
{
  return sub_1ABEDCFEC(&qword_1ED34DAD0, qword_1ED34DAB8);
}

unint64_t sub_1ABEDD098()
{
  return 0xD00000000000001ALL;
}

ValueMetadata *type metadata accessor for CacheDatabase()
{
  return &type metadata for CacheDatabase;
}

ValueMetadata *type metadata accessor for CacheDatabase.Location()
{
  return &type metadata for CacheDatabase.Location;
}

uint64_t type metadata accessor for CacheDatabaseAssembly()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for Caches()
{
  return &type metadata for Caches;
}

ValueMetadata *type metadata accessor for Caches.Default()
{
  return &type metadata for Caches.Default;
}

ValueMetadata *type metadata accessor for Caches.Shared()
{
  return &type metadata for Caches.Shared;
}

ValueMetadata *type metadata accessor for Caches.Charts()
{
  return &type metadata for Caches.Charts;
}

unint64_t sub_1ABEDD134()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3504F0;
  if (!qword_1ED3504F0)
  {
    sub_1ABCF5A54(255, &qword_1ED3504E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2B10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3504F0);
  }
  return result;
}

uint64_t sub_1ABEDD194(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  void (*v47)(char *);
  _QWORD v49[4];
  void (*v50)(char *, uint64_t, double);
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v65 = a2;
  v68 = sub_1ABF31498();
  v64 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v57 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v63 = (char *)v49 - v5;
  v6 = sub_1ABF314E0();
  v66 = *(_QWORD *)(v6 - 8);
  v67 = v6;
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v62 = (char *)v49 - v9;
  v10 = sub_1ABF314A4();
  v61 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v55 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v60 = (char *)v49 - v13;
  v14 = sub_1ABF314B0();
  v59 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v54 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v58 = (char *)v49 - v17;
  v18 = sub_1ABF31444();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v53 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v49 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v49 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v49 - v28;
  MEMORY[0x1E0C80A78](v30);
  v31 = sub_1ABF314C8();
  MEMORY[0x1E0C80A78](v31);
  v52 = (char *)v49 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v33);
  v36 = (_QWORD *)((char *)v49 - v35);
  v37 = *a1;
  v38 = a1[1];
  *v36 = v37;
  v36[1] = v38;
  v39 = *MEMORY[0x1E0DB2DF0];
  v50 = *(void (**)(char *, uint64_t, double))(v40 + 104);
  v51 = v41;
  v50((char *)v49 - v35, v39, v34);
  sub_1ABF2FF5C();
  sub_1ABF3142C();
  sub_1ABF31438();
  sub_1ABEDD7A4(&qword_1ED3504D0, MEMORY[0x1E0DB2B20]);
  sub_1ABF31984();
  sub_1ABEDD7A4(&qword_1ED3504E0, MEMORY[0x1E0DB2B30]);
  sub_1ABF323A4();
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v26, v18);
  v49[3] = sub_1ABEDD7A4(&qword_1ED3504D8, MEMORY[0x1E0DB2B28]);
  sub_1ABF31DEC();
  v42 = *(void (**)(char *, uint64_t))(v19 + 8);
  v42(v26, v18);
  v42(v29, v18);
  v43 = *MEMORY[0x1E0DB2DA8];
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 104);
  v59 = v14;
  v49[2] = v44;
  v44(v58, v43, v14);
  v45 = *MEMORY[0x1E0DB2D88];
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 104);
  v61 = v10;
  v49[1] = v46;
  v46(v60, v45, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v62, v65, v67);
  v47 = *(void (**)(char *))(v64 + 104);
  LODWORD(v65) = *MEMORY[0x1E0DB2D58];
  v47(v63);
  sub_1ABF314EC();
  swift_allocObject();
  LOBYTE(v69) = 1;
  return sub_1ABF314D4();
}

uint64_t sub_1ABEDD7A4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1ABF31444();
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABEDD7E4()
{
  uint64_t result;

  result = sub_1ABF31780();
  qword_1ED347210 = result;
  return result;
}

id sub_1ABEDD818()
{
  if (qword_1ED347218 != -1)
    swift_once();
  return (id)qword_1ED347210;
}

uint64_t sub_1ABEDD860(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  char v20;

  v19 = a6;
  v13 = sub_1ABF30760();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a3;
  sub_1ABF30754();
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t))(a7 + 8))(a1, a2, &v20, a4, v16, a5, v19, a7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v17;
}

uint64_t sub_1ABEDD944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t sub_1ABEDD94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_1ABEDD954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t sub_1ABEDD95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1ABEDD964()
{
  return 0x737472616863;
}

_QWORD *sub_1ABEDD978(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = a2;
  v14[0] = a1;
  v15 = sub_1ABF30B2C();
  v14[1] = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v14[2] = (uint64_t)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30EE0();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF30AE4();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8];
  MEMORY[0x1E0C80A78](v5);
  v2[8] = MEMORY[0x1E0DEE9E0];
  v17 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE22C(&qword_1ED34DC18, 255, v6, MEMORY[0x1E0DB3208]);
  sub_1ABCF5A54(0, &qword_1ED34DFC8, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C(&qword_1ED34DFD0, &qword_1ED34DFC8, v6);
  sub_1ABF31E04();
  sub_1ABF30AFC();
  swift_allocObject();
  v2[9] = sub_1ABF30AF0();
  v17 = MEMORY[0x1E0DEE9D8];
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
  sub_1ABCFE22C((unint64_t *)&unk_1ED350B00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], MEMORY[0x1E0DB41A8]);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1ABCF5A54(0, &qword_1ED350B80, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B88, &qword_1ED350B80, v7);
  sub_1ABF31E04();
  sub_1ABD3515C();
  swift_allocObject();
  v2[10] = sub_1ABF30C34();
  v9 = v14[0];
  sub_1ABD07E04(v14[0], (uint64_t)(v2 + 2));
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCF5A54(0, &qword_1ED350340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ABF366C0;
  sub_1ABF30B20();
  v17 = v11;
  sub_1ABCFE22C((unint64_t *)&unk_1ED350AE0, 255, v10, MEMORY[0x1E0DB33D8]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B50, v10, v8);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B60, (unint64_t *)&unk_1ED350B50, v10);
  sub_1ABF31E04();
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED3467E8, (uint64_t (*)(uint64_t))sub_1ABEE077C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v12 = sub_1ABF31078();
  __swift_destroy_boxed_opaque_existential_1(v9);
  v2[7] = v12;
  return v2;
}

uint64_t sub_1ABEDDD20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  sub_1ABF31060();
  sub_1ABEE07CC();
  v3 = v2;
  swift_allocObject();
  v4 = sub_1ABF313E4();
  a1[3] = v3;
  result = sub_1ABCFE22C(&qword_1EEC44E18, 255, (uint64_t (*)(uint64_t))sub_1ABEE07CC, MEMORY[0x1E0DB2AD8]);
  a1[4] = result;
  *a1 = v4;
  return result;
}

_QWORD *sub_1ABEDDDDC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[2];
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v14[0] = a1;
  v15 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v15);
  v14[1] = (uint64_t)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30EE0();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF30AE4();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB31F8];
  MEMORY[0x1E0C80A78](v5);
  v1[8] = MEMORY[0x1E0DEE9E0];
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE22C(&qword_1ED34DC18, 255, v6, MEMORY[0x1E0DB3208]);
  sub_1ABCF5A54(0, &qword_1ED34DFC8, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C(&qword_1ED34DFD0, &qword_1ED34DFC8, v6);
  sub_1ABF31E04();
  sub_1ABF30AFC();
  swift_allocObject();
  v1[9] = sub_1ABF30AF0();
  v16 = MEMORY[0x1E0DEE9D8];
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
  sub_1ABCFE22C((unint64_t *)&unk_1ED350B00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], MEMORY[0x1E0DB41A8]);
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1ABCF5A54(0, &qword_1ED350B80, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B88, &qword_1ED350B80, v7);
  sub_1ABF31E04();
  sub_1ABD3515C();
  swift_allocObject();
  v1[10] = sub_1ABF30C34();
  v9 = v14[0];
  sub_1ABD07E04(v14[0], (uint64_t)(v1 + 2));
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCF5A54(0, &qword_1ED350340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ABF366C0;
  sub_1ABF30B20();
  v16 = v11;
  sub_1ABCFE22C((unint64_t *)&unk_1ED350AE0, 255, v10, MEMORY[0x1E0DB33D8]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B50, v10, v8);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B60, (unint64_t *)&unk_1ED350B50, v10);
  sub_1ABF31E04();
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED3467E8, (uint64_t (*)(uint64_t))sub_1ABEE077C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v12 = sub_1ABF31078();
  __swift_destroy_boxed_opaque_existential_1(v9);
  v2[7] = v12;
  return v2;
}

unint64_t sub_1ABEDE178@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;

  sub_1ABD1E9F8(0, &qword_1ED346DB0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DB49C0]);
  v3 = v2;
  swift_allocObject();
  v4 = sub_1ABF310C0();
  a1[3] = v3;
  result = sub_1ABEE08E0();
  a1[4] = result;
  *a1 = v4;
  return result;
}

uint64_t sub_1ABEDE1E0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ChartManager()
{
  return objc_opt_self();
}

uint64_t sub_1ABEDE244(uint64_t a1, unint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  uint64_t (*v67)(uint64_t);
  unint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  void *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;

  v91 = a6;
  v83 = a4;
  v108 = a1;
  v106 = *v6;
  v10 = sub_1ABF30C28();
  v96 = *(_QWORD *)(v10 - 8);
  v97 = v10;
  MEMORY[0x1E0C80A78](v10);
  v95 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1ABF30B38();
  v93 = *(_QWORD *)(v12 - 8);
  v94 = v12;
  MEMORY[0x1E0C80A78](v12);
  v89 = v13;
  v92 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1ABF30B14();
  v104 = *(_QWORD *)(v14 - 8);
  v105 = v14;
  MEMORY[0x1E0C80A78](v14);
  v103 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1ABF30760();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v87 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v82 - v20;
  v22 = sub_1ABF30790();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v101) = *a3;
  sub_1ABF2FBD8();
  v107 = sub_1ABF30778();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  if (qword_1ED3466C8 != -1)
    swift_once();
  v28 = sub_1ABF3133C();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED368360);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v90 = a5;
  v85 = v29;
  v29(v21, a5, v16);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v30 = v17;
  v31 = sub_1ABF31324();
  v32 = sub_1ABF31BF4();
  v33 = v32;
  v34 = os_log_type_enabled(v31, v32);
  v109 = a2;
  v88 = v30;
  v98 = v27;
  if (v34)
  {
    v35 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v111 = v36;
    *(_DWORD *)v35 = 136315650;
    LODWORD(v100) = v33;
    sub_1ABF2FF5C();
    v110 = sub_1ABD1FE2C(v108, v109, &v111);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 12) = 2080;
    v37 = sub_1ABF3073C();
    v110 = sub_1ABD1FE2C(v37, v38, &v111);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    v39 = v21;
    v40 = v16;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v39, v16);
    *(_WORD *)(v35 + 22) = 2080;
    sub_1ABF2FF5C();
    v110 = sub_1ABD1FE2C(v107, v27, &v111);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v31, (os_log_type_t)v100, "Preparing stock chart request for symbol: %s, earliestBeginDate: %s, requestID: %s", (uint8_t *)v35, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v36, -1, -1);
    MEMORY[0x1AF438FFC](v35, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    v41 = v21;
    v40 = v16;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v16);

    swift_bridgeObjectRelease_n();
  }
  v43 = v104;
  v42 = v105;
  v44 = v103;
  v111 = 0;
  v112 = 0xE000000000000000;
  sub_1ABF31870();
  sub_1ABF31870();
  LOBYTE(v110) = v101;
  sub_1ABF31F6C();
  v45 = v111;
  v46 = v112;
  sub_1ABD88F14();
  v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1ABF366C0;
  v100 = v45;
  *(_QWORD *)(v47 + 32) = v45;
  *(_QWORD *)(v47 + 40) = v46;
  v84 = v47;
  v48 = qword_1ED346CB8;
  v99 = v46;
  sub_1ABF2FF5C();
  v50 = v90;
  if (v48 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED3468A0, v49, (uint64_t (*)(uint64_t))type metadata accessor for ChartManager, (uint64_t)&unk_1ABF4DA6C);
  sub_1ABF30970();
  v51 = v40;
  if (v111 == 1)
    (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v44, *MEMORY[0x1E0DB32B0], v42);
  else
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v44, v83, v42);
  sub_1ABD1E9F8(0, &qword_1ED34DCE8, MEMORY[0x1E0DB4B98]);
  v83 = v52;
  v53 = v87;
  v85(v87, v50, v51);
  v90 = v51;
  v54 = v92;
  v55 = v93;
  v56 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, v91, v94);
  v57 = v88;
  v58 = (*(unsigned __int8 *)(v88 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  v59 = (v86 + *(unsigned __int8 *)(v55 + 80) + v58) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v60 = (v89 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61 = swift_allocObject();
  v62 = v98;
  *(_QWORD *)(v61 + 16) = v107;
  *(_QWORD *)(v61 + 24) = v62;
  v63 = v102;
  v64 = v108;
  *(_QWORD *)(v61 + 32) = v102;
  *(_QWORD *)(v61 + 40) = v64;
  *(_QWORD *)(v61 + 48) = v109;
  *(_BYTE *)(v61 + 56) = v101;
  (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v61 + v58, v53, v90);
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v61 + v59, v54, v56);
  v65 = (uint64_t *)(v61 + v60);
  v66 = v99;
  *v65 = v100;
  v65[1] = v66;
  v101 = *(_QWORD *)(v63 + 80);
  v111 = MEMORY[0x1E0DEE9D8];
  v67 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868];
  sub_1ABCFE22C((unint64_t *)&qword_1ED350AF8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868], MEMORY[0x1E0DB3870]);
  sub_1ABCF5A54(0, &qword_1ED350B68, v67, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v68 = v98;
  sub_1ABD0223C((unint64_t *)&qword_1ED350B70, &qword_1ED350B68, v67);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v69 = v109;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v70 = v95;
  v71 = v97;
  sub_1ABF31E04();
  v72 = v107;
  v73 = v103;
  sub_1ABF3112C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v70, v71);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v73, v105);
  v74 = (_QWORD *)swift_allocObject();
  v74[2] = v72;
  v74[3] = v68;
  v75 = v72;
  v76 = v99;
  v74[4] = v100;
  v74[5] = v76;
  v74[6] = v108;
  v74[7] = v69;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v77 = (void *)sub_1ABF31114();
  type metadata accessor for Chart(0);
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v78 = swift_allocObject();
  *(_QWORD *)(v78 + 16) = v75;
  *(_QWORD *)(v78 + 24) = v68;
  v79 = (void *)sub_1ABF31114();
  v80 = sub_1ABF311B0();
  swift_release();
  swift_release();

  return v80;
}

uint64_t sub_1ABEDEB60(uint64_t a1, uint64_t a2, unint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v35;

  if (qword_1ED3466C8 != -1)
    swift_once();
  v16 = a10;
  v17 = sub_1ABF3133C();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED368360);
  swift_bridgeObjectRetain_n();
  v18 = sub_1ABF31324();
  v19 = sub_1ABF31BF4();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v32 = a8;
    v21 = swift_slowAlloc();
    v35 = v21;
    *(_DWORD *)v20 = 136315138;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(a2, a3, &v35);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v18, v19, "Performing chart fetch with requestID: %s", v20, 0xCu);
    swift_arrayDestroy();
    v22 = v21;
    a8 = v32;
    MEMORY[0x1AF438FFC](v22, -1, -1);
    v23 = v20;
    v16 = a10;
    MEMORY[0x1AF438FFC](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v24 = a4[5];
  v25 = a4[6];
  __swift_project_boxed_opaque_existential_1(a4 + 2, v24);
  LOBYTE(v35) = a7;
  (*(void (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8))(a5, a6, &v35, a8, a9, v24, v25);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a2;
  v26[3] = a3;
  v26[4] = v16;
  v26[5] = a11;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v27 = (void *)sub_1ABF31114();
  sub_1ABD1E9F8(0, (unint64_t *)&qword_1ED34DE40, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_1ABF31174();
  swift_release();
  swift_release();

  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a2;
  *(_QWORD *)(v28 + 24) = a3;
  sub_1ABF2FF5C();
  v29 = (void *)sub_1ABF31114();
  v30 = sub_1ABF311B0();
  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1ABEDEE60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v24;

  if (qword_1ED3466C8 != -1)
    swift_once();
  v10 = sub_1ABF3133C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED368360);
  swift_bridgeObjectRetain_n();
  v11 = sub_1ABF31324();
  v12 = sub_1ABF31BF4();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = a2;
    v15 = swift_slowAlloc();
    v24 = v15;
    *(_DWORD *)v13 = 136315138;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(v14, a3, (uint64_t *)&v24);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v11, v12, "Chart fetch with ID: %s returned success", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v15, -1, -1);
    MEMORY[0x1AF438FFC](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1ABCF5A54(0, &qword_1ED347050, (uint64_t (*)(uint64_t))sub_1ABD1783C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1ABD1783C();
  v17 = v16;
  v18 = *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80);
  v19 = (v18 + 32) & ~v18;
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1ABF366C0;
  v21 = (_QWORD *)(v20 + v19);
  v22 = v20 + v19 + *(int *)(v17 + 48);
  *v21 = a4;
  v21[1] = a5;
  sub_1ABD177BC(a1, v22);
  sub_1ABF2FF5C();
  v24 = sub_1ABDEA374(v20);
  sub_1ABE5165C();
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABEDF0D4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12[4];

  if (qword_1ED3466C8 != -1)
    swift_once();
  v0 = sub_1ABF3133C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED368360);
  swift_bridgeObjectRetain_n();
  v1 = sub_1ABF31324();
  v2 = sub_1ABF31BF4();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v12[0] = v4;
    *(_DWORD *)v3 = 136315138;
    v5 = sub_1ABF2FF5C();
    v6 = MEMORY[0x1AF437C34](v5, MEMORY[0x1E0DEA968]);
    v8 = v7;
    swift_bridgeObjectRelease();
    sub_1ABD1FE2C(v6, v8, v12);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v1, v2, "Reading charts from cache for symbols: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v4, -1, -1);
    MEMORY[0x1AF438FFC](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1ABF31060();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_1ABF30DFC();
  v9 = (void *)sub_1ABF31114();
  sub_1ABD1E9F8(0, (unint64_t *)&qword_1ED34DE40, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  v10 = sub_1ABF31180();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v10;
}

uint64_t sub_1ABEDF334()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10[4];

  if (qword_1ED3466C8 != -1)
    swift_once();
  v0 = sub_1ABF3133C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED368360);
  swift_bridgeObjectRetain_n();
  v1 = sub_1ABF31324();
  v2 = sub_1ABF31BF4();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v10[0] = v4;
    *(_DWORD *)v3 = 136315138;
    type metadata accessor for Chart(0);
    sub_1ABF2FF5C();
    v5 = sub_1ABF31660();
    v7 = v6;
    swift_bridgeObjectRelease();
    sub_1ABD1FE2C(v5, v7, v10);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v1, v2, "Writing charts to cache: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v4, -1, -1);
    MEMORY[0x1AF438FFC](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1ABF31060();
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  v8 = sub_1ABF30DF0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8;
}

uint64_t sub_1ABEDF554(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v52 = a6;
  v49 = a3;
  sub_1ABCF5A54(0, &qword_1ED34DA40, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v51 = (uint64_t)v45 - v15;
  v53 = type metadata accessor for Chart(0);
  v50 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v48 = (uint64_t)v45 - v19;
  v20 = *a1;
  if (qword_1ED3466C8 != -1)
    swift_once();
  v21 = sub_1ABF3133C();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED368360);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v22 = sub_1ABF31324();
  v23 = sub_1ABF31BF4();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v46 = a7;
    v25 = v24;
    v26 = swift_slowAlloc();
    v47 = a8;
    v45[0] = v26;
    v55 = v26;
    *(_DWORD *)v25 = 136315394;
    v45[1] = a2;
    sub_1ABF2FF5C();
    v54 = sub_1ABD1FE2C(v49, a4, &v55);
    v49 = a5;
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    sub_1ABF2FF5C();
    v27 = sub_1ABF31630();
    v28 = v17;
    v30 = v29;
    swift_bridgeObjectRelease();
    v54 = sub_1ABD1FE2C(v27, v30, &v55);
    a5 = v49;
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    v17 = v28;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v22, v23, "Chart request with ID: %s completed with results: %s", (uint8_t *)v25, 0x16u);
    v31 = v45[0];
    swift_arrayDestroy();
    a8 = v47;
    MEMORY[0x1AF438FFC](v31, -1, -1);
    v32 = v25;
    a7 = v46;
    MEMORY[0x1AF438FFC](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v33 = v52;
  if (*(_QWORD *)(v20 + 16))
  {
    sub_1ABF2FF5C();
    v34 = sub_1ABD00F9C(a5, v33);
    if ((v35 & 1) != 0)
    {
      v37 = v50;
      v36 = v51;
      sub_1ABD177BC(*(_QWORD *)(v20 + 56) + *(_QWORD *)(v50 + 72) * v34, v51);
      v38 = 0;
    }
    else
    {
      v38 = 1;
      v37 = v50;
      v36 = v51;
    }
    v39 = v53;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v36, v38, 1, v53);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v36, 1, v39) != 1)
    {
      v42 = v48;
      sub_1ABD72E2C(v36, v48);
      sub_1ABEDFA1C(a7, a8, v42);
      sub_1ABD177BC(v42, (uint64_t)v17);
      sub_1ABCF5A54(0, &qword_1ED346DE8, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v43 = sub_1ABF311E0();
      sub_1ABD17800(v42);
      return v43;
    }
  }
  else
  {
    v36 = v51;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v51, 1, 1, v53);
  }
  sub_1ABEE0B3C(v36);
  v40 = *(_QWORD *)(v20 + 16);
  sub_1ABEE0B90();
  swift_allocError();
  if (v40)
    *v41 = 0;
  else
    *v41 = 1;
  sub_1ABCF5A54(0, &qword_1ED346DE8, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311D4();
}

uint64_t sub_1ABEDFA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  uint64_t v18;
  uint64_t v19;
  uint64_t k;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;

  v4 = v3;
  sub_1ABF30AC0();
  swift_beginAccess();
  v8 = *(_QWORD *)(v3 + 64);
  if (*(_QWORD *)(v8 + 16))
  {
    sub_1ABF2FF5C();
    v9 = sub_1ABD00F9C(a1, a2);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
      swift_endAccess();
      sub_1ABF2FF5C();
      result = swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  result = swift_endAccess();
  v11 = MEMORY[0x1E0DEE9D8];
LABEL_6:
  v24 = MEMORY[0x1E0DEE9D8];
  if (v11 >> 62)
  {
    sub_1ABF2FF5C();
    v13 = sub_1ABF31FE4();
    result = swift_bridgeObjectRelease();
    if (!v13)
      goto LABEL_21;
  }
  else
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v13)
      goto LABEL_21;
  }
  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v13; ++i)
    {
      v15 = MEMORY[0x1AF4380CC](i, v11);
      v16 = MEMORY[0x1AF4390D4](v15 + 16);
      swift_unknownObjectRelease();
      if (v16)
      {
        sub_1ABF31EF4();
        sub_1ABF31F24();
        sub_1ABF31F30();
        sub_1ABF31F00();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (j = 0; j != v13; ++j)
    {
      v18 = MEMORY[0x1AF4390D4](*(_QWORD *)(v11 + 8 * j + 32) + 16);
      sub_1ABF2FF68();
      swift_unknownObjectRelease();
      if (v18)
      {
        sub_1ABF31EF4();
        sub_1ABF31F24();
        sub_1ABF31F30();
        sub_1ABF31F00();
      }
      else
      {
        swift_release();
      }
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  result = sub_1ABF30ACC();
  if ((v24 & 0x8000000000000000) == 0 && (v24 & 0x4000000000000000) == 0)
  {
    v19 = *(_QWORD *)(v24 + 16);
    if (v19)
      goto LABEL_24;
    return swift_release();
  }
  sub_1ABF2FF5C();
  v19 = sub_1ABF31FE4();
  result = swift_release();
  if (!v19)
    return swift_release();
LABEL_24:
  if (v19 >= 1)
  {
    for (k = 0; k != v19; ++k)
    {
      if ((v24 & 0xC000000000000001) != 0)
      {
        v21 = MEMORY[0x1AF4380CC](k, v24);
      }
      else
      {
        v21 = *(_QWORD *)(v24 + 8 * k + 32);
        sub_1ABF2FF68();
      }
      if (MEMORY[0x1AF4390D4](v21 + 16))
      {
        v22 = *(_QWORD *)(v21 + 24);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v22 + 8))(v4, &off_1E5AE1180, a3, ObjectType, v22);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    return swift_release();
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1ABEDFD2C(void *a1, uint64_t a2, unint64_t a3, const char *a4)
{
  uint64_t v8;
  id v9;
  id v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  NSObject *oslog;
  uint64_t v17;

  if (qword_1ED3466C8 != -1)
    swift_once();
  v8 = sub_1ABF3133C();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED368360);
  sub_1ABF2FF5C();
  v9 = a1;
  sub_1ABF2FF5C();
  v10 = a1;
  oslog = sub_1ABF31324();
  v11 = sub_1ABF31BE8();
  if (os_log_type_enabled(oslog, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v17 = v13;
    *(_DWORD *)v12 = 136315394;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(a2, a3, &v17);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_getErrorValue();
    v14 = sub_1ABF322C0();
    sub_1ABD1FE2C(v14, v15, &v17);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1ABCEF000, oslog, v11, a4, (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v13, -1, -1);
    MEMORY[0x1AF438FFC](v12, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_1ABEDFF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1ABF30AC0();
  v8 = (uint64_t *)(v4 + 64);
  swift_beginAccess();
  v9 = *(_QWORD *)(v4 + 64);
  if (*(_QWORD *)(v9 + 16))
  {
    sub_1ABF2FF5C();
    v10 = sub_1ABD00F9C(a3, a4);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
      swift_endAccess();
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_6:
  v24 = MEMORY[0x1E0DEE9D8];
  if (v12 >> 62)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    v13 = result;
    if (result)
      goto LABEL_8;
LABEL_19:
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
    goto LABEL_20;
  }
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  if (!v13)
    goto LABEL_19;
LABEL_8:
  if (v13 < 1)
  {
    __break(1u);
    return result;
  }
  v22 = a2;
  for (i = 0; i != v13; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0)
    {
      v16 = MEMORY[0x1AF4380CC](i, v12);
    }
    else
    {
      v16 = *(_QWORD *)(v12 + 8 * i + 32);
      sub_1ABF2FF68();
    }
    v17 = MEMORY[0x1AF4390D4](v16 + 16);
    swift_unknownObjectRelease();
    if (v17)
    {
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v18 = v24;
  a2 = v22;
LABEL_20:
  swift_bridgeObjectRelease();
  type metadata accessor for ChartManagerObserverProxy();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v19 + 24) = a2;
  v20 = swift_unknownObjectWeakAssign();
  MEMORY[0x1AF437C04](v20);
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  swift_beginAccess();
  sub_1ABF2FF5C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v8;
  *v8 = 0x8000000000000000;
  sub_1ABDF169C(v18, a3, a4, isUniquelyReferenced_nonNull_native);
  *v8 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_1ABF30ACC();
}

uint64_t sub_1ABEE027C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1ABF30AC0();
  v8 = (_QWORD *)(v4 + 64);
  swift_beginAccess();
  v9 = *(_QWORD *)(v4 + 64);
  if (*(_QWORD *)(v9 + 16))
  {
    sub_1ABF2FF5C();
    v10 = sub_1ABD00F9C(a3, a4);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
      swift_endAccess();
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_6:
  v25 = MEMORY[0x1E0DEE9D8];
  if (v12 >> 62)
    goto LABEL_22;
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_unknownObjectRetain();
  if (v13)
  {
    while (1)
    {
      v21 = v8;
      v22 = a3;
      v23 = a4;
      v14 = 0;
      a4 = v12 & 0xFFFFFFFFFFFFFF8;
      while ((v12 & 0xC000000000000001) != 0)
      {
        v15 = MEMORY[0x1AF4380CC](v14, v12);
        v8 = (_QWORD *)(v14 + 1);
        if (__OFADD__(v14, 1))
        {
LABEL_19:
          __break(1u);
LABEL_20:
          v18 = v25;
          a4 = v23;
          v8 = v21;
          a3 = v22;
          goto LABEL_24;
        }
LABEL_14:
        v16 = MEMORY[0x1AF4390D4](v15 + 16);
        if (v16 && (v17 = v16, swift_unknownObjectRelease(), v17 == a1))
        {
          swift_release();
        }
        else
        {
          sub_1ABF31EF4();
          a3 = *(_QWORD *)(v25 + 16);
          sub_1ABF31F24();
          sub_1ABF31F30();
          sub_1ABF31F00();
        }
        ++v14;
        if (v8 == (_QWORD *)v13)
          goto LABEL_20;
      }
      if (v14 < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_22:
      swift_unknownObjectRetain();
      v13 = sub_1ABF31FE4();
      if (!v13)
        goto LABEL_23;
    }
    v15 = *(_QWORD *)(v12 + 8 * v14 + 32);
    sub_1ABF2FF68();
    v8 = (_QWORD *)(v14 + 1);
    if (__OFADD__(v14, 1))
      goto LABEL_19;
    goto LABEL_14;
  }
LABEL_23:
  v18 = MEMORY[0x1E0DEE9D8];
LABEL_24:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_beginAccess();
  sub_1ABF2FF5C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = *v8;
  *v8 = 0x8000000000000000;
  sub_1ABDF169C(v18, a3, a4, isUniquelyReferenced_nonNull_native);
  *v8 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_1ABF30ACC();
}

uint64_t sub_1ABEE0504@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v3 = *a1;
  if (qword_1ED3466C8 != -1)
    swift_once();
  v4 = sub_1ABF3133C();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED368360);
  swift_bridgeObjectRetain_n();
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BF4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    type metadata accessor for Chart(0);
    sub_1ABF2FF5C();
    v9 = sub_1ABF31660();
    v11 = v10;
    swift_bridgeObjectRelease();
    sub_1ABD1FE2C(v9, v11, &v13);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v5, v6, "Found charts in cache for symbols: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a2 = v3;
  return sub_1ABF2FF5C();
}

uint64_t type metadata accessor for ChartManagerObserverProxy()
{
  return objc_opt_self();
}

uint64_t sub_1ABEE0730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1ABEE0C60(a1, a3, v3, ObjectType, a2);
}

uint64_t sub_1ABEE0774@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABEDDD20(a1);
}

unint64_t sub_1ABEE077C()
{
  unint64_t result;

  result = qword_1ED346658;
  if (!qword_1ED346658)
  {
    type metadata accessor for Chart(255);
    result = swift_getExtendedExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED346658);
  }
  return result;
}

void sub_1ABEE07CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC44E08)
  {
    type metadata accessor for Chart(255);
    sub_1ABEE089C();
    sub_1ABCFE22C(&qword_1ED34DA28, 255, type metadata accessor for Chart, (uint64_t)&unk_1ABF3AA58);
    sub_1ABCFE22C(&qword_1ED34DA20, 255, type metadata accessor for Chart, (uint64_t)&unk_1ABF3AA80);
    v0 = sub_1ABF313FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC44E08);
  }
}

unint64_t sub_1ABEE089C()
{
  unint64_t result;

  result = qword_1EEC44E10;
  if (!qword_1EEC44E10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DB7C, &type metadata for ChartManager.StoreDescriptor);
    atomic_store(result, (unint64_t *)&qword_1EEC44E10);
  }
  return result;
}

unint64_t sub_1ABEE08E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED346DA8;
  if (!qword_1ED346DA8)
  {
    sub_1ABD1E9F8(255, &qword_1ED346DB0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DB49C0]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DB49F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED346DA8);
  }
  return result;
}

uint64_t sub_1ABEE0938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1ABF30760();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1ABF30B38();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABEE0A1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(sub_1ABF30760() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_1ABF30B38() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1ABEDEB60(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), v1 + v4, v1 + v7, *(_QWORD *)(v1 + v8), *(_QWORD *)(v1 + v8 + 8));
}

uint64_t sub_1ABEE0AC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABEE0AFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABEDF554(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

void sub_1ABEE0B1C(void *a1)
{
  uint64_t v1;

  sub_1ABEDFD2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), "Chart request with ID: %s completed with error: %s");
}

uint64_t sub_1ABEE0B3C(uint64_t a1)
{
  uint64_t v2;

  sub_1ABCF5A54(0, &qword_1ED34DA40, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1ABEE0B90()
{
  unint64_t result;

  result = qword_1ED346898;
  if (!qword_1ED346898)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DB3C, &type metadata for ChartManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED346898);
  }
  return result;
}

uint64_t sub_1ABEE0BD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABEE0C00(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABEDEE60(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1ABEE0C1C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABEE0C40(void *a1)
{
  uint64_t v1;

  sub_1ABEDFD2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), "Chart fetch with ID: %s returned error: %s");
}

uint64_t sub_1ABEE0C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t ObjectType;

  result = MEMORY[0x1AF4390D4](a3 + 16);
  if (result)
  {
    v10 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a5, a2, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ChartManager.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABEE0D34 + 4 * byte_1ABF4D985[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABEE0D68 + 4 * byte_1ABF4D980[v4]))();
}

uint64_t sub_1ABEE0D68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEE0D70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEE0D78);
  return result;
}

uint64_t sub_1ABEE0D84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEE0D8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABEE0D90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEE0D98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ChartManager.Errors()
{
  return &type metadata for ChartManager.Errors;
}

ValueMetadata *type metadata accessor for ChartManager.StoreDescriptor()
{
  return &type metadata for ChartManager.StoreDescriptor;
}

unint64_t sub_1ABEE0DC8()
{
  unint64_t result;

  result = qword_1EEC44E20;
  if (!qword_1EEC44E20)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DB14, &type metadata for ChartManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEC44E20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StockTestDataLocator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABEE0E5C + 4 * byte_1ABF4DBB5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABEE0E90 + 4 * byte_1ABF4DBB0[v4]))();
}

uint64_t sub_1ABEE0E90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEE0E98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEE0EA0);
  return result;
}

uint64_t sub_1ABEE0EAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEE0EB4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABEE0EB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEE0EC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StockTestDataLocator()
{
  return &type metadata for StockTestDataLocator;
}

uint64_t sub_1ABEE0EDC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEE0F14 + 4 * byte_1ABF4DBBA[a1]))(0x73696C6863746177, 0xE900000000000074);
}

uint64_t sub_1ABEE0F14()
{
  return 0x726F74732D706F74;
}

unint64_t sub_1ABEE0F34()
{
  return 0xD000000000000015;
}

uint64_t sub_1ABEE0F7C()
{
  unsigned __int8 *v0;

  return sub_1ABEE0EDC(*v0);
}

unint64_t sub_1ABEE0F88()
{
  unint64_t result;

  result = qword_1EEC44E28;
  if (!qword_1EEC44E28)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DC40, &type metadata for StockTestDataLocator);
    atomic_store(result, &qword_1EEC44E28);
  }
  return result;
}

uint64_t sub_1ABEE0FCC(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  v7 = v6 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy;
  v8 = sub_1ABF30B38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
  sub_1ABD065C8(a3, v6 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
  return v6;
}

uint64_t sub_1ABEE1054(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = v3 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy;
  v7 = sub_1ABF30B38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a2, v7);
  sub_1ABD065C8(a3, v3 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
  return v3;
}

uint64_t sub_1ABEE10C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v2 = v1;
  sub_1ABCF5A54(0, &qword_1ED34C4C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v2;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF31168();
  v5 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();

  v6 = (void *)sub_1ABF31114();
  sub_1ABE8A79C();
  v7 = sub_1ABF31180();
  swift_release();

  return v7;
}

uint64_t sub_1ABEE11D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v4 = sub_1ABF305D4();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABEE124C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;

  if (qword_1ED347358 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED34C4D8);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = v0[8];
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v27 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = sub_1ABF2FF5C();
    v8 = MEMORY[0x1AF437C34](v7, v4);
    v10 = v9;
    swift_bridgeObjectRelease();
    v0[4] = sub_1ABD1FE2C(v8, v10, &v27);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "SDSAuthTokenService will fetch auth tokens for URLs: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v6, -1, -1);
    MEMORY[0x1AF438FFC](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v11 = v0[10];
  v12 = v0[8];
  v13 = v0[9];
  v14 = v0[6];
  sub_1ABF31294();
  sub_1ABF30568();
  v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v0[12] = v15;
  v15(v11, v12);
  sub_1ABEE2B64(v14);
  v16 = v0[6];
  sub_1ABF30220();
  swift_allocObject();
  sub_1ABF2FF5C();
  sub_1ABF30214();
  v0[2] = v16;
  sub_1ABEE36F8();
  v17 = sub_1ABF30208();
  v0[13] = v17;
  v0[14] = v18;
  v19 = v17;
  v20 = v18;
  v22 = v0[10];
  v21 = v0[11];
  v23 = v0[8];
  v24 = v0[9];
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v22, v21, v23);
  sub_1ABD0F474(v19, v20);
  sub_1ABF30148();
  sub_1ABF30130();
  sub_1ABD0F474(v19, v20);
  sub_1ABF3016C();
  sub_1ABF30160();
  v25 = (_QWORD *)swift_task_alloc();
  v0[15] = v25;
  *v25 = v0;
  v25[1] = sub_1ABEE1784;
  v25[17] = v19;
  v25[18] = v20;
  return swift_task_switch();
}

uint64_t sub_1ABEE1784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[16] = a1;
  v4[17] = a2;
  v4[18] = v2;
  swift_task_dealloc();
  sub_1ABD0F430(v4[13], v4[14]);
  return swift_task_switch();
}

uint64_t sub_1ABEE17FC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;

  if (*(_QWORD *)(v0 + 136))
  {
    sub_1ABF30160();
    swift_bridgeObjectRelease();
  }
  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  sub_1ABD0F430(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  v2(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABEE1898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  sub_1ABD0F430(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  v2 = sub_1ABF30184();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  (*(void (**)(_QWORD, _QWORD))(v0 + 96))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABEE191C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1ABD7E2B8;
  return sub_1ABEE11D8(a1, v5, v4);
}

uint64_t sub_1ABEE1980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;

  v4 = sub_1ABF30B38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30184();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABEE35C4();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy, v4);
  v12 = (void *)sub_1ABF30D78();
  sub_1ABF2FF68();
  sub_1ABF30D48();
  if (qword_1ED347358 != -1)
    swift_once();
  v13 = sub_1ABF3133C();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED34C4D8);
  v14 = v12;
  v15 = sub_1ABF31324();
  v16 = sub_1ABF31BF4();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v24 = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = sub_1ABF30C04();
    v23[1] = sub_1ABD1FE2C(v19, v20, &v24);
    sub_1ABF31D80();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v15, v16, "SDSAuthTokenService will enqueue network operation: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v18, -1, -1);
    MEMORY[0x1AF438FFC](v17, -1, -1);

  }
  else
  {

  }
  sub_1ABF30BE0();
  v21 = sub_1ABF30BBC();

  return v21;
}

uint64_t sub_1ABEE1C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)(a2 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
  v8 = *(_QWORD *)(a2 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor + 24);
  v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  v10 = sub_1ABF30F34();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v6, a1, v10);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, v8, v9);
  return sub_1ABCFC3BC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEvent);
}

uint64_t sub_1ABEE1D10@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t result;
  _QWORD v58[2];
  _QWORD *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  _QWORD v80[3];
  uint64_t v81;

  v3 = v2;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v78 = (uint64_t)v58 - v7;
  v81 = sub_1ABF30760();
  v77 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v60 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v79 = (char *)v58 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v58 - v12;
  v69 = type metadata accessor for SDSAuthToken();
  MEMORY[0x1E0C80A78](v69);
  v68 = (uint64_t)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v67 = (char *)v58 - v16;
  v17 = sub_1ABF305D4();
  v71 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v58 - v21;
  v66 = type metadata accessor for SDSSignResponse.Item(0);
  MEMORY[0x1E0C80A78](v66);
  v70 = (uint64_t)v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *a1;
  if (!*(_QWORD *)(v25 + 16))
  {
    sub_1ABF2FF5C();
    v29 = MEMORY[0x1E0DEE9E0];
    goto LABEL_14;
  }
  v76 = *(_QWORD *)(v25 + 16);
  v59 = a2;
  v26 = v25 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  v62 = *(_QWORD *)(v23 + 72);
  v58[1] = v25;
  swift_bridgeObjectRetain_n();
  v27 = v26;
  v28 = v13;
  v29 = MEMORY[0x1E0DEE9E0];
  v61 = v28;
  v64 = v19;
  v65 = v17;
  v31 = v70;
  v30 = v71;
  v63 = v22;
  do
  {
    v73 = v27;
    v74 = v29;
    sub_1ABEE3580(v27, v31);
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
    v44(v22, v31, v17);
    sub_1ABF30754();
    v45 = ((uint64_t (*)(char *, uint64_t, uint64_t))v44)(v19, v31, v17);
    v46 = (uint64_t *)(v31 + *(int *)(v66 + 20));
    v47 = *v46;
    v48 = v46[1];
    v80[0] = 95;
    v80[1] = 0xE100000000000000;
    MEMORY[0x1E0C80A78](v45);
    v58[-2] = v80;
    swift_bridgeObjectRetain_n();
    v49 = sub_1ABD11938(0x7FFFFFFFFFFFFFFFLL, 1, sub_1ABD11E28, (uint64_t)&v58[-4], v47, v48);
    swift_bridgeObjectRelease();
    v50 = *(_QWORD *)(v49 + 16);
    v75 = v3;
    v72 = v47;
    if (!v50)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v78, 1, 1, v81);
      goto LABEL_11;
    }
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    sub_1ABF31B04();
    if ((v51 & 1) != 0)
      goto LABEL_10;
    v52 = v78;
    sub_1ABF30700();
    v53 = v77;
    v54 = v81;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v77 + 56))(v52, 0, 1, v81);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v52, 1, v54) != 1)
    {
      v32 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 32);
      v32(v79, v78, v81);
      goto LABEL_4;
    }
LABEL_11:
    v55 = v60;
    sub_1ABF30754();
    sub_1ABF306C4();
    v56 = v77;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v81);
    sub_1ABCFF610(v78);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 32);
LABEL_4:
    v33 = v67;
    v34 = v81;
    ((void (*)(char *))v32)(v67);
    v35 = v69;
    v36 = v71;
    v19 = v64;
    v37 = v65;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v33[*(int *)(v69 + 20)], v64, v65);
    v38 = (uint64_t *)&v33[*(int *)(v35 + 24)];
    *v38 = v72;
    v38[1] = v48;
    v32(&v33[*(int *)(v35 + 28)], (uint64_t)v79, v34);
    v39 = (uint64_t)v33;
    v17 = v37;
    v40 = v68;
    sub_1ABEA7560(v39, v68);
    v41 = v74;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v80[0] = v41;
    v43 = v40;
    v30 = v36;
    v22 = v63;
    sub_1ABDF180C(v43, (uint64_t)v63, isUniquelyReferenced_nonNull_native);
    v29 = v80[0];
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v37);
    v31 = v70;
    sub_1ABCFC3BC(v70, type metadata accessor for SDSSignResponse.Item);
    v27 = v73 + v62;
    v3 = v75;
    --v76;
  }
  while (v76);
  swift_bridgeObjectRelease();
  a2 = v59;
LABEL_14:
  result = swift_bridgeObjectRelease();
  *a2 = v29;
  return result;
}

uint64_t sub_1ABEE2280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy;
  v2 = sub_1ABF30B38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
  return v0;
}

uint64_t sub_1ABEE22DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy;
  v2 = sub_1ABF30B38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABEE2344(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = *v1;
  sub_1ABCF5A54(0, &qword_1ED34C4C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v3;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF31168();
  v5 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();

  v6 = (void *)sub_1ABF31114();
  sub_1ABE8A79C();
  v7 = sub_1ABF31180();
  swift_release();

  return v7;
}

uint64_t sub_1ABEE2454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ABEE245C()
{
  return type metadata accessor for SDSAuthTokenService(0);
}

uint64_t sub_1ABEE2464()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABEE2470()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for SDSRequestSigner()
{
  return &type metadata for SDSRequestSigner;
}

ValueMetadata *type metadata accessor for SDSSignResponse()
{
  return &type metadata for SDSSignResponse;
}

uint64_t sub_1ABEE2498(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    sub_1ABE5E018();
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = sub_1ABF317A4();
    v9 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1ABEE251C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v24 = a2;
  v28 = sub_1ABF305D4();
  v25 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1ED34E600, (uint64_t (*)(void))sub_1ABEE3C98, (uint64_t)&type metadata for SDSSignResponse.Item.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v27 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - v6;
  v8 = type metadata accessor for SDSSignResponse.Item(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEE3C98();
  v11 = v29;
  sub_1ABF3235C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = a1;
  v29 = v5;
  v12 = (uint64_t)v10;
  v13 = v25;
  v31 = 0;
  sub_1ABCFE1EC(&qword_1ED34EA90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  v15 = v26;
  v14 = v27;
  v16 = v28;
  sub_1ABF32110();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v30 = 1;
  v17 = sub_1ABF320E0();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v14);
  v20 = (uint64_t *)(v12 + *(int *)(v8 + 20));
  *v20 = v17;
  v20[1] = v19;
  sub_1ABEE3580(v12, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_1ABCFC3BC(v12, type metadata accessor for SDSSignResponse.Item);
}

uint64_t sub_1ABEE27B8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1ABCF4DA8(0, &qword_1ED34E610, (uint64_t (*)(void))sub_1ABEE3CDC, (uint64_t)&type metadata for SDSSignRequest.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEE3CDC();
  sub_1ABF32368();
  v10[1] = a2;
  sub_1ABCF5A54(0, &qword_1ED34E5A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABEE3D20();
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABEE28EC()
{
  _BYTE *v0;

  if (*v0)
    return 0x654B737365636361;
  else
    return 7107189;
}

uint64_t sub_1ABEE2924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABEE3150(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABEE2948()
{
  sub_1ABEE3C98();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEE2970()
{
  sub_1ABEE3C98();
  return sub_1ABF32398();
}

uint64_t sub_1ABEE2998@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABEE251C(a1, a2);
}

unint64_t sub_1ABEE29AC()
{
  return 0xD000000000000011;
}

uint64_t sub_1ABEE29C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABEE323C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1ABEE29F0()
{
  sub_1ABEE3430();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEE2A18()
{
  sub_1ABEE3430();
  return sub_1ABF32398();
}

_QWORD *sub_1ABEE2A40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABEE32C0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABEE2A68()
{
  return 1936487029;
}

uint64_t sub_1ABEE2A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1936487029 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABEE2AFC()
{
  sub_1ABEE3CDC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEE2B24()
{
  sub_1ABEE3CDC();
  return sub_1ABF32398();
}

uint64_t sub_1ABEE2B4C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABEE27B8(a1, *v1);
}

uint64_t sub_1ABEE2B64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  uint64_t *v24;
  _QWORD v25[3];
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  unint64_t v28;
  uint64_t v29;

  v2 = sub_1ABF305D4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v25 - v8;
  v10 = sub_1ABF3058C();
  if (v11)
    v12 = v10;
  else
    v12 = 0;
  v29 = v12;
  v13 = 0xE000000000000000;
  if (v11)
    v13 = v11;
  v28 = v13;
  v14 = *(_QWORD *)(a1 + 16);
  v25[2] = a1;
  if (v14)
  {
    v15 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v26 = *(_QWORD *)(v3 + 72);
    v27 = v16;
    sub_1ABF2FF5C();
    while (1)
    {
      v27(v9, v15, v2);
      v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v17(v9, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
      v18 = sub_1ABF3058C();
      if (v19)
        v20 = v18;
      else
        v20 = 0;
      if (v19)
        v21 = v19;
      else
        v21 = 0xE000000000000000;
      if ((v20 != v29 || v21 != v28) && (sub_1ABF3223C() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1ABEE373C();
        swift_allocError();
        v23 = v28;
        *v24 = v29;
        v24[1] = v23;
        v24[2] = v20;
        v24[3] = v21;
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      v15 += v26;
      if (!--v14)
        goto LABEL_21;
    }
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    sub_1ABF2FF5C();
LABEL_21:
    v17(v9, 1, 1, v2);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEE2DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return swift_task_switch();
}

uint64_t sub_1ABEE2E00()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (void *)objc_opt_self();
  v2 = sub_1ABF30640();
  v0[19] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1ABEE2ECC;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1ABEE2498;
  v4[3] = &block_descriptor_38;
  v4[4] = v3;
  objc_msgSend(v1, sel_signatureFromData_completion_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_1ABEE2ECC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1ABEE2F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1ABEE2F6C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 152);
  swift_willThrow();

  if (qword_1ED347358 != -1)
    swift_once();
  v2 = *(void **)(v0 + 160);
  v3 = sub_1ABF3133C();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED34C4D8);
  v4 = v2;
  v5 = v2;
  v6 = sub_1ABF31324();
  v7 = sub_1ABF31BE8();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 160);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v13;
    sub_1ABF31D80();
    *v11 = v13;

    _os_log_impl(&dword_1ABCEF000, v6, v7, "SDSAuthTokenService failed to generate mescal signature with error: %@", v10, 0xCu);
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34E160, (uint64_t (*)(uint64_t))sub_1ABD7E230, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v11, -1, -1);
    MEMORY[0x1AF438FFC](v10, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABEE3150(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x654B737365636361 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1ABEE323C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001ABF62DF0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

_QWORD *sub_1ABEE32C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABCF4DA8(0, &qword_1ED34E5F8, (uint64_t (*)(void))sub_1ABEE3430, (uint64_t)&type metadata for SDSSignResponse.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEE3430();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABCF5A54(0, &qword_1ED34E5B0, type metadata accessor for SDSSignResponse.Item, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABEE3488();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABEE3430()
{
  unint64_t result;

  result = qword_1ED34E4F8;
  if (!qword_1ED34E4F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DEF8, &type metadata for SDSSignResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34E4F8);
  }
  return result;
}

uint64_t type metadata accessor for SDSSignResponse.Item(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED34E530);
}

unint64_t sub_1ABEE3488()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED34E5B8;
  if (!qword_1ED34E5B8)
  {
    sub_1ABCF5A54(255, &qword_1ED34E5B0, type metadata accessor for SDSSignResponse.Item, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABCFE1EC(&qword_1ED34E528, type metadata accessor for SDSSignResponse.Item, (uint64_t)&unk_1ABF4DED0);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34E5B8);
  }
  return result;
}

uint64_t sub_1ABEE351C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1ABD37AA0;
  return sub_1ABEE11D8(a1, v5, v4);
}

uint64_t sub_1ABEE3580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDSSignResponse.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1ABEE35C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E578)
  {
    sub_1ABCF4DA8(255, &qword_1ED34E568, (uint64_t (*)(void))sub_1ABEE3644, (uint64_t)&type metadata for SDSSignResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB3B98]);
    sub_1ABEE3688();
    v0 = sub_1ABF30D84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E578);
  }
}

unint64_t sub_1ABEE3644()
{
  unint64_t result;

  result = qword_1ED34E540;
  if (!qword_1ED34E540)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DD34, &type metadata for SDSSignResponse);
    atomic_store(result, (unint64_t *)&qword_1ED34E540);
  }
  return result;
}

unint64_t sub_1ABEE3688()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34E560;
  if (!qword_1ED34E560)
  {
    sub_1ABCF4DA8(255, &qword_1ED34E568, (uint64_t (*)(void))sub_1ABEE3644, (uint64_t)&type metadata for SDSSignResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB3B98]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DB3BA8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34E560);
  }
  return result;
}

uint64_t sub_1ABEE36F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABEE1C24(a1, v1);
}

unint64_t sub_1ABEE36F8()
{
  unint64_t result;

  result = qword_1ED34E4F0;
  if (!qword_1ED34E4F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DEA8, &type metadata for SDSSignRequest);
    atomic_store(result, (unint64_t *)&qword_1ED34E4F0);
  }
  return result;
}

unint64_t sub_1ABEE373C()
{
  unint64_t result;

  result = qword_1EEC44E50;
  if (!qword_1EEC44E50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DE68, &type metadata for SDSAuthTokenServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEC44E50);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSAuthTokenServiceError()
{
  return &type metadata for SDSAuthTokenServiceError;
}

ValueMetadata *type metadata accessor for SDSSignRequest()
{
  return &type metadata for SDSSignRequest;
}

ValueMetadata *type metadata accessor for SDSSignResponse.CodingKeys()
{
  return &type metadata for SDSSignResponse.CodingKeys;
}

uint64_t *sub_1ABEE37B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = sub_1ABF305D4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    sub_1ABF2FF5C();
  }
  return a1;
}

uint64_t sub_1ABEE3848(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEE3890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABEE38F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABEE3974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1ABEE39D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABEE3A3C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABEE3A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1ABEE3AC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABEE3AD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1ABF305D4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1ABEE3B50()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF305D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1ABEE3BC4()
{
  unint64_t result;

  result = qword_1EEC44E58;
  if (!qword_1EEC44E58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DE40, &type metadata for SDSSignResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44E58);
  }
  return result;
}

unint64_t sub_1ABEE3C0C()
{
  unint64_t result;

  result = qword_1ED34E508;
  if (!qword_1ED34E508)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DDB0, &type metadata for SDSSignResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34E508);
  }
  return result;
}

unint64_t sub_1ABEE3C54()
{
  unint64_t result;

  result = qword_1ED34E500;
  if (!qword_1ED34E500)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DDD8, &type metadata for SDSSignResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34E500);
  }
  return result;
}

unint64_t sub_1ABEE3C98()
{
  unint64_t result;

  result = qword_1ED34E510;
  if (!qword_1ED34E510)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E108, &type metadata for SDSSignResponse.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34E510);
  }
  return result;
}

unint64_t sub_1ABEE3CDC()
{
  unint64_t result;

  result = qword_1ED34E4D8;
  if (!qword_1ED34E4D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E0B8, &type metadata for SDSSignRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34E4D8);
  }
  return result;
}

unint64_t sub_1ABEE3D20()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = qword_1ED34E5A8;
  if (!qword_1ED34E5A8)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1ABCF5A54(255, &qword_1ED34E5A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v3 = v2;
    v4 = sub_1ABCFE1EC(&qword_1ED34EA80, v1, MEMORY[0x1E0CB0010]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v3, &v4);
    atomic_store(result, (unint64_t *)&qword_1ED34E5A8);
  }
  return result;
}

uint64_t _s10StocksCore15SDSSignResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABEE3DF0 + 4 * byte_1ABF4DC70[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABEE3E10 + 4 * byte_1ABF4DC75[v4]))();
}

_BYTE *sub_1ABEE3DF0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABEE3E10(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEE3E18(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEE3E20(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEE3E28(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEE3E30(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDSSignRequest.CodingKeys()
{
  return &type metadata for SDSSignRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SDSSignResponse.Item.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABEE3E98 + 4 * byte_1ABF4DC7F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABEE3ECC + 4 * byte_1ABF4DC7A[v4]))();
}

uint64_t sub_1ABEE3ECC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEE3ED4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEE3EDCLL);
  return result;
}

uint64_t sub_1ABEE3EE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEE3EF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABEE3EF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEE3EFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSSignResponse.Item.CodingKeys()
{
  return &type metadata for SDSSignResponse.Item.CodingKeys;
}

unint64_t sub_1ABEE3F1C()
{
  unint64_t result;

  result = qword_1EEC44E60;
  if (!qword_1EEC44E60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DFD8, &type metadata for SDSSignResponse.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44E60);
  }
  return result;
}

unint64_t sub_1ABEE3F64()
{
  unint64_t result;

  result = qword_1EEC44E68;
  if (!qword_1EEC44E68)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E090, &type metadata for SDSSignRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44E68);
  }
  return result;
}

unint64_t sub_1ABEE3FAC()
{
  unint64_t result;

  result = qword_1ED34E4E8;
  if (!qword_1ED34E4E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E000, &type metadata for SDSSignRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34E4E8);
  }
  return result;
}

unint64_t sub_1ABEE3FF4()
{
  unint64_t result;

  result = qword_1ED34E4E0;
  if (!qword_1ED34E4E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E028, &type metadata for SDSSignRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34E4E0);
  }
  return result;
}

unint64_t sub_1ABEE403C()
{
  unint64_t result;

  result = qword_1ED34E520;
  if (!qword_1ED34E520)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DF48, &type metadata for SDSSignResponse.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34E520);
  }
  return result;
}

unint64_t sub_1ABEE4084()
{
  unint64_t result;

  result = qword_1ED34E518;
  if (!qword_1ED34E518)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DF70, &type metadata for SDSSignResponse.Item.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34E518);
  }
  return result;
}

void sub_1ABEE40C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = sub_1ABD17050;
  v11[5] = v10;
  v13[4] = sub_1ABEE4274;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1ABE36E80;
  v13[3] = &block_descriptor_39;
  v12 = _Block_copy(v13);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(a5, sel_syncWithCompletion_, v12);
  _Block_release(v12);
}

uint64_t sub_1ABEE41C8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ABEE41EC(int a1, id a2, void (*a3)(id), uint64_t a4, void (*a5)(void))
{
  id v7;

  if (a2)
  {
    v7 = a2;
    a3(a2);

  }
  else
  {
    a5();
  }
}

uint64_t sub_1ABEE4248()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABEE4274(int a1, void *a2)
{
  uint64_t v2;

  sub_1ABEE41EC(a1, a2, *(void (**)(id))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

StocksCore::QuoteSource_optional __swiftcall QuoteSource.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksCore::QuoteSource_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1ABF32068();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t QuoteSource.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEE4314 + 4 * byte_1ABF4E158[*v0]))(0x44636972656E6567, 0xEE00646579616C65);
}

uint64_t sub_1ABEE4314()
{
  return 0x655271616473616ELL;
}

uint64_t sub_1ABEE4338()
{
  return 0x6C6165526573796ELL;
}

unint64_t sub_1ABEE4358()
{
  return 0xD000000000000010;
}

uint64_t sub_1ABEE4374()
{
  return 0x52544B4D6573796ELL;
}

uint64_t sub_1ABEE43AC()
{
  return 0x6E776F6E6B6E75;
}

unint64_t sub_1ABEE43C8()
{
  unint64_t result;

  result = qword_1EEC44E70[0];
  if (!qword_1EEC44E70[0])
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for QuoteSource, &type metadata for QuoteSource);
    atomic_store(result, qword_1EEC44E70);
  }
  return result;
}

void sub_1ABEE440C()
{
  char *v0;

  sub_1ABF0FD84(0, *v0);
}

void sub_1ABEE4418(uint64_t a1)
{
  char *v1;

  sub_1ABD99644(a1, *v1);
}

void sub_1ABEE4420(uint64_t a1)
{
  char *v1;

  sub_1ABF0FD84(a1, *v1);
}

StocksCore::QuoteSource_optional sub_1ABEE4428(Swift::String *a1)
{
  return QuoteSource.init(rawValue:)(*a1);
}

uint64_t sub_1ABEE4434@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = QuoteSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1ABEE4458(char *a1)
{
  sub_1ABDE1070(*a1);
}

uint64_t sub_1ABEE4464()
{
  sub_1ABEE45C8();
  return sub_1ABF319CC();
}

uint64_t sub_1ABEE44C0()
{
  sub_1ABEE45C8();
  return sub_1ABF31990();
}

uint64_t storeEnumTagSinglePayload for QuoteSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1ABEE4558 + 4 * byte_1ABF4E164[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1ABEE458C + 4 * byte_1ABF4E15F[v4]))();
}

uint64_t sub_1ABEE458C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEE4594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEE459CLL);
  return result;
}

uint64_t sub_1ABEE45A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEE45B0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1ABEE45B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEE45BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1ABEE45C8()
{
  unint64_t result;

  result = qword_1ED34CDA0;
  if (!qword_1ED34CDA0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for QuoteSource, &type metadata for QuoteSource);
    atomic_store(result, (unint64_t *)&qword_1ED34CDA0);
  }
  return result;
}

uint64_t sub_1ABEE4610()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1ABF305D4();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF30760();
    if (v2 <= 0x3F)
    {
      result = sub_1ABF30B38();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1ABEE4700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = sub_1ABF302A4();
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF302BC();
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v8)
    return v9;
  v31 = v1;
  v47 = MEMORY[0x1E0DEE9D8];
  sub_1ABDB51DC(0, v8, 0);
  v9 = v47;
  result = sub_1ABE0FAE0(a1);
  v12 = result;
  v13 = 0;
  v14 = a1 + 64;
  v32 = a1 + 80;
  v33 = v8;
  v34 = v11;
  v35 = a1 + 64;
  v36 = a1;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(a1 + 32))
  {
    v17 = (unint64_t)v12 >> 6;
    if ((*(_QWORD *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v11)
      goto LABEL_24;
    v42 = v13;
    v43 = 1 << v12;
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v12);
    v19 = *v18;
    v20 = v18[1];
    v44 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v45 = v19;
    v46 = v20;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v21 = v7;
    v22 = v39;
    sub_1ABF30238();
    sub_1ABD0E288();
    sub_1ABF31DB0();
    v23 = v22;
    v7 = v21;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v41);
    sub_1ABF302B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v47 = v9;
    v25 = *(_QWORD *)(v9 + 16);
    v24 = *(_QWORD *)(v9 + 24);
    if (v25 >= v24 >> 1)
    {
      sub_1ABDB51DC(v24 > 1, v25 + 1, 1);
      v9 = v47;
    }
    *(_QWORD *)(v9 + 16) = v25 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32))(v9+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v25, v21, v38);
    a1 = v36;
    v15 = 1 << *(_BYTE *)(v36 + 32);
    if (v12 >= v15)
      goto LABEL_25;
    v14 = v35;
    v26 = *(_QWORD *)(v35 + 8 * v17);
    if ((v26 & v43) == 0)
      goto LABEL_26;
    LODWORD(v11) = v34;
    if (*(_DWORD *)(v36 + 36) != (_DWORD)v34)
      goto LABEL_27;
    v27 = v26 & (-2 << (v12 & 0x3F));
    if (v27)
    {
      v15 = __clz(__rbit64(v27)) | v12 & 0xFFFFFFFFFFFFFFC0;
      v16 = v33;
    }
    else
    {
      v28 = v17 + 1;
      v29 = (unint64_t)(v15 + 63) >> 6;
      v16 = v33;
      if (v17 + 1 < v29)
      {
        v30 = *(_QWORD *)(v35 + 8 * v28);
        if (v30)
        {
LABEL_20:
          v15 = __clz(__rbit64(v30)) + (v28 << 6);
        }
        else
        {
          while (v29 - 2 != v17)
          {
            v30 = *(_QWORD *)(v32 + 8 * v17++);
            if (v30)
            {
              v28 = v17 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v13 = v42 + 1;
    v12 = v15;
    if (v42 + 1 == v16)
      return v9;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1ABEE4A44(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;

  swift_getObjectType();
  if (qword_1ED34FAD8 != -1)
    swift_once();
  v5 = sub_1ABF3133C();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED34E920);
  v6 = v2;
  v7 = sub_1ABF31324();
  v8 = sub_1ABF31BF4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v23 = a1;
    v10 = swift_slowAlloc();
    v24 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_1ABF30C04();
    sub_1ABD1FE2C(v11, v12, &v24);
    sub_1ABF31D80();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v7, v8, "SDSBaseOperation %s will issue request", v9, 0xCu);
    swift_arrayDestroy();
    v13 = v10;
    a1 = v23;
    MEMORY[0x1AF438FFC](v13, -1, -1);
    MEMORY[0x1AF438FFC](v9, -1, -1);

  }
  else
  {

  }
  MEMORY[0x1E0C80A78](v14);
  type metadata accessor for SDSBaseOperationResponse(0, *(_QWORD *)(v15 + qword_1ED368430), *(_QWORD *)(v15 + qword_1ED368430 + 8), v16);
  sub_1ABF3127C();
  *(_QWORD *)(swift_allocObject() + 16) = v6;
  v17 = v6;
  v18 = (void *)sub_1ABF31114();
  sub_1ABF31210();
  swift_release();
  swift_release();

  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  sub_1ABF2FF68();
  v20 = (void *)sub_1ABF31114();
  sub_1ABF31198();
  swift_release();
  swift_release();

  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  sub_1ABF2FF68();
  v22 = (void *)sub_1ABF31114();
  sub_1ABF311BC();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABEE4DAC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  swift_getObjectType();
  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  type metadata accessor for SDSAuthToken();
  sub_1ABF3127C();
  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v2 = v0;
  v3 = (void *)sub_1ABF31114();
  type metadata accessor for SDSBaseOperationResponse(0, *(_QWORD *)(v1 + qword_1ED368430), *(_QWORD *)(v1 + qword_1ED368430 + 8), v4);
  v5 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_1ABEE4EA4(void *a1, _QWORD *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  id v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v8 = type metadata accessor for SDSBaseOperationResponse(255, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + qword_1ED368430), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + qword_1ED368430 + 8), a4);
  v9 = sub_1ABF31120();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v44 - v11);
  if (sub_1ABEE785C(a1))
  {
    *v12 = a1;
    swift_storeEnumTagMultiPayload();
    v13 = a1;
    sub_1ABEE53DC((uint64_t)v12);
    (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
    if (qword_1ED34FAD8 != -1)
      swift_once();
    v14 = sub_1ABF3133C();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED34E920);
    v15 = a3;
    v16 = sub_1ABF31324();
    v17 = sub_1ABF31BF4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v46 = v8;
      v20 = v19;
      v48 = v19;
      v45 = v4;
      *(_DWORD *)v18 = 136315138;
      v21 = sub_1ABF30C04();
      v47 = sub_1ABD1FE2C(v21, v22, &v48);
      sub_1ABF31D80();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1ABCEF000, v16, v17, "SDSBaseOperation %s will discard auth token and retry", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v20, -1, -1);
      MEMORY[0x1AF438FFC](v18, -1, -1);

    }
    else
    {

    }
    MEMORY[0x1E0C80A78](v23);
    *(&v44 - 2) = (uint64_t)a2;
    sub_1ABF305D4();
    sub_1ABF3127C();
    *(_QWORD *)(swift_allocObject() + 16) = a2;
    v39 = a2;
    v40 = (void *)sub_1ABF31114();
    v41 = sub_1ABF31174();
    swift_release();
    swift_release();

  }
  else
  {
    v46 = v8;
    if (qword_1ED34FAD8 != -1)
      swift_once();
    v24 = sub_1ABF3133C();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED34E920);
    v25 = a1;
    v26 = a3;
    v27 = a1;
    v28 = v26;
    v29 = sub_1ABF31324();
    v30 = sub_1ABF31BF4();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v45 = v4;
      v33 = (_QWORD *)v32;
      v44 = swift_slowAlloc();
      v48 = v44;
      *(_DWORD *)v31 = 136315394;
      v34 = sub_1ABF30C04();
      v47 = sub_1ABD1FE2C(v34, v35, &v48);
      sub_1ABF31D80();

      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2112;
      v36 = a1;
      v37 = _swift_stdlib_bridgeErrorToNSError();
      v47 = v37;
      sub_1ABF31D80();
      *v33 = v37;

      _os_log_impl(&dword_1ABCEF000, v29, v30, "SDSBaseOperation %s failed with error: %@", (uint8_t *)v31, 0x16u);
      sub_1ABEAAD0C();
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v33, -1, -1);
      v38 = v44;
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v38, -1, -1);
      MEMORY[0x1AF438FFC](v31, -1, -1);
    }
    else
    {

    }
    sub_1ABF3124C();
    v42 = a1;
    return sub_1ABF311C8();
  }
  return v41;
}

void sub_1ABEE53DC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = type metadata accessor for NetworkEvent();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v2);
  v9 = (char *)v2 + *(_QWORD *)(v8 + 16);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))v9;
  if (*(_QWORD *)v9)
  {
    v11 = *((_QWORD *)v9 + 1);
    v12 = (_QWORD *)((char *)v2 + *(_QWORD *)(v8 + 88));
    swift_beginAccess();
    v13 = *v12;
    sub_1ABD1338C((uint64_t)v10);
    sub_1ABF2FF5C();
    v14 = v10(a1, v13);
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v21 = v11;
      v16 = (_QWORD *)((char *)v2 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v2) + 64));
      v17 = v14 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v18 = *(_QWORD *)(v5 + 72);
      do
      {
        sub_1ABE64978(v17, (uint64_t)v7);
        v19 = v16[3];
        v20 = v16[4];
        __swift_project_boxed_opaque_existential_1(v16, v19);
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v7, v19, v20);
        sub_1ABDC9A3C((uint64_t)v7);
        v17 += v18;
        --v15;
      }
      while (v15);
    }
    swift_bridgeObjectRelease();
    sub_1ABD12EC4((uint64_t)v10);
  }
}

uint64_t sub_1ABEE558C(char *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = &a1[*(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1) + 56)];
  v4 = *((_QWORD *)v3 + 3);
  v5 = *((_QWORD *)v3 + 4);
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 24))(&a1[*(_QWORD *)(qword_1ED368430 + (*v2 & *(_QWORD *)a1) + 32)], v4, v5);
}

uint64_t sub_1ABEE5628(uint64_t a1, _QWORD *a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  v6 = type metadata accessor for SDSBaseOperationResponse(255, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + qword_1ED368430), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + qword_1ED368430 + 8), a4);
  v7 = sub_1ABF31120();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(v6 - 8) + 16))((char *)v13 - v10, a1, v6, v9);
  swift_storeEnumTagMultiPayload();
  sub_1ABEE53DC((uint64_t)v11);
  a3(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1ABEE5730(void *a1, _QWORD *a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;

  type metadata accessor for SDSBaseOperationResponse(255, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + qword_1ED368430), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a2) + qword_1ED368430 + 8), a4);
  v6 = sub_1ABF31120();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  v10 = a1;
  sub_1ABEE53DC((uint64_t)v9);
  a3(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ABEE5818(_QWORD *a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (_QWORD *)((char *)a1 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *a1) + 56));
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  return sub_1ABEA50A0((uint64_t)a1 + *(_QWORD *)(qword_1ED368430 + (*v2 & *a1) + 32), v4, v5);
}

uint64_t sub_1ABEE58B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  void (*v54)(uint64_t *, _QWORD);
  unint64_t *v55;
  unint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t *v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  void *v90;
  uint64_t *v91;
  id v92;
  uint64_t *v93;
  id v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  void *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  __int128 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(char *, uint64_t);
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;

  v138 = a1;
  v150 = *a2;
  *(_QWORD *)&v148 = *MEMORY[0x1E0DEEDD8];
  v5 = sub_1ABF30760();
  v133 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v134 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_1ABF30B38();
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v132 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1ABF30790();
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v126 = (char *)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1ABF30184();
  v143 = *(_QWORD *)(v9 - 8);
  v144 = v9;
  MEMORY[0x1E0C80A78](v9);
  v129 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v142 = (char *)&v124 - v12;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v140 = (char *)&v124 - v15;
  v16 = sub_1ABF305D4();
  v147 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v125 = (char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v141 = (char *)&v124 - v19;
  v137 = sub_1ABF302BC();
  v153 = *(void (**)(char *, uint64_t))(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v146 = (char *)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, &qword_1ED34EA78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], v13);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v124 - v22;
  v155 = sub_1ABF30334();
  v152 = *(_QWORD *)(v155 - 8);
  MEMORY[0x1E0C80A78](v155);
  v139 = (char *)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v154 = (char *)&v124 - v26;
  if (qword_1ED34FAD8 != -1)
    swift_once();
  v27 = sub_1ABF3133C();
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED34E920);
  v29 = a2;
  v30 = sub_1ABF31324();
  v31 = sub_1ABF31BF4();
  v32 = os_log_type_enabled(v30, v31);
  v136 = a3;
  v145 = v16;
  v135 = v5;
  v149 = v28;
  if (v32)
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v156 = v34;
    *(_DWORD *)v33 = 136315138;
    v35 = sub_1ABF30C04();
    v157 = sub_1ABD1FE2C(v35, v36, &v156);
    sub_1ABF31D80();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v30, v31, "SDSBaseOperation %s did fetch auth token", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v34, -1, -1);
    MEMORY[0x1AF438FFC](v33, -1, -1);

  }
  else
  {

  }
  v150 &= v148;
  sub_1ABCF5A54(0, &qword_1ED34FFA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v37 = *((_QWORD *)v153 + 9);
  v38 = (*((unsigned __int8 *)v153 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v153 + 80);
  v39 = swift_allocObject();
  v148 = xmmword_1ABF366E0;
  *(_OWORD *)(v39 + 16) = xmmword_1ABF366E0;
  sub_1ABF302B0();
  sub_1ABF302B0();
  v40 = sub_1ABF2FF5C();
  v41 = v151;
  v42 = sub_1ABEE4700(v40);
  v151 = v41;
  swift_bridgeObjectRelease();
  v156 = v39;
  sub_1ABEACEAC(v42);
  sub_1ABF302EC();
  v43 = v152;
  v44 = v155;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v23, 1, v155) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1ABD184CC((uint64_t)v23, &qword_1ED34EA78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v45 = v29;
    v46 = sub_1ABF31324();
    v47 = sub_1ABF31BF4();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v156 = v49;
      *(_DWORD *)v48 = 136315138;
      v50 = sub_1ABF30C04();
      v157 = sub_1ABD1FE2C(v50, v51, &v156);
      sub_1ABF31D80();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1ABCEF000, v46, v47, "SDSBaseOperation %s failed to construct URL", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v49, -1, -1);
      MEMORY[0x1AF438FFC](v48, -1, -1);

    }
    else
    {

    }
    v61 = *(_QWORD *)(v150 + qword_1ED368430);
    v62 = *(_QWORD *)(v150 + qword_1ED368430 + 8);
    type metadata accessor for SDSBaseOperationResponse(255, v61, v62, v52);
    sub_1ABF3124C();
    v64 = type metadata accessor for SDSBaseOperation.OperationError(0, v61, v62, v63);
    MEMORY[0x1AF438F30](&unk_1ABF4E3F8, v64);
    swift_allocError();
    return sub_1ABF311C8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v154, v23, v44);
    sub_1ABF302E0();
    v54 = (void (*)(uint64_t *, _QWORD))sub_1ABF302D4();
    if (*v53)
    {
      v55 = v53;
      type metadata accessor for SDSAuthToken();
      sub_1ABF302B0();
      v56 = *v55;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v55 = v56;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v56 = sub_1ABD83358(0, *(_QWORD *)(v56 + 16) + 1, 1, v56);
        *v55 = v56;
      }
      v59 = *(_QWORD *)(v56 + 16);
      v58 = *(_QWORD *)(v56 + 24);
      if (v59 >= v58 >> 1)
      {
        v56 = sub_1ABD83358(v58 > 1, v59 + 1, 1, v56);
        *v55 = v56;
      }
      *(_QWORD *)(v56 + 16) = v59 + 1;
      (*((void (**)(unint64_t, char *, uint64_t))v153 + 4))(v56 + v38 + v59 * v37, v146, v137);
      v54(&v156, 0);
      v44 = v155;
      v60 = v147;
      v43 = v152;
    }
    else
    {
      v54(&v156, 0);
      v60 = v147;
    }
    v66 = v139;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v139, v154, v44);
    v67 = v43;
    v68 = (uint64_t)v140;
    sub_1ABF302F8();
    v69 = *(void (**)(char *, uint64_t))(v67 + 8);
    v69(v66, v44);
    v70 = v145;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v68, 1, v145) == 1)
    {
      sub_1ABD184CC(v68, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v71 = v29;
      v72 = sub_1ABF31324();
      v73 = sub_1ABF31BF4();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = (uint8_t *)swift_slowAlloc();
        v75 = swift_slowAlloc();
        v153 = v69;
        v76 = v75;
        v156 = v75;
        *(_DWORD *)v74 = 136315138;
        v77 = sub_1ABF30C04();
        v157 = sub_1ABD1FE2C(v77, v78, &v156);
        v44 = v155;
        sub_1ABF31D80();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1ABCEF000, v72, v73, "SDSBaseOperation %s failed to construct URL", v74, 0xCu);
        swift_arrayDestroy();
        v79 = v76;
        v69 = v153;
        MEMORY[0x1AF438FFC](v79, -1, -1);
        MEMORY[0x1AF438FFC](v74, -1, -1);

      }
      else
      {

      }
      v104 = *(_QWORD *)(v150 + qword_1ED368430);
      v105 = *(_QWORD *)(v150 + qword_1ED368430 + 8);
      type metadata accessor for SDSBaseOperationResponse(255, v104, v105, v80);
      sub_1ABF3124C();
      v107 = type metadata accessor for SDSBaseOperation.OperationError(0, v104, v105, v106);
      MEMORY[0x1AF438F30](&unk_1ABF4E3F8, v107);
      swift_allocError();
      v65 = sub_1ABF311C8();
      v69(v154, v44);
    }
    else
    {
      v153 = v69;
      v81 = v141;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v141, v68, v70);
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v125, v81, v70);
      v82 = v142;
      sub_1ABF30148();
      v83 = v126;
      sub_1ABF2FBD8();
      v84 = sub_1ABF30778();
      v86 = v85;
      (*(void (**)(char *, uint64_t))(v127 + 8))(v83, v128);
      v146 = (char *)v84;
      v140 = v86;
      sub_1ABF30160();
      v87 = *(_QWORD *)(v150 + qword_1ED368430 + 8);
      v152 = *(_QWORD *)(v150 + qword_1ED368430);
      v150 = v87;
      v88 = sub_1ABF30D3C();
      MEMORY[0x1AF438F30](MEMORY[0x1E0DB3BA8], v88);
      sub_1ABF30FD0();
      (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v129, v82, v144);
      v89 = (_QWORD *)MEMORY[0x1E0DEEDD8];
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v132, (char *)v29 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v29) + 80), v131);
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v134, (char *)v29 + *(_QWORD *)(qword_1ED368430 + (*v89 & *v29) + 72), v135);
      v90 = (void *)sub_1ABF30FC4();
      v91 = v29;
      v92 = v90;
      v93 = v91;
      v94 = v92;
      v95 = sub_1ABF31324();
      v96 = sub_1ABF31BF4();
      if (os_log_type_enabled(v95, v96))
      {
        v97 = swift_slowAlloc();
        v98 = swift_slowAlloc();
        v156 = v98;
        *(_DWORD *)v97 = 136315394;
        v99 = sub_1ABF30C04();
        v157 = sub_1ABD1FE2C(v99, v100, &v156);
        sub_1ABF31D80();

        swift_bridgeObjectRelease();
        *(_WORD *)(v97 + 12) = 2080;
        v101 = sub_1ABF30C04();
        v157 = sub_1ABD1FE2C(v101, v102, &v156);
        sub_1ABF31D80();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1ABCEF000, v95, v96, "SDSBaseOperation %s will issue network operation %s", (uint8_t *)v97, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF438FFC](v98, -1, -1);
        v103 = v97;
        v70 = v145;
        MEMORY[0x1AF438FFC](v103, -1, -1);

      }
      else
      {

      }
      sub_1ABD0F55C();
      v108 = swift_allocObject();
      *(_OWORD *)(v108 + 16) = v148;
      v109 = v94;
      v110 = sub_1ABF30C04();
      v112 = v111;

      v113 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v108 + 56) = MEMORY[0x1E0DEA968];
      v114 = sub_1ABD0F5C0();
      *(_QWORD *)(v108 + 32) = v110;
      *(_QWORD *)(v108 + 40) = v112;
      *(_QWORD *)(v108 + 96) = v113;
      *(_QWORD *)(v108 + 104) = v114;
      v115 = v146;
      *(_QWORD *)(v108 + 64) = v114;
      *(_QWORD *)(v108 + 72) = v115;
      *(_QWORD *)(v108 + 80) = v140;
      sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
      v116 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();

      v117 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v118 = (_QWORD *)swift_allocObject();
      v119 = v152;
      v120 = v150;
      v118[2] = v152;
      v118[3] = v120;
      v118[4] = v117;
      sub_1ABF2FF68();
      sub_1ABF30FB8();
      swift_release();
      type metadata accessor for SDSBaseOperationResponse(255, v119, v120, v121);
      v122 = sub_1ABF3124C();
      MEMORY[0x1E0C80A78](v122);
      *(&v124 - 2) = (uint64_t)v109;
      v65 = sub_1ABF3121C();

      (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
      (*(void (**)(char *, uint64_t))(v147 + 8))(v141, v70);
      v153(v154, v155);
    }
  }
  return v65;
}

void sub_1ABEE6904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t *v10;
  unint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _BYTE v15[24];

  v4 = sub_1ABF30F34();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v8 = MEMORY[0x1AF4390D4](a2 + 16);
  if (v8)
  {
    v9 = (_QWORD *)v8;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v10 = (_QWORD *)((char *)v9 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v9) + 88));
    swift_beginAccess();
    v11 = *v10;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v10 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = sub_1ABD8331C(0, *(_QWORD *)(v11 + 16) + 1, 1, v11);
      *v10 = v11;
    }
    v14 = *(_QWORD *)(v11 + 16);
    v13 = *(_QWORD *)(v11 + 24);
    if (v14 >= v13 >> 1)
    {
      v11 = sub_1ABD8331C(v13 > 1, v14 + 1, 1, v11);
      *v10 = v11;
    }
    *(_QWORD *)(v11 + 16) = v14 + 1;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v11+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v14, v7, v4);
    swift_endAccess();

  }
}

id sub_1ABEE6A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v10 = *MEMORY[0x1E0DEEDD8] & *a5;
  v11 = (_QWORD *)swift_allocObject();
  v12 = (_QWORD *)(*(_QWORD *)(v10 + *MEMORY[0x1E0DB4618]) + *MEMORY[0x1E0DB3BA0]);
  v11[2] = *v12;
  v11[3] = v12[1];
  v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  v11[7] = a4;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF30BF8();
  return objc_msgSend(a5, sel_start);
}

void sub_1ABEE6B6C(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  void *v24;
  void (*v25)(char *, void **, uint64_t);
  uint64_t v26;
  void (*v27)(void *);
  uint64_t v28;
  void (*v29)(char *);

  v26 = a5;
  v27 = (void (*)(void *))a4;
  v28 = a3;
  v29 = a2;
  v8 = type metadata accessor for SDSBaseOperationResponse(0, a6, a7, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - v10;
  v12 = sub_1ABF30F7C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v26 - v17;
  v19 = sub_1ABF31120();
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (void **)((char *)&v26 - v21);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))((char *)&v26 - v21, a1, v19, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = *v22;
    v27(v24);

  }
  else
  {
    v25 = *(void (**)(char *, void **, uint64_t))(v13 + 32);
    v25(v18, v22, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    v25(v11, (void **)v15, v12);
    v29(v11);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
}

void sub_1ABEE6D30()
{
  sub_1ABEE7AD0();
}

uint64_t sub_1ABEE6D58()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1ABD12EC4(*(_QWORD *)((char *)v0 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v0) + 16)));
  v2 = (char *)v0 + *(_QWORD *)(qword_1ED368430 + (*v1 & *v0) + 32);
  v3 = sub_1ABF305D4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(qword_1ED368430 + (*v1 & *v0) + 56));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(qword_1ED368430 + (*v1 & *v0) + 64));
  v4 = (char *)v0 + *(_QWORD *)(qword_1ED368430 + (*v1 & *v0) + 72);
  v5 = sub_1ABF30760();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v0 + *(_QWORD *)(qword_1ED368430 + (*v1 & *v0) + 80);
  v7 = sub_1ABF30B38();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEE6EFC(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  sub_1ABD12EC4(*(_QWORD *)((char *)a1 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *a1) + 16)));
  v3 = (char *)a1 + *(_QWORD *)(qword_1ED368430 + (*v2 & *a1) + 32);
  v4 = sub_1ABF305D4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(_QWORD *)(qword_1ED368430 + (*v2 & *a1) + 56));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(_QWORD *)(qword_1ED368430 + (*v2 & *a1) + 64));
  v5 = (char *)a1 + *(_QWORD *)(qword_1ED368430 + (*v2 & *a1) + 72);
  v6 = sub_1ABF30760();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (char *)a1 + *(_QWORD *)(qword_1ED368430 + (*v2 & *a1) + 80);
  v8 = sub_1ABF30B38();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SDSBaseOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SDSBaseOperation);
}

uint64_t sub_1ABEE70B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30F7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ABEE7120(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1ABF30F7C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1ABEE7160(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1ABF30F7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1ABEE7198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1ABF30F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1ABEE71E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1ABF30F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1ABEE7228(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1ABF30F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1ABEE7270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1ABF30F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1ABEE72B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABEE72C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1ABF30F7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1ABEE7304()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABEE7310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1ABF30F7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SDSBaseOperationResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SDSBaseOperationResponse);
}

uint64_t sub_1ABEE7360()
{
  return sub_1ABEE4DAC();
}

uint64_t sub_1ABEE7388()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1ABEE73AC(void *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABEE4EA4(a1, a2, *(void **)(v4 + 16), a4);
}

uint64_t sub_1ABEE73C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEE73E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1ABEE5628(a1, a2, *(void (**)(char *))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1ABEE7400(void *a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1ABEE5730(a1, a2, *(void (**)(char *))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1ABEE7408(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;

  v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF30F34();
  v33 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v11 = (_QWORD *)((char *)a1 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *a1) + 88));
  swift_beginAccess();
  result = *v11;
  v13 = *(_QWORD *)(*v11 + 16);
  if (v13)
  {
    v32 = (_QWORD *)((char *)a1 + *(_QWORD *)(qword_1ED368430 + (*v10 & *a1) + 64));
    v14 = result + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    v15 = *(_QWORD *)(a2 + qword_1ED34C940);
    v30 = *(_QWORD *)(v33 + 72);
    v31 = v15;
    v16 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v28 = result;
    v29 = v16;
    sub_1ABF2FF5C();
    do
    {
      v17 = v29;
      v29(v9, (char *)v14, v7);
      v18 = v9;
      v19 = v7;
      v20 = v32[3];
      v21 = v32[4];
      v34 = __swift_project_boxed_opaque_existential_1(v32, v20);
      sub_1ABD66FD0();
      v23 = v4;
      v24 = &v6[*(int *)(v22 + 48)];
      v17(v6, v18, v19);
      *(_QWORD *)v24 = *(_QWORD *)(v31 + 16);
      *((_QWORD *)v24 + 1) = 0;
      v25 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)v24 + 2) = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)v24 + 3) = v25;
      *((_QWORD *)v24 + 4) = 0;
      *((_QWORD *)v24 + 5) = 0;
      v4 = v23;
      swift_storeEnumTagMultiPayload();
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
      v27 = v21;
      v7 = v19;
      v9 = v18;
      v26(v6, v20, v27);
      sub_1ABDC9A3C((uint64_t)v6);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v7);
      v14 += v30;
      --v13;
    }
    while (v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABEE7638(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD v26[2];
  void (*v27)(char *, unint64_t, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;

  v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1E0C80A78](v4);
  v31 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30F34();
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = (_QWORD *)((char *)a1 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *a1) + 88));
  swift_beginAccess();
  result = *v10;
  v12 = *(_QWORD *)(*v10 + 16);
  if (v12)
  {
    v29 = (_QWORD *)((char *)a1 + *(_QWORD *)(qword_1ED368430 + (*v9 & *a1) + 64));
    v13 = result + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    v14 = *(_QWORD *)(v30 + 72);
    v27 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
    v28 = v14;
    v26[0] = result;
    sub_1ABF2FF5C();
    v26[1] = v4;
    v15 = a2;
    v16 = v27;
    do
    {
      v16(v8, v13, v6);
      v17 = v8;
      v18 = v6;
      v20 = v29[3];
      v19 = v29[4];
      __swift_project_boxed_opaque_existential_1(v29, v20);
      sub_1ABD66FD0();
      v22 = &v31[*(int *)(v21 + 48)];
      v16(v31, (unint64_t)v17, v18);
      v23 = v15[1];
      *(_OWORD *)v22 = *v15;
      *((_OWORD *)v22 + 1) = v23;
      *((_OWORD *)v22 + 2) = v15[2];
      swift_storeEnumTagMultiPayload();
      v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
      sub_1ABE52530((uint64_t)v15);
      v25 = v20;
      v6 = v18;
      v8 = v17;
      v24((uint64_t)v31, v25, v19);
      sub_1ABDC9A3C((uint64_t)v31);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v6);
      v13 += v28;
      --v12;
    }
    while (v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_1ABEE785C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void **v4;
  id v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  void (*v9)(void **, uint64_t, uint64_t, uint64_t);
  void *v10;
  id v11;
  _QWORD v14[2];

  sub_1ABCF5A54(0, &qword_1ED347208, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4758], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (void **)((char *)v14 - v3);
  v14[1] = a1;
  v5 = a1;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  v6 = sub_1ABF31024();
  v7 = swift_dynamicCast();
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(void (**)(void **, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (!v7)
  {
    v9(v4, 1, 1, v6);
    sub_1ABD184CC((uint64_t)v4, &qword_1ED347208, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4758]);
    return 0;
  }
  v9(v4, 0, 1, v6);
  if ((*(unsigned int (**)(void **, uint64_t))(v8 + 88))(v4, v6) != *MEMORY[0x1E0DB4750])
  {
    (*(void (**)(void **, uint64_t))(v8 + 8))(v4, v6);
    return 0;
  }
  (*(void (**)(void **, uint64_t))(v8 + 96))(v4, v6);
  v10 = *v4;
  v11 = objc_msgSend(v10, sel_statusCode);

  return v11 == (id)401 || v11 == (id)410;
}

uint64_t sub_1ABEE79E4()
{
  uint64_t v0;

  return sub_1ABEE558C(*(char **)(v0 + 16));
}

uint64_t sub_1ABEE79FC()
{
  uint64_t v0;

  return sub_1ABEE5818(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1ABEE7A14(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1ABEE58B0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t type metadata accessor for SDSBaseOperation.OperationError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SDSBaseOperation.OperationError);
}

uint64_t sub_1ABEE7A38()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABEE7A5C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ABEE7A80(uint64_t a1)
{
  uint64_t v1;

  sub_1ABEE6904(a1, *(_QWORD *)(v1 + 32));
}

id sub_1ABEE7A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABEE6A98(a1, a2, a3, a4, *(_QWORD **)(v4 + 16));
}

uint64_t sub_1ABEE7A94()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABEE7AC0(uint64_t a1)
{
  uint64_t v1;

  sub_1ABEE6B6C(a1, *(void (**)(char *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1ABEE7AD0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABEE7AFC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABEE7B3C + 4 * byte_1ABF4E290[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABEE7B5C + 4 * byte_1ABF4E295[v4]))();
}

_BYTE *sub_1ABEE7B3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABEE7B5C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEE7B64(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEE7B6C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEE7B74(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEE7B7C(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1ABEE7B88()
{
  JUMPOUT(0x1AF438F30);
}

id sub_1ABEE7BA4()
{
  uint64_t v0;
  id v1;
  _QWORD v3[5];

  sub_1ABD07E04(v0 + 56, (uint64_t)v3);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1ABF31E94();
  swift_bridgeObjectRelease();
  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  v1 = sub_1ABE40528(0xD000000000000013, 0x80000001ABF62F20, 0xD00000000000001ALL, 0x80000001ABF62F40, 0xD000000000000015, 0x80000001ABF62F60);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v1;
}

uint64_t type metadata accessor for RemoteAppConfigurationService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEE7D08(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  v1 = a1[5];
  v2 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v1);
  v3 = sub_1ABEE7BA4();
  v4 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v2 + 8))(v3, v1, v2);

  return v4;
}

uint64_t sub_1ABEE7D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *, _QWORD);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[3120];
  _QWORD v37[390];
  uint64_t v38;

  MEMORY[0x1E0C80A78](a1);
  v38 = v1;
  v3 = v2;
  v4 = sub_1ABF31F84();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - v9;
  v11 = *v3;
  v34 = v3[1];
  v35 = v11;
  v12 = v3[3];
  v32 = v3[2];
  v33 = v12;
  sub_1ABF301E4();
  swift_allocObject();
  sub_1ABF301D8();
  if (qword_1ED34E970 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED34FD98);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, v13, v4);
  v15 = sub_1ABEE7BA4();
  v16 = objc_msgSend(v15, sel_storefrontID);

  v17 = sub_1ABF317A4();
  v19 = v18;

  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  if (v17 == qword_1ED34E878 && v19 == qword_1ED34E880)
  {
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    v21 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    v20 = v21 ^ 1;
  }
  v37[3] = MEMORY[0x1E0DEAFA0];
  LOBYTE(v37[0]) = v20 & 1;
  v22 = (void (*)(_BYTE *, _QWORD))sub_1ABF301CC();
  sub_1ABE33880((uint64_t)v37, (uint64_t)v10);
  v22(v36, 0);
  if (qword_1ED34E978 != -1)
    swift_once();
  v23 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED34FDB0);
  v14(v7, v23, v4);
  sub_1ABD04578(0, &qword_1ED34FD08, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v37[3] = v24;
  v37[0] = v32;
  sub_1ABF2FF5C();
  v25 = (void (*)(_BYTE *, _QWORD))sub_1ABF301CC();
  sub_1ABE33880((uint64_t)v37, (uint64_t)v7);
  v25(v36, 0);
  if (qword_1ED34E980 != -1)
    swift_once();
  v26 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED34FDC8);
  v14(v7, v26, v4);
  sub_1ABD04578(0, &qword_1ED34FCF0, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v37[3] = v27;
  v37[0] = v33;
  sub_1ABF2FF5C();
  v28 = (void (*)(_BYTE *, _QWORD))sub_1ABF301CC();
  sub_1ABE33880((uint64_t)v37, (uint64_t)v7);
  v28(v36, 0);
  sub_1ABEA1218();
  v29 = v38;
  sub_1ABF301C0();
  if (v29)
  {
    swift_release();
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FAC0, (uint64_t)&type metadata for AppConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311D4();
  }
  else
  {
    memcpy(v36, v37, sizeof(v36));
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FAC0, (uint64_t)&type metadata for AppConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v30 = sub_1ABF311E0();
    swift_release();
  }
  return v30;
}

uint64_t sub_1ABEE81DC()
{
  void *v0;
  uint64_t v1;

  sub_1ABF3127C();
  sub_1ABF2FF68();
  v0 = (void *)sub_1ABF31114();
  v1 = sub_1ABF31174();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1ABEE8260()
{
  _QWORD *v0;

  return sub_1ABEE7D08(v0);
}

uint64_t sub_1ABEE8278(uint64_t a1)
{
  return sub_1ABEE7D78(a1);
}

uint64_t sub_1ABEE8290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v16;
  uint64_t v17;

  sub_1ABD88F14();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v14 + 32) = a1;
  *(_QWORD *)(v14 + 40) = a2;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 8);
  sub_1ABF2FF5C();
  v15(v14, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1ABF31114();
  type metadata accessor for QuoteDetail();
  v17 = sub_1ABF31174();
  swift_release();

  return v17;
}

uint64_t sub_1ABEE837C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  sub_1ABE36304(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for QuoteDetail();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v14 - v10;
  sub_1ABE0E8AC(*a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1ABCFC3BC((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1ABE36304);
    sub_1ABEEA4D8();
    swift_allocError();
    sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34DCF8, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311D4();
  }
  else
  {
    sub_1ABEB32EC((uint64_t)v4, (uint64_t)v11);
    sub_1ABD6F0AC((uint64_t)v11, (uint64_t)v8);
    sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34DCF8, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v12 = sub_1ABF311E0();
    sub_1ABCFC3BC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  }
  return v12;
}

uint64_t sub_1ABEE854C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;

  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1ABEE8574()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[11] = sub_1ABEE8290(v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1ABEE85E0;
  return sub_1ABF31150();
}

uint64_t sub_1ABEE85E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABEE8654()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABEE8688()
{
  sub_1ABCF5A54(0, &qword_1ED346DD0, (uint64_t (*)(uint64_t))sub_1ABE36304, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABEE86F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25 = a7;
  v26 = a8;
  v27 = a5;
  v28 = a1;
  v12 = sub_1ABF30B38();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1ABF30760();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30754();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB3560], v12);
  sub_1ABEE8290(a6, v25, v26, (uint64_t)v19, (uint64_t)v15, a9, a10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v20 = swift_allocObject();
  v21 = v28;
  *(_QWORD *)(v20 + 16) = v28;
  *(_QWORD *)(v20 + 24) = a2;
  sub_1ABF2FF68();
  v22 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v21;
  *(_QWORD *)(v23 + 24) = a2;
  sub_1ABF2FF68();
  v24 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABEE88DC(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  sub_1ABE36304(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD6F0AC(a1, (uint64_t)v6);
  v7 = type metadata accessor for QuoteDetail();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 0, 1, v7);
  a2(v6);
  return sub_1ABCFC3BC((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1ABE36304);
}

uint64_t sub_1ABEE899C(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1ABE36304(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for QuoteDetail();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  a2(v5);
  return sub_1ABCFC3BC((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1ABE36304);
}

uint64_t sub_1ABEE8A3C()
{
  return 0x65645F65746F7571;
}

uint64_t sub_1ABEE8A60()
{
  return 0x312E302E31;
}

uint64_t sub_1ABEE8A74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  v3 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1ABF30EE0();
  MEMORY[0x1E0C80A78](v4);
  sub_1ABCFE22C((unint64_t *)&unk_1ED350B00, 255, v5, MEMORY[0x1E0DB41A8]);
  sub_1ABD33D6C(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED350B88, 255, (uint64_t (*)(uint64_t))sub_1ABD33D6C, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  sub_1ABD352B0();
  swift_allocObject();
  *(_QWORD *)(v1 + 56) = sub_1ABF30C34();
  sub_1ABD07E04(a1, v1 + 16);
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCF5A54(0, &qword_1ED350340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF366C0;
  sub_1ABF30B20();
  sub_1ABCFE22C((unint64_t *)&unk_1ED350AE0, 255, v6, MEMORY[0x1E0DB33D8]);
  sub_1ABD0B230(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED350B60, 255, (uint64_t (*)(uint64_t))sub_1ABD0B230, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  sub_1ABD34C70(0, &qword_1ED3467D0, &qword_1ED34DDC8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v7 = sub_1ABF31078();
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(_QWORD *)(v1 + 64) = v7;
  return v1;
}

uint64_t sub_1ABEE8D04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABF31060();
  sub_1ABD061E8(0, &qword_1ED34DDC8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2AB0]);
  swift_allocObject();
  result = sub_1ABF313E4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEE8DA0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, _QWORD *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t, uint64_t);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  _BOOL4 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _BYTE *v52;
  void (*v53)(_QWORD, _QWORD, _QWORD);
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  unint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t (*v64)(_BYTE *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t result;
  void (*v67)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v68;
  unint64_t v69;
  void (*v70)(_BYTE *, uint64_t);
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  _BYTE v85[12];
  int v86;
  uint64_t v87;
  void (*v88)(_BYTE *, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(_QWORD, _QWORD, _QWORD);
  uint64_t v105;
  _QWORD *v106;
  _BYTE *v107;
  uint64_t v108;
  _QWORD *v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v5 = v4;
  v106 = a4;
  v89 = a2;
  v102 = *v4;
  v93 = sub_1ABF30C28();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v91 = &v85[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2A80];
  sub_1ABD061E8(0, (unint64_t *)&unk_1ED34C8D8, MEMORY[0x1E0DB2A80]);
  v114 = v10;
  v108 = *(_QWORD *)(v10 - 8);
  v94 = *(_QWORD *)(v108 + 64);
  MEMORY[0x1E0C80A78](v10);
  v96 = &v85[-v11];
  sub_1ABD34C70(0, &qword_1ED34DDA0, (unint64_t *)&unk_1ED34C8D8, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v95 = &v85[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v107 = &v85[-v15];
  v16 = sub_1ABF30B38();
  v103 = *(_QWORD *)(v16 - 8);
  v104 = (void (*)(_QWORD, _QWORD, _QWORD))v16;
  MEMORY[0x1E0C80A78](v16);
  v100 = &v85[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v101 = v17;
  v18 = sub_1ABF30B14();
  v111 = *(_QWORD *)(v18 - 8);
  v112 = v18;
  MEMORY[0x1E0C80A78](v18);
  v110 = &v85[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_1ABF30760();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v97 = v22;
  v98 = &v85[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v23);
  v25 = &v85[-v24];
  v26 = sub_1ABF30790();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v29 = &v85[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABF2FBD8();
  v115 = sub_1ABF30778();
  v31 = v30;
  (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v29, v26);
  if (qword_1ED34C8D0 != -1)
    swift_once();
  v32 = sub_1ABF3133C();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED3683B0);
  v33 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v21 + 16);
  v105 = a3;
  v33(v25, a3, v20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v34 = v21;
  v35 = sub_1ABF31324();
  v36 = sub_1ABF31BF4();
  v37 = v36;
  v38 = os_log_type_enabled(v35, v36);
  v39 = v20;
  v90 = a1;
  v109 = v5;
  v113 = v31;
  v99 = v34;
  if (v38)
  {
    v40 = swift_slowAlloc();
    v87 = swift_slowAlloc();
    v117 = v87;
    *(_DWORD *)v40 = 136315650;
    v86 = v37;
    v41 = sub_1ABF2FF5C();
    v42 = MEMORY[0x1AF437C34](v41, MEMORY[0x1E0DEA968]);
    v88 = v33;
    v43 = v42;
    v45 = v44;
    swift_bridgeObjectRelease();
    v116 = sub_1ABD1FE2C(v43, v45, &v117);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    v46 = sub_1ABF3073C();
    v116 = sub_1ABD1FE2C(v46, v47, &v117);
    v39 = v20;
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v25, v20);
    *(_WORD *)(v40 + 22) = 2080;
    sub_1ABF2FF5C();
    v116 = sub_1ABD1FE2C(v115, v31, &v117);
    v33 = v88;
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v35, (os_log_type_t)v86, "Preparing stock quote detail request for symbols: %s, earliestBeginDate: %s, requestID: %s", (uint8_t *)v40, 0x20u);
    v48 = v87;
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v48, -1, -1);
    v49 = v40;
    v5 = v109;
    MEMORY[0x1AF438FFC](v49, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v25, v20);

    swift_bridgeObjectRelease_n();
  }
  if (qword_1ED34DB98 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED34D458, v50, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetailManager, (uint64_t)&unk_1ABF4E514);
  sub_1ABF30970();
  v51 = v5;
  if (v117 == 1)
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v111 + 104))(v110, *MEMORY[0x1E0DB32B0], v112);
  else
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v111 + 16))(v110, v89, v112);
  v52 = v98;
  v33(v98, v105, v39);
  v54 = v103;
  v53 = v104;
  v55 = v100;
  (*(void (**)(_BYTE *, _QWORD *, _QWORD))(v103 + 16))(v100, v106, v104);
  v56 = v99;
  v57 = (*(unsigned __int8 *)(v99 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
  v58 = *(unsigned __int8 *)(v54 + 80);
  v106 = (_QWORD *)v39;
  v59 = (v97 + v58 + v57) & ~v58;
  v60 = (char *)swift_allocObject();
  v61 = v113;
  *((_QWORD *)v60 + 2) = v115;
  *((_QWORD *)v60 + 3) = v61;
  *((_QWORD *)v60 + 4) = v51;
  (*(void (**)(char *, _BYTE *, _QWORD *))(v56 + 32))(&v60[v57], v52, v106);
  v106 = v60;
  (*(void (**)(char *, _BYTE *, _QWORD))(v54 + 32))(&v60[v59], v55, v53);
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF31060();
  v62 = v107;
  sub_1ABF313F0();
  swift_release();
  v63 = v108;
  v64 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v108 + 48);
  v65 = v114;
  result = v64(v62, 1, v114);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v67 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 16);
    v68 = v96;
    v67(v96, v62, v65);
    v69 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    v105 = swift_allocObject();
    v104 = *(void (**)(_QWORD, _QWORD, _QWORD))(v63 + 32);
    v104(v105 + v69, v68, v65);
    v70 = *(void (**)(_BYTE *, uint64_t))(v63 + 8);
    v70(v62, v65);
    sub_1ABF31060();
    v71 = v95;
    sub_1ABF313F0();
    v72 = v114;
    swift_release();
    result = v64(v71, 1, v72);
    if ((_DWORD)result != 1)
    {
      sub_1ABD3482C(0, &qword_1ED34DCE0, MEMORY[0x1E0DB4B98]);
      v108 = v73;
      v67(v68, v71, v72);
      v74 = swift_allocObject();
      v104(v74 + v69, v68, v72);
      v70(v71, v72);
      v117 = MEMORY[0x1E0DEE9D8];
      sub_1ABCFE22C((unint64_t *)&qword_1ED350AF8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868], MEMORY[0x1E0DB3870]);
      sub_1ABD20158(0);
      sub_1ABCFE22C((unint64_t *)&qword_1ED350B70, 255, (uint64_t (*)(uint64_t))sub_1ABD20158, MEMORY[0x1E0DEAF38]);
      v75 = v91;
      v76 = v93;
      sub_1ABF31E04();
      v77 = v110;
      sub_1ABF3112C();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(_BYTE *, uint64_t))(v92 + 8))(v75, v76);
      (*(void (**)(_BYTE *, uint64_t))(v111 + 8))(v77, v112);
      v78 = swift_allocObject();
      v79 = v115;
      v80 = v113;
      *(_QWORD *)(v78 + 16) = v115;
      *(_QWORD *)(v78 + 24) = v80;
      sub_1ABF2FF5C();
      v81 = (void *)sub_1ABF31114();
      sub_1ABD3482C(0, (unint64_t *)&qword_1ED34DE08, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
      sub_1ABF31174();
      swift_release();
      swift_release();

      v82 = swift_allocObject();
      *(_QWORD *)(v82 + 16) = v79;
      *(_QWORD *)(v82 + 24) = v80;
      v83 = (void *)sub_1ABF31114();
      v84 = sub_1ABF311B0();
      swift_release();
      swift_release();

      return v84;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABEE97C8(uint64_t a1, uint64_t a2, unint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  if (qword_1ED34C8D0 != -1)
    swift_once();
  v12 = sub_1ABF3133C();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED3683B0);
  swift_bridgeObjectRetain_n();
  v13 = sub_1ABF31324();
  v14 = sub_1ABF31BF4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v26 = a1;
    v16 = swift_slowAlloc();
    v27 = v16;
    *(_DWORD *)v15 = 136315138;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(a2, a3, &v27);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v13, v14, "Performing quote detail fetch with requestID: %s", v15, 0xCu);
    swift_arrayDestroy();
    v17 = v16;
    a1 = v26;
    MEMORY[0x1AF438FFC](v17, -1, -1);
    MEMORY[0x1AF438FFC](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v18 = a4[5];
  v19 = a4[6];
  __swift_project_boxed_opaque_existential_1(a4 + 2, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8))(a1, a5, a6, v18, v19);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  sub_1ABF2FF5C();
  v21 = (void *)sub_1ABF31114();
  sub_1ABD3482C(0, (unint64_t *)&qword_1ED34DE08, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_1ABF31174();
  swift_release();
  swift_release();

  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = a3;
  sub_1ABF2FF5C();
  v23 = (void *)sub_1ABF31114();
  v24 = sub_1ABF311B0();
  swift_release();
  swift_release();

  return v24;
}

uint64_t sub_1ABEE9A98(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;

  v5 = *a1;
  if (qword_1ED34C8D0 != -1)
    swift_once();
  v6 = sub_1ABF3133C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED3683B0);
  swift_bridgeObjectRetain_n();
  v7 = sub_1ABF31324();
  v8 = sub_1ABF31BF4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(a2, a3, &v12);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v7, v8, "Quote detail fetch with ID: %s returned success", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v10, -1, -1);
    MEMORY[0x1AF438FFC](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = v5;
  sub_1ABEEA3F8();
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABEE9C84(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v5 = *a1;
  if (qword_1ED34C8D0 != -1)
    swift_once();
  v6 = sub_1ABF3133C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED3683B0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v7 = sub_1ABF31324();
  v8 = sub_1ABF31BF4();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15 = v14;
    *(_DWORD *)v9 = 136315394;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(a2, a3, &v15);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    type metadata accessor for QuoteDetail();
    sub_1ABF2FF5C();
    v10 = sub_1ABF31630();
    v12 = v11;
    swift_bridgeObjectRelease();
    sub_1ABD1FE2C(v10, v12, &v15);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v7, v8, "Quote detail request with ID: %s completed with results: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v14, -1, -1);
    MEMORY[0x1AF438FFC](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v15 = v5;
  sub_1ABEEA3F8();
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

void sub_1ABEE9EFC(void *a1, uint64_t a2, unint64_t a3, const char *a4)
{
  uint64_t v8;
  id v9;
  id v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  NSObject *oslog;
  uint64_t v17;

  if (qword_1ED34C8D0 != -1)
    swift_once();
  v8 = sub_1ABF3133C();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED3683B0);
  sub_1ABF2FF5C();
  v9 = a1;
  sub_1ABF2FF5C();
  v10 = a1;
  oslog = sub_1ABF31324();
  v11 = sub_1ABF31BE8();
  if (os_log_type_enabled(oslog, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v17 = v13;
    *(_DWORD *)v12 = 136315394;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(a2, a3, &v17);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_getErrorValue();
    v14 = sub_1ABF322C0();
    sub_1ABD1FE2C(v14, v15, &v17);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1ABCEF000, oslog, v11, a4, (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v13, -1, -1);
    MEMORY[0x1AF438FFC](v12, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_1ABEEA13C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1ABEE8DA0(a1, a2, a3, a4);
}

void sub_1ABEEA15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1ABEE86F4(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[2], v4[3]);
}

uint64_t sub_1ABEEA188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

ValueMetadata *type metadata accessor for QuoteDetailManager.StoreDescriptor()
{
  return &type metadata for QuoteDetailManager.StoreDescriptor;
}

uint64_t sub_1ABEEA1A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABEE8D04(a1);
}

uint64_t sub_1ABEEA1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1ABF30760();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1ABF30B38();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1ABEEA26C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1ABF30760() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF30B38() - 8) + 80);
  return sub_1ABEE97C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1ABEEA2E0()
{
  sub_1ABD061E8(0, (unint64_t *)&unk_1ED34C8D8, MEMORY[0x1E0DB2A80]);
  return sub_1ABF313B4();
}

uint64_t sub_1ABEEA348()
{
  sub_1ABD061E8(0, (unint64_t *)&unk_1ED34C8D8, MEMORY[0x1E0DB2A80]);
  return sub_1ABF313C0();
}

uint64_t sub_1ABEEA39C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABEEA3C0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABEE9C84(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1ABEEA3D8(void *a1)
{
  uint64_t v1;

  sub_1ABEE9EFC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), "Quote detail request with ID: %s completed with error: %s");
}

void sub_1ABEEA3F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DD18)
  {
    sub_1ABD3482C(255, (unint64_t *)&qword_1ED34DE08, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DD18);
  }
}

uint64_t sub_1ABEEA45C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABEE9A98(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1ABEEA474(void *a1)
{
  uint64_t v1;

  sub_1ABEE9EFC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), "Quote detail fetch with ID: %s returned error: %s");
}

uint64_t sub_1ABEEA494()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEEA4B8(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABEE88DC(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1ABEEA4D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABEE899C(a1, *(void (**)(char *))(v1 + 16));
}

unint64_t sub_1ABEEA4D8()
{
  unint64_t result;

  result = qword_1ED346C18;
  if (!qword_1ED346C18)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E5F0, &type metadata for QuoteDetailManagerError);
    atomic_store(result, (unint64_t *)&qword_1ED346C18);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for QuoteDetailManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABEEA55C + 4 * byte_1ABF4E480[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABEEA57C + 4 * byte_1ABF4E485[v4]))();
}

_BYTE *sub_1ABEEA55C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABEEA57C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEEA584(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEEA58C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEEA594(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEEA59C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailManagerError()
{
  return &type metadata for QuoteDetailManagerError;
}

unint64_t sub_1ABEEA5BC()
{
  unint64_t result;

  result = qword_1EEC44F00;
  if (!qword_1EEC44F00)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E5C8, &type metadata for QuoteDetailManagerError);
    atomic_store(result, (unint64_t *)&qword_1EEC44F00);
  }
  return result;
}

uint64_t type metadata accessor for SDSStockMetadataService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEEA630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _BYTE v26[24];
  uint64_t v27;

  v7 = sub_1ABF30B38();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_1ABF30760();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1ABD07E04(v4 + 16, (uint64_t)v26);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)&v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
  v20 = *v18;
  v21 = sub_1ABF2FF5C();
  v22 = sub_1ABEEA7E8(v21, v20, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  sub_1ABF30BE0();
  sub_1ABF30BA4();
  v23 = sub_1ABF30BB0();

  swift_release();
  return v23;
}

uint64_t sub_1ABEEA7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABEEA630(a1, a2, a3, a4);
}

id sub_1ABEEA7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  objc_super v25;
  _QWORD v26[5];
  _QWORD v27[5];

  v8 = type metadata accessor for SDSBaseOperationFactory();
  v27[3] = v8;
  v27[4] = &off_1E5AEC4C0;
  v27[0] = a2;
  v9 = (objc_class *)type metadata accessor for SDSStockMetadataOperation();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  v16 = *v14;
  v26[3] = v8;
  v26[4] = &off_1E5AEC4C0;
  v26[0] = v16;
  *(_QWORD *)&v10[qword_1ED351430] = a1;
  sub_1ABD07E04((uint64_t)v26, (uint64_t)&v10[qword_1ED351438]);
  v17 = &v10[qword_1EEC44728];
  v18 = sub_1ABF30760();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a3, v18);
  v20 = &v10[qword_1EEC44730];
  v21 = sub_1ABF30B38();
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, a4, v21);
  v25.receiver = v10;
  v25.super_class = v9;
  v23 = objc_msgSendSuper2(&v25, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a4, v21);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a3, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v23;
}

BOOL sub_1ABEEA98C@<W0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11, char a12, uint64_t a13, unint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20)
{
  unint64_t v21;
  unint64_t v23;
  unint64_t v25;
  unint64_t v27;
  unint64_t v29;
  _BOOL8 result;

  v21 = a20;
  v23 = a18;
  v25 = a16;
  v27 = a14;
  v29 = a11;
  if (!a2)
  {
    a1 = 0;
    a2 = 0xE000000000000000;
  }
  if (!a4)
  {
    a3 = 0;
    a4 = 0xE000000000000000;
  }
  if (!a6)
  {
    a5 = 0;
    a6 = 0xE000000000000000;
  }
  if (!a8)
  {
    a7 = 0;
    a8 = 0xE000000000000000;
  }
  if (!a11)
  {
    a10 = 0;
    v29 = 0xE000000000000000;
  }
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  if (!a14)
  {
    a13 = 0;
    v27 = 0xE000000000000000;
  }
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  if (!a16)
  {
    a15 = 0;
    v25 = 0xE000000000000000;
  }
  if (!a18)
    a17 = 0x46464646464623;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  if (!a18)
    v23 = 0xE700000000000000;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  if (!a20)
  {
    a19 = 0x30303030303023;
    v21 = 0xE700000000000000;
  }
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = v29;
  result = a12 == 2;
  *(_BYTE *)(a9 + 80) = (a12 == 2) | a12 & 1;
  *(_QWORD *)(a9 + 88) = a13;
  *(_QWORD *)(a9 + 96) = v27;
  *(_QWORD *)(a9 + 104) = a15;
  *(_QWORD *)(a9 + 112) = v25;
  *(_QWORD *)(a9 + 120) = a17;
  *(_QWORD *)(a9 + 128) = v23;
  *(_QWORD *)(a9 + 136) = a19;
  *(_QWORD *)(a9 + 144) = v21;
  return result;
}

uint64_t sub_1ABEEAA80(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABEEAAB8 + 4 * byte_1ABF4E670[a1]))(0xD000000000000016, 0x80000001ABF54DC0);
}

uint64_t sub_1ABEEAAB8()
{
  return 0x7865546C61697274;
}

uint64_t sub_1ABEEAAD4()
{
  return 0x6C616972546E6F6ELL;
}

uint64_t sub_1ABEEAAF4()
{
  return 0x7954746567726174;
}

uint64_t sub_1ABEEAB10(uint64_t a1)
{
  return a1 - 2;
}

uint64_t sub_1ABEEAB44()
{
  return 0x6372755074736F70;
}

uint64_t sub_1ABEEAB68()
{
  return 0x6F436E6F74747562;
}

uint64_t sub_1ABEEAB88()
{
  return 0x65546E6F74747562;
}

uint64_t sub_1ABEEABAC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABEEABE4 + 4 * byte_1ABF4E67A[a1]))(0xD000000000000016, 0x80000001ABF54DC0);
}

uint64_t sub_1ABEEABE4()
{
  return 0x7865546C61697274;
}

uint64_t sub_1ABEEAC00()
{
  return 0x6C616972546E6F6ELL;
}

uint64_t sub_1ABEEAC20()
{
  return 0x7954746567726174;
}

uint64_t sub_1ABEEAC3C(uint64_t a1)
{
  return a1 - 2;
}

uint64_t sub_1ABEEAC70()
{
  return 0x6372755074736F70;
}

uint64_t sub_1ABEEAC94()
{
  return 0x6F436E6F74747562;
}

uint64_t sub_1ABEEACB4()
{
  return 0x65546E6F74747562;
}

uint64_t sub_1ABEEACD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1ABEEAA80(*a1);
  v5 = v4;
  if (v3 == sub_1ABEEAA80(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABEEAD60()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABEEAA80(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEEADC0()
{
  unsigned __int8 *v0;

  sub_1ABEEAA80(*v0);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEEAE00()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABEEAA80(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEEAE5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEECBA0();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEEAE88@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABEEAA80(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABEEAEB0()
{
  unsigned __int8 *v0;

  return sub_1ABEEABAC(*v0);
}

uint64_t sub_1ABEEAEB8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEECBA0();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEEAEDC()
{
  sub_1ABEEBF18();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEEAF04()
{
  sub_1ABEEBF18();
  return sub_1ABF32398();
}

uint64_t sub_1ABEEAF2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  int64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  int64_t v64;
  unint64_t v65;
  unint64_t v66;
  int64_t v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  int64_t v71;
  unint64_t v72;
  unint64_t v73;
  int64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  int64_t v98;
  unint64_t v99;
  unint64_t v100;
  int v101;
  int64_t v102;
  unint64_t v103;
  unint64_t v104;
  int64_t v105;
  unint64_t v106;
  int64_t v107;
  unint64_t v108;
  int64_t v109;
  unint64_t v110;
  int64_t v111;
  _QWORD *v112;
  _DWORD v113[6];
  int64_t v114;
  unint64_t v115;
  unsigned __int8 v116;
  _DWORD v117[3];
  _QWORD *v118;

  sub_1ABEEC56C(0, &qword_1ED34FEA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v90 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEEBF18();
  sub_1ABF3235C();
  if (!v2)
  {
    v118 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v116 = 0;
    sub_1ABF320C8();
    v10 = v115;
    v111 = v114;
    if (v115)
    {
      v112 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_beginAccess();
      v112 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v112 = sub_1ABD12054(0, v112[2] + 1, 1, v112);
      v12 = v112[2];
      v11 = v112[3];
      if (v12 >= v11 >> 1)
        v112 = sub_1ABD12054((_QWORD *)(v11 > 1), v12 + 1, 1, v112);
      v13 = v112;
      v112[2] = v12 + 1;
      v14 = &v13[2 * v12];
      v14[4] = 0xD000000000000016;
      v14[5] = 0x80000001ABF54DC0;
      v118 = v13;
      swift_endAccess();
      v10 = 0;
    }
    v116 = 1;
    sub_1ABF320C8();
    v15 = v115;
    v109 = v114;
    if (!v115)
    {
      v110 = 0;
      swift_beginAccess();
      v112 = v118;
      v16 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v112 = sub_1ABD12054(0, v112[2] + 1, 1, v112);
      v18 = v112[2];
      v17 = v112[3];
      if (v18 >= v17 >> 1)
        v112 = sub_1ABD12054((_QWORD *)(v17 > 1), v18 + 1, 1, v112);
      v19 = v112;
      v112[2] = v18 + 1;
      v20 = &v19[2 * v18];
      v20[4] = 0x7865546C61697274;
      v20[5] = 0xE900000000000074;
      v118 = v19;
      swift_endAccess();
      v10 = v16;
      v15 = v110;
    }
    v116 = 2;
    sub_1ABF320C8();
    v107 = v114;
    v108 = v115;
    if (!v115)
    {
      v110 = v15;
      swift_beginAccess();
      v112 = v118;
      v21 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v112 = sub_1ABD12054(0, v112[2] + 1, 1, v112);
      v23 = v112[2];
      v22 = v112[3];
      if (v23 >= v22 >> 1)
        v112 = sub_1ABD12054((_QWORD *)(v22 > 1), v23 + 1, 1, v112);
      v24 = v112;
      v112[2] = v23 + 1;
      v25 = (char *)&v24[2 * v23];
      strcpy(v25 + 32, "nonTrialText");
      v25[45] = 0;
      *((_WORD *)v25 + 23) = -5120;
      v118 = v24;
      swift_endAccess();
      v10 = v21;
      v15 = v110;
    }
    v116 = 3;
    sub_1ABF320C8();
    v105 = v114;
    v106 = v115;
    if (!v115)
    {
      v110 = v15;
      swift_beginAccess();
      v112 = v118;
      v26 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v112 = sub_1ABD12054(0, v112[2] + 1, 1, v112);
      v28 = v112[2];
      v27 = v112[3];
      if (v28 >= v27 >> 1)
        v112 = sub_1ABD12054((_QWORD *)(v27 > 1), v28 + 1, 1, v112);
      v29 = v112;
      v112[2] = v28 + 1;
      v30 = &v29[2 * v28];
      v30[4] = 0x7954746567726174;
      v30[5] = 0xEA00000000006570;
      v118 = v29;
      swift_endAccess();
      v10 = v26;
      v15 = v110;
    }
    v116 = 4;
    sub_1ABF320C8();
    v102 = v114;
    v104 = v115;
    if (!v115)
    {
      swift_beginAccess();
      v112 = v118;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v103 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v112 = sub_1ABD12054(0, v112[2] + 1, 1, v112);
      v33 = v112[2];
      v32 = v112[3];
      if (v33 >= v32 >> 1)
        v112 = sub_1ABD12054((_QWORD *)(v32 > 1), v33 + 1, 1, v112);
      v34 = v112;
      v112[2] = v33 + 1;
      v35 = &v34[2 * v33];
      v35[4] = 0xD000000000000014;
      v35[5] = 0x80000001ABF54E00;
      v118 = v34;
      swift_endAccess();
      v10 = v103;
    }
    LOBYTE(v114) = 5;
    sub_1ABF320C8();
    v101 = v116;
    if (v116 == 2)
    {
      swift_beginAccess();
      v112 = v118;
      v36 = swift_isUniquelyReferenced_nonNull_native();
      v103 = v10;
      if ((v36 & 1) == 0)
        v112 = sub_1ABD12054(0, v112[2] + 1, 1, v112);
      v38 = v112[2];
      v37 = v112[3];
      if (v38 >= v37 >> 1)
        v112 = sub_1ABD12054((_QWORD *)(v37 > 1), v38 + 1, 1, v112);
      v39 = v112;
      v112[2] = v38 + 1;
      v40 = &v39[2 * v38];
      v40[4] = 0xD00000000000001ELL;
      v40[5] = 0x80000001ABF54E20;
      v118 = v39;
      swift_endAccess();
      v10 = v103;
    }
    v116 = 6;
    sub_1ABF320C8();
    v99 = v114;
    v100 = v115;
    if (!v115)
    {
      v110 = v15;
      swift_beginAccess();
      v112 = v118;
      v42 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v112 = sub_1ABD12054(0, v112[2] + 1, 1, v112);
      v44 = v112[2];
      v43 = v112[3];
      if (v44 >= v43 >> 1)
        v112 = sub_1ABD12054((_QWORD *)(v43 > 1), v44 + 1, 1, v112);
      v45 = v112;
      v112[2] = v44 + 1;
      v46 = &v45[2 * v44];
      v46[4] = 0xD000000000000016;
      v46[5] = 0x80000001ABF54E40;
      v118 = v45;
      swift_endAccess();
      v10 = v42;
      v15 = v110;
    }
    v116 = 7;
    sub_1ABF320C8();
    v98 = v114;
    v110 = v115;
    if (!v115)
    {
      v103 = v10;
      swift_beginAccess();
      v112 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v112 = sub_1ABD12054(0, v112[2] + 1, 1, v112);
      v48 = v112[2];
      v47 = v112[3];
      if (v48 >= v47 >> 1)
        v112 = sub_1ABD12054((_QWORD *)(v47 > 1), v48 + 1, 1, v112);
      v49 = v112;
      v112[2] = v48 + 1;
      v50 = &v49[2 * v48];
      v50[4] = 0x6372755074736F70;
      v50[5] = 0xEF4C525565736168;
      v118 = v49;
      swift_endAccess();
      v10 = v103;
    }
    v116 = 8;
    sub_1ABF320C8();
    v103 = v10;
    v96 = v114;
    v97 = v115;
    if (!v115)
    {
      swift_beginAccess();
      v112 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v112 = sub_1ABD12054(0, v112[2] + 1, 1, v112);
      v52 = v112[2];
      v51 = v112[3];
      if (v52 >= v51 >> 1)
        v112 = sub_1ABD12054((_QWORD *)(v51 > 1), v52 + 1, 1, v112);
      v53 = v112;
      v112[2] = v52 + 1;
      v54 = &v53[2 * v52];
      v54[4] = 0x6F436E6F74747562;
      v54[5] = 0xEB00000000726F6CLL;
      v118 = v53;
      swift_endAccess();
    }
    v116 = 9;
    sub_1ABF320C8();
    v55 = v115;
    if (v115)
    {
      v56 = v114;
    }
    else
    {
      swift_beginAccess();
      v112 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v112 = sub_1ABD12054(0, v112[2] + 1, 1, v112);
      v58 = v112[2];
      v57 = v112[3];
      v95 = v58 + 1;
      if (v58 >= v57 >> 1)
        v112 = sub_1ABD12054((_QWORD *)(v57 > 1), v95, 1, v112);
      v59 = v112;
      v112[2] = v95;
      v60 = &v59[2 * v58];
      v60[4] = 0x65546E6F74747562;
      v60[5] = 0xEF726F6C6F437478;
      v118 = v59;
      swift_endAccess();
      v56 = 0x30303030303023;
    }
    v95 = v56;
    v61 = v103;
    v62 = v111;
    if (!v103)
      v62 = 0;
    v111 = v62;
    v63 = 0xE000000000000000;
    if (!v103)
      v61 = 0xE000000000000000;
    v103 = v61;
    v64 = v109;
    if (!v15)
      v64 = 0;
    v94 = v64;
    if (v15)
      v65 = v15;
    else
      v65 = 0xE000000000000000;
    v93 = v65;
    v67 = v107;
    v66 = v108;
    if (!v108)
      v67 = 0;
    v92 = v67;
    if (!v108)
      v66 = 0xE000000000000000;
    v91 = v66;
    v69 = v105;
    v68 = v106;
    if (!v106)
    {
      v69 = 0;
      v68 = 0xE000000000000000;
    }
    v105 = v69;
    v106 = v68;
    v70 = v104;
    v71 = v102;
    if (!v104)
      v71 = 0;
    v102 = v71;
    if (!v104)
      v70 = 0xE000000000000000;
    v90 = v70;
    v73 = v99;
    v72 = v100;
    if (!v100)
    {
      v73 = 0;
      v72 = 0xE000000000000000;
    }
    v108 = v72;
    v109 = v73;
    v74 = v98;
    if (!v110)
      v74 = 0;
    v107 = v74;
    if (v110)
      v63 = v110;
    v110 = v63;
    v75 = v97;
    v76 = 0x46464646464623;
    if (v97)
      v76 = v96;
    v104 = v76;
    v77 = 0xE700000000000000;
    if (!v97)
      v75 = 0xE700000000000000;
    if (v55)
      v77 = v55;
    v99 = v77;
    v100 = v75;
    v101 = (v101 == 2) | v101 & 1;
    v113[0] = v117[0];
    *(_DWORD *)((char *)v113 + 3) = *(_DWORD *)((char *)v117 + 3);
    if (v112[2])
    {
      sub_1ABD0F55C();
      v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_1ABF366C0;
      sub_1ABD165AC();
      *(_QWORD *)(v78 + 56) = v79;
      *(_QWORD *)(v78 + 64) = sub_1ABD82448();
      *(_QWORD *)(v78 + 32) = v112;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v80 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v80 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    v81 = v103;
    *(_QWORD *)a2 = v111;
    *(_QWORD *)(a2 + 8) = v81;
    v82 = v93;
    *(_QWORD *)(a2 + 16) = v94;
    *(_QWORD *)(a2 + 24) = v82;
    v83 = v91;
    *(_QWORD *)(a2 + 32) = v92;
    *(_QWORD *)(a2 + 40) = v83;
    v84 = v106;
    *(_QWORD *)(a2 + 48) = v105;
    *(_QWORD *)(a2 + 56) = v84;
    v85 = v90;
    *(_QWORD *)(a2 + 64) = v102;
    *(_QWORD *)(a2 + 72) = v85;
    *(_BYTE *)(a2 + 80) = v101;
    *(_DWORD *)(a2 + 81) = v113[0];
    *(_DWORD *)(a2 + 84) = *(_DWORD *)((char *)v113 + 3);
    v86 = v108;
    *(_QWORD *)(a2 + 88) = v109;
    *(_QWORD *)(a2 + 96) = v86;
    v87 = v110;
    *(_QWORD *)(a2 + 104) = v107;
    *(_QWORD *)(a2 + 112) = v87;
    v88 = v100;
    *(_QWORD *)(a2 + 120) = v104;
    *(_QWORD *)(a2 + 128) = v88;
    v89 = v99;
    *(_QWORD *)(a2 + 136) = v95;
    *(_QWORD *)(a2 + 144) = v89;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1ABEEBF18()
{
  unint64_t result;

  result = qword_1ED34F610;
  if (!qword_1ED34F610)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E824, &type metadata for SubscriptionButtonConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F610);
  }
  return result;
}

uint64_t sub_1ABEEBF60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[9];
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  sub_1ABEEC56C(0, &qword_1ED34FF60, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v18 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v26 = *(_QWORD *)(v1 + 24);
  v27 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v24 = *(_QWORD *)(v1 + 40);
  v25 = v9;
  v10 = *(_QWORD *)(v1 + 48);
  v22 = *(_QWORD *)(v1 + 56);
  v23 = v10;
  v11 = *(_QWORD *)(v1 + 72);
  v20 = *(_QWORD *)(v1 + 64);
  v21 = v11;
  v19 = *(unsigned __int8 *)(v1 + 80);
  v12 = *(_QWORD *)(v1 + 88);
  v18[7] = *(_QWORD *)(v1 + 96);
  v18[8] = v12;
  v13 = *(_QWORD *)(v1 + 104);
  v18[5] = *(_QWORD *)(v1 + 112);
  v18[6] = v13;
  v14 = *(_QWORD *)(v1 + 128);
  v18[3] = *(_QWORD *)(v1 + 120);
  v18[4] = v14;
  v15 = *(_QWORD *)(v1 + 136);
  v18[1] = *(_QWORD *)(v1 + 144);
  v18[2] = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEEBF18();
  sub_1ABF32368();
  v38 = 0;
  v16 = v28;
  sub_1ABF32194();
  if (!v16)
  {
    v37 = 1;
    sub_1ABF32194();
    v36 = 2;
    sub_1ABF32194();
    v35 = 3;
    sub_1ABF32194();
    v34 = 4;
    sub_1ABF32194();
    v33 = 5;
    sub_1ABF321A0();
    v32 = 6;
    sub_1ABF32194();
    v31 = 7;
    sub_1ABF32194();
    v30 = 8;
    sub_1ABF32194();
    v29 = 9;
    sub_1ABF32194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABEEC244@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABEEAF2C(a1, a2);
}

uint64_t sub_1ABEEC258(_QWORD *a1)
{
  return sub_1ABEEBF60(a1);
}

uint64_t sub_1ABEEC270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v43 = *(_QWORD *)(a1 + 56);
  v44 = *(_QWORD *)(a1 + 48);
  v41 = *(_QWORD *)(a1 + 72);
  v42 = *(_QWORD *)(a1 + 64);
  v38 = *(unsigned __int8 *)(a1 + 80);
  v36 = *(_QWORD *)(a1 + 88);
  v34 = *(_QWORD *)(a1 + 96);
  v32 = *(_QWORD *)(a1 + 104);
  v30 = *(_QWORD *)(a1 + 112);
  v28 = *(_QWORD *)(a1 + 120);
  v26 = *(_QWORD *)(a1 + 128);
  v23 = *(_QWORD *)(a1 + 144);
  v24 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v40 = *(_QWORD *)(a2 + 64);
  v39 = *(_QWORD *)(a2 + 72);
  v37 = *(unsigned __int8 *)(a2 + 80);
  v35 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 96);
  v31 = *(_QWORD *)(a2 + 104);
  v29 = *(_QWORD *)(a2 + 112);
  v27 = *(_QWORD *)(a2 + 120);
  v25 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 144);
  v22 = *(_QWORD *)(a2 + 136);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1ABF3223C(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v6 || (v14 = sub_1ABF3223C(), result = 0, (v14 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9 || (v15 = sub_1ABF3223C(), result = 0, (v15 & 1) != 0))
      {
        if (v44 == v10 && v43 == v11 || (v16 = sub_1ABF3223C(), result = 0, (v16 & 1) != 0))
        {
          if (v42 == v40 && v41 == v39)
          {
            if (v38 != v37)
              return 0;
          }
          else
          {
            v17 = sub_1ABF3223C();
            result = 0;
            if ((v17 & 1) == 0 || ((v38 ^ v37) & 1) != 0)
              return result;
          }
          if (v36 == v35 && v34 == v33 || (v18 = sub_1ABF3223C(), result = 0, (v18 & 1) != 0))
          {
            if (v32 == v31 && v30 == v29 || (v19 = sub_1ABF3223C(), result = 0, (v19 & 1) != 0))
            {
              if (v28 == v27 && v26 == v25 || (v20 = sub_1ABF3223C(), result = 0, (v20 & 1) != 0))
              {
                if (v24 == v22 && v23 == v21)
                  return 1;
                else
                  return sub_1ABF3223C();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1ABEEC56C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABEEBF18();
    v7 = a3(a1, &type metadata for SubscriptionButtonConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t destroy for SubscriptionButtonConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SubscriptionButtonConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  v11 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v11;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for SubscriptionButtonConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for SubscriptionButtonConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionButtonConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionButtonConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionButtonConfig()
{
  return &type metadata for SubscriptionButtonConfig;
}

uint64_t storeEnumTagSinglePayload for SubscriptionButtonConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1ABEECA48 + 4 * byte_1ABF4E689[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1ABEECA7C + 4 * byte_1ABF4E684[v4]))();
}

uint64_t sub_1ABEECA7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEECA84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEECA8CLL);
  return result;
}

uint64_t sub_1ABEECA98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEECAA0);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1ABEECAA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEECAAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionButtonConfig.CodingKeys()
{
  return &type metadata for SubscriptionButtonConfig.CodingKeys;
}

unint64_t sub_1ABEECACC()
{
  unint64_t result;

  result = qword_1EEC44F08;
  if (!qword_1EEC44F08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E7FC, &type metadata for SubscriptionButtonConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44F08);
  }
  return result;
}

unint64_t sub_1ABEECB14()
{
  unint64_t result;

  result = qword_1ED34F620;
  if (!qword_1ED34F620)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E734, &type metadata for SubscriptionButtonConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F620);
  }
  return result;
}

unint64_t sub_1ABEECB5C()
{
  unint64_t result;

  result = qword_1ED34F618;
  if (!qword_1ED34F618)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E75C, &type metadata for SubscriptionButtonConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F618);
  }
  return result;
}

uint64_t sub_1ABEECBA0()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

uint64_t sub_1ABEECBE8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1ABCF4DA8(0, &qword_1EEC44F70, (uint64_t (*)(void))sub_1ABEEF754, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEEF754();
  sub_1ABF32368();
  v10[1] = a2;
  sub_1ABD04578(0, &qword_1EEC44F58, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABEEF7DC(&qword_1EEC44F78, (uint64_t (*)(void))sub_1ABEEF858, MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABEECD34()
{
  sub_1ABEEF998();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEECD5C()
{
  sub_1ABEEF998();
  return sub_1ABF32398();
}

uint64_t sub_1ABEECD84@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_1ABCF4DA8(0, &qword_1EEC44FA0, (uint64_t (*)(void))sub_1ABEEF998, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEEF998();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1ABF320E0();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1ABEECEC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1ABCF4DA8(0, &qword_1EEC44FB0, (uint64_t (*)(void))sub_1ABEEF998, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEEF998();
  sub_1ABF32368();
  sub_1ABF32194();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1ABEECFCC()
{
  sub_1ABEEF754();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEECFF4()
{
  sub_1ABEEF754();
  return sub_1ABF32398();
}

_QWORD *sub_1ABEED01C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABEEDFC4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABEED044(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABEECBE8(a1, *v1);
}

uint64_t sub_1ABEED05C()
{
  void *v0;
  void *v1;
  uint64_t v2;

  type metadata accessor for ForYouConfigRecord(0);
  sub_1ABEEF6A8();
  sub_1ABF30CAC();
  sub_1ABEEF6F0();
  sub_1ABF30CAC();
  v0 = (void *)sub_1ABF31114();
  sub_1ABF31108();
  swift_release();
  swift_release();

  v1 = (void *)sub_1ABF31114();
  v2 = sub_1ABF311B0();
  swift_release();

  return v2;
}

void sub_1ABEED134()
{
  uint64_t v0;
  void *v1;

  sub_1ABF31BE8();
  sub_1ABEEF648(0, (unint64_t *)&qword_1ED34FFF0, (unint64_t *)&qword_1ED350010, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ABF366C0;
  sub_1ABF31F6C();
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v0 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = 0xE000000000000000;
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
  v1 = (void *)sub_1ABF31D44();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

}

uint64_t sub_1ABEED24C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  void *v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v4 = type metadata accessor for ForYouConfigRecord(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v42 = (char *)&v36 - v8;
  v9 = sub_1ABF317D4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v4;
  v13 = (uint64_t *)((char *)a1 + *(int *)(v4 + 28));
  sub_1ABF317C8();
  v14 = (void *)sub_1ABF317B0();
  v15 = v12;
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  if (v17 >> 60 == 15)
  {
    sub_1ABF31BE8();
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v18 = (void *)sub_1ABF31D44();
    sub_1ABF31318();

    v20 = *v13;
    v19 = v13[1];
    sub_1ABEEDC2C();
    swift_allocError();
    *v21 = v20;
    v21[1] = v19;
    sub_1ABF2FF5C();
    swift_willThrow();
  }
  else
  {
    v39 = v6;
    v22 = *(_QWORD *)(a2 + 16);
    v23 = MEMORY[0x1E0DEE9D8];
    v38 = v14;
    if (v22)
    {
      v37 = v17;
      v43 = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABD16414(0, v22, 0);
      v23 = v43;
      v24 = (uint64_t *)(a2 + 40);
      do
      {
        v25 = *(v24 - 1);
        v26 = *v24;
        v43 = v23;
        v28 = *(_QWORD *)(v23 + 16);
        v27 = *(_QWORD *)(v23 + 24);
        sub_1ABF2FF5C();
        if (v28 >= v27 >> 1)
        {
          sub_1ABD16414(v27 > 1, v28 + 1, 1);
          v23 = v43;
        }
        v24 += 2;
        *(_QWORD *)(v23 + 16) = v28 + 1;
        v29 = v23 + 16 * v28;
        *(_QWORD *)(v29 + 32) = v25;
        *(_QWORD *)(v29 + 40) = v26;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      v17 = v37;
      v14 = v38;
    }
    v30 = v41;
    sub_1ABEEE14C(v14, v17, v23);
    v32 = (uint64_t)v42;
    if (!v30)
    {
      v33 = v31;
      swift_bridgeObjectRelease();
      v34 = (char *)&loc_1ABEED510 + *((int *)qword_1ABEED918 + (v33 >> 62));
      v37 = *a1;
      __asm { BR              X10 }
    }

    swift_bridgeObjectRelease();
    sub_1ABEEF554((uint64_t)a1, v32);
    sub_1ABEEF554(v32, (uint64_t)v39);
    sub_1ABEEF598();
    swift_allocObject();
    v20 = sub_1ABF311E0();
    sub_1ABD0D868((uint64_t)v14, v17);
    sub_1ABD3FAF4(v32);
  }
  return v20;
}

uint64_t sub_1ABEED928()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TestForYouConfigRecordService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEED974()
{
  uint64_t v0;

  sub_1ABCF4DA8(0, (unint64_t *)&qword_1EEC42788, (uint64_t (*)(void))sub_1ABDC247C, (uint64_t)&type metadata for StockTestDataLocator, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB3968]);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1ABF30CC4();
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_1ABF30CC4();
  return v0;
}

uint64_t sub_1ABEEDA78()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v1 = *v0;
  sub_1ABEEDB44();
  sub_1ABF3127C();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1ABEEDBA8;
  *(_QWORD *)(v2 + 24) = v1;
  sub_1ABF2FF68();
  v3 = (void *)sub_1ABF31114();
  type metadata accessor for ForYouConfigRecord(0);
  v4 = sub_1ABF31174();
  swift_release();
  swift_release();

  return v4;
}

uint64_t sub_1ABEEDB2C()
{
  return sub_1ABEED05C();
}

void sub_1ABEEDB44()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEC44F10)
  {
    type metadata accessor for ForYouConfigRecord(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEC44F10);
  }
}

uint64_t sub_1ABEEDBA8(unint64_t *a1, uint64_t a2)
{
  return sub_1ABEED24C(a1, a2);
}

uint64_t sub_1ABEEDBC0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEEDBE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  sub_1ABEEDB44();
  return v3(a1, *(_QWORD *)(a1 + *(int *)(v4 + 48)));
}

unint64_t sub_1ABEEDC2C()
{
  unint64_t result;

  result = qword_1EEC44F18;
  if (!qword_1EEC44F18)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E988, &type metadata for TestForYouConfigRecordService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEC44F18);
  }
  return result;
}

uint64_t sub_1ABEEDC70(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_1ABD0F474(a1, a2);
  sub_1ABEEDE14(a1, a2);
  sub_1ABD0F430(a1, a2);
  v4 = sub_1ABF31828();
  swift_release();
  return v4;
}

uint64_t sub_1ABEEDCE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1ABF31828();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *sub_1ABEEDD1C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_1ABEEDD68(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_1ABF30358();
  v9 = result;
  if (result)
  {
    result = sub_1ABF3037C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_1ABF30370();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_1ABEEDD1C(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

void sub_1ABEEDE14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1ABF30664();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

_QWORD *sub_1ABEEDE90()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34E368, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_1ABD0F474(v2, v0);
    v7 = sub_1ABF305F8();
    sub_1ABD0F430(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x1ABEEDF78);
    }
  }
  return v4;
}

uint64_t sub_1ABEEDF90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1ABF31828();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *sub_1ABEEDFC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABCF4DA8(0, &qword_1EEC44F48, (uint64_t (*)(void))sub_1ABEEF754, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEEF754();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABD04578(0, &qword_1EEC44F58, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABEEF7DC(&qword_1EEC44F60, (uint64_t (*)(void))sub_1ABEEF798, MEMORY[0x1E0DEAF40]);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1ABEEE14C(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  char v29;
  void *v30;
  id v31;
  char v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  char v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  uint64_t result;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  char v59;
  void *v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  unint64_t v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  uint64_t v83;
  id v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  id v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _OWORD v106[2];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _QWORD v117[6];

  v117[4] = *MEMORY[0x1E0C80C00];
  v6 = sub_1ABF304E4();
  v93 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v90 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v91 = (char *)&v72 - v9;
  MEMORY[0x1E0C80A78](v10);
  v89 = (char *)&v72 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v72 - v13;
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_1ABF30640();
  *(_QWORD *)&v115 = 0;
  v92 = v15;
  v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 3, &v115);

  v18 = (id)v115;
  if (!v17)
  {
    v21 = v18;
    sub_1ABF3046C();

    swift_willThrow();
    return (uint64_t)a1;
  }
  sub_1ABF31DD4();
  swift_unknownObjectRelease();
  sub_1ABD1FEFC((uint64_t)v117, (uint64_t)&v113);
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1EEC43FB0);
  if (!swift_dynamicCast())
  {
    v115 = 0u;
    v116 = 0u;
LABEL_119:
    sub_1ABD6B430((uint64_t)&v115);
    goto LABEL_120;
  }
  v86 = a3;
  v87 = v6;
  v19 = (void *)v111;
  *(_QWORD *)&v113 = 0x6565467961646F74;
  *((_QWORD *)&v113 + 1) = 0xEF6769666E6F4364;
  v20 = objc_msgSend((id)v111, sel___swift_objectForKeyedSubscript_, sub_1ABF32284());
  swift_unknownObjectRelease();
  if (v20)
  {
    sub_1ABF31DD4();

    swift_unknownObjectRelease();
  }
  else
  {

    v113 = 0u;
    v114 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v113, (uint64_t)&v115);
  if (!*((_QWORD *)&v116 + 1))
    goto LABEL_119;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_120:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
    sub_1ABD0F474((uint64_t)a1, a2);
    return (uint64_t)a1;
  }
  v22 = (void *)v113;
  *(_QWORD *)&v113 = 0x7370756F7267;
  *((_QWORD *)&v113 + 1) = 0xE600000000000000;
  v23 = objc_msgSend(v22, sel___swift_objectForKeyedSubscript_, sub_1ABF32284());
  swift_unknownObjectRelease();
  if (v23)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v113 = 0u;
    v114 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v113, (uint64_t)&v115);
  if (!*((_QWORD *)&v116 + 1))
  {

    goto LABEL_119;
  }
  v24 = sub_1ABCF7BCC(0, &qword_1EEC44F30);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_120;
  }
  v85 = v22;
  v83 = v24;
  v84 = (id)v111;
  sub_1ABF31CF0();
  sub_1ABF304D8();
  if (!*((_QWORD *)&v116 + 1))
  {
LABEL_123:
    (*(void (**)(char *, uint64_t))(v93 + 8))(v14, v87);
    __swift_project_boxed_opaque_existential_1(v117, v117[3]);
    v69 = sub_1ABF32224();
    *(_QWORD *)&v115 = 0;
    v70 = objc_msgSend(v92, sel_dataWithJSONObject_options_error_, v69, 0, &v115);
    swift_unknownObjectRelease();
    v71 = (id)v115;
    if (v70)
    {
      a1 = (void *)sub_1ABF30658();

    }
    else
    {
      a1 = v71;
      sub_1ABF3046C();

      swift_willThrow();
    }

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
    return (uint64_t)a1;
  }
  v88 = MEMORY[0x1E0DEE9B8] + 8;
  v25 = MEMORY[0x1E0DEA968];
  while (1)
  {
    sub_1ABD1F610(&v115, &v113);
    sub_1ABD1FEFC((uint64_t)&v113, (uint64_t)&v109);
    if (swift_dynamicCast())
    {
      v26 = (void *)v107;
      *(_QWORD *)&v109 = 1701869940;
      *((_QWORD *)&v109 + 1) = 0xE400000000000000;
      v27 = v25;
      v28 = objc_msgSend((id)v107, sel___swift_objectForKeyedSubscript_, sub_1ABF32284());
      swift_unknownObjectRelease();
      if (v28)
      {
        sub_1ABF31DD4();

        swift_unknownObjectRelease();
      }
      else
      {

        v109 = 0u;
        v110 = 0u;
      }
      sub_1ABD22B10((uint64_t)&v109, (uint64_t)&v111);
      if (!*((_QWORD *)&v112 + 1))
        goto LABEL_18;
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_19;
      if (v109 == __PAIR128__(0xE700000000000000, 0x64657461727563))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v29 = sub_1ABF3223C();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0)
          goto LABEL_19;
      }
      sub_1ABD1FEFC((uint64_t)&v113, (uint64_t)&v109);
      if (swift_dynamicCast())
      {
        v30 = (void *)v107;
        *(_QWORD *)&v109 = 0x65707974627573;
        *((_QWORD *)&v109 + 1) = 0xE700000000000000;
        v31 = objc_msgSend((id)v107, sel___swift_objectForKeyedSubscript_, sub_1ABF32284());
        swift_unknownObjectRelease();
        if (v31)
        {
          sub_1ABF31DD4();

          swift_unknownObjectRelease();
        }
        else
        {

          v109 = 0u;
          v110 = 0u;
        }
        sub_1ABD22B10((uint64_t)&v109, (uint64_t)&v111);
        if (!*((_QWORD *)&v112 + 1))
          goto LABEL_18;
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_19;
        if (v109 == __PAIR128__(0xEA00000000007365, 0x69726F7453706F74))
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v32 = sub_1ABF3223C();
          swift_bridgeObjectRelease();
          if ((v32 & 1) == 0)
            goto LABEL_19;
        }
        sub_1ABD1FEFC((uint64_t)&v113, (uint64_t)&v109);
        if (swift_dynamicCast())
          break;
      }
    }
    v111 = 0u;
    v112 = 0u;
LABEL_18:
    sub_1ABD6B430((uint64_t)&v111);
LABEL_19:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
    sub_1ABF304D8();
    if (!*((_QWORD *)&v116 + 1))
      goto LABEL_123;
  }
  v33 = (void *)v107;
  *(_QWORD *)&v109 = 0x746E65746E6F63;
  *((_QWORD *)&v109 + 1) = 0xE700000000000000;
  v34 = objc_msgSend((id)v107, sel___swift_objectForKeyedSubscript_, sub_1ABF32284());
  swift_unknownObjectRelease();
  if (v34)
  {
    sub_1ABF31DD4();

    swift_unknownObjectRelease();
  }
  else
  {

    v109 = 0u;
    v110 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v109, (uint64_t)&v111);
  if (!*((_QWORD *)&v112 + 1))
    goto LABEL_18;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_19;
  v35 = (void *)v109;
  *(_QWORD *)&v109 = 0x70756F7267627573;
  *((_QWORD *)&v109 + 1) = 0xE900000000000073;
  v36 = sub_1ABF32284();
  v78 = v35;
  v37 = objc_msgSend(v35, sel___swift_objectForKeyedSubscript_, v36);
  swift_unknownObjectRelease();
  if (v37)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v109 = 0u;
    v110 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v109, (uint64_t)&v111);
  if (!*((_QWORD *)&v112 + 1))
  {

    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_19;
  }
  v74 = (id)v107;
  sub_1ABF31CF0();
  while (1)
  {
    sub_1ABF304D8();
    if (!*((_QWORD *)&v112 + 1))
    {

      (*(void (**)(char *, uint64_t))(v93 + 8))(v89, v87);
      goto LABEL_19;
    }
    sub_1ABD1F610(&v111, &v109);
    sub_1ABD1FEFC((uint64_t)&v109, (uint64_t)v106);
    if (!swift_dynamicCast())
    {
      v107 = 0u;
      v108 = 0u;
LABEL_51:
      sub_1ABD6B430((uint64_t)&v107);
      goto LABEL_52;
    }
    v38 = (void *)v104;
    *(_QWORD *)&v106[0] = 0x73746E65746E6F63;
    *((_QWORD *)&v106[0] + 1) = 0xE800000000000000;
    v39 = objc_msgSend((id)v104, sel___swift_objectForKeyedSubscript_, sub_1ABF32284());
    swift_unknownObjectRelease();
    if (v39)
    {
      sub_1ABF31DD4();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v106, 0, sizeof(v106));
    }
    sub_1ABD22B10((uint64_t)v106, (uint64_t)&v107);
    v25 = v27;
    if (!*((_QWORD *)&v108 + 1))
      goto LABEL_51;
    if ((swift_dynamicCast() & 1) != 0)
      break;
LABEL_52:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
  }
  v77 = *(id *)&v106[0];
  sub_1ABF31CF0();
  while (2)
  {
    sub_1ABF304D8();
    if (!*((_QWORD *)&v108 + 1))
    {

      (*(void (**)(char *, uint64_t))(v93 + 8))(v91, v87);
      goto LABEL_52;
    }
    sub_1ABD1F610(&v107, v106);
    sub_1ABD1FEFC((uint64_t)v106, (uint64_t)&v102);
    if (!swift_dynamicCast())
    {
      v104 = 0u;
      v105 = 0u;
LABEL_62:
      sub_1ABD6B430((uint64_t)&v104);
      goto LABEL_63;
    }
    v40 = (void *)v100;
    *(_QWORD *)&v102 = 1953459315;
    *((_QWORD *)&v102 + 1) = 0xE400000000000000;
    v41 = objc_msgSend((id)v100, sel___swift_objectForKeyedSubscript_, sub_1ABF32284());
    swift_unknownObjectRelease();
    if (v41)
    {
      sub_1ABF31DD4();

      swift_unknownObjectRelease();
    }
    else
    {

      v102 = 0u;
      v103 = 0u;
    }
    sub_1ABD22B10((uint64_t)&v102, (uint64_t)&v104);
    v25 = v27;
    if (!*((_QWORD *)&v105 + 1))
      goto LABEL_62;
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_63;
    if (v102 == __PAIR128__(0xEA0000000000302DLL, 0x73656C6369747261))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v42 = sub_1ABF3223C();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0)
        goto LABEL_63;
    }
    sub_1ABD1FEFC((uint64_t)v106, (uint64_t)&v104);
    v43 = sub_1ABCF7BCC(0, &qword_1EEC44F38);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_63:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
      continue;
    }
    break;
  }
  v80 = v43;
  v44 = (void *)v102;
  *(_QWORD *)&v102 = 0x736D657469;
  *((_QWORD *)&v102 + 1) = 0xE500000000000000;
  v45 = sub_1ABF32284();
  v79 = v44;
  v46 = objc_msgSend(v44, sel___swift_objectForKeyedSubscript_, v45);
  swift_unknownObjectRelease();
  if (v46)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v102 = 0u;
    v103 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v102, (uint64_t)&v104);
  if (!*((_QWORD *)&v105 + 1))
  {

    goto LABEL_62;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_63;
  }

  v97 = v86;
  v47 = objc_allocWithZone(MEMORY[0x1E0C99DE8]);
  sub_1ABF2FF5C();
  v81 = objc_msgSend(v47, sel_init);
  *(_QWORD *)&v104 = 0x736D657469;
  *((_QWORD *)&v104 + 1) = 0xE500000000000000;
  v48 = objc_msgSend(v79, sel___swift_objectForKeyedSubscript_, sub_1ABF32284());
  result = swift_unknownObjectRelease();
  if (v48)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
    sub_1ABD1F610(&v102, &v104);
    swift_dynamicCast();
    v50 = (void *)v100;
    sub_1ABF31CF0();

    while (1)
    {
      sub_1ABF304D8();
      if (!*((_QWORD *)&v105 + 1))
      {
        (*(void (**)(char *, uint64_t))(v93 + 8))(v90, v87);
        swift_bridgeObjectRelease();
        v67 = v81;
        v82 = (id)sub_1ABF31780();
        v68 = v79;
        objc_msgSend(v79, sel_setValue_forKey_, v67, v82);

        goto LABEL_63;
      }
      sub_1ABD1F610(&v104, &v102);
      sub_1ABD1FEFC((uint64_t)&v102, (uint64_t)&v100);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_103;

      sub_1ABD1FEFC((uint64_t)&v102, (uint64_t)&v100);
      swift_dynamicCast();
      v51 = (void *)v98;
      *(_QWORD *)&v98 = 1635017060;
      *((_QWORD *)&v98 + 1) = 0xE400000000000000;
      v52 = sub_1ABF32284();
      v82 = v51;
      v53 = objc_msgSend(v51, sel___swift_objectForKeyedSubscript_, v52);
      swift_unknownObjectRelease();
      if (v53)
      {
        sub_1ABF31DD4();
        swift_unknownObjectRelease();
      }
      else
      {
        v98 = 0u;
        v99 = 0u;
      }
      sub_1ABD22B10((uint64_t)&v98, (uint64_t)&v100);
      if (!*((_QWORD *)&v101 + 1))
      {
        sub_1ABD6B430((uint64_t)&v100);
        goto LABEL_102;
      }
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_102;
      v54 = (id)v95;
      *(_QWORD *)&v100 = 0x696669746E656469;
      *((_QWORD *)&v100 + 1) = 0xEA00000000007265;
      v75 = 0xEA00000000007265;
      v55 = objc_msgSend((id)v95, sel___swift_objectForKeyedSubscript_, sub_1ABF32284());
      swift_unknownObjectRelease();
      if (!v55)
      {
        v100 = 0u;
        v101 = 0u;
        sub_1ABD6B430((uint64_t)&v100);

        v25 = MEMORY[0x1E0DEA968];
        goto LABEL_102;
      }
      v76 = v54;
      sub_1ABF31DD4();
      swift_unknownObjectRelease();
      sub_1ABD6B430((uint64_t)&v100);
      *(_QWORD *)&v98 = 1701869940;
      *((_QWORD *)&v98 + 1) = 0xE400000000000000;
      v56 = objc_msgSend(v82, sel___swift_objectForKeyedSubscript_, sub_1ABF32284());
      swift_unknownObjectRelease();
      if (v56)
      {
        sub_1ABF31DD4();
        swift_unknownObjectRelease();
      }
      else
      {
        v98 = 0u;
        v99 = 0u;
      }
      v57 = v76;
      sub_1ABD22B10((uint64_t)&v98, (uint64_t)&v100);
      v25 = v27;
      if (!*((_QWORD *)&v101 + 1))
      {
        sub_1ABD6B430((uint64_t)&v100);
LABEL_101:

LABEL_102:
        v58 = v82;
        objc_msgSend(v81, sel_addObject_, v82);

        goto LABEL_103;
      }
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_101;
      if (v95 == 0x656C6369747261 && v96 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v59 = sub_1ABF3223C();
        swift_bridgeObjectRelease();
        if ((v59 & 1) == 0)
        {

          v25 = v27;
          goto LABEL_102;
        }
      }
      if (*(_QWORD *)(v97 + 16))
      {
        v60 = (void *)sub_1ABF31BC4();
        *(_QWORD *)&v100 = 1635017060;
        *((_QWORD *)&v100 + 1) = 0xE400000000000000;
        v61 = sub_1ABF32284();
        v73 = v60;
        v62 = objc_msgSend(v60, sel___swift_objectForKeyedSubscript_, v61);
        result = swift_unknownObjectRelease();
        if (!v62)
          goto LABEL_129;
        sub_1ABF31DD4();
        swift_unknownObjectRelease();
        sub_1ABD1F610(&v98, &v100);
        result = swift_dynamicCast();
        if (!*(_QWORD *)(v97 + 16))
        {
          __break(1u);
          break;
        }
        v72 = v94;
        sub_1ABF2FF5C();
        sub_1ABF2170C(0, 1);
        v63 = (void *)sub_1ABF31780();
        swift_bridgeObjectRelease();
        v95 = 0x696669746E656469;
        v96 = v75;
        v64 = sub_1ABF32284();
        v65 = v72;
        objc_msgSend(v72, sel___swift_setObject_forKeyedSubscript_, v63, v64);

        v25 = MEMORY[0x1E0DEA968];
        swift_unknownObjectRelease();
        v66 = v73;
        objc_msgSend(v81, sel_addObject_, v73);

LABEL_103:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);

        v25 = v27;
      }
    }
  }
  __break(1u);
LABEL_129:
  __break(1u);
  return result;
}

uint64_t sub_1ABEEF554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ForYouConfigRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1ABEEF598()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346DE0)
  {
    type metadata accessor for ForYouConfigRecord(255);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346DE0);
  }
}

uint64_t sub_1ABEEF5EC(uint64_t a1)
{
  uint64_t v2;

  sub_1ABEEF648(0, &qword_1EEC44F28, &qword_1EEC44F20, MEMORY[0x1E0DECD98], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1ABEEF648(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1ABD0F510(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1ABEEF6A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED346B40;
  if (!qword_1ED346B40)
  {
    v1 = type metadata accessor for ForYouConfigRecord(255);
    result = MEMORY[0x1AF438F30](&unk_1ABF4C7D4, v1);
    atomic_store(result, (unint64_t *)&qword_1ED346B40);
  }
  return result;
}

unint64_t sub_1ABEEF6F0()
{
  unint64_t result;

  result = qword_1EEC44F40;
  if (!qword_1EEC44F40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E960, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData);
    atomic_store(result, (unint64_t *)&qword_1EEC44F40);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestForYouConfigRecordService.Errors()
{
  return &type metadata for TestForYouConfigRecordService.Errors;
}

ValueMetadata *type metadata accessor for TestForYouConfigRecordService.TopStoriesOverlayData()
{
  return &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData;
}

unint64_t sub_1ABEEF754()
{
  unint64_t result;

  result = qword_1EEC44F50;
  if (!qword_1EEC44F50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EAE4, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44F50);
  }
  return result;
}

unint64_t sub_1ABEEF798()
{
  unint64_t result;

  result = qword_1EEC44F68;
  if (!qword_1EEC44F68)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EABC, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article);
    atomic_store(result, (unint64_t *)&qword_1EEC44F68);
  }
  return result;
}

uint64_t sub_1ABEEF7DC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, &qword_1EEC44F58, (uint64_t)&type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABEEF858()
{
  unint64_t result;

  result = qword_1EEC44F80;
  if (!qword_1EEC44F80)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EA94, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article);
    atomic_store(result, (unint64_t *)&qword_1EEC44F80);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys()
{
  return &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys;
}

ValueMetadata *type metadata accessor for TestForYouConfigRecordService.TopStoriesOverlayData.Article()
{
  return &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article;
}

unint64_t sub_1ABEEF8C4()
{
  unint64_t result;

  result = qword_1EEC44F88;
  if (!qword_1EEC44F88)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EA6C, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44F88);
  }
  return result;
}

unint64_t sub_1ABEEF90C()
{
  unint64_t result;

  result = qword_1EEC44F90;
  if (!qword_1EEC44F90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4E9DC, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44F90);
  }
  return result;
}

unint64_t sub_1ABEEF954()
{
  unint64_t result;

  result = qword_1EEC44F98;
  if (!qword_1EEC44F98)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EA04, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44F98);
  }
  return result;
}

unint64_t sub_1ABEEF998()
{
  unint64_t result;

  result = qword_1EEC44FA8;
  if (!qword_1EEC44FA8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EBEC, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44FA8);
  }
  return result;
}

uint64_t _s10StocksCore29TestForYouConfigRecordServiceC21TopStoriesOverlayDataV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABEEFA1C + 4 * byte_1ABF4E880[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABEEFA3C + 4 * byte_1ABF4E885[v4]))();
}

_BYTE *sub_1ABEEFA1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABEEFA3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEEFA44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEEFA4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEEFA54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEEFA5C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys()
{
  return &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys;
}

unint64_t sub_1ABEEFA7C()
{
  unint64_t result;

  result = qword_1EEC44FB8;
  if (!qword_1EEC44FB8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EBC4, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44FB8);
  }
  return result;
}

unint64_t sub_1ABEEFAC4()
{
  unint64_t result;

  result = qword_1EEC44FC0;
  if (!qword_1EEC44FC0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EB34, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44FC0);
  }
  return result;
}

unint64_t sub_1ABEEFB0C()
{
  unint64_t result;

  result = qword_1EEC44FC8;
  if (!qword_1EEC44FC8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EB5C, &type metadata for TestForYouConfigRecordService.TopStoriesOverlayData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44FC8);
  }
  return result;
}

BOOL (*sub_1ABEEFB50())(uint64_t a1)
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[56];

  sub_1ABD22744(v0, (uint64_t)v3);
  v1 = swift_allocObject();
  sub_1ABDFDE84((uint64_t)v3, v1 + 16);
  return sub_1ABDFDEC0;
}

uint64_t sub_1ABEEFBAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v4 = *a1;
    v5 = a1[1];
    v6 = a1[2];
    v7 = a1[3];
    v8 = a1[4];
    v9 = a1[5];
    v18 = a1[7];
    v19 = a1[6];
    sub_1ABF2FF5C();
    v20 = *(_OWORD *)(a2 + 32);
    v21 = *(_OWORD *)(a2 + 48);
    v22 = *(_OWORD *)(a2 + 64);
    v23 = *(_OWORD *)(a2 + 80);
    v10 = v2 - 1;
    v11 = 168;
    v24 = *(_OWORD *)(a2 + 96);
    for (i = *(_QWORD *)(a2 + 40); ; i = *((_QWORD *)&v20 + 1))
    {
      v13 = (_QWORD)v20 == v4 && i == v5;
      if (v13 || (sub_1ABF3223C() & 1) != 0)
      {
        v14 = (_QWORD)v21 == v6 && *((_QWORD *)&v21 + 1) == v7;
        if (v14 || (sub_1ABF3223C() & 1) != 0)
        {
          v15 = (_QWORD)v22 == v8 && *((_QWORD *)&v22 + 1) == v9;
          if (v15 || (sub_1ABF3223C() & 1) != 0)
          {
            v16 = (_QWORD)v23 == v19 && *((_QWORD *)&v23 + 1) == v18;
            if (v16 || (sub_1ABF3223C() & 1) != 0)
              __asm { BR              X9 }
          }
        }
      }
      if (!v10)
        break;
      v20 = *(_OWORD *)(a2 + v11);
      v21 = *(_OWORD *)(a2 + v11 + 16);
      v22 = *(_OWORD *)(a2 + v11 + 32);
      v23 = *(_OWORD *)(a2 + v11 + 48);
      v24 = *(_OWORD *)(a2 + v11 + 64);
      v11 += 136;
      --v10;
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

BOOL (*sub_1ABEF0118())(uint64_t)
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[56];

  sub_1ABD22744(v0, (uint64_t)v3);
  v1 = swift_allocObject();
  sub_1ABDFDE84((uint64_t)v3, v1 + 16);
  return sub_1ABEF08A0;
}

BOOL sub_1ABEF0174(uint64_t a1)
{
  char v1;
  _BYTE v3[144];
  _BYTE v4[144];

  sub_1ABD6414C(a1, (uint64_t)v4);
  sub_1ABD6414C((uint64_t)v4, (uint64_t)v3);
  sub_1ABD2189C((uint64_t)v3);
  return (v1 & 1) == 0;
}

BOOL sub_1ABEF01C4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  _QWORD *v4;
  char v5;
  int8x16_t v6;
  uint64_t v7;
  BOOL v10;
  int8x16_t v11;
  _QWORD *v13;
  _BYTE v14[48];
  _QWORD v15[2];
  int8x16_t v16;
  int8x16_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  int8x16_t v21;
  int8x16_t v22;
  char v23;

  sub_1ABD22744(a1, (uint64_t)v15);
  sub_1ABD22744(a2, (uint64_t)&v19);
  switch(v18)
  {
    case 0:
      sub_1ABD22744((uint64_t)v15, (uint64_t)&v13);
      swift_unknownObjectRelease();
      if (v23)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
        goto LABEL_36;
      }
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      v3 = 1;
      goto LABEL_37;
    case 2:
      if (v23 != 2)
        goto LABEL_36;
      sub_1ABD228E4((uint64_t)&v19);
      v3 = 1;
      goto LABEL_37;
    case 3:
      sub_1ABD22744((uint64_t)v15, (uint64_t)&v13);
      if (v23 != 3)
        goto LABEL_27;
      v5 = sub_1ABD1C278(v13, v19);
      goto LABEL_26;
    case 4:
      sub_1ABD22744((uint64_t)v15, (uint64_t)&v13);
      if (v23 != 4)
        goto LABEL_36;
      goto LABEL_31;
    case 5:
      sub_1ABD22744((uint64_t)v15, (uint64_t)&v13);
      if (v23 != 5)
        goto LABEL_36;
LABEL_31:
      v3 = *(double *)&v13 == *(double *)&v19;
      goto LABEL_37;
    case 6:
      sub_1ABD22744((uint64_t)v15, (uint64_t)&v13);
      v4 = v13;
      if (v23 != 6)
        goto LABEL_27;
      goto LABEL_9;
    case 7:
      sub_1ABD22744((uint64_t)v15, (uint64_t)&v13);
      v4 = v13;
      if (v23 != 7)
      {
LABEL_27:
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
LABEL_9:
      v5 = sub_1ABDDFE74((uint64_t)v4, (uint64_t)v19);
LABEL_26:
      v3 = v5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_37;
    case 9:
      v6 = vorrq_s8(v16, v17);
      v7 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)) | v15[1];
      if (v15[0] == 3 && v7 == 0)
      {
        if (v23 != 9 || v19 != (_QWORD *)3)
          goto LABEL_36;
      }
      else
      {
        v10 = v15[0] == 4 && v7 == 0 && v23 == 9;
        if (!v10 || v19 != (_QWORD *)4)
          goto LABEL_36;
      }
      v11 = vorrq_s8(v21, v22);
      if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v11.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL)) | v20))
      {
        v3 = 1;
        goto LABEL_37;
      }
LABEL_36:
      sub_1ABD228E4((uint64_t)&v19);
      v3 = 0;
LABEL_37:
      sub_1ABD228E4((uint64_t)v15);
      return v3;
    default:
      goto LABEL_36;
  }
}

uint64_t assignWithCopy for HeadlineCondition(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char v13;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 9)
      v4 = *(_DWORD *)a1 + 9;
    switch(v4)
    {
      case 0u:
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(a1 + 8);
        break;
      case 1u:
        swift_unknownObjectRelease();
        break;
      case 2u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    v5 = *((unsigned __int8 *)a2 + 48);
    if (v5 >= 9)
      v5 = *(_DWORD *)a2 + 9;
    switch(v5)
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v6 = (uint64_t)a2 + 8;
        v7 = *((_QWORD *)a2 + 4);
        *(_QWORD *)(a1 + 32) = v7;
        *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
        v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
        swift_unknownObjectRetain();
        v8(a1 + 8, v6, v7);
        *(_BYTE *)(a1 + 48) = 0;
        return a1;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 48) = 1;
        swift_unknownObjectRetain();
        return a1;
      case 2u:
        v12 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v12;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v12 - 8))(a1, a2);
        *(_BYTE *)(a1 + 48) = 2;
        return a1;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v13 = 3;
        goto LABEL_22;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 48) = 4;
        return a1;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 48) = 5;
        return a1;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v13 = 6;
        goto LABEL_22;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v13 = 7;
        goto LABEL_22;
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v13 = 8;
LABEL_22:
        *(_BYTE *)(a1 + 48) = v13;
        sub_1ABF2FF5C();
        break;
      default:
        v9 = *a2;
        v10 = a2[1];
        v11 = a2[2];
        *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
        *(_OWORD *)(a1 + 16) = v10;
        *(_OWORD *)(a1 + 32) = v11;
        *(_OWORD *)a1 = v9;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for HeadlineCondition(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  char v8;
  __int128 v9;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 48);
    if (v4 >= 9)
      v4 = *(_DWORD *)a1 + 9;
    switch(v4)
    {
      case 0u:
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(a1 + 8);
        break;
      case 1u:
        swift_unknownObjectRelease();
        break;
      case 2u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    v5 = *(unsigned __int8 *)(a2 + 48);
    if (v5 >= 9)
      v5 = *(_DWORD *)a2 + 9;
    switch(v5)
    {
      case 0u:
        v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 48) = 0;
        return a1;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 1;
        goto LABEL_22;
      case 2u:
        v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        v8 = 2;
        goto LABEL_22;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 3;
        goto LABEL_22;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 4;
        goto LABEL_22;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 5;
        goto LABEL_22;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 6;
        goto LABEL_22;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 7;
        goto LABEL_22;
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 8;
        goto LABEL_22;
      default:
        v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        v8 = *(_BYTE *)(a2 + 48);
LABEL_22:
        *(_BYTE *)(a1 + 48) = v8;
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineCondition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF7 && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 247);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 0xA)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HeadlineCondition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(_BYTE *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 247;
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1ABEF084C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 48);
  if (result >= 9)
    return (*(_DWORD *)a1 + 9);
  return result;
}

uint64_t sub_1ABEF0868(uint64_t result, unsigned int a2)
{
  if (a2 > 8)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 9;
    LOBYTE(a2) = 9;
  }
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineCondition()
{
  return &type metadata for HeadlineCondition;
}

uint64_t sub_1ABEF08A4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

double sub_1ABEF08D0()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t sub_1ABEF08D8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  return result;
}

uint64_t sub_1ABEF08E4()
{
  return sub_1ABF2FF5C();
}

double sub_1ABEF08EC()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double sub_1ABEF08F4()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double sub_1ABEF08FC()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double sub_1ABEF0904()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t sub_1ABEF090C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

double sub_1ABEF0914()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double sub_1ABEF091C()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

double sub_1ABEF0924()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

double sub_1ABEF092C()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

double sub_1ABEF0934()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void *sub_1ABEF093C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 88);
  v2 = v1;
  return v1;
}

uint64_t sub_1ABEF0960()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t sub_1ABEF0968()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

uint64_t sub_1ABEF0970()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

double sub_1ABEF0978()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

double sub_1ABEF0980()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

uint64_t sub_1ABEF0988@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>, double a12@<D4>, double a13@<D5>, double a14@<D6>, double a15@<D7>, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(_QWORD *)a7 = result;
  *(double *)(a7 + 8) = a8;
  *(double *)(a7 + 16) = a9;
  *(double *)(a7 + 24) = a10;
  *(double *)(a7 + 32) = a11;
  *(_QWORD *)(a7 + 40) = a2;
  *(double *)(a7 + 48) = a12;
  *(double *)(a7 + 56) = a13;
  *(double *)(a7 + 64) = a14;
  *(double *)(a7 + 72) = a15;
  *(_QWORD *)(a7 + 80) = a16;
  *(_QWORD *)(a7 + 88) = a3;
  *(_BYTE *)(a7 + 96) = a4;
  *(_QWORD *)(a7 + 104) = a5;
  *(_QWORD *)(a7 + 112) = a6;
  *(_QWORD *)(a7 + 120) = a17;
  *(_QWORD *)(a7 + 128) = a18;
  return result;
}

int8x16_t sub_1ABEF09C0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  int8x16_t v10;
  int8x16_t result;

  v4 = *(double *)a1;
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)a4 = a2;
  *(double *)(a4 + 24) = round(v4 * 10000.0) / 10000.0;
  *(_QWORD *)(a4 + 32) = v5;
  *(_QWORD *)(a4 + 40) = v6;
  v9 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a4 + 48) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a4 + 64) = v9;
  *(_QWORD *)(a4 + 80) = v8;
  *(_QWORD *)(a4 + 88) = a3;
  *(_BYTE *)(a4 + 96) = v7;
  v10 = *(int8x16_t *)(a1 + 64);
  *(_OWORD *)(a4 + 104) = *(_OWORD *)(a1 + 80);
  result = vextq_s8(v10, v10, 8uLL);
  *(int8x16_t *)(a4 + 120) = result;
  return result;
}

double sub_1ABEF0A2C(uint64_t a1, double a2)
{
  double v3;

  v3 = __exp10((double)a1);
  return round(v3 * a2) / v3;
}

uint64_t sub_1ABEF0A5C@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1ED346680 != -1)
    swift_once();
  v2 = xmmword_1ED346A10;
  v10[6] = xmmword_1ED346A20;
  v10[7] = xmmword_1ED346A30;
  v3 = xmmword_1ED3469D0;
  v4 = xmmword_1ED3469E0;
  v10[2] = xmmword_1ED3469E0;
  v10[3] = xmmword_1ED3469F0;
  v5 = xmmword_1ED3469F0;
  v6 = xmmword_1ED346A00;
  v10[4] = xmmword_1ED346A00;
  v10[5] = xmmword_1ED346A10;
  v7 = xmmword_1ED3469C0;
  v10[0] = xmmword_1ED3469C0;
  v10[1] = xmmword_1ED3469D0;
  v8 = xmmword_1ED346A30;
  *(_OWORD *)(a1 + 96) = xmmword_1ED346A20;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1ED346A40;
  *(_QWORD *)(a1 + 128) = qword_1ED346A40;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD64450((uint64_t)v10);
}

uint64_t initializeWithCopy for NewsHeadlineScore(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v3 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v3;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  sub_1ABF2FF5C();
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for NewsHeadlineScore(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v4 = *(void **)(a1 + 88);
  v5 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

uint64_t assignWithTake for NewsHeadlineScore(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v5 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);

  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsHeadlineScore(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsHeadlineScore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsHeadlineScore.CohortMembership()
{
  return &type metadata for NewsHeadlineScore.CohortMembership;
}

uint64_t sub_1ABEF0D90()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABEF0DBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AudioUpsellConfig() + 20);
  return sub_1ABCF5A10(v3, a1);
}

double sub_1ABEF0DEC()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for AudioUpsellConfig() + 24));
}

uint64_t sub_1ABEF0E0C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AudioUpsellConfig() + 28));
}

uint64_t sub_1ABEF0E2C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, double a4@<X3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  uint64_t v16;
  char v17;
  int *v18;
  uint64_t result;
  uint64_t v20;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - v13;
  if (!a2)
  {
    a1 = 0;
    a2 = 0xE000000000000000;
  }
  sub_1ABCF5A10(a3, (uint64_t)&v20 - v13);
  if ((a5 & 1) != 0)
    v15 = 0.0;
  else
    v15 = a4;
  v16 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v16 == 2)
    v17 = 2;
  else
    v17 = v16 == 1;
  sub_1ABCF59BC(a3);
  *a6 = a1;
  a6[1] = a2;
  v18 = (int *)type metadata accessor for AudioUpsellConfig();
  result = sub_1ABDD7BB8((uint64_t)v14, (uint64_t)a6 + v18[5]);
  *(double *)((char *)a6 + v18[6]) = v15;
  *((_BYTE *)a6 + v18[7]) = v17;
  return result;
}

uint64_t sub_1ABEF0F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>, double a6@<D0>)
{
  int *v10;
  uint64_t result;

  *a5 = a1;
  a5[1] = a2;
  v10 = (int *)type metadata accessor for AudioUpsellConfig();
  result = sub_1ABDD7BB8(a3, (uint64_t)a5 + v10[5]);
  *(double *)((char *)a5 + v10[6]) = a6;
  *((_BYTE *)a5 + v10[7]) = a4;
  return result;
}

uint64_t sub_1ABEF0FE4(char a1)
{
  if (!a1)
    return 0x6E696E6E69676562;
  if (a1 == 1)
    return 0x656C6464696DLL;
  return 6581861;
}

uint64_t sub_1ABEF1034(_BYTE *a1, _BYTE *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0xE600000000000000;
  v4 = 0x656C6464696DLL;
  if (v2 != 1)
  {
    v4 = 6581861;
    v3 = 0xE300000000000000;
  }
  if (*a1)
    v5 = v4;
  else
    v5 = 0x6E696E6E69676562;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE900000000000067;
  v7 = 0xE600000000000000;
  v8 = 0x656C6464696DLL;
  if (*a2 != 1)
  {
    v8 = 6581861;
    v7 = 0xE300000000000000;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 0x6E696E6E69676562;
  if (*a2)
    v10 = v7;
  else
    v10 = 0xE900000000000067;
  if (v5 == v9 && v6 == v10)
    v11 = 1;
  else
    v11 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1ABEF1120()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEF11B8()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEF122C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEF12C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEF25B8();
  *a1 = result;
  return result;
}

void sub_1ABEF12EC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE900000000000067;
  v4 = 0xE600000000000000;
  v5 = 0x656C6464696DLL;
  if (v2 != 1)
  {
    v5 = 6581861;
    v4 = 0xE300000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E696E6E69676562;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ABEF1344@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  double v34;
  int v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  double v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  int *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  double v62;
  int *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  double v70;
  unint64_t v71;
  char v72;
  _QWORD *v73;

  v65 = a2;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v66 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v68 = (char *)&v59 - v6;
  MEMORY[0x1E0C80A78](v7);
  v67 = (uint64_t)&v59 - v8;
  sub_1ABEF2688(0, &qword_1EEC44FD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *((_QWORD *)v9 - 1);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v59 - v12;
  v14 = type metadata accessor for AudioUpsellConfig();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEF2600();
  v17 = v69;
  sub_1ABF3235C();
  if (v17)
  {
    v27 = (uint64_t)a1;
  }
  else
  {
    v63 = (int *)v14;
    v64 = (uint64_t *)v16;
    v69 = v11;
    v73 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v72 = 0;
    sub_1ABF320C8();
    v18 = v10;
    v19 = v71;
    v62 = v70;
    v20 = v67;
    if (!v71)
    {
      swift_beginAccess();
      v21 = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_1ABD12054(0, v21[2] + 1, 1, v21);
      v23 = v21[2];
      v22 = v21[3];
      if (v23 >= v22 >> 1)
        v21 = sub_1ABD12054((_QWORD *)(v22 > 1), v23 + 1, 1, v21);
      v21[2] = v23 + 1;
      v24 = &v21[2 * v23];
      v24[4] = 0x696669746E656469;
      v24[5] = 0xEA00000000007265;
      v73 = v21;
      swift_endAccess();
      v19 = 0;
    }
    LOBYTE(v70) = 1;
    v25 = sub_1ABF305D4();
    sub_1ABCFE1EC(&qword_1ED34EA90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v26 = (uint64_t)v68;
    sub_1ABF320C8();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v26, 1, v25) == 1)
    {
      swift_beginAccess();
      v29 = v73;
      v30 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v29 = sub_1ABD12054(0, v29[2] + 1, 1, v29);
      v32 = v29[2];
      v31 = v29[3];
      if (v32 >= v31 >> 1)
        v29 = sub_1ABD12054((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
      v29[2] = v32 + 1;
      v33 = &v29[2 * v32];
      v33[4] = 7107189;
      v33[5] = 0xE300000000000000;
      v73 = v29;
      swift_endAccess();
      v19 = v30;
      v26 = (uint64_t)v68;
    }
    sub_1ABDD7BB8(v26, v20);
    v72 = 2;
    sub_1ABF320C8();
    v34 = v70;
    v35 = v71;
    if ((v71 & 1) != 0)
    {
      LODWORD(v68) = v71;
      swift_beginAccess();
      v36 = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v36 = sub_1ABD12054(0, v36[2] + 1, 1, v36);
      v38 = v36[2];
      v37 = v36[3];
      if (v38 >= v37 >> 1)
        v36 = sub_1ABD12054((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
      v36[2] = v38 + 1;
      v39 = &v36[2 * v38];
      v39[4] = 0x6E6F697461727564;
      v39[5] = 0xE800000000000000;
      v73 = v36;
      swift_endAccess();
      v35 = (int)v68;
    }
    v72 = 3;
    sub_1ABF320C8();
    v60 = a1;
    v61 = v13;
    if (v71)
    {
      v40 = v66;
    }
    else
    {
      swift_beginAccess();
      v41 = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v41 = sub_1ABD12054(0, v41[2] + 1, 1, v41);
      v43 = v41[2];
      v42 = v41[3];
      if (v43 >= v42 >> 1)
        v41 = sub_1ABD12054((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
      v40 = v66;
      v41[2] = v43 + 1;
      v44 = (char *)&v41[2 * v43];
      strcpy(v44 + 32, "playPosition");
      v44[45] = 0;
      *((_WORD *)v44 + 23) = -5120;
      v73 = v41;
      swift_endAccess();
    }
    v68 = v18;
    v45 = v62;
    if (!v19)
      v45 = 0.0;
    v66 = *(_QWORD *)&v45;
    if (v19)
      v46 = v19;
    else
      v46 = 0xE000000000000000;
    v47 = v67;
    sub_1ABCF5A10(v67, v40);
    if (v35)
      v34 = 0.0;
    v48 = sub_1ABF32068();
    swift_bridgeObjectRelease();
    if (v48 == 2)
      v49 = 2;
    else
      v49 = v48 == 1;
    sub_1ABCF59BC(v47);
    v50 = v63;
    v51 = (uint64_t)v64;
    *v64 = v66;
    *(_QWORD *)(v51 + 8) = v46;
    sub_1ABDD7BB8(v40, v51 + v50[5]);
    *(double *)(v51 + v50[6]) = v34;
    *(_BYTE *)(v51 + v50[7]) = v49;
    swift_beginAccess();
    v52 = v73;
    if (v73[2])
    {
      sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_1ABF366C0;
      sub_1ABD165AC();
      *(_QWORD *)(v53 + 56) = v54;
      *(_QWORD *)(v53 + 64) = sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCD0, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0CB1B18]);
      *(_QWORD *)(v53 + 32) = v52;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v55 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v55 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }
    v56 = v65;
    v57 = v69;
    v58 = v61;

    (*(void (**)(char *, char *))(v57 + 8))(v58, v68);
    swift_bridgeObjectRelease();
    sub_1ABEF2644(v51, v56);
    v27 = (uint64_t)v60;
  }
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

uint64_t sub_1ABEF1BA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1ABEF2688(0, &qword_1EEC44FE0, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEF2600();
  sub_1ABF32368();
  v9[15] = 0;
  sub_1ABF32194();
  if (v1)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  type metadata accessor for AudioUpsellConfig();
  v9[14] = 1;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1ABEF26E4();
  sub_1ABF321D0();
  v9[13] = 2;
  sub_1ABF321AC();
  v9[12] = 3;
  sub_1ABF32194();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return swift_bridgeObjectRelease();
}

void sub_1ABEF1DC4(char *a1)
{
  sub_1ABDE2C38(*a1);
}

void sub_1ABEF1DD0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABEF1E20()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABEF1E90()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABEF1ED0()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABEF1F2C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABEF1F78()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABEF1FE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEF31AC();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEF2014()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABEF2048 + 4 * byte_1ABF4EDCC[*v0]))();
}

void sub_1ABEF2048(_QWORD *a1@<X8>)
{
  *a1 = 7107189;
  a1[1] = 0xE300000000000000;
}

void sub_1ABEF205C(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F697461727564;
  a1[1] = 0xE800000000000000;
}

void sub_1ABEF2078(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "playPosition");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1ABEF209C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEF20D0 + 4 * byte_1ABF4EDD0[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1ABEF20D0()
{
  return 7107189;
}

uint64_t sub_1ABEF20E0()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1ABEF20F8()
{
  return 0x69736F5079616C70;
}

uint64_t sub_1ABEF2118@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABEF31AC();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEF213C()
{
  sub_1ABEF2600();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEF2164()
{
  sub_1ABEF2600();
  return sub_1ABF32398();
}

uint64_t sub_1ABEF218C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABEF1344(a1, a2);
}

uint64_t sub_1ABEF21A0(_QWORD *a1)
{
  return sub_1ABEF1BA0(a1);
}

uint64_t sub_1ABEF21BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v38;
  char *v39;

  v4 = sub_1ABF305D4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD47F2C();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v38 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v38 - v19;
  if (*a1 == *a2 && a1[1] == a2[1] || (v21 = 0, (sub_1ABF3223C() & 1) != 0))
  {
    v22 = (int *)type metadata accessor for AudioUpsellConfig();
    sub_1ABCF5A10((uint64_t)a1 + v22[5], (uint64_t)v20);
    v23 = v22[5];
    v38 = a2;
    sub_1ABCF5A10((uint64_t)a2 + v23, (uint64_t)v18);
    v24 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_1ABCF5A10((uint64_t)v20, (uint64_t)v11);
    sub_1ABCF5A10((uint64_t)v18, v24);
    v25 = v6;
    v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v26((uint64_t)v11, 1, v4) == 1)
    {
      sub_1ABCF59BC((uint64_t)v18);
      sub_1ABCF59BC((uint64_t)v20);
      if (v26(v24, 1, v4) == 1)
      {
        sub_1ABCF59BC((uint64_t)v11);
        goto LABEL_11;
      }
    }
    else
    {
      sub_1ABCF5A10((uint64_t)v11, (uint64_t)v15);
      if (v26(v24, 1, v4) != 1)
      {
        v27 = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v39, v24, v4);
        sub_1ABCFE1EC(&qword_1ED34EA88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v28 = sub_1ABF31720();
        v29 = *(void (**)(char *, uint64_t))(v25 + 8);
        v29(v27, v4);
        sub_1ABCF59BC((uint64_t)v18);
        sub_1ABCF59BC((uint64_t)v20);
        v29(v15, v4);
        sub_1ABCF59BC((uint64_t)v11);
        if ((v28 & 1) == 0)
        {
LABEL_16:
          v21 = 0;
          return v21 & 1;
        }
LABEL_11:
        if (*(double *)((char *)a1 + v22[6]) == *(double *)((char *)v38 + v22[6]))
        {
          v30 = 0xE900000000000067;
          v31 = 0x6E696E6E69676562;
          v32 = v22[7];
          v33 = *((unsigned __int8 *)a1 + v32);
          v34 = *((unsigned __int8 *)v38 + v32);
          if (v33)
          {
            if (v33 == 1)
            {
              v35 = 0xE600000000000000;
              v36 = 0x656C6464696DLL;
              if (!v34)
                goto LABEL_22;
            }
            else
            {
              v35 = 0xE300000000000000;
              v36 = 6581861;
              if (!v34)
                goto LABEL_22;
            }
          }
          else
          {
            v36 = 0x6E696E6E69676562;
            v35 = 0xE900000000000067;
            if (!v34)
              goto LABEL_22;
          }
          if (v34 != 1)
          {
            v30 = 0xE300000000000000;
            if (v36 != 6581861)
              goto LABEL_27;
            goto LABEL_25;
          }
          v30 = 0xE600000000000000;
          v31 = 0x656C6464696DLL;
LABEL_22:
          if (v36 != v31)
            goto LABEL_27;
LABEL_25:
          if (v35 == v30)
          {
            swift_bridgeObjectRelease_n();
            v21 = 1;
            return v21 & 1;
          }
LABEL_27:
          v21 = sub_1ABF3223C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v21 & 1;
        }
        goto LABEL_16;
      }
      sub_1ABCF59BC((uint64_t)v18);
      sub_1ABCF59BC((uint64_t)v20);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v4);
    }
    sub_1ABEF31F4((uint64_t)v11);
    v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_1ABEF25B8()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1ABEF2600()
{
  unint64_t result;

  result = qword_1EEC44FD8;
  if (!qword_1EEC44FD8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F070, &type metadata for AudioUpsellConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44FD8);
  }
  return result;
}

uint64_t sub_1ABEF2644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AudioUpsellConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABEF2688(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABEF2600();
    v7 = a3(a1, &type metadata for AudioUpsellConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1ABEF26E4()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = qword_1EEC44FE8;
  if (!qword_1EEC44FE8)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1ABCF5A54(255, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v3 = v2;
    v4 = sub_1ABCFE1EC(&qword_1ED34EA80, v1, MEMORY[0x1E0CB0010]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEE988], v3, &v4);
    atomic_store(result, (unint64_t *)&qword_1EEC44FE8);
  }
  return result;
}

unint64_t sub_1ABEF2778()
{
  unint64_t result;

  result = qword_1EEC44FF0;
  if (!qword_1EEC44FF0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EDE8, &type metadata for AudioUpsellConfig.PlayPosition);
    atomic_store(result, (unint64_t *)&qword_1EEC44FF0);
  }
  return result;
}

_QWORD *sub_1ABEF27BC(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1ABF305D4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    sub_1ABF2FF5C();
    if (v13(v10, 1, v11))
    {
      sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *((_BYTE *)v4 + v16) = *((_BYTE *)a2 + v16);
  }
  return v4;
}

uint64_t sub_1ABEF28EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1ABF305D4();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_1ABEF2968(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1ABF305D4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  sub_1ABF2FF5C();
  if (v12(v9, 1, v10))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  return a1;
}

_QWORD *sub_1ABEF2A6C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF305D4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_OWORD *sub_1ABEF2BC8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF305D4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  return a1;
}

_QWORD *sub_1ABEF2CBC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1ABF305D4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
  return a1;
}

uint64_t sub_1ABEF2E04()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABEF2E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1ABEF2EA4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABEF2EB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AudioUpsellConfig.PlayPosition(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABEF2F88 + 4 * byte_1ABF4EDD9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABEF2FBC + 4 * byte_1ABF4EDD4[v4]))();
}

uint64_t sub_1ABEF2FBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEF2FC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEF2FCCLL);
  return result;
}

uint64_t sub_1ABEF2FD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEF2FE0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABEF2FE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEF2FEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioUpsellConfig.PlayPosition()
{
  return &type metadata for AudioUpsellConfig.PlayPosition;
}

uint64_t storeEnumTagSinglePayload for AudioUpsellConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABEF3054 + 4 * byte_1ABF4EDE3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABEF3088 + 4 * byte_1ABF4EDDE[v4]))();
}

uint64_t sub_1ABEF3088(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEF3090(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEF3098);
  return result;
}

uint64_t sub_1ABEF30A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEF30ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABEF30B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEF30B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioUpsellConfig.CodingKeys()
{
  return &type metadata for AudioUpsellConfig.CodingKeys;
}

unint64_t sub_1ABEF30D8()
{
  unint64_t result;

  result = qword_1EEC44FF8;
  if (!qword_1EEC44FF8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F048, &type metadata for AudioUpsellConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44FF8);
  }
  return result;
}

unint64_t sub_1ABEF3120()
{
  unint64_t result;

  result = qword_1EEC45000;
  if (!qword_1EEC45000)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EF80, &type metadata for AudioUpsellConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC45000);
  }
  return result;
}

unint64_t sub_1ABEF3168()
{
  unint64_t result;

  result = qword_1EEC45008;
  if (!qword_1EEC45008)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4EFA8, &type metadata for AudioUpsellConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC45008);
  }
  return result;
}

uint64_t sub_1ABEF31AC()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1ABEF31F4(uint64_t a1)
{
  uint64_t v2;

  sub_1ABD47F2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABEF3230(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1ABF30820();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB527C(0, v6, 0);
    v7 = v13;
    v8 = a1 + 40;
    do
    {
      sub_1ABF2FF5C();
      sub_1ABF3082C();
      v13 = v7;
      v10 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1ABDB527C(v9 > 1, v10 + 1, 1);
        v7 = v13;
      }
      v8 += 16;
      *(_QWORD *)(v7 + 16) = v10 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v10, v5, v2);
      --v6;
    }
    while (v6);
  }
  return v7;
}

double sub_1ABEF3370@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_1ABD00F9C(a1, a2), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(a3 + 56) + 48 * v6;
    v10 = *(_QWORD *)v8;
    v9 = *(_QWORD *)(v8 + 8);
    v12 = *(_QWORD *)(v8 + 16);
    v11 = *(_QWORD *)(v8 + 24);
    v13 = *(_QWORD *)(v8 + 32);
    LOWORD(v8) = *(_WORD *)(v8 + 40);
    *(_QWORD *)a4 = v10;
    *(_QWORD *)(a4 + 8) = v9;
    *(_QWORD *)(a4 + 16) = v12;
    *(_QWORD *)(a4 + 24) = v11;
    *(_QWORD *)(a4 + 32) = v13;
    *(_WORD *)(a4 + 40) = v8;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)(a4 + 26) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

double sub_1ABEF3400@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_1ABD9A618(a1), (v6 & 1) != 0))
  {
    sub_1ABD1FEFC(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1ABEF3450@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1ABCF4DA8(0, &qword_1ED34FE58, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1ABF0AAD8();
  sub_1ABF320C8();
  if (v3)
    return swift_release();
  if (!v9)
    sub_1ABF026BC(a1, a2);
  result = swift_release();
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1ABEF3534@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1ABCF4DA8(0, &qword_1ED34FE58, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1ABF0AFF4();
  sub_1ABF320C8();
  if (v3)
    return swift_release();
  if (!v9)
    sub_1ABF026BC(a1, a2);
  result = swift_release();
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  a3[4] = v12;
  a3[5] = v13;
  a3[6] = v14;
  a3[7] = v15;
  a3[8] = v16;
  return result;
}

uint64_t sub_1ABEF3654@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1ABCF4DA8(0, &qword_1ED34FE58, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1ABF0AFB0();
  sub_1ABF320C8();
  if (v3)
    return swift_release();
  if (v8 == 2)
    sub_1ABF026BC(a1, a2);
  result = swift_release();
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  return result;
}

uint64_t sub_1ABEF3740@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _BYTE v8[512];
  _BYTE v9[512];
  _BYTE v10[528];

  v10[527] = a1;
  sub_1ABCF4DA8(0, &qword_1ED34FE58, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1ABF0AB1C();
  sub_1ABF320C8();
  if (v3)
    return swift_release();
  sub_1ABD843F0((uint64_t)v10, (uint64_t)v8, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  sub_1ABD843F0((uint64_t)v8, (uint64_t)v9, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  if (sub_1ABEF6380((uint64_t)v9) == 1)
    sub_1ABF026BC(a1, a2);
  swift_release();
  return sub_1ABD843F0((uint64_t)v8, a3, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
}

uint64_t sub_1ABEF3874@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  sub_1ABCF4DA8(0, &qword_1ED34FE58, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1ABF0AB60();
  sub_1ABF320C8();
  if (v3)
    return swift_release();
  if (v8 == 1)
    sub_1ABF026BC(a1, a2);
  result = swift_release();
  *(_QWORD *)a3 = v8;
  *(_QWORD *)(a3 + 8) = v9;
  *(_QWORD *)(a3 + 16) = v10;
  *(_QWORD *)(a3 + 24) = v11;
  *(_QWORD *)(a3 + 32) = v12;
  *(_QWORD *)(a3 + 40) = v13;
  *(_QWORD *)(a3 + 48) = v14;
  *(_QWORD *)(a3 + 56) = v15;
  *(_BYTE *)(a3 + 64) = v16;
  return result;
}

uint64_t sub_1ABEF399C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _BYTE v8[168];
  _BYTE v9[168];
  _BYTE v10[184];

  v10[183] = a1;
  sub_1ABCF4DA8(0, &qword_1ED34FE58, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1ABF0AF6C();
  sub_1ABF320C8();
  if (v3)
    return swift_release();
  sub_1ABD843F0((uint64_t)v10, (uint64_t)v8, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1ABD843F0((uint64_t)v8, (uint64_t)v9, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  if (sub_1ABEF63BC((uint64_t)v9) == 1)
    sub_1ABF026BC(a1, a2);
  swift_release();
  return sub_1ABD843F0((uint64_t)v8, a3, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
}

uint64_t sub_1ABEF3AD0@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _BYTE v8[1120];
  _BYTE v9[1120];
  _BYTE v10[1136];

  v10[1135] = a1;
  sub_1ABCF4DA8(0, &qword_1ED34FE58, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1ABF0AF28();
  sub_1ABF320C8();
  if (v3)
    return swift_release();
  sub_1ABD843F0((uint64_t)v10, (uint64_t)v8, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  sub_1ABD843F0((uint64_t)v8, (uint64_t)v9, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  if (sub_1ABEF63D8((uint64_t)v9) == 1)
    sub_1ABF026BC(a1, a2);
  swift_release();
  return sub_1ABD843F0((uint64_t)v8, a3, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
}

uint64_t sub_1ABEF3C04@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1ABCF4DA8(0, &qword_1ED34FE58, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1ABF0AEE4();
  sub_1ABF320C8();
  if (v3)
    return swift_release();
  if (v9 == 1)
    sub_1ABF026BC(a1, a2);
  result = swift_release();
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1ABEF3CEC@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  sub_1ABCF4DA8(0, &qword_1ED34FE58, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  sub_1ABF0ABA4();
  sub_1ABF320C8();
  if (v3)
    return swift_release();
  if ((v12 & 1) != 0)
    sub_1ABF026BC(a1, a2);
  result = swift_release();
  *(_QWORD *)a3 = v8;
  *(_QWORD *)(a3 + 8) = v9;
  *(_QWORD *)(a3 + 16) = v10;
  *(_QWORD *)(a3 + 24) = v11;
  *(_BYTE *)(a3 + 32) = v12;
  return result;
}

uint64_t sub_1ABEF3DE0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2 && (v5 = *(_QWORD *)(v3 + 1192), (v6 = *(_QWORD *)(v5 + 16)) != 0))
  {
    v7 = a2;
    v8 = result;
    v9 = (uint64_t *)(v5 + 64);
    while (1)
    {
      v11 = *(v9 - 4);
      v10 = *(v9 - 3);
      v12 = *((unsigned __int8 *)v9 - 16);
      v14 = *(v9 - 1);
      v13 = *v9;
      if (v11 == v8 && v10 == v7)
      {
        v11 = v8;
        goto LABEL_13;
      }
      result = sub_1ABF3223C();
      if ((result & 1) != 0)
        break;
      v9 += 5;
      if (!--v6)
        goto LABEL_10;
    }
    v7 = v10;
LABEL_13:
    *a3 = v11;
    a3[1] = v7;
    a3[2] = v12;
    a3[3] = v14;
    a3[4] = v13;
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  else
  {
LABEL_10:
    a3[4] = 0;
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
  }
  return result;
}

double sub_1ABEF3EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, char a17, double a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,char a27,char a28,double a29,char a30,char a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36,double a37,char a38,double a39,char a40,double a41,char a42,double a43,char a44,double a45,char a46,unint64_t a47,unint64_t a48,double a49,char a50,double a51,char a52,double a53,char a54,double a55,char a56,double a57,char a58,double a59,char a60,double a61,char a62,double a63)
{
  char a64;
  char a65;
  char a66;
  char a67;
  uint64_t a68;
  char a69;
  uint64_t a70;
  char a71;
  double a72;
  char a73;
  double a74;
  char a75;
  double a76;
  char a77;
  double a78;
  char a79;
  double a80;
  char a81;
  double a82;
  char a83;
  double a84;
  char a85;
  uint64_t a86;
  char v78;
  double v79;
  double v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  unint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char v105;
  char v106;
  unint64_t v107;
  unint64_t v108;
  double v109;
  unint64_t v110;
  unint64_t v111;
  void *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  char v117;
  unint64_t v118;
  unint64_t v119;
  char v120;
  unint64_t v121;
  unint64_t v122;
  char v123;
  char v124;
  char v125;
  char v126;
  uint64_t v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  uint64_t v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  double v148;
  BOOL v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  double v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  unint64_t v200;
  double v201;
  double v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  double v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  BOOL v231;
  char v232;
  BOOL v233;
  char v234;
  BOOL v236;
  char v237;
  char v238;
  BOOL v239;
  uint64_t v240;
  uint64_t v242;
  double v245;
  char v246;
  char v247;
  char v248;
  char v249;
  char v250;
  char v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unint64_t v256;
  unint64_t v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  double result;
  unint64_t v268;
  unint64_t v269;
  unint64_t v270;
  unint64_t v271;
  char v272;
  char v273;
  char v274;
  uint64_t v275;
  uint64_t v276;
  double v277;
  unint64_t v278;
  unint64_t v279;
  unint64_t v280;
  unint64_t v281;
  unint64_t v282;
  unint64_t v283;
  unint64_t v284;
  unint64_t v285;
  unint64_t v286;
  unint64_t v287;
  unint64_t v288;
  char v289;
  unint64_t v290;
  char v291;
  unint64_t v292;
  char v293;
  unint64_t v294;
  char v295;
  unint64_t v296;
  char v297;
  unint64_t v298;
  char v299;
  unint64_t v300;
  char v301;
  unint64_t v302;
  char v303;
  unint64_t v304;
  char v305;
  unint64_t v306;
  unint64_t v307;
  unint64_t v308;
  char v309;
  unint64_t v310;
  char v311;
  unint64_t v312;
  char v313;
  unint64_t v314;
  uint64_t v315;
  char v316;
  unint64_t v317;
  char v318;
  char v319;
  char v320;
  unint64_t v321;
  unint64_t v322;
  char v323;
  unint64_t v324;
  char v325;
  uint64_t v326;
  unint64_t v327;
  unint64_t v328;
  char v329;
  unint64_t v330;
  uint64_t v331;
  unint64_t v332;
  uint64_t v333;
  char v334;
  char v335;
  uint64_t v336;
  unint64_t v337;
  uint64_t v338;
  char v339;
  unint64_t v340;
  char v341;
  char v342;
  char v343;
  double v344;
  char v345;
  double v346;
  char v347;
  double v348;
  unint64_t v349;
  unint64_t v350;
  unint64_t v351;
  unint64_t v352;
  char v353;
  uint64_t v354;
  char v355;
  double v356;
  unint64_t v357;
  unint64_t v358;
  char v359;
  unint64_t v360;
  double v361;
  unint64_t v362;
  unint64_t v363;
  unint64_t v364;
  unint64_t v365;
  unint64_t v366;
  unint64_t v367;
  char v368;
  double v369;
  char v370;
  uint64_t v371;
  double v372;
  char v373;
  unint64_t v374;
  unint64_t v375;
  unint64_t v376;
  double v377;
  double v378;
  double v379;
  double v380;
  double v381;
  uint64_t v382;
  double v383;
  uint64_t v384;
  double v385;
  double v386;
  double v387;
  double v388;
  double v389;
  double v390;
  double v391;
  double v392;
  unint64_t v393;
  unint64_t v394;
  unint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  unint64_t v407;
  unint64_t v408;
  uint64_t v409;
  unint64_t v410;
  unint64_t v411;
  unint64_t v412;
  unint64_t v413;
  double v414;
  char v415;
  char v416;
  double v417;
  unint64_t v418;
  uint64_t v419;
  char v420;
  double v421;
  unint64_t v422;
  uint64_t v423;
  double v424;
  char v425;
  uint64_t v426;
  unint64_t v427;
  uint64_t v428;
  unint64_t v429;
  uint64_t v430;
  uint64_t v431;
  char v432;
  unint64_t v433;
  unint64_t v434;
  unint64_t v435;
  unint64_t v436;
  char v437;
  unint64_t v438;
  uint64_t v439;
  char v440;
  uint64_t v441;
  unint64_t v442;
  char v443;
  uint64_t v444;
  unint64_t v445;
  unint64_t v446;
  unint64_t v447;
  double v448;
  double v449;
  char v450;
  unint64_t v451;
  char v452;
  unint64_t v453;
  char v454;
  char v455;
  unint64_t v456;
  unint64_t v457;
  unint64_t v458;
  unint64_t v459;
  char v460;
  unint64_t v461;
  unint64_t v462;
  unint64_t v463;
  uint64_t v464;
  unint64_t v465;
  double v466;
  unint64_t v467;
  unint64_t v468;
  unint64_t v469;
  unint64_t v470;
  unint64_t v471;
  uint64_t v472;
  unint64_t v473;
  unint64_t v474;
  unint64_t v475;
  unint64_t v476;
  unint64_t v477;
  uint64_t v478;
  double v479;
  uint64_t v480;
  unint64_t v481;
  unint64_t v482;
  unint64_t v483;
  unint64_t v484;
  unint64_t v485;
  uint64_t v486;
  char v487;
  uint64_t v488;
  char v489;
  unint64_t v490;
  char v491;
  uint64_t v492;
  unint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  unint64_t v507;
  unint64_t v508;
  unint64_t v509;
  unint64_t v510;
  uint64_t v511;
  unint64_t v512;
  unint64_t v513;
  unint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  unint64_t v523;
  _BYTE __src[1123];
  _BYTE v525[7];
  _BYTE v526[7];
  _BYTE v527[7];
  char v528;
  _BYTE v529[7];
  char v530;
  _BYTE v531[7];
  char v532;
  _BYTE v533[7];
  char v534;
  _BYTE v535[7];
  char v536;
  int v537;
  __int16 v538;
  _BYTE v539[7];
  char v540;
  _BYTE v541[7];
  char v542;
  _BYTE v543[7];
  char v544;
  _BYTE v545[7];
  char v546;
  _BYTE v547[7];
  char v548;
  _BYTE v549[7];
  char v550;
  _BYTE v551[11];
  __int16 v552;
  _BYTE v553[7];
  _BYTE v554[167];
  char v555;
  _BYTE v556[7];
  char v557;
  _BYTE v558[7];
  char v559;
  _BYTE v560[7];
  char v561;
  _BYTE v562[7];
  _BYTE v563[7];
  _BYTE __dst[1120];
  _OWORD v565[70];
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  _BYTE v576[168];
  _BYTE v577[505];
  _BYTE v578[512];
  _BYTE v579[512];
  _BYTE v580[512];
  _BYTE v581[168];
  _BYTE v582[1136];

  v78 = MEMORY[0x1E0C80A78](a1);
  v80 = v79;
  v489 = v81;
  v488 = v82;
  v487 = v83;
  v486 = v84;
  v492 = v85;
  v494 = v86;
  v491 = v78;
  v88 = v87;
  v89 = STACK[0x2860];
  v90 = STACK[0x2858];
  v91 = STACK[0x2850];
  v92 = *(_QWORD *)(STACK[0x2820] + 8);
  v508 = *(_QWORD *)STACK[0x2820];
  v511 = *(_QWORD *)(STACK[0x2820] + 16);
  v93 = *(_QWORD *)(STACK[0x2820] + 24);
  v514 = *(_QWORD *)STACK[0x2828];
  v523 = *(_QWORD *)(STACK[0x2828] + 8);
  v505 = *(_QWORD *)(STACK[0x2828] + 16);
  v513 = *(_QWORD *)(STACK[0x2828] + 24);
  v510 = *(_QWORD *)(STACK[0x2828] + 32);
  v506 = *(_QWORD *)(STACK[0x2828] + 40);
  v507 = *(_QWORD *)(STACK[0x2828] + 48);
  v515 = *(_QWORD *)(STACK[0x2828] + 56);
  v509 = *(_QWORD *)(STACK[0x2828] + 64);
  v522 = *(unsigned __int8 *)STACK[0x2830];
  v94 = *(double *)(STACK[0x2830] + 16);
  v479 = *(double *)(STACK[0x2830] + 8);
  sub_1ABD843F0(STACK[0x2848], (uint64_t)v580, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  v95 = *(_QWORD *)v91;
  v518 = *(_QWORD *)(v91 + 8);
  v96 = *(_QWORD *)(v91 + 16);
  v519 = *(_QWORD *)(v91 + 24);
  v97 = *(_QWORD *)(v91 + 32);
  v516 = *(_QWORD *)(v91 + 40);
  v502 = *(_QWORD *)(v91 + 48);
  v517 = *(_QWORD *)(v91 + 56);
  v98 = *(_BYTE *)(v91 + 64);
  sub_1ABD843F0(v90, (uint64_t)v581, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1ABD843F0(v89, (uint64_t)v582, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  v512 = v92;
  if (!v92)
  {
    v512 = 0x80000001ABF592C0;
    v511 = MEMORY[0x1E0DEE9D8];
    v93 = 0x40D5180000000000;
    v508 = 0xD000000000000017;
  }
  v99 = STACK[0x2AF0];
  v100 = (uint64_t *)STACK[0x2A78];
  if (!v523)
  {
    v515 = 0;
    v514 = 0xD00000000000002FLL;
    v513 = 0xD00000000000005ELL;
    v510 = 0x80000001ABF63320;
    v523 = 0x80000001ABF632F0;
    v509 = 0xE000000000000000;
    v507 = 0xE200000000000000;
    v506 = 23899;
    v505 = MEMORY[0x1E0DEE9D8];
  }
  v102 = *(_QWORD *)v99;
  v101 = *(_QWORD *)(v99 + 8);
  v521 = *(_QWORD *)(v99 + 16);
  v520 = *(_QWORD *)(v99 + 24);
  v103 = v100[1];
  v497 = *v100;
  v499 = v100[2];
  v498 = v100[3];
  v104 = *(_BYTE *)(v99 + 32);
  sub_1ABD843F0((uint64_t)v580, (uint64_t)v579, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  v500 = v103;
  if (sub_1ABEF6380((uint64_t)v579) == 1)
  {
    sub_1ABEF6398((uint64_t)v565);
    sub_1ABD843F0((uint64_t)v565, (uint64_t)__src, &qword_1ED34EDD8, (uint64_t)&type metadata for FlexiblePaywall);
    sub_1ABD3A9B8(0, 0, 2, 2, 2, 2, 0, 1, v578, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      (uint64_t)__src,
      0,
      1,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      1,
      0,
      1,
      2,
      2,
      0,
      1,
      0,
      2);
  }
  else
  {
    sub_1ABD843F0((uint64_t)v580, (uint64_t)v578, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  }
  memcpy(v577, v578, sizeof(v577));
  v414 = v80;
  if (v95 == 1)
  {
    v95 = 0;
    v275 = 0;
    v276 = 0;
    v519 = 0;
    v517 = 86400;
    v516 = 1;
    v518 = 0xFFFFFFFFLL;
  }
  else
  {
    BYTE4(v276) = v96 & 1;
    LOBYTE(v276) = v97 & 1;
    BYTE4(v275) = v502 & 1;
    LOBYTE(v275) = v98 & 1;
  }
  sub_1ABD843F0((uint64_t)v581, (uint64_t)v576, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  if (sub_1ABEF63BC((uint64_t)v576) == 1)
  {
    sub_1ABE4B970(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (double *)&v566, 0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1);
  }
  else
  {
    sub_1ABD843F0((uint64_t)v581, (uint64_t)v565, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
    v572 = v565[6];
    v573 = v565[7];
    v574 = v565[8];
    v575 = v565[9];
    v568 = v565[2];
    v569 = v565[3];
    v570 = v565[4];
    v571 = v565[5];
    v566 = v565[0];
    v567 = v565[1];
  }
  v105 = STACK[0x29B8];
  sub_1ABD843F0((uint64_t)v582, (uint64_t)v565, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  v496 = v95;
  if (sub_1ABEF63D8((uint64_t)v565) == 1)
  {
    sub_1ABEF63F4(__src);
    sub_1ABD843F0((uint64_t)__src, (uint64_t)__dst, (unint64_t *)&qword_1ED34ED50, (uint64_t)&type metadata for ScoringConfig);
    v106 = STACK[0x29D8];
    if ((v105 & 1) != 0)
      goto LABEL_16;
LABEL_19:
    v278 = STACK[0x29B0];
    v108 = STACK[0x2AA8];
    if ((v106 & 1) != 0)
      goto LABEL_17;
    goto LABEL_20;
  }
  sub_1ABD843F0((uint64_t)v582, (uint64_t)__src, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  memcpy(__dst, __src, 0x45BuLL);
  v106 = STACK[0x29D8];
  if ((v105 & 1) == 0)
    goto LABEL_19;
LABEL_16:
  objc_msgSend((id)objc_opt_self(), sel_fc_timeIntervalOneDay);
  v278 = v107;
  v108 = STACK[0x2AA8];
  if ((v106 & 1) != 0)
  {
LABEL_17:
    objc_msgSend((id)objc_opt_self(), sel_fc_timeIntervalOneDay);
    v277 = v109 * 15.0;
    goto LABEL_21;
  }
LABEL_20:
  v277 = *(double *)&STACK[0x29D0];
LABEL_21:
  v110 = STACK[0x2B48];
  v111 = STACK[0x2A30];
  v471 = STACK[0x2A20];
  v469 = STACK[0x2970];
  v467 = STACK[0x28B0];
  v465 = STACK[0x28A0];
  v463 = STACK[0x2890];
  v461 = STACK[0x2880];
  v458 = STACK[0x27C8];
  v456 = STACK[0x27B8];
  if (v108)
    v112 = (void *)v108;
  else
    v112 = &unk_1E5AF2BC8;
  v113 = STACK[0x2B88];
  v114 = sub_1ABD22CD8((uint64_t)v112);
  swift_bridgeObjectRelease();
  v478 = v114;
  v473 = v111;
  if ((v104 & 1) != 0)
  {
    v101 = 0x7FFFFFFFFFFFFFFFLL;
    v102 = 0x7FEFFFFFFFFFFFFFLL;
    v521 = 0x7FFFFFFFFFFFFFFFLL;
    v520 = 0x7FFFFFFFFFFFFFFFLL;
  }
  v115 = v113;
  v501 = v102;
  v503 = v101;
  v485 = STACK[0x2BC0];
  v484 = STACK[0x2BB8];
  v483 = STACK[0x2BB0];
  v454 = STACK[0x2BA8];
  v453 = STACK[0x2BA0];
  v452 = STACK[0x2B98];
  v451 = STACK[0x2B90];
  v289 = STACK[0x2B80];
  v294 = STACK[0x2B78];
  v293 = STACK[0x2B70];
  v292 = STACK[0x2B68];
  v291 = STACK[0x2B60];
  v290 = STACK[0x2B58];
  v116 = STACK[0x2B51];
  v305 = STACK[0x2B50];
  v117 = STACK[0x2B40];
  v375 = STACK[0x2B38];
  v373 = STACK[0x2B30];
  v310 = STACK[0x2B28];
  v309 = STACK[0x2B20];
  v308 = STACK[0x2B18];
  v118 = STACK[0x2B10];
  v119 = STACK[0x2B08];
  v482 = STACK[0x2B00];
  v481 = STACK[0x2AF8];
  v303 = STACK[0x2AE8];
  v302 = STACK[0x2AE0];
  v301 = STACK[0x2AD8];
  v300 = STACK[0x2AD0];
  v299 = STACK[0x2AC8];
  v298 = STACK[0x2AC0];
  v297 = STACK[0x2AB8];
  v296 = STACK[0x2AB0];
  v295 = STACK[0x2AA0];
  v304 = STACK[0x2A98];
  v306 = STACK[0x2A90];
  v307 = STACK[0x2A88];
  v366 = STACK[0x2A80];
  v311 = STACK[0x2A70];
  v364 = STACK[0x2A68];
  v460 = STACK[0x2A60];
  v477 = STACK[0x2A58];
  v312 = STACK[0x2A50];
  v362 = STACK[0x2A48];
  v349 = STACK[0x2A40];
  v313 = STACK[0x2A38];
  v420 = STACK[0x2A28];
  v437 = STACK[0x2A18];
  v332 = STACK[0x2A10];
  v316 = STACK[0x2A08];
  v314 = STACK[0x2A00];
  v120 = STACK[0x29F9];
  v443 = STACK[0x29F8];
  v433 = STACK[0x29F0];
  v416 = STACK[0x29E8];
  v327 = STACK[0x29E0];
  v325 = STACK[0x29C8];
  v324 = STACK[0x29C0];
  v440 = STACK[0x29A9];
  v323 = STACK[0x29A8];
  v322 = STACK[0x29A0];
  v288 = STACK[0x2998];
  v287 = STACK[0x2990];
  v121 = STACK[0x2988];
  v393 = STACK[0x2980];
  v318 = STACK[0x2978];
  v319 = STACK[0x2968];
  v321 = STACK[0x2960];
  v320 = STACK[0x2958];
  v330 = STACK[0x2950];
  v329 = STACK[0x2948];
  v337 = STACK[0x2940];
  v335 = STACK[0x2938];
  v429 = STACK[0x2930];
  v455 = STACK[0x2928];
  v476 = STACK[0x2920];
  v334 = STACK[0x2918];
  v427 = STACK[0x2910];
  v425 = STACK[0x2908];
  v340 = STACK[0x2900];
  v339 = STACK[0x28F8];
  v122 = STACK[0x28F0];
  v341 = STACK[0x28E8];
  v422 = STACK[0x28E0];
  v343 = STACK[0x28D8];
  v418 = STACK[0x28D0];
  v285 = STACK[0x28C8];
  v286 = STACK[0x28C0];
  v342 = STACK[0x28B8];
  v345 = STACK[0x28A8];
  v347 = STACK[0x2898];
  v355 = STACK[0x2888];
  v353 = STACK[0x2878];
  v351 = STACK[0x2870];
  v432 = STACK[0x2868];
  v357 = STACK[0x2840];
  v360 = STACK[0x2838];
  v359 = STACK[0x2818];
  v408 = STACK[0x2810];
  v281 = STACK[0x2808];
  v279 = STACK[0x2800];
  v284 = STACK[0x27F8];
  v282 = STACK[0x27F0];
  v123 = STACK[0x27E9];
  v124 = STACK[0x27E8];
  v283 = STACK[0x27E0];
  v280 = STACK[0x27D8];
  v125 = STACK[0x27D0];
  v126 = STACK[0x27C1];
  v368 = STACK[0x27C0];
  v370 = STACK[0x27B0];
  v127 = a70;
  v128 = a67;
  v129 = a64;
  v130 = a38;
  v131 = a36;
  v132 = a32;
  v133 = a31;
  v134 = a30;
  v135 = a28;
  v136 = a27;
  v504 = v93;
  if (!v115)
  {
    v274 = STACK[0x2B51];
    v273 = STACK[0x29F9];
    v272 = STACK[0x27D0];
    v270 = STACK[0x2B10];
    v271 = STACK[0x28F0];
    v268 = STACK[0x2988];
    v269 = STACK[0x2B08];
    sub_1ABCF5A54(0, &qword_1ED34FFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1ABF30820();
    v137 = v123;
    v138 = swift_allocObject();
    *(_OWORD *)(v138 + 16) = xmmword_1ABF366E0;
    sub_1ABF30814();
    sub_1ABF30814();
    v121 = v268;
    v119 = v269;
    v118 = v270;
    v122 = v271;
    v125 = v272;
    v127 = a70;
    v129 = a64;
    v134 = a30;
    v131 = a36;
    v130 = a38;
    v136 = a27;
    v135 = a28;
    v133 = a31;
    v132 = a32;
    v120 = v273;
    v116 = v274;
    v115 = v138;
    v123 = v137;
    v128 = a67;
  }
  v139 = *(double *)&v110;
  v140 = *(double *)&v473;
  v141 = *(double *)&v471;
  v142 = *(double *)&v469;
  v143 = *(double *)&v467;
  v144 = *(double *)&v465;
  v145 = *(double *)&v463;
  v146 = *(double *)&v461;
  v147 = *(double *)&v458;
  v148 = *(double *)&v456;
  v164 = v118 == 0;
  v165 = 0xE000000000000000;
  if (!v118)
    v118 = 0xE000000000000000;
  v475 = v118;
  if (v164)
    v166 = 0;
  else
    v166 = v119;
  v474 = v166;
  v167 = 0x80000001ABF633A0;
  if (v288)
    v167 = v288;
  v413 = v167;
  v168 = 0xD00000000000002BLL;
  if (v288)
    v168 = v287;
  v412 = v168;
  v169 = 0x80000001ABF63380;
  if (v121)
    v169 = v121;
  v411 = v169;
  v170 = 0xD00000000000001CLL;
  if (v121)
    v170 = v393;
  v410 = v170;
  v171 = 0xE200000000000000;
  if (v285)
    v171 = v285;
  v407 = v171;
  v172 = 32123;
  if (v285)
    v172 = v286;
  v405 = v172;
  v173 = 1.0;
  if (v522 == 2)
    v94 = 1.0;
  v449 = v94;
  if (v522 != 2)
    v173 = v479;
  v448 = v173;
  if (v281)
    v165 = v281;
  v447 = v165;
  v174 = v279;
  if (!v281)
    v174 = 0;
  v446 = v174;
  v175 = v284;
  v176 = 0x34343334312D5357;
  v177 = 0x34343334312D5359;
  if (v284)
    v177 = v282;
  v444 = v177;
  v178 = 0xEC0000006E652D31;
  if (!v284)
    v175 = 0xEC0000006E652D31;
  v445 = v175;
  if (v283)
    v178 = v283;
  v442 = v178;
  if (v283)
    v176 = v280;
  v441 = v176;
  v179 = 0x80000001ABF632C0;
  if (a48)
    v179 = a48;
  v395 = v179;
  v180 = 0xD00000000000002CLL;
  if (a48)
    v180 = a47;
  v394 = v180;
  v181 = 0xFFFFFFFFLL;
  v182 = v294;
  if ((v289 & 1) != 0)
    v182 = 0xFFFFFFFFLL;
  v480 = v182;
  v183 = v292;
  if ((v293 & 1) != 0)
    v183 = 0xFFFFFFFFLL;
  v472 = v183;
  v184 = v290;
  if ((v291 & 1) != 0)
    v184 = 0;
  v470 = v184;
  if ((v305 & 1) != 0)
    v139 = 7776000.0;
  v466 = v139;
  v185 = v375;
  if ((v117 & 1) != 0)
    v185 = 1;
  v464 = v185;
  v186 = v310;
  if ((v373 & 1) != 0)
    v186 = 0;
  v462 = v186;
  v187 = v308;
  if ((v309 & 1) != 0)
    v187 = 0;
  v459 = v187;
  v188 = v302;
  if ((v303 & 1) != 0)
    v188 = 0;
  v457 = v188;
  v189 = v300;
  if ((v301 & 1) != 0)
    v189 = 0;
  v468 = v189;
  v190 = v298;
  if ((v299 & 1) != 0)
    v190 = 0;
  v436 = v190;
  v191 = v296;
  if ((v297 & 1) != 0)
    v191 = 0;
  v435 = v191;
  v192 = 1296000;
  if ((v295 & 1) == 0)
    v192 = v304;
  v431 = v192;
  v193 = v306;
  v194 = MEMORY[0x1E0DEE9D8];
  if (!v306)
    v193 = MEMORY[0x1E0DEE9D8];
  v376 = v193;
  v195 = v307;
  if (!v307)
    v195 = MEMORY[0x1E0DEE9D8];
  v374 = v195;
  v196 = v366;
  if (!v366)
    v196 = MEMORY[0x1E0DEE9D8];
  v367 = v196;
  v197 = 5;
  if ((v311 & 1) == 0)
    v197 = v364;
  v439 = v197;
  v198 = v312;
  if (!v312)
    v198 = MEMORY[0x1E0DEE9D8];
  v365 = v198;
  v199 = v362;
  if (!v362)
    v199 = MEMORY[0x1E0DEE9D8];
  v363 = v199;
  v200 = v349;
  if (!v349)
    v200 = MEMORY[0x1E0DEE9D8];
  v350 = v200;
  if ((v313 & 1) != 0)
    v201 = 600.0;
  else
    v201 = v140;
  v424 = v201;
  v202 = -600.0;
  if ((v420 & 1) == 0)
    v202 = v141;
  v421 = v202;
  v203 = v332;
  if ((v437 & 1) != 0)
    v203 = 0xFFFFFFFFLL;
  v333 = v203;
  v204 = v314;
  if ((v316 & 1) != 0)
    v204 = 0;
  v438 = v204;
  v205 = v433;
  if (!v433)
    v205 = MEMORY[0x1E0DEE9D8];
  v317 = v205;
  if ((v416 & 1) == 0)
    v181 = v327;
  v315 = v181;
  v206 = v324;
  if ((v325 & 1) != 0)
    v206 = 0;
  v434 = v206;
  v207 = v322;
  if ((v323 & 1) != 0)
    v207 = 0;
  v328 = v207;
  if ((v318 & 1) != 0)
    v208 = 3.0;
  else
    v208 = v142;
  v417 = v208;
  v209 = 180;
  if ((v319 & 1) == 0)
    v209 = v321;
  v326 = v209;
  v210 = 300;
  if ((v320 & 1) == 0)
    v210 = v330;
  v331 = v210;
  v211 = 7200;
  if ((v329 & 1) == 0)
    v211 = v337;
  v338 = v211;
  v212 = 600;
  if ((v335 & 1) == 0)
    v212 = v429;
  v336 = v212;
  v213 = 0x3FF0000000000000;
  v214 = v427;
  if ((v334 & 1) != 0)
    v214 = 0x3FF0000000000000;
  v430 = v214;
  if ((v425 & 1) == 0)
    v213 = v340;
  v428 = v213;
  v215 = 2592000;
  if ((v339 & 1) == 0)
    v215 = v122;
  v426 = v215;
  v216 = 2;
  v217 = v422;
  if ((v341 & 1) != 0)
    v217 = 2;
  v423 = v217;
  v218 = 0x3FD0000000000000;
  if ((v343 & 1) == 0)
    v218 = v418;
  v419 = v218;
  if ((v342 & 1) != 0)
    v143 = 2.0;
  v344 = v143;
  if ((v345 & 1) != 0)
    v144 = 3.0;
  v346 = v144;
  if ((v347 & 1) != 0)
    v145 = 2592000.0;
  v348 = v145;
  if ((v355 & 1) != 0)
    v146 = 2592000.0;
  v356 = v146;
  v219 = v351;
  if ((v353 & 1) != 0)
    v219 = 1;
  v354 = v219;
  v220 = v357;
  if (!v357)
    v220 = MEMORY[0x1E0DEE9D8];
  v358 = v220;
  v221 = v360;
  if (!v360)
    v221 = MEMORY[0x1E0DEE9D8];
  v352 = v221;
  v222 = 500000;
  if ((v359 & 1) == 0)
    v222 = v408;
  v409 = v222;
  if ((v125 & 1) != 0)
    v147 = 86400.0;
  v361 = v147;
  if ((v368 & 1) != 0)
    v148 = 1.5;
  v369 = v148;
  if ((v370 & 1) == 0)
    v216 = a86;
  v371 = v216;
  if ((a85 & 1) != 0)
    a84 = 60.0;
  v372 = a84;
  if ((a83 & 1) != 0)
    a82 = 600.0;
  v377 = a82;
  if ((a81 & 1) != 0)
    a80 = 14400.0;
  v378 = a80;
  if ((a79 & 1) != 0)
    a78 = 60.0;
  v379 = a78;
  if ((a77 & 1) != 0)
    a76 = 600.0;
  v380 = a76;
  if ((a75 & 1) != 0)
    a74 = 14400.0;
  v381 = a74;
  if ((a73 & 1) != 0)
    a72 = 14400.0;
  v383 = a72;
  if ((a71 & 1) != 0)
    v127 = 3;
  v382 = v127;
  if ((a69 & 1) != 0)
    a68 = 3;
  v384 = a68;
  if ((v129 & 1) != 0)
    a63 = 120.0;
  v385 = a63;
  if ((a62 & 1) != 0)
    a61 = 7200.0;
  v386 = a61;
  if ((a60 & 1) != 0)
    a59 = 604800.0;
  v387 = a59;
  if ((a58 & 1) != 0)
    a57 = 604800.0;
  v388 = a57;
  if ((a56 & 1) != 0)
    a55 = 604800.0;
  v389 = a55;
  if ((a54 & 1) != 0)
    a53 = 604800.0;
  v390 = a53;
  if ((a52 & 1) != 0)
    a51 = 600.0;
  v391 = a51;
  if ((a50 & 1) != 0)
    a49 = 600.0;
  v392 = a49;
  if ((a46 & 1) != 0)
    a45 = 1200.0;
  if ((a44 & 1) != 0)
    a43 = 10.0;
  if ((a42 & 1) != 0)
    a41 = 300.0;
  if ((a40 & 1) != 0)
    a39 = 60.0;
  if ((v130 & 1) != 0)
    a37 = 86400.0;
  if ((v131 & 1) != 0)
    a35 = 3;
  v398 = a35;
  if ((a34 & 1) != 0)
    a33 = 3;
  v397 = a33;
  v231 = v132 == 2;
  v232 = v132;
  v233 = v133 == 2;
  v234 = v133;
  if ((v134 & 1) != 0)
    a29 = 0.001;
  v236 = v135 == 2;
  v237 = v135;
  v238 = v136;
  v239 = v136 == 2;
  if (a26)
    v240 = a26;
  else
    v240 = MEMORY[0x1E0DEE9D8];
  v396 = v240;
  if ((a25 & 1) != 0)
    a24 = 1;
  v399 = a24;
  v242 = 100;
  if ((a23 & 1) != 0)
    a22 = 100;
  v403 = a22;
  if ((a21 & 1) == 0)
    v242 = a20;
  v401 = v242;
  if ((a19 & 1) != 0)
    a18 = 259200.0;
  if ((a17 & 1) != 0)
    v245 = 86400.0;
  else
    v245 = v414;
  v450 = (v116 == 2) | v116;
  v415 = (v120 == 2) | v120;
  v246 = (v124 == 2) | v124;
  v247 = (v126 == 2) | v126;
  v248 = v231 | v232;
  v249 = v233 | v234;
  v250 = v236 | v237;
  v251 = v239 | v238;
  v252 = v488;
  if ((v489 & 1) != 0)
    v252 = 1;
  v406 = v252;
  v253 = v486;
  if ((v487 & 1) != 0)
    v253 = 3;
  v404 = v253;
  v254 = v492;
  if (!v492)
    v254 = MEMORY[0x1E0DEE9D8];
  v402 = v254;
  v255 = v494;
  if (!v494)
    v255 = MEMORY[0x1E0DEE9D8];
  v400 = v255;
  v495 = sub_1ABD02284(v115);
  swift_bridgeObjectRelease();
  v256 = v451;
  if ((v452 & 1) != 0)
    v256 = 0;
  v493 = v256;
  v257 = v453;
  if (!v453)
    v257 = v194;
  v490 = v257;
  memcpy((void *)(v88 + 416), v577, 0x1F9uLL);
  v561 = BYTE4(v276);
  v559 = v276;
  v557 = BYTE4(v275);
  v555 = v275;
  *(_OWORD *)&v554[103] = v572;
  *(_OWORD *)&v554[119] = v573;
  *(_OWORD *)&v554[135] = v574;
  *(_OWORD *)&v554[151] = v575;
  *(_OWORD *)&v554[39] = v568;
  *(_OWORD *)&v554[55] = v569;
  *(_OWORD *)&v554[71] = v570;
  *(_OWORD *)&v554[87] = v571;
  *(_OWORD *)&v554[7] = v566;
  *(_OWORD *)&v554[23] = v567;
  memcpy(__src, __dst, 0x45BuLL);
  *(double *)(v88 + 40) = v245;
  *(double *)(v88 + 48) = a18;
  *(double *)(v88 + 96) = a29;
  *(_BYTE *)v88 = v491 & 1;
  *(_QWORD *)(v88 + 8) = v400;
  *(_QWORD *)(v88 + 16) = v402;
  *(_QWORD *)(v88 + 24) = v404;
  *(_QWORD *)(v88 + 32) = v406;
  *(_QWORD *)(v88 + 56) = v401;
  *(_QWORD *)(v88 + 64) = v403;
  *(_QWORD *)(v88 + 72) = v399;
  *(_QWORD *)(v88 + 80) = v396;
  *(_BYTE *)(v88 + 88) = v251 & 1;
  *(_BYTE *)(v88 + 89) = v250 & 1;
  *(_BYTE *)(v88 + 104) = v249 & 1;
  *(_BYTE *)(v88 + 105) = v248 & 1;
  *(_QWORD *)(v88 + 112) = v397;
  *(_QWORD *)(v88 + 120) = v398;
  *(_QWORD *)(v88 + 168) = v394;
  *(_QWORD *)(v88 + 176) = v395;
  *(_BYTE *)(v88 + 248) = (a65 == 2) | a65 & 1;
  *(_BYTE *)(v88 + 249) = a66 & 1;
  *(_BYTE *)(v88 + 250) = v128 & 1;
  *(_QWORD *)(v88 + 256) = v384;
  *(_QWORD *)(v88 + 264) = v382;
  *(_QWORD *)(v88 + 328) = v371;
  *(_BYTE *)(v88 + 344) = v247 & 1;
  *(_QWORD *)(v88 + 360) = v354;
  *(_QWORD *)(v88 + 400) = v352;
  *(_QWORD *)(v88 + 408) = v358;
  *(_QWORD *)(v88 + 928) = v496;
  *(_QWORD *)(v88 + 936) = v518;
  *(_QWORD *)(v88 + 952) = v519;
  *(_QWORD *)(v88 + 968) = v516;
  *(_QWORD *)(v88 + 984) = v517;
  *(_QWORD *)(v88 + 1160) = v405;
  *(_QWORD *)(v88 + 1168) = v407;
  *(_BYTE *)(v88 + 1176) = v440 & 1;
  *(_QWORD *)(v88 + 1184) = v315;
  *(_QWORD *)(v88 + 1192) = v317;
  *(_QWORD *)(v88 + 1200) = v333;
  *(_QWORD *)(v88 + 1224) = v350;
  *(_QWORD *)(v88 + 1232) = v363;
  *(_QWORD *)(v88 + 1240) = v365;
  *(_QWORD *)(v88 + 1248) = v367;
  *(_QWORD *)(v88 + 1256) = v374;
  *(_QWORD *)(v88 + 1264) = v376;
  *(_QWORD *)(v88 + 1272) = v336;
  *(_QWORD *)(v88 + 1280) = v338;
  *(_QWORD *)(v88 + 1288) = v331;
  *(_QWORD *)(v88 + 1296) = v326;
  *(_QWORD *)(v88 + 1312) = v410;
  *(_QWORD *)(v88 + 1320) = v411;
  *(_QWORD *)(v88 + 1328) = v412;
  *(_QWORD *)(v88 + 1336) = v413;
  *(_QWORD *)(v88 + 1344) = v328;
  v550 = 0;
  v548 = 0;
  v546 = 0;
  v544 = 0;
  v542 = 0;
  v540 = v455 & 1;
  v536 = v460 & 1;
  v534 = 0;
  v532 = 0;
  v530 = 0;
  v528 = 0;
  *(double *)(v88 + 128) = a37;
  *(double *)(v88 + 136) = a39;
  *(double *)(v88 + 144) = a41;
  *(double *)(v88 + 152) = a43;
  *(double *)(v88 + 160) = a45;
  *(double *)(v88 + 184) = v392;
  *(double *)(v88 + 192) = v391;
  *(double *)(v88 + 200) = v390;
  *(double *)(v88 + 208) = v389;
  *(double *)(v88 + 216) = v388;
  *(double *)(v88 + 224) = v387;
  *(double *)(v88 + 232) = v386;
  *(double *)(v88 + 240) = v385;
  *(double *)(v88 + 272) = v383;
  *(double *)(v88 + 280) = v381;
  *(double *)(v88 + 288) = v380;
  *(double *)(v88 + 296) = v379;
  *(double *)(v88 + 304) = v378;
  *(double *)(v88 + 312) = v377;
  *(double *)(v88 + 320) = v372;
  *(double *)(v88 + 336) = v369;
  *(_DWORD *)(v88 + 348) = *(_DWORD *)&v563[3];
  *(_DWORD *)(v88 + 345) = *(_DWORD *)v563;
  *(double *)(v88 + 352) = v361;
  *(double *)(v88 + 368) = v356;
  *(double *)(v88 + 376) = v348;
  *(double *)(v88 + 384) = v346;
  *(double *)(v88 + 392) = v344;
  *(_DWORD *)(v88 + 921) = *(_DWORD *)v562;
  *(_DWORD *)(v88 + 924) = *(_DWORD *)&v562[3];
  *(_BYTE *)(v88 + 944) = v561;
  *(_DWORD *)(v88 + 945) = *(_DWORD *)v560;
  *(_DWORD *)(v88 + 948) = *(_DWORD *)&v560[3];
  *(_BYTE *)(v88 + 960) = v559;
  *(_DWORD *)(v88 + 961) = *(_DWORD *)v558;
  *(_DWORD *)(v88 + 980) = *(_DWORD *)&v556[3];
  *(_DWORD *)(v88 + 977) = *(_DWORD *)v556;
  *(_DWORD *)(v88 + 1177) = *(_DWORD *)v553;
  *(_DWORD *)(v88 + 964) = *(_DWORD *)&v558[3];
  *(_BYTE *)(v88 + 976) = v557;
  *(_BYTE *)(v88 + 992) = v555;
  *(_QWORD *)(v88 + 1152) = *(_QWORD *)&v554[159];
  v258 = *(_OWORD *)&v554[16];
  v260 = *(_OWORD *)&v554[64];
  v259 = *(_OWORD *)&v554[80];
  v261 = *(_OWORD *)&v554[32];
  v262 = *(_OWORD *)&v554[48];
  v264 = *(_OWORD *)&v554[128];
  v263 = *(_OWORD *)&v554[144];
  v265 = *(_OWORD *)&v554[96];
  v266 = *(_OWORD *)&v554[112];
  *(_OWORD *)(v88 + 993) = *(_OWORD *)v554;
  *(_OWORD *)(v88 + 1009) = v258;
  *(_OWORD *)(v88 + 1057) = v260;
  *(_OWORD *)(v88 + 1073) = v259;
  *(_OWORD *)(v88 + 1025) = v261;
  *(_OWORD *)(v88 + 1041) = v262;
  *(_OWORD *)(v88 + 1121) = v264;
  *(_OWORD *)(v88 + 1137) = v263;
  *(_OWORD *)(v88 + 1089) = v265;
  *(_OWORD *)(v88 + 1105) = v266;
  *(_DWORD *)(v88 + 1180) = *(_DWORD *)&v553[3];
  *(double *)(v88 + 1208) = v421;
  *(double *)(v88 + 1216) = v424;
  *(double *)(v88 + 1304) = v417;
  *(_QWORD *)(v88 + 1352) = v431;
  *(_QWORD *)(v88 + 1360) = v478;
  *(_QWORD *)(v88 + 1368) = v435;
  *(_QWORD *)(v88 + 1376) = v436;
  *(_QWORD *)(v88 + 1384) = v441;
  *(_QWORD *)(v88 + 1392) = v442;
  *(_BYTE *)(v88 + 1400) = v246 & 1;
  *(_BYTE *)(v88 + 1401) = (v123 == 2) | v123 & 1;
  *(_WORD *)(v88 + 1406) = v552;
  *(_DWORD *)(v88 + 1402) = *(_DWORD *)&v551[7];
  *(_QWORD *)(v88 + 1408) = v444;
  *(_QWORD *)(v88 + 1416) = v445;
  *(_QWORD *)(v88 + 1424) = v446;
  *(_QWORD *)(v88 + 1432) = v447;
  *(_QWORD *)(v88 + 1440) = v409;
  *(_QWORD *)(v88 + 1448) = v508;
  *(_QWORD *)(v88 + 1456) = v512;
  *(_QWORD *)(v88 + 1464) = v511;
  *(_QWORD *)(v88 + 1472) = v504;
  *(_QWORD *)(v88 + 1480) = v514;
  *(_QWORD *)(v88 + 1488) = v523;
  *(_QWORD *)(v88 + 1496) = v505;
  *(_QWORD *)(v88 + 1504) = v513;
  *(_QWORD *)(v88 + 1512) = v510;
  *(_QWORD *)(v88 + 1520) = v506;
  *(_QWORD *)(v88 + 1528) = v507;
  *(_QWORD *)(v88 + 1536) = v515;
  *(_QWORD *)(v88 + 1544) = v509;
  *(_BYTE *)(v88 + 1552) = v522 & 1;
  *(_DWORD *)(v88 + 1556) = *(_DWORD *)&v551[3];
  *(_DWORD *)(v88 + 1553) = *(_DWORD *)v551;
  *(double *)(v88 + 1560) = v448;
  *(double *)(v88 + 1568) = v449;
  memcpy((void *)(v88 + 1576), __src, 0x45BuLL);
  *(_BYTE *)(v88 + 2691) = v432 & 1;
  *(_QWORD *)(v88 + 2696) = v419;
  *(_QWORD *)(v88 + 2712) = v423;
  *(_QWORD *)(v88 + 2728) = v426;
  *(_QWORD *)(v88 + 2744) = v428;
  *(_QWORD *)(v88 + 2760) = v430;
  *(_QWORD *)(v88 + 2776) = v476;
  *(_QWORD *)(v88 + 2800) = v434;
  *(_BYTE *)(v88 + 2816) = v443 & 1;
  *(_BYTE *)(v88 + 2817) = v415 & 1;
  *(_QWORD *)(v88 + 2824) = v438;
  *(_QWORD *)(v88 + 2832) = v477;
  *(_QWORD *)(v88 + 2848) = v439;
  *(_QWORD *)(v88 + 2856) = v497;
  *(_DWORD *)(v88 + 2705) = *(_DWORD *)v549;
  *(_DWORD *)(v88 + 2721) = *(_DWORD *)v547;
  *(_DWORD *)(v88 + 2740) = *(_DWORD *)&v545[3];
  *(_DWORD *)(v88 + 2737) = *(_DWORD *)v545;
  *(_DWORD *)(v88 + 2753) = *(_DWORD *)v543;
  *(_DWORD *)(v88 + 2772) = *(_DWORD *)&v541[3];
  *(_DWORD *)(v88 + 2769) = *(_DWORD *)v541;
  *(_DWORD *)(v88 + 2788) = *(_DWORD *)&v539[3];
  *(_DWORD *)(v88 + 2785) = *(_DWORD *)v539;
  *(_DWORD *)(v88 + 2818) = v537;
  *(_DWORD *)(v88 + 2844) = *(_DWORD *)&v535[3];
  *(_DWORD *)(v88 + 2841) = *(_DWORD *)v535;
  *(_BYTE *)(v88 + 2704) = v550;
  *(_DWORD *)(v88 + 2708) = *(_DWORD *)&v549[3];
  *(_BYTE *)(v88 + 2720) = v548;
  *(_DWORD *)(v88 + 2724) = *(_DWORD *)&v547[3];
  *(_BYTE *)(v88 + 2736) = v546;
  *(_BYTE *)(v88 + 2752) = v544;
  *(_DWORD *)(v88 + 2756) = *(_DWORD *)&v543[3];
  *(_BYTE *)(v88 + 2768) = v542;
  *(_BYTE *)(v88 + 2784) = v540;
  *(_WORD *)(v88 + 2822) = v538;
  *(_BYTE *)(v88 + 2840) = v536;
  *(_QWORD *)(v88 + 2792) = v278;
  *(double *)(v88 + 2808) = v277;
  *(_QWORD *)(v88 + 2864) = v500;
  *(_QWORD *)(v88 + 2872) = v499;
  *(_QWORD *)(v88 + 2880) = v498;
  *(_QWORD *)(v88 + 2888) = v457;
  *(_BYTE *)(v88 + 2896) = v534;
  *(_DWORD *)(v88 + 2897) = *(_DWORD *)v533;
  *(_DWORD *)(v88 + 2900) = *(_DWORD *)&v533[3];
  *(_QWORD *)(v88 + 2904) = v501;
  *(_QWORD *)(v88 + 2912) = v503;
  *(_QWORD *)(v88 + 2920) = v521;
  *(_QWORD *)(v88 + 2928) = v520;
  *(_BYTE *)(v88 + 2936) = v532;
  *(_DWORD *)(v88 + 2940) = *(_DWORD *)&v531[3];
  *(_DWORD *)(v88 + 2937) = *(_DWORD *)v531;
  *(_QWORD *)(v88 + 2944) = v481;
  *(_QWORD *)(v88 + 2952) = v482;
  *(_QWORD *)(v88 + 2960) = v474;
  *(_QWORD *)(v88 + 2968) = v475;
  *(_QWORD *)(v88 + 2976) = v459;
  *(_BYTE *)(v88 + 2984) = v530;
  *(_DWORD *)(v88 + 2988) = *(_DWORD *)&v529[3];
  *(_DWORD *)(v88 + 2985) = *(_DWORD *)v529;
  *(_QWORD *)(v88 + 2992) = v462;
  *(_BYTE *)(v88 + 3000) = v528;
  *(_DWORD *)(v88 + 3001) = *(_DWORD *)v527;
  *(_DWORD *)(v88 + 3004) = *(_DWORD *)&v527[3];
  *(_QWORD *)(v88 + 3008) = v464;
  result = v466;
  *(double *)(v88 + 3016) = v466;
  *(_BYTE *)(v88 + 3024) = v450 & 1;
  *(_DWORD *)(v88 + 3028) = *(_DWORD *)&v526[3];
  *(_DWORD *)(v88 + 3025) = *(_DWORD *)v526;
  *(_QWORD *)(v88 + 3032) = v470;
  *(_QWORD *)(v88 + 3040) = v490;
  *(_QWORD *)(v88 + 3048) = v472;
  *(_QWORD *)(v88 + 3056) = v480;
  *(_QWORD *)(v88 + 3064) = v495;
  *(_QWORD *)(v88 + 3072) = v493;
  *(_BYTE *)(v88 + 3080) = v454 & 1;
  *(_DWORD *)(v88 + 3081) = *(_DWORD *)v525;
  *(_DWORD *)(v88 + 3084) = *(_DWORD *)&v525[3];
  *(_QWORD *)(v88 + 3088) = v483;
  *(_QWORD *)(v88 + 3096) = v484;
  *(_QWORD *)(v88 + 3104) = v468;
  *(_QWORD *)(v88 + 3112) = v485;
  return result;
}

BOOL sub_1ABEF5E38()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 256) > 0;
}

uint64_t sub_1ABEF5E48()
{
  uint64_t v0;

  if (qword_1ED34E980 != -1)
    swift_once();
  v0 = sub_1ABF31F84();
  return __swift_project_value_buffer(v0, (uint64_t)qword_1ED34FDC8);
}

uint64_t sub_1ABEF5E90()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1ABEF5E98()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1ABEF5EA0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

double sub_1ABEF5EA8()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double sub_1ABEF5EB0()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t sub_1ABEF5EB8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t sub_1ABEF5EC0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t sub_1ABEF5EC8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t sub_1ABEF5ED0()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF5ED8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_1ABEF5EE0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 89);
}

double sub_1ABEF5EE8()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

uint64_t sub_1ABEF5EF0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t sub_1ABEF5EF8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 105);
}

uint64_t AppConfiguration.maxStocksInMoversAndShakers.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t sub_1ABEF5F08()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

double sub_1ABEF5F10()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

double sub_1ABEF5F18()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

uint64_t sub_1ABEF5F20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  sub_1ABF2FF5C();
  return v1;
}

double sub_1ABEF5F4C()
{
  uint64_t v0;

  return *(double *)(v0 + 192);
}

double sub_1ABEF5F54()
{
  uint64_t v0;

  return *(double *)(v0 + 200);
}

double sub_1ABEF5F5C()
{
  uint64_t v0;

  return *(double *)(v0 + 208);
}

double sub_1ABEF5F64()
{
  uint64_t v0;

  return *(double *)(v0 + 216);
}

double sub_1ABEF5F6C()
{
  uint64_t v0;

  return *(double *)(v0 + 224);
}

double sub_1ABEF5F74()
{
  uint64_t v0;

  return *(double *)(v0 + 232);
}

uint64_t sub_1ABEF5F7C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 249);
}

uint64_t sub_1ABEF5F84()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 250);
}

uint64_t sub_1ABEF5F8C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 256);
}

uint64_t sub_1ABEF5F94()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 264);
}

double sub_1ABEF5F9C()
{
  uint64_t v0;

  return *(double *)(v0 + 272);
}

double sub_1ABEF5FA4()
{
  uint64_t v0;

  return *(double *)(v0 + 280);
}

double sub_1ABEF5FAC()
{
  uint64_t v0;

  return *(double *)(v0 + 288);
}

double sub_1ABEF5FB4()
{
  uint64_t v0;

  return *(double *)(v0 + 296);
}

double sub_1ABEF5FBC()
{
  uint64_t v0;

  return *(double *)(v0 + 304);
}

double sub_1ABEF5FC4()
{
  uint64_t v0;

  return *(double *)(v0 + 312);
}

double sub_1ABEF5FCC()
{
  uint64_t v0;

  return *(double *)(v0 + 320);
}

uint64_t sub_1ABEF5FD4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 328);
}

double sub_1ABEF5FDC()
{
  uint64_t v0;

  return *(double *)(v0 + 336);
}

uint64_t sub_1ABEF5FE4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 344);
}

uint64_t sub_1ABEF5FEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 360);
}

double sub_1ABEF5FF4()
{
  uint64_t v0;

  return *(double *)(v0 + 368);
}

double sub_1ABEF5FFC()
{
  uint64_t v0;

  return *(double *)(v0 + 376);
}

double sub_1ABEF6004()
{
  uint64_t v0;

  return *(double *)(v0 + 384);
}

double sub_1ABEF600C()
{
  uint64_t v0;

  return *(double *)(v0 + 392);
}

uint64_t sub_1ABEF6014()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF601C()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6024@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  const void *v3;
  _BYTE v5[512];

  v3 = (const void *)(v1 + 416);
  memcpy(v5, v3, 0x1F9uLL);
  memcpy(a1, v3, 0x1F9uLL);
  return sub_1ABD0B274((uint64_t)v5);
}

uint64_t sub_1ABEF607C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  v2 = *(_BYTE *)(v1 + 944);
  v3 = *(_QWORD *)(v1 + 952);
  v4 = *(_BYTE *)(v1 + 960);
  v5 = *(_QWORD *)(v1 + 968);
  v6 = *(_BYTE *)(v1 + 976);
  v7 = *(_QWORD *)(v1 + 984);
  v8 = *(_BYTE *)(v1 + 992);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 928);
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = v8;
  return sub_1ABF2FF5C();
}

__n128 sub_1ABEF60C8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  v2 = *(_OWORD *)(v1 + 1112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 1096);
  *(_OWORD *)(a1 + 112) = v2;
  v3 = *(_OWORD *)(v1 + 1144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 1128);
  *(_OWORD *)(a1 + 144) = v3;
  v4 = *(_OWORD *)(v1 + 1048);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 1032);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(v1 + 1080);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 1064);
  *(_OWORD *)(a1 + 80) = v5;
  result = *(__n128 *)(v1 + 1000);
  v7 = *(_OWORD *)(v1 + 1016);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v7;
  return result;
}

uint64_t sub_1ABEF60F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1160);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABEF6128()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1184);
}

uint64_t sub_1ABEF6130()
{
  return sub_1ABF2FF5C();
}

double sub_1ABEF6138()
{
  uint64_t v0;

  return *(double *)(v0 + 1208);
}

double sub_1ABEF6140()
{
  uint64_t v0;

  return *(double *)(v0 + 1216);
}

uint64_t sub_1ABEF6148()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6150()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6158()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6160()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6168()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6170()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1272);
}

uint64_t sub_1ABEF6178()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1280);
}

uint64_t sub_1ABEF6180()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1288);
}

uint64_t sub_1ABEF6188()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1296);
}

double sub_1ABEF6190()
{
  uint64_t v0;

  return *(double *)(v0 + 1304);
}

uint64_t sub_1ABEF6198()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1312);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABEF61C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1328);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABEF61F8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1344);
}

uint64_t AppConfiguration.timeBeforeEarningsDateToShowEarnings.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1352);
}

uint64_t sub_1ABEF6208()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6210()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1368);
}

uint64_t sub_1ABEF6218()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1376);
}

uint64_t sub_1ABEF6220()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1384);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABEF6250()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1400);
}

uint64_t sub_1ABEF6258()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1401);
}

void *sub_1ABEF6260@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  return memcpy(a1, (const void *)(v1 + 1576), 0x45BuLL);
}

uint64_t sub_1ABEF6270()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2888);
}

__n128 sub_1ABEF6280@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 2936);
  result = *(__n128 *)(v1 + 2904);
  v4 = *(_OWORD *)(v1 + 2920);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t AppConfiguration.userConcernConfigurationResourceId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2944);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABEF62C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 2960);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABEF62F8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2976);
}

uint64_t sub_1ABEF6308()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2992);
}

uint64_t sub_1ABEF6318()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 3008);
}

double sub_1ABEF6320()
{
  uint64_t v0;

  return *(double *)(v0 + 3016);
}

uint64_t sub_1ABEF6328()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 3032);
}

uint64_t sub_1ABEF6330()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6338()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 3048);
}

uint64_t sub_1ABEF6340()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 3056);
}

uint64_t sub_1ABEF6348()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6350()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 3072);
}

uint64_t sub_1ABEF6358()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3080);
}

uint64_t AppConfiguration.newsPersonalizationConfiguration.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t AppConfiguration.stocksTabiPersonalizationConfiguration.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6370()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 3104);
}

uint64_t sub_1ABEF6378()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABEF6380(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1ABEF6398(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 160) = 1;
  return result;
}

uint64_t sub_1ABEF63BC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 160))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1ABEF63D8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 1115))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void sub_1ABEF63F4(_BYTE *a1)
{
  bzero(a1, 0x45AuLL);
  a1[1114] = 1;
}

uint64_t sub_1ABEF6420(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  void *v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  void *v76;
  char *v77;
  void *v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void *v107;
  uint64_t v108;
  char *v109;
  void *v110;
  char *v111;
  void *v112;
  char *v113;
  void *v114;
  char *v115;
  void *v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  char v125;
  char *v126;
  void *v127;
  char *v128;
  char *v129;
  void *v130;
  void *v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  void *v135;
  void *v136;
  uint64_t v137;
  double v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t *v151;
  _DWORD v152[4];
  uint64_t v153;
  int v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  int v160;
  int v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  int v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  int v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  int v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  int v194;
  int v195;
  uint64_t v196;
  int v197;
  int v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  uint64_t v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  void (*v278)(char *, char *, uint64_t);
  uint64_t v279;
  uint64_t v280;
  int v281;
  uint64_t v282;
  void *v283;
  int v284;
  uint64_t v285;
  int v286;
  int v287;
  int v288;
  int v289;
  double v290;
  int v291;
  double v292;
  int v293;
  double v294;
  int v295;
  double v296;
  int v297;
  double v298;
  int v299;
  double v300;
  int v301;
  double v302;
  int v303;
  double v304;
  __int128 v305;
  int v306;
  double v307;
  int v308;
  double v309;
  int v310;
  double v311;
  int v312;
  double v313;
  int v314;
  double v315;
  int v316;
  uint64_t v317;
  int v318;
  uint64_t v319;
  int v320;
  int v321;
  int v322;
  double v323;
  int v324;
  int v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  int v329;
  uint64_t v330;
  int v331;
  uint64_t v332;
  int v333;
  double v334;
  uint64_t v335;
  unsigned int v336;
  uint64_t v337;
  unsigned int v338;
  uint64_t v339;
  char *v340;
  char *v341;
  char *v342;
  char *v343;
  char *v344;
  char *v345;
  char *v346;
  char *v347;
  char *v348;
  char *v349;
  char *v350;
  char *v351;
  void *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  _OWORD v363[195];
  uint64_t v364;
  char v365;
  uint64_t v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  char v370;
  uint64_t v371;
  char *v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  char v379;
  _BYTE v380[752];
  uint64_t v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  char v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unsigned __int8 v394;
  uint64_t v395;
  char v396;
  char v397;
  uint64_t v398;
  uint64_t v399;
  void *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  void *v404;
  uint64_t v405;
  uint64_t v406;
  char *v407;
  uint64_t v408;
  char *v409;
  uint64_t v410;
  char *v411;
  uint64_t v412;
  char *v413;
  uint64_t v414;
  char v415;
  char v416;
  uint64_t v417;
  unsigned __int8 v418;
  uint64_t v419;
  char *v420;
  uint64_t v421;
  unsigned __int8 v422;
  char v423;
  uint64_t v424;
  _BYTE v425[1120];
  _BYTE v426[1120];
  uint64_t v427;
  _BYTE v428[168];
  _BYTE v429[168];
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  char *v436;
  uint64_t v437;
  char v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  char *v445;
  uint64_t v446;
  char v447;
  _BYTE v448[512];
  _BYTE v449[512];
  _BYTE v450[624];
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  uint64_t v458;
  char v459;
  _BYTE v460[512];
  _BYTE v461[512];
  _BYTE v462[512];
  _BYTE v463[112];
  _BYTE v464[680];
  uint64_t v465;
  char v466;
  __int128 v467;
  uint64_t v468;
  __int128 v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  _BYTE v497[80];
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  unsigned __int8 v503;
  char v504;
  _QWORD v505[99];
  unsigned __int8 v506;
  char v507;
  _QWORD v508[100];
  unsigned __int8 v509;
  char v510;
  _QWORD v511[6];
  uint64_t v512;
  _QWORD v513[6];
  uint64_t v514;
  _QWORD v515[5];
  unsigned __int8 v516;
  _BYTE v517[816];
  _QWORD *v518;

  MEMORY[0x1E0C80A78](a1);
  v361 = v1;
  v3 = v2;
  v352 = v4;
  v355 = sub_1ABF31F84();
  v354 = *(_QWORD *)(v355 - 8);
  MEMORY[0x1E0C80A78](v355);
  v353 = (char *)v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1ABCF4DA8(0, &qword_1ED34FE60, (uint64_t (*)(void))sub_1ABF02794, (uint64_t)&type metadata for LocalizationKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v357 = v7;
  v356 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v360 = (char *)v152 - v8;
  sub_1ABCF4DA8(0, &qword_1ED34FE58, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, v6);
  v359 = v9;
  v358 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v351 = (char *)v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v350 = (char *)v152 - v12;
  MEMORY[0x1E0C80A78](v13);
  v349 = (char *)v152 - v14;
  MEMORY[0x1E0C80A78](v15);
  v348 = (char *)v152 - v16;
  MEMORY[0x1E0C80A78](v17);
  v347 = (char *)v152 - v18;
  MEMORY[0x1E0C80A78](v19);
  v346 = (char *)v152 - v20;
  MEMORY[0x1E0C80A78](v21);
  v345 = (char *)v152 - v22;
  MEMORY[0x1E0C80A78](v23);
  v344 = (char *)v152 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v152 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v152 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v152 - v32;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)v152 - v35;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)v152 - v38;
  v40 = v3[3];
  v518 = v3;
  __swift_project_boxed_opaque_existential_1(v3, v40);
  sub_1ABF027D8();
  v41 = v361;
  sub_1ABF3235C();
  if (v41)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v518);
  v340 = v36;
  v341 = v33;
  v342 = v30;
  v343 = v27;
  v361 = v39;
  v42 = swift_allocObject();
  v43 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v42 + 16) = MEMORY[0x1E0DEE9D8];
  swift_retain_n();
  __swift_project_boxed_opaque_existential_1(v518, v518[3]);
  sub_1ABF02794();
  swift_retain_n();
  sub_1ABF3235C();
  v339 = v42;
  sub_1ABD04578(0, &qword_1ED34FBD0, (uint64_t)&type metadata for LanguageConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v426[0] = 0;
  sub_1ABF02840();
  sub_1ABF320C8();
  if (*(_QWORD *)&v363[0])
    v44 = *(_QWORD *)&v363[0];
  else
    v44 = v43;
  v517[799] = 1;
  v46 = sub_1ABF3208C();
  v48 = v47;
  v49 = sub_1ABF307D8();
  sub_1ABEFD9D0(v44, v49, v46, v48, v363);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABD843F0((uint64_t)v363, (uint64_t)v517, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  LOBYTE(v363[0]) = 0;
  v50 = sub_1ABF32098();
  v51 = v50;
  sub_1ABD07E04((uint64_t)v518, (uint64_t)v515);
  if (v51 == 2)
  {
    __swift_project_boxed_opaque_existential_1(v515, v515[3]);
    v52 = sub_1ABF32350();
    if (qword_1ED34E970 != -1)
      swift_once();
    v53 = __swift_project_value_buffer(v355, (uint64_t)qword_1ED34FD98);
    sub_1ABEF3400(v53, v52, v363);
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v363[1] + 1))
    {
      if ((swift_dynamicCast() & 1) == 0)
        v516 = 2;
    }
    else
    {
      sub_1ABD6B430((uint64_t)v363);
      v516 = 2;
    }
  }
  else
  {
    v516 = v51;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v515);
  v54 = v516;
  sub_1ABD04578(0, &qword_1ED34FD08, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v363[0]) = 1;
  sub_1ABF0317C();
  sub_1ABF320C8();
  v55 = v513[5];
  sub_1ABD07E04((uint64_t)v518, (uint64_t)v513);
  v338 = v54;
  if (v55)
  {
    v514 = v55;
    goto LABEL_25;
  }
  __swift_project_boxed_opaque_existential_1(v513, v513[3]);
  v56 = sub_1ABF32350();
  if (qword_1ED34E978 != -1)
    swift_once();
  v57 = __swift_project_value_buffer(v355, (uint64_t)qword_1ED34FDB0);
  sub_1ABEF3400(v57, v56, v363);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v363[1] + 1))
  {
    sub_1ABD6B430((uint64_t)v363);
    goto LABEL_24;
  }
  if ((swift_dynamicCast() & 1) == 0)
LABEL_24:
    v514 = 0;
LABEL_25:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v513);
  v58 = v514;
  sub_1ABD04578(0, &qword_1ED34FCF0, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v363[0]) = 2;
  sub_1ABF031EC();
  sub_1ABF320C8();
  v59 = v511[5];
  sub_1ABD07E04((uint64_t)v518, (uint64_t)v511);
  if (v59)
  {
    v512 = v59;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v511, v511[3]);
    v61 = sub_1ABF32350();
    v62 = sub_1ABEF5E48();
    v63 = v354;
    v64 = (uint64_t)v353;
    v65 = v355;
    (*(void (**)(char *, uint64_t, uint64_t))(v354 + 16))(v353, v62, v355);
    sub_1ABEF3400(v64, v61, v363);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v65);
    if (*((_QWORD *)&v363[1] + 1))
    {
      if ((swift_dynamicCast() & 1) == 0)
        v512 = 0;
    }
    else
    {
      sub_1ABD6B430((uint64_t)v363);
      v512 = 0;
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v511);
  v60 = v512;
  v426[0] = 3;
  sub_1ABF320C8();
  v355 = v58;
  v354 = *(_QWORD *)&v363[0];
  LODWORD(v353) = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(3u, v339);
  v426[0] = 4;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v337 = *(_QWORD *)&v363[0];
  v336 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(4u, v339);
  swift_release();
  v426[0] = 5;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v66 = v60;
  v335 = *(_QWORD *)&v363[0];
  v67 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(5u, v339);
  swift_release();
  v426[0] = 6;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v334 = *(double *)v363;
  v333 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(6u, v339);
  swift_release();
  v426[0] = 7;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v332 = *(_QWORD *)&v363[0];
  v331 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(7u, v339);
  swift_release();
  v426[0] = 8;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v330 = *(_QWORD *)&v363[0];
  v329 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(8u, v339);
  swift_release();
  v426[0] = 9;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v327 = *(_QWORD *)&v363[0];
  v68 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(9u, v339);
  swift_release();
  v426[0] = 10;
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v70 = v69;
  sub_1ABDE986C();
  sub_1ABF2FF68();
  v328 = v70;
  sub_1ABF320C8();
  v326 = *(_QWORD *)&v363[0];
  if (!*(_QWORD *)&v363[0])
    sub_1ABF026BC(0xAu, v339);
  swift_release();
  LOBYTE(v363[0]) = 11;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v325 = v426[0];
  if (v426[0] == 2)
    sub_1ABF026BC(0xBu, v339);
  swift_release();
  LOBYTE(v363[0]) = 12;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v324 = v426[0];
  if (v426[0] == 2)
    sub_1ABF026BC(0xCu, v339);
  swift_release();
  v426[0] = 13;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v323 = *(double *)v363;
  v322 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0xDu, v339);
  swift_release();
  LOBYTE(v363[0]) = 14;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v321 = v426[0];
  if (v426[0] == 2)
    sub_1ABF026BC(0xEu, v339);
  swift_release();
  LOBYTE(v363[0]) = 15;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v320 = v426[0];
  if (v426[0] == 2)
    sub_1ABF026BC(0xFu, v339);
  swift_release();
  v426[0] = 16;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v319 = *(_QWORD *)&v363[0];
  v318 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x10u, v339);
  swift_release();
  v426[0] = 17;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v317 = *(_QWORD *)&v363[0];
  v316 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x11u, v339);
  swift_release();
  v426[0] = 18;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v315 = *(double *)v363;
  v314 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x12u, v339);
  swift_release();
  v426[0] = 19;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v313 = *(double *)v363;
  v312 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x13u, v339);
  swift_release();
  v426[0] = 20;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v311 = *(double *)v363;
  v310 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x14u, v339);
  swift_release();
  v426[0] = 21;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v309 = *(double *)v363;
  v308 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x15u, v339);
  swift_release();
  v426[0] = 22;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v307 = *(double *)v363;
  v306 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x16u, v339);
  swift_release();
  v426[0] = 23;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v305 = v363[0];
  if (!*((_QWORD *)&v363[0] + 1))
    sub_1ABF026BC(0x17u, v339);
  swift_release();
  v426[0] = 24;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v304 = *(double *)v363;
  v303 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x18u, v339);
  swift_release();
  v426[0] = 25;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v302 = *(double *)v363;
  v301 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x19u, v339);
  swift_release();
  v426[0] = 26;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v300 = *(double *)v363;
  v299 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x1Au, v339);
  swift_release();
  v426[0] = 27;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v298 = *(double *)v363;
  v297 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x1Bu, v339);
  swift_release();
  v426[0] = 28;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v296 = *(double *)v363;
  v295 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x1Cu, v339);
  swift_release();
  v426[0] = 29;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v294 = *(double *)v363;
  v293 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x1Du, v339);
  swift_release();
  v426[0] = 30;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v292 = *(double *)v363;
  v291 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x1Eu, v339);
  swift_release();
  v426[0] = 31;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v290 = *(double *)v363;
  v289 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x1Fu, v339);
  swift_release();
  LOBYTE(v363[0]) = 32;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v288 = v426[0];
  if (v426[0] == 2)
    sub_1ABF026BC(0x20u, v339);
  swift_release();
  LOBYTE(v363[0]) = 33;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v287 = v426[0];
  if (v426[0] == 2)
    sub_1ABF026BC(0x21u, v339);
  swift_release();
  LOBYTE(v363[0]) = 34;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v286 = v426[0];
  if (v426[0] == 2)
    sub_1ABF026BC(0x22u, v339);
  swift_release();
  v426[0] = 35;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v285 = *(_QWORD *)&v363[0];
  v284 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x23u, v339);
  swift_release();
  v426[0] = 36;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v282 = *(_QWORD *)&v363[0];
  v281 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x24u, v339);
  swift_release();
  v426[0] = 37;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v275 = *(_QWORD *)&v363[0];
  v274 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x25u, v339);
  swift_release();
  v426[0] = 38;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v268 = *(_QWORD *)&v363[0];
  v267 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x26u, v339);
  swift_release();
  v426[0] = 39;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v266 = *(_QWORD *)&v363[0];
  v265 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x27u, v339);
  swift_release();
  v426[0] = 40;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v238 = *(_QWORD *)&v363[0];
  v237 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x28u, v339);
  swift_release();
  v426[0] = 41;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v207 = *(_QWORD *)&v363[0];
  v206 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x29u, v339);
  swift_release();
  v426[0] = 42;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v205 = *(_QWORD *)&v363[0];
  v204 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x2Au, v339);
  swift_release();
  v426[0] = 43;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v203 = *(_QWORD *)&v363[0];
  v202 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x2Bu, v339);
  swift_release();
  v426[0] = 44;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v201 = *(_QWORD *)&v363[0];
  v200 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x2Cu, v339);
  swift_release();
  v426[0] = 45;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v199 = *(_QWORD *)&v363[0];
  v198 = BYTE8(v363[0]);
  if ((BYTE8(v363[0]) & 1) != 0)
    sub_1ABF026BC(0x2Du, v339);
  swift_release();
  LOBYTE(v363[0]) = 46;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v197 = v426[0];
  if (v426[0] == 2)
    sub_1ABF026BC(0x2Eu, v339);
  swift_release();
  v510 = 47;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v283 = 0;
  v196 = v508[99];
  v195 = v509;
  if ((v509 & 1) != 0)
    sub_1ABF026BC(0x2Fu, v339);
  swift_release();
  sub_1ABD843F0((uint64_t)v517, (uint64_t)v508, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)v508) == 1)
  {
    v278 = *(void (**)(char *, char *, uint64_t))(v358 + 16);
    v278(v340, v361, v359);
  }
  else
  {
    v236 = v508[2];
    v71 = v508[3];
    v72 = *(void (**)(char *, char *, uint64_t))(v358 + 16);
    sub_1ABF2FF5C();
    v278 = v72;
    v72(v340, v361, v359);
    v280 = v71;
    if (v71)
      goto LABEL_133;
  }
  v426[0] = 83;
  sub_1ABF2FF68();
  v73 = v283;
  sub_1ABF320C8();
  v283 = v73;
  if (v73)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    v74 = *(void (**)(char *, uint64_t))(v358 + 8);
    v75 = v359;
    v74(v340, v359);
    (*(void (**)(char *, uint64_t))(v356 + 8))(v360, v357);
    v74(v361, v75);
LABEL_48:
    swift_release_n();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v518);
  }
  v280 = *((_QWORD *)&v363[0] + 1);
  v236 = *(_QWORD *)&v363[0];
  if (!*((_QWORD *)&v363[0] + 1))
    sub_1ABF026BC(0x53u, v339);
  swift_release();
LABEL_133:
  v358 = *(_QWORD *)(v358 + 8);
  ((void (*)(char *, uint64_t))v358)(v340, v359);
  LOBYTE(v363[0]) = 84;
  sub_1ABF2FF68();
  v76 = v283;
  sub_1ABF320C8();
  if (v76)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_152:
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
LABEL_385:
    (*(void (**)(char *, uint64_t))(v356 + 8))(v360, v357);
    ((void (*)(char *, uint64_t))v358)(v361, v359);
    goto LABEL_48;
  }
  v194 = v426[0];
  if (v426[0] == 2)
    sub_1ABF026BC(0x54u, v339);
  swift_release();
  v507 = 85;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v283 = 0;
  v193 = v506;
  if (v506 == 2)
    sub_1ABF026BC(0x55u, v339);
  swift_release();
  sub_1ABD843F0((uint64_t)v517, (uint64_t)v505, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)v505) == 1)
  {
    v278(v341, v361, v359);
  }
  else
  {
    v235 = v505[4];
    v77 = (char *)v505[5];
    sub_1ABF2FF5C();
    v278(v341, v361, v359);
    v340 = v77;
    if (v77)
      goto LABEL_147;
  }
  v426[0] = 86;
  sub_1ABF2FF68();
  v78 = v283;
  sub_1ABF320C8();
  v283 = v78;
  if (v78)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    v79 = v359;
    v80 = (void (*)(char *, uint64_t))v358;
    ((void (*)(char *, uint64_t))v358)(v341, v359);
LABEL_401:
    (*(void (**)(char *, uint64_t))(v356 + 8))(v360, v357);
    v80(v361, v79);
    goto LABEL_48;
  }
  v340 = (char *)*((_QWORD *)&v363[0] + 1);
  v235 = *(_QWORD *)&v363[0];
  if (!*((_QWORD *)&v363[0] + 1))
    sub_1ABF026BC(0x56u, v339);
  swift_release();
LABEL_147:
  ((void (*)(char *, uint64_t))v358)(v341, v359);
  v426[0] = 87;
  sub_1ABF2FF68();
  v81 = v283;
  sub_1ABF320C8();
  if (v81)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_152;
  }
  v341 = (char *)*((_QWORD *)&v363[0] + 1);
  v192 = *(_QWORD *)&v363[0];
  if (!*((_QWORD *)&v363[0] + 1))
    sub_1ABF026BC(0x57u, v339);
  swift_release();
  v504 = 88;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v191 = v502;
  v190 = v503;
  if ((v503 & 1) != 0)
    sub_1ABF026BC(0x58u, v339);
  swift_release();
  sub_1ABD843F0((uint64_t)v517, (uint64_t)v497, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)v497) == 1)
  {
    v278(v342, v361, v359);
  }
  else
  {
    v82 = v499;
    v83 = v501;
    v276 = v498;
    v279 = v500;
    sub_1ABE714D4(v498, v499);
    v278(v342, v361, v359);
    v277 = v82;
    if (v82)
    {
      ((void (*)(char *, uint64_t))v358)(v342, v359);
      v493 = v276;
      v494 = v277;
      v495 = v279;
      v496 = v83;
      goto LABEL_160;
    }
  }
  v84 = v339;
  sub_1ABF2FF68();
  sub_1ABEF3450(0x59u, v84, &v493);
  ((void (*)(char *, uint64_t))v358)(v342, v359);
  v276 = v493;
  v277 = v494;
  v279 = v495;
  v83 = v496;
LABEL_160:
  v489 = v276;
  v490 = v277;
  v491 = v279;
  v492 = v83;
  v85 = v339;
  sub_1ABF2FF68();
  sub_1ABEF3534(0x5Au, v85, &v480);
  v262 = v480;
  v471 = v480;
  v263 = v481;
  v472 = v481;
  v264 = v482;
  v473 = v482;
  v269 = v483;
  v474 = v483;
  v270 = v484;
  v475 = v484;
  v271 = v485;
  v476 = v485;
  v272 = v486;
  v477 = v486;
  v273 = v487;
  v478 = v487;
  v261 = v488;
  v479 = v488;
  v86 = v339;
  sub_1ABF2FF68();
  sub_1ABEF3654(0x5Bu, v86, &v469);
  v467 = v469;
  v468 = v470;
  v426[0] = 53;
  sub_1ABD04578(0, &qword_1ED34FC58, (uint64_t)&type metadata for ExternalAnalyticsConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF032B8();
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v283 = 0;
  v342 = *(char **)&v363[0];
  if (!*(_QWORD *)&v363[0])
    sub_1ABF026BC(0x35u, v339);
  swift_release();
  v466 = 54;
  sub_1ABD04578(0, &qword_1ED34FBF8, (uint64_t)&type metadata for EndpointConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF03374();
  sub_1ABF2FF68();
  v87 = v283;
  sub_1ABF320C8();
  v283 = v87;
  if (v87)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    sub_1ABF0325C(v262, v263);
    v88 = v276;
    v89 = v277;
LABEL_408:
    sub_1ABF02F1C(v88, v89);
    (*(void (**)(char *, uint64_t))(v356 + 8))(v360, v357);
    ((void (*)(char *, uint64_t))v358)(v361, v359);
    goto LABEL_48;
  }
  v279 = v465;
  if (!v465)
    sub_1ABF026BC(0x36u, v339);
  swift_release();
  sub_1ABD843F0((uint64_t)v517, (uint64_t)v463, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)v463) == 1)
  {
    sub_1ABE7C13C(v363);
    v90 = v363;
  }
  else
  {
    sub_1ABF035D0(v464, sub_1ABE71504);
    v90 = v464;
  }
  sub_1ABD843F0((uint64_t)v90, (uint64_t)v462, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  v278(v343, v361, v359);
  sub_1ABD843F0((uint64_t)v462, (uint64_t)v460, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  if (sub_1ABEF6380((uint64_t)v460) == 1)
  {
    v91 = v339;
    sub_1ABF2FF68();
    v92 = v91;
    v93 = v283;
    sub_1ABEF3740(0x37u, v92, (uint64_t)v461);
    v283 = v93;
    if (v93)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ABF028FC((uint64_t)v517);
      v94 = v359;
      v95 = (void (*)(char *, uint64_t))v358;
      ((void (*)(char *, uint64_t))v358)(v343, v359);
LABEL_339:
      sub_1ABF0325C(v471, v472);
      sub_1ABF02F1C(v489, v490);
      (*(void (**)(char *, uint64_t))(v356 + 8))(v360, v357);
      v95(v361, v94);
      goto LABEL_48;
    }
    ((void (*)(char *, uint64_t))v358)(v343, v359);
  }
  else
  {
    ((void (*)(char *, uint64_t))v358)(v343, v359);
    sub_1ABD843F0((uint64_t)v462, (uint64_t)v461, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  }
  sub_1ABD843F0((uint64_t)v461, (uint64_t)v449, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  sub_1ABD843F0((uint64_t)v449, (uint64_t)v448, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  sub_1ABD843F0((uint64_t)v517, (uint64_t)v450, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)v450) == 1)
  {
    v278(v344, v361, v359);
  }
  else
  {
    v96 = v451;
    v97 = v459;
    v271 = v452;
    v272 = v453;
    v273 = v454;
    v276 = v455;
    v277 = v456;
    v343 = v457;
    v270 = v458;
    sub_1ABE71724(v451);
    v278(v344, v361, v359);
    v269 = v96;
    if (v96 != 1)
    {
      ((void (*)(char *, uint64_t))v358)(v344, v359);
      v439 = v269;
      v440 = v271;
      v441 = v272;
      v442 = v273;
      v443 = v276;
      v444 = v277;
      v445 = v343;
      v446 = v270;
      v447 = v97;
      goto LABEL_181;
    }
  }
  v98 = v339;
  sub_1ABF2FF68();
  v99 = v98;
  v100 = v283;
  sub_1ABEF3874(0x38u, v99, (uint64_t)&v439);
  v283 = v100;
  if (v100)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    v94 = v359;
    v95 = (void (*)(char *, uint64_t))v358;
    ((void (*)(char *, uint64_t))v358)(v344, v359);
LABEL_338:
    sub_1ABD843F0((uint64_t)v448, (uint64_t)v363, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
    sub_1ABF035D0(v363, sub_1ABF02F4C);
    goto LABEL_339;
  }
  ((void (*)(char *, uint64_t))v358)(v344, v359);
  v269 = v439;
  v271 = v440;
  v272 = v441;
  v273 = v442;
  v276 = v443;
  v277 = v444;
  v343 = v445;
  v270 = v446;
  v97 = v447;
LABEL_181:
  v430 = v269;
  v431 = v271;
  v432 = v272;
  v433 = v273;
  v434 = v276;
  v435 = v277;
  v436 = v343;
  v437 = v270;
  v438 = v97;
  v101 = v339;
  sub_1ABF2FF68();
  v102 = v101;
  v103 = v283;
  sub_1ABEF399C(0x39u, v102, (uint64_t)v429);
  v283 = v103;
  if (v103)
    goto LABEL_183;
  sub_1ABD843F0((uint64_t)v429, (uint64_t)v428, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1ABD843F0((uint64_t)v428, (uint64_t)&v427, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  v104 = v339;
  sub_1ABF2FF68();
  v105 = v104;
  v106 = v283;
  sub_1ABEF3AD0(0x5Cu, v105, (uint64_t)v426);
  v283 = v106;
  if (v106)
  {
LABEL_183:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    sub_1ABF0316C(v269);
    sub_1ABD843F0((uint64_t)v448, (uint64_t)v363, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
    sub_1ABF035D0(v363, sub_1ABF02F4C);
    sub_1ABF0325C(v471, v472);
    sub_1ABF02F1C(v489, v490);
    (*(void (**)(char *, uint64_t))(v356 + 8))(v360, v357);
    ((void (*)(char *, uint64_t))v358)(v361, v359);
    goto LABEL_48;
  }
  sub_1ABD843F0((uint64_t)v426, (uint64_t)v425, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  sub_1ABD843F0((uint64_t)v425, (uint64_t)&v424, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  LOBYTE(v417) = 93;
  sub_1ABF2FF68();
  v107 = v283;
  sub_1ABF320C8();
  if (v107)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    v108 = v269;
LABEL_384:
    sub_1ABF0316C(v108);
    sub_1ABD843F0((uint64_t)v448, (uint64_t)v363, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
    sub_1ABF035D0(v363, sub_1ABF02F4C);
    sub_1ABF0325C(v471, v472);
    sub_1ABF02F1C(v489, v490);
    goto LABEL_385;
  }
  v189 = v410;
  if (v410 == 2)
    sub_1ABF026BC(0x5Du, v339);
  swift_release();
  LOBYTE(v410) = 48;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v188 = v417;
  v187 = v418;
  if ((v418 & 1) != 0)
    sub_1ABF026BC(0x30u, v339);
  swift_release();
  LOBYTE(v410) = 49;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v186 = v417;
  v185 = v418;
  if ((v418 & 1) != 0)
    sub_1ABF026BC(0x31u, v339);
  swift_release();
  LOBYTE(v410) = 50;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v184 = v417;
  v183 = v418;
  if ((v418 & 1) != 0)
    sub_1ABF026BC(0x32u, v339);
  swift_release();
  LOBYTE(v410) = 51;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v182 = v417;
  v181 = v418;
  if ((v418 & 1) != 0)
    sub_1ABF026BC(0x33u, v339);
  swift_release();
  v423 = 52;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v283 = 0;
  v180 = v421;
  v179 = v422;
  if ((v422 & 1) != 0)
    sub_1ABF026BC(0x34u, v339);
  swift_release();
  sub_1ABD843F0((uint64_t)v517, (uint64_t)&v417, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)&v417) == 1)
  {
    v278(v345, v361, v359);
  }
  else
  {
    v234 = v419;
    v109 = v420;
    sub_1ABF2FF5C();
    v278(v345, v361, v359);
    v344 = v109;
    if (v109)
      goto LABEL_207;
  }
  LOBYTE(v406) = 58;
  sub_1ABF2FF68();
  v110 = v283;
  sub_1ABF320C8();
  v283 = v110;
  if (v110)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    v111 = v345;
LABEL_256:
    v79 = v359;
    v80 = (void (*)(char *, uint64_t))v358;
    ((void (*)(char *, uint64_t))v358)(v111, v359);
LABEL_400:
    sub_1ABF0316C(v430);
    sub_1ABD843F0((uint64_t)v448, (uint64_t)v363, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
    sub_1ABF035D0(v363, sub_1ABF02F4C);
    sub_1ABF0325C(v471, v472);
    sub_1ABF02F1C(v489, v490);
    goto LABEL_401;
  }
  v234 = v410;
  v344 = v411;
  if (!v411)
    sub_1ABF026BC(0x3Au, v339);
  swift_release();
LABEL_207:
  ((void (*)(char *, uint64_t))v358)(v345, v359);
  LOBYTE(v410) = 94;
  sub_1ABF2FF68();
  v112 = v283;
  sub_1ABF320C8();
  if (v112)
  {
    swift_release();

    v233 = 0;
LABEL_211:
    LODWORD(v261) = 1;
    goto LABEL_213;
  }
  v233 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x5Eu, v339);
    swift_release();
    goto LABEL_211;
  }
  swift_release();
  LODWORD(v261) = 0;
LABEL_213:
  LOBYTE(v410) = 95;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v232 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x5Fu, v339);
    swift_release();
    v260 = 1;
  }
  else
  {
    swift_release();
    v260 = 0;
  }
  LOBYTE(v410) = 96;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v231 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x60u, v339);
    swift_release();
    v259 = 1;
  }
  else
  {
    swift_release();
    v259 = 0;
  }
  LOBYTE(v410) = 97;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v230 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x61u, v339);
    swift_release();
    v258 = 1;
  }
  else
  {
    swift_release();
    v258 = 0;
  }
  LOBYTE(v410) = 98;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v229 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x62u, v339);
    swift_release();
    v257 = 1;
  }
  else
  {
    swift_release();
    v257 = 0;
  }
  LOBYTE(v410) = 99;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v228 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x63u, v339);
    swift_release();
    v256 = 1;
  }
  else
  {
    swift_release();
    v256 = 0;
  }
  LOBYTE(v410) = 71;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v227 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x47u, v339);
    swift_release();
    v255 = 1;
  }
  else
  {
    swift_release();
    v255 = 0;
  }
  LOBYTE(v410) = 72;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v226 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x48u, v339);
    swift_release();
    v254 = 1;
  }
  else
  {
    swift_release();
    v254 = 0;
  }
  LOBYTE(v410) = 73;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v225 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x49u, v339);
    swift_release();
    v253 = 1;
  }
  else
  {
    swift_release();
    v253 = 0;
  }
  LOBYTE(v410) = 74;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v224 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x4Au, v339);
    swift_release();
    v252 = 1;
  }
  else
  {
    swift_release();
    v252 = 0;
  }
  v416 = 75;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v283 = 0;
  v223 = v414;
  if ((v415 & 1) != 0)
  {
    sub_1ABF026BC(0x4Bu, v339);
    swift_release();
    v251 = 1;
  }
  else
  {
    swift_release();
    v251 = 0;
  }
  sub_1ABD843F0((uint64_t)v517, (uint64_t)&v410, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)&v410) == 1)
  {
    v278(v346, v361, v359);
  }
  else
  {
    v222 = v412;
    v113 = v413;
    sub_1ABF2FF5C();
    v278(v346, v361, v359);
    v345 = v113;
    if (v113)
      goto LABEL_251;
  }
  LOBYTE(v388) = 76;
  sub_1ABF2FF68();
  v114 = v283;
  sub_1ABF320C8();
  v283 = v114;
  if (v114)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    v111 = v346;
    goto LABEL_256;
  }
  v222 = v406;
  v345 = v407;
  if (!v407)
    sub_1ABF026BC(0x4Cu, v339);
  swift_release();
LABEL_251:
  ((void (*)(char *, uint64_t))v358)(v346, v359);
  sub_1ABD843F0((uint64_t)v517, (uint64_t)&v406, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)&v406) == 1)
  {
    v278(v347, v361, v359);
  }
  else
  {
    v221 = v408;
    v115 = v409;
    sub_1ABF2FF5C();
    v278(v347, v361, v359);
    v346 = v115;
    if (v115)
      goto LABEL_260;
  }
  v380[0] = 77;
  sub_1ABF2FF68();
  v116 = v283;
  sub_1ABF320C8();
  v283 = v116;
  if (v116)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    v111 = v347;
    goto LABEL_256;
  }
  v221 = v388;
  v346 = v389;
  if (!v389)
    sub_1ABF026BC(0x4Du, v339);
  swift_release();
LABEL_260:
  ((void (*)(char *, uint64_t))v358)(v347, v359);
  v380[0] = 78;
  sub_1ABF2FF68();
  v117 = v283;
  sub_1ABF320C8();
  if (v117)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
LABEL_383:
    v108 = v430;
    goto LABEL_384;
  }
  v178 = v388;
  v177 = v389;
  if ((v389 & 1) != 0)
    sub_1ABF026BC(0x4Eu, v339);
  swift_release();
  LOBYTE(v363[0]) = 59;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  LODWORD(v264) = v388;
  if (v388 == 2)
  {
    sub_1ABF026BC(0x3Bu, v339);
    swift_release();
    LODWORD(v264) = 2;
  }
  else
  {
    swift_release();
  }
  v380[0] = 100;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v176 = v388;
  v175 = v389;
  if ((v389 & 1) != 0)
    sub_1ABF026BC(0x64u, v339);
  swift_release();
  LOBYTE(v388) = 101;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v220 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x65u, v339);
    swift_release();
    v250 = 1;
  }
  else
  {
    swift_release();
    v250 = 0;
  }
  v380[0] = 102;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v174 = v388;
  v173 = v389;
  if ((v389 & 1) != 0)
    sub_1ABF026BC(0x66u, v339);
  swift_release();
  LOBYTE(v388) = 60;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v219 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x3Cu, v339);
    swift_release();
    v249 = 1;
  }
  else
  {
    swift_release();
    v249 = 0;
  }
  LOBYTE(v388) = 61;
  sub_1ABD04578(0, &qword_1ED34FB90, (uint64_t)&type metadata for StocksKitClientConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF03430();
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v347 = *(char **)&v363[0];
  if (*(_QWORD *)&v363[0])
  {
    swift_release();
  }
  else
  {
    sub_1ABF026BC(0x3Du, v339);
    swift_release();
    v347 = 0;
  }
  LOBYTE(v363[0]) = 103;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  LODWORD(v263) = v388;
  if (v388 == 2)
  {
    sub_1ABF026BC(0x67u, v339);
    swift_release();
    LODWORD(v263) = 2;
  }
  else
  {
    swift_release();
  }
  LOBYTE(v363[0]) = 104;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  LODWORD(v262) = v388;
  if (v388 == 2)
  {
    sub_1ABF026BC(0x68u, v339);
    swift_release();
    LODWORD(v262) = 2;
  }
  else
  {
    swift_release();
  }
  LOBYTE(v388) = 105;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v218 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x69u, v339);
    swift_release();
    v248 = 1;
  }
  else
  {
    swift_release();
    v248 = 0;
  }
  LOBYTE(v388) = 62;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v217 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x3Eu, v339);
    swift_release();
    v247 = 1;
  }
  else
  {
    swift_release();
    v247 = 0;
  }
  LOBYTE(v388) = 63;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v216 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x3Fu, v339);
    swift_release();
    v246 = 1;
  }
  else
  {
    swift_release();
    v246 = 0;
  }
  LOBYTE(v388) = 64;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v215 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x40u, v339);
    swift_release();
    v245 = 1;
  }
  else
  {
    swift_release();
    v245 = 0;
  }
  v380[0] = 65;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v343 = (char *)v388;
  if (!v388)
    sub_1ABF026BC(0x41u, v339);
  swift_release();
  v380[0] = 66;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v277 = v388;
  if (!v388)
    sub_1ABF026BC(0x42u, v339);
  swift_release();
  v380[0] = 67;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v276 = v388;
  if (!v388)
    sub_1ABF026BC(0x43u, v339);
  swift_release();
  v380[0] = 106;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v172 = v388;
  v171 = v389;
  if ((v389 & 1) != 0)
    sub_1ABF026BC(0x6Au, v339);
  swift_release();
  v380[0] = 107;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v170 = v388;
  v169 = v389;
  if ((v389 & 1) != 0)
    sub_1ABF026BC(0x6Bu, v339);
  v118 = v339;
  swift_release();
  sub_1ABF2FF68();
  sub_1ABEF3C04(0x6Cu, v118, &v402);
  v270 = v402;
  v398 = v402;
  v273 = v403;
  v399 = v403;
  v283 = v404;
  v400 = v404;
  v401 = v405;
  v380[0] = 68;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v272 = v388;
  if (!v388)
    sub_1ABF026BC(0x44u, v339);
  swift_release();
  v380[0] = 69;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v271 = v388;
  if (!v388)
    sub_1ABF026BC(0x45u, v339);
  swift_release();
  v380[0] = 70;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v270 = v388;
  if (!v388)
    sub_1ABF026BC(0x46u, v339);
  swift_release();
  LOBYTE(v388) = 79;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v214 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x4Fu, v339);
    swift_release();
    v244 = 1;
  }
  else
  {
    swift_release();
    v244 = 0;
  }
  LOBYTE(v388) = 80;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v273 = *(_QWORD *)&v363[0];
  if (*(_QWORD *)&v363[0])
  {
    swift_release();
  }
  else
  {
    sub_1ABF026BC(0x50u, v339);
    swift_release();
    v273 = 0;
  }
  LOBYTE(v388) = 81;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v213 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x51u, v339);
    swift_release();
    v243 = 1;
  }
  else
  {
    swift_release();
    v243 = 0;
  }
  LOBYTE(v388) = 82;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v212 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x52u, v339);
    swift_release();
    v242 = 1;
  }
  else
  {
    swift_release();
    v242 = 0;
  }
  LOBYTE(v388) = 127;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v211 = *(_QWORD *)&v363[0];
  if ((BYTE8(v363[0]) & 1) != 0)
  {
    sub_1ABF026BC(0x7Fu, v339);
    swift_release();
    v241 = 1;
  }
  else
  {
    swift_release();
    v241 = 0;
  }
  v397 = 109;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v283 = 0;
  v210 = v395;
  if ((v396 & 1) != 0)
  {
    sub_1ABF026BC(0x6Du, v339);
    swift_release();
    v240 = 1;
  }
  else
  {
    swift_release();
    v240 = 0;
  }
  sub_1ABD843F0((uint64_t)v517, (uint64_t)&v388, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)&v388) == 1)
  {
    v278(v348, v361, v359);
  }
  else
  {
    v119 = v390;
    v269 = v391;
    v120 = v392;
    v121 = v393;
    LODWORD(v239) = v394;
    v278(v348, v361, v359);
    if ((v239 & 1) == 0)
    {
      ((void (*)(char *, uint64_t))v358)(v348, v359);
      v125 = 0;
      v383 = v119;
      v384 = v269;
      v385 = v120;
      v386 = v121;
      v387 = 0;
      goto LABEL_342;
    }
  }
  v122 = v339;
  sub_1ABF2FF68();
  v123 = v122;
  v124 = v283;
  sub_1ABEF3CEC(0x6Eu, v123, (uint64_t)&v383);
  v283 = v124;
  if (v124)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    v94 = v359;
    v95 = (void (*)(char *, uint64_t))v358;
    ((void (*)(char *, uint64_t))v358)(v348, v359);
    sub_1ABD1A50C(v398, v399);
    sub_1ABF0316C(v430);
    goto LABEL_338;
  }
  ((void (*)(char *, uint64_t))v358)(v348, v359);
  v119 = v383;
  v269 = v384;
  v120 = v385;
  v121 = v386;
  v125 = v387;
LABEL_342:
  v375 = v119;
  v376 = v269;
  v377 = v120;
  v378 = v121;
  v379 = v125;
  sub_1ABD843F0((uint64_t)v517, (uint64_t)v380, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)v380) == 1)
  {
    v278(v349, v361, v359);
  }
  else
  {
    v209 = v381;
    v126 = v382;
    sub_1ABF2FF5C();
    v278(v349, v361, v359);
    v348 = v126;
    if (v126)
      goto LABEL_350;
  }
  LOBYTE(v366) = 111;
  sub_1ABF2FF68();
  v127 = v283;
  sub_1ABF320C8();
  v283 = v127;
  if (v127)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    v128 = v349;
LABEL_399:
    v79 = v359;
    v80 = (void (*)(char *, uint64_t))v358;
    ((void (*)(char *, uint64_t))v358)(v128, v359);
    sub_1ABD1A50C(v398, v399);
    goto LABEL_400;
  }
  v209 = v371;
  v348 = v372;
  if (!v372)
    sub_1ABF026BC(0x6Fu, v339);
  swift_release();
LABEL_350:
  ((void (*)(char *, uint64_t))v358)(v349, v359);
  sub_1ABD843F0((uint64_t)v517, (uint64_t)&v371, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)&v371) == 1)
  {
    v278(v350, v361, v359);
  }
  else
  {
    v208 = v373;
    v129 = v374;
    sub_1ABF2FF5C();
    v278(v350, v361, v359);
    v349 = v129;
    if (v129)
      goto LABEL_358;
  }
  LOBYTE(v362) = 112;
  sub_1ABF2FF68();
  v130 = v283;
  sub_1ABF320C8();
  v283 = v130;
  if (v130)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    v128 = v350;
    goto LABEL_399;
  }
  v208 = v366;
  v349 = v367;
  if (!v367)
    sub_1ABF026BC(0x70u, v339);
  swift_release();
LABEL_358:
  ((void (*)(char *, uint64_t))v358)(v350, v359);
  LOBYTE(v362) = 113;
  sub_1ABF2FF68();
  v131 = v283;
  sub_1ABF320C8();
  if (v131)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
    sub_1ABD1A50C(v398, v399);
    goto LABEL_383;
  }
  v168 = v366;
  v167 = v367;
  if ((v367 & 1) != 0)
    sub_1ABF026BC(0x71u, v339);
  swift_release();
  LOBYTE(v362) = 114;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v166 = v366;
  v165 = v367;
  if ((v367 & 1) != 0)
    sub_1ABF026BC(0x72u, v339);
  swift_release();
  LOBYTE(v362) = 115;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v164 = v366;
  v163 = v367;
  if ((v367 & 1) != 0)
    sub_1ABF026BC(0x73u, v339);
  swift_release();
  LOBYTE(v362) = 116;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v162 = v366;
  v161 = v367;
  if ((v367 & 1) != 0)
    sub_1ABF026BC(0x74u, v339);
  swift_release();
  LOBYTE(v366) = 117;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v160 = v362;
  if (v362 == 2)
    sub_1ABF026BC(0x75u, v339);
  swift_release();
  LOBYTE(v362) = 118;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v159 = v366;
  v158 = v367;
  if ((v367 & 1) != 0)
    sub_1ABF026BC(0x76u, v339);
  swift_release();
  LOBYTE(v362) = 120;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v157 = v366;
  v156 = v367;
  if ((v367 & 1) != 0)
    sub_1ABF026BC(0x78u, v339);
  swift_release();
  LOBYTE(v362) = 121;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v155 = v366;
  v154 = v367;
  if ((v367 & 1) != 0)
    sub_1ABF026BC(0x79u, v339);
  swift_release();
  LOBYTE(v362) = 122;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v132 = v366;
  if (v366)
  {
    swift_release();
    v350 = (char *)sub_1ABEF3230(v132);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ABF026BC(0x7Au, v339);
    swift_release();
    v350 = 0;
  }
  LOBYTE(v362) = 123;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v153 = v366;
  v152[3] = v367;
  if ((v367 & 1) != 0)
    sub_1ABF026BC(0x7Bu, v339);
  swift_release();
  LOBYTE(v362) = 119;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v269 = v366;
  if (!v366)
    sub_1ABF026BC(0x77u, v339);
  swift_release();
  LOBYTE(v366) = 124;
  sub_1ABF2FF68();
  sub_1ABF320C8();
  v283 = 0;
  v152[2] = v362;
  if (v362 == 2)
    sub_1ABF026BC(0x7Cu, v339);
  swift_release();
  v370 = 125;
  sub_1ABF034EC();
  sub_1ABF03550();
  sub_1ABF2FF68();
  v133 = v283;
  sub_1ABF320C8();
  v283 = v133;
  if (v133)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF028FC((uint64_t)v517);
LABEL_407:
    sub_1ABD1A50C(v398, v399);
    sub_1ABF0316C(v430);
    sub_1ABD843F0((uint64_t)v448, (uint64_t)v363, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
    sub_1ABF035D0(v363, sub_1ABF02F4C);
    sub_1ABF0325C(v471, v472);
    v88 = v489;
    v89 = v490;
    goto LABEL_408;
  }
  v239 = v369;
  if (!v369)
    sub_1ABF026BC(0x7Du, v339);
  swift_release();
  sub_1ABD843F0((uint64_t)v517, (uint64_t)&v366, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  if (sub_1ABD75518((uint64_t)&v366) == 1)
  {
    v278(v351, v361, v359);
  }
  else
  {
    v134 = v368;
    sub_1ABF2FF5C();
    sub_1ABF028FC((uint64_t)v517);
    v278(v351, v361, v359);
    if (v134)
      goto LABEL_405;
  }
  LOBYTE(v364) = 126;
  sub_1ABF2FF68();
  v135 = v283;
  sub_1ABF320C8();
  v283 = v135;
  if (v135)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v128 = v351;
    goto LABEL_399;
  }
  if (!v362)
    sub_1ABF026BC(0x7Eu, v339);
  swift_release();
LABEL_405:
  ((void (*)(char *, uint64_t))v358)(v351, v359);
  v365 = 0x80;
  sub_1ABF2FF68();
  v136 = v283;
  sub_1ABF320C8();
  v283 = v136;
  if (v136)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_407;
  }
  if (!v364)
    sub_1ABF026BC(0x80u, v339);
  v137 = v339;
  swift_release();
  sub_1ABEF3EC4(v338, v355, v66, v354, v353, v337, v336, v335, v138, v139, v140, v141, v142, v143, v144, v145, v67, v334, v333,
    v332,
    v331,
    v330,
    v329,
    v327,
    v68,
    v326,
    v325,
    v324,
    v323,
    v322,
    v321,
    v320,
    v319,
    v318,
    v317,
    v316,
    v315,
    v314,
    v313,
    v312,
    v311,
    v310,
    v309,
    v308,
    v307,
    v306,
    v305,
    *((unint64_t *)&v305 + 1),
    v304,
    v303,
    v302,
    v301,
    v300,
    v299,
    v298,
    v297,
    v296,
    v295,
    v294,
    v293,
    v292,
    v291,
    v290);
  swift_beginAccess();
  v146 = *(_QWORD *)(v137 + 16);
  if (sub_1ABD81F24(v146))
  {
    sub_1ABD63DB8(0);
  }
  else
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v148 = swift_allocObject();
    v149 = sub_1ABD8240C(v148, 1);
    v151 = v150;
    v150[3] = v328;
    v150[4] = sub_1ABD82448();
    *v151 = v146;
    nullsub_2(v149);
    sub_1ABF2FF5C();
  }
  v147 = (void *)sub_1ABD63448();
  sub_1ABD63470();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v356 + 8))(v360, v357);
  ((void (*)(char *, uint64_t))v358)(v361, v359);
  swift_release_n();
  memcpy(v352, v363, 0xC30uLL);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v518);
}

uint64_t sub_1ABEFD9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  void *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  _QWORD *v40;
  uint64_t v41;
  _QWORD v46[99];
  _QWORD __dst[100];

  v5 = a2;
  v7 = a5;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v29 = *(_QWORD *)(a2 + 16);
    if (v29)
      goto LABEL_17;
    goto LABEL_24;
  }
  sub_1ABF2FF5C();
  memcpy(__dst, (const void *)(a1 + 32), 0x318uLL);
  v41 = v8;
  v9 = v8 - 1;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  for (i = 824; ; i += 792)
  {
    v12 = sub_1ABF31804();
    v14 = v13;
    sub_1ABE711D4((uint64_t)__dst);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = sub_1ABD00F9C(v12, v14);
    v18 = v10[2];
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      result = sub_1ABF3229C();
      __break(1u);
      return result;
    }
    v21 = v16;
    if (v10[3] >= v20)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v16 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        sub_1ABE70994();
        if ((v21 & 1) != 0)
          goto LABEL_10;
      }
    }
    else
    {
      sub_1ABE6DA7C(v20, isUniquelyReferenced_nonNull_native);
      v22 = sub_1ABD00F9C(v12, v14);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_38;
      v17 = v22;
      if ((v21 & 1) != 0)
      {
LABEL_10:
        v24 = (void *)(v10[7] + 792 * v17);
        memcpy(v46, v24, sizeof(v46));
        sub_1ABF0ABE8((uint64_t)v46);
        memcpy(v24, __dst, 0x318uLL);
        goto LABEL_14;
      }
    }
    v10[(v17 >> 6) + 8] |= 1 << v17;
    v25 = (uint64_t *)(v10[6] + 16 * v17);
    *v25 = v12;
    v25[1] = v14;
    memcpy((void *)(v10[7] + 792 * v17), __dst, 0x318uLL);
    v26 = v10[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_37;
    v10[2] = v28;
    sub_1ABF2FF5C();
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v9)
      break;
    memcpy(__dst, (const void *)(a1 + i), 0x318uLL);
    --v9;
  }
  swift_bridgeObjectRelease();
  v5 = a2;
  v7 = a5;
  v8 = v41;
  v29 = *(_QWORD *)(a2 + 16);
  if (!v29)
    goto LABEL_24;
LABEL_17:
  sub_1ABF2FF5C();
  v30 = v5 + 40;
  do
  {
    v31 = sub_1ABF31804();
    if (v10[2])
    {
      v33 = sub_1ABD00F9C(v31, v32);
      if ((v34 & 1) != 0)
      {
        v35 = (const void *)(v10[7] + 792 * v33);
        memcpy(v46, v35, sizeof(v46));
        memmove(__dst, v35, 0x318uLL);
        nullsub_2(__dst);
        sub_1ABE711D4((uint64_t)v46);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
    v30 += 16;
    swift_bridgeObjectRelease();
    --v29;
  }
  while (v29);
  swift_bridgeObjectRelease();
LABEL_24:
  swift_bridgeObjectRelease();
  v36 = a4;
  if (!v8)
  {
    sub_1ABF0B038(__dst);
LABEL_33:
    v40 = __dst;
    return sub_1ABD843F0((uint64_t)v40, (uint64_t)v7, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  }
  sub_1ABF2FF5C();
  memcpy(__dst, (const void *)(a1 + 32), 0x318uLL);
  v37 = v8 - 1;
  v38 = 824;
  if (!a4)
    goto LABEL_28;
LABEL_26:
  v46[0] = a3;
  v46[1] = v36;
  sub_1ABE711D4((uint64_t)__dst);
  sub_1ABD0E288();
  if (!sub_1ABF31DBC())
  {
    swift_bridgeObjectRelease();
    memcpy(v46, __dst, sizeof(v46));
    nullsub_2(v46);
    v40 = v46;
    return sub_1ABD843F0((uint64_t)v40, (uint64_t)v7, &qword_1ED34ED78, (uint64_t)&type metadata for LanguageConfig);
  }
  sub_1ABF0ABE8((uint64_t)__dst);
  v36 = a4;
LABEL_28:
  while (v37)
  {
    memcpy(__dst, (const void *)(a1 + v38), 0x318uLL);
    v38 += 792;
    --v37;
    if (v36)
      goto LABEL_26;
  }
  swift_bridgeObjectRelease();
  memcpy(v46, (const void *)(a1 + 32), sizeof(v46));
  memcpy(v7, (const void *)(a1 + 32), 0x318uLL);
  nullsub_2(v7);
  return sub_1ABE711D4((uint64_t)v46);
}

uint64_t sub_1ABEFDE04(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABEFDE3C + 4 * word_1ABF4F0E0[a1]))(0x61626C6C61467369, 0xEA00000000006B63);
}

uint64_t sub_1ABEFDE3C()
{
  return 0x6E656D7461657274;
}

uint64_t sub_1ABEFDE5C()
{
  return 0x53746E656D676573;
}

unint64_t sub_1ABEFDE80()
{
  return 0xD000000000000019;
}

unint64_t sub_1ABEFE40C()
{
  return 0xD000000000000022;
}

unint64_t sub_1ABEFE424()
{
  return 0xD000000000000020;
}

unint64_t sub_1ABEFE43C()
{
  return 0xD000000000000024;
}

unint64_t sub_1ABEFE454()
{
  return 0xD000000000000022;
}

unint64_t sub_1ABEFE46C()
{
  return 0xD000000000000020;
}

unint64_t sub_1ABEFE484()
{
  return 0xD000000000000024;
}

unint64_t sub_1ABEFE49C()
{
  return 0xD000000000000024;
}

unint64_t sub_1ABEFE4B4()
{
  return 0xD000000000000023;
}

unint64_t sub_1ABEFE4CC()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1ABEFE4E4()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1ABEFE4FC()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1ABEFE514()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1ABEFE52C()
{
  return 0xD000000000000020;
}

unint64_t sub_1ABEFE544()
{
  return 0xD000000000000024;
}

unint64_t sub_1ABEFE55C()
{
  return 0xD000000000000024;
}

unint64_t sub_1ABEFE574()
{
  return 0xD000000000000018;
}

unint64_t sub_1ABEFE58C()
{
  return 0xD000000000000021;
}

unint64_t sub_1ABEFE5A4()
{
  return 0xD000000000000020;
}

unint64_t sub_1ABEFE5BC()
{
  return 0xD000000000000015;
}

unint64_t sub_1ABEFE5D4()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1ABEFE5EC()
{
  return 0xD000000000000026;
}

uint64_t sub_1ABEFE604()
{
  return 0x6F43756F59726F66;
}

unint64_t sub_1ABEFE628()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1ABEFE640()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1ABEFE658()
{
  return 0xD000000000000010;
}

uint64_t sub_1ABEFE670()
{
  return 0x6F4349557377656ELL;
}

uint64_t sub_1ABEFE690()
{
  return 0x69666E6F43644169;
}

unint64_t sub_1ABEFE6AC()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1ABEFE6C4()
{
  return 0xD000000000000023;
}

unint64_t sub_1ABEFE6DC()
{
  return 0xD000000000000020;
}

unint64_t sub_1ABEFE6F4()
{
  return 0xD000000000000027;
}

unint64_t sub_1ABEFE70C()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1ABEFE724()
{
  return 0xD000000000000017;
}

unint64_t sub_1ABEFE73C()
{
  return 0xD000000000000011;
}

unint64_t sub_1ABEFE754()
{
  return 0xD000000000000013;
}

unint64_t sub_1ABEFE76C()
{
  return 0xD000000000000026;
}

unint64_t sub_1ABEFE784()
{
  return 0xD000000000000027;
}

unint64_t sub_1ABEFE79C()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1ABEFE7B4()
{
  return 0x506C6C4165646968;
}

unint64_t sub_1ABEFE7D8()
{
  return 0xD000000000000014;
}

unint64_t sub_1ABEFE7F0()
{
  return 0xD000000000000013;
}

unint64_t sub_1ABEFE808()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1ABEFE820()
{
  return 0xD00000000000002BLL;
}

unint64_t sub_1ABEFE838()
{
  return 0xD000000000000017;
}

unint64_t sub_1ABEFE850()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1ABEFE868()
{
  return 0xD000000000000015;
}

unint64_t sub_1ABEFE880()
{
  return 0xD000000000000022;
}

unint64_t sub_1ABEFE898()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1ABEFE8B0()
{
  return 0xD000000000000027;
}

unint64_t sub_1ABEFE8C8()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1ABEFE8E0()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1ABEFE8F8()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1ABEFE910()
{
  return 0xD000000000000018;
}

unint64_t sub_1ABEFE928()
{
  return 0xD000000000000026;
}

unint64_t sub_1ABEFE940()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1ABEFE958()
{
  return 0xD000000000000022;
}

unint64_t sub_1ABEFE970()
{
  return 0xD00000000000001ELL;
}

unint64_t sub_1ABEFE988()
{
  return 0xD000000000000020;
}

unint64_t sub_1ABEFE9A0()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1ABEFE9B8()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1ABEFE9D0()
{
  return 0xD000000000000020;
}

unint64_t sub_1ABEFE9E8()
{
  return 0xD000000000000026;
}

void sub_1ABEFEA00()
{
  JUMPOUT(0x1ABEFEA14);
}

uint64_t sub_1ABEFEA20()
{
  return 0x43656C6369747261;
}

uint64_t sub_1ABEFEA44()
{
  unsigned __int8 *v0;

  return sub_1ABEFDE04(*v0);
}

uint64_t sub_1ABEFEA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABF07E9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ABEFEA70(_BYTE *a1@<X8>)
{
  *a1 = -127;
}

uint64_t sub_1ABEFEA7C()
{
  sub_1ABF027D8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEFEAA4()
{
  sub_1ABF027D8();
  return sub_1ABF32398();
}

uint64_t sub_1ABEFEACC(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  __int128 v143;
  int v144;
  int v145;
  int v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  int v160;
  uint64_t v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int v192;
  uint64_t v193;
  int v194;
  int v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  _OWORD v212[70];
  _BYTE v213[505];
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  _BYTE v224[1115];
  int v225;
  char v226;

  MEMORY[0x1E0C80A78](a1);
  v209 = v2;
  v4 = v3;
  sub_1ABCF4DA8(0, &qword_1ED34FF18, (uint64_t (*)(void))sub_1ABF027D8, (uint64_t)&type metadata for AppConfiguration.CodingKeys, MEMORY[0x1E0DED170]);
  v211 = v5;
  v208 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v46 - v6;
  LODWORD(v210) = *v1;
  v207 = *((_QWORD *)v1 + 1);
  v206 = *((_QWORD *)v1 + 2);
  v205 = *((_QWORD *)v1 + 3);
  v204 = *((_QWORD *)v1 + 4);
  v203 = *((_QWORD *)v1 + 5);
  v202 = *((_QWORD *)v1 + 6);
  v201 = *((_QWORD *)v1 + 7);
  v200 = *((_QWORD *)v1 + 8);
  v199 = *((_QWORD *)v1 + 9);
  v198 = *((_QWORD *)v1 + 10);
  v225 = v1[88];
  v197 = v1[89];
  v196 = *((_QWORD *)v1 + 12);
  v195 = v1[104];
  v194 = v1[105];
  v193 = *((_QWORD *)v1 + 14);
  v53 = *((_QWORD *)v1 + 15);
  v8 = *((_QWORD *)v1 + 17);
  v54 = *((_QWORD *)v1 + 16);
  v55 = v8;
  v9 = *((_QWORD *)v1 + 19);
  v56 = *((_QWORD *)v1 + 18);
  v57 = v9;
  v58 = *((_QWORD *)v1 + 20);
  v10 = *((_QWORD *)v1 + 21);
  v59 = *((_QWORD *)v1 + 22);
  v60 = v10;
  v11 = *((_QWORD *)v1 + 24);
  v61 = *((_QWORD *)v1 + 23);
  v62 = v11;
  v12 = *((_QWORD *)v1 + 26);
  v63 = *((_QWORD *)v1 + 25);
  v64 = v12;
  v13 = *((_QWORD *)v1 + 28);
  v65 = *((_QWORD *)v1 + 27);
  v66 = v13;
  v14 = *((_QWORD *)v1 + 30);
  v67 = *((_QWORD *)v1 + 29);
  v68 = v14;
  LODWORD(v6) = v1[249];
  v69 = v1[248];
  v70 = v6;
  v71 = v1[250];
  v15 = *((_QWORD *)v1 + 33);
  v72 = *((_QWORD *)v1 + 32);
  v73 = v15;
  v16 = *((_QWORD *)v1 + 35);
  v74 = *((_QWORD *)v1 + 34);
  v75 = v16;
  v17 = *((_QWORD *)v1 + 37);
  v76 = *((_QWORD *)v1 + 36);
  v77 = v17;
  v18 = *((_QWORD *)v1 + 39);
  v78 = *((_QWORD *)v1 + 38);
  v79 = v18;
  v80 = *((_QWORD *)v1 + 40);
  v81 = *((_QWORD *)v1 + 41);
  v82 = *((_QWORD *)v1 + 42);
  v83 = v1[344];
  v84 = *((_QWORD *)v1 + 44);
  v85 = *((_QWORD *)v1 + 45);
  v19 = *((_QWORD *)v1 + 47);
  v86 = *((_QWORD *)v1 + 46);
  v87 = v19;
  v20 = *((_QWORD *)v1 + 49);
  v88 = *((_QWORD *)v1 + 48);
  v89 = v20;
  v21 = *((_QWORD *)v1 + 51);
  v90 = *((_QWORD *)v1 + 50);
  v91 = v21;
  memcpy(v213, v1 + 416, sizeof(v213));
  v22 = *((_QWORD *)v1 + 116);
  v99 = *((_QWORD *)v1 + 117);
  v100 = v22;
  v98 = v1[944];
  v97 = *((_QWORD *)v1 + 119);
  v96 = v1[960];
  v95 = *((_QWORD *)v1 + 121);
  v94 = v1[976];
  v93 = *((_QWORD *)v1 + 123);
  v92 = v1[992];
  v23 = *(_OWORD *)(v1 + 1112);
  v220 = *(_OWORD *)(v1 + 1096);
  v221 = v23;
  v24 = *(_OWORD *)(v1 + 1144);
  v222 = *(_OWORD *)(v1 + 1128);
  v223 = v24;
  v25 = *(_OWORD *)(v1 + 1048);
  v216 = *(_OWORD *)(v1 + 1032);
  v217 = v25;
  v26 = *(_OWORD *)(v1 + 1080);
  v218 = *(_OWORD *)(v1 + 1064);
  v219 = v26;
  v27 = *(_OWORD *)(v1 + 1016);
  v214 = *(_OWORD *)(v1 + 1000);
  v215 = v27;
  v28 = *((_QWORD *)v1 + 145);
  v101 = *((_QWORD *)v1 + 146);
  v102 = v28;
  v103 = v1[1176];
  v29 = *((_QWORD *)v1 + 149);
  v104 = *((_QWORD *)v1 + 148);
  v105 = v29;
  v106 = *((_QWORD *)v1 + 150);
  v107 = *((_QWORD *)v1 + 151);
  v30 = *((_QWORD *)v1 + 152);
  v31 = *((_QWORD *)v1 + 154);
  v108 = *((_QWORD *)v1 + 153);
  v109 = v31;
  v110 = *((_QWORD *)v1 + 155);
  v111 = *((_QWORD *)v1 + 156);
  v112 = *((_QWORD *)v1 + 157);
  v113 = *((_QWORD *)v1 + 158);
  v114 = *((_QWORD *)v1 + 159);
  v115 = *((_QWORD *)v1 + 160);
  v116 = *((_QWORD *)v1 + 161);
  v117 = *((_QWORD *)v1 + 162);
  v32 = *((_QWORD *)v1 + 163);
  v119 = *((_QWORD *)v1 + 164);
  v118 = *((_QWORD *)v1 + 165);
  v121 = *((_QWORD *)v1 + 166);
  v120 = *((_QWORD *)v1 + 167);
  v122 = *((_QWORD *)v1 + 168);
  v124 = *((_QWORD *)v1 + 169);
  v137 = *((_OWORD *)v1 + 91);
  v33 = *((_QWORD *)v1 + 184);
  v143 = *((_OWORD *)v1 + 93);
  v34 = *((_QWORD *)v1 + 195);
  v35 = *((_QWORD *)v1 + 196);
  v123 = *((_QWORD *)v1 + 170);
  v125 = *((_QWORD *)v1 + 171);
  v126 = *((_QWORD *)v1 + 172);
  v128 = *((_QWORD *)v1 + 173);
  v127 = *((_QWORD *)v1 + 174);
  v129 = v1[1400];
  v130 = v1[1401];
  v132 = *((_QWORD *)v1 + 176);
  v131 = *((_QWORD *)v1 + 177);
  v134 = *((_QWORD *)v1 + 178);
  v133 = *((_QWORD *)v1 + 179);
  v135 = *((_QWORD *)v1 + 180);
  v136 = *((_QWORD *)v1 + 181);
  v138 = *((_QWORD *)v1 + 185);
  v139 = *((_QWORD *)v1 + 188);
  v140 = *(_OWORD *)(v1 + 1512);
  v141 = *(_OWORD *)(v1 + 1528);
  v142 = *((_QWORD *)v1 + 193);
  v144 = v1[1552];
  memcpy(v224, v1 + 1576, sizeof(v224));
  v145 = v1[2691];
  v147 = *((_QWORD *)v1 + 337);
  v146 = v1[2704];
  v149 = *((_QWORD *)v1 + 339);
  v148 = v1[2720];
  v151 = *((_QWORD *)v1 + 341);
  v150 = v1[2736];
  v153 = *((_QWORD *)v1 + 343);
  v152 = v1[2752];
  v155 = *((_QWORD *)v1 + 345);
  v154 = v1[2768];
  v157 = *((_QWORD *)v1 + 347);
  v156 = v1[2784];
  v36 = *((_QWORD *)v1 + 349);
  v158 = *((_QWORD *)v1 + 350);
  v37 = *((_QWORD *)v1 + 351);
  v159 = v1[2816];
  v160 = v1[2817];
  v161 = *((_QWORD *)v1 + 353);
  v163 = *((_QWORD *)v1 + 354);
  v162 = v1[2840];
  v164 = *((_QWORD *)v1 + 356);
  v168 = *((_QWORD *)v1 + 357);
  v167 = *((_QWORD *)v1 + 358);
  v166 = *((_QWORD *)v1 + 359);
  v165 = *((_QWORD *)v1 + 360);
  v171 = *((_QWORD *)v1 + 361);
  v169 = v1[2896];
  v175 = *((_QWORD *)v1 + 363);
  v174 = *((_QWORD *)v1 + 364);
  v173 = *((_QWORD *)v1 + 365);
  v172 = *((_QWORD *)v1 + 366);
  v38 = *((_QWORD *)v1 + 377);
  v170 = v1[2936];
  v177 = *((_QWORD *)v1 + 368);
  v176 = *((_QWORD *)v1 + 369);
  v179 = *((_QWORD *)v1 + 370);
  v178 = *((_QWORD *)v1 + 371);
  v181 = *((_QWORD *)v1 + 372);
  v180 = v1[2984];
  v183 = *((_QWORD *)v1 + 374);
  v182 = v1[3000];
  v184 = *((_QWORD *)v1 + 376);
  v185 = v1[3024];
  v186 = *((_QWORD *)v1 + 379);
  v187 = *((_QWORD *)v1 + 380);
  v188 = *((_QWORD *)v1 + 381);
  v189 = *((_QWORD *)v1 + 382);
  v190 = *((_QWORD *)v1 + 383);
  v191 = *((_QWORD *)v1 + 384);
  v192 = v1[3080];
  v39 = *((_QWORD *)v1 + 386);
  v40 = *((_QWORD *)v1 + 387);
  v41 = *((_QWORD *)v1 + 389);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1ABF027D8();
  sub_1ABF32368();
  LOBYTE(v212[0]) = 0;
  v210 = v7;
  v42 = v209;
  sub_1ABF321A0();
  if (v42)
    return (*(uint64_t (**)(char *, uint64_t))(v208 + 8))(v210, v211);
  v44 = v206;
  v46[0] = v30;
  v46[1] = v32;
  v47 = v33;
  v48 = v35;
  v49 = v34;
  v50 = v36;
  v51 = v37;
  v52 = v38;
  v209 = v40;
  v45 = v208;
  *(_QWORD *)&v212[0] = v207;
  v226 = 1;
  sub_1ABD04578(0, &qword_1ED34FD08, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF036A4();
  sub_1ABF321D0();
  *(_QWORD *)&v212[0] = v44;
  v226 = 2;
  sub_1ABD04578(0, &qword_1ED34FCF0, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF03714();
  sub_1ABF321D0();
  LOBYTE(v212[0]) = 3;
  sub_1ABF321B8();
  LOBYTE(v212[0]) = 4;
  sub_1ABF321B8();
  LOBYTE(v212[0]) = 5;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 6;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 7;
  sub_1ABF321B8();
  LOBYTE(v212[0]) = 8;
  sub_1ABF321B8();
  LOBYTE(v212[0]) = 9;
  sub_1ABF321B8();
  *(_QWORD *)&v212[0] = v198;
  v226 = 10;
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v207 = sub_1ABF03784();
  sub_1ABF321D0();
  LOBYTE(v212[0]) = 11;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 12;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 13;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 14;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 15;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 16;
  sub_1ABF321B8();
  LOBYTE(v212[0]) = 17;
  sub_1ABF321B8();
  LOBYTE(v212[0]) = 18;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 19;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 20;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 21;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 22;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 23;
  sub_1ABF32194();
  LOBYTE(v212[0]) = 24;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 25;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 26;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 27;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 28;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 29;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 30;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 31;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 32;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 33;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 34;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 35;
  sub_1ABF321B8();
  LOBYTE(v212[0]) = 36;
  sub_1ABF321B8();
  LOBYTE(v212[0]) = 37;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 38;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 39;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 40;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 41;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 42;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 43;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 44;
  sub_1ABF321B8();
  LOBYTE(v212[0]) = 45;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 46;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 47;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 48;
  sub_1ABF321B8();
  LOBYTE(v212[0]) = 49;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 50;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 51;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 52;
  sub_1ABF321AC();
  *(_QWORD *)&v212[0] = v90;
  v226 = 53;
  sub_1ABD04578(0, &qword_1ED34FC58, (uint64_t)&type metadata for ExternalAnalyticsConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF037F4();
  sub_1ABF321D0();
  *(_QWORD *)&v212[0] = v91;
  v226 = 54;
  sub_1ABD04578(0, &qword_1ED34FBF8, (uint64_t)&type metadata for EndpointConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF038B0();
  sub_1ABF321D0();
  memcpy(v212, v213, 0x1F9uLL);
  v226 = 55;
  sub_1ABD0B890();
  sub_1ABF321D0();
  *(_QWORD *)&v212[0] = v100;
  *((_QWORD *)&v212[0] + 1) = v99;
  LOBYTE(v212[1]) = v98;
  *((_QWORD *)&v212[1] + 1) = v97;
  LOBYTE(v212[2]) = v96;
  *((_QWORD *)&v212[2] + 1) = v95;
  LOBYTE(v212[3]) = v94;
  *((_QWORD *)&v212[3] + 1) = v93;
  LOBYTE(v212[4]) = v92;
  v226 = 56;
  sub_1ABDF2488();
  sub_1ABF321D0();
  v212[6] = v220;
  v212[7] = v221;
  v212[8] = v222;
  v212[9] = v223;
  v212[2] = v216;
  v212[3] = v217;
  v212[4] = v218;
  v212[5] = v219;
  v212[0] = v214;
  v212[1] = v215;
  v226 = 57;
  sub_1ABF0396C();
  sub_1ABF321D0();
  LOBYTE(v212[0]) = 58;
  sub_1ABF32194();
  LOBYTE(v212[0]) = 59;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 60;
  sub_1ABF321C4();
  *(_QWORD *)&v212[0] = v105;
  v226 = 61;
  sub_1ABD04578(0, &qword_1ED34FB90, (uint64_t)&type metadata for StocksKitClientConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF039B0();
  sub_1ABF321D0();
  LOBYTE(v212[0]) = 62;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 63;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 64;
  sub_1ABF321AC();
  *(_QWORD *)&v212[0] = v108;
  v226 = 65;
  sub_1ABF321D0();
  *(_QWORD *)&v212[0] = v109;
  v226 = 66;
  sub_1ABF321D0();
  *(_QWORD *)&v212[0] = v110;
  v226 = 67;
  sub_1ABF321D0();
  *(_QWORD *)&v212[0] = v111;
  v226 = 68;
  sub_1ABF321D0();
  *(_QWORD *)&v212[0] = v112;
  v226 = 69;
  sub_1ABF321D0();
  *(_QWORD *)&v212[0] = v113;
  v226 = 70;
  sub_1ABF321D0();
  LOBYTE(v212[0]) = 71;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 72;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 73;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 74;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 75;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 76;
  sub_1ABF32194();
  LOBYTE(v212[0]) = 77;
  sub_1ABF32194();
  LOBYTE(v212[0]) = 78;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 79;
  sub_1ABF321C4();
  *(_QWORD *)&v212[0] = v123;
  v226 = 80;
  sub_1ABD33A8C();
  sub_1ABF03A6C();
  sub_1ABF321D0();
  LOBYTE(v212[0]) = 81;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 82;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 83;
  sub_1ABF32194();
  LOBYTE(v212[0]) = 84;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 85;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 86;
  sub_1ABF32194();
  LOBYTE(v212[0]) = 87;
  sub_1ABF32194();
  LOBYTE(v212[0]) = 88;
  sub_1ABF321B8();
  *(_QWORD *)&v212[0] = v136;
  *(_OWORD *)((char *)v212 + 8) = v137;
  *((_QWORD *)&v212[1] + 1) = v47;
  v226 = 89;
  sub_1ABF03AC4();
  sub_1ABF321D0();
  *(_QWORD *)&v212[0] = v138;
  *(_OWORD *)((char *)v212 + 8) = v143;
  *((_QWORD *)&v212[1] + 1) = v139;
  v212[2] = v140;
  v212[3] = v141;
  *(_QWORD *)&v212[4] = v142;
  v226 = 90;
  sub_1ABF03B08();
  sub_1ABF321D0();
  LOBYTE(v212[0]) = v144;
  *((_QWORD *)&v212[0] + 1) = v49;
  *(_QWORD *)&v212[1] = v48;
  v226 = 91;
  sub_1ABF03B4C();
  sub_1ABF321D0();
  memcpy(v212, v224, 0x45BuLL);
  v226 = 92;
  sub_1ABD1857C();
  sub_1ABF321D0();
  LOBYTE(v212[0]) = 93;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 94;
  sub_1ABF32158();
  LOBYTE(v212[0]) = 95;
  sub_1ABF32164();
  LOBYTE(v212[0]) = 96;
  sub_1ABF32164();
  LOBYTE(v212[0]) = 97;
  sub_1ABF32158();
  LOBYTE(v212[0]) = 98;
  sub_1ABF32158();
  LOBYTE(v212[0]) = 99;
  sub_1ABF32170();
  LOBYTE(v212[0]) = 100;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 101;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 102;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 103;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 104;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 105;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 106;
  sub_1ABF32170();
  LOBYTE(v212[0]) = 107;
  sub_1ABF321DC();
  *(_QWORD *)&v212[0] = v168;
  *((_QWORD *)&v212[0] + 1) = v167;
  *(_QWORD *)&v212[1] = v166;
  *((_QWORD *)&v212[1] + 1) = v165;
  v226 = 108;
  sub_1ABF03B90();
  sub_1ABF3217C();
  LOBYTE(v212[0]) = 109;
  sub_1ABF32170();
  *(_QWORD *)&v212[0] = v175;
  *((_QWORD *)&v212[0] + 1) = v174;
  *(_QWORD *)&v212[1] = v173;
  *((_QWORD *)&v212[1] + 1) = v172;
  LOBYTE(v212[2]) = v170;
  v226 = 110;
  sub_1ABF03BD4();
  sub_1ABF3217C();
  LOBYTE(v212[0]) = 111;
  sub_1ABF32140();
  LOBYTE(v212[0]) = 112;
  sub_1ABF32140();
  LOBYTE(v212[0]) = 113;
  sub_1ABF32170();
  LOBYTE(v212[0]) = 114;
  sub_1ABF32170();
  LOBYTE(v212[0]) = 115;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 116;
  sub_1ABF321AC();
  LOBYTE(v212[0]) = 117;
  sub_1ABF321A0();
  LOBYTE(v212[0]) = 118;
  sub_1ABF321C4();
  *(_QWORD *)&v212[0] = v187;
  v226 = 119;
  sub_1ABF321D0();
  LOBYTE(v212[0]) = 120;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 121;
  sub_1ABF321C4();
  *(_QWORD *)&v212[0] = v190;
  v226 = 122;
  sub_1ABF03C18();
  sub_1ABF03C90();
  sub_1ABF321D0();
  LOBYTE(v212[0]) = 123;
  sub_1ABF321C4();
  LOBYTE(v212[0]) = 124;
  sub_1ABF321A0();
  *(_QWORD *)&v212[0] = v39;
  v226 = 125;
  sub_1ABF034EC();
  sub_1ABDF1270();
  sub_1ABF3217C();
  *(_QWORD *)&v212[0] = v209;
  v226 = 126;
  sub_1ABF3217C();
  LOBYTE(v212[0]) = 127;
  sub_1ABF321C4();
  *(_QWORD *)&v212[0] = v41;
  v226 = 0x80;
  sub_1ABF3217C();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v210, v211);
}

uint64_t sub_1ABF009D4(uint64_t a1)
{
  return sub_1ABEF6420(a1);
}

uint64_t sub_1ABF009E8(uint64_t a1)
{
  return sub_1ABEFEACC(a1);
}

uint64_t sub_1ABF00A00(char *a1, char *a2)
{
  return sub_1ABDE386C(*a1, *a2);
}

uint64_t sub_1ABF00A0C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABF00A9C()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABF00B08()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABF00B94@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1ABF00BF0(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x65676175676E616CLL;
  if (*v1)
    v2 = 0xD000000000000013;
  v3 = 0x80000001ABF54ED0;
  if (!*v1)
    v3 = 0xEF736769666E6F43;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABF00C40()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x65676175676E616CLL;
}

uint64_t sub_1ABF00C8C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1ABF00CEC()
{
  sub_1ABF02794();
  return sub_1ABF3238C();
}

uint64_t sub_1ABF00D14()
{
  sub_1ABF02794();
  return sub_1ABF32398();
}

uint64_t sub_1ABF00D3C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABF00D78 + 4 * byte_1ABF4F1E2[a1]))(0x65676175676E616CLL, 0xEB00000000676154);
}

unint64_t sub_1ABF00D78()
{
  return 0xD000000000000015;
}

uint64_t sub_1ABF00E9C()
{
  return 0x666E6F4369626174;
}

uint64_t sub_1ABF00EB8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABF00EF4 + 4 * byte_1ABF4F1EF[a1]))(0x65676175676E616CLL, 0xEB00000000676154);
}

unint64_t sub_1ABF00EF4()
{
  return 0xD000000000000015;
}

uint64_t sub_1ABF01018()
{
  return 0x666E6F4369626174;
}

uint64_t sub_1ABF01034(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1ABF00D3C(*a1);
  v5 = v4;
  if (v3 == sub_1ABF00D3C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABF010BC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABF00D3C(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABF0111C()
{
  unsigned __int8 *v0;

  sub_1ABF00D3C(*v0);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABF0115C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABF00D3C(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABF011B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABF0B274();
  *a1 = result;
  return result;
}

uint64_t sub_1ABF011E4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABF00D3C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABF0120C()
{
  unsigned __int8 *v0;

  return sub_1ABF00EB8(*v0);
}

uint64_t sub_1ABF01214@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABF0B274();
  *a1 = result;
  return result;
}

void sub_1ABF01238(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1ABF01244()
{
  sub_1ABF0AA94();
  return sub_1ABF3238C();
}

uint64_t sub_1ABF0126C()
{
  sub_1ABF0AA94();
  return sub_1ABF32398();
}

uint64_t sub_1ABF01294(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[5];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  _BYTE v67[520];
  int v68;
  char v69;

  sub_1ABCF4DA8(0, &qword_1EEC45020, (uint64_t (*)(void))sub_1ABF0AA94, (uint64_t)&type metadata for LanguageConfig.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v27 - v6;
  v8 = *v1;
  v55 = v1[1];
  v56 = v8;
  v9 = v1[2];
  v53 = v1[3];
  v54 = v9;
  v10 = v1[4];
  v51 = v1[5];
  v52 = v10;
  v11 = v1[6];
  v49 = v1[7];
  v50 = v11;
  v12 = v1[9];
  v47 = v1[8];
  v48 = v12;
  v13 = v1[11];
  v43 = v1[10];
  v44 = v13;
  v14 = v1[13];
  v45 = v1[12];
  v46 = v14;
  sub_1ABD843F0((uint64_t)(v1 + 14), (uint64_t)v67, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  v15 = v1[79];
  v35 = v1[78];
  v36 = v15;
  v16 = v1[80];
  v17 = v1[81];
  v41 = v1[82];
  v42 = v17;
  v18 = v1[83];
  v39 = v1[84];
  v40 = v18;
  v19 = v1[85];
  v37 = v16;
  v38 = v19;
  v68 = *((unsigned __int8 *)v1 + 688);
  v20 = v1[88];
  v33 = v1[87];
  v34 = v20;
  v21 = v1[90];
  v28 = v1[89];
  v29 = v21;
  v30 = v1[91];
  v32 = v1[92];
  v31 = *((unsigned __int8 *)v1 + 744);
  v22 = v1[95];
  v27[3] = v1[94];
  v27[4] = v22;
  v23 = v1[97];
  v27[1] = v1[96];
  v27[2] = v23;
  v24 = v1[98];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF0AA94();
  sub_1ABF32368();
  LOBYTE(v58) = 0;
  v25 = v57;
  sub_1ABF32194();
  if (v25)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  LOBYTE(v58) = 1;
  sub_1ABF32140();
  LOBYTE(v58) = 2;
  sub_1ABF32140();
  v57 = v5;
  LOBYTE(v58) = 3;
  sub_1ABF32140();
  LOBYTE(v58) = 4;
  sub_1ABF32140();
  v58 = v43;
  v59 = v44;
  v60 = v45;
  v61 = v46;
  v69 = 5;
  sub_1ABF03AC4();
  sub_1ABF3217C();
  sub_1ABD843F0((uint64_t)v67, (uint64_t)&v58, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  v69 = 6;
  sub_1ABD0B890();
  sub_1ABF3217C();
  v58 = v35;
  v59 = v36;
  v60 = v37;
  v61 = v42;
  v62 = v41;
  v63 = v40;
  v64 = v39;
  v65 = v38;
  v66 = v68;
  v69 = 7;
  sub_1ABDF2488();
  sub_1ABF3217C();
  LOBYTE(v58) = 8;
  sub_1ABF32140();
  v58 = v28;
  v59 = v29;
  v60 = v30;
  v61 = v32;
  LOBYTE(v62) = v31;
  v69 = 9;
  sub_1ABF03BD4();
  sub_1ABF3217C();
  LOBYTE(v58) = 10;
  sub_1ABF32140();
  LOBYTE(v58) = 11;
  sub_1ABF32140();
  v58 = v24;
  v69 = 12;
  sub_1ABF034EC();
  sub_1ABDF1270();
  sub_1ABF3217C();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v5 + 8))(0, v4);
}

uint64_t sub_1ABF01774@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD v72[99];
  uint64_t v73[99];
  uint64_t v74;
  _BYTE v75[512];
  uint64_t v76;
  _QWORD v77[100];
  int v78;
  char v79;
  char v80;

  sub_1ABCF4DA8(0, &qword_1ED34FE40, (uint64_t (*)(void))sub_1ABF0AA94, (uint64_t)&type metadata for LanguageConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v70 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v38 - v7;
  v9 = a1[3];
  v71 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1ABF0AA94();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  v10 = v6;
  v69 = a2;
  LOBYTE(v73[0]) = 0;
  v11 = sub_1ABF320E0();
  v13 = v12;
  v77[0] = v11;
  v77[1] = v12;
  LOBYTE(v73[0]) = 1;
  sub_1ABF2FF5C();
  v14 = sub_1ABF3208C();
  v68 = v11;
  v77[2] = v14;
  v77[3] = v15;
  LOBYTE(v73[0]) = 2;
  v16 = v14;
  v17 = v15;
  sub_1ABF2FF5C();
  v18 = sub_1ABF3208C();
  v66 = v16;
  v67 = v17;
  v77[4] = v18;
  v77[5] = v19;
  LOBYTE(v73[0]) = 3;
  v65 = v18;
  v20 = v19;
  sub_1ABF2FF5C();
  v21 = sub_1ABF3208C();
  v63 = v22;
  v64 = v20;
  v77[6] = v21;
  v77[7] = v22;
  LOBYTE(v73[0]) = 4;
  v23 = v21;
  sub_1ABF2FF5C();
  v24 = sub_1ABF3208C();
  v26 = v25;
  v62 = v23;
  v77[8] = v24;
  v77[9] = v25;
  LOBYTE(v72[0]) = 5;
  v27 = v24;
  sub_1ABF0AAD8();
  sub_1ABF2FF5C();
  sub_1ABF320C8();
  v59 = v27;
  v28 = v73[0];
  v29 = v73[3];
  v77[10] = v73[0];
  v77[11] = v73[1];
  v77[12] = v73[2];
  v77[13] = v73[3];
  v80 = 6;
  v60 = v73[1];
  v61 = v73[2];
  sub_1ABE714D4(v73[0], v73[1]);
  sub_1ABF0AB1C();
  sub_1ABF320C8();
  v56 = v29;
  v57 = v28;
  v58 = v26;
  sub_1ABD843F0((uint64_t)&v76, (uint64_t)v75, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  sub_1ABD843F0((uint64_t)v75, (uint64_t)&v77[14], &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  LOBYTE(v72[0]) = 7;
  sub_1ABF035D0(v75, sub_1ABE71504);
  sub_1ABF0AB60();
  sub_1ABF320C8();
  v30 = v73[5];
  v31 = v73[7];
  LODWORD(v26) = LOBYTE(v73[8]);
  v77[78] = v73[0];
  v77[79] = v73[1];
  v77[80] = v73[2];
  v77[81] = v73[3];
  v77[82] = v73[4];
  v77[83] = v73[5];
  v77[84] = v73[6];
  v77[85] = v73[7];
  LOBYTE(v77[86]) = v73[8];
  LOBYTE(v73[0]) = 8;
  v52 = v77[78];
  v53 = v73[1];
  v54 = v73[2];
  v55 = v73[6];
  v50 = v73[3];
  v51 = v73[4];
  sub_1ABE71724(v77[78]);
  v32 = sub_1ABF3208C();
  v34 = v33;
  v78 = v26;
  v48 = v32;
  v49 = v13;
  v77[87] = v32;
  v77[88] = v33;
  LOBYTE(v72[0]) = 9;
  sub_1ABF0ABA4();
  sub_1ABF2FF5C();
  sub_1ABF320C8();
  v44 = v73[1];
  v45 = v73[0];
  v77[89] = v73[0];
  v77[90] = v73[1];
  v42 = v73[3];
  v43 = v73[2];
  v77[91] = v73[2];
  v77[92] = v73[3];
  v41 = LOBYTE(v73[4]);
  LOBYTE(v77[93]) = v73[4];
  LOBYTE(v73[0]) = 10;
  v46 = sub_1ABF3208C();
  v47 = v35;
  v77[94] = v46;
  v77[95] = v35;
  LOBYTE(v73[0]) = 11;
  sub_1ABF2FF5C();
  v39 = sub_1ABF3208C();
  v40 = v36;
  v77[96] = v39;
  v77[97] = v36;
  sub_1ABF034EC();
  v79 = 12;
  sub_1ABF03550();
  sub_1ABF2FF5C();
  sub_1ABF320C8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v70);
  v70 = v74;
  v77[98] = v74;
  v72[0] = v68;
  v72[1] = v49;
  v72[2] = v66;
  v72[3] = v67;
  v72[4] = v65;
  v72[5] = v64;
  v72[6] = v62;
  v72[7] = v63;
  v72[8] = v59;
  v72[9] = v58;
  v72[10] = v57;
  v72[11] = v60;
  v72[12] = v61;
  v72[13] = v56;
  sub_1ABD843F0((uint64_t)v75, (uint64_t)&v72[14], &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  v72[78] = v52;
  v72[79] = v53;
  v72[80] = v54;
  v72[81] = v50;
  v72[82] = v51;
  v38[1] = v30;
  v72[83] = v30;
  v72[84] = v55;
  v72[85] = v31;
  LOBYTE(v72[86]) = v78;
  v72[87] = v48;
  v72[88] = v34;
  v72[89] = v45;
  v72[90] = v44;
  v72[91] = v43;
  v72[92] = v42;
  LOBYTE(v72[93]) = v41;
  v72[94] = v46;
  v72[95] = v47;
  v72[96] = v39;
  v72[97] = v40;
  v72[98] = v70;
  sub_1ABE711D4((uint64_t)v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABF0316C(v52);
  sub_1ABF035D0(v75, sub_1ABF02F4C);
  sub_1ABF02F1C(v57, v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v69, v72, 0x318uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
  memcpy(v73, v77, sizeof(v73));
  return sub_1ABF0ABE8((uint64_t)v73);
}

uint64_t sub_1ABF0243C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1ABF01774(a1, a2);
}

uint64_t sub_1ABF02450(_QWORD *a1)
{
  return sub_1ABF01294(a1);
}

unint64_t sub_1ABF02464()
{
  return 0xD000000000000013;
}

unint64_t sub_1ABF02480()
{
  return 0xD000000000000013;
}

uint64_t sub_1ABF0249C(uint64_t a1)
{
  return sub_1ABF02504(a1, qword_1ED34FD98);
}

uint64_t sub_1ABF024C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABF02654(&qword_1ED34E970, (uint64_t)qword_1ED34FD98, a1);
}

uint64_t sub_1ABF024DC(uint64_t a1)
{
  return sub_1ABF02504(a1, qword_1ED34FDB0);
}

uint64_t sub_1ABF02504(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FDE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEC990], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - v4;
  v6 = sub_1ABF31F84();
  __swift_allocate_value_buffer(v6, a2);
  v7 = __swift_project_value_buffer(v6, (uint64_t)a2);
  sub_1ABF31F78();
  v8 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v7, v5, v6);
  __break(1u);
  return result;
}

uint64_t sub_1ABF025F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABF02654(&qword_1ED34E978, (uint64_t)qword_1ED34FDB0, a1);
}

uint64_t sub_1ABF0260C(uint64_t a1)
{
  return sub_1ABF02504(a1, qword_1ED34FDC8);
}

uint64_t sub_1ABF02638@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABF02654(&qword_1ED34E980, (uint64_t)qword_1ED34FDC8, a1);
}

uint64_t sub_1ABF02654@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1ABF31F84();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1ABF026BC(unsigned __int8 a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v3 = (_QWORD *)(a2 + 16);
  v4 = sub_1ABEFDE04(a1);
  v6 = v5;
  swift_beginAccess();
  v7 = *(_QWORD **)(a2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_1ABD12054(0, v7[2] + 1, 1, v7);
    *v3 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_1ABD12054((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v3 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = v4;
  v11[5] = v6;
  return swift_endAccess();
}

unint64_t sub_1ABF02794()
{
  unint64_t result;

  result = qword_1ED34EF58[0];
  if (!qword_1ED34EF58[0])
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F6FC, &type metadata for LocalizationKeys);
    atomic_store(result, qword_1ED34EF58);
  }
  return result;
}

unint64_t sub_1ABF027D8()
{
  unint64_t result;

  result = qword_1ED34EEF0;
  if (!qword_1ED34EEF0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F6AC, &type metadata for AppConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EEF0);
  }
  return result;
}

uint64_t sub_1ABF0281C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1ABF02840()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED34FBD8;
  if (!qword_1ED34FBD8)
  {
    sub_1ABD04578(255, &qword_1ED34FBD0, (uint64_t)&type metadata for LanguageConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABF028B8();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34FBD8);
  }
  return result;
}

unint64_t sub_1ABF028B8()
{
  unint64_t result;

  result = qword_1ED34ED70;
  if (!qword_1ED34ED70)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F684, &type metadata for LanguageConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34ED70);
  }
  return result;
}

uint64_t sub_1ABF028FC(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v17 = *(_OWORD *)(a1 + 464);
  v15 = *(_OWORD *)(a1 + 432);
  v16 = *(_OWORD *)(a1 + 448);
  v13 = *(_OWORD *)(a1 + 400);
  v14 = *(_OWORD *)(a1 + 416);
  v11 = *(_OWORD *)(a1 + 368);
  v12 = *(_OWORD *)(a1 + 384);
  v9 = *(_OWORD *)(a1 + 336);
  v10 = *(_OWORD *)(a1 + 352);
  v7 = *(_OWORD *)(a1 + 304);
  v8 = *(_OWORD *)(a1 + 320);
  v5 = *(_OWORD *)(a1 + 272);
  v6 = *(_OWORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 240);
  sub_1ABF02A9C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    *(_QWORD *)(a1 + 480));
  return a1;
}

uint64_t sub_1ABF02A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t result;
  uint64_t v62;

  if (a2)
  {
    v62 = STACK[0x6C0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF02F1C(a11, a12);
    sub_1ABF02F4C(a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33,
      a34,
      a35,
      a36,
      a37,
      a38,
      a39,
      a40,
      a41,
      a42,
      a43,
      a44,
      a45,
      a46,
      a47,
      a48,
      a49,
      a50,
      a51,
      a52,
      a53,
      a54,
      a55,
      a56,
      a57,
      a58,
      a59,
      a60,
      a61);
    sub_1ABF0316C(v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABF02F1C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABF02F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t result;

  if (a8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABD1A400(a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45,
      a46,
      a47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABF0316C(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1ABF0317C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED34FD18;
  if (!qword_1ED34FD18)
  {
    sub_1ABD04578(255, &qword_1ED34FD08, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDC90];
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED34FD18);
  }
  return result;
}

unint64_t sub_1ABF031EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED34FD00;
  if (!qword_1ED34FD00)
  {
    sub_1ABD04578(255, &qword_1ED34FCF0, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDBF8];
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED34FD00);
  }
  return result;
}

uint64_t sub_1ABF0325C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1ABF032B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED34FC68;
  if (!qword_1ED34FC68)
  {
    sub_1ABD04578(255, &qword_1ED34FC58, (uint64_t)&type metadata for ExternalAnalyticsConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABF03330();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34FC68);
  }
  return result;
}

unint64_t sub_1ABF03330()
{
  unint64_t result;

  result = qword_1ED34F7B0;
  if (!qword_1ED34F7B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44404, &type metadata for ExternalAnalyticsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F7B0);
  }
  return result;
}

unint64_t sub_1ABF03374()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED34FC08;
  if (!qword_1ED34FC08)
  {
    sub_1ABD04578(255, &qword_1ED34FBF8, (uint64_t)&type metadata for EndpointConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABF033EC();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34FC08);
  }
  return result;
}

unint64_t sub_1ABF033EC()
{
  unint64_t result;

  result = qword_1ED34F378;
  if (!qword_1ED34F378)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A65C, &type metadata for EndpointConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F378);
  }
  return result;
}

unint64_t sub_1ABF03430()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED34FBA0;
  if (!qword_1ED34FBA0)
  {
    sub_1ABD04578(255, &qword_1ED34FB90, (uint64_t)&type metadata for StocksKitClientConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABF034A8();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34FBA0);
  }
  return result;
}

unint64_t sub_1ABF034A8()
{
  unint64_t result;

  result = qword_1ED34EAE0;
  if (!qword_1ED34EAE0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for StocksKitClientConfig, &type metadata for StocksKitClientConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34EAE0);
  }
  return result;
}

void sub_1ABF034EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FB68)
  {
    sub_1ABF31048();
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FB68);
  }
}

unint64_t sub_1ABF03550()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED34FB78;
  if (!qword_1ED34FB78)
  {
    sub_1ABF034EC();
    v2 = v1;
    v3 = sub_1ABCFE1EC(&qword_1ED34FAA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED34FB78);
  }
  return result;
}

#error "1ABF03684: call analysis failed (funcsize=53)"

unint64_t sub_1ABF036A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED34FD10;
  if (!qword_1ED34FD10)
  {
    sub_1ABD04578(255, &qword_1ED34FD08, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDC68];
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED34FD10);
  }
  return result;
}

unint64_t sub_1ABF03714()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED34FCF8;
  if (!qword_1ED34FCF8)
  {
    sub_1ABD04578(255, &qword_1ED34FCF0, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEDBD0];
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED34FCF8);
  }
  return result;
}

unint64_t sub_1ABF03784()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED34FCB8;
  if (!qword_1ED34FCB8)
  {
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED34FCB8);
  }
  return result;
}

unint64_t sub_1ABF037F4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED34FC60;
  if (!qword_1ED34FC60)
  {
    sub_1ABD04578(255, &qword_1ED34FC58, (uint64_t)&type metadata for ExternalAnalyticsConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABF0386C();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34FC60);
  }
  return result;
}

unint64_t sub_1ABF0386C()
{
  unint64_t result;

  result = qword_1ED34F7A8;
  if (!qword_1ED34F7A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4442C, &type metadata for ExternalAnalyticsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F7A8);
  }
  return result;
}

unint64_t sub_1ABF038B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED34FC00;
  if (!qword_1ED34FC00)
  {
    sub_1ABD04578(255, &qword_1ED34FBF8, (uint64_t)&type metadata for EndpointConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABF03928();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34FC00);
  }
  return result;
}

unint64_t sub_1ABF03928()
{
  unint64_t result;

  result = qword_1ED34F370;
  if (!qword_1ED34F370)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A684, &type metadata for EndpointConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F370);
  }
  return result;
}

unint64_t sub_1ABF0396C()
{
  unint64_t result;

  result = qword_1ED34F6A8;
  if (!qword_1ED34F6A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43F98, &type metadata for ArticleScoringConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F6A8);
  }
  return result;
}

unint64_t sub_1ABF039B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED34FB98;
  if (!qword_1ED34FB98)
  {
    sub_1ABD04578(255, &qword_1ED34FB90, (uint64_t)&type metadata for StocksKitClientConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABF03A28();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34FB98);
  }
  return result;
}

unint64_t sub_1ABF03A28()
{
  unint64_t result;

  result = qword_1ED34EAD8;
  if (!qword_1ED34EAD8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for StocksKitClientConfig, &type metadata for StocksKitClientConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34EAD8);
  }
  return result;
}

unint64_t sub_1ABF03A6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED34FD38;
  if (!qword_1ED34FD38)
  {
    sub_1ABD33A8C();
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEB3B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED34FD38);
  }
  return result;
}

unint64_t sub_1ABF03AC4()
{
  unint64_t result;

  result = qword_1ED34F588;
  if (!qword_1ED34F588)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B0E4, &type metadata for TopStoriesConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F588);
  }
  return result;
}

unint64_t sub_1ABF03B08()
{
  unint64_t result;

  result = qword_1ED34F270;
  if (!qword_1ED34F270)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF504C4, &type metadata for NewsUIConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F270);
  }
  return result;
}

unint64_t sub_1ABF03B4C()
{
  unint64_t result;

  result = qword_1ED34EDA0;
  if (!qword_1ED34EDA0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for AdConfiguration, &type metadata for AdConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34EDA0);
  }
  return result;
}

unint64_t sub_1ABF03B90()
{
  unint64_t result;

  result = qword_1ED34F480;
  if (!qword_1ED34F480)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F7C4, &type metadata for EmbedProxyConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F480);
  }
  return result;
}

unint64_t sub_1ABF03BD4()
{
  unint64_t result;

  result = qword_1ED34F700;
  if (!qword_1ED34F700)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42CD8, &type metadata for AppReviewPromptConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F700);
  }
  return result;
}

void sub_1ABF03C18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FD20)
  {
    sub_1ABF30820();
    sub_1ABCFE1EC(&qword_1ED34EAC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C60]);
    v0 = sub_1ABF31B40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FD20);
  }
}

unint64_t sub_1ABF03C90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED34FD28;
  if (!qword_1ED34FD28)
  {
    sub_1ABF03C18();
    v2 = v1;
    v3 = sub_1ABCFE1EC(&qword_1ED34EAB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C58]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEB3B8], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34FD28);
  }
  return result;
}

uint64_t assignWithCopy for AppConfiguration(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  _BYTE *v5;
  __int128 *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  _OWORD *v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;

  v4 = (_BYTE *)(a2 + 1552);
  v5 = (_BYTE *)(a2 + 344);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_BYTE *)(a1 + 249) = *(_BYTE *)(a2 + 249);
  *(_BYTE *)(a1 + 250) = *(_BYTE *)(a2 + 250);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 432) = v5[88];
  *(_BYTE *)(a1 + 433) = v5[89];
  *(_BYTE *)(a1 + 434) = v5[90];
  *(_BYTE *)(a1 + 435) = v5[91];
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_BYTE *)(a1 + 448) = v5[104];
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 624);
  v7 = (__int128 *)(a2 + 624);
  v8 = *(_QWORD *)(a2 + 784);
  if (*(_QWORD *)(a1 + 784) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 656);
      *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
      *(_OWORD *)(a1 + 656) = v10;
      *v6 = v9;
      v11 = *(_OWORD *)(a2 + 672);
      v12 = *(_OWORD *)(a2 + 688);
      v13 = *(_OWORD *)(a2 + 720);
      *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
      *(_OWORD *)(a1 + 720) = v13;
      *(_OWORD *)(a1 + 672) = v11;
      *(_OWORD *)(a1 + 688) = v12;
      v14 = *(_OWORD *)(a2 + 736);
      v15 = *(_OWORD *)(a2 + 752);
      v16 = *(_OWORD *)(a2 + 768);
      *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 752) = v15;
      *(_OWORD *)(a1 + 768) = v16;
      *(_OWORD *)(a1 + 736) = v14;
    }
    else
    {
      if (*(_QWORD *)v7 == 1)
      {
        v25 = *(_OWORD *)(a2 + 640);
        *v6 = *v7;
        *(_OWORD *)(a1 + 640) = v25;
      }
      else
      {
        *(_QWORD *)(a1 + 624) = *(_QWORD *)v7;
        *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
        *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
        *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      v28 = *(_QWORD *)(a2 + 656);
      if (v28 == 1)
      {
        v29 = *(_OWORD *)(a2 + 672);
        *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
        *(_OWORD *)(a1 + 672) = v29;
      }
      else
      {
        *(_QWORD *)(a1 + 656) = v28;
        *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
        *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
        *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      v31 = *(_QWORD *)(a2 + 688);
      if (v31 == 1)
      {
        v32 = *(_OWORD *)(a2 + 704);
        *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
        *(_OWORD *)(a1 + 704) = v32;
      }
      else
      {
        *(_QWORD *)(a1 + 688) = v31;
        *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
        *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
        *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      v33 = *(_QWORD *)(a2 + 720);
      if (v33 == 1)
      {
        v34 = *(_OWORD *)(a2 + 736);
        *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
        *(_OWORD *)(a1 + 736) = v34;
      }
      else
      {
        *(_QWORD *)(a1 + 720) = v33;
        *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
        *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
        *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      v35 = *(_QWORD *)(a2 + 752);
      if (v35 == 1)
      {
        v36 = *(_OWORD *)(a2 + 768);
        *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
        *(_OWORD *)(a1 + 768) = v36;
      }
      else
      {
        *(_QWORD *)(a1 + 752) = v35;
        *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
        *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
        *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
      sub_1ABF2FF5C();
    }
  }
  else if (v8 == 1)
  {
    sub_1ABDD0088((_QWORD *)(a1 + 624));
    v18 = *(_OWORD *)(a2 + 640);
    v17 = *(_OWORD *)(a2 + 656);
    *v6 = *v7;
    *(_OWORD *)(a1 + 640) = v18;
    *(_OWORD *)(a1 + 656) = v17;
    v19 = *(_OWORD *)(a2 + 720);
    v21 = *(_OWORD *)(a2 + 672);
    v20 = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 720) = v19;
    *(_OWORD *)(a1 + 672) = v21;
    *(_OWORD *)(a1 + 688) = v20;
    v23 = *(_OWORD *)(a2 + 752);
    v22 = *(_OWORD *)(a2 + 768);
    v24 = *(_OWORD *)(a2 + 736);
    *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 752) = v23;
    *(_OWORD *)(a1 + 768) = v22;
    *(_OWORD *)(a1 + 736) = v24;
  }
  else
  {
    v26 = *(_QWORD *)v7;
    if (*(_QWORD *)v6 == 1)
    {
      if (v26 == 1)
      {
        v27 = *(_OWORD *)(a2 + 640);
        *v6 = *v7;
        *(_OWORD *)(a1 + 640) = v27;
      }
      else
      {
        *(_QWORD *)(a1 + 624) = v26;
        *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
        *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
        *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
    }
    else if (v26 == 1)
    {
      sub_1ABDD0054(a1 + 624);
      v30 = *(_OWORD *)(a2 + 640);
      *v6 = *v7;
      *(_OWORD *)(a1 + 640) = v30;
    }
    else
    {
      *(_QWORD *)(a1 + 624) = v26;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    v37 = (_OWORD *)(a1 + 656);
    v38 = (_OWORD *)(a2 + 656);
    v39 = *(_QWORD *)(a2 + 656);
    if (*(_QWORD *)(a1 + 656) == 1)
    {
      if (v39 == 1)
      {
        v40 = *(_OWORD *)(a2 + 672);
        *v37 = *v38;
        *(_OWORD *)(a1 + 672) = v40;
      }
      else
      {
        *(_QWORD *)(a1 + 656) = v39;
        *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
        *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
        *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
    }
    else if (v39 == 1)
    {
      sub_1ABDD0054(a1 + 656);
      v41 = *(_OWORD *)(a2 + 672);
      *v37 = *v38;
      *(_OWORD *)(a1 + 672) = v41;
    }
    else
    {
      *(_QWORD *)(a1 + 656) = v39;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    v42 = (_OWORD *)(a1 + 688);
    v43 = (_OWORD *)(a2 + 688);
    v44 = *(_QWORD *)(a2 + 688);
    if (*(_QWORD *)(a1 + 688) == 1)
    {
      if (v44 == 1)
      {
        v45 = *(_OWORD *)(a2 + 704);
        *v42 = *v43;
        *(_OWORD *)(a1 + 704) = v45;
      }
      else
      {
        *(_QWORD *)(a1 + 688) = v44;
        *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
        *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
        *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
    }
    else if (v44 == 1)
    {
      sub_1ABDD0054(a1 + 688);
      v46 = *(_OWORD *)(a2 + 704);
      *v42 = *v43;
      *(_OWORD *)(a1 + 704) = v46;
    }
    else
    {
      *(_QWORD *)(a1 + 688) = v44;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    v47 = (_OWORD *)(a1 + 720);
    v48 = (_OWORD *)(a2 + 720);
    v49 = *(_QWORD *)(a2 + 720);
    if (*(_QWORD *)(a1 + 720) == 1)
    {
      if (v49 == 1)
      {
        v50 = *(_OWORD *)(a2 + 736);
        *v47 = *v48;
        *(_OWORD *)(a1 + 736) = v50;
      }
      else
      {
        *(_QWORD *)(a1 + 720) = v49;
        *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
        *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
        *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
    }
    else if (v49 == 1)
    {
      sub_1ABDD0054(a1 + 720);
      v51 = *(_OWORD *)(a2 + 736);
      *v47 = *v48;
      *(_OWORD *)(a1 + 736) = v51;
    }
    else
    {
      *(_QWORD *)(a1 + 720) = v49;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    v52 = (_OWORD *)(a1 + 752);
    v53 = (_OWORD *)(a2 + 752);
    v54 = *(_QWORD *)(a2 + 752);
    if (*(_QWORD *)(a1 + 752) == 1)
    {
      if (v54 == 1)
      {
        v55 = *(_OWORD *)(a2 + 768);
        *v52 = *v53;
        *(_OWORD *)(a1 + 768) = v55;
      }
      else
      {
        *(_QWORD *)(a1 + 752) = v54;
        *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
        *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
        *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
    }
    else if (v54 == 1)
    {
      sub_1ABDD0054(a1 + 752);
      v56 = *(_OWORD *)(a2 + 768);
      *v52 = *v53;
      *(_OWORD *)(a1 + 768) = v56;
    }
    else
    {
      *(_QWORD *)(a1 + 752) = v54;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
  }
  v57 = *(_QWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 800) = *(_BYTE *)(a2 + 800);
  *(_QWORD *)(a1 + 792) = v57;
  v58 = *(_QWORD *)(a2 + 808);
  *(_BYTE *)(a1 + 816) = *(_BYTE *)(a2 + 816);
  *(_QWORD *)(a1 + 808) = v58;
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
  *(_QWORD *)(a1 + 888) = *(_QWORD *)(a2 + 888);
  *(_BYTE *)(a1 + 896) = v5[552];
  *(_BYTE *)(a1 + 897) = v5[553];
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 920) = v5[576];
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v59 = *(_QWORD *)(a2 + 936);
  *(_BYTE *)(a1 + 944) = *(_BYTE *)(a2 + 944);
  *(_QWORD *)(a1 + 936) = v59;
  v60 = *(_QWORD *)(a2 + 952);
  *(_BYTE *)(a1 + 960) = *(_BYTE *)(a2 + 960);
  *(_QWORD *)(a1 + 952) = v60;
  v61 = *(_QWORD *)(a2 + 968);
  *(_BYTE *)(a1 + 976) = *(_BYTE *)(a2 + 976);
  *(_QWORD *)(a1 + 968) = v61;
  v62 = *(_QWORD *)(a2 + 984);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 984) = v62;
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_QWORD *)(a1 + 1048) = *(_QWORD *)(a2 + 1048);
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(a2 + 1056);
  *(_QWORD *)(a1 + 1064) = *(_QWORD *)(a2 + 1064);
  *(_QWORD *)(a1 + 1072) = *(_QWORD *)(a2 + 1072);
  *(_QWORD *)(a1 + 1080) = *(_QWORD *)(a2 + 1080);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
  *(_QWORD *)(a1 + 1112) = *(_QWORD *)(a2 + 1112);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
  *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(a2 + 1152);
  *(_QWORD *)(a1 + 1160) = *(_QWORD *)(a2 + 1160);
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1176) = v5[832];
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_QWORD *)(a1 + 1192) = *(_QWORD *)(a2 + 1192);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
  *(_QWORD *)(a1 + 1208) = *(_QWORD *)(a2 + 1208);
  *(_QWORD *)(a1 + 1216) = *(_QWORD *)(a2 + 1216);
  *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  *(_QWORD *)(a1 + 1280) = *(_QWORD *)(a2 + 1280);
  *(_QWORD *)(a1 + 1288) = *(_QWORD *)(a2 + 1288);
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
  *(_QWORD *)(a1 + 1312) = *(_QWORD *)(a2 + 1312);
  *(_QWORD *)(a1 + 1320) = *(_QWORD *)(a2 + 1320);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  *(_QWORD *)(a1 + 1336) = *(_QWORD *)(a2 + 1336);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_QWORD *)(a1 + 1352) = *(_QWORD *)(a2 + 1352);
  *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
  *(_QWORD *)(a1 + 1376) = *(_QWORD *)(a2 + 1376);
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1400) = v5[1056];
  *(_BYTE *)(a1 + 1401) = v5[1057];
  *(_QWORD *)(a1 + 1408) = *(_QWORD *)(a2 + 1408);
  *(_QWORD *)(a1 + 1416) = *(_QWORD *)(a2 + 1416);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1440) = *(_QWORD *)(a2 + 1440);
  *(_QWORD *)(a1 + 1448) = *(_QWORD *)(a2 + 1448);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1472) = *(_QWORD *)(a2 + 1472);
  *(_QWORD *)(a1 + 1480) = *(_QWORD *)(a2 + 1480);
  *(_QWORD *)(a1 + 1488) = *(_QWORD *)(a2 + 1488);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1496) = *(_QWORD *)(a2 + 1496);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1536) = *(_QWORD *)(a2 + 1536);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1552) = *v4;
  *(_QWORD *)(a1 + 1560) = *(_QWORD *)(a2 + 1560);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  memcpy((void *)(a1 + 1576), (const void *)(a2 + 1576), 0x45BuLL);
  *(_BYTE *)(a1 + 2691) = v4[1139];
  v63 = *(_QWORD *)(a2 + 2696);
  *(_BYTE *)(a1 + 2704) = *(_BYTE *)(a2 + 2704);
  *(_QWORD *)(a1 + 2696) = v63;
  LOBYTE(v63) = *(_BYTE *)(a2 + 2720);
  *(_QWORD *)(a1 + 2712) = *(_QWORD *)(a2 + 2712);
  *(_BYTE *)(a1 + 2720) = v63;
  LOBYTE(v63) = *(_BYTE *)(a2 + 2736);
  *(_QWORD *)(a1 + 2728) = *(_QWORD *)(a2 + 2728);
  *(_BYTE *)(a1 + 2736) = v63;
  LOBYTE(v63) = *(_BYTE *)(a2 + 2752);
  *(_QWORD *)(a1 + 2744) = *(_QWORD *)(a2 + 2744);
  *(_BYTE *)(a1 + 2752) = v63;
  LOBYTE(v63) = *(_BYTE *)(a2 + 2768);
  *(_QWORD *)(a1 + 2760) = *(_QWORD *)(a2 + 2760);
  *(_BYTE *)(a1 + 2768) = v63;
  LOBYTE(v63) = *(_BYTE *)(a2 + 2784);
  *(_QWORD *)(a1 + 2776) = *(_QWORD *)(a2 + 2776);
  *(_BYTE *)(a1 + 2784) = v63;
  *(_QWORD *)(a1 + 2792) = *(_QWORD *)(a2 + 2792);
  *(_QWORD *)(a1 + 2800) = *(_QWORD *)(a2 + 2800);
  *(_QWORD *)(a1 + 2808) = *(_QWORD *)(a2 + 2808);
  *(_BYTE *)(a1 + 2816) = v4[1264];
  *(_BYTE *)(a1 + 2817) = v4[1265];
  *(_QWORD *)(a1 + 2824) = *(_QWORD *)(a2 + 2824);
  v64 = *(_QWORD *)(a2 + 2832);
  *(_BYTE *)(a1 + 2840) = *(_BYTE *)(a2 + 2840);
  *(_QWORD *)(a1 + 2832) = v64;
  *(_QWORD *)(a1 + 2848) = *(_QWORD *)(a2 + 2848);
  v65 = (_OWORD *)(a1 + 2856);
  v66 = (_OWORD *)(a2 + 2856);
  v67 = *(_QWORD *)(a2 + 2864);
  if (*(_QWORD *)(a1 + 2864) == 1)
  {
    if (v67 == 1)
    {
      v68 = *(_OWORD *)(a2 + 2872);
      *v65 = *v66;
      *(_OWORD *)(a1 + 2872) = v68;
    }
    else
    {
      *(_QWORD *)(a1 + 2856) = *(_QWORD *)(a2 + 2856);
      *(_QWORD *)(a1 + 2864) = *(_QWORD *)(a2 + 2864);
      *(_QWORD *)(a1 + 2872) = *(_QWORD *)(a2 + 2872);
      *(_QWORD *)(a1 + 2880) = *(_QWORD *)(a2 + 2880);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
  }
  else if (v67 == 1)
  {
    sub_1ABF04F64(a1 + 2856);
    v69 = *(_OWORD *)(a2 + 2872);
    *v65 = *v66;
    *(_OWORD *)(a1 + 2872) = v69;
  }
  else
  {
    *(_QWORD *)(a1 + 2856) = *(_QWORD *)(a2 + 2856);
    *(_QWORD *)(a1 + 2864) = *(_QWORD *)(a2 + 2864);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 2872) = *(_QWORD *)(a2 + 2872);
    *(_QWORD *)(a1 + 2880) = *(_QWORD *)(a2 + 2880);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
  }
  v70 = *(_QWORD *)(a2 + 2888);
  *(_BYTE *)(a1 + 2896) = *(_BYTE *)(a2 + 2896);
  *(_QWORD *)(a1 + 2888) = v70;
  v71 = *(_OWORD *)(a2 + 2904);
  v72 = *(_OWORD *)(a2 + 2920);
  *(_BYTE *)(a1 + 2936) = *(_BYTE *)(a2 + 2936);
  *(_OWORD *)(a1 + 2904) = v71;
  *(_OWORD *)(a1 + 2920) = v72;
  *(_QWORD *)(a1 + 2944) = *(_QWORD *)(a2 + 2944);
  *(_QWORD *)(a1 + 2952) = *(_QWORD *)(a2 + 2952);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 2960) = *(_QWORD *)(a2 + 2960);
  *(_QWORD *)(a1 + 2968) = *(_QWORD *)(a2 + 2968);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v73 = *(_QWORD *)(a2 + 2976);
  *(_BYTE *)(a1 + 2984) = *(_BYTE *)(a2 + 2984);
  *(_QWORD *)(a1 + 2976) = v73;
  v74 = *(_QWORD *)(a2 + 2992);
  *(_BYTE *)(a1 + 3000) = *(_BYTE *)(a2 + 3000);
  *(_QWORD *)(a1 + 2992) = v74;
  *(_QWORD *)(a1 + 3008) = *(_QWORD *)(a2 + 3008);
  *(_QWORD *)(a1 + 3016) = *(_QWORD *)(a2 + 3016);
  *(_BYTE *)(a1 + 3024) = v4[1472];
  *(_QWORD *)(a1 + 3032) = *(_QWORD *)(a2 + 3032);
  *(_QWORD *)(a1 + 3040) = *(_QWORD *)(a2 + 3040);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3048) = *(_QWORD *)(a2 + 3048);
  *(_QWORD *)(a1 + 3056) = *(_QWORD *)(a2 + 3056);
  *(_QWORD *)(a1 + 3064) = *(_QWORD *)(a2 + 3064);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3072) = *(_QWORD *)(a2 + 3072);
  *(_BYTE *)(a1 + 3080) = v4[1528];
  *(_QWORD *)(a1 + 3088) = *(_QWORD *)(a2 + 3088);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3096) = *(_QWORD *)(a2 + 3096);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3104) = *(_QWORD *)(a2 + 3104);
  *(_QWORD *)(a1 + 3112) = *(_QWORD *)(a2 + 3112);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABF04F64(uint64_t a1)
{
  destroy for CurrencyConversion();
  return a1;
}

void *__swift_memcpy3120_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC30uLL);
}

uint64_t assignWithTake for AppConfiguration(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;

  v4 = (_BYTE *)(a2 + 1552);
  v5 = (_BYTE *)(a2 + 344);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v8 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_BYTE *)(a1 + 249) = *(_BYTE *)(a2 + 249);
  *(_BYTE *)(a1 + 250) = *(_BYTE *)(a2 + 250);
  v9 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v9;
  v10 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v10;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v11 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v11;
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 432) = v5[88];
  *(_BYTE *)(a1 + 433) = v5[89];
  *(_BYTE *)(a1 + 434) = v5[90];
  *(_BYTE *)(a1 + 435) = v5[91];
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_BYTE *)(a1 + 448) = v5[104];
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v13;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_bridgeObjectRelease();
  v14 = (_OWORD *)(a1 + 624);
  v15 = (_OWORD *)(a2 + 624);
  if (*(_QWORD *)(a1 + 784) == 1)
    goto LABEL_4;
  if (*(_QWORD *)(a2 + 784) == 1)
  {
    sub_1ABDD0088((_QWORD *)(a1 + 624));
LABEL_4:
    v16 = *(_OWORD *)(a2 + 768);
    *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
    *(_OWORD *)(a1 + 768) = v16;
    *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
    v17 = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = v17;
    v18 = *(_OWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    *(_OWORD *)(a1 + 736) = v18;
    v19 = *(_OWORD *)(a2 + 640);
    *v14 = *v15;
    *(_OWORD *)(a1 + 640) = v19;
    v20 = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
    *(_OWORD *)(a1 + 672) = v20;
    goto LABEL_31;
  }
  if (*(_QWORD *)v14 == 1)
    goto LABEL_8;
  if (*(_QWORD *)v15 == 1)
  {
    sub_1ABDD0054(a1 + 624);
LABEL_8:
    v21 = *(_OWORD *)(a2 + 640);
    *v14 = *v15;
    *(_OWORD *)(a1 + 640) = v21;
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 624) = *(_QWORD *)v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_bridgeObjectRelease();
LABEL_10:
  if (*(_QWORD *)(a1 + 656) == 1)
  {
LABEL_13:
    v23 = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
    *(_OWORD *)(a1 + 672) = v23;
    goto LABEL_15;
  }
  v22 = *(_QWORD *)(a2 + 656);
  if (v22 == 1)
  {
    sub_1ABDD0054(a1 + 656);
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 656) = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  swift_bridgeObjectRelease();
LABEL_15:
  if (*(_QWORD *)(a1 + 688) == 1)
  {
LABEL_18:
    v25 = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = v25;
    goto LABEL_20;
  }
  v24 = *(_QWORD *)(a2 + 688);
  if (v24 == 1)
  {
    sub_1ABDD0054(a1 + 688);
    goto LABEL_18;
  }
  *(_QWORD *)(a1 + 688) = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  swift_bridgeObjectRelease();
LABEL_20:
  if (*(_QWORD *)(a1 + 720) == 1)
  {
LABEL_23:
    v27 = *(_OWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    *(_OWORD *)(a1 + 736) = v27;
    goto LABEL_25;
  }
  v26 = *(_QWORD *)(a2 + 720);
  if (v26 == 1)
  {
    sub_1ABDD0054(a1 + 720);
    goto LABEL_23;
  }
  *(_QWORD *)(a1 + 720) = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  swift_bridgeObjectRelease();
LABEL_25:
  if (*(_QWORD *)(a1 + 752) != 1)
  {
    v28 = *(_QWORD *)(a2 + 752);
    if (v28 != 1)
    {
      *(_QWORD *)(a1 + 752) = v28;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    sub_1ABDD0054(a1 + 752);
  }
  v29 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v29;
LABEL_30:
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  swift_bridgeObjectRelease();
LABEL_31:
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 800) = *(_BYTE *)(a2 + 800);
  *(_QWORD *)(a1 + 808) = *(_QWORD *)(a2 + 808);
  *(_BYTE *)(a1 + 816) = *(_BYTE *)(a2 + 816);
  *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 872) = *(_QWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_BYTE *)(a1 + 896) = v5[552];
  *(_BYTE *)(a1 + 897) = v5[553];
  *(_QWORD *)(a1 + 904) = *(_QWORD *)(a2 + 904);
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 920) = v5[576];
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  *(_BYTE *)(a1 + 944) = *(_BYTE *)(a2 + 944);
  *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
  *(_BYTE *)(a1 + 960) = *(_BYTE *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_BYTE *)(a1 + 976) = *(_BYTE *)(a2 + 976);
  *(_BYTE *)(a1 + 992) = *(_BYTE *)(a2 + 992);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  v30 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v30;
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(_OWORD *)(a1 + 1136) = *(_OWORD *)(a2 + 1136);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(a2 + 1152);
  *(_QWORD *)(a1 + 1160) = *(_QWORD *)(a2 + 1160);
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1176) = v5[832];
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_QWORD *)(a1 + 1192) = *(_QWORD *)(a2 + 1192);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
  *(_QWORD *)(a1 + 1208) = *(_QWORD *)(a2 + 1208);
  *(_QWORD *)(a1 + 1216) = *(_QWORD *)(a2 + 1216);
  *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
  *(_QWORD *)(a1 + 1312) = *(_QWORD *)(a2 + 1312);
  *(_QWORD *)(a1 + 1320) = *(_QWORD *)(a2 + 1320);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  *(_QWORD *)(a1 + 1336) = *(_QWORD *)(a2 + 1336);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1400) = v5[1056];
  *(_BYTE *)(a1 + 1401) = v5[1057];
  *(_QWORD *)(a1 + 1408) = *(_QWORD *)(a2 + 1408);
  *(_QWORD *)(a1 + 1416) = *(_QWORD *)(a2 + 1416);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1472) = *(_QWORD *)(a2 + 1472);
  *(_QWORD *)(a1 + 1480) = *(_QWORD *)(a2 + 1480);
  *(_QWORD *)(a1 + 1488) = *(_QWORD *)(a2 + 1488);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1496) = *(_QWORD *)(a2 + 1496);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1504) = *(_QWORD *)(a2 + 1504);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1536) = *(_QWORD *)(a2 + 1536);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1552) = *v4;
  *(_QWORD *)(a1 + 1560) = *(_QWORD *)(a2 + 1560);
  *(_QWORD *)(a1 + 1568) = *(_QWORD *)(a2 + 1568);
  memcpy((void *)(a1 + 1576), (const void *)(a2 + 1576), 0x45BuLL);
  *(_BYTE *)(a1 + 2691) = v4[1139];
  *(_QWORD *)(a1 + 2696) = *(_QWORD *)(a2 + 2696);
  *(_BYTE *)(a1 + 2704) = *(_BYTE *)(a2 + 2704);
  *(_QWORD *)(a1 + 2712) = *(_QWORD *)(a2 + 2712);
  *(_BYTE *)(a1 + 2720) = *(_BYTE *)(a2 + 2720);
  *(_QWORD *)(a1 + 2728) = *(_QWORD *)(a2 + 2728);
  *(_BYTE *)(a1 + 2736) = *(_BYTE *)(a2 + 2736);
  *(_BYTE *)(a1 + 2752) = *(_BYTE *)(a2 + 2752);
  *(_QWORD *)(a1 + 2744) = *(_QWORD *)(a2 + 2744);
  *(_QWORD *)(a1 + 2760) = *(_QWORD *)(a2 + 2760);
  *(_BYTE *)(a1 + 2768) = *(_BYTE *)(a2 + 2768);
  *(_QWORD *)(a1 + 2776) = *(_QWORD *)(a2 + 2776);
  *(_BYTE *)(a1 + 2784) = *(_BYTE *)(a2 + 2784);
  *(_QWORD *)(a1 + 2792) = *(_QWORD *)(a2 + 2792);
  *(_QWORD *)(a1 + 2800) = *(_QWORD *)(a2 + 2800);
  *(_QWORD *)(a1 + 2808) = *(_QWORD *)(a2 + 2808);
  *(_BYTE *)(a1 + 2816) = v4[1264];
  *(_BYTE *)(a1 + 2817) = v4[1265];
  *(_QWORD *)(a1 + 2824) = *(_QWORD *)(a2 + 2824);
  *(_BYTE *)(a1 + 2840) = *(_BYTE *)(a2 + 2840);
  *(_QWORD *)(a1 + 2832) = *(_QWORD *)(a2 + 2832);
  *(_QWORD *)(a1 + 2848) = *(_QWORD *)(a2 + 2848);
  if (*(_QWORD *)(a1 + 2864) != 1)
  {
    v31 = *(_QWORD *)(a2 + 2864);
    if (v31 != 1)
    {
      *(_QWORD *)(a1 + 2856) = *(_QWORD *)(a2 + 2856);
      *(_QWORD *)(a1 + 2864) = v31;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 2872) = *(_QWORD *)(a2 + 2872);
      *(_QWORD *)(a1 + 2880) = *(_QWORD *)(a2 + 2880);
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_1ABF04F64(a1 + 2856);
  }
  v32 = *(_OWORD *)(a2 + 2872);
  *(_OWORD *)(a1 + 2856) = *(_OWORD *)(a2 + 2856);
  *(_OWORD *)(a1 + 2872) = v32;
LABEL_36:
  *(_QWORD *)(a1 + 2888) = *(_QWORD *)(a2 + 2888);
  *(_BYTE *)(a1 + 2896) = *(_BYTE *)(a2 + 2896);
  *(_BYTE *)(a1 + 2936) = *(_BYTE *)(a2 + 2936);
  v33 = *(_OWORD *)(a2 + 2920);
  *(_OWORD *)(a1 + 2904) = *(_OWORD *)(a2 + 2904);
  *(_OWORD *)(a1 + 2920) = v33;
  *(_QWORD *)(a1 + 2944) = *(_QWORD *)(a2 + 2944);
  *(_QWORD *)(a1 + 2952) = *(_QWORD *)(a2 + 2952);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 2960) = *(_QWORD *)(a2 + 2960);
  *(_QWORD *)(a1 + 2968) = *(_QWORD *)(a2 + 2968);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 2976) = *(_QWORD *)(a2 + 2976);
  *(_BYTE *)(a1 + 2984) = *(_BYTE *)(a2 + 2984);
  *(_QWORD *)(a1 + 2992) = *(_QWORD *)(a2 + 2992);
  *(_BYTE *)(a1 + 3000) = *(_BYTE *)(a2 + 3000);
  *(_QWORD *)(a1 + 3008) = *(_QWORD *)(a2 + 3008);
  *(_QWORD *)(a1 + 3016) = *(_QWORD *)(a2 + 3016);
  *(_BYTE *)(a1 + 3024) = v4[1472];
  *(_QWORD *)(a1 + 3032) = *(_QWORD *)(a2 + 3032);
  *(_QWORD *)(a1 + 3040) = *(_QWORD *)(a2 + 3040);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 3048) = *(_OWORD *)(a2 + 3048);
  *(_QWORD *)(a1 + 3064) = *(_QWORD *)(a2 + 3064);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3072) = *(_QWORD *)(a2 + 3072);
  *(_BYTE *)(a1 + 3080) = v4[1528];
  *(_QWORD *)(a1 + 3088) = *(_QWORD *)(a2 + 3088);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3096) = *(_QWORD *)(a2 + 3096);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 3104) = *(_QWORD *)(a2 + 3104);
  *(_QWORD *)(a1 + 3112) = *(_QWORD *)(a2 + 3112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for LanguageConfig(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[21])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[60] != 1)
    {
      if (a1[40] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[44] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[48] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[52] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[56] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[78] != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LanguageConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v62;
  uint64_t v63;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (!v9)
  {
    v32 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v32;
    v11 = *(_QWORD *)(a2 + 168);
    if (v11)
      goto LABEL_3;
LABEL_6:
    memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x1F9uLL);
    goto LABEL_24;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v11 = *(_QWORD *)(a2 + 168);
  if (!v11)
    goto LABEL_6;
LABEL_3:
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v13 = *(_QWORD *)(a2 + 176);
  v14 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 168) = v11;
  *(_QWORD *)(a1 + 176) = v13;
  v15 = *(_QWORD *)(a2 + 192);
  v16 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 184) = v14;
  *(_QWORD *)(a1 + 192) = v15;
  v17 = *(_QWORD *)(a2 + 208);
  v18 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 200) = v16;
  *(_QWORD *)(a1 + 208) = v17;
  v19 = *(_QWORD *)(a2 + 224);
  v20 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 216) = v18;
  *(_QWORD *)(a1 + 224) = v19;
  v21 = *(_QWORD *)(a2 + 240);
  v22 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 232) = v20;
  *(_QWORD *)(a1 + 240) = v21;
  *(_QWORD *)(a1 + 248) = v22;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  v23 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v23;
  v62 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v62;
  v63 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v63;
  v24 = (_OWORD *)(a1 + 320);
  v25 = (_OWORD *)(a2 + 320);
  v26 = *(_QWORD *)(a2 + 480);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v26 == 1)
  {
    v27 = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 464) = v27;
    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
    v28 = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = v28;
    v29 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v29;
    v30 = *(_OWORD *)(a2 + 336);
    *v24 = *v25;
    *(_OWORD *)(a1 + 336) = v30;
    v31 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v31;
  }
  else
  {
    if (*(_QWORD *)v25 == 1)
    {
      v33 = *(_OWORD *)(a2 + 336);
      *v24 = *v25;
      *(_OWORD *)(a1 + 336) = v33;
    }
    else
    {
      v34 = *(_QWORD *)(a2 + 328);
      v35 = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 320) = *(_QWORD *)v25;
      *(_QWORD *)(a1 + 328) = v34;
      v36 = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 336) = v35;
      *(_QWORD *)(a1 + 344) = v36;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v37 = *(_QWORD *)(a2 + 352);
    if (v37 == 1)
    {
      v38 = *(_OWORD *)(a2 + 368);
      *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 368) = v38;
    }
    else
    {
      v39 = *(_QWORD *)(a2 + 360);
      v40 = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 352) = v37;
      *(_QWORD *)(a1 + 360) = v39;
      v41 = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 368) = v40;
      *(_QWORD *)(a1 + 376) = v41;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v42 = *(_QWORD *)(a2 + 384);
    if (v42 == 1)
    {
      v43 = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(_OWORD *)(a1 + 400) = v43;
    }
    else
    {
      v44 = *(_QWORD *)(a2 + 392);
      v45 = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 384) = v42;
      *(_QWORD *)(a1 + 392) = v44;
      v46 = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 400) = v45;
      *(_QWORD *)(a1 + 408) = v46;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v47 = *(_QWORD *)(a2 + 416);
    if (v47 == 1)
    {
      v48 = *(_OWORD *)(a2 + 432);
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 432) = v48;
    }
    else
    {
      v49 = *(_QWORD *)(a2 + 424);
      v50 = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 416) = v47;
      *(_QWORD *)(a1 + 424) = v49;
      v51 = *(_QWORD *)(a2 + 440);
      *(_QWORD *)(a1 + 432) = v50;
      *(_QWORD *)(a1 + 440) = v51;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v52 = *(_QWORD *)(a2 + 448);
    if (v52 == 1)
    {
      v53 = *(_OWORD *)(a2 + 464);
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      *(_OWORD *)(a1 + 464) = v53;
    }
    else
    {
      v54 = *(_QWORD *)(a2 + 456);
      v55 = *(_QWORD *)(a2 + 464);
      *(_QWORD *)(a1 + 448) = v52;
      *(_QWORD *)(a1 + 456) = v54;
      v56 = *(_QWORD *)(a2 + 472);
      *(_QWORD *)(a1 + 464) = v55;
      *(_QWORD *)(a1 + 472) = v56;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    *(_QWORD *)(a1 + 480) = v26;
    sub_1ABF2FF5C();
  }
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_WORD *)(a1 + 592) = *(_WORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
LABEL_24:
  v57 = *(_QWORD *)(a2 + 624);
  if (v57 == 1)
  {
    v58 = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
    *(_OWORD *)(a1 + 672) = v58;
    *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
    v59 = *(_OWORD *)(a2 + 640);
    *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
    *(_OWORD *)(a1 + 640) = v59;
  }
  else
  {
    *(_QWORD *)(a1 + 624) = v57;
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
    *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
    *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
    *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
    *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
    *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
    *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
    *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
    sub_1ABF2FF5C();
  }
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
  v60 = *(_OWORD *)(a2 + 728);
  *(_OWORD *)(a1 + 712) = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 728) = v60;
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for LanguageConfig(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 *v10;
  __int128 *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 *v21;
  __int128 *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  _OWORD *v62;
  _OWORD *v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  _OWORD *v67;
  _OWORD *v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  _OWORD *v72;
  _OWORD *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  _OWORD *v77;
  _OWORD *v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  _OWORD *v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v104;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 80);
  v5 = (_OWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    }
    else
    {
      sub_1ABF07278(a1 + 80);
      v7 = *(_OWORD *)(a2 + 96);
      *v4 = *v5;
      *(_OWORD *)(a1 + 96) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 96);
    *v4 = *v5;
    *(_OWORD *)(a1 + 96) = v8;
  }
  v9 = *(_QWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 168))
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
      *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
      *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      v10 = (__int128 *)(a1 + 320);
      v11 = (__int128 *)(a2 + 320);
      v12 = *(_QWORD *)(a2 + 480);
      if (*(_QWORD *)(a1 + 480) == 1)
      {
        if (v12 == 1)
        {
          v13 = *v11;
          v14 = *(_OWORD *)(a2 + 352);
          *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
          *(_OWORD *)(a1 + 352) = v14;
          *v10 = v13;
          v15 = *(_OWORD *)(a2 + 368);
          v16 = *(_OWORD *)(a2 + 384);
          v17 = *(_OWORD *)(a2 + 416);
          *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
          *(_OWORD *)(a1 + 416) = v17;
          *(_OWORD *)(a1 + 368) = v15;
          *(_OWORD *)(a1 + 384) = v16;
          v18 = *(_OWORD *)(a2 + 432);
          v19 = *(_OWORD *)(a2 + 448);
          v20 = *(_OWORD *)(a2 + 464);
          *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
          *(_OWORD *)(a1 + 448) = v19;
          *(_OWORD *)(a1 + 464) = v20;
          *(_OWORD *)(a1 + 432) = v18;
        }
        else
        {
          if (*(_QWORD *)v11 == 1)
          {
            v40 = *(_OWORD *)(a2 + 336);
            *v10 = *v11;
            *(_OWORD *)(a1 + 336) = v40;
          }
          else
          {
            *(_QWORD *)(a1 + 320) = *(_QWORD *)v11;
            *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
            *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
            *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
          }
          v53 = *(_QWORD *)(a2 + 352);
          if (v53 == 1)
          {
            v54 = *(_OWORD *)(a2 + 368);
            *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
            *(_OWORD *)(a1 + 368) = v54;
          }
          else
          {
            *(_QWORD *)(a1 + 352) = v53;
            *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
            *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
            *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
          }
          v56 = *(_QWORD *)(a2 + 384);
          if (v56 == 1)
          {
            v57 = *(_OWORD *)(a2 + 400);
            *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
            *(_OWORD *)(a1 + 400) = v57;
          }
          else
          {
            *(_QWORD *)(a1 + 384) = v56;
            *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
            *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
            *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
          }
          v58 = *(_QWORD *)(a2 + 416);
          if (v58 == 1)
          {
            v59 = *(_OWORD *)(a2 + 432);
            *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
            *(_OWORD *)(a1 + 432) = v59;
          }
          else
          {
            *(_QWORD *)(a1 + 416) = v58;
            *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
            *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
            *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
          }
          v60 = *(_QWORD *)(a2 + 448);
          if (v60 == 1)
          {
            v61 = *(_OWORD *)(a2 + 464);
            *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
            *(_OWORD *)(a1 + 464) = v61;
          }
          else
          {
            *(_QWORD *)(a1 + 448) = v60;
            *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
            *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
            *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
          }
          *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
          sub_1ABF2FF5C();
        }
      }
      else if (v12 == 1)
      {
        sub_1ABDD0088((_QWORD *)(a1 + 320));
        v32 = *(_OWORD *)(a2 + 336);
        v31 = *(_OWORD *)(a2 + 352);
        *v10 = *v11;
        *(_OWORD *)(a1 + 336) = v32;
        *(_OWORD *)(a1 + 352) = v31;
        v33 = *(_OWORD *)(a2 + 416);
        v35 = *(_OWORD *)(a2 + 368);
        v34 = *(_OWORD *)(a2 + 384);
        *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
        *(_OWORD *)(a1 + 416) = v33;
        *(_OWORD *)(a1 + 368) = v35;
        *(_OWORD *)(a1 + 384) = v34;
        v37 = *(_OWORD *)(a2 + 448);
        v36 = *(_OWORD *)(a2 + 464);
        v38 = *(_OWORD *)(a2 + 432);
        *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
        *(_OWORD *)(a1 + 448) = v37;
        *(_OWORD *)(a1 + 464) = v36;
        *(_OWORD *)(a1 + 432) = v38;
      }
      else
      {
        v41 = *(_QWORD *)v11;
        if (*(_QWORD *)v10 == 1)
        {
          if (v41 == 1)
          {
            v42 = *(_OWORD *)(a2 + 336);
            *v10 = *v11;
            *(_OWORD *)(a1 + 336) = v42;
          }
          else
          {
            *(_QWORD *)(a1 + 320) = v41;
            *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
            *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
            *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
          }
        }
        else if (v41 == 1)
        {
          sub_1ABDD0054(a1 + 320);
          v55 = *(_OWORD *)(a2 + 336);
          *v10 = *v11;
          *(_OWORD *)(a1 + 336) = v55;
        }
        else
        {
          *(_QWORD *)(a1 + 320) = v41;
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
        }
        v62 = (_OWORD *)(a1 + 352);
        v63 = (_OWORD *)(a2 + 352);
        v64 = *(_QWORD *)(a2 + 352);
        if (*(_QWORD *)(a1 + 352) == 1)
        {
          if (v64 == 1)
          {
            v65 = *(_OWORD *)(a2 + 368);
            *v62 = *v63;
            *(_OWORD *)(a1 + 368) = v65;
          }
          else
          {
            *(_QWORD *)(a1 + 352) = v64;
            *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
            *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
            *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
          }
        }
        else if (v64 == 1)
        {
          sub_1ABDD0054(a1 + 352);
          v66 = *(_OWORD *)(a2 + 368);
          *v62 = *v63;
          *(_OWORD *)(a1 + 368) = v66;
        }
        else
        {
          *(_QWORD *)(a1 + 352) = v64;
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
        }
        v67 = (_OWORD *)(a1 + 384);
        v68 = (_OWORD *)(a2 + 384);
        v69 = *(_QWORD *)(a2 + 384);
        if (*(_QWORD *)(a1 + 384) == 1)
        {
          if (v69 == 1)
          {
            v70 = *(_OWORD *)(a2 + 400);
            *v67 = *v68;
            *(_OWORD *)(a1 + 400) = v70;
          }
          else
          {
            *(_QWORD *)(a1 + 384) = v69;
            *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
            *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
            *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
          }
        }
        else if (v69 == 1)
        {
          sub_1ABDD0054(a1 + 384);
          v71 = *(_OWORD *)(a2 + 400);
          *v67 = *v68;
          *(_OWORD *)(a1 + 400) = v71;
        }
        else
        {
          *(_QWORD *)(a1 + 384) = v69;
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
        }
        v72 = (_OWORD *)(a1 + 416);
        v73 = (_OWORD *)(a2 + 416);
        v74 = *(_QWORD *)(a2 + 416);
        if (*(_QWORD *)(a1 + 416) == 1)
        {
          if (v74 == 1)
          {
            v75 = *(_OWORD *)(a2 + 432);
            *v72 = *v73;
            *(_OWORD *)(a1 + 432) = v75;
          }
          else
          {
            *(_QWORD *)(a1 + 416) = v74;
            *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
            *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
            *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
          }
        }
        else if (v74 == 1)
        {
          sub_1ABDD0054(a1 + 416);
          v76 = *(_OWORD *)(a2 + 432);
          *v72 = *v73;
          *(_OWORD *)(a1 + 432) = v76;
        }
        else
        {
          *(_QWORD *)(a1 + 416) = v74;
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
        }
        v77 = (_OWORD *)(a1 + 448);
        v78 = (_OWORD *)(a2 + 448);
        v79 = *(_QWORD *)(a2 + 448);
        if (*(_QWORD *)(a1 + 448) == 1)
        {
          if (v79 == 1)
          {
            v80 = *(_OWORD *)(a2 + 464);
            *v77 = *v78;
            *(_OWORD *)(a1 + 464) = v80;
          }
          else
          {
            *(_QWORD *)(a1 + 448) = v79;
            *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
            *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
            *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
          }
        }
        else if (v79 == 1)
        {
          sub_1ABDD0054(a1 + 448);
          v81 = *(_OWORD *)(a2 + 464);
          *v77 = *v78;
          *(_OWORD *)(a1 + 464) = v81;
        }
        else
        {
          *(_QWORD *)(a1 + 448) = v79;
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
        }
        *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
        sub_1ABF2FF5C();
        swift_bridgeObjectRelease();
      }
      v82 = *(_QWORD *)(a2 + 488);
      *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
      *(_QWORD *)(a1 + 488) = v82;
      v83 = *(_QWORD *)(a2 + 504);
      *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
      *(_QWORD *)(a1 + 504) = v83;
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
      *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
      *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
      *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
      *(_BYTE *)(a1 + 593) = *(_BYTE *)(a2 + 593);
      *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
      *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
      goto LABEL_90;
    }
    sub_1ABF072AC((_QWORD *)(a1 + 112));
LABEL_17:
    memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x1F9uLL);
    goto LABEL_90;
  }
  if (!v9)
    goto LABEL_17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  v21 = (__int128 *)(a1 + 320);
  v22 = (__int128 *)(a2 + 320);
  v104 = *(_QWORD *)(a2 + 480);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v104 == 1)
  {
    v23 = *v22;
    v24 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v24;
    *v21 = v23;
    v25 = *(_OWORD *)(a2 + 368);
    v26 = *(_OWORD *)(a2 + 384);
    v27 = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 416) = v27;
    *(_OWORD *)(a1 + 368) = v25;
    *(_OWORD *)(a1 + 384) = v26;
    v28 = *(_OWORD *)(a2 + 432);
    v29 = *(_OWORD *)(a2 + 448);
    v30 = *(_OWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 448) = v29;
    *(_OWORD *)(a1 + 464) = v30;
    *(_OWORD *)(a1 + 432) = v28;
  }
  else
  {
    if (*(_QWORD *)v22 == 1)
    {
      v39 = *(_OWORD *)(a2 + 336);
      *v21 = *v22;
      *(_OWORD *)(a1 + 336) = v39;
    }
    else
    {
      *(_QWORD *)(a1 + 320) = *(_QWORD *)v22;
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v43 = *(_QWORD *)(a2 + 352);
    if (v43 == 1)
    {
      v44 = *(_OWORD *)(a2 + 368);
      *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 368) = v44;
    }
    else
    {
      *(_QWORD *)(a1 + 352) = v43;
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v45 = *(_QWORD *)(a2 + 384);
    if (v45 == 1)
    {
      v46 = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(_OWORD *)(a1 + 400) = v46;
    }
    else
    {
      *(_QWORD *)(a1 + 384) = v45;
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v47 = *(_QWORD *)(a2 + 416);
    if (v47 == 1)
    {
      v48 = *(_OWORD *)(a2 + 432);
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 432) = v48;
    }
    else
    {
      *(_QWORD *)(a1 + 416) = v47;
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v49 = *(_QWORD *)(a2 + 448);
    if (v49 == 1)
    {
      v50 = *(_OWORD *)(a2 + 464);
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      *(_OWORD *)(a1 + 464) = v50;
    }
    else
    {
      *(_QWORD *)(a1 + 448) = v49;
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
      *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
    sub_1ABF2FF5C();
  }
  v51 = *(_QWORD *)(a2 + 488);
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = v51;
  v52 = *(_QWORD *)(a2 + 504);
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = v52;
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_BYTE *)(a1 + 593) = *(_BYTE *)(a2 + 593);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
LABEL_90:
  v84 = (_OWORD *)(a1 + 624);
  v85 = (_OWORD *)(a2 + 624);
  v86 = *(_QWORD *)(a2 + 624);
  if (*(_QWORD *)(a1 + 624) == 1)
  {
    if (v86 == 1)
    {
      *v84 = *v85;
      v87 = *(_OWORD *)(a2 + 640);
      v88 = *(_OWORD *)(a2 + 656);
      v89 = *(_OWORD *)(a2 + 672);
      *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
      *(_OWORD *)(a1 + 656) = v88;
      *(_OWORD *)(a1 + 672) = v89;
      *(_OWORD *)(a1 + 640) = v87;
    }
    else
    {
      *(_QWORD *)(a1 + 624) = v86;
      v93 = *(_QWORD *)(a2 + 632);
      *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
      *(_QWORD *)(a1 + 632) = v93;
      v94 = *(_QWORD *)(a2 + 648);
      *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
      *(_QWORD *)(a1 + 648) = v94;
      v95 = *(_QWORD *)(a2 + 664);
      *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
      *(_QWORD *)(a1 + 664) = v95;
      v96 = *(_QWORD *)(a2 + 680);
      *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
      *(_QWORD *)(a1 + 680) = v96;
      sub_1ABF2FF5C();
    }
  }
  else if (v86 == 1)
  {
    sub_1ABF072E0(a1 + 624);
    *v84 = *v85;
    v91 = *(_OWORD *)(a2 + 656);
    v90 = *(_OWORD *)(a2 + 672);
    v92 = *(_OWORD *)(a2 + 640);
    *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
    *(_OWORD *)(a1 + 656) = v91;
    *(_OWORD *)(a1 + 672) = v90;
    *(_OWORD *)(a1 + 640) = v92;
  }
  else
  {
    *(_QWORD *)(a1 + 624) = v86;
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    v97 = *(_QWORD *)(a2 + 632);
    *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
    *(_QWORD *)(a1 + 632) = v97;
    v98 = *(_QWORD *)(a2 + 648);
    *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
    *(_QWORD *)(a1 + 648) = v98;
    v99 = *(_QWORD *)(a2 + 664);
    *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
    *(_QWORD *)(a1 + 664) = v99;
    v100 = *(_QWORD *)(a2 + 680);
    *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
    *(_QWORD *)(a1 + 680) = v100;
  }
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v101 = *(_OWORD *)(a2 + 712);
  v102 = *(_OWORD *)(a2 + 728);
  *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
  *(_OWORD *)(a1 + 712) = v101;
  *(_OWORD *)(a1 + 728) = v102;
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABF07278(uint64_t a1)
{
  destroy for TopStoriesConfiguration();
  return a1;
}

_QWORD *sub_1ABF072AC(_QWORD *a1)
{
  destroy for PaidBundleConfiguration(a1);
  return a1;
}

uint64_t sub_1ABF072E0(uint64_t a1)
{
  destroy for PaidBundleViaOfferConfiguration();
  return a1;
}

void *__swift_memcpy792_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x318uLL);
}

uint64_t assignWithTake for LanguageConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 88))
  {
    v9 = *(_QWORD *)(a2 + 88);
    if (v9)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      goto LABEL_6;
    }
    sub_1ABF07278(a1 + 80);
  }
  v10 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v10;
LABEL_6:
  if (!*(_QWORD *)(a1 + 168))
  {
LABEL_13:
    memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x1F9uLL);
    goto LABEL_41;
  }
  if (!*(_QWORD *)(a2 + 168))
  {
    sub_1ABF072AC((_QWORD *)(a1 + 112));
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  *(_BYTE *)(a1 + 130) = *(_BYTE *)(a2 + 130);
  *(_BYTE *)(a1 + 131) = *(_BYTE *)(a2 + 131);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  v16 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRelease();
  v17 = (_QWORD *)(a1 + 320);
  v18 = (_QWORD *)(a2 + 320);
  if (*(_QWORD *)(a1 + 480) != 1)
  {
    if (*(_QWORD *)(a2 + 480) == 1)
    {
      sub_1ABDD0088((_QWORD *)(a1 + 320));
      goto LABEL_11;
    }
    if (*v17 != 1)
    {
      if (*v18 != 1)
      {
        *(_QWORD *)(a1 + 320) = *v18;
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
        swift_bridgeObjectRelease();
LABEL_19:
        if (*(_QWORD *)(a1 + 352) != 1)
        {
          v25 = *(_QWORD *)(a2 + 352);
          if (v25 != 1)
          {
            *(_QWORD *)(a1 + 352) = v25;
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
            swift_bridgeObjectRelease();
LABEL_24:
            if (*(_QWORD *)(a1 + 384) != 1)
            {
              v27 = *(_QWORD *)(a2 + 384);
              if (v27 != 1)
              {
                *(_QWORD *)(a1 + 384) = v27;
                swift_bridgeObjectRelease();
                *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
                swift_bridgeObjectRelease();
                *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
                swift_bridgeObjectRelease();
                *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
                swift_bridgeObjectRelease();
LABEL_29:
                if (*(_QWORD *)(a1 + 416) != 1)
                {
                  v29 = *(_QWORD *)(a2 + 416);
                  if (v29 != 1)
                  {
                    *(_QWORD *)(a1 + 416) = v29;
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
                    swift_bridgeObjectRelease();
LABEL_34:
                    if (*(_QWORD *)(a1 + 448) != 1)
                    {
                      v31 = *(_QWORD *)(a2 + 448);
                      if (v31 != 1)
                      {
                        *(_QWORD *)(a1 + 448) = v31;
                        swift_bridgeObjectRelease();
                        *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
                        swift_bridgeObjectRelease();
                        *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
                        swift_bridgeObjectRelease();
                        *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
                        swift_bridgeObjectRelease();
                        goto LABEL_39;
                      }
                      sub_1ABDD0054(a1 + 448);
                    }
                    v32 = *(_OWORD *)(a2 + 464);
                    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
                    *(_OWORD *)(a1 + 464) = v32;
LABEL_39:
                    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
                    swift_bridgeObjectRelease();
                    goto LABEL_40;
                  }
                  sub_1ABDD0054(a1 + 416);
                }
                v30 = *(_OWORD *)(a2 + 432);
                *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
                *(_OWORD *)(a1 + 432) = v30;
                goto LABEL_34;
              }
              sub_1ABDD0054(a1 + 384);
            }
            v28 = *(_OWORD *)(a2 + 400);
            *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
            *(_OWORD *)(a1 + 400) = v28;
            goto LABEL_29;
          }
          sub_1ABDD0054(a1 + 352);
        }
        v26 = *(_OWORD *)(a2 + 368);
        *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
        *(_OWORD *)(a1 + 368) = v26;
        goto LABEL_24;
      }
      sub_1ABDD0054(a1 + 320);
    }
    v24 = *(_OWORD *)(a2 + 336);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(a1 + 336) = v24;
    goto LABEL_19;
  }
LABEL_11:
  v19 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v19;
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  v20 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v20;
  v21 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v21;
  v22 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_OWORD *)(a1 + 336) = v22;
  v23 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v23;
LABEL_40:
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_BYTE *)(a1 + 593) = *(_BYTE *)(a2 + 593);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 616) = *(_BYTE *)(a2 + 616);
LABEL_41:
  if (*(_QWORD *)(a1 + 624) != 1)
  {
    v33 = *(_QWORD *)(a2 + 624);
    if (v33 != 1)
    {
      *(_QWORD *)(a1 + 624) = v33;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
      *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
      *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
      *(_BYTE *)(a1 + 656) = *(_BYTE *)(a2 + 656);
      *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
      *(_BYTE *)(a1 + 672) = *(_BYTE *)(a2 + 672);
      *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
      *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
      goto LABEL_46;
    }
    sub_1ABF072E0(a1 + 624);
  }
  v34 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v34;
  *(_BYTE *)(a1 + 688) = *(_BYTE *)(a2 + 688);
  v35 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v35;
LABEL_46:
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  swift_bridgeObjectRelease();
  v36 = *(_OWORD *)(a2 + 728);
  *(_OWORD *)(a1 + 712) = *(_OWORD *)(a2 + 712);
  *(_OWORD *)(a1 + 728) = v36;
  *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_QWORD *)(a1 + 776) = *(_QWORD *)(a2 + 776);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LanguageConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 792))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguageConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 792) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 792) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageConfig()
{
  return &type metadata for LanguageConfig;
}

uint64_t getEnumTagSinglePayload for AppConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0x80)
    goto LABEL_17;
  if (a2 + 128 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 128) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 128;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 128;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 128;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x81;
  v8 = v6 - 129;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AppConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 128 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 128) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x80)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7F)
    return ((uint64_t (*)(void))((char *)&loc_1ABF07BA0 + 4 * byte_1ABF4F201[v4]))();
  *a1 = a2 + 0x80;
  return ((uint64_t (*)(void))((char *)sub_1ABF07BD4 + 4 * byte_1ABF4F1FC[v4]))();
}

uint64_t sub_1ABF07BD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF07BDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABF07BE4);
  return result;
}

uint64_t sub_1ABF07BF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABF07BF8);
  *(_BYTE *)result = a2 ^ 0x80;
  return result;
}

uint64_t sub_1ABF07BFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF07C04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppConfiguration.CodingKeys()
{
  return &type metadata for AppConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LocalizationKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABF07C6C + 4 * byte_1ABF4F20B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABF07CA0 + 4 * byte_1ABF4F206[v4]))();
}

uint64_t sub_1ABF07CA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF07CA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABF07CB0);
  return result;
}

uint64_t sub_1ABF07CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABF07CC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABF07CC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF07CD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocalizationKeys()
{
  return &type metadata for LocalizationKeys;
}

unint64_t sub_1ABF07CF0()
{
  unint64_t result;

  result = qword_1EEC45010;
  if (!qword_1EEC45010)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F57C, &type metadata for LocalizationKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC45010);
  }
  return result;
}

unint64_t sub_1ABF07D38()
{
  unint64_t result;

  result = qword_1EEC45018;
  if (!qword_1EEC45018)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F634, &type metadata for AppConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC45018);
  }
  return result;
}

unint64_t sub_1ABF07D80()
{
  unint64_t result;

  result = qword_1ED34EF00;
  if (!qword_1ED34EF00)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F5A4, &type metadata for AppConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EF00);
  }
  return result;
}

unint64_t sub_1ABF07DC8()
{
  unint64_t result;

  result = qword_1ED34EEF8;
  if (!qword_1ED34EEF8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F5CC, &type metadata for AppConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EEF8);
  }
  return result;
}

unint64_t sub_1ABF07E10()
{
  unint64_t result;

  result = qword_1ED34EF50;
  if (!qword_1ED34EF50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F4B4, &type metadata for LocalizationKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EF50);
  }
  return result;
}

unint64_t sub_1ABF07E58()
{
  unint64_t result;

  result = qword_1ED34EF48;
  if (!qword_1ED34EF48)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F4DC, &type metadata for LocalizationKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EF48);
  }
  return result;
}

uint64_t sub_1ABF07E9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61626C6C61467369 && a2 == 0xEA00000000006B63;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D7461657274 && a2 == 0xEC00000073444974 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53746E656D676573 && a2 == 0xED00007344497465 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001ABF634A0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001ABF634C0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF634E0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001ABF63500 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001ABF63520 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001ABF63550 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001ABF63570 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF635A0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001ABF635C0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001ABF635F0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001ABF63620 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ABF63650 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF63670 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001ABF63690 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001ABF636B0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001ABF636D0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001ABF636F0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001ABF63720 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001ABF63750 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001ABF63780 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ABF637B0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001ABF637D0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001ABF63800 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF63830 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001ABF63850 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF63870 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001ABF63890 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001ABF5BF50 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001ABF638B0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ABF638E0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001ABF63900 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001ABF63920 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001ABF63950 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001ABF63970 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001ABF63990 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD00000000000002ELL && a2 == 0x80000001ABF639C0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001ABF639F0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001ABF63A20 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000030 && a2 == 0x80000001ABF63A50 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001ABF63A90 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001ABF63AC0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001ABF5AB80 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001ABF5ABA0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001ABF5ABC0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001ABF63AF0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001ABF63B10 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0xD000000000000033 && a2 == 0x80000001ABF63B40 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001ABF63B80 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF5ABF0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 51;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001ABF5AC10 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 52;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF63BB0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 53;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xEF736769666E6F43 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 54;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ABF54FA0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 55;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ABF5B900 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 56;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF63BD0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 57;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001ABF54FE0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 58;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ABF63BF0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 59;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001ABF63C10 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 60;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ABF63C30 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 61;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001ABF63C50 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 62;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001ABF63C70 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 63;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001ABF63C90 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 64;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001ABF63CB0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 65;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001ABF63CE0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 66;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001ABF63D10 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 67;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001ABF63D40 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 68;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001ABF63D70 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 69;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001ABF63DA0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 70;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001ABF63DD0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 71;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001ABF63E00 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 72;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ABF63E30 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 73;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001ABF63E50 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 74;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ABF63E70 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 75;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001ABF63E90 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 76;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001ABF63EB0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 77;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001ABF63EE0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 78;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001ABF63F10 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 79;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ABF63F40 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 80;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001ABF63F60 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 81;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001ABF63F90 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 82;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF63FC0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 83;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001ABF63FE0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 84;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001ABF64000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 85;
  }
  else if (a1 == 0x6F43756F59726F66 && a2 == 0xEE0044496769666ELL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 86;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ABF5AB40 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 87;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001ABF5AB60 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 88;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ABF54F80 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 89;
  }
  else if (a1 == 0x6F4349557377656ELL && a2 == 0xEC0000006769666ELL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 90;
  }
  else if (a1 == 0x69666E6F43644169 && a2 == 0xE900000000000067 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 91;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001ABF5AC90 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 92;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001ABF64030 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 93;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001ABF5B1B0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 94;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001ABF64060 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 95;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001ABF5B210 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 96;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF5B230 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 97;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ABF64090 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 98;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ABF640B0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 99;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001ABF640D0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 100;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001ABF5B9B0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 101;
  }
  else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001ABF64100 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 102;
  }
  else if (a1 == 0x506C6C4165646968 && a2 == 0xEF736C6C61777961 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 103;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF5BA60 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 104;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ABF5BAA0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 105;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001ABF64130 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 106;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001ABF5B350 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 107;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF5B300 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 108;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001ABF64150 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 109;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF55000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 110;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001ABF55020 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 111;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001ABF55050 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 112;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001ABF64170 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 113;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ABF641A0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 114;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001ABF641C0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 115;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001ABF641E0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 116;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ABF64200 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 117;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001ABF64220 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 118;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001ABF64250 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 119;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001ABF64270 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 120;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ABF642A0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 121;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001ABF642C0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 122;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001ABF642F0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 123;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001ABF64310 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 124;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001ABF5B950 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 125;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001ABF64330 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 126;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001ABF64360 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 127;
  }
  else if (a1 == 0x43656C6369747261 && a2 == 0xED00006769666E6FLL)
  {
    swift_bridgeObjectRelease();
    return 128;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4294967168;
    else
      return 4294967169;
  }
}

unint64_t sub_1ABF0AA94()
{
  unint64_t result;

  result = qword_1ED34ED58;
  if (!qword_1ED34ED58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F83C, &type metadata for LanguageConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED58);
  }
  return result;
}

unint64_t sub_1ABF0AAD8()
{
  unint64_t result;

  result = qword_1ED34F590;
  if (!qword_1ED34F590)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B0BC, &type metadata for TopStoriesConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F590);
  }
  return result;
}

unint64_t sub_1ABF0AB1C()
{
  unint64_t result;

  result = qword_1ED34F510;
  if (!qword_1ED34F510)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B860, &type metadata for PaidBundleConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F510);
  }
  return result;
}

unint64_t sub_1ABF0AB60()
{
  unint64_t result;

  result = qword_1ED34F7E0;
  if (!qword_1ED34F7E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42EB0, &type metadata for PaidBundleViaOfferConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F7E0);
  }
  return result;
}

unint64_t sub_1ABF0ABA4()
{
  unint64_t result;

  result = qword_1ED34F708;
  if (!qword_1ED34F708)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42CB0, &type metadata for AppReviewPromptConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F708);
  }
  return result;
}

uint64_t sub_1ABF0ABE8(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a1 + 80);
  v12 = *(_QWORD *)(a1 + 88);
  v32 = *(_QWORD *)(a1 + 120);
  v33 = *(_QWORD *)(a1 + 112);
  v30 = *(_QWORD *)(a1 + 136);
  v31 = *(_QWORD *)(a1 + 128);
  v28 = *(_QWORD *)(a1 + 152);
  v29 = *(_QWORD *)(a1 + 144);
  v26 = *(_QWORD *)(a1 + 168);
  v27 = *(_QWORD *)(a1 + 160);
  v24 = *(_OWORD *)(a1 + 192);
  v25 = *(_OWORD *)(a1 + 176);
  v23 = *(_OWORD *)(a1 + 208);
  v22 = *(_OWORD *)(a1 + 224);
  v20 = *(_OWORD *)(a1 + 256);
  v21 = *(_OWORD *)(a1 + 240);
  v19 = *(_OWORD *)(a1 + 272);
  v18 = *(_OWORD *)(a1 + 288);
  v15 = *(_OWORD *)(a1 + 320);
  v16 = *(_OWORD *)(a1 + 304);
  v13 = *(_OWORD *)(a1 + 352);
  v14 = *(_OWORD *)(a1 + 336);
  v11 = *(_OWORD *)(a1 + 368);
  v9 = *(_OWORD *)(a1 + 400);
  v10 = *(_OWORD *)(a1 + 384);
  v7 = *(_OWORD *)(a1 + 432);
  v8 = *(_OWORD *)(a1 + 416);
  v5 = *(_OWORD *)(a1 + 464);
  v6 = *(_OWORD *)(a1 + 448);
  v4 = *(_OWORD *)(a1 + 480);
  v17 = *(_QWORD *)(a1 + 624);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABF02F1C(v2, v12);
  sub_1ABF02F4C(v33, v32, v31, v30, v29, v28, v27, v26, v25, *((uint64_t *)&v25 + 1), v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4);
  sub_1ABF0316C(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1ABF0AEE4()
{
  unint64_t result;

  result = qword_1ED34F488;
  if (!qword_1ED34F488)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F79C, &type metadata for EmbedProxyConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F488);
  }
  return result;
}

unint64_t sub_1ABF0AF28()
{
  unint64_t result;

  result = qword_1ED34F730;
  if (!qword_1ED34F730)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4CD8C, &type metadata for NewsPersonalizationTreatment);
    atomic_store(result, (unint64_t *)&qword_1ED34F730);
  }
  return result;
}

unint64_t sub_1ABF0AF6C()
{
  unint64_t result;

  result = qword_1ED34F6B0;
  if (!qword_1ED34F6B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43F70, &type metadata for ArticleScoringConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F6B0);
  }
  return result;
}

unint64_t sub_1ABF0AFB0()
{
  unint64_t result;

  result = qword_1ED34EDA8;
  if (!qword_1ED34EDA8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for AdConfiguration, &type metadata for AdConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34EDA8);
  }
  return result;
}

unint64_t sub_1ABF0AFF4()
{
  unint64_t result;

  result = qword_1ED34F278;
  if (!qword_1ED34F278)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF5049C, &type metadata for NewsUIConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F278);
  }
  return result;
}

void sub_1ABF0B038(void *a1)
{
  bzero(a1, 0x318uLL);
}

uint64_t getEnumTagSinglePayload for LanguageConfig.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LanguageConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1ABF0B11C + 4 * byte_1ABF4F215[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1ABF0B150 + 4 * byte_1ABF4F210[v4]))();
}

uint64_t sub_1ABF0B150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF0B158(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABF0B160);
  return result;
}

uint64_t sub_1ABF0B16C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABF0B174);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1ABF0B178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF0B180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LanguageConfig.CodingKeys()
{
  return &type metadata for LanguageConfig.CodingKeys;
}

unint64_t sub_1ABF0B1A0()
{
  unint64_t result;

  result = qword_1EEC45028[0];
  if (!qword_1EEC45028[0])
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F814, &type metadata for LanguageConfig.CodingKeys);
    atomic_store(result, qword_1EEC45028);
  }
  return result;
}

unint64_t sub_1ABF0B1E8()
{
  unint64_t result;

  result = qword_1ED34ED68;
  if (!qword_1ED34ED68)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F74C, &type metadata for LanguageConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED68);
  }
  return result;
}

unint64_t sub_1ABF0B230()
{
  unint64_t result;

  result = qword_1ED34ED60;
  if (!qword_1ED34ED60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F774, &type metadata for LanguageConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34ED60);
  }
  return result;
}

uint64_t sub_1ABF0B274()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD)
    return 13;
  else
    return v0;
}

uint64_t sub_1ABF0B2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for YahooBaseResponse.Query(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ABF0B340(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
    }
    else
    {
      v12 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v4 + 64) + ((v7 + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1ABF0B3CC + 4 * byte_1ABF4F890[v10]))();
  }
}

void sub_1ABF0B44C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 8) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X14 }
  }
  if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 8) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + ((v7 + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1ABF0B554()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1ABF0B60CLL);
}

void sub_1ABF0B55C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1ABF0B564);
  JUMPOUT(0x1ABF0B60CLL);
}

void sub_1ABF0B574()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1ABF0B60CLL);
}

void sub_1ABF0B57C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1ABF0B60CLL);
}

void sub_1ABF0B584(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x1ABF0B608);
      JUMPOUT(0x1ABF0B604);
    }
    JUMPOUT(0x1ABF0B590);
  }
  JUMPOUT(0x1ABF0B60CLL);
}

void sub_1ABF0B5FC()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x1ABF0B60CLL);
}

void sub_1ABF0B63C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x1ABF0B60CLL);
}

void sub_1ABF0B644()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1ABF0B60CLL);
}

void sub_1ABF0B654()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x1ABF0B60CLL);
}

uint64_t type metadata accessor for YahooBaseResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseResponse);
}

uint64_t type metadata accessor for YahooBaseResponse.Query(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseResponse.Query);
}

uint64_t sub_1ABF0B678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for YahooBaseResponse.QueryResults(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ABF0B6EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  _QWORD *v16;
  _QWORD *v17;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    sub_1ABF2FF68();
  }
  else
  {
    v13 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v14 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_1ABF2FF5C();
    v15(v13, v14, v4);
    v16 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v17 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v16 = *v17;
    v16[1] = v17[1];
    sub_1ABF2FF5C();
  }
  return a1;
}

uint64_t sub_1ABF0B7EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 8
                                                                                            + a1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1ABF0B858(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a2 + v7 + 8) & ~v7;
  v9 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
  sub_1ABF2FF5C();
  v9(((unint64_t)a1 + v7 + 8) & ~v7, v8, v5);
  v10 = ((v7 + 8) & ~v7) + *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v11[1] = v12[1];
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *sub_1ABF0B910(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + v7 + 8) & ~v7, ((unint64_t)a2 + v7 + 8) & ~v7);
  v8 = ((v7 + 8) & ~v7) + *(_QWORD *)(v6 + 64) + 7;
  v9 = (_QWORD *)(((unint64_t)a1 + v8) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)a2 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1ABF0B9C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & ~v6, ((unint64_t)a2 + v6 + 8) & ~v6);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64) + 7;
  *(_OWORD *)(((unint64_t)a1 + v7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1ABF0BA54(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + v7 + 8) & ~v7, ((unint64_t)a2 + v7 + 8) & ~v7);
  v8 = ((v7 + 8) & ~v7) + *(_QWORD *)(v6 + 64) + 7;
  v9 = (_QWORD *)(((unint64_t)a1 + v8) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)a2 + v8) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABF0BAFC(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
    }
    else
    {
      v12 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v4 + 64) + ((v7 + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1ABF0BB88 + 4 * byte_1ABF4F8A3[v10]))();
  }
}

void sub_1ABF0BC08(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 8) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X14 }
  }
  if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 8) & ~(_DWORD)v7) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + ((v7 + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1ABF0BD10()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1ABF0BDC8);
}

void sub_1ABF0BD18(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1ABF0BD20);
  JUMPOUT(0x1ABF0BDC8);
}

void sub_1ABF0BD30()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1ABF0BDC8);
}

void sub_1ABF0BD38()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1ABF0BDC8);
}

void sub_1ABF0BD40(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x1ABF0BDC4);
      JUMPOUT(0x1ABF0BDC0);
    }
    JUMPOUT(0x1ABF0BD4CLL);
  }
  JUMPOUT(0x1ABF0BDC8);
}

void sub_1ABF0BDB8()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x1ABF0BDC8);
}

void sub_1ABF0BDF8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x1ABF0BDC8);
}

void sub_1ABF0BE00()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1ABF0BDC8);
}

void sub_1ABF0BE10()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x1ABF0BDC8);
}

uint64_t type metadata accessor for YahooBaseResponse.QueryResults(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseResponse.QueryResults);
}

uint64_t sub_1ABF0BE28()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ABF0BEA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    sub_1ABF2FF68();
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_1ABF2FF5C();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_1ABF0BF60(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1ABF0BFA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  sub_1ABF2FF5C();
  v9(v7, v8, v4);
  return a1;
}

_QWORD *sub_1ABF0C014(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_1ABF0C084(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1ABF0C0D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1ABF0C13C(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1ABF0C210 + 4 * byte_1ABF4F8B6[(v9 - 1)]))();
}

void sub_1ABF0C280(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_1ABF0C4DC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x1ABF0C4C8);
}

void sub_1ABF0C4E4()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1ABF0C4C8);
}

void sub_1ABF0C4F4()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x1ABF0C4C8);
}

BOOL sub_1ABF0C500(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1ABF0C510()
{
  return sub_1ABF32314();
}

uint64_t sub_1ABF0C534(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73746C75736572 && a2 == 0xE700000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64657461657263 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1ABF0C624()
{
  sub_1ABF32308();
  sub_1ABF32314();
  return sub_1ABF32338();
}

uint64_t sub_1ABF0C668(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64657461657263;
  else
    return 0x73746C75736572;
}

uint64_t sub_1ABF0C698@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t Results;
  uint64_t v42;
  char v43;
  char v44;

  v34 = a5;
  Results = type metadata accessor for YahooBaseResponse.QueryResults(0, a2, a3, a4);
  v36 = *(_QWORD *)(Results - 8);
  MEMORY[0x1E0C80A78](Results);
  v37 = (char *)&v33 - v8;
  v10 = type metadata accessor for YahooBaseResponse.Query.CodingKeys(255, a2, a3, v9);
  MEMORY[0x1AF438F30](&unk_1ABF4FDD0, v10);
  v11 = sub_1ABF32128();
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - v12;
  v35 = type metadata accessor for YahooBaseResponse.Query(0, a2, a3, v14);
  v15 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v17 = (char *)&v33 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v38 = v13;
  v18 = v42;
  sub_1ABF3235C();
  if (v18)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v42 = v15;
  v19 = v35;
  v20 = v36;
  v21 = v17;
  v44 = 0;
  v22 = Results;
  MEMORY[0x1AF438F30](&unk_1ABF4F968, Results);
  v24 = v37;
  v23 = v38;
  v25 = v40;
  sub_1ABF32110();
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v21, v24, v22);
  v43 = 1;
  v26 = sub_1ABF3208C();
  v27 = v23;
  v29 = v28;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v25);
  v30 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  *v30 = v26;
  v30[1] = v29;
  v31 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v34, v21, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v21, v19);
}

BOOL sub_1ABF0C938()
{
  uint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_1ABF0C97C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABF0C500(*a1, *a2);
}

uint64_t sub_1ABF0C990()
{
  return sub_1ABF0C624();
}

uint64_t sub_1ABF0C9A0()
{
  return sub_1ABF0C510();
}

uint64_t sub_1ABF0C9B0()
{
  sub_1ABF32308();
  sub_1ABF0C510();
  return sub_1ABF32338();
}

uint64_t sub_1ABF0C9F4()
{
  char *v0;

  return sub_1ABF0C668(*v0);
}

uint64_t sub_1ABF0CA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABF0C534(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABF0CA30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDF4708();
  *a1 = result;
  return result;
}

uint64_t sub_1ABF0CA58(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4FDD0, a1);
  return sub_1ABF3238C();
}

uint64_t sub_1ABF0CA8C(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4FDD0, a1);
  return sub_1ABF32398();
}

uint64_t sub_1ABF0CAC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1ABF0C698(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t sub_1ABF0CADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1AF438F30](&unk_1ABF4FC10, a3);
  return sub_1ABF32260();
}

uint64_t sub_1ABF0CB30(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4FC10, a1);
  return sub_1ABF319A8();
}

uint64_t sub_1ABF0CB7C()
{
  MEMORY[0x1AF438F30](&unk_1ABF4FC10);
  return sub_1ABF319C0();
}

uint64_t sub_1ABF0CBCC()
{
  MEMORY[0x1AF438F30](&unk_1ABF4FC10);
  return sub_1ABF319B4();
}

BOOL sub_1ABF0CC1C@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1ABF0C938();
  *a1 = result;
  return result;
}

void sub_1ABF0CC50(_QWORD *a1@<X8>)
{
  *a1 = 1835365481;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1ABF0CC64()
{
  return 1835365481;
}

BOOL sub_1ABF0CC74@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1ABF0C938();
  *a1 = result;
  return result;
}

uint64_t sub_1ABF0CCA0(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4FD80, a1);
  return sub_1ABF3238C();
}

uint64_t sub_1ABF0CCD4(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4FD80, a1);
  return sub_1ABF32398();
}

uint64_t sub_1ABF0CD08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t Results;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;

  v54 = a5;
  v8 = type metadata accessor for YahooBaseResponse.Item(255, a2, a3, a4);
  v9 = sub_1ABF31D5C();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x1E0C80A78](v9);
  v53 = (char *)&v45 - v10;
  v11 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  v60 = v11;
  MEMORY[0x1E0C80A78](v12);
  v49 = (char *)&v45 - v13;
  v15 = type metadata accessor for YahooBaseResponse.QueryResults.CodingKeys(255, a2, a3, v14);
  MEMORY[0x1AF438F30](&unk_1ABF4FD80, v15);
  v16 = sub_1ABF32128();
  v56 = *(_QWORD *)(v16 - 8);
  v57 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v45 - v17;
  v55 = a2;
  v52 = a3;
  Results = type metadata accessor for YahooBaseResponse.QueryResults(0, a2, a3, v19);
  v21 = *(_QWORD *)(Results - 8);
  MEMORY[0x1E0C80A78](Results);
  v23 = (char *)&v45 - v22;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v58 = v18;
  v24 = v61;
  sub_1ABF3235C();
  if (v24)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v46 = v21;
  v47 = Results;
  v61 = v23;
  v48 = a1;
  v26 = v59;
  v27 = sub_1ABF31A98();
  v62 = MEMORY[0x1AF438F30](&unk_1ABF4FD58, v26);
  MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v27, &v62);
  v29 = v57;
  v28 = v58;
  sub_1ABF32110();
  v30 = v28;
  v31 = v63;
  *v61 = v63;
  v63 = v31;
  MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF50], v27);
  v32 = v53;
  sub_1ABF31B94();
  v33 = v60;
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48))(v32, 1, v26);
  v35 = v54;
  v36 = v55;
  v37 = v52;
  if (v34 == 1)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v51);
    v39 = type metadata accessor for YahooBaseResponse.Errors(0, v36, v37, v38);
    MEMORY[0x1AF438F30](&unk_1ABF4FD18, v39);
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v29);
    v40 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v41 = v49;
    v40(v49, v32, v26);
    v42 = v47;
    v43 = v61;
    v40((char *)v61 + *(int *)(v47 + 36), v41, v26);
    v44 = v46;
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v46 + 16))(v35, v43, v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    return (*(uint64_t (**)(_QWORD *, uint64_t))(v44 + 8))(v43, v42);
  }
}

uint64_t sub_1ABF0D170(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1ABF0D1F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v31 = a4;
  v30 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v32 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for YahooBaseResponse.Item.CodingKeys(255, v8, v9, v10);
  MEMORY[0x1AF438F30](&unk_1ABF4FF38, v11);
  v33 = sub_1ABF32128();
  v27 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v13 = (char *)&v26 - v12;
  v28 = a2;
  v29 = a3;
  v15 = type metadata accessor for YahooBaseResponse.Item(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v26 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v19 = v34;
  sub_1ABF3235C();
  if (!v19)
  {
    v20 = v18;
    v26 = v16;
    v34 = v15;
    v21 = v27;
    v22 = v28;
    v24 = v30;
    v23 = v31;
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v33);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v20, v32, v22);
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v23, v20, v34);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ABF0D3F0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1ABF0D46C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v28 = a5;
  v29 = type metadata accessor for YahooBaseResponse.Query(0, a2, a3, a4);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v30 = (char *)&v24 - v8;
  v10 = type metadata accessor for YahooBaseResponse.CodingKeys(255, a2, a3, v9);
  MEMORY[0x1AF438F30](&unk_1ABF4FE20, v10);
  v31 = sub_1ABF32128();
  v25 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v12 = (char *)&v24 - v11;
  v24 = type metadata accessor for YahooBaseResponse(0, a2, a3, v13);
  v14 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v16 = (char *)&v24 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v26 = v12;
  v17 = v32;
  sub_1ABF3235C();
  if (!v17)
  {
    v32 = v14;
    v18 = v25;
    v20 = v27;
    v19 = v28;
    v21 = v29;
    MEMORY[0x1AF438F30](&unk_1ABF4F990, v29);
    v22 = v26;
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v31);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v16, v30, v21);
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v19, v16, v24);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ABF0D680@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1ABF0CD08(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t sub_1ABF0D69C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABF0D170(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1ABF0D6CC(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4FF38, a1);
  return sub_1ABF3238C();
}

uint64_t sub_1ABF0D700(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4FF38, a1);
  return sub_1ABF32398();
}

uint64_t sub_1ABF0D734@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ABF0D1F4(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1ABF0D750()
{
  return 0x7972657571;
}

uint64_t sub_1ABF0D764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABF0D3F0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1ABF0D794@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABD38BF4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1ABF0D7C0(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4FE20, a1);
  return sub_1ABF3238C();
}

uint64_t sub_1ABF0D7F4(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF4FE20, a1);
  return sub_1ABF32398();
}

uint64_t sub_1ABF0D828@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1ABF0D46C(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t type metadata accessor for YahooBaseResponse.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseResponse.CodingKeys);
}

uint64_t type metadata accessor for YahooBaseResponse.Query.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseResponse.Query.CodingKeys);
}

uint64_t type metadata accessor for YahooBaseResponse.Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseResponse.Item);
}

uint64_t type metadata accessor for YahooBaseResponse.QueryResults.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseResponse.QueryResults.CodingKeys);
}

uint64_t type metadata accessor for YahooBaseResponse.Errors(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseResponse.Errors);
}

uint64_t sub_1ABF0D884(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABF0D8D0 + 4 * byte_1ABF4F8CD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABF0D904 + 4 * byte_1ABF4F8C8[v4]))();
}

uint64_t sub_1ABF0D904(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF0D90C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABF0D914);
  return result;
}

uint64_t sub_1ABF0D920(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABF0D928);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABF0D92C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF0D934(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF0D940()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ABF0D9AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    sub_1ABF2FF68();
  }
  return v3;
}

uint64_t sub_1ABF0DA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1ABF0DA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1ABF0DA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1ABF0DAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1ABF0DADC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1ABF0DB8C + 4 * byte_1ABF4F8D2[(v7 - 1)]))();
}

void sub_1ABF0DBDC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_1ABF0DD8C()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DD9C()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DDAC()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DDBC()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DDCC()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DDDC()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DDEC()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DDFC()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DE0C()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DE1C()
{
  JUMPOUT(0x1AF438F30);
}

uint64_t type metadata accessor for YahooBaseResponse.Item.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseResponse.Item.CodingKeys);
}

uint64_t sub_1ABF0DE38(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABF0DE78 + 4 * byte_1ABF4F8E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABF0DE98 + 4 * byte_1ABF4F8E5[v4]))();
}

_BYTE *sub_1ABF0DE78(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABF0DE98(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABF0DEA0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABF0DEA8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABF0DEB0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABF0DEB8(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1ABF0DEC4()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DED4()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABF0DEE4()
{
  JUMPOUT(0x1AF438F30);
}

ValueMetadata *type metadata accessor for CurrencyManagerCacheKey()
{
  return &type metadata for CurrencyManagerCacheKey;
}

uint64_t sub_1ABF0DF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  int v27;
  uint64_t result;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  void (*v37)(uint64_t, char *, uint64_t);
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  char *v47;
  unint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v56 = a1;
  sub_1ABD16EF8();
  v51 = v2;
  MEMORY[0x1E0C80A78](v2);
  v49 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v45 - v5;
  sub_1ABCFC730();
  v53 = v6;
  MEMORY[0x1E0C80A78](v6);
  v55 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v45 - v9;
  MEMORY[0x1E0C80A78](v11);
  v54 = (uint64_t)&v45 - v12;
  v13 = sub_1ABF30760();
  v14 = *(_QWORD **)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v52 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v45 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v45 - v20;
  v22 = sub_1ABF30B08();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16))(v26, v1, v22, v24);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v26, v22);
  if (v27 != *MEMORY[0x1E0DB3278])
  {
    if (v27 == *MEMORY[0x1E0DB3280])
    {
      v44 = 1;
    }
    else if (v27 == *MEMORY[0x1E0DB3288])
    {
      type metadata accessor for CurrencyResponse();
      v44 = sub_1ABF306DC();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
      v44 = 0;
    }
    return v44 & 1;
  }
  (*(void (**)(char *, uint64_t))(v23 + 96))(v26, v22);
  sub_1ABF306C4();
  sub_1ABF306C4();
  v48 = sub_1ABD47E5C();
  result = sub_1ABF31708();
  if ((result & 1) != 0)
  {
    v29 = v21;
    v30 = (uint64_t)v10;
    v32 = v49;
    v31 = v50;
    v33 = v51;
    v34 = &v50[*(int *)(v51 + 48)];
    v35 = (void (*)(char *, uint64_t, uint64_t))v14[2];
    v45 = v35;
    v46 = v29;
    ((void (*)(char *))v35)(v50);
    v47 = v18;
    v35(v34, (uint64_t)v18, v13);
    v36 = &v32[*(int *)(v33 + 48)];
    v35(v32, (uint64_t)v31, v13);
    v35(v36, (uint64_t)v34, v13);
    v37 = (void (*)(uint64_t, char *, uint64_t))v14[4];
    v37(v30, v32, v13);
    v38 = (void (*)(char *, uint64_t))v14[1];
    v38(v36, v13);
    v39 = &v32[*(int *)(v33 + 48)];
    v37((uint64_t)v32, v31, v13);
    v37((uint64_t)v39, v34, v13);
    v37(v30 + *(int *)(v53 + 36), v39, v13);
    v38(v32, v13);
    v40 = v54;
    sub_1ABCFE2AC(v30, v54, (uint64_t (*)(_QWORD))sub_1ABCFC730);
    v41 = v56 + *(int *)(type metadata accessor for CurrencyResponse() + 20);
    LOBYTE(v30) = sub_1ABF316FC();
    v42 = v52;
    v45(v52, v41, v13);
    v43 = v55;
    sub_1ABCFC790(v40, v55, (uint64_t (*)(_QWORD))sub_1ABCFC730);
    if ((v30 & 1) != 0)
      v44 = sub_1ABF31708();
    else
      v44 = 0;
    sub_1ABCFC3BC(v43, (uint64_t (*)(_QWORD))sub_1ABCFC730);
    v38(v42, v13);
    sub_1ABCFC3BC(v40, (uint64_t (*)(_QWORD))sub_1ABCFC730);
    v38(v47, v13);
    v38(v46, v13);
    return v44 & 1;
  }
  __break(1u);
  return result;
}

unint64_t sub_1ABF0E3A0()
{
  unint64_t result;

  result = qword_1ED34C418;
  if (!qword_1ED34C418)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4FFC8, &type metadata for CurrencyManagerCacheKey);
    atomic_store(result, (unint64_t *)&qword_1ED34C418);
  }
  return result;
}

uint64_t sub_1ABF0E3E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for CurrencyResponse();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = sub_1ABF2FF5C();
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v10)
      goto LABEL_23;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_23;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_23;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
        {
          v12 = v15 + 3;
          if (v15 + 3 >= v10)
            goto LABEL_23;
          v16 = *(_QWORD *)(v6 + 8 * v12);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_5:
    sub_1ABCFC790(*(_QWORD *)(a1 + 56) + *(_QWORD *)(v3 + 72) * v14, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
    sub_1ABF30DA8();
    result = sub_1ABCFC3BC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
  }
  v17 = v15 + 4;
  if (v17 >= v10)
  {
LABEL_23:
    swift_release();
    return sub_1ABF2FF5C();
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      goto LABEL_23;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1ABF0E5A8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1ABCF5A54(0, &qword_1ED34C378, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v13 - v1;
  v3 = type metadata accessor for CurrencyResponse();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30D90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1ABE0FA00((uint64_t)v2);
    return sub_1ABDF1C64(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    sub_1ABCFE2AC((uint64_t)v2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
    if ((sub_1ABF0DF08((uint64_t)v6) & 1) != 0)
    {
      sub_1ABCF5A54(0, &qword_1ED34C590, (uint64_t (*)(uint64_t))sub_1ABE0FEA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      sub_1ABE0FEA0();
      v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
      v10 = (v9 + 32) & ~v9;
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1ABF366C0;
      sub_1ABCFC790((uint64_t)v6, v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
      v7 = sub_1ABDF1C64(v11);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
    }
    else
    {
      v7 = sub_1ABDF1C64(MEMORY[0x1E0DEE9D8]);
    }
    sub_1ABCFC3BC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
  }
  return v7;
}

ValueMetadata *type metadata accessor for CurrencyManagerCache()
{
  return &type metadata for CurrencyManagerCache;
}

uint64_t sub_1ABF0E7C4(char *a1)
{
  return qword_1ABF50058[*a1];
}

uint64_t sub_1ABF0E7D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABF0E7FC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABF0E828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _BYTE v22[24];
  uint64_t v23;

  v7 = sub_1ABF30B38();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = *v3;
  sub_1ABF30BE0();
  sub_1ABD07E04(v11 + 16, (uint64_t)v22);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)&v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
  v17 = *v15;
  sub_1ABF2FF5C();
  v18 = sub_1ABF0E968(a1, a2, v17, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  v19 = sub_1ABF30BBC();

  return v19;
}

id sub_1ABF0E968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  objc_super v23;
  _QWORD v24[5];
  _QWORD v25[5];

  v8 = type metadata accessor for SDSBaseOperationFactory();
  v25[3] = v8;
  v25[4] = &off_1E5AEC4C0;
  v25[0] = a3;
  v9 = (objc_class *)type metadata accessor for SDSSearchOperation();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  v16 = *v14;
  v24[3] = v8;
  v24[4] = &off_1E5AEC4C0;
  v24[0] = v16;
  v17 = &v10[qword_1EEC44C48];
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  sub_1ABD07E04((uint64_t)v24, (uint64_t)&v10[qword_1EEC44C50]);
  v18 = &v10[qword_1EEC44C58];
  v19 = sub_1ABF30B38();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a4, v19);
  v23.receiver = v10;
  v23.super_class = v9;
  v21 = objc_msgSendSuper2(&v23, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a4, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v21;
}

uint64_t sub_1ABF0EAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for SparklineService()
{
  return objc_opt_self();
}

uint64_t sub_1ABF0EAF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v3 = *v1;
  sub_1ABF30BE0();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
  v4 = sub_1ABDCB760(a1);
  v5 = sub_1ABF30BBC();

  return v5;
}

uint64_t sub_1ABF0EB54()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1ABF0EB5C()
{
  _BYTE *v0;

  if (!*v0)
  {
    if (qword_1ED34FD78 == -1)
      return sub_1ABF303F4();
    goto LABEL_9;
  }
  if (*v0 == 1)
  {
    if (qword_1ED34FD78 == -1)
      return sub_1ABF303F4();
    goto LABEL_9;
  }
  if (qword_1ED34FD78 != -1)
LABEL_9:
    swift_once();
  return sub_1ABF303F4();
}

unint64_t sub_1ABF0ED24@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

void *sub_1ABF0ED38()
{
  return &unk_1E5AE7F90;
}

unint64_t sub_1ABF0ED44@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1ABF0ED24(*a1, a2);
}

unint64_t sub_1ABF0ED50()
{
  unint64_t result;

  result = qword_1EEC450B8;
  if (!qword_1EEC450B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF501F4, &type metadata for PriceChangeDisplay);
    atomic_store(result, (unint64_t *)&qword_1EEC450B8);
  }
  return result;
}

uint64_t sub_1ABF0ED94()
{
  sub_1ABF0EEEC();
  return sub_1ABF319D8();
}

uint64_t sub_1ABF0EDF0()
{
  sub_1ABF0EEEC();
  return sub_1ABF3199C();
}

unint64_t sub_1ABF0EE40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC450C0;
  if (!qword_1EEC450C0)
  {
    sub_1ABF0EE88();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC450C0);
  }
  return result;
}

void sub_1ABF0EE88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC450C8)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC450C8);
  }
}

void sub_1ABF0EEDC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5AE8048;
}

unint64_t sub_1ABF0EEEC()
{
  unint64_t result;

  result = qword_1EEC450D0;
  if (!qword_1EEC450D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF5017C, &type metadata for PriceChangeDisplay);
    atomic_store(result, (unint64_t *)&qword_1EEC450D0);
  }
  return result;
}

double sub_1ABF0EF34(uint32_t a1, char a2)
{
  uint32_t v4;
  unsigned int v5;
  double v6;
  uint32_t v7;
  unsigned int v8;
  double v9;

  v4 = arc4random_uniform(a1);
  if (v4 <= 1)
    v5 = 1;
  else
    v5 = v4;
  v6 = (double)v5;
  v7 = arc4random_uniform(a1);
  if (v7 <= 1)
    v8 = 1;
  else
    v8 = v7;
  v9 = v6 / (double)v8;
  if ((a2 & 1) != 0 && (arc4random_uniform(2u) & 1) == 0)
    return -v9;
  return v9;
}

uint64_t sub_1ABF0EFA0(uint32_t a1)
{
  uint64_t result;

  LODWORD(result) = arc4random_uniform(a1);
  if (result <= 1)
    return 1;
  else
    return result;
}

unint64_t sub_1ABF0EFBC()
{
  return 0xD000000000000034;
}

uint64_t sub_1ABF0EFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = sub_1ABF317D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD16220(0x3200000019);
  sub_1ABF317C8();
  v4 = sub_1ABF317B0();
  v6 = v5;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 != 15)
    return v4;
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for Random()
{
  return &type metadata for Random;
}

uint64_t sub_1ABF0F13C(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1ABD065C8(a1, v2 + 16);
  return v2;
}

uint64_t sub_1ABF0F17C(__int128 *a1)
{
  uint64_t v1;

  sub_1ABD065C8(a1, v1 + 16);
  return v1;
}

uint64_t sub_1ABF0F198()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t sub_1ABF0F1B4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

id sub_1ABF0F1D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[118];
  char v6;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v5, v1, v2);
  sub_1ABD7DDF4((uint64_t)v5);
  if (v6)
    v3 = 0xFFFFFFFFLL;
  else
    v3 = v5[117];
  return objc_msgSend((id)objc_opt_self(), sel_enabledForCurrentLevel_, v3);
}

id sub_1ABF0F260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[118];
  char v6;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v5, v1, v2);
  sub_1ABD7DDF4((uint64_t)v5);
  if (v6)
    v3 = 0xFFFFFFFFLL;
  else
    v3 = v5[117];
  return objc_msgSend((id)objc_opt_self(), sel_enabledForCurrentLevel_, v3);
}

uint64_t sub_1ABF0F2EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABF0F2F4()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABF0F300()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for SDSQuoteDetailService()
{
  return objc_opt_self();
}

uint64_t sub_1ABF0F328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _BYTE v25[24];
  uint64_t v26;

  v6 = sub_1ABF30B38();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = sub_1ABF30760();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1ABD07E04(v3 + 16, (uint64_t)v25);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)&v25[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
  v19 = *v17;
  v20 = sub_1ABF2FF5C();
  v21 = sub_1ABF0F4E0(v20, v19, (uint64_t)v13, (uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  sub_1ABF30BE0();
  sub_1ABF30BA4();
  v22 = sub_1ABF30BB0();

  swift_release();
  return v22;
}

uint64_t sub_1ABF0F4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABF0F328(a1, a2, a3);
}

id sub_1ABF0F4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  objc_super v25;
  _QWORD v26[5];
  _QWORD v27[5];

  v8 = type metadata accessor for SDSBaseOperationFactory();
  v27[3] = v8;
  v27[4] = &off_1E5AEC4C0;
  v27[0] = a2;
  v9 = (objc_class *)type metadata accessor for SDSQuoteDetailOperation();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  v16 = *v14;
  v26[3] = v8;
  v26[4] = &off_1E5AEC4C0;
  v26[0] = v16;
  *(_QWORD *)&v10[qword_1ED34D778] = a1;
  sub_1ABD07E04((uint64_t)v26, (uint64_t)&v10[qword_1ED34D760]);
  v17 = &v10[qword_1ED34D770];
  v18 = sub_1ABF30760();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a3, v18);
  v20 = &v10[qword_1ED34D768];
  v21 = sub_1ABF30B38();
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v20, a4, v21);
  v25.receiver = v10;
  v25.super_class = v9;
  v23 = objc_msgSendSuper2(&v25, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a4, v21);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a3, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v23;
}

void sub_1ABF0F684(char a1)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF0F6D0()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF0F760(char a1)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF0F7BC()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF0F880(char a1)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF0F8C8()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABF0F95C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF0FA0C(char a1)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF0FA64()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF0FB08(char a1)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF0FB64()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF0FBE4(char a1)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF0FC34()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABF0FCD8()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF0FD84(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF0FDDC()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF0FEB4(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF0FEFC()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF0FFEC(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF10044()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF10130(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF10180()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF10230(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF10288()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF10350(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF10398()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF10428(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF10474()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF10544(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF10590()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF10634(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF10688()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF1072C(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF10784()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF10804(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF1085C()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF10900(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF10944()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABF109D8(uint64_t a1, char a2)
{
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABF10A24()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

unint64_t sub_1ABF10AF0@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, unint64_t *a9@<X8>, unint64_t a10)
{
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  v10 = a10;
  if (a2)
    v11 = result;
  else
    v11 = 0xD00000000000002FLL;
  v12 = 0x80000001ABF632F0;
  if (a2)
    v12 = a2;
  v13 = 0xD00000000000005ELL;
  if (a5)
    v13 = a4;
  v14 = 0x80000001ABF63320;
  if (a5)
    v14 = a5;
  v15 = 23899;
  v16 = MEMORY[0x1E0DEE9D8];
  if (a7)
    v15 = a6;
  v17 = 0xE200000000000000;
  if (a7)
    v17 = a7;
  if (a10)
    v18 = a8;
  else
    v18 = 0;
  *a9 = v11;
  a9[1] = v12;
  if (!a10)
    v10 = 0xE000000000000000;
  if (a3)
    v19 = a3;
  else
    v19 = v16;
  a9[2] = v19;
  a9[3] = v13;
  a9[4] = v14;
  a9[5] = v15;
  a9[6] = v17;
  a9[7] = v18;
  a9[8] = v10;
  return result;
}

uint64_t sub_1ABF10B88(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABF10BC4 + 4 * byte_1ABF50488[a1]))(0xD00000000000001ALL, 0x80000001ABF55080);
}

uint64_t sub_1ABF10BC4()
{
  uint64_t v0;

  return v0 + 10;
}

uint64_t sub_1ABF10C18(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABF10C54 + 4 * byte_1ABF5048D[a1]))(0xD00000000000001ALL, 0x80000001ABF55080);
}

uint64_t sub_1ABF10C54()
{
  uint64_t v0;

  return v0 + 10;
}

void sub_1ABF10CA8(char *a1)
{
  sub_1ABDE2114(*a1);
}

void sub_1ABF10CB4()
{
  char *v0;

  sub_1ABF0FB08(*v0);
}

void sub_1ABF10CBC(uint64_t a1)
{
  char *v1;

  sub_1ABD98FA4(a1, *v1);
}

void sub_1ABF10CC4(uint64_t a1)
{
  char *v1;

  sub_1ABF1072C(a1, *v1);
}

uint64_t sub_1ABF10CCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABF11D00();
  *a1 = result;
  return result;
}

uint64_t sub_1ABF10CF8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABF10B88(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABF10D20()
{
  unsigned __int8 *v0;

  return sub_1ABF10C18(*v0);
}

uint64_t sub_1ABF10D28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABF11D00();
  *a1 = result;
  return result;
}

uint64_t sub_1ABF10D4C()
{
  sub_1ABF118B8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABF10D74()
{
  sub_1ABF118B8();
  return sub_1ABF32398();
}

uint64_t sub_1ABF10D9C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  unint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  char v66;
  _QWORD *v67;

  sub_1ABF118FC(0, &qword_1ED34FE70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v54 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF118B8();
  sub_1ABF3235C();
  if (!v2)
  {
    v67 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v66 = 0;
    sub_1ABF320C8();
    v10 = v65;
    v61 = v64;
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v65)
    {
      v62 = a2;
      swift_beginAccess();
      v11 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v13 = v11[2];
      v12 = v11[3];
      if (v13 >= v12 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
      v11[2] = v13 + 1;
      v14 = &v11[2 * v13];
      v14[4] = 0xD00000000000001ALL;
      v14[5] = 0x80000001ABF55080;
      v67 = v11;
      swift_endAccess();
      v10 = 0;
      a2 = v62;
    }
    v63 = v11;
    v66 = 1;
    sub_1ABD165AC();
    v16 = v15;
    sub_1ABD10510((unint64_t *)&qword_1ED34FCC8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1ABF320C8();
    v60 = v16;
    v17 = v64;
    if (!v64)
    {
      v62 = a2;
      swift_beginAccess();
      v63 = v67;
      v18 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v63 = sub_1ABD12054(0, v63[2] + 1, 1, v63);
      v20 = v63[2];
      v19 = v63[3];
      if (v20 >= v19 >> 1)
        v63 = sub_1ABD12054((_QWORD *)(v19 > 1), v20 + 1, 1, v63);
      v21 = v63;
      v63[2] = v20 + 1;
      v22 = &v21[2 * v20];
      v22[4] = 0xD000000000000021;
      v22[5] = 0x80000001ABF550A0;
      v67 = v21;
      swift_endAccess();
      v10 = v18;
      a2 = v62;
    }
    v66 = 2;
    sub_1ABF320C8();
    v58 = (unint64_t)v64;
    v59 = v65;
    if (!v65)
    {
      v62 = a2;
      swift_beginAccess();
      v63 = v67;
      v23 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v63 = sub_1ABD12054(0, v63[2] + 1, 1, v63);
      v25 = v63[2];
      v24 = v63[3];
      if (v25 >= v24 >> 1)
        v63 = sub_1ABD12054((_QWORD *)(v24 > 1), v25 + 1, 1, v63);
      v26 = v63;
      v63[2] = v25 + 1;
      v27 = &v26[2 * v25];
      v27[4] = 0xD000000000000017;
      v27[5] = 0x80000001ABF550D0;
      v67 = v26;
      swift_endAccess();
      v10 = v23;
      a2 = v62;
    }
    v66 = 3;
    sub_1ABF320C8();
    v56 = (unint64_t)v64;
    v57 = v65;
    if (!v65)
    {
      v62 = a2;
      swift_beginAccess();
      v63 = v67;
      v28 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v63 = sub_1ABD12054(0, v63[2] + 1, 1, v63);
      v30 = v63[2];
      v29 = v63[3];
      if (v30 >= v29 >> 1)
        v63 = sub_1ABD12054((_QWORD *)(v29 > 1), v30 + 1, 1, v63);
      v31 = v63;
      v63[2] = v30 + 1;
      v32 = &v31[2 * v30];
      v32[4] = 0xD00000000000001FLL;
      v32[5] = 0x80000001ABF550F0;
      v67 = v31;
      swift_endAccess();
      v10 = v28;
      a2 = v62;
    }
    v66 = 4;
    sub_1ABF320C8();
    v62 = v17;
    v34 = v65;
    if (v65)
    {
      v55 = v64;
      v35 = v63;
    }
    else
    {
      swift_beginAccess();
      v35 = v67;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v54 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v35 = sub_1ABD12054(0, v35[2] + 1, 1, v35);
      v38 = v35[2];
      v37 = v35[3];
      v39 = (_QWORD *)(v38 + 1);
      if (v38 >= v37 >> 1)
      {
        v63 = (_QWORD *)(v38 + 1);
        v53 = sub_1ABD12054((_QWORD *)(v37 > 1), v38 + 1, 1, v35);
        v39 = v63;
        v35 = v53;
      }
      v35[2] = v39;
      v40 = &v35[2 * v38];
      v40[4] = 0xD000000000000019;
      v40[5] = 0x80000001ABF55110;
      v67 = v35;
      swift_endAccess();
      v55 = 0;
      v10 = v54;
    }
    v41 = (_QWORD *)0xD00000000000002FLL;
    if (v10)
      v41 = v61;
    v63 = v41;
    if (!v10)
      v10 = 0x80000001ABF632F0;
    v42 = 0xD00000000000005ELL;
    if (v59)
      v42 = v58;
    v61 = (_QWORD *)v42;
    if (v59)
      v43 = v59;
    else
      v43 = 0x80000001ABF63320;
    v44 = 23899;
    if (v57)
      v44 = v56;
    v58 = v44;
    v59 = v43;
    if (v57)
      v45 = v57;
    else
      v45 = 0xE200000000000000;
    v46 = 0xE000000000000000;
    if (v34)
      v46 = v34;
    v56 = v46;
    v57 = v45;
    v47 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v62)
      v47 = v62;
    v62 = v47;
    if (v35[2])
    {
      sub_1ABD0F55C();
      v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1ABF366C0;
      *(_QWORD *)(v48 + 56) = v60;
      *(_QWORD *)(v48 + 64) = sub_1ABD82448();
      *(_QWORD *)(v48 + 32) = v35;
      v60 = v10;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v49 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      v10 = v60;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v49 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    *a2 = v63;
    a2[1] = v10;
    v50 = v61;
    a2[2] = v62;
    a2[3] = v50;
    v51 = v58;
    a2[4] = v59;
    a2[5] = v51;
    v52 = v55;
    a2[6] = v57;
    a2[7] = v52;
    a2[8] = v56;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ABF11674(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[6];
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  sub_1ABF118FC(0, &qword_1ED34FF28, MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - v6;
  v8 = v1[2];
  v16[5] = v1[3];
  v17 = v8;
  v9 = v1[4];
  v16[3] = v1[5];
  v16[4] = v9;
  v10 = v1[6];
  v16[1] = v1[7];
  v16[2] = v10;
  v16[0] = v1[8];
  v11 = a1[3];
  v12 = a1;
  v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_1ABF118B8();
  sub_1ABF32368();
  v23 = 0;
  sub_1ABF32194();
  if (!v2)
  {
    v18 = v17;
    v22 = 1;
    sub_1ABD165AC();
    sub_1ABD10510((unint64_t *)&qword_1ED34FCB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1ABF321D0();
    v21 = 2;
    sub_1ABF32194();
    v20 = 3;
    sub_1ABF32194();
    v19 = 4;
    sub_1ABF32194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t sub_1ABF1188C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABF10D9C(a1, a2);
}

uint64_t sub_1ABF118A0(_QWORD *a1)
{
  return sub_1ABF11674(a1);
}

unint64_t sub_1ABF118B8()
{
  unint64_t result;

  result = qword_1ED34F258;
  if (!qword_1ED34F258)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50630, &type metadata for NewsUIConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F258);
  }
  return result;
}

void sub_1ABF118FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABF118B8();
    v7 = a3(a1, &type metadata for NewsUIConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t destroy for NewsUIConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for NewsUIConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for NewsUIConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NewsUIConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NewsUIConfiguration()
{
  return &type metadata for NewsUIConfiguration;
}

uint64_t storeEnumTagSinglePayload for NewsUIConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABF11BA8 + 4 * byte_1ABF50497[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABF11BDC + 4 * byte_1ABF50492[v4]))();
}

uint64_t sub_1ABF11BDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF11BE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABF11BECLL);
  return result;
}

uint64_t sub_1ABF11BF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABF11C00);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABF11C04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF11C0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewsUIConfiguration.CodingKeys()
{
  return &type metadata for NewsUIConfiguration.CodingKeys;
}

unint64_t sub_1ABF11C2C()
{
  unint64_t result;

  result = qword_1EEC45140;
  if (!qword_1EEC45140)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50608, &type metadata for NewsUIConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC45140);
  }
  return result;
}

unint64_t sub_1ABF11C74()
{
  unint64_t result;

  result = qword_1ED34F268;
  if (!qword_1ED34F268)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50540, &type metadata for NewsUIConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F268);
  }
  return result;
}

unint64_t sub_1ABF11CBC()
{
  unint64_t result;

  result = qword_1ED34F260;
  if (!qword_1ED34F260)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50568, &type metadata for NewsUIConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F260);
  }
  return result;
}

uint64_t sub_1ABF11D00()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1ABF11D48()
{
  return 0x7269446568636143;
}

unint64_t sub_1ABF11D6C()
{
  return 0xD000000000000014;
}

unint64_t sub_1ABF11D88()
{
  return 0xD000000000000018;
}

ValueMetadata *type metadata accessor for URLs()
{
  return &type metadata for URLs;
}

uint64_t sub_1ABF11DB4()
{
  NSArray *v0;
  uint64_t v1;
  uint64_t result;

  v0 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  v1 = sub_1ABF31A08();

  if (*(_QWORD *)(v1 + 16))
  {
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    sub_1ABF30538();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABF11E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1ABF305D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED346C88 != -1)
    swift_once();
  sub_1ABCF5804((uint64_t)v3);
  sub_1ABF3055C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1ABF11F28()
{
  sub_1ABF30C58();
  sub_1ABF305D4();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABF30F4C();
  swift_release();
  swift_release();
  sub_1ABF30C58();
  sub_1ABF30F4C();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABF12034(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for NetworkEvent();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB5014(0, v10, 0);
    v11 = v21;
    v12 = *(_QWORD *)(sub_1ABF30F34() - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1ABDB5014(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1ABCFE2AC((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEvent);
      v13 += v18;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1ABF121A8(void (*a1)(uint64_t *__return_ptr, _OWORD *), uint64_t a2, uint64_t a3)
{
  return sub_1ABF121BC(a1, a2, a3);
}

uint64_t sub_1ABF121BC(void (*a1)(uint64_t *__return_ptr, _OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[8];
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    v8 = a3 + 32;
    for (i = v5 - 1; ; --i)
    {
      v10 = *(_OWORD *)(v8 + 80);
      v11 = *(_OWORD *)(v8 + 112);
      v26 = *(_OWORD *)(v8 + 96);
      v27 = v11;
      v12 = *(_OWORD *)(v8 + 16);
      v13 = *(_OWORD *)(v8 + 48);
      v22 = *(_OWORD *)(v8 + 32);
      v23 = v13;
      v14 = *(_OWORD *)(v8 + 48);
      v15 = *(_OWORD *)(v8 + 80);
      v24 = *(_OWORD *)(v8 + 64);
      v25 = v15;
      v16 = *(_OWORD *)(v8 + 16);
      v21[0] = *(_OWORD *)v8;
      v21[1] = v16;
      v17 = *(_OWORD *)(v8 + 112);
      v18[6] = v26;
      v18[7] = v17;
      v18[2] = v22;
      v18[3] = v14;
      v18[4] = v24;
      v18[5] = v10;
      v28 = *(_QWORD *)(v8 + 128);
      v19 = *(_QWORD *)(v8 + 128);
      v18[0] = v21[0];
      v18[1] = v12;
      sub_1ABD97ECC((uint64_t)v21);
      a1(&v20, v18);
      sub_1ABD97F60((uint64_t)v21);
      if (v3)
        return swift_release();
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
      if (!i)
        break;
      v8 += 136;
    }
    return v29;
  }
  return result;
}

uint64_t sub_1ABF12308(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1ABD16414(0, v1, 0);
  v2 = v29;
  result = sub_1ABE0FADC(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v24 = v3 + 80;
  v25 = v1;
  v26 = v5;
  v27 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v28 = v7;
    result = sub_1ABF31804();
    v12 = result;
    v14 = v13;
    v15 = v3;
    v17 = *(_QWORD *)(v29 + 16);
    v16 = *(_QWORD *)(v29 + 24);
    if (v17 >= v16 >> 1)
      result = sub_1ABD16414(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v29 + 16) = v17 + 1;
    v18 = v29 + 16 * v17;
    *(_QWORD *)(v18 + 32) = v12;
    *(_QWORD *)(v18 + 40) = v14;
    v9 = 1 << *(_BYTE *)(v15 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v27;
    v19 = *(_QWORD *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v15;
    v5 = v26;
    if (*(_DWORD *)(v15 + 36) != v26)
      goto LABEL_27;
    v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v25;
    }
    else
    {
      v21 = v11 + 1;
      v22 = (unint64_t)(v9 + 63) >> 6;
      v10 = v25;
      if (v11 + 1 < v22)
      {
        v23 = *(_QWORD *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            v23 = *(_QWORD *)(v24 + 8 * v11++);
            if (v23)
            {
              v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v28 + 1;
    v6 = v9;
    if (v28 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1ABF12520(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  int v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v43 = MEMORY[0x1E0DEE9D8];
  sub_1ABD080B8(0, v1, 0);
  v2 = v43;
  result = sub_1ABE0FADC(a1);
  if (result < 0)
    goto LABEL_32;
  v6 = result;
  if (result >= 1 << *(_BYTE *)(a1 + 32))
    goto LABEL_32;
  v7 = a1 + 64;
  v32 = v1;
  v8 = 1;
  v33 = v5;
  while (1)
  {
    v9 = v6 >> 6;
    if ((*(_QWORD *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
      break;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_28;
    v10 = *(_QWORD *)(a1 + 56) + 136 * v6;
    v34 = *(_OWORD *)v10;
    v11 = *(_OWORD *)(v10 + 64);
    v13 = *(_OWORD *)(v10 + 16);
    v12 = *(_OWORD *)(v10 + 32);
    v37 = *(_OWORD *)(v10 + 48);
    v38 = v11;
    v35 = v13;
    v36 = v12;
    v15 = *(_OWORD *)(v10 + 96);
    v14 = *(_OWORD *)(v10 + 112);
    v16 = *(_OWORD *)(v10 + 80);
    v42 = *(_QWORD *)(v10 + 128);
    v40 = v15;
    v41 = v14;
    v39 = v16;
    result = sub_1ABD97ECC((uint64_t)&v34);
    v43 = v2;
    v18 = *(_QWORD *)(v2 + 16);
    v17 = *(_QWORD *)(v2 + 24);
    if (v18 >= v17 >> 1)
    {
      result = sub_1ABD080B8(v17 > 1, v18 + 1, 1);
      v2 = v43;
    }
    *(_QWORD *)(v2 + 16) = v18 + 1;
    v19 = v2 + 136 * v18;
    *(_OWORD *)(v19 + 32) = v34;
    v20 = v35;
    v21 = v36;
    v22 = v38;
    *(_OWORD *)(v19 + 80) = v37;
    *(_OWORD *)(v19 + 96) = v22;
    *(_OWORD *)(v19 + 48) = v20;
    *(_OWORD *)(v19 + 64) = v21;
    v23 = v39;
    v24 = v40;
    v25 = v41;
    *(_QWORD *)(v19 + 160) = v42;
    *(_OWORD *)(v19 + 128) = v24;
    *(_OWORD *)(v19 + 144) = v25;
    *(_OWORD *)(v19 + 112) = v23;
    v26 = *(_BYTE *)(a1 + 32);
    if ((uint64_t)v6 >= 1 << v26)
      goto LABEL_29;
    v27 = *(_QWORD *)(v7 + 8 * v9);
    if ((v27 & (1 << v6)) == 0)
      goto LABEL_30;
    v5 = v33;
    if (*(_DWORD *)(a1 + 36) != v33)
      goto LABEL_31;
    v28 = v27 & (-2 << (v6 & 0x3F));
    if (v28)
    {
      v6 = __clz(__rbit64(v28)) | v6 & 0xFFFFFFFFFFFFFFC0;
      if (v8 == v32)
        return v2;
    }
    else
    {
      v29 = v9 + 1;
      v30 = (unint64_t)((1 << v26) + 63) >> 6;
      if (v9 + 1 >= v30)
        goto LABEL_22;
      v31 = *(_QWORD *)(v7 + 8 * v29);
      if (!v31)
      {
        while (v30 - 2 != v9)
        {
          v31 = *(_QWORD *)(a1 + 80 + 8 * v9++);
          if (v31)
          {
            v29 = v9 + 1;
            goto LABEL_20;
          }
        }
LABEL_22:
        v6 = 1 << v26;
        if (v8 == v32)
          return v2;
        goto LABEL_23;
      }
LABEL_20:
      v6 = __clz(__rbit64(v31)) + (v29 << 6);
      if (v8 == v32)
        return v2;
    }
LABEL_23:
    if ((v6 & 0x8000000000000000) == 0)
    {
      ++v8;
      if ((uint64_t)v6 < 1 << v26)
        continue;
    }
    goto LABEL_32;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1ABF127A8(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  void (*v21)(uint64_t *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = v4;
  v21 = a1;
  v22 = a2;
  v8 = type metadata accessor for Chart.Entry(0);
  v20 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v14 = MEMORY[0x1E0DEE9D8];
  if (v12 == -1)
    return v14;
  v24 = MEMORY[0x1E0DEE9D8];
  result = sub_1ABD008FC(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v15 = 0;
    v14 = v24;
    v16 = a3 - 1;
    while (a4 != v16)
    {
      if (v15)
        goto LABEL_24;
      v23 = a3;
      v21(&v23);
      if (v5)
      {
        swift_release();
        return v14;
      }
      v5 = 0;
      v24 = v14;
      v18 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v14 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1ABD008FC(v17 > 1, v18 + 1, 1);
        v14 = v24;
      }
      *(_QWORD *)(v14 + 16) = v18 + 1;
      result = sub_1ABCFE2AC((uint64_t)v11, v14+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v18, type metadata accessor for Chart.Entry);
      v15 = a3 == a4;
      if (a3 == a4)
      {
        a3 = 0;
      }
      else if (__OFADD__(a3++, 1))
      {
        goto LABEL_20;
      }
      if (a4 == ++v16)
        return v14;
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

void sub_1ABF1295C(_BYTE *a1@<X8>)
{
  *a1 = -96;
}

void sub_1ABF12968(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1ABF12970()
{
  return sub_1ABF317A4();
}

uint64_t sub_1ABF12980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  uint64_t v9;
  _BYTE v11[16];

  v0 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1ABF31774();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v11[-v6];
  sub_1ABF31738();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1ED34FD78 != -1)
    swift_once();
  v8 = (id)qword_1ED368428;
  sub_1ABF30844();
  v9 = sub_1ABF317EC();
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

unint64_t sub_1ABF12AF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_1ABF318D0() != a1 || v9 != a2)
  {
    v10 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_1ABF31858();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1ABF12BDC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[8];
  uint64_t v30;

  v2 = *(_OWORD *)(a1 + 112);
  v29[6] = *(_OWORD *)(a1 + 96);
  v29[7] = v2;
  v30 = *(_QWORD *)(a1 + 128);
  v3 = *(_OWORD *)(a1 + 48);
  v29[2] = *(_OWORD *)(a1 + 32);
  v29[3] = v3;
  v4 = *(_OWORD *)(a1 + 80);
  v29[4] = *(_OWORD *)(a1 + 64);
  v29[5] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  v29[0] = *(_OWORD *)a1;
  v29[1] = v5;
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
    return 0;
  v8 = *(_OWORD *)(a2 + 144);
  v26 = *(_OWORD *)(a2 + 128);
  v27 = v8;
  v28 = *(_QWORD *)(a2 + 160);
  v9 = *(_OWORD *)(a2 + 80);
  v22 = *(_OWORD *)(a2 + 64);
  v23 = v9;
  v10 = *(_OWORD *)(a2 + 112);
  v24 = *(_OWORD *)(a2 + 96);
  v25 = v10;
  v11 = *(_OWORD *)(a2 + 48);
  v20 = *(_OWORD *)(a2 + 32);
  v21 = v11;
  v12 = 0;
  if ((sub_1ABCF4210((uint64_t)&v20, v29) & 1) == 0)
  {
    v13 = v6 - 1;
    v14 = (__int128 *)(a2 + 168);
    while (v13 != v12)
    {
      v15 = v14[7];
      v26 = v14[6];
      v27 = v15;
      v28 = *((_QWORD *)v14 + 16);
      v16 = v14[3];
      v22 = v14[2];
      v23 = v16;
      v17 = v14[5];
      v24 = v14[4];
      v25 = v17;
      v18 = v14[1];
      v20 = *v14;
      v21 = v18;
      v14 = (__int128 *)((char *)v14 + 136);
      ++v12;
      if ((sub_1ABCF4210((uint64_t)&v20, v29) & 1) != 0)
        return v12;
    }
    return 0;
  }
  return v12;
}

uint64_t sub_1ABF12CF4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1ABF20B60(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = &v5[6 * a1];
    v10 = v8[4];
    v9 = v8 + 4;
    v11 = v9[3];
    v12 = v9[4];
    v13 = *((_WORD *)v9 + 20);
    *(_QWORD *)a2 = v10;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(v9 + 1);
    *(_QWORD *)(a2 + 24) = v11;
    *(_QWORD *)(a2 + 32) = v12;
    *(_WORD *)(a2 + 40) = v13;
    v14 = v6 - 1 - a1;
    if (v14 >= 0)
    {
      result = (uint64_t)memmove(v9, v9 + 6, 48 * v14);
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABF12DF0(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1ABF20B74(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABF12ECC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  unint64_t v6;
  _QWORD *v7;
  __int128 v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t result;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1ABF20B9C(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = &v5[17 * a1];
    v8 = *((_OWORD *)v7 + 9);
    v9 = v6 - 1;
    *(_OWORD *)(a2 + 96) = *((_OWORD *)v7 + 8);
    *(_OWORD *)(a2 + 112) = v8;
    *(_QWORD *)(a2 + 128) = v7[20];
    v10 = *((_OWORD *)v7 + 5);
    *(_OWORD *)(a2 + 32) = *((_OWORD *)v7 + 4);
    *(_OWORD *)(a2 + 48) = v10;
    v11 = *((_OWORD *)v7 + 7);
    *(_OWORD *)(a2 + 64) = *((_OWORD *)v7 + 6);
    *(_OWORD *)(a2 + 80) = v11;
    v12 = *((_OWORD *)v7 + 3);
    *(_OWORD *)a2 = *((_OWORD *)v7 + 2);
    *(_OWORD *)(a2 + 16) = v12;
    v13 = v6 - 1 - a1;
    if (v13 >= 0)
    {
      result = (uint64_t)memmove(v7 + 4, v7 + 21, 136 * v13);
      v5[2] = v9;
      *v2 = v5;
      return result;
    }
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABF12FD4()
{
  sub_1ABF2FF68();
  sub_1ABF31534();
  return swift_release();
}

uint64_t sub_1ABF1300C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 16))();
  sub_1ABF31534();
  return swift_release();
}

uint64_t sub_1ABF13040()
{
  uint64_t v0;

  sub_1ABF2FF68();
  sub_1ABF31534();
  swift_release();
  sub_1ABD34E80(0, &qword_1ED34DD38, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_allocObject();
  v0 = sub_1ABF311E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1ABF130FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD v6[5];
  __int16 v7;
  _QWORD v8[5];
  __int16 v9;

  (*(void (**)(_QWORD *__return_ptr))(a2 + 8))(v8);
  v6[0] = v8[0];
  v6[1] = v8[1];
  v6[2] = v8[2];
  v6[3] = v8[3];
  v6[4] = v8[4];
  v7 = v9;
  v4 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a2 + 112))(v6, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1ABF13194(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  sub_1ABD34E80(0, (unint64_t *)&unk_1ED34DD50, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_allocObject();
  sub_1ABF311E0();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF5C();
  v5 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = sub_1ABF31180();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_1ABF1329C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;

  (*(void (**)(uint64_t, uint64_t))(a4 + 136))(a3, a4);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1ABF2FF5C();
  v7 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = sub_1ABF31180();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_1ABF13358(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  __int128 v4;
  void *v5;
  _OWORD *v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[4];
  __int128 v12;
  _OWORD v13[2];

  v4 = a2[1];
  v12 = *a2;
  v13[0] = v4;
  *(_OWORD *)((char *)v13 + 10) = *(__int128 *)((char *)a2 + 26);
  v11[2] = a3;
  v11[3] = a4;
  sub_1ABF121BC((void (*)(uint64_t *__return_ptr, _OWORD *))sub_1ABF149BC, (uint64_t)v11, a1);
  v5 = (void *)sub_1ABF31114();
  sub_1ABF3109C();
  swift_bridgeObjectRelease();

  v6 = (_OWORD *)swift_allocObject();
  v7 = v13[0];
  v6[1] = v12;
  v6[2] = v7;
  *(_OWORD *)((char *)v6 + 42) = *(_OWORD *)((char *)v13 + 10);
  sub_1ABD04B78((uint64_t)&v12);
  v8 = (void *)sub_1ABF31114();
  v9 = sub_1ABF31180();
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_1ABF1346C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t))(a2 + 40))(0, a1);
}

uint64_t sub_1ABF13480(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1ABF1349C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[6] = (*(uint64_t (**)(_QWORD))(v0[4] + 48))(v0[3]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = v1;
  *v1 = v0;
  v1[1] = sub_1ABF13508;
  return sub_1ABF31150();
}

uint64_t sub_1ABF13508()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABF13574()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1ABF13580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1ABF135A0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[8] = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[6] + 72))(v0[3], v0[4], v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[9] = v1;
  *v1 = v0;
  v1[1] = sub_1ABF1360C;
  return sub_1ABF31150();
}

uint64_t sub_1ABF1360C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABF13680()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF136B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 72) = a3;
  v5 = *a1;
  *(_QWORD *)(v4 + 80) = v3;
  *(_QWORD *)(v4 + 88) = v5;
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a1 + 1);
  v6 = a1[4];
  *(_QWORD *)(v4 + 112) = a1[3];
  *(_QWORD *)(v4 + 120) = v6;
  *(_WORD *)(v4 + 58) = *((_WORD *)a1 + 20);
  return swift_task_switch();
}

uint64_t sub_1ABF136EC()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;

  v1 = *(_WORD *)(v0 + 58);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_OWORD *)(v0 + 96);
  v10 = v3;
  v11 = v2;
  v12 = v1;
  *(_QWORD *)(v0 + 128) = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 80))(&v8, v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v6;
  *v6 = v0;
  v6[1] = sub_1ABF13780;
  return sub_1ABF31150();
}

uint64_t sub_1ABF13780()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_1ABF13814()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF13820()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF13854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a2 + 8);
  v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v6 + 88) = *(_OWORD *)a3;
  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = v5;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 48) = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v6 + 80) = v8;
  *(_WORD *)(v6 + 154) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(v6 + 104) = v7;
  *(_QWORD *)(v6 + 120) = *(_QWORD *)(a3 + 32);
  *(_WORD *)(v6 + 152) = *(_WORD *)(a3 + 40);
  return swift_task_switch();
}

uint64_t sub_1ABF138AC()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _QWORD *v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  _OWORD v16[2];
  uint64_t v17;
  __int16 v18;

  v1 = *(_WORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_WORD *)(v0 + 154);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v11 = *(_QWORD *)(v0 + 48);
  v12 = *(_OWORD *)(v0 + 56);
  v13 = v5;
  v14 = v4;
  v15 = v3;
  v8 = *(_OWORD *)(v0 + 104);
  v16[0] = *(_OWORD *)(v0 + 88);
  v16[1] = v8;
  v17 = v2;
  v18 = v1;
  *(_QWORD *)(v0 + 128) = (*(uint64_t (**)(uint64_t *, _OWORD *, uint64_t))(v7 + 152))(&v11, v16, v6);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v9;
  *v9 = v0;
  v9[1] = sub_1ABF13954;
  return sub_1ABF31150();
}

uint64_t sub_1ABF13954()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 144) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABF139C8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v6 + 160) = a4;
  *(_QWORD *)(v6 + 168) = a5;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v6 + 128) = v7;
  *(_QWORD *)(v6 + 144) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(v6 + 152) = a1;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v6 + 64) = v8;
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v6 + 96) = v9;
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 32) = v10;
  v11 = *a3;
  *(_QWORD *)(v6 + 176) = v5;
  *(_QWORD *)(v6 + 184) = v11;
  *(_OWORD *)(v6 + 192) = *(_OWORD *)(a3 + 1);
  v12 = a3[4];
  *(_QWORD *)(v6 + 208) = a3[3];
  *(_QWORD *)(v6 + 216) = v12;
  *(_WORD *)(v6 + 248) = *((_WORD *)a3 + 20);
  return swift_task_switch();
}

uint64_t sub_1ABF13A28()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;

  v1 = *(_WORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 168);
  v8 = *(_QWORD *)(v0 + 184);
  v9 = *(_OWORD *)(v0 + 192);
  v10 = v3;
  v11 = v2;
  v12 = v1;
  *(_QWORD *)(v0 + 224) = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v5 + 160))(v0 + 16, &v8, v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v6;
  *v6 = v0;
  v6[1] = sub_1ABF13AB4;
  return sub_1ABF31150();
}

uint64_t sub_1ABF13AB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 240) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABF13B28()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF13B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 80) = a4;
  *(_QWORD *)(v5 + 88) = v4;
  *(_QWORD *)(v5 + 64) = a1;
  *(_QWORD *)(v5 + 72) = a3;
  *(_QWORD *)(v5 + 96) = *(_QWORD *)a2;
  *(_OWORD *)(v5 + 104) = *(_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v5 + 120) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v5 + 128) = v6;
  *(_WORD *)(v5 + 58) = *(_WORD *)(a2 + 40);
  return swift_task_switch();
}

uint64_t sub_1ABF13B98()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;

  v1 = *(_WORD *)(v0 + 58);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v9 = *(_QWORD *)(v0 + 96);
  v10 = *(_OWORD *)(v0 + 104);
  v11 = v3;
  v12 = v2;
  v13 = v1;
  *(_QWORD *)(v0 + 136) = sub_1ABF13358(v6, (__int128 *)&v9, v4, v5);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v7;
  *v7 = v0;
  v7[1] = sub_1ABF13C2C;
  return sub_1ABF31150();
}

uint64_t sub_1ABF13C2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_1ABF13CC0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF13CF4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  v7 = *a3;
  *(_QWORD *)(v6 + 64) = v5;
  *(_QWORD *)(v6 + 72) = v7;
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a3 + 1);
  v8 = a3[4];
  *(_QWORD *)(v6 + 96) = a3[3];
  *(_QWORD *)(v6 + 104) = v8;
  *(_WORD *)(v6 + 136) = *((_WORD *)a3 + 20);
  return swift_task_switch();
}

uint64_t sub_1ABF13D30()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;

  v1 = *(_WORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_OWORD *)(v0 + 80);
  v12 = v3;
  v13 = v2;
  v14 = v1;
  *(_QWORD *)(v0 + 112) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t))(v5 + 168))(v6, v7, &v10, v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v8;
  *v8 = v0;
  v8[1] = sub_1ABF13DC8;
  return sub_1ABF31150();
}

uint64_t sub_1ABF13DC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABF13E34()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1ABF13E44()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF13E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = v6;
  *(_QWORD *)(v7 + 32) = a4;
  *(_QWORD *)(v7 + 40) = a5;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a3;
  *(_QWORD *)(v7 + 64) = *(_QWORD *)a2;
  *(_OWORD *)(v7 + 72) = *(_OWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v7 + 96) = v8;
  *(_WORD *)(v7 + 128) = *(_WORD *)(a2 + 40);
  return swift_task_switch();
}

uint64_t sub_1ABF13EB8()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;

  v1 = *(_WORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_OWORD *)(v0 + 72);
  v12 = v3;
  v13 = v2;
  v14 = v1;
  *(_QWORD *)(v0 + 104) = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v5 + 88))(&v10, v6, v7, v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v8;
  *v8 = v0;
  v8[1] = sub_1ABF13F44;
  return sub_1ABF31150();
}

uint64_t sub_1ABF13F44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABF13FB8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF13FEC(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = v5;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 48) = *(_QWORD *)a2;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v6 + 80) = v7;
  *(_WORD *)(v6 + 112) = *(_WORD *)(a2 + 40);
  *(_BYTE *)(v6 + 114) = *a3;
  return swift_task_switch();
}

uint64_t sub_1ABF14030()
{
  uint64_t v0;
  char v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  char v14;

  v1 = *(_BYTE *)(v0 + 114);
  v2 = *(_WORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(_OWORD *)(v0 + 56);
  v11 = v4;
  v12 = v3;
  v13 = v2;
  v14 = v1;
  *(_QWORD *)(v0 + 88) = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v6 + 96))(&v9, &v14, v5);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v7;
  *v7 = v0;
  v7[1] = sub_1ABF140C4;
  return sub_1ABF31150();
}

uint64_t sub_1ABF140C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABF14138(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 40) = v5;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 48) = *(_QWORD *)a2;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v6 + 80) = v7;
  *(_WORD *)(v6 + 112) = *(_WORD *)(a2 + 40);
  *(_BYTE *)(v6 + 114) = *a3;
  return swift_task_switch();
}

uint64_t sub_1ABF1417C()
{
  uint64_t v0;
  char v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  char v14;

  v1 = *(_BYTE *)(v0 + 114);
  v2 = *(_WORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 48);
  v10 = *(_OWORD *)(v0 + 56);
  v11 = v4;
  v12 = v3;
  v13 = v2;
  v14 = v1;
  *(_QWORD *)(v0 + 88) = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v6 + 104))(&v9, &v14, v5);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v7;
  *v7 = v0;
  v7[1] = sub_1ABEE85E0;
  return sub_1ABF31150();
}

uint64_t sub_1ABF14210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 48) = a3;
  *(_QWORD *)(v8 + 56) = a4;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  v9 = *a5;
  *(_QWORD *)(v8 + 80) = v7;
  *(_QWORD *)(v8 + 88) = v9;
  *(_OWORD *)(v8 + 96) = *(_OWORD *)(a5 + 1);
  v10 = a5[4];
  *(_QWORD *)(v8 + 112) = a5[3];
  *(_QWORD *)(v8 + 120) = v10;
  *(_WORD *)(v8 + 152) = *((_WORD *)a5 + 20);
  return swift_task_switch();
}

uint64_t sub_1ABF14250()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;

  v1 = *(_WORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 40);
  v12 = *(_QWORD *)(v0 + 88);
  v13 = *(_OWORD *)(v0 + 96);
  v14 = v3;
  v15 = v2;
  v16 = v1;
  *(_QWORD *)(v0 + 128) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(v5 + 192))(v8, v9, v6, v7, &v12, v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v10;
  *v10 = v0;
  v10[1] = sub_1ABF142EC;
  return sub_1ABF31150();
}

uint64_t sub_1ABF142EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABF14358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = v4;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 56) = *(_QWORD *)a2;
  *(_OWORD *)(v5 + 64) = *(_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v5 + 88) = v6;
  *(_WORD *)(v5 + 120) = *(_WORD *)(a2 + 40);
  return swift_task_switch();
}

uint64_t sub_1ABF14394()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;

  v1 = *(_WORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 56);
  v10 = *(_OWORD *)(v0 + 64);
  v11 = v3;
  v12 = v2;
  v13 = v1;
  *(_QWORD *)(v0 + 96) = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v5 + 184))(v6, &v9, v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v7;
  *v7 = v0;
  v7[1] = sub_1ABF1442C;
  return sub_1ABF31150();
}

uint64_t sub_1ABF1442C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABF14498()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF144CC(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  uint64_t v21;

  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v6 = swift_allocObject();
  v7 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v6 + 128) = v7;
  v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v6 + 64) = v8;
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v6 + 96) = v9;
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 32) = v10;
  v11 = a3[1];
  *(_OWORD *)(v6 + 152) = *a3;
  *(_QWORD *)(v6 + 144) = *(_QWORD *)(a1 + 128);
  *(_OWORD *)(v6 + 168) = v11;
  *(_OWORD *)(v6 + 178) = *(_OWORD *)((char *)a3 + 26);
  sub_1ABD97ECC(a1);
  sub_1ABD04B78((uint64_t)a3);
  v12 = (void *)sub_1ABF31114();
  type metadata accessor for WatchlistManager();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v13 = swift_allocObject();
  v14 = a3[1];
  *(_OWORD *)(v13 + 16) = *a3;
  *(_OWORD *)(v13 + 32) = v14;
  *(_OWORD *)(v13 + 42) = *(_OWORD *)((char *)a3 + 26);
  v15 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v13 + 160) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v13 + 176) = v15;
  v16 = *(_QWORD *)(a1 + 128);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v13 + 96) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v13 + 112) = v17;
  v18 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v13 + 128) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v13 + 144) = v18;
  v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 80) = v19;
  *(_QWORD *)(v13 + 192) = v16;
  *(_QWORD *)(v13 + 200) = a2;
  sub_1ABD97ECC(a1);
  sub_1ABD04B78((uint64_t)a3);
  sub_1ABF2FF68();
  v20 = (void *)sub_1ABF31114();
  v21 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v21;
}

uint64_t sub_1ABF146B4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)a1 + 48 * v3;
    v6 = *(_QWORD *)(v4 - 16);
    v5 = *(_QWORD *)(v4 - 8);
    v8 = *(_QWORD *)v4;
    v7 = *(_QWORD *)(v4 + 8);
    v9 = *(_QWORD *)(v4 + 16);
    LOWORD(v4) = *(_WORD *)(v4 + 24);
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v5;
    *(_QWORD *)(a3 + 16) = v8;
    *(_QWORD *)(a3 + 24) = v7;
    *(_QWORD *)(a3 + 32) = v9;
    *(_WORD *)(a3 + 40) = v4;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  else
  {
    v11 = a2[1];
    *(_OWORD *)a3 = *a2;
    *(_OWORD *)(a3 + 16) = v11;
    *(_OWORD *)(a3 + 26) = *(_OWORD *)((char *)a2 + 26);
    return sub_1ABD04B78((uint64_t)a2);
  }
}

uint64_t sub_1ABF14738(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  v5 = *a1;
  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 48) = v5;
  *(_OWORD *)(v4 + 56) = *(_OWORD *)(a1 + 1);
  v6 = a1[4];
  *(_QWORD *)(v4 + 72) = a1[3];
  *(_QWORD *)(v4 + 80) = v6;
  *(_WORD *)(v4 + 112) = *((_WORD *)a1 + 20);
  return swift_task_switch();
}

uint64_t sub_1ABF14770()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;

  v1 = *(_WORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(_OWORD *)(v0 + 56);
  v10 = v3;
  v11 = v2;
  v12 = v1;
  *(_QWORD *)(v0 + 88) = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 112))(&v8, v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v6;
  *v6 = v0;
  v6[1] = sub_1ABF14804;
  return sub_1ABF31150();
}

uint64_t sub_1ABF14804()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABF14870@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  __int16 v13;
  _OWORD *v15;

  result = *a1;
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v15 = a4;
    v6 = (unsigned __int8 *)(sub_1ABF2FF5C() + 73);
    while (1)
    {
      v7 = *(_QWORD *)(v6 - 41);
      v8 = *(_QWORD *)(v6 - 33);
      v9 = *(_QWORD *)(v6 - 25);
      v10 = *(_QWORD *)(v6 - 17);
      v11 = *(_QWORD *)(v6 - 9);
      v12 = *(v6 - 1);
      v13 = *v6;
      if (v10 == a2 && v11 == a3)
        break;
      if ((sub_1ABF3223C() & 1) != 0)
        goto LABEL_12;
      v6 += 48;
      if (!--v5)
      {
        result = swift_bridgeObjectRelease();
        a4 = v15;
        goto LABEL_10;
      }
    }
    v10 = a2;
    v11 = a3;
LABEL_12:
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v15 = v7;
    *((_QWORD *)v15 + 1) = v8;
    *((_QWORD *)v15 + 2) = v9;
    *((_QWORD *)v15 + 3) = v10;
    *((_QWORD *)v15 + 4) = v11;
    *((_WORD *)v15 + 20) = v12 | (v13 << 8);
  }
  else
  {
LABEL_10:
    *(_OWORD *)((char *)a4 + 26) = 0u;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_1ABF14980()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF149A4@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1ABF14870(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1ABF149BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t result;
  __int128 v13;
  _OWORD v14[2];
  _OWORD v15[8];
  uint64_t v16;

  v4 = v2[2];
  v5 = v2[3];
  v6 = (__int128 *)v2[5];
  v7 = *(_OWORD *)(a1 + 112);
  v15[6] = *(_OWORD *)(a1 + 96);
  v15[7] = v7;
  v16 = *(_QWORD *)(a1 + 128);
  v8 = *(_OWORD *)(a1 + 48);
  v15[2] = *(_OWORD *)(a1 + 32);
  v15[3] = v8;
  v9 = *(_OWORD *)(a1 + 80);
  v15[4] = *(_OWORD *)(a1 + 64);
  v15[5] = v9;
  v10 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v10;
  v11 = v6[1];
  v13 = *v6;
  v14[0] = v11;
  *(_OWORD *)((char *)v14 + 10) = *(__int128 *)((char *)v6 + 26);
  result = (*(uint64_t (**)(_OWORD *, __int128 *, uint64_t))(v5 + 160))(v15, &v13, v4);
  *a2 = result;
  return result;
}

uint64_t sub_1ABF14A48()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF14A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1ABF146B4(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t WatchlistError.errorDescription.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  uint64_t v10;
  _BYTE v12[16];

  v1 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1ABF31774();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v12[-v7];
  if (!*v0)
  {
    sub_1ABF31738();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
    if (qword_1ED34FD78 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (*v0 == 1)
  {
    sub_1ABF31738();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
    if (qword_1ED34FD78 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  sub_1ABF31738();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
  if (qword_1ED34FD78 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  v9 = (id)qword_1ED368428;
  sub_1ABF30844();
  v10 = sub_1ABF317EC();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
  return v10;
}

uint64_t WatchlistError.localizedStringResource.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

BOOL static WatchlistError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WatchlistError.hash(into:)()
{
  return sub_1ABF32314();
}

uint64_t WatchlistError.hashValue.getter()
{
  sub_1ABF32308();
  sub_1ABF32314();
  return sub_1ABF32338();
}

unint64_t sub_1ABF14FDC()
{
  unint64_t result;

  result = qword_1EEC451B8;
  if (!qword_1EEC451B8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistError, &type metadata for WatchlistError);
    atomic_store(result, (unint64_t *)&qword_1EEC451B8);
  }
  return result;
}

unint64_t sub_1ABF15024()
{
  unint64_t result;

  result = qword_1EEC451C0;
  if (!qword_1EEC451C0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistError, &type metadata for WatchlistError);
    atomic_store(result, (unint64_t *)&qword_1EEC451C0);
  }
  return result;
}

uint64_t sub_1ABF1507C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1ABF15084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1ABF1508C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_1ABF15094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1ABF1509C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_1ABF150A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t sub_1ABF150AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t sub_1ABF150B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t sub_1ABF150BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t sub_1ABF150C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t sub_1ABF150CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 144))();
}

uint64_t sub_1ABF150D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 152))();
}

uint64_t sub_1ABF150DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t sub_1ABF150E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 168))();
}

uint64_t sub_1ABF150EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 176))();
}

uint64_t sub_1ABF150F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 184))();
}

uint64_t sub_1ABF150FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 192))();
}

uint64_t sub_1ABF15104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1ABF1510C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t storeEnumTagSinglePayload for WatchlistError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABF15160 + 4 * byte_1ABF506C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABF15194 + 4 * byte_1ABF506C0[v4]))();
}

uint64_t sub_1ABF15194(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF1519C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABF151A4);
  return result;
}

uint64_t sub_1ABF151B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABF151B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABF151BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF151C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistError()
{
  return &type metadata for WatchlistError;
}

uint64_t sub_1ABF151E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  const __CFString *v29;
  uint64_t v30;

  v3 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1ABF31774();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - v9;
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v29 = CFSTR("watchlist");
  v11 = sub_1ABF317A4();
  v13 = v12;
  swift_beginAccess();
  v30 = v1;
  v14 = *(_QWORD *)(v1 + 64);
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_1ABD00F9C(v11, v13), (v16 & 1) != 0))
  {
    v17 = *(_QWORD *)(v14 + 56) + 48 * v15;
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v21 = *(_QWORD *)(v17 + 16);
    v20 = *(_QWORD *)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = *(_BYTE *)(v17 + 40);
    v24 = *(_BYTE *)(v17 + 41);
    swift_endAccess();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1ABF31738();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    if (qword_1ED34FD78 != -1)
      swift_once();
    v25 = (id)qword_1ED368428;
    sub_1ABF30844();
    v18 = sub_1ABF317EC();
    v19 = v26;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    v20 = sub_1ABF317A4();
    v22 = v27;
    v24 = 0;
    v23 = -96;
    v21 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)a1 = v18;
  *(_QWORD *)(a1 + 8) = v19;
  *(_QWORD *)(a1 + 16) = v21;
  *(_QWORD *)(a1 + 24) = v20;
  *(_QWORD *)(a1 + 32) = v22;
  *(_BYTE *)(a1 + 40) = v23;
  *(_BYTE *)(a1 + 41) = v24;
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  return swift_release();
}

uint64_t sub_1ABF15474(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v55;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int16 v78;

  v3 = v2;
  v72 = a2;
  v61 = a1;
  sub_1ABD34B28(0);
  v69 = *(_QWORD *)(v4 - 8);
  v70 = v4;
  MEMORY[0x1E0C80A78](v4);
  v68 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v66);
  v67 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1ABF30790();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v57 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v8);
  v65 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1ABF31774();
  v63 = *(_QWORD *)(v10 - 8);
  v64 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v62 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v71 = (char *)&v57 - v13;
  v60 = sub_1ABF31C18();
  v14 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1ABF31C00();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v17);
  v19 = sub_1ABF315D0();
  MEMORY[0x1E0C80A78](v19);
  v20 = sub_1ABF30AE4();
  MEMORY[0x1E0C80A78](v20);
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  sub_1ABF30AD8();
  sub_1ABF30AFC();
  swift_allocObject();
  *(_QWORD *)(v2 + 40) = sub_1ABF30AF0();
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD60);
  sub_1ABF315B8();
  v21 = MEMORY[0x1E0DEE9D8];
  v73 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FD50, v18, MEMORY[0x1E0DEF828]);
  sub_1ABCF5A54(0, &qword_1ED34FCE0, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD33C4C();
  v22 = v61;
  sub_1ABF31E04();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF8D0], v60);
  v23 = sub_1ABF31C3C();
  *(_QWORD *)(v2 + 168) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v2 + 48) = v23;
  *(_QWORD *)(v2 + 56) = v21;
  *(_QWORD *)(v2 + 64) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v2 + 152) = v21;
  *(_QWORD *)(v2 + 160) = 0;
  sub_1ABD07E04((uint64_t)v22, v2 + 72);
  sub_1ABD07E04(v72, v2 + 112);
  v24 = *(id *)(v2 + 32);
  v25 = (void *)sub_1ABF31780();
  v26 = objc_msgSend(v24, sel_stringForKey_, v25);

  if (v26)
  {
    v27 = sub_1ABF317A4();
    v29 = v28;

    v30 = v71;
    sub_1ABF31738();
    v31 = v63;
    v32 = v64;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, v30, v64);
    if (qword_1ED34FD78 != -1)
      swift_once();
    v33 = (id)qword_1ED368428;
    sub_1ABF30844();
    v34 = sub_1ABF317EC();
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v71, v32);
    v73 = v34;
    v74 = v36;
    v37 = MEMORY[0x1E0DEE9D8];
    v75 = MEMORY[0x1E0DEE9D8];
    v76 = v27;
    v77 = v29;
  }
  else
  {
    v38 = v57;
    v39 = v71;
    sub_1ABF31738();
    v40 = v63;
    v41 = v64;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, v39, v64);
    if (qword_1ED34FD78 != -1)
      swift_once();
    v42 = (id)qword_1ED368428;
    sub_1ABF30844();
    v43 = sub_1ABF317EC();
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
    sub_1ABF2FBD8();
    v46 = sub_1ABF30778();
    v48 = v47;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v59);
    v73 = v43;
    v74 = v45;
    v37 = MEMORY[0x1E0DEE9D8];
    v75 = MEMORY[0x1E0DEE9D8];
    v76 = v46;
    v77 = v48;
  }
  v78 = 160;
  sub_1ABD07F74();
  swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1ABF3154C();
  swift_allocObject();
  swift_weakInit();
  v73 = v37;
  v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350AE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B50, v49, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD33D88();
  sub_1ABF31E04();
  sub_1ABD34F80();
  swift_allocObject();
  *(_QWORD *)(v3 + 24) = sub_1ABF31078();
  swift_release();
  v73 = *(_QWORD *)(v3 + 16);
  sub_1ABD07F74();
  sub_1ABCFE1EC(&qword_1ED34DDF8, (uint64_t (*)(uint64_t))sub_1ABD07F74, MEMORY[0x1E0C95FB8]);
  sub_1ABF2FF68();
  v50 = v68;
  sub_1ABF31558();
  swift_release();
  sub_1ABCFE1EC(&qword_1ED34DDE0, (uint64_t (*)(uint64_t))sub_1ABD34B28, MEMORY[0x1E0C958E0]);
  sub_1ABF2FF68();
  v51 = v70;
  sub_1ABF3157C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v50, v51);
  swift_beginAccess();
  sub_1ABF314F8();
  swift_endAccess();
  swift_release();
  v52 = v22[3];
  v53 = v22[4];
  __swift_project_boxed_opaque_existential_1(v22, v52);
  v54 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v53 + 56);
  v55 = sub_1ABF2FF68();
  v54(v55, &off_1E5AE5CF0, v52, v53);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v72);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v3;
}

uint64_t sub_1ABF15D04(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2[12];
  v3 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 120))(v2, v3);
}

uint64_t sub_1ABF15D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;

  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a2 + 64) + 16))
  {
    sub_1ABF2FF5C();
    sub_1ABD00F9C(a3, a4);
    if ((v7 & 1) != 0)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  sub_1ABD34E80(0, (unint64_t *)&unk_1ED34E430, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_allocObject();
  v8 = sub_1ABF311E0();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  return v8;
}

uint64_t sub_1ABF15EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF5C();
  v5 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v6 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();

  v7 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();

  v8 = (void *)sub_1ABF31114();
  v9 = sub_1ABF3118C();
  swift_release();

  return v9;
}

uint64_t sub_1ABF16068(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v7 = sub_1ABF302A4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a3;
  v24 = a4;
  sub_1ABF3022C();
  sub_1ABD0E288();
  v11 = sub_1ABF31DA4();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0)
    v14 = v11 & 0xFFFFFFFFFFFFLL;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    sub_1ABF15024();
    swift_allocError();
    *v20 = 1;
    goto LABEL_7;
  }
  v25 = *(_QWORD *)(a2 + 40);
  sub_1ABF30AFC();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF2FF68();
  sub_1ABF31090();
  swift_release();
  v15 = v23;
  v16 = sub_1ABF31804();
  v18 = v17;
  swift_bridgeObjectRelease();
  LOBYTE(v16) = sub_1ABD22BAC(v16, v18, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    sub_1ABF15024();
    swift_allocError();
    *v19 = 0;
LABEL_7:
    sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311D4();
  }
  v23 = a3;
  v24 = a4;
  sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABF162DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  swift_beginAccess();
  v2 = sub_1ABF2FF5C();
  v3 = sub_1ABF12308(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1ABF16348(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = a2[12];
  v5 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 80))(v2, v3, v4, v5);
}

uint64_t sub_1ABF163AC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;

  v3 = *a1;
  v4 = a1[3];
  v5 = a1[4];
  v6 = *((_WORD *)a1 + 20);
  v7 = a2[12];
  v8 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v7);
  v10 = v3;
  v11 = *(_OWORD *)(a1 + 1);
  v12 = v4;
  v13 = v5;
  v14 = v6;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v8 + 184))(&v10, v7, v8);
}

uint64_t sub_1ABF1643C(__int128 *a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  char v12;
  uint64_t v14;
  __int128 v15;
  _BYTE v16[26];

  v3 = a1[1];
  v15 = *a1;
  *(_OWORD *)v16 = v3;
  *(_OWORD *)&v16[10] = *(__int128 *)((char *)a1 + 26);
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v5 = *(_QWORD *)&v16[8];
  v4 = *(_QWORD *)&v16[16];
  v6 = (_QWORD *)(a2 + 56);
  swift_beginAccess();
  v7 = *(_QWORD **)(a2 + 56);
  sub_1ABF2FF5C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 56) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_1ABD12054(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_1ABD12054((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = v5;
  v11[5] = v4;
  swift_endAccess();
  swift_beginAccess();
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)&v15);
  v12 = swift_isUniquelyReferenced_nonNull_native();
  v14 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 64) = 0x8000000000000000;
  sub_1ABDF0FA8(&v15, v5, v4, v12);
  *(_QWORD *)(a2 + 64) = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABD04B78((uint64_t)&v15);
  return sub_1ABF311E0();
}

uint64_t sub_1ABF1662C(__int128 *a1)
{
  __int128 v1;
  _OWORD *v2;
  __int128 v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  __int128 v9;
  _OWORD v10[2];

  v1 = a1[1];
  v9 = *a1;
  v10[0] = v1;
  *(_OWORD *)((char *)v10 + 10) = *(__int128 *)((char *)a1 + 26);
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v2 = (_OWORD *)swift_allocObject();
  v3 = v10[0];
  v2[1] = v9;
  v2[2] = v3;
  *(_OWORD *)((char *)v2 + 42) = *(_OWORD *)((char *)v10 + 10);
  sub_1ABD04B78((uint64_t)&v9);
  v4 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v5 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();

  v6 = (void *)sub_1ABF31114();
  v7 = sub_1ABF3118C();
  swift_release();

  return v7;
}

uint64_t sub_1ABF16794(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;

  v3 = *a1;
  v4 = a1[3];
  v5 = a1[4];
  v6 = *((_WORD *)a1 + 20);
  v7 = a2[12];
  v8 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v7);
  v10 = v3;
  v11 = *(_OWORD *)(a1 + 1);
  v12 = v4;
  v13 = v5;
  v14 = v6;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v8 + 192))(&v10, v7, v8);
}

uint64_t sub_1ABF16824(__int128 *a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  _BYTE v10[26];
  __int128 v11;
  _BYTE v12[26];

  v3 = a1[1];
  v11 = *a1;
  *(_OWORD *)v12 = v3;
  *(_OWORD *)&v12[10] = *(__int128 *)((char *)a1 + 26);
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  sub_1ABD04B78((uint64_t)&v11);
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABF2101C(v4, (uint64_t)&v11);
  sub_1ABD04BC0((uint64_t)&v11);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 56) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)&v12[8];
  v7 = *(_QWORD *)&v12[16];
  swift_beginAccess();
  sub_1ABF2FF5C();
  sub_1ABDEFBE0(v6, v7, (uint64_t)&v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1ABD365D4(v9, *((uint64_t *)&v9 + 1));
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  v9 = v11;
  *(_OWORD *)v10 = *(_OWORD *)v12;
  *(_OWORD *)&v10[10] = *(_OWORD *)&v12[10];
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABD04B78((uint64_t)&v11);
  return sub_1ABF311E0();
}

uint64_t sub_1ABF169A8(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  __int128 v25;
  _OWORD v26[2];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v3 = a1[7];
  v33 = a1[6];
  v34 = v3;
  v35 = *((_QWORD *)a1 + 16);
  v4 = a1[3];
  v29 = a1[2];
  v30 = v4;
  v5 = a1[5];
  v31 = a1[4];
  v32 = v5;
  v6 = a1[1];
  v27 = *a1;
  v28 = v6;
  v7 = a2[1];
  v25 = *a2;
  v26[0] = v7;
  *(_OWORD *)((char *)v26 + 10) = *(__int128 *)((char *)a2 + 26);
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v8 = swift_allocObject();
  v9 = v34;
  *(_OWORD *)(v8 + 112) = v33;
  *(_OWORD *)(v8 + 128) = v9;
  v10 = v30;
  *(_OWORD *)(v8 + 48) = v29;
  *(_OWORD *)(v8 + 64) = v10;
  v11 = v32;
  *(_OWORD *)(v8 + 80) = v31;
  *(_OWORD *)(v8 + 96) = v11;
  v12 = v28;
  *(_OWORD *)(v8 + 16) = v27;
  *(_OWORD *)(v8 + 32) = v12;
  v13 = v26[0];
  *(_OWORD *)(v8 + 152) = v25;
  *(_QWORD *)(v8 + 144) = v35;
  *(_OWORD *)(v8 + 168) = v13;
  *(_OWORD *)(v8 + 178) = *(_OWORD *)((char *)v26 + 10);
  sub_1ABD97ECC((uint64_t)&v27);
  sub_1ABD04B78((uint64_t)&v25);
  v14 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v15 = swift_allocObject();
  v16 = v26[0];
  *(_OWORD *)(v15 + 16) = v25;
  *(_OWORD *)(v15 + 32) = v16;
  *(_OWORD *)(v15 + 42) = *(_OWORD *)((char *)v26 + 10);
  v17 = v34;
  *(_OWORD *)(v15 + 160) = v33;
  *(_OWORD *)(v15 + 176) = v17;
  v18 = v35;
  v19 = v30;
  *(_OWORD *)(v15 + 96) = v29;
  *(_OWORD *)(v15 + 112) = v19;
  v20 = v32;
  *(_OWORD *)(v15 + 128) = v31;
  *(_OWORD *)(v15 + 144) = v20;
  v21 = v28;
  *(_OWORD *)(v15 + 64) = v27;
  *(_OWORD *)(v15 + 80) = v21;
  *(_QWORD *)(v15 + 192) = v18;
  *(_QWORD *)(v15 + 200) = v2;
  sub_1ABD97ECC((uint64_t)&v27);
  sub_1ABD04B78((uint64_t)&v25);
  sub_1ABF2FF68();
  v22 = (void *)sub_1ABF31114();
  v23 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v23;
}

uint64_t sub_1ABF16BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  void *v44;
  _OWORD *v45;
  __int128 v46;
  void *v47;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  _BYTE v56[26];
  __int128 v57;
  _BYTE v58[26];
  uint64_t v59;

  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v9 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 64);
  v53 = v8;
  if (*(_QWORD *)(v10 + 16))
  {
    sub_1ABF2FF5C();
    v11 = sub_1ABD00F9C(v9, v8);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(v10 + 56) + 48 * v11;
      v14 = *(_QWORD *)(v13 + 8);
      v15 = *(_QWORD **)(v13 + 16);
      v51 = *(_QWORD *)v13;
      v52 = *(_QWORD *)(v13 + 24);
      v16 = *(_QWORD *)(v13 + 32);
      v49 = *(_BYTE *)(v13 + 40);
      v50 = *(_BYTE *)(v13 + 41);
      swift_endAccess();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v49 = *(_BYTE *)(a3 + 40);
  v50 = *(_BYTE *)(a3 + 41);
  v14 = *(_QWORD *)(a3 + 8);
  v15 = *(_QWORD **)(a3 + 16);
  v51 = *(_QWORD *)a3;
  sub_1ABD04B78(a3);
  v52 = v9;
  v16 = v8;
LABEL_6:
  v54 = v9;
  v17 = *(_QWORD *)(a4 + 16);
  v18 = *(_QWORD *)(a4 + 24);
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v19 = v15;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
  v21 = v19[2];
  v20 = v19[3];
  if (v21 >= v20 >> 1)
    v19 = sub_1ABD12054((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
  v19[2] = v21 + 1;
  v22 = &v19[2 * v21];
  v22[4] = v17;
  v22[5] = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v55 = v51;
  *((_QWORD *)&v55 + 1) = v14;
  *(_QWORD *)v56 = v19;
  *(_QWORD *)&v56[8] = v52;
  *(_QWORD *)&v56[16] = v16;
  v56[24] = v49;
  v56[25] = v50;
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v59 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 64) = 0x8000000000000000;
  sub_1ABDF0FA8(&v55, v52, v16, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a2 + 64) = v59;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  if (v54 == sub_1ABF317A4() && v53 == v24)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      sub_1ABF151E0((uint64_t)&v57);
      v26 = *(_QWORD **)v58;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = sub_1ABD22BAC(v17, v18, v26);
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
      {
        sub_1ABF151E0((uint64_t)&v57);
        sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1ABF3127C();
        v30 = swift_allocObject();
        v31 = *(_OWORD *)(a4 + 112);
        *(_OWORD *)(v30 + 112) = *(_OWORD *)(a4 + 96);
        *(_OWORD *)(v30 + 128) = v31;
        v32 = *(_OWORD *)(a4 + 48);
        *(_OWORD *)(v30 + 48) = *(_OWORD *)(a4 + 32);
        *(_OWORD *)(v30 + 64) = v32;
        v33 = *(_OWORD *)(a4 + 80);
        *(_OWORD *)(v30 + 80) = *(_OWORD *)(a4 + 64);
        *(_OWORD *)(v30 + 96) = v33;
        v34 = *(_OWORD *)(a4 + 16);
        *(_OWORD *)(v30 + 16) = *(_OWORD *)a4;
        *(_OWORD *)(v30 + 32) = v34;
        v35 = *(_OWORD *)v58;
        *(_OWORD *)(v30 + 152) = v57;
        *(_QWORD *)(v30 + 144) = *(_QWORD *)(a4 + 128);
        *(_OWORD *)(v30 + 168) = v35;
        *(_OWORD *)(v30 + 178) = *(_OWORD *)&v58[10];
        sub_1ABD97ECC(a4);
        sub_1ABD04B78((uint64_t)&v57);
        v36 = (void *)sub_1ABF31114();
        sub_1ABF3118C();
        swift_release();
        swift_release();

        v37 = swift_allocObject();
        v38 = *(_OWORD *)v58;
        *(_OWORD *)(v37 + 16) = v57;
        *(_OWORD *)(v37 + 32) = v38;
        *(_OWORD *)(v37 + 42) = *(_OWORD *)&v58[10];
        v39 = *(_OWORD *)(a4 + 112);
        *(_OWORD *)(v37 + 160) = *(_OWORD *)(a4 + 96);
        *(_OWORD *)(v37 + 176) = v39;
        v40 = *(_QWORD *)(a4 + 128);
        v41 = *(_OWORD *)(a4 + 48);
        *(_OWORD *)(v37 + 96) = *(_OWORD *)(a4 + 32);
        *(_OWORD *)(v37 + 112) = v41;
        v42 = *(_OWORD *)(a4 + 80);
        *(_OWORD *)(v37 + 128) = *(_OWORD *)(a4 + 64);
        *(_OWORD *)(v37 + 144) = v42;
        v43 = *(_OWORD *)(a4 + 16);
        *(_OWORD *)(v37 + 64) = *(_OWORD *)a4;
        *(_OWORD *)(v37 + 80) = v43;
        *(_QWORD *)(v37 + 192) = v40;
        *(_QWORD *)(v37 + 200) = a5;
        sub_1ABD97ECC(a4);
        sub_1ABD04B78((uint64_t)&v57);
        sub_1ABF2FF68();
        v44 = (void *)sub_1ABF31114();
        sub_1ABF3118C();
        swift_release();
        swift_release();

        sub_1ABD04BC0((uint64_t)&v57);
        v45 = (_OWORD *)swift_allocObject();
        v46 = *(_OWORD *)v56;
        v45[1] = v55;
        v45[2] = v46;
        *(_OWORD *)((char *)v45 + 42) = *(_OWORD *)&v56[10];
        v47 = (void *)sub_1ABF31114();
        v28 = sub_1ABF31180();
        swift_release();
        swift_release();

        return v28;
      }
    }
  }
  v57 = v55;
  *(_OWORD *)v58 = *(_OWORD *)v56;
  *(_OWORD *)&v58[10] = *(_OWORD *)&v56[10];
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABF17160(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  _OWORD *v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  __int128 v14;
  _OWORD v15[2];

  v5 = a3[1];
  v14 = *a3;
  v15[0] = v5;
  *(_OWORD *)((char *)v15 + 10) = *(__int128 *)((char *)a3 + 26);
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = v15[0];
  *(_OWORD *)(v6 + 32) = v14;
  *(_OWORD *)(v6 + 48) = v7;
  *(_OWORD *)(v6 + 58) = *(_OWORD *)((char *)v15 + 10);
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)&v14);
  v8 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v9 = (_OWORD *)swift_allocObject();
  v10 = v15[0];
  v9[1] = v14;
  v9[2] = v10;
  *(_OWORD *)((char *)v9 + 42) = *(_OWORD *)((char *)v15 + 10);
  sub_1ABD04B78((uint64_t)&v14);
  v11 = (void *)sub_1ABF31114();
  v12 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_1ABF172E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;

  v6 = *a1;
  v5 = a1[1];
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  v7 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_5;
  v9 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  sub_1ABF2FF5C();
  v10 = sub_1ABD00F9C(v9, v8);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    sub_1ABF2FF68();
    sub_1ABF30ACC();
    swift_release();
    *(_QWORD *)&v22 = v6;
    *((_QWORD *)&v22 + 1) = v5;
    sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1ABF2FF5C();
    return sub_1ABF311E0();
  }
  v12 = *(_QWORD *)(v7 + 56) + 48 * v10;
  v21 = *(_QWORD *)v12;
  v13 = *(_QWORD *)(v12 + 8);
  v14 = *(_QWORD *)(v12 + 16);
  v15 = *(_QWORD *)(v12 + 32);
  v19 = *(_QWORD *)(v12 + 24);
  v20 = *(_WORD *)(v12 + 40);
  swift_endAccess();
  sub_1ABF2FF5C();
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  v16 = sub_1ABF20EB0(v14, v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v22 = v21;
  *((_QWORD *)&v22 + 1) = v13;
  v23 = v16;
  v24 = v19;
  v25 = v15;
  v26 = v20;
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v27 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 64) = 0x8000000000000000;
  sub_1ABDF0FA8(&v22, v19, v15, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a2 + 64) = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABF17598(__int128 *a1, uint64_t a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  _OWORD *v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  __int128 v28;
  _OWORD v29[2];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39[17];

  v4 = a1[7];
  v36 = a1[6];
  v37 = v4;
  v38 = *((_QWORD *)a1 + 16);
  v5 = a1[3];
  v32 = a1[2];
  v33 = v5;
  v6 = a1[5];
  v34 = a1[4];
  v35 = v6;
  v7 = a1[1];
  v30 = *a1;
  v31 = v7;
  sub_1ABD843F0(a2, (uint64_t)v39, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  v8 = a3[1];
  v28 = *a3;
  v29[0] = v8;
  *(_OWORD *)((char *)v29 + 10) = *(__int128 *)((char *)a3 + 26);
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v9 = swift_allocObject();
  v10 = v37;
  *(_OWORD *)(v9 + 112) = v36;
  *(_OWORD *)(v9 + 128) = v10;
  *(_QWORD *)(v9 + 144) = v38;
  v11 = v33;
  *(_OWORD *)(v9 + 48) = v32;
  *(_OWORD *)(v9 + 64) = v11;
  v12 = v35;
  *(_OWORD *)(v9 + 80) = v34;
  *(_OWORD *)(v9 + 96) = v12;
  v13 = v31;
  *(_OWORD *)(v9 + 16) = v30;
  *(_OWORD *)(v9 + 32) = v13;
  sub_1ABD843F0((uint64_t)v39, v9 + 152, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  v14 = v29[0];
  *(_OWORD *)(v9 + 288) = v28;
  *(_OWORD *)(v9 + 304) = v14;
  *(_OWORD *)(v9 + 314) = *(_OWORD *)((char *)v29 + 10);
  sub_1ABD97ECC((uint64_t)&v30);
  sub_1ABDA89F4(v39);
  sub_1ABD04B78((uint64_t)&v28);
  v15 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v16 = (_OWORD *)swift_allocObject();
  v17 = v29[0];
  v16[1] = v28;
  v16[2] = v17;
  *(_OWORD *)((char *)v16 + 42) = *(_OWORD *)((char *)v29 + 10);
  sub_1ABD04B78((uint64_t)&v28);
  v18 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v19 = swift_allocObject();
  v20 = v29[0];
  *(_OWORD *)(v19 + 16) = v28;
  *(_OWORD *)(v19 + 32) = v20;
  *(_OWORD *)(v19 + 42) = *(_OWORD *)((char *)v29 + 10);
  v21 = v37;
  *(_OWORD *)(v19 + 160) = v36;
  *(_OWORD *)(v19 + 176) = v21;
  *(_QWORD *)(v19 + 192) = v38;
  v22 = v33;
  *(_OWORD *)(v19 + 96) = v32;
  *(_OWORD *)(v19 + 112) = v22;
  v23 = v35;
  *(_OWORD *)(v19 + 128) = v34;
  *(_OWORD *)(v19 + 144) = v23;
  v24 = v31;
  *(_OWORD *)(v19 + 64) = v30;
  *(_OWORD *)(v19 + 80) = v24;
  sub_1ABD843F0((uint64_t)v39, v19 + 200, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  sub_1ABD97ECC((uint64_t)&v30);
  sub_1ABDA89F4(v39);
  sub_1ABD04B78((uint64_t)&v28);
  v25 = (void *)sub_1ABF31114();
  v26 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v26;
}

uint64_t sub_1ABF17868(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v16;
  _OWORD v17[2];
  _BYTE v18[136];
  _OWORD v19[8];
  uint64_t v20;

  v8 = a2[12];
  v9 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v8);
  v10 = *(_OWORD *)(a3 + 112);
  v19[6] = *(_OWORD *)(a3 + 96);
  v19[7] = v10;
  v20 = *(_QWORD *)(a3 + 128);
  v11 = *(_OWORD *)(a3 + 48);
  v19[2] = *(_OWORD *)(a3 + 32);
  v19[3] = v11;
  v12 = *(_OWORD *)(a3 + 80);
  v19[4] = *(_OWORD *)(a3 + 64);
  v19[5] = v12;
  v13 = *(_OWORD *)(a3 + 16);
  v19[0] = *(_OWORD *)a3;
  v19[1] = v13;
  sub_1ABD843F0(a4, (uint64_t)v18, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  v14 = a5[1];
  v16 = *a5;
  v17[0] = v14;
  *(_OWORD *)((char *)v17 + 10) = *(__int128 *)((char *)a5 + 26);
  return (*(uint64_t (**)(_OWORD *, _BYTE *, __int128 *, uint64_t, uint64_t))(v9 + 160))(v19, v18, &v16, v8, v9);
}

uint64_t sub_1ABF1793C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t result;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  _QWORD *v58;

  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  v9 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_6;
  v11 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(a3 + 32);
  sub_1ABF2FF5C();
  v12 = sub_1ABD00F9C(v11, v10);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    sub_1ABF2FF68();
    sub_1ABF30ACC();
    swift_release();
    v25 = *(_OWORD *)(a4 + 112);
    v49 = *(_OWORD *)(a4 + 96);
    v50 = v25;
    v51 = *(_QWORD *)(a4 + 128);
    v26 = *(_OWORD *)(a4 + 48);
    v45 = *(_OWORD *)(a4 + 32);
    v46 = v26;
    v27 = *(_OWORD *)(a4 + 80);
    v47 = *(_OWORD *)(a4 + 64);
    v48 = v27;
    v28 = *(_OWORD *)(a4 + 16);
    v43 = *(_OWORD *)a4;
    v44 = v28;
    sub_1ABD04578(0, &qword_1EEC45230, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1ABD97ECC(a4);
    return sub_1ABF311E0();
  }
  v14 = *(_QWORD *)(v9 + 56) + 48 * v12;
  v37 = *(_QWORD *)v14;
  v15 = *(_QWORD *)(v14 + 8);
  v16 = *(_QWORD *)(v14 + 32);
  v39 = *(_QWORD *)(v14 + 24);
  v38 = *(_BYTE *)(v14 + 41);
  swift_endAccess();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  sub_1ABD97ECC(a4);
  v17 = sub_1ABF2FF5C();
  v18 = (_QWORD *)sub_1ABF20D54(v17, a4);
  sub_1ABD97F60(a4);
  swift_bridgeObjectRelease();
  v58 = v18;
  sub_1ABD843F0(a5, (uint64_t)&v43, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  if (sub_1ABD75518((uint64_t)&v43) == 1)
  {
    v20 = *(_QWORD *)(a4 + 16);
    v19 = *(_QWORD *)(a4 + 24);
    sub_1ABF2FF5C();
    v21 = 0;
    v22 = 0;
    v23 = v20;
    v24 = v19;
LABEL_14:
    sub_1ABF20834(v21, v22, v23, v24);
    *(_QWORD *)&v52 = v37;
    *((_QWORD *)&v52 + 1) = v15;
    v53 = v58;
    v54 = v39;
    v55 = v16;
    v56 = -96;
    v57 = v38;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1ABF2FF5C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v42 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a2 + 64) = 0x8000000000000000;
    sub_1ABDF0FA8(&v52, v39, v16, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a2 + 64) = v42;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF2FF68();
    sub_1ABF30ACC();
    swift_release();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF31534();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v40 == v39 && v41 == v16)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = sub_1ABF3223C();
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    sub_1ABF2FF68();
    sub_1ABF31528();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_20:
    sub_1ABD04578(0, &qword_1EEC45230, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1ABD97ECC(a4);
    return sub_1ABF311E0();
  }
  result = sub_1ABD33984(v44, *((uint64_t *)&v44 + 1), v18);
  if ((v30 & 1) != 0)
    v31 = 0;
  else
    v31 = result;
  v32 = v31 + 1;
  if (__OFADD__(v31, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v18[2] < v32)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((v32 & 0x8000000000000000) == 0)
  {
    v33 = *(_QWORD *)(a4 + 16);
    v34 = *(_QWORD *)(a4 + 24);
    sub_1ABF2FF5C();
    v21 = v32;
    v22 = v32;
    v23 = v33;
    v24 = v34;
    goto LABEL_14;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1ABF17DF8(uint64_t a1, __int128 *a2)
{
  __int128 v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  __int128 v6;
  void *v7;
  _OWORD *v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  uint64_t v14;
  __int128 v16;
  _OWORD v17[2];

  v3 = a2[1];
  v16 = *a2;
  v17[0] = v3;
  *(_OWORD *)((char *)v17 + 10) = *(__int128 *)((char *)a2 + 26);
  v4 = MEMORY[0x1E0DEAEC8];
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  v6 = v17[0];
  *(_OWORD *)(v5 + 24) = v16;
  *(_OWORD *)(v5 + 40) = v6;
  *(_OWORD *)(v5 + 50) = *(_OWORD *)((char *)v17 + 10);
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)&v16);
  v7 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))v4);
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v8 = (_OWORD *)swift_allocObject();
  v9 = v17[0];
  v8[1] = v16;
  v8[2] = v9;
  *(_OWORD *)((char *)v8 + 42) = *(_OWORD *)((char *)v17 + 10);
  sub_1ABD04B78((uint64_t)&v16);
  v10 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v11 = swift_allocObject();
  v12 = v17[0];
  *(_OWORD *)(v11 + 16) = v16;
  *(_OWORD *)(v11 + 32) = v12;
  *(_OWORD *)(v11 + 42) = *(_OWORD *)((char *)v17 + 10);
  *(_QWORD *)(v11 + 64) = a1;
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)&v16);
  v13 = (void *)sub_1ABF31114();
  v14 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1ABF18024(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;

  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  v7 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(v7 + 16))
  {
    v9 = a3[3];
    v8 = a3[4];
    sub_1ABF2FF5C();
    v10 = sub_1ABD00F9C(v9, v8);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(v7 + 56) + 48 * v10;
      v13 = *(_QWORD *)(v12 + 8);
      v21 = *(_QWORD *)v12;
      v14 = *(_QWORD *)(v12 + 24);
      v15 = *(_QWORD *)(v12 + 32);
      v16 = *(_BYTE *)(v12 + 41);
      swift_endAccess();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v24 = v21;
      *((_QWORD *)&v24 + 1) = v13;
      v25 = a4;
      v26 = v14;
      v27 = v15;
      v28 = -96;
      v29 = v16;
      swift_beginAccess();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v30 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a2 + 64) = 0x8000000000000000;
      sub_1ABDF0FA8(&v24, v14, v15, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(a2 + 64) = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_1ABF2FF68();
      sub_1ABF30ACC();
      swift_release();
      sub_1ABF2FF68();
      sub_1ABF2FF68();
      sub_1ABF31534();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22 == v14 && v23 == v15)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v19 = sub_1ABF3223C();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      sub_1ABF2FF68();
      sub_1ABF31528();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_11:
      sub_1ABD34E80(0, (unint64_t *)&qword_1ED34DD60, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_allocObject();
      sub_1ABF2FF5C();
      v18 = sub_1ABF311E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  *(_QWORD *)&v24 = a3[2];
  sub_1ABD34E80(0, (unint64_t *)&qword_1ED34DD60, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABF183C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  __int128 v18;
  _OWORD v19[2];

  v9 = a5[1];
  v18 = *a5;
  v19[0] = v9;
  *(_OWORD *)((char *)v19 + 10) = *(__int128 *)((char *)a5 + 26);
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  v11 = v19[0];
  *(_OWORD *)(v10 + 48) = v18;
  *(_OWORD *)(v10 + 64) = v11;
  *(_OWORD *)(v10 + 74) = *(_OWORD *)((char *)v19 + 10);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)&v18);
  v12 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v13 = swift_allocObject();
  v14 = v19[0];
  *(_OWORD *)(v13 + 16) = v18;
  *(_OWORD *)(v13 + 32) = v14;
  *(_OWORD *)(v13 + 42) = *(_OWORD *)((char *)v19 + 10);
  *(_QWORD *)(v13 + 64) = a3;
  *(_QWORD *)(v13 + 72) = a4;
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)&v18);
  v15 = (void *)sub_1ABF31114();
  v16 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1ABF18570(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;

  v9 = *a1;
  v10 = a1[1];
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  v11 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_8;
  v12 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(a3 + 32);
  sub_1ABF2FF5C();
  v14 = sub_1ABD00F9C(v12, v13);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    swift_endAccess();
    sub_1ABF2FF68();
    sub_1ABF30ACC();
    swift_release();
    *(_QWORD *)&v33 = v9;
    *((_QWORD *)&v33 + 1) = v10;
    sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1ABF2FF5C();
    return sub_1ABF311E0();
  }
  v30 = a4;
  v31 = a5;
  v16 = *(_QWORD *)(v11 + 56) + 48 * v14;
  v17 = *(_QWORD *)(v16 + 8);
  v29 = *(_QWORD *)v16;
  v19 = *(_QWORD **)(v16 + 16);
  v18 = *(_QWORD *)(v16 + 24);
  v20 = *(_QWORD *)(v16 + 32);
  v27 = *(_BYTE *)(v16 + 41);
  v28 = *(_BYTE *)(v16 + 40);
  swift_endAccess();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v39 = v19;
  result = sub_1ABD33984(v9, v10, v19);
  if ((v22 & 1) != 0)
  {
    sub_1ABF2FF5C();
    v25 = (uint64_t)v19;
    goto LABEL_10;
  }
  v23 = result;
  if (v19[2] < result)
  {
    __break(1u);
  }
  else if ((result & 0x8000000000000000) == 0)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF20834(v23, v23, v30, v31);
    sub_1ABF2FF5C();
    v24 = sub_1ABF2FF5C();
    v25 = sub_1ABF20EB0(v24, v9, v10);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
LABEL_10:
    *(_QWORD *)&v33 = v29;
    *((_QWORD *)&v33 + 1) = v17;
    v34 = v25;
    v35 = v18;
    v36 = v20;
    v37 = v28;
    v38 = v27;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    sub_1ABF2FF5C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a2 + 64) = 0x8000000000000000;
    sub_1ABDF0FA8(&v33, v18, v20, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a2 + 64) = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABF2FF68();
    sub_1ABF30ACC();
    swift_release();
    sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1ABF2FF5C();
    return sub_1ABF311E0();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABF188C4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  _OWORD *v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v10[6];
  __int128 v11;
  _OWORD v12[2];

  v2 = a1[1];
  v11 = *a1;
  v12[0] = v2;
  *(_OWORD *)((char *)v12 + 10) = *(__int128 *)((char *)a1 + 26);
  sub_1ABD843F0(a2, (uint64_t)v10, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v3 = (_OWORD *)swift_allocObject();
  v4 = v12[0];
  v3[1] = v11;
  v3[2] = v4;
  *(_OWORD *)((char *)v3 + 42) = *(_OWORD *)((char *)v12 + 10);
  sub_1ABD843F0((uint64_t)v10, (uint64_t)(v3 + 4), &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  sub_1ABD04B78((uint64_t)&v11);
  sub_1ABDA85BC(v10);
  v5 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v6 = swift_allocObject();
  sub_1ABD843F0((uint64_t)v10, v6 + 16, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  sub_1ABDA85BC(v10);
  v7 = (void *)sub_1ABF31114();
  v8 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_1ABF18A70(uint64_t a1, _QWORD *a2, __int128 *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  _BYTE v10[48];
  __int128 v11;
  _OWORD v12[2];

  v6 = a2[12];
  v7 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v6);
  v8 = a3[1];
  v11 = *a3;
  v12[0] = v8;
  *(_OWORD *)((char *)v12 + 10) = *(__int128 *)((char *)a3 + 26);
  sub_1ABD843F0(a4, (uint64_t)v10, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  return (*(uint64_t (**)(__int128 *, _BYTE *, uint64_t, uint64_t))(v7 + 200))(&v11, v10, v6, v7);
}

uint64_t sub_1ABF18B0C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD *v26;
  char v27[8];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _BYTE v32[26];

  v5 = a1[1];
  v31 = *a1;
  *(_OWORD *)v32 = v5;
  *(_OWORD *)&v32[10] = *(__int128 *)((char *)a1 + 26);
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  v6 = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)&v31);
  v7 = (_QWORD *)sub_1ABF2101C(v6, (uint64_t)&v31);
  sub_1ABD04BC0((uint64_t)&v31);
  swift_bridgeObjectRelease();
  v26 = v7;
  sub_1ABD843F0(a3, (uint64_t)v27, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  if (!v28 || (result = sub_1ABD33984(v29, v30, v7), (v9 & 1) != 0))
  {
    v17 = *(_QWORD *)&v32[8];
    v11 = *(_QWORD *)&v32[16];
    sub_1ABF2FF5C();
    v18 = 0;
    v19 = 0;
    v20 = v17;
LABEL_10:
    sub_1ABF20834(v18, v19, v20, v11);
LABEL_11:
    *(_QWORD *)(a2 + 56) = v26;
    swift_bridgeObjectRelease();
    sub_1ABF2FF68();
    sub_1ABF30ACC();
    swift_release();
    sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1ABD04B78((uint64_t)&v31);
    return sub_1ABF311E0();
  }
  v10 = v7[2];
  v12 = *(_QWORD *)&v32[8];
  v11 = *(_QWORD *)&v32[16];
  if (result == v10 - 1)
  {
    sub_1ABF2FF5C();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_1ABD12054(0, v10 + 1, 1, v7);
    v13 = v7[2];
    v14 = v7[3];
    v15 = v13 + 1;
    if (v13 >= v14 >> 1)
    {
      v25 = v13 + 1;
      v22 = v7;
      v23 = v7[2];
      v24 = sub_1ABD12054((_QWORD *)(v14 > 1), v13 + 1, 1, v22);
      v13 = v23;
      v15 = v25;
      v7 = v24;
    }
    v7[2] = v15;
    v16 = &v7[2 * v13];
    v16[4] = v12;
    v16[5] = v11;
    v26 = v7;
    goto LABEL_11;
  }
  v21 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < v21)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if ((v21 & 0x8000000000000000) == 0)
  {
    sub_1ABF2FF5C();
    v18 = v21;
    v19 = v21;
    v20 = v12;
    goto LABEL_10;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1ABF18D78(__int128 *a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  _OWORD *v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __int128 v16;
  _OWORD v17[2];

  v5 = a1[1];
  v16 = *a1;
  v17[0] = v5;
  *(_OWORD *)((char *)v17 + 10) = *(__int128 *)((char *)a1 + 26);
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v7 = v17[0];
  *(_OWORD *)(v6 + 32) = v16;
  *(_OWORD *)(v6 + 48) = v7;
  *(_OWORD *)(v6 + 58) = *(_OWORD *)((char *)v17 + 10);
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)&v16);
  v8 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v9 = (_OWORD *)swift_allocObject();
  v10 = v17[0];
  v9[1] = v16;
  v9[2] = v10;
  *(_OWORD *)((char *)v9 + 42) = *(_OWORD *)((char *)v17 + 10);
  sub_1ABD04B78((uint64_t)&v16);
  v11 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  sub_1ABF2FF5C();
  v13 = (void *)sub_1ABF31114();
  v14 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1ABF18F64(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v9 = sub_1ABF302A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a3;
  v27 = a4;
  v25 = a4;
  sub_1ABF3022C();
  sub_1ABD0E288();
  v13 = sub_1ABF31DA4();
  v15 = v14;
  v16 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v17 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0)
    v17 = v13 & 0xFFFFFFFFFFFFLL;
  if (!v17)
  {
    swift_bridgeObjectRelease();
    sub_1ABF15024();
    swift_allocError();
    *v23 = 1;
    goto LABEL_7;
  }
  v28 = *(_QWORD *)(a2 + 40);
  MEMORY[0x1E0C80A78](v16);
  *(&v25 - 2) = a2;
  *(&v25 - 1) = a5;
  sub_1ABF30AFC();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF2FF68();
  sub_1ABF31090();
  swift_release();
  v18 = v26;
  v19 = sub_1ABF31804();
  v21 = v20;
  swift_bridgeObjectRelease();
  LOBYTE(v19) = sub_1ABD22BAC(v19, v21, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
    sub_1ABF15024();
    swift_allocError();
    *v22 = 0;
LABEL_7:
    sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311D4();
  }
  v26 = a3;
  v27 = v25;
  sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABF19208@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_beginAccess();
  sub_1ABD04B78((uint64_t)a1);
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABF214EC(v4, a1);
  sub_1ABD04BC0((uint64_t)a1);
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_1ABF19288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 41);
  *(_QWORD *)&v15 = a3;
  *((_QWORD *)&v15 + 1) = a4;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 64) = 0x8000000000000000;
  sub_1ABDF0FA8(&v15, v6, v7, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a2 + 64) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31534();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13 == v6 && v14 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1ABF2FF68();
    sub_1ABF31528();
    swift_release();
    goto LABEL_6;
  }
  v11 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    goto LABEL_5;
LABEL_6:
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABF194DC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char isUniquelyReferenced_nonNull_native;
  char v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 41);
  *(_QWORD *)&v14 = *(_QWORD *)a1;
  *((_QWORD *)&v14 + 1) = v4;
  v15 = v6;
  v16 = v5;
  v17 = v7;
  v18 = a3;
  v19 = v8;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 64) = 0x8000000000000000;
  sub_1ABDF0FA8(&v14, v5, v7, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a2 + 64) = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31534();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12 == v5 && v13 == v7)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1ABF2FF68();
    sub_1ABF31528();
    swift_release();
    goto LABEL_6;
  }
  v10 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
    goto LABEL_5;
LABEL_6:
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABF19708(__int128 *a1, char *a2)
{
  __int128 v2;
  char v3;
  uint64_t v4;
  __int128 v5;
  void *v6;
  _OWORD *v7;
  __int128 v8;
  void *v9;
  uint64_t v10;
  __int128 v12;
  _OWORD v13[2];

  v2 = a1[1];
  v12 = *a1;
  v13[0] = v2;
  *(_OWORD *)((char *)v13 + 10) = *(__int128 *)((char *)a1 + 26);
  v3 = *a2;
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v4 = swift_allocObject();
  v5 = v13[0];
  *(_OWORD *)(v4 + 16) = v12;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 42) = *(_OWORD *)((char *)v13 + 10);
  *(_BYTE *)(v4 + 58) = v3;
  sub_1ABD04B78((uint64_t)&v12);
  v6 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  v7 = (_OWORD *)swift_allocObject();
  v8 = v13[0];
  v7[1] = v12;
  v7[2] = v8;
  *(_OWORD *)((char *)v7 + 42) = *(_OWORD *)((char *)v13 + 10);
  sub_1ABD04B78((uint64_t)&v12);
  v9 = (void *)sub_1ABF31114();
  v10 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v10;
}

uint64_t sub_1ABF1987C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  char v9;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];
  uint64_t v14;

  v5 = a1[1];
  v12 = *a1;
  v13[0] = v5;
  *(_OWORD *)((char *)v13 + 10) = *(__int128 *)((char *)a1 + 26);
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v7 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(a3 + 32);
  swift_beginAccess();
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)&v12);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a2 + 64) = 0x8000000000000000;
  sub_1ABDF0FA8(&v12, v7, v6, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a2 + 64) = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31534();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11 == *(_OWORD *)((char *)v13 + 8))
  {
    swift_bridgeObjectRelease();
LABEL_4:
    sub_1ABF2FF68();
    sub_1ABF31528();
    swift_release();
    goto LABEL_5;
  }
  v9 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    goto LABEL_4;
LABEL_5:
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABD04B78((uint64_t)&v12);
  return sub_1ABF311E0();
}

uint64_t sub_1ABF19A74()
{
  uint64_t result;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  sub_1ABF30AFC();
  sub_1ABD04578(0, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1ABF2FF68();
  sub_1ABF31090();
  result = swift_release();
  if (v5)
  {
    sub_1ABF2FF68();
    sub_1ABF31528();
    swift_release();
    if (qword_1ED34CA60 != -1)
      swift_once();
    v1 = (void *)qword_1ED3683A8;
    sub_1ABD0F55C();
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1ABF366C0;
    v3 = v1;
    sub_1ABF31F6C();
    sub_1ABD365D4(v4, v5);
    *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v2 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v2 + 32) = 0;
    *(_QWORD *)(v2 + 40) = 0xE000000000000000;
    sub_1ABF31BF4();
    sub_1ABF31318();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABF19C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1ABF317A4();
  v6 = v5;
  swift_beginAccess();
  sub_1ABEF3370(v4, v6, *(_QWORD *)(a1 + 64), a2);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABF19D00()
{
  return sub_1ABF1D11C();
}

uint64_t sub_1ABF19D10()
{
  sub_1ABF2FF68();
  sub_1ABF31528();
  swift_release();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34DD80, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABF19DAC()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1ABF19E20()
{
  sub_1ABF19DAC();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABF19E40@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABF151E0(a1);
}

uint64_t sub_1ABF19E60(char a1)
{
  return sub_1ABD41FD8(a1);
}

uint64_t sub_1ABF19E80(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD8A848(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(v3 + 152) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABF19F14(uint64_t a1, uint64_t a2)
{
  return sub_1ABF15EE0(a1, a2);
}

uint64_t sub_1ABF19F34(__int128 *a1)
{
  return sub_1ABF1662C(a1);
}

uint64_t sub_1ABF19F54(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABF18D78(a1, a2, a3);
}

uint64_t sub_1ABF19F74(__int128 *a1, char *a2)
{
  __int128 v2;
  char v3;
  uint64_t v4;
  __int128 v5;
  void *v6;
  void *v7;
  uint64_t v8;
  __int128 v10;
  _OWORD v11[2];

  v2 = a1[1];
  v10 = *a1;
  v11[0] = v2;
  *(_OWORD *)((char *)v11 + 10) = *(__int128 *)((char *)a1 + 26);
  v3 = *a2;
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v4 = swift_allocObject();
  v5 = v11[0];
  *(_OWORD *)(v4 + 16) = v10;
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 42) = *(_OWORD *)((char *)v11 + 10);
  *(_BYTE *)(v4 + 58) = v3;
  sub_1ABD04B78((uint64_t)&v10);
  v6 = (void *)sub_1ABF31114();
  sub_1ABF3118C();
  swift_release();
  swift_release();

  *(_BYTE *)(swift_allocObject() + 16) = v3;
  v7 = (void *)sub_1ABF31114();
  v8 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_1ABF1A0D4(__int128 *a1, char *a2)
{
  return sub_1ABF19708(a1, a2);
}

uint64_t sub_1ABF1A0F4(__int128 *a1)
{
  __int128 v1;
  uint64_t (*v2)(void);
  _OWORD *v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  __int128 v8;
  _OWORD v9[2];

  v1 = a1[1];
  v8 = *a1;
  v9[0] = v1;
  *(_OWORD *)((char *)v9 + 10) = *(__int128 *)((char *)a1 + 26);
  v2 = MEMORY[0x1E0DEAEC8];
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v3 = (_OWORD *)swift_allocObject();
  v4 = v9[0];
  v3[1] = v8;
  v3[2] = v4;
  *(_OWORD *)((char *)v3 + 42) = *(_OWORD *)((char *)v9 + 10);
  sub_1ABD04B78((uint64_t)&v8);
  v5 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))v2);
  v6 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_1ABF1A20C()
{
  void *v0;
  uint64_t v1;

  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v0 = (void *)sub_1ABF31114();
  v1 = sub_1ABF3118C();
  swift_release();

  return v1;
}

uint64_t sub_1ABF1A2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF5C();
  v5 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v6 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_1ABF1A3B8(__int128 *a1, uint64_t a2)
{
  return sub_1ABF188C4(a1, a2);
}

uint64_t sub_1ABF1A3D8(__int128 *a1, __int128 *a2)
{
  return sub_1ABF169A8(a1, a2);
}

uint64_t sub_1ABF1A3F8(uint64_t a1, uint64_t a2, __int128 *a3)
{
  return sub_1ABF17160(a1, a2, a3);
}

uint64_t sub_1ABF1A418(__int128 *a1, uint64_t a2, __int128 *a3)
{
  return sub_1ABF17598(a1, a2, a3);
}

uint64_t sub_1ABF1A438(uint64_t a1, __int128 *a2)
{
  return sub_1ABF17DF8(a1, a2);
}

uint64_t sub_1ABF1A458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  return sub_1ABF183C4(a1, a2, a3, a4, a5);
}

uint64_t sub_1ABF1A478(uint64_t a1, __int128 **a2)
{
  int64_t *v2;
  int64_t *v3;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  int64_t v37;
  unint64_t v38;
  char v39;
  __int128 *v40;
  __int128 v41;
  __int128 v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  __int128 *v55;
  void *v56;
  char v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  int64_t *v63;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v65;
  uint64_t v66;
  char v67;
  id v68;
  void *v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  void *v73;
  id v74;
  void *v75;
  id v76;
  unsigned __int8 v77;
  uint64_t v78;
  char **v79;
  void *v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  void *v84;
  char *v85;
  uint64_t (*v86)(uint64_t);
  uint64_t v87;
  uint64_t v88;
  char v89;
  id v90;
  uint64_t v91;
  unint64_t v92;
  void *v93;
  void *v94;
  uint64_t *v95;
  uint64_t v96;
  int64_t v97;
  uint64_t v98;
  uint64_t *v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  _QWORD *v113;
  unint64_t v114;
  _QWORD *v115;
  unint64_t v116;
  _QWORD *v117;
  unsigned __int8 *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v127;
  char v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  __int128 v138;
  void *v139;
  _OWORD *v140;
  __int128 v141;
  void *v142;
  int64_t *v143;
  void *v144;
  id v145;
  _QWORD *v146;
  id v147;
  char **v148;
  _QWORD *v149;
  id v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  id v158;
  id v159;
  void *v160;
  void *v161;
  id v162;
  void *v163;
  __int128 *v164;
  uint64_t v166;
  __int16 *v167;
  __int128 *v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  int64_t v179;
  __int128 *v180;
  char *v181;
  char *v182;
  int64_t v183;
  _OWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  unint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  const __CFString *v197;
  uint64_t v198;
  int64_t v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  int64_t *v203;
  __int128 v204;
  _OWORD v205[2];
  unsigned __int8 v206;
  uint64_t v207;
  __int128 v208;
  _OWORD v209[2];
  __int128 v210;
  _OWORD v211[2];
  __int128 v212;
  __int128 v213;
  __int16 v214;
  __int128 v215;
  _BYTE v216[26];
  _BYTE v217[20];
  char v218;
  char v219;
  char v220;
  unsigned __int8 v221;
  char v222[8];
  uint64_t v223;

  v3 = v2;
  v5 = *v3;
  v6 = sub_1ABF31594();
  v177 = *(_QWORD *)(v6 - 8);
  v178 = v6;
  MEMORY[0x1E0C80A78](v6);
  v176 = (char *)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF315D0();
  v174 = *(_QWORD *)(v8 - 8);
  v175 = v8;
  MEMORY[0x1E0C80A78](v8);
  v173 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v10);
  v172 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1ABF31774();
  v170 = *(_QWORD *)(v12 - 8);
  v171 = v12;
  MEMORY[0x1E0C80A78](v12);
  v182 = (char *)&v166 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v181 = (char *)&v166 - v15;
  v16 = *a2;
  if (qword_1ED34CA60 != -1)
    goto LABEL_112;
LABEL_2:
  v17 = (void *)qword_1ED3683A8;
  sub_1ABD0F55C();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)&v204 = v16;
  v19 = v17;
  v20 = sub_1ABEDB2D0();
  v22 = v21;
  v23 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v18 + 32) = v20;
  *(_QWORD *)(v18 + 40) = v22;
  sub_1ABF31BF4();
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  v24 = *((_QWORD *)v16 + 8);
  v184 = v16 + 4;
  v25 = 1 << *((_BYTE *)v16 + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v24;
  v195 = v3 + 8;
  v169 = v3 + 7;
  v28 = (unint64_t)(v25 + 63) >> 6;
  v197 = CFSTR("watchlist");
  v167 = &v214;
  v168 = &v213;
  v166 = (uint64_t)&v214 + 1;
  sub_1ABF2FF5C();
  v189 = MEMORY[0x1E0DEE9C0] + 8;
  v203 = v3;
  v199 = v5;
  v5 = 0;
  v179 = v28;
  v180 = v16;
  while (v27)
  {
    v187 = (v27 - 1) & v27;
    v29 = __clz(__rbit64(v27)) | (v5 << 6);
LABEL_23:
    v33 = (uint64_t *)(*((_QWORD *)v16 + 6) + 16 * v29);
    v35 = *v33;
    v34 = v33[1];
    v36 = *(void **)(*((_QWORD *)v16 + 7) + 8 * v29);
    sub_1ABF2FF5C();
    v188 = v36;
    sub_1ABF2FF68();
    sub_1ABF30AC0();
    swift_release();
    swift_beginAccess();
    v37 = v3[8];
    if (*(_QWORD *)(v37 + 16))
    {
      sub_1ABF2FF5C();
      v186 = v35;
      v38 = sub_1ABD00F9C(v35, v34);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      v183 = v5;
      v40 = (__int128 *)(*(_QWORD *)(v37 + 56) + 48 * v38);
      v41 = *(__int128 *)((char *)v40 + 26);
      v42 = v40[1];
      v208 = *v40;
      v209[0] = v42;
      *(_OWORD *)((char *)v209 + 10) = v41;
      swift_endAccess();
      sub_1ABD04B78((uint64_t)&v208);
      v185 = v34;
      swift_bridgeObjectRelease();
      v43 = v188;
      v44 = objc_msgSend(v188, sel_symbolsPostDiff);
      v202 = sub_1ABF31A08();

      v46 = *((_QWORD *)&v209[0] + 1);
      v45 = *(_QWORD *)&v209[1];
      if (v46 == sub_1ABF317A4() && v45 == v47)
      {
        swift_bridgeObjectRelease();
        v49 = v181;
        v48 = v182;
      }
      else
      {
        v50 = sub_1ABF3223C();
        swift_bridgeObjectRelease();
        v49 = v181;
        v48 = v182;
        if ((v50 & 1) == 0)
        {
          v162 = objc_msgSend(v43, sel_updatedName);
          if (v162)
          {
            v163 = v162;
            v54 = sub_1ABF317A4();
            v16 = v164;

          }
          else
          {
            v16 = (__int128 *)*((_QWORD *)&v208 + 1);
            v54 = v208;
            sub_1ABF2FF5C();
          }
          goto LABEL_32;
        }
      }
      sub_1ABF31738();
      v52 = v170;
      v51 = v171;
      (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v48, v49, v171);
      if (qword_1ED34FD78 != -1)
        swift_once();
      v53 = (id)qword_1ED368428;
      sub_1ABF30844();
      v54 = sub_1ABF317EC();
      v16 = v55;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v51);
LABEL_32:
      v56 = v188;
      sub_1ABF1B900(v188, (uint64_t)&v208, (char *)&v204);
      if (v204 <= 0xFDu)
        v57 = v204;
      else
        v57 = BYTE8(v209[1]);
      v58 = objc_msgSend(v56, sel_updatedDisplayState);
      if (!v58 || (v59 = v58, v60 = objc_msgSend(v58, sel_integerValue), v59, (unint64_t)v60 >= 3))
        LOBYTE(v60) = BYTE9(v209[1]);
      *(_QWORD *)&v215 = v54;
      *((_QWORD *)&v215 + 1) = v16;
      v61 = v185;
      v62 = v186;
      *(_QWORD *)v216 = v202;
      *(_QWORD *)&v216[8] = v186;
      *(_QWORD *)&v216[16] = v185;
      v216[24] = v57;
      v216[25] = (_BYTE)v60;
      swift_beginAccess();
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v63 = v203;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v207 = v63[8];
      v63[8] = 0x8000000000000000;
      sub_1ABDF0FA8(&v215, v62, v61, isUniquelyReferenced_nonNull_native);
      v63[8] = v207;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_1ABF2FF68();
      sub_1ABF30ACC();
      swift_release();
      sub_1ABF2FF68();
      sub_1ABF2FF68();
      sub_1ABF31534();
      swift_release();
      swift_release();
      v66 = *((_QWORD *)&v205[0] + 1);
      v65 = *(_QWORD *)&v205[1];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v62 == v66 && v61 == v65)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v67 = sub_1ABF3223C();
        swift_bridgeObjectRelease();
        if ((v67 & 1) == 0)
          goto LABEL_43;
      }
      v204 = v215;
      v205[0] = *(_OWORD *)v216;
      *(_OWORD *)((char *)v205 + 10) = *(_OWORD *)&v216[10];
      sub_1ABF2FF68();
      sub_1ABF31528();
      swift_release();
LABEL_43:
      v68 = objc_msgSend(v188, sel_updatedName);
      if (v68)
      {
        v69 = v68;
        v70 = sub_1ABF317A4();
        v72 = v71;

      }
      else
      {
        v70 = 0;
        v72 = 0;
      }
      v73 = v188;
      sub_1ABF1B900(v188, (uint64_t)&v208, (char *)&v207);
      v74 = objc_msgSend(v73, sel_updatedDisplayState);
      if (v74)
      {
        v75 = v74;
        v76 = objc_msgSend(v74, sel_integerValue);

        v77 = 3;
        if ((unint64_t)v76 < 3)
          v77 = v76;
      }
      else
      {
        v77 = 3;
      }
      v206 = v77;
      sub_1ABF1BA2C(MEMORY[0x1E0DEE9D8], v188, v70, v72, (unsigned __int8 *)&v207, &v206, (unint64_t *)&v204);
      swift_bridgeObjectRelease();
      v212 = v204;
      v213 = v205[0];
      v214 = v205[1];
      if (*(_QWORD *)(v204 + 16)
        || *(_QWORD *)(*((_QWORD *)&v212 + 1) + 16)
        || (sub_1ABD843F0((uint64_t)v168, (uint64_t)v217, (unint64_t *)&qword_1ED34FB80, v23),
            sub_1ABD843F0((uint64_t)v217, (uint64_t)v222, (unint64_t *)&qword_1ED34FB80, v23),
            v223)
        || (sub_1ABD843F0((uint64_t)v167, (uint64_t)&v218, &qword_1EEC45238, (uint64_t)&type metadata for WatchlistSortState), sub_1ABD843F0((uint64_t)&v218, (uint64_t)&v221, &qword_1EEC45238, (uint64_t)&type metadata for WatchlistSortState), v221 < 0xFEu)|| (sub_1ABD843F0(v166, (uint64_t)&v219, &qword_1EEC45240, (uint64_t)&type metadata for PriceChangeDisplay), sub_1ABD843F0((uint64_t)&v219, (uint64_t)&v220, &qword_1EEC45240, (uint64_t)&type metadata for PriceChangeDisplay), v220 != 3))
      {
        sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD60);
        v80 = (void *)sub_1ABF31C24();
        v81 = swift_allocObject();
        v3 = v203;
        *(_QWORD *)(v81 + 16) = v203;
        v82 = v213;
        *(_OWORD *)(v81 + 24) = v212;
        *(_OWORD *)(v81 + 40) = v82;
        *(_WORD *)(v81 + 56) = v214;
        v83 = *(_OWORD *)v216;
        *(_OWORD *)(v81 + 64) = v215;
        *(_OWORD *)(v81 + 80) = v83;
        *(_OWORD *)(v81 + 90) = *(_OWORD *)&v216[10];
        *(_QWORD *)&v205[1] = sub_1ABF2289C;
        *((_QWORD *)&v205[1] + 1) = v81;
        *(_QWORD *)&v204 = MEMORY[0x1E0C809B0];
        *((_QWORD *)&v204 + 1) = 1107296256;
        *(_QWORD *)&v205[0] = sub_1ABD127EC;
        *((_QWORD *)&v205[0] + 1) = &block_descriptor_175;
        v84 = _Block_copy(&v204);
        sub_1ABF2FF68();
        swift_release();
        v85 = v173;
        sub_1ABF315AC();
        *(_QWORD *)&v204 = MEMORY[0x1E0DEE9D8];
        v86 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
        sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v86, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1ABD33CAC();
        v16 = (__int128 *)v176;
        v87 = v178;
        sub_1ABF31E04();
        MEMORY[0x1AF437E50](0, v85, v16, v84);
        _Block_release(v84);

        (*(void (**)(__int128 *, uint64_t))(v177 + 8))(v16, v87);
        (*(void (**)(char *, uint64_t))(v174 + 8))(v85, v175);
        v5 = v199;
        v79 = &selRef_purchaseProvider;
        v78 = v185;
      }
      else
      {
        v78 = v185;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1ABF227DC((uint64_t)&v212);
        v3 = v203;
        v5 = v199;
        v79 = &selRef_purchaseProvider;
      }
      if (v186 == sub_1ABF317A4() && v78 == v88)
      {
        swift_bridgeObjectRelease();
        v23 = MEMORY[0x1E0DEA968];
      }
      else
      {
        v89 = sub_1ABF3223C();
        swift_bridgeObjectRelease();
        v23 = MEMORY[0x1E0DEA968];
        if ((v89 & 1) == 0)
          goto LABEL_102;
      }
      v90 = objc_msgSend(v188, sel_removedSymbols);
      v91 = sub_1ABF31A08();

      v192 = *(_QWORD *)(v91 + 16);
      if (v192)
      {
        v190 = v91 + 32;
        swift_beginAccess();
        v92 = 0;
        v191 = v91;
        while (v92 < *(_QWORD *)(v91 + 16))
        {
          v194 = v92;
          v95 = (uint64_t *)(v190 + 16 * v92);
          v96 = v95[1];
          v198 = *v95;
          v200 = v96;
          sub_1ABF2FF5C();
          sub_1ABF2FF68();
          sub_1ABF30AC0();
          swift_release();
          v97 = v3[7];
          v98 = *(_QWORD *)(v97 + 16);
          if (v98)
          {
            swift_bridgeObjectRetain_n();
            v196 = v97;
            v99 = (uint64_t *)(v97 + 40);
            v100 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            v101 = v195;
            do
            {
              v102 = *(v99 - 1);
              v103 = *v99;
              swift_beginAccess();
              v104 = *v101;
              if (*(_QWORD *)(*v101 + 16))
              {
                swift_bridgeObjectRetain_n();
                v105 = sub_1ABD00F9C(v102, v103);
                if ((v106 & 1) != 0)
                {
                  v107 = *(_QWORD *)(v104 + 56) + 48 * v105;
                  v108 = *(_QWORD *)(v107 + 8);
                  v202 = *(_QWORD *)v107;
                  v109 = *(_QWORD *)(v107 + 16);
                  v110 = *(_QWORD *)(v107 + 24);
                  v111 = *(_QWORD *)(v107 + 32);
                  v112 = *(_BYTE *)(v107 + 40);
                  v201 = *(unsigned __int8 *)(v107 + 41);
                  swift_endAccess();
                  sub_1ABF2FF5C();
                  sub_1ABF2FF5C();
                  sub_1ABF2FF5C();
                  swift_bridgeObjectRelease_n();
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v100 = sub_1ABD124D4(0, v100[2] + 1, 1, v100);
                  v113 = v100;
                  v114 = v100[2];
                  v115 = v113;
                  v116 = v113[3];
                  if (v114 >= v116 >> 1)
                    v115 = sub_1ABD124D4((_QWORD *)(v116 > 1), v114 + 1, 1, v115);
                  v115[2] = v114 + 1;
                  v117 = &v115[6 * v114];
                  v100 = v115;
                  v117[4] = v202;
                  v117[5] = v108;
                  v117[6] = v109;
                  v117[7] = v110;
                  v117[8] = v111;
                  *((_BYTE *)v117 + 72) = v112;
                  *((_BYTE *)v117 + 73) = v201;
                  v101 = v195;
                }
                else
                {
                  swift_endAccess();
                  swift_bridgeObjectRelease_n();
                }
              }
              else
              {
                swift_endAccess();
              }
              v99 += 2;
              --v98;
            }
            while (v98);
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v100 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          }
          sub_1ABF2FF68();
          sub_1ABF30ACC();
          swift_release();
          v16 = (__int128 *)v100[2];
          v193 = v100;
          if (v16)
          {
            v118 = (unsigned __int8 *)v100 + 73;
            v119 = MEMORY[0x1E0DEE9D8];
            while (1)
            {
              v120 = *(_QWORD *)(v118 - 41);
              v121 = *(_QWORD *)(v118 - 33);
              v122 = *(_QWORD *)(v118 - 25);
              v123 = *(_QWORD *)(v118 - 17);
              v124 = *(_QWORD *)(v118 - 9);
              LODWORD(v202) = *(v118 - 1);
              v201 = *v118;
              if (v123 != sub_1ABF317A4() || v124 != v125)
              {
                v196 = v120;
                v127 = sub_1ABF3223C();
                sub_1ABF2FF5C();
                sub_1ABF2FF5C();
                sub_1ABF2FF5C();
                swift_bridgeObjectRelease();
                if ((v127 & 1) == 0)
                {
                  v128 = swift_isUniquelyReferenced_nonNull_native();
                  *(_QWORD *)&v204 = v119;
                  if ((v128 & 1) == 0)
                  {
                    sub_1ABDB50B4(0, *(_QWORD *)(v119 + 16) + 1, 1);
                    v119 = v204;
                  }
                  v129 = v119;
                  v130 = *(_QWORD *)(v119 + 16);
                  v131 = *(_QWORD *)(v129 + 24);
                  if (v130 >= v131 >> 1)
                  {
                    sub_1ABDB50B4(v131 > 1, v130 + 1, 1);
                    v129 = v204;
                  }
                  *(_QWORD *)(v129 + 16) = v130 + 1;
                  v132 = v129 + 48 * v130;
                  *(_QWORD *)(v132 + 32) = v196;
                  *(_QWORD *)(v132 + 40) = v121;
                  *(_QWORD *)(v132 + 48) = v122;
                  *(_QWORD *)(v132 + 56) = v123;
                  *(_QWORD *)(v132 + 64) = v124;
                  *(_BYTE *)(v132 + 72) = v202;
                  *(_BYTE *)(v132 + 73) = v201;
                  v119 = v129;
                  goto LABEL_84;
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
LABEL_84:
              v118 += 48;
              v16 = (__int128 *)((char *)v16 - 1);
              if (!v16)
                goto LABEL_97;
            }
          }
          v119 = MEMORY[0x1E0DEE9D8];
LABEL_97:
          swift_bridgeObjectRelease();
          v133 = *(_QWORD *)(v119 + 16);
          if (v133)
          {
            *(_QWORD *)&v204 = MEMORY[0x1E0DEE9D8];
            sub_1ABF31F18();
            v134 = 32;
            v202 = v119;
            do
            {
              v135 = *(_OWORD *)(v202 + v134);
              v136 = *(_OWORD *)(v202 + v134 + 16);
              v16 = &v210;
              *(_OWORD *)((char *)v211 + 10) = *(_OWORD *)(v202 + v134 + 26);
              v210 = v135;
              v211[0] = v136;
              sub_1ABD04B78((uint64_t)&v210);
              sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
              sub_1ABF3127C();
              v137 = swift_allocObject();
              *(_QWORD *)(v137 + 16) = v198;
              *(_QWORD *)(v137 + 24) = v200;
              v138 = v211[0];
              *(_OWORD *)(v137 + 32) = v210;
              *(_OWORD *)(v137 + 48) = v138;
              *(_OWORD *)(v137 + 58) = *(_OWORD *)((char *)v211 + 10);
              sub_1ABF2FF5C();
              sub_1ABD04B78((uint64_t)&v210);
              v139 = (void *)sub_1ABF31114();
              sub_1ABF3118C();
              swift_release();
              swift_release();

              v140 = (_OWORD *)swift_allocObject();
              v141 = v211[0];
              v140[1] = v210;
              v140[2] = v141;
              *(_OWORD *)((char *)v140 + 42) = *(_OWORD *)((char *)v211 + 10);
              sub_1ABD04B78((uint64_t)&v210);
              v142 = (void *)sub_1ABF31114();
              sub_1ABF3118C();
              swift_release();
              swift_release();

              sub_1ABD04BC0((uint64_t)&v210);
              sub_1ABF31EF4();
              sub_1ABF31F24();
              v23 = MEMORY[0x1E0DEA968];
              sub_1ABF31F30();
              sub_1ABF31F00();
              v134 += 48;
              --v133;
            }
            while (v133);
            v5 = v199;
            swift_release();
            v3 = v203;
          }
          else
          {
            swift_release();
            v3 = v203;
            v5 = v199;
            v23 = MEMORY[0x1E0DEA968];
          }
          v92 = v194 + 1;
          v93 = (void *)sub_1ABF31114();
          sub_1ABF3109C();

          swift_bridgeObjectRelease();
          v94 = (void *)sub_1ABF31114();
          sub_1ABF31180();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();

          v91 = v191;
          v79 = &selRef_purchaseProvider;
          if (v92 == v192)
            goto LABEL_101;
        }
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        swift_once();
        goto LABEL_2;
      }
LABEL_101:
      swift_bridgeObjectRelease();
LABEL_102:
      v143 = v3;
      v144 = v188;
      v145 = objc_msgSend(v188, sel_symbolsPostDiff);
      v146 = (_QWORD *)sub_1ABF31A08();

      v147 = objc_msgSend(v144, v79[178]);
      v148 = v79;
      v149 = (_QWORD *)sub_1ABF31A08();

      LOBYTE(v147) = sub_1ABD1C278(v146, v149);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v147 & 1) != 0)
      {
        swift_bridgeObjectRelease();

        sub_1ABD04BC0((uint64_t)&v208);
        v28 = v179;
        v16 = v180;
        v5 = v183;
        v27 = v187;
        v3 = v143;
      }
      else
      {
        v150 = objc_msgSend(v144, sel_symbolsPostDiff);
        v151 = sub_1ABF31A08();

        v152 = objc_msgSend(v144, (SEL)v148 + 897);
        v153 = sub_1ABF31A08();

        *(_QWORD *)&v204 = v151;
        sub_1ABD23760(v153);
        v154 = sub_1ABD22CD8(v204);
        swift_bridgeObjectRelease();
        *(_QWORD *)(swift_allocObject() + 16) = v154;
        sub_1ABD3463C();
        sub_1ABF31270();
        swift_release();
        v155 = swift_allocObject();
        *(_QWORD *)(v155 + 16) = v144;
        v156 = v209[0];
        *(_OWORD *)(v155 + 24) = v208;
        *(_OWORD *)(v155 + 40) = v156;
        *(_OWORD *)(v155 + 50) = *(_OWORD *)((char *)v209 + 10);
        v157 = v185;
        *(_QWORD *)(v155 + 72) = v186;
        *(_QWORD *)(v155 + 80) = v157;
        v158 = v144;
        v3 = v143;
        v159 = v158;
        v160 = (void *)sub_1ABF31114();
        sub_1ABF31198();
        swift_release();
        swift_release();

        v161 = (void *)sub_1ABF31114();
        sub_1ABF311B0();
        swift_release();
        swift_release();

        v28 = v179;
        v16 = v180;
        v5 = v183;
        v27 = v187;
      }
    }
    else
    {
LABEL_6:
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_1ABF2FF68();
      sub_1ABF30ACC();

      swift_release();
      v27 = v187;
    }
  }
  v30 = v5 + 1;
  if (__OFADD__(v5, 1))
    goto LABEL_110;
  if (v30 < v28)
  {
    v31 = *((_QWORD *)v184 + v30);
    ++v5;
    if (!v31)
    {
      v5 = v30 + 1;
      if (v30 + 1 >= v28)
        return swift_release();
      v31 = *((_QWORD *)v184 + v5);
      if (!v31)
      {
        v5 = v30 + 2;
        if (v30 + 2 >= v28)
          return swift_release();
        v31 = *((_QWORD *)v184 + v5);
        if (!v31)
        {
          v32 = v30 + 3;
          if (v32 >= v28)
            return swift_release();
          v31 = *((_QWORD *)v184 + v32);
          if (!v31)
          {
            while (1)
            {
              v5 = v32 + 1;
              if (__OFADD__(v32, 1))
                goto LABEL_111;
              if (v5 >= v28)
                return swift_release();
              v31 = *((_QWORD *)v184 + v5);
              ++v32;
              if (v31)
                goto LABEL_22;
            }
          }
          v5 = v32;
        }
      }
    }
LABEL_22:
    v187 = (v31 - 1) & v31;
    v29 = __clz(__rbit64(v31)) + (v5 << 6);
    goto LABEL_23;
  }
  return swift_release();
}

void sub_1ABF1B900(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  char v16;
  id v17;

  v6 = objc_msgSend(a1, sel_updatedSortState);
  if (v6)
  {
    v17 = v6;
    v7 = objc_msgSend(v6, sel_integerValue);
    v8 = objc_msgSend(a1, sel_updatedSortOrderState);
    v9 = v8;
    if (v8)
    {
      v10 = objc_msgSend(v8, sel_integerValue);

    }
    else
    {
      v10 = 0;
    }
    v16 = v9 == 0;
    v14 = a3;
    v15 = (uint64_t)v7;
    v13 = v10;
    goto LABEL_8;
  }
  v11 = objc_msgSend(a1, sel_updatedSortOrderState);
  if (v11)
  {
    v12 = *(_QWORD *)((char *)&unk_1ABF50938 + (((unint64_t)*(unsigned __int8 *)(a2 + 40) >> 2) & 0x38));
    v17 = v11;
    v13 = objc_msgSend(v11, sel_integerValue);
    v14 = a3;
    v15 = v12;
    v16 = 0;
LABEL_8:
    sub_1ABE7CAF0(v15, (uint64_t)v13, v16, v14);

    return;
  }
  *a3 = -2;
}

uint64_t sub_1ABF1BA2C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unsigned __int8 *a5@<X4>, unsigned __int8 *a6@<X5>, unint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  char *v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char v69;
  uint64_t v70;
  _BOOL8 v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  unint64_t v93;
  unint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  char *v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  unint64_t v116;
  unint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  id v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  id v138;
  id v139;
  __int128 v140;
  char *v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  unint64_t v146;
  unint64_t v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  id v163;
  uint64_t v164;
  unint64_t v165;
  char v166;
  id v167;
  id v168;
  __int128 v169;
  char *v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  unint64_t v175;
  unint64_t v176;
  id v177;
  uint64_t v178;
  _QWORD *v179;
  unint64_t *v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t result;
  char *v184;
  int v185;
  int v186;
  unint64_t v187;
  unint64_t *v188;
  unint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  _OWORD v197[8];
  uint64_t v198;
  _QWORD *v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  uint64_t v208;

  v187 = a3;
  v188 = a7;
  v193 = a2;
  sub_1ABEDB25C();
  v194 = *(_QWORD *)(v11 - 8);
  v195 = v11;
  MEMORY[0x1E0C80A78](v11);
  v191 = (char *)&v184 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v190 = (char *)&v184 - v14;
  MEMORY[0x1E0C80A78](v15);
  v192 = (char *)&v184 - v16;
  v19 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v184 - v18;
  v21 = *a5;
  v185 = *a6;
  v186 = v21;
  v22 = *(_QWORD *)(a1 + 16);
  v23 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v189 = a4;
  if (!v22)
  {
LABEL_19:
    v72 = objc_msgSend(v193, sel_addedSymbols, v19);
    v73 = sub_1ABF31A08();

    v74 = *(_QWORD *)(v73 + 16);
    v184 = (char *)v73;
    if (v74)
    {
      v75 = *MEMORY[0x1E0DB3B48];
      v76 = (uint64_t *)(v73 + 40);
      v77 = MEMORY[0x1E0DEE9D8];
      do
      {
        if (v23[2])
        {
          v79 = *(v76 - 1);
          v78 = *v76;
          sub_1ABF2FF5C();
          v80 = sub_1ABD00F9C(v79, v78);
          if ((v81 & 1) != 0)
          {
            v82 = v23[7] + 136 * v80;
            v200 = *(_OWORD *)v82;
            v83 = *(_OWORD *)(v82 + 48);
            v84 = *(_OWORD *)(v82 + 64);
            v85 = *(_OWORD *)(v82 + 32);
            v201 = *(_OWORD *)(v82 + 16);
            v202 = v85;
            v203 = v83;
            v204 = v84;
            v86 = *(_OWORD *)(v82 + 80);
            v87 = *(_OWORD *)(v82 + 96);
            v88 = *(_OWORD *)(v82 + 112);
            v208 = *(_QWORD *)(v82 + 128);
            v206 = v87;
            v207 = v88;
            v205 = v86;
            sub_1ABD97ECC((uint64_t)&v200);
            swift_bridgeObjectRelease();
            v89 = v207;
            *((_OWORD *)v20 + 6) = v206;
            *((_OWORD *)v20 + 7) = v89;
            *((_QWORD *)v20 + 16) = v208;
            v90 = v203;
            *((_OWORD *)v20 + 2) = v202;
            *((_OWORD *)v20 + 3) = v90;
            v91 = v205;
            *((_OWORD *)v20 + 4) = v204;
            *((_OWORD *)v20 + 5) = v91;
            v92 = v201;
            *(_OWORD *)v20 = v200;
            *((_OWORD *)v20 + 1) = v92;
            (*(void (**)(char *, uint64_t, uint64_t))(v194 + 104))(v20, v75, v195);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v77 = sub_1ABD8282C(0, *(_QWORD *)(v77 + 16) + 1, 1, v77);
            v94 = *(_QWORD *)(v77 + 16);
            v93 = *(_QWORD *)(v77 + 24);
            if (v94 >= v93 >> 1)
              v77 = sub_1ABD8282C(v93 > 1, v94 + 1, 1, v77);
            *(_QWORD *)(v77 + 16) = v94 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v194 + 32))(v77+ ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80))+ *(_QWORD *)(v194 + 72) * v94, v20, v195);
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        v76 += 2;
        --v74;
      }
      while (v74);
    }
    else
    {
      v77 = MEMORY[0x1E0DEE9D8];
    }
    v196 = v23;
    swift_bridgeObjectRelease();
    v95 = objc_msgSend(v193, sel_removedSymbols, v184);
    v96 = sub_1ABF31A08();

    v97 = *(_QWORD *)(v96 + 16);
    if (v97)
    {
      v98 = (uint64_t *)(v96 + 40);
      do
      {
        v99 = v196;
        if (v196[2])
        {
          v101 = *(v98 - 1);
          v100 = *v98;
          sub_1ABF2FF5C();
          v102 = sub_1ABD00F9C(v101, v100);
          if ((v103 & 1) != 0)
          {
            v104 = v99[7] + 136 * v102;
            v200 = *(_OWORD *)v104;
            v105 = *(_OWORD *)(v104 + 48);
            v106 = *(_OWORD *)(v104 + 64);
            v107 = *(_OWORD *)(v104 + 32);
            v201 = *(_OWORD *)(v104 + 16);
            v202 = v107;
            v203 = v105;
            v204 = v106;
            v108 = *(_OWORD *)(v104 + 80);
            v109 = *(_OWORD *)(v104 + 96);
            v110 = *(_OWORD *)(v104 + 112);
            v208 = *(_QWORD *)(v104 + 128);
            v206 = v109;
            v207 = v110;
            v205 = v108;
            sub_1ABD97ECC((uint64_t)&v200);
            swift_bridgeObjectRelease();
            v111 = v207;
            v112 = v192;
            *((_OWORD *)v192 + 6) = v206;
            *((_OWORD *)v112 + 7) = v111;
            *((_QWORD *)v112 + 16) = v208;
            v113 = v203;
            *((_OWORD *)v112 + 2) = v202;
            *((_OWORD *)v112 + 3) = v113;
            v114 = v205;
            *((_OWORD *)v112 + 4) = v204;
            *((_OWORD *)v112 + 5) = v114;
            v115 = v201;
            *(_OWORD *)v112 = v200;
            *((_OWORD *)v112 + 1) = v115;
            (*(void (**)(void))(v194 + 104))();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v77 = sub_1ABD8282C(0, *(_QWORD *)(v77 + 16) + 1, 1, v77);
            v117 = *(_QWORD *)(v77 + 16);
            v116 = *(_QWORD *)(v77 + 24);
            if (v117 >= v116 >> 1)
              v77 = sub_1ABD8282C(v116 > 1, v117 + 1, 1, v77);
            *(_QWORD *)(v77 + 16) = v117 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v194 + 32))(v77+ ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80))+ *(_QWORD *)(v194 + 72) * v117, v192, v195);
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        v98 += 2;
        --v97;
      }
      while (v97);
    }
    swift_bridgeObjectRelease();
    v118 = objc_msgSend(v193, sel_addedSymbols);
    v119 = sub_1ABF31A08();

    v120 = *(_QWORD *)(v119 + 16);
    if (v120)
    {
      LODWORD(v192) = *MEMORY[0x1E0DB3B40];
      v121 = (uint64_t *)(v119 + 40);
      v122 = (uint64_t)v196;
      do
      {
        if (*(_QWORD *)(v122 + 16))
        {
          v124 = *(v121 - 1);
          v123 = *v121;
          swift_bridgeObjectRetain_n();
          v125 = sub_1ABD00F9C(v124, v123);
          if ((v126 & 1) != 0)
          {
            v127 = *(_QWORD *)(v122 + 56) + 136 * v125;
            v200 = *(_OWORD *)v127;
            v128 = *(_OWORD *)(v127 + 48);
            v129 = *(_OWORD *)(v127 + 64);
            v130 = *(_OWORD *)(v127 + 32);
            v201 = *(_OWORD *)(v127 + 16);
            v202 = v130;
            v203 = v128;
            v204 = v129;
            v131 = *(_OWORD *)(v127 + 80);
            v132 = *(_OWORD *)(v127 + 96);
            v133 = *(_OWORD *)(v127 + 112);
            v208 = *(_QWORD *)(v127 + 128);
            v206 = v132;
            v207 = v133;
            v205 = v131;
            sub_1ABD97ECC((uint64_t)&v200);
            swift_bridgeObjectRelease();
            v134 = objc_msgSend(v193, sel_indexesOfAddedSymbols);
            sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD80);
            v135 = sub_1ABF31624();

            if (*(_QWORD *)(v135 + 16) && (v136 = sub_1ABD00F9C(v124, v123), (v137 & 1) != 0))
            {
              v138 = *(id *)(*(_QWORD *)(v135 + 56) + 8 * v136);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v139 = objc_msgSend(v138, sel_integerValue);

              v140 = v207;
              v141 = v190;
              *((_OWORD *)v190 + 6) = v206;
              *((_OWORD *)v141 + 7) = v140;
              v142 = v208;
              v143 = v203;
              *((_OWORD *)v141 + 2) = v202;
              *((_OWORD *)v141 + 3) = v143;
              v144 = v205;
              *((_OWORD *)v141 + 4) = v204;
              *((_OWORD *)v141 + 5) = v144;
              v145 = v201;
              *(_OWORD *)v141 = v200;
              *((_OWORD *)v141 + 1) = v145;
              *((_QWORD *)v141 + 16) = v142;
              *((_QWORD *)v141 + 17) = v139;
              (*(void (**)(void))(v194 + 104))();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v77 = sub_1ABD8282C(0, *(_QWORD *)(v77 + 16) + 1, 1, v77);
              v122 = (uint64_t)v196;
              v147 = *(_QWORD *)(v77 + 16);
              v146 = *(_QWORD *)(v77 + 24);
              if (v147 >= v146 >> 1)
                v77 = sub_1ABD8282C(v146 > 1, v147 + 1, 1, v77);
              *(_QWORD *)(v77 + 16) = v147 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v194 + 32))(v77+ ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80))+ *(_QWORD *)(v194 + 72) * v147, v190, v195);
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1ABD97F60((uint64_t)&v200);
              v122 = (uint64_t)v196;
            }
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }
        }
        v121 += 2;
        --v120;
      }
      while (v120);
    }
    else
    {
      v122 = (uint64_t)v196;
    }
    swift_bridgeObjectRelease();
    v148 = objc_msgSend(v193, sel_reorderedSymbols);
    v149 = sub_1ABF31A08();

    v150 = *(_QWORD *)(v149 + 16);
    if (v150)
    {
      LODWORD(v192) = *MEMORY[0x1E0DB3B40];
      v151 = (uint64_t *)(v149 + 40);
      do
      {
        if (*(_QWORD *)(v122 + 16))
        {
          v153 = *(v151 - 1);
          v152 = *v151;
          swift_bridgeObjectRetain_n();
          v154 = sub_1ABD00F9C(v153, v152);
          if ((v155 & 1) != 0)
          {
            v156 = *(_QWORD *)(v122 + 56) + 136 * v154;
            v200 = *(_OWORD *)v156;
            v157 = *(_OWORD *)(v156 + 48);
            v158 = *(_OWORD *)(v156 + 64);
            v159 = *(_OWORD *)(v156 + 32);
            v201 = *(_OWORD *)(v156 + 16);
            v202 = v159;
            v203 = v157;
            v204 = v158;
            v160 = *(_OWORD *)(v156 + 80);
            v161 = *(_OWORD *)(v156 + 96);
            v162 = *(_OWORD *)(v156 + 112);
            v208 = *(_QWORD *)(v156 + 128);
            v206 = v161;
            v207 = v162;
            v205 = v160;
            sub_1ABD97ECC((uint64_t)&v200);
            swift_bridgeObjectRelease();
            v163 = objc_msgSend(v193, sel_indexesOfReorderedSymbols);
            sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD80);
            v164 = sub_1ABF31624();

            if (*(_QWORD *)(v164 + 16) && (v165 = sub_1ABD00F9C(v153, v152), (v166 & 1) != 0))
            {
              v167 = *(id *)(*(_QWORD *)(v164 + 56) + 8 * v165);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v168 = objc_msgSend(v167, sel_integerValue);

              v169 = v207;
              v170 = v191;
              *((_OWORD *)v191 + 6) = v206;
              *((_OWORD *)v170 + 7) = v169;
              v171 = v208;
              v172 = v203;
              *((_OWORD *)v170 + 2) = v202;
              *((_OWORD *)v170 + 3) = v172;
              v173 = v205;
              *((_OWORD *)v170 + 4) = v204;
              *((_OWORD *)v170 + 5) = v173;
              v174 = v201;
              *(_OWORD *)v170 = v200;
              *((_OWORD *)v170 + 1) = v174;
              *((_QWORD *)v170 + 16) = v171;
              *((_QWORD *)v170 + 17) = v168;
              (*(void (**)(void))(v194 + 104))();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v77 = sub_1ABD8282C(0, *(_QWORD *)(v77 + 16) + 1, 1, v77);
              v122 = (uint64_t)v196;
              v176 = *(_QWORD *)(v77 + 16);
              v175 = *(_QWORD *)(v77 + 24);
              if (v176 >= v175 >> 1)
                v77 = sub_1ABD8282C(v175 > 1, v176 + 1, 1, v77);
              *(_QWORD *)(v77 + 16) = v176 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v194 + 32))(v77+ ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80))+ *(_QWORD *)(v194 + 72) * v176, v191, v195);
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1ABD97F60((uint64_t)&v200);
              v122 = (uint64_t)v196;
            }
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }
        }
        v151 += 2;
        --v150;
      }
      while (v150);
    }
    swift_bridgeObjectRelease();
    v177 = objc_msgSend(v193, sel_symbolsPostDiff);
    v178 = sub_1ABF31A08();

    sub_1ABF2FF5C();
    v179 = sub_1ABF21178(v178, v122);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v181 = v187;
    v180 = v188;
    *v188 = v77;
    v180[1] = (unint64_t)v179;
    v182 = v189;
    v180[2] = v181;
    v180[3] = v182;
    *((_BYTE *)v180 + 32) = v186;
    *((_BYTE *)v180 + 33) = v185;
    return sub_1ABF2FF5C();
  }
  v184 = (char *)&v184 - v18;
  sub_1ABF2FF5C();
  v24 = *(_OWORD *)(a1 + 144);
  v206 = *(_OWORD *)(a1 + 128);
  v207 = v24;
  v208 = *(_QWORD *)(a1 + 160);
  v25 = *(_OWORD *)(a1 + 80);
  v202 = *(_OWORD *)(a1 + 64);
  v203 = v25;
  v26 = *(_OWORD *)(a1 + 112);
  v204 = *(_OWORD *)(a1 + 96);
  v205 = v26;
  v28 = *(_OWORD *)(a1 + 32);
  v27 = *(_OWORD *)(a1 + 48);
  v196 = (_QWORD *)a1;
  v200 = v28;
  v201 = v27;
  v29 = *((_QWORD *)&v27 + 1);
  v30 = v27;
  sub_1ABD97ECC((uint64_t)&v200);
  sub_1ABF2FF5C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v199 = v23;
  v33 = sub_1ABD00F9C(v30, v29);
  v34 = v23[2];
  v35 = (v32 & 1) == 0;
  v36 = v34 + v35;
  if (__OFADD__(v34, v35))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRelease();
    v20 = v184;
    goto LABEL_19;
  }
  v37 = v32;
  v38 = 21;
  while (v23[3] >= v36)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v37 & 1) == 0)
        goto LABEL_12;
    }
    else
    {
      sub_1ABE6E87C();
      if ((v37 & 1) == 0)
        goto LABEL_12;
    }
LABEL_10:
    v23 = v199;
    v41 = v199[7] + 136 * v33;
    v197[0] = *(_OWORD *)v41;
    v42 = *(_OWORD *)(v41 + 64);
    v44 = *(_OWORD *)(v41 + 16);
    v43 = *(_OWORD *)(v41 + 32);
    v197[3] = *(_OWORD *)(v41 + 48);
    v197[4] = v42;
    v197[1] = v44;
    v197[2] = v43;
    v46 = *(_OWORD *)(v41 + 96);
    v45 = *(_OWORD *)(v41 + 112);
    v47 = *(_OWORD *)(v41 + 80);
    v198 = *(_QWORD *)(v41 + 128);
    v197[6] = v46;
    v197[7] = v45;
    v197[5] = v47;
    sub_1ABD97F60((uint64_t)v197);
    *(_OWORD *)v41 = v200;
    v48 = v204;
    v50 = v201;
    v49 = v202;
    *(_OWORD *)(v41 + 48) = v203;
    *(_OWORD *)(v41 + 64) = v48;
    *(_OWORD *)(v41 + 16) = v50;
    *(_OWORD *)(v41 + 32) = v49;
    v52 = v206;
    v51 = v207;
    v53 = v205;
    *(_QWORD *)(v41 + 128) = v208;
    *(_OWORD *)(v41 + 96) = v52;
    *(_OWORD *)(v41 + 112) = v51;
    *(_OWORD *)(v41 + 80) = v53;
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v22)
      goto LABEL_18;
    v65 = *(_OWORD *)&v196[v38 + 14];
    v206 = *(_OWORD *)&v196[v38 + 12];
    v207 = v65;
    v208 = v196[v38 + 16];
    v66 = *(_OWORD *)&v196[v38 + 6];
    v202 = *(_OWORD *)&v196[v38 + 4];
    v203 = v66;
    v67 = *(_OWORD *)&v196[v38 + 10];
    v204 = *(_OWORD *)&v196[v38 + 8];
    v205 = v67;
    v68 = *(_OWORD *)&v196[v38 + 2];
    v200 = *(_OWORD *)&v196[v38];
    v201 = v68;
    v29 = *((_QWORD *)&v68 + 1);
    v30 = v68;
    sub_1ABD97ECC((uint64_t)&v200);
    sub_1ABF2FF5C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v199 = v23;
    v33 = sub_1ABD00F9C(v30, v29);
    v37 = v69;
    v70 = v23[2];
    v71 = (v69 & 1) == 0;
    v38 += 17;
    v36 = v70 + v71;
    if (__OFADD__(v70, v71))
      goto LABEL_17;
  }
  sub_1ABD0E4A4(v36, isUniquelyReferenced_nonNull_native & 1);
  v39 = sub_1ABD00F9C(v30, v29);
  if ((v37 & 1) != (v40 & 1))
    goto LABEL_73;
  v33 = v39;
  if ((v37 & 1) != 0)
    goto LABEL_10;
LABEL_12:
  v23 = v199;
  v199[(v33 >> 6) + 8] |= 1 << v33;
  v54 = (uint64_t *)(v23[6] + 16 * v33);
  *v54 = v30;
  v54[1] = v29;
  v55 = v23[7] + 136 * v33;
  v56 = v208;
  v58 = v206;
  v57 = v207;
  *(_OWORD *)(v55 + 80) = v205;
  *(_OWORD *)(v55 + 96) = v58;
  *(_OWORD *)(v55 + 112) = v57;
  *(_QWORD *)(v55 + 128) = v56;
  v60 = v203;
  v59 = v204;
  v61 = v202;
  *(_OWORD *)(v55 + 16) = v201;
  *(_OWORD *)(v55 + 32) = v61;
  *(_OWORD *)(v55 + 48) = v60;
  *(_OWORD *)(v55 + 64) = v59;
  *(_OWORD *)v55 = v200;
  v62 = v23[2];
  v63 = __OFADD__(v62, 1);
  v64 = v62 + 1;
  if (!v63)
  {
    v23[2] = v64;
    sub_1ABF2FF5C();
    goto LABEL_14;
  }
  __break(1u);
LABEL_73:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABF1C6C0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1ABF30B38();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30760();
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1ABF30C28();
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1ABF30B14();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v35 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED34CA60 != -1)
    swift_once();
  v13 = (void *)qword_1ED3683A8;
  sub_1ABD0F55C();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1ABF366E0;
  v15 = *(_QWORD *)(a2 + 16);
  v16 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 32) = v15;
  v17 = v13;
  v18 = MEMORY[0x1E0DEA968];
  v19 = sub_1ABF31B28();
  v21 = v20;
  *(_QWORD *)(v14 + 96) = v18;
  *(_QWORD *)(v14 + 104) = sub_1ABD0F5C0();
  *(_QWORD *)(v14 + 72) = v19;
  *(_QWORD *)(v14 + 80) = v21;
  sub_1ABF31BF4();
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  v22 = a1[18];
  v34 = a1[17];
  __swift_project_boxed_opaque_existential_1(a1 + 14, v34);
  v23 = sub_1ABF2FF5C();
  v24 = sub_1ABD24D68(v23);
  swift_bridgeObjectRelease();
  v25 = v35;
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v35, *MEMORY[0x1E0DB32A8], v44);
  sub_1ABF30C1C();
  sub_1ABF30754();
  v26 = v11;
  v27 = v8;
  v28 = v41;
  v29 = v42;
  v30 = v36;
  (*(void (**)(char *, _QWORD, uint64_t))(v41 + 104))(v36, *MEMORY[0x1E0DB3560], v42);
  v31 = (*(uint64_t (**)(_QWORD *, char *, char *, char *, char *, uint64_t, uint64_t))(v22 + 8))(v24, v25, v26, v27, v30, v34, v22);
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v40);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v38);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v44);
  return v31;
}

uint64_t sub_1ABF1C9E4(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  id v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  __int128 v50;
  void *v51;
  char *v52;
  uint64_t (*v53)(uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 aBlock;
  __int128 v67;
  uint64_t (*v68)();
  uint64_t v69;
  unsigned __int8 v70;
  __int128 v71;
  __int128 v72;
  __int16 v73;

  v64 = a4;
  v65 = a6;
  v57 = a5;
  v10 = sub_1ABF31594();
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  MEMORY[0x1E0C80A78](v10);
  v61 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1ABF315D0();
  v59 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  MEMORY[0x1E0C80A78](v12);
  v58 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  if (qword_1ED34CA60 != -1)
    swift_once();
  v15 = (void *)qword_1ED3683A8;
  sub_1ABD0F55C();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1ABF366E0;
  v17 = *(_QWORD *)(v14 + 16);
  v18 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v16 + 64) = v18;
  *(_QWORD *)(v16 + 32) = v17;
  v19 = v15;
  sub_1ABF2FF5C();
  v20 = MEMORY[0x1E0DEA968];
  v21 = sub_1ABF31678();
  v23 = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 96) = v20;
  *(_QWORD *)(v16 + 104) = sub_1ABD0F5C0();
  *(_QWORD *)(v16 + 72) = v21;
  *(_QWORD *)(v16 + 80) = v23;
  sub_1ABF31BF4();
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  v24 = sub_1ABF2FF5C();
  v25 = sub_1ABF12520(v24);
  v26 = v6;
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(a3, sel_updatedName);
  if (v27)
  {
    v28 = v27;
    v29 = sub_1ABF317A4();
    v31 = v30;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  sub_1ABF1B900(a3, v64, (char *)&v71);
  v32 = objc_msgSend(a3, sel_updatedDisplayState);
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(v32, sel_integerValue, v57);

    v35 = 3;
    if ((unint64_t)v34 < 3)
      v35 = v34;
  }
  else
  {
    v35 = 3;
  }
  v70 = v35;
  sub_1ABF1BA2C(v25, a3, v29, v31, (unsigned __int8 *)&v71, &v70, (unint64_t *)&aBlock);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v71 = aBlock;
  v72 = v67;
  v73 = (__int16)v68;
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  v36 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(v36 + 16))
  {
    v37 = v65;
    sub_1ABF2FF5C();
    v38 = sub_1ABD00F9C(v57, v37);
    if ((v39 & 1) != 0)
    {
      v40 = *(_QWORD *)(v36 + 56) + 48 * v38;
      v41 = *(_QWORD *)(v40 + 8);
      v64 = *(_QWORD *)v40;
      v43 = *(_QWORD *)(v40 + 16);
      v42 = *(_QWORD *)(v40 + 24);
      v44 = *(_QWORD *)(v40 + 32);
      v45 = *(_BYTE *)(v40 + 40);
      v46 = *(_BYTE *)(v40 + 41);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    else
    {
      v64 = 0;
      v41 = 0;
      v43 = 0;
      v42 = 0;
      v44 = 0;
      v45 = 0;
      v46 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v64 = 0;
    v41 = 0;
    v43 = 0;
    v42 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 0;
  }
  swift_endAccess();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  if (!v41)
    return sub_1ABF227DC((uint64_t)&v71);
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD60);
  v47 = sub_1ABF31C24();
  v65 = v26;
  v48 = (void *)v47;
  v49 = swift_allocObject();
  v50 = v72;
  *(_OWORD *)(v49 + 24) = v71;
  *(_QWORD *)(v49 + 16) = a2;
  *(_OWORD *)(v49 + 40) = v50;
  *(_WORD *)(v49 + 56) = v73;
  *(_QWORD *)(v49 + 64) = v64;
  *(_QWORD *)(v49 + 72) = v41;
  *(_QWORD *)(v49 + 80) = v43;
  *(_QWORD *)(v49 + 88) = v42;
  *(_QWORD *)(v49 + 96) = v44;
  *(_BYTE *)(v49 + 104) = v45;
  *(_BYTE *)(v49 + 105) = v46;
  v68 = sub_1ABF22878;
  v69 = v49;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v67 = sub_1ABD127EC;
  *((_QWORD *)&v67 + 1) = &block_descriptor_196;
  v51 = _Block_copy(&aBlock);
  sub_1ABF2FF68();
  swift_release();
  v52 = v58;
  sub_1ABF315AC();
  *(_QWORD *)&aBlock = MEMORY[0x1E0DEE9D8];
  v53 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v53, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD33CAC();
  v54 = v61;
  v55 = v63;
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v52, v54, v51);
  _Block_release(v51);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v54, v55);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v52, v60);
}

uint64_t sub_1ABF1CF58(uint64_t a1, uint64_t a2, __int128 *a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  void (*v15)(_QWORD *, _OWORD *, __int128 *, uint64_t, uint64_t);
  unint64_t v17;
  __int128 v18;
  _OWORD v19[2];
  _OWORD v20[2];
  __int16 v21;
  _QWORD v22[5];

  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 152);
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v6)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v6 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v6 >= 1)
  {
    v8 = 0;
    v17 = v5 & 0xC000000000000001;
    do
    {
      if (v17)
      {
        v9 = MEMORY[0x1AF4380CC](v8, v5);
      }
      else
      {
        v9 = *(_QWORD *)(v5 + 8 * v8 + 32);
        sub_1ABF2FF68();
      }
      v22[3] = type metadata accessor for WatchlistManager();
      v22[4] = &off_1E5AE5D08;
      v22[0] = a1;
      if (MEMORY[0x1AF4390D4](v9 + 16))
      {
        v10 = *(_QWORD *)(v9 + 24);
        ObjectType = swift_getObjectType();
        v12 = *(_OWORD *)(a2 + 16);
        v20[0] = *(_OWORD *)a2;
        v20[1] = v12;
        v21 = *(_WORD *)(a2 + 32);
        v13 = a3[1];
        v18 = *a3;
        v19[0] = v13;
        *(_OWORD *)((char *)v19 + 10) = *(__int128 *)((char *)a3 + 26);
        v14 = v5;
        v15 = *(void (**)(_QWORD *, _OWORD *, __int128 *, uint64_t, uint64_t))(v10 + 8);
        swift_retain_n();
        v15(v22, v20, &v18, ObjectType, v10);
        v5 = v14;
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain_n();
      }
      ++v8;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      swift_release();
      swift_release();
    }
    while (v6 != v8);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABF1D10C()
{
  return sub_1ABF1D11C();
}

uint64_t sub_1ABF1D11C()
{
  id v0;
  uint64_t v1;

  if (qword_1ED34CA60 != -1)
    swift_once();
  v0 = (id)qword_1ED3683A8;
  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0xE000000000000000;
  sub_1ABF31318();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABF1D254(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  char v45;
  char v46;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int16 v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  char v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t result;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  const __CFString *v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  unint64_t *v128;
  char *v129;
  uint64_t *v130;
  int v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137[3];
  uint64_t v138;
  uint64_t v139;
  __int16 v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;

  v3 = v2;
  sub_1ABD83F24();
  v6 = v5;
  v125 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABF22108();
  v10 = v9;
  v134 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v123 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34E480, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (unint64_t *)((char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v129 = (char *)&v115 - v17;
  v18 = *a2;
  v19 = sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
  swift_bridgeObjectRetain_n();
  v119 = v19;
  v20 = sub_1ABF31D44();
  v21 = sub_1ABF31BF4();
  v22 = os_log_type_enabled(v20, v21);
  v124 = v6;
  v128 = v15;
  v135 = v18;
  if (v22)
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v136 = swift_slowAlloc();
    v137[0] = v136;
    *(_DWORD *)v23 = 136315138;
    v144 = v135;
    v24 = sub_1ABEDB894();
    v144 = sub_1ABD1FE2C(v24, v25, v137);
    v15 = v128;
    v18 = v135;
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v20, v21, "WatchlistManager received watchlist order changes with %s", v23, 0xCu);
    v26 = v136;
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v26, -1, -1);
    v27 = v23;
    v6 = v124;
    MEMORY[0x1AF438FFC](v27, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v28 = *(_QWORD *)(v18 + 16);
  v130 = v3 + 8;
  swift_bridgeObjectRetain_n();
  v116 = v3 + 7;
  v29 = v135;
  swift_beginAccess();
  v118 = 0;
  v30 = 0;
  v132 = *MEMORY[0x1E0DB3B48];
  v131 = *MEMORY[0x1E0DB3B50];
  v120 = CFSTR("watchlist");
  v117 = v29;
  v122 = v3;
  v31 = v125;
  v127 = v8;
  v126 = v10;
  v133 = v28;
LABEL_5:
  v32 = v129;
  if (v30 == v28)
  {
LABEL_11:
    v36 = 1;
    v37 = v28;
    goto LABEL_12;
  }
  while (1)
  {
    if ((v30 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      result = sub_1ABF3202C();
      __break(1u);
      return result;
    }
    if (v30 >= *(_QWORD *)(v29 + 16))
      goto LABEL_70;
    v33 = v29
        + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))
        + *(_QWORD *)(v31 + 72) * v30;
    v34 = &v123[*(int *)(v10 + 48)];
    (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(v34, v33, v6);
    v35 = (char *)v15 + *(int *)(v10 + 48);
    *v15 = v30;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v35, v34, v6);
    v36 = 0;
    v37 = v30 + 1;
    v28 = v133;
LABEL_12:
    v38 = v134;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v134 + 56))(v15, v36, 1, v10);
    sub_1ABF22170((uint64_t)v15, (uint64_t)v32);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v32, 1, v10) == 1)
      break;
    v136 = v37;
    v39 = *(_QWORD *)v32;
    (*(void (**)(uint64_t *, char *, uint64_t))(v31 + 32))(v8, &v32[*(int *)(v10 + 48)], v6);
    v40 = (*(uint64_t (**)(uint64_t *, uint64_t))(v31 + 88))(v8, v6);
    if (v40 == v132)
    {
      (*(void (**)(uint64_t *, uint64_t))(v31 + 96))(v8, v6);
      v71 = *v8;
      v70 = v8[1];
      sub_1ABF2FF68();
      sub_1ABF30AC0();
      swift_release();
      v72 = (_QWORD *)v3[7];
      v73 = v72[2];
      if (!v73)
        goto LABEL_47;
      if ((v72[4] != v71 || v72[5] != v70) && (sub_1ABF3223C() & 1) == 0)
      {
        if (v73 == 1)
          goto LABEL_47;
        if ((v72[6] != v71 || v72[7] != v70) && (sub_1ABF3223C() & 1) == 0)
        {
          if (v73 == 2)
          {
LABEL_47:
            swift_bridgeObjectRelease();
            sub_1ABF2FF68();
            sub_1ABF30ACC();
            swift_release();
            v118 = 1;
            v6 = v124;
            v31 = v125;
            v15 = v128;
            v29 = v135;
            v30 = v136;
            v28 = v133;
            goto LABEL_5;
          }
          v74 = v72 + 9;
          v75 = 2;
          while (1)
          {
            v76 = v75 + 1;
            if (__OFADD__(v75, 1))
              goto LABEL_71;
            v77 = *(v74 - 1) == v71 && *v74 == v70;
            if (v77 || (sub_1ABF3223C() & 1) != 0)
              break;
            v74 += 2;
            ++v75;
            if (v76 == v73)
              goto LABEL_47;
          }
        }
      }
      swift_bridgeObjectRelease();
      v78 = v117;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v117 = sub_1ABF20B88(v78);
      v6 = v124;
      v31 = v125;
      v15 = v128;
      v79 = *(_QWORD *)(v117 + 16);
      if (v39 >= v79)
        goto LABEL_72;
      v80 = v79 - 1;
      v81 = *(_QWORD *)(v125 + 72);
      v82 = v117
          + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))
          + v81 * v39;
      (*(void (**)(unint64_t, uint64_t))(v125 + 8))(v82, v124);
      v83 = v80 - v39;
      if ((uint64_t)(v80 - v39) < 0)
        goto LABEL_73;
      v30 = v136;
      if (v81 > 0 || v82 >= v82 + v81 + v81 * v83)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v81)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      *(_QWORD *)(v117 + 16) = v80;
      sub_1ABF2FF68();
      sub_1ABF30ACC();
      swift_release();
      v118 = 1;
      v29 = v135;
      v28 = v133;
      goto LABEL_5;
    }
    if (v40 == v131)
    {
      (*(void (**)(uint64_t *, uint64_t))(v31 + 96))(v8, v6);
      v42 = *v8;
      v41 = v8[1];
      sub_1ABF2FF68();
      sub_1ABF30AC0();
      swift_release();
      v43 = v130;
      swift_beginAccess();
      sub_1ABF2FF5C();
      v44 = sub_1ABD00F9C(v42, v41);
      v46 = v45;
      swift_bridgeObjectRelease();
      if ((v46 & 1) != 0)
      {
        v121 = v42;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v48 = *v43;
        v141 = *v43;
        *v43 = 0x8000000000000000;
        v49 = v43;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1ABE6EAA8();
          v48 = v141;
        }
        swift_bridgeObjectRelease();
        v50 = (uint64_t *)(*(_QWORD *)(v48 + 56) + 48 * v44);
        v51 = *v50;
        v52 = v50[1];
        sub_1ABDF04A0(v44, v48);
        *v49 = v48;
        swift_bridgeObjectRelease();
        v42 = v121;
      }
      else
      {
        v51 = 0;
        v52 = 0;
      }
      swift_endAccess();
      sub_1ABD365D4(v51, v52);
      v3 = v122;
      sub_1ABF2FF68();
      sub_1ABF2FF68();
      sub_1ABF31534();
      swift_release();
      swift_release();
      v54 = v138;
      v53 = v139;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v54 == v42 && v53 == v41)
      {
        swift_bridgeObjectRelease_n();
        v31 = v125;
        v8 = v127;
        v10 = v126;
        v15 = v128;
        v32 = v129;
        v30 = v136;
LABEL_24:
        v56 = sub_1ABF317A4();
        v58 = v57;
        v59 = v130;
        swift_beginAccess();
        v60 = *v59;
        if (*(_QWORD *)(v60 + 16) && (v61 = sub_1ABD00F9C(v56, v58), (v62 & 1) != 0))
        {
          v63 = *(_QWORD *)(v60 + 56) + 48 * v61;
          v65 = *(_QWORD *)v63;
          v64 = *(_QWORD *)(v63 + 8);
          v66 = *(_QWORD *)(v63 + 16);
          v67 = *(_QWORD *)(v63 + 24);
          v68 = *(_QWORD *)(v63 + 32);
          v69 = *(_WORD *)(v63 + 40);
          swift_endAccess();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          swift_bridgeObjectRelease();
          v137[0] = v65;
          v137[1] = v64;
          v15 = v128;
          v137[2] = v66;
          v138 = v67;
          v8 = v127;
          v139 = v68;
          v140 = v69;
          v10 = v126;
          sub_1ABF2FF68();
          sub_1ABF31528();
          v32 = v129;
          swift_bridgeObjectRelease();
          v30 = v136;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_endAccess();
        }
        goto LABEL_28;
      }
      v55 = sub_1ABF3223C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v31 = v125;
      v8 = v127;
      v10 = v126;
      v15 = v128;
      v32 = v129;
      v30 = v136;
      if ((v55 & 1) != 0)
        goto LABEL_24;
LABEL_28:
      sub_1ABF2FF68();
      sub_1ABF30ACC();
      swift_release();
      v6 = v124;
      v29 = v135;
      v28 = v133;
      if (v30 == v133)
        goto LABEL_11;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v31 + 8))(v8, v6);
      v29 = v135;
      v30 = v136;
      if (v136 == v28)
        goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v143 = (_QWORD *)v3[7];
  sub_1ABF2FF5C();
  v84 = sub_1ABF31D44();
  v85 = sub_1ABF31BF4();
  if (os_log_type_enabled(v84, v85))
  {
    v86 = (uint8_t *)swift_slowAlloc();
    v87 = swift_slowAlloc();
    v137[0] = v87;
    *(_DWORD *)v86 = 136315138;
    swift_beginAccess();
    v88 = sub_1ABF2FF5C();
    v89 = MEMORY[0x1AF437C34](v88, MEMORY[0x1E0DEA968]);
    v91 = v90;
    swift_bridgeObjectRelease();
    v142 = sub_1ABD1FE2C(v89, v91, v137);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v84, v85, "WatchlistManager watchlist order before applying changes: %s", v86, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v87, -1, -1);
    MEMORY[0x1AF438FFC](v86, -1, -1);
  }

  v142 = v117;
  swift_beginAccess();
  v92 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34E440, (uint64_t (*)(uint64_t))sub_1ABD83F24, v92);
  sub_1ABF221CC();
  sub_1ABF2222C();
  sub_1ABF31BAC();
  swift_endAccess();
  swift_bridgeObjectRelease();
  v93 = v143;
  v94 = sub_1ABF317A4();
  v96 = sub_1ABD33984(v94, v95, v93);
  v98 = v97;
  swift_bridgeObjectRelease();
  if ((v98 & 1) == 0 && v96 >= 1)
  {
    swift_beginAccess();
    sub_1ABF12DF0(v96);
    swift_endAccess();
    swift_bridgeObjectRelease();
    v99 = sub_1ABF317A4();
    v101 = v100;
    swift_beginAccess();
    sub_1ABF20834(0, 0, v99, v101);
    swift_endAccess();
  }
  *v116 = v143;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v102 = sub_1ABF31D44();
  v103 = sub_1ABF31BF4();
  if (os_log_type_enabled(v102, v103))
  {
    v104 = (uint8_t *)swift_slowAlloc();
    v105 = swift_slowAlloc();
    v137[0] = v105;
    *(_DWORD *)v104 = 136315138;
    v106 = sub_1ABF2FF5C();
    v107 = MEMORY[0x1AF437C34](v106, MEMORY[0x1E0DEA968]);
    v109 = v108;
    swift_bridgeObjectRelease();
    v142 = sub_1ABD1FE2C(v107, v109, v137);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v102, v103, "WatchlistManager watchlist order after applying changes: %s", v104, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v105, -1, -1);
    MEMORY[0x1AF438FFC](v104, -1, -1);
  }

  v110 = v118;
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  if ((v110 & 1) != 0)
  {
    v111 = v3[12];
    v112 = v3[13];
    __swift_project_boxed_opaque_existential_1(v3 + 9, v111);
    (*(void (**)(uint64_t, uint64_t))(v112 + 120))(v111, v112);
    sub_1ABF2FF68();
    v113 = (void *)sub_1ABF31114();
    sub_1ABF31180();
    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    sub_1ABD41AC4();
  }
  sub_1ABF1E800();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABF1E168(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  BOOL v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;
  _QWORD *v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t result;
  _QWORD v74[4];
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  const __CFString *v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;

  v3 = v2;
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v77 = (char *)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1ABF31774();
  v78 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v9 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v74 - v11;
  v13 = *a1;
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_38:
    sub_1ABF2FF68();
    sub_1ABF30ACC();
    swift_release();
    return sub_1ABD41AC4();
  }
  v74[3] = v3;
  v75 = v12;
  v74[2] = a2;
  v85 = (_QWORD *)(a2 + 64);
  v80 = CFSTR("watchlist");
  sub_1ABF2FF5C();
  v74[1] = v13;
  v15 = (unsigned __int8 *)(v13 + 73);
  v16 = v78;
  v79 = v9;
  while (1)
  {
    v81 = *(_QWORD *)(v15 - 41);
    v82 = v14;
    v19 = *(_QWORD *)(v15 - 33);
    v20 = *(_QWORD *)(v15 - 25);
    v21 = *(_QWORD *)(v15 - 17);
    v22 = *(_QWORD *)(v15 - 9);
    v83 = *(v15 - 1);
    v23 = *v15;
    v25 = v21 == sub_1ABF317A4() && v22 == v24;
    v86 = v20;
    v87 = v21;
    v84 = v23;
    if (v25)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    else
    {
      v26 = sub_1ABF3223C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
        v27 = v85;
        swift_beginAccess();
        v28 = v19;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        swift_bridgeObjectRetain_n();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v88 = (_QWORD *)*v27;
        v30 = v88;
        *v27 = 0x8000000000000000;
        v32 = sub_1ABD00F9C(v87, v22);
        v33 = v30[2];
        v34 = (v31 & 1) == 0;
        v35 = v33 + v34;
        if (__OFADD__(v33, v34))
          goto LABEL_41;
        v36 = v31;
        if (v30[3] < v35)
        {
          sub_1ABD09FAC(v35, isUniquelyReferenced_nonNull_native);
          v37 = sub_1ABD00F9C(v87, v22);
          if ((v36 & 1) != (v38 & 1))
            goto LABEL_43;
          v32 = v37;
          v39 = v88;
          if ((v36 & 1) == 0)
            goto LABEL_34;
LABEL_30:
          v65 = v39[7] + 48 * v32;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_QWORD *)v65 = v81;
          *(_QWORD *)(v65 + 8) = v28;
          v66 = v87;
          *(_QWORD *)(v65 + 16) = v86;
          *(_QWORD *)(v65 + 24) = v66;
          *(_QWORD *)(v65 + 32) = v22;
          *(_BYTE *)(v65 + 40) = v83;
          *(_BYTE *)(v65 + 41) = v84;
LABEL_36:
          *v85 = v39;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          v9 = v79;
          goto LABEL_5;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v39 = v88;
          if ((v31 & 1) != 0)
            goto LABEL_30;
        }
        else
        {
          sub_1ABE6EAA8();
          v39 = v88;
          if ((v36 & 1) != 0)
            goto LABEL_30;
        }
LABEL_34:
        v39[(v32 >> 6) + 8] |= 1 << v32;
        v67 = (_QWORD *)(v39[6] + 16 * v32);
        v69 = v86;
        v68 = v87;
        *v67 = v87;
        v67[1] = v22;
        v70 = v39[7] + 48 * v32;
        *(_QWORD *)v70 = v81;
        *(_QWORD *)(v70 + 8) = v28;
        *(_QWORD *)(v70 + 16) = v69;
        *(_QWORD *)(v70 + 24) = v68;
        *(_QWORD *)(v70 + 32) = v22;
        *(_BYTE *)(v70 + 40) = v83;
        *(_BYTE *)(v70 + 41) = v84;
        v71 = v39[2];
        v63 = __OFADD__(v71, 1);
        v72 = v71 + 1;
        if (v63)
          goto LABEL_42;
        v39[2] = v72;
        sub_1ABF2FF5C();
        goto LABEL_36;
      }
    }
    v81 = v19;
    sub_1ABF2FF5C();
    v40 = v75;
    sub_1ABF31738();
    v41 = v76;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v9, v40, v76);
    if (qword_1ED34FD78 != -1)
      swift_once();
    v42 = (id)qword_1ED368428;
    sub_1ABF30844();
    v43 = sub_1ABF317EC();
    v45 = v44;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v40, v41);
    v46 = v85;
    swift_beginAccess();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v47 = swift_isUniquelyReferenced_nonNull_native();
    v88 = (_QWORD *)*v46;
    v48 = v88;
    *v46 = 0x8000000000000000;
    v50 = sub_1ABD00F9C(v87, v22);
    v51 = v48[2];
    v52 = (v49 & 1) == 0;
    v53 = v51 + v52;
    if (__OFADD__(v51, v52))
      break;
    v54 = v49;
    if (v48[3] >= v53)
    {
      if ((v47 & 1) != 0)
      {
        v57 = v88;
        if ((v49 & 1) == 0)
          goto LABEL_26;
      }
      else
      {
        sub_1ABE6EAA8();
        v57 = v88;
        if ((v54 & 1) == 0)
          goto LABEL_26;
      }
    }
    else
    {
      sub_1ABD09FAC(v53, v47);
      v55 = sub_1ABD00F9C(v87, v22);
      if ((v54 & 1) != (v56 & 1))
        goto LABEL_43;
      v50 = v55;
      v57 = v88;
      if ((v54 & 1) == 0)
      {
LABEL_26:
        v57[(v50 >> 6) + 8] |= 1 << v50;
        v58 = (_QWORD *)(v57[6] + 16 * v50);
        v60 = v86;
        v59 = v87;
        *v58 = v87;
        v58[1] = v22;
        v61 = v57[7] + 48 * v50;
        *(_QWORD *)v61 = v43;
        *(_QWORD *)(v61 + 8) = v45;
        *(_QWORD *)(v61 + 16) = v60;
        *(_QWORD *)(v61 + 24) = v59;
        *(_QWORD *)(v61 + 32) = v22;
        *(_BYTE *)(v61 + 40) = v83;
        *(_BYTE *)(v61 + 41) = v84;
        v62 = v57[2];
        v63 = __OFADD__(v62, 1);
        v64 = v62 + 1;
        if (v63)
          goto LABEL_40;
        v57[2] = v64;
        sub_1ABF2FF5C();
        goto LABEL_4;
      }
    }
    v17 = v57[7] + 48 * v50;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)v17 = v43;
    *(_QWORD *)(v17 + 8) = v45;
    v18 = v87;
    *(_QWORD *)(v17 + 16) = v86;
    *(_QWORD *)(v17 + 24) = v18;
    *(_QWORD *)(v17 + 32) = v22;
    *(_BYTE *)(v17 + 40) = v83;
    *(_BYTE *)(v17 + 41) = v84;
LABEL_4:
    *v85 = v57;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v16 = v78;
    v9 = v79;
LABEL_5:
    v15 += 48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v82 - 1;
    if (v82 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABF1E800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1ABF31594();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x1E0C80A78](v2);
  v37 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF315D0();
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF31588();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1ABF315E8();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  v15 = sub_1ABF31C54();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 160))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1ABF31C9C();
    swift_unknownObjectRelease();
    *(_QWORD *)(v0 + 160) = 0;
    swift_unknownObjectRelease();
  }
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34E098);
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938];
  sub_1ABCFE1EC(&qword_1ED34E490, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
  sub_1ABCF5A54(0, &qword_1ED34E468, v19, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF222A4();
  sub_1ABF31E04();
  v20 = sub_1ABF31C60();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  ObjectType = swift_getObjectType();
  sub_1ABF315DC();
  MEMORY[0x1AF437814](v11, 1.0);
  v22 = v31;
  v23 = *(void (**)(char *, uint64_t))(v30 + 8);
  v23(v11, v31);
  *v8 = 0;
  v25 = v32;
  v24 = v33;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v32 + 104))(v8, *MEMORY[0x1E0DEF480], v33);
  MEMORY[0x1AF437F04](v14, v8, ObjectType, INFINITY);
  (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v8, v24);
  v23(v14, v22);
  aBlock[4] = sub_1ABF22304;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_139;
  v26 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  v27 = v34;
  sub_1ABEC8CF8();
  v28 = v37;
  sub_1ABEC8CFC();
  sub_1ABF31C90();
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v39);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v36);
  swift_release();
  sub_1ABF31CA8();
  *(_QWORD *)(v1 + 160) = v20;
  return swift_unknownObjectRelease();
}

void sub_1ABF1EBC0(uint64_t a1)
{
  sub_1ABF1EC14();
  if (*(_QWORD *)(a1 + 160))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1ABF31C9C();
    swift_unknownObjectRelease();
  }
}

void sub_1ABF1EC14()
{
  id v0;
  void *v1;
  id v2;

  if (qword_1ED34CA60 != -1)
    swift_once();
  v0 = (id)qword_1ED3683A8;
  sub_1ABF31BF4();
  sub_1ABF31318();

  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  sub_1ABF2FF68();
  v1 = (void *)sub_1ABF31114();
  sub_1ABF31174();
  swift_release();
  swift_release();

  sub_1ABF2FF68();
  v2 = (id)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABF1ED6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;

  v3 = *a1;
  if (qword_1ED34CA60 != -1)
LABEL_22:
    swift_once();
  v4 = (void *)qword_1ED3683A8;
  sub_1ABD0F55C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ABF366C0;
  v6 = v4;
  v7 = MEMORY[0x1AF437C34](v3, &type metadata for Watchlist);
  v9 = v8;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 40) = v9;
  sub_1ABF31BF4();
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v3 + 16);
  if (v10)
  {
    v36 = a2;
    sub_1ABF2FF5C();
    v37 = v3;
    a2 = v3 + 73;
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v38 = v10;
      v39 = *(_QWORD *)(a2 - 41);
      v13 = *(_QWORD *)(a2 - 33);
      v14 = *(_QWORD *)(a2 - 25);
      v3 = *(_QWORD *)(a2 - 17);
      v15 = *(_QWORD *)(a2 - 9);
      v40 = *(_BYTE *)(a2 - 1);
      v41 = *(_BYTE *)a2;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      swift_bridgeObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = sub_1ABD00F9C(v3, v15);
      v19 = v11[2];
      v20 = (v17 & 1) == 0;
      v21 = v19 + v20;
      if (__OFADD__(v19, v20))
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      v22 = v17;
      if (v11[3] >= v21)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v17 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_1ABE6EAA8();
          if ((v22 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_1ABD09FAC(v21, isUniquelyReferenced_nonNull_native);
        v23 = sub_1ABD00F9C(v3, v15);
        if ((v22 & 1) != (v24 & 1))
        {
          result = sub_1ABF3229C();
          __break(1u);
          return result;
        }
        v18 = v23;
        if ((v22 & 1) != 0)
        {
LABEL_4:
          v12 = v11[7] + 48 * v18;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_QWORD *)v12 = v39;
          *(_QWORD *)(v12 + 8) = v13;
          *(_QWORD *)(v12 + 16) = v14;
          *(_QWORD *)(v12 + 24) = v3;
          *(_QWORD *)(v12 + 32) = v15;
          *(_BYTE *)(v12 + 40) = v40;
          *(_BYTE *)(v12 + 41) = v41;
          goto LABEL_5;
        }
      }
      v11[(v18 >> 6) + 8] |= 1 << v18;
      v25 = (uint64_t *)(v11[6] + 16 * v18);
      *v25 = v3;
      v25[1] = v15;
      v26 = v11[7] + 48 * v18;
      *(_QWORD *)v26 = v39;
      *(_QWORD *)(v26 + 8) = v13;
      *(_QWORD *)(v26 + 16) = v14;
      *(_QWORD *)(v26 + 24) = v3;
      *(_QWORD *)(v26 + 32) = v15;
      *(_BYTE *)(v26 + 40) = v40;
      *(_BYTE *)(v26 + 41) = v41;
      v27 = v11[2];
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        goto LABEL_21;
      v11[2] = v29;
      sub_1ABF2FF5C();
LABEL_5:
      a2 += 48;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v38 - 1;
      if (v38 == 1)
      {
        v3 = v37;
        swift_bridgeObjectRelease();
        a2 = v36;
        goto LABEL_19;
      }
    }
  }
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_19:
  v30 = *(_QWORD *)(a2 + 96);
  v31 = *(_QWORD *)(a2 + 104);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 72), v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 176))(v30, v31);
  *(_QWORD *)(swift_allocObject() + 16) = v11;
  v32 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF31174();
  swift_release();
  swift_release();

  *(_QWORD *)(swift_allocObject() + 16) = v3;
  sub_1ABF2FF5C();
  v33 = (void *)sub_1ABF31114();
  v34 = sub_1ABF311F8();
  swift_release();
  swift_release();

  return v34;
}

uint64_t sub_1ABF1F1A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a1;
  if (qword_1ED34CA60 != -1)
    swift_once();
  v4 = (void *)qword_1ED3683A8;
  sub_1ABD0F55C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ABF366C0;
  v6 = v4;
  v7 = MEMORY[0x1E0DEA968];
  v8 = MEMORY[0x1AF437C34](v3, MEMORY[0x1E0DEA968]);
  v10 = v9;
  *(_QWORD *)(v5 + 56) = v7;
  *(_QWORD *)(v5 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v10;
  sub_1ABF31BF4();
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  sub_1ABF2FF5C();
  sub_1ABF21344(v3, a2);
  swift_bridgeObjectRelease();
  sub_1ABD34E80(0, (unint64_t *)&unk_1ED34DD50, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABF1F318()
{
  sub_1ABD34E80(0, (unint64_t *)&unk_1ED34DD50, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABF1F394(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  __int128 v26;
  char isUniquelyReferenced_nonNull_native;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  void *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD *v45;
  char v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  void *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 *v75;
  __int128 v76;
  __int128 v77;
  _OWORD *v78;
  __int128 v79;
  void *v80;
  void *v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  __int128 *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _OWORD *v99;
  __int128 v100;
  void *v101;
  uint64_t result;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  unint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  _OWORD v118[2];
  __int128 v119;
  _BYTE v120[26];
  uint64_t v121;

  v1 = *a1;
  if (qword_1ED34CA60 != -1)
    goto LABEL_55;
  while (2)
  {
    v2 = (void *)qword_1ED3683A8;
    sub_1ABD0F55C();
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1ABF366C0;
    v4 = v2;
    v5 = MEMORY[0x1AF437C34](v1, &type metadata for Watchlist);
    v7 = v6;
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
    v106 = sub_1ABD0F5C0();
    *(_QWORD *)(v3 + 64) = v106;
    *(_QWORD *)(v3 + 32) = v5;
    *(_QWORD *)(v3 + 40) = v7;
    sub_1ABF31BF4();
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v9 = sub_1ABD34950(MEMORY[0x1E0DEE9D8]);
    v10 = (_QWORD *)v9;
    if (!*(_QWORD *)(v1 + 16))
    {
      v108 = (_QWORD *)v9;
      v113 = v8;
LABEL_36:
      v104 = v8;
      if (v8[2])
      {
        v67 = (void *)qword_1ED3683A8;
        v68 = swift_allocObject();
        *(_OWORD *)(v68 + 16) = xmmword_1ABF366C0;
        v69 = v67;
        v70 = sub_1ABF2FF5C();
        v71 = MEMORY[0x1AF437C34](v70, &type metadata for Watchlist);
        v73 = v72;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v68 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v68 + 64) = v106;
        *(_QWORD *)(v68 + 32) = v71;
        *(_QWORD *)(v68 + 40) = v73;
        sub_1ABF31BF4();
        sub_1ABF31318();

        swift_bridgeObjectRelease();
        v74 = v104[2];
        if (v74)
        {
          v75 = (__int128 *)(v104 + 4);
          do
          {
            v76 = *v75;
            v77 = v75[1];
            *(_OWORD *)&v120[10] = *(__int128 *)((char *)v75 + 26);
            v119 = v76;
            *(_OWORD *)v120 = v77;
            sub_1ABD04B78((uint64_t)&v119);
            sub_1ABD04578(0, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
            sub_1ABF3127C();
            v78 = (_OWORD *)swift_allocObject();
            v79 = *(_OWORD *)v120;
            v78[1] = v119;
            v78[2] = v79;
            *(_OWORD *)((char *)v78 + 42) = *(_OWORD *)&v120[10];
            sub_1ABD04B78((uint64_t)&v119);
            v80 = (void *)sub_1ABF31114();
            sub_1ABF3118C();
            swift_release();
            swift_release();

            v81 = (void *)sub_1ABF31114();
            sub_1ABF3118C();
            swift_release();

            v82 = (void *)sub_1ABF31114();
            sub_1ABF3118C();
            swift_release();
            swift_release();

            sub_1ABD04BC0((uint64_t)&v119);
            v75 += 3;
            --v74;
          }
          while (v74);
        }
      }
      swift_bridgeObjectRelease();
      v83 = v113[2];
      v84 = v108;
      if (!v83)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v85 = (__int128 *)(v113 + 4);
      v121 = MEMORY[0x1E0DEE9C0] + 8;
      while (1)
      {
        v86 = *v85;
        v87 = v85[1];
        *(_OWORD *)((char *)v118 + 10) = *(__int128 *)((char *)v85 + 26);
        v117 = v86;
        v118[0] = v87;
        if (v84[2])
        {
          v88 = v117;
          sub_1ABD04B78((uint64_t)&v117);
          sub_1ABF2FF5C();
          v89 = sub_1ABD00F9C(v88, *((uint64_t *)&v88 + 1));
          if ((v90 & 1) != 0
            && (v91 = *(_QWORD *)(v84[7] + 8 * v89),
                sub_1ABF2FF5C(),
                swift_bridgeObjectRelease(),
                (v92 = *(_QWORD *)(v91 + 16)) != 0))
          {
            if (*(_QWORD *)(*(_QWORD *)&v118[0] + 16) == v92)
            {
              sub_1ABD04BC0((uint64_t)&v117);
              swift_bridgeObjectRelease();
              goto LABEL_44;
            }
            v93 = (void *)qword_1ED3683A8;
            v94 = swift_allocObject();
            *(_OWORD *)(v94 + 16) = xmmword_1ABF366E0;
            v95 = v93;
            v96 = MEMORY[0x1E0DEA968];
            v97 = MEMORY[0x1AF437C34](v91, MEMORY[0x1E0DEA968]);
            *(_QWORD *)(v94 + 56) = v96;
            *(_QWORD *)(v94 + 64) = v106;
            *(_QWORD *)(v94 + 32) = v97;
            *(_QWORD *)(v94 + 40) = v98;
            sub_1ABF31F6C();
            *(_QWORD *)(v94 + 96) = v96;
            *(_QWORD *)(v94 + 104) = v106;
            *(_QWORD *)(v94 + 72) = 0;
            *(_QWORD *)(v94 + 80) = 0xE000000000000000;
            sub_1ABF31BF4();
            sub_1ABF31318();

            swift_bridgeObjectRelease();
            *(_QWORD *)(swift_allocObject() + 16) = v91;
            sub_1ABD3463C();
            sub_1ABF2FF5C();
            sub_1ABF31270();
            swift_release();
            v99 = (_OWORD *)swift_allocObject();
            v100 = v118[0];
            v99[1] = v117;
            v99[2] = v100;
            *(_OWORD *)((char *)v99 + 42) = *(_OWORD *)((char *)v118 + 10);
            sub_1ABD04B78((uint64_t)&v117);
            v101 = (void *)sub_1ABF31114();
            sub_1ABF31198();
            swift_bridgeObjectRelease();
            v84 = v108;
            swift_release();
            swift_release();
            swift_release();

          }
          else
          {
            swift_bridgeObjectRelease();
          }
          sub_1ABD04BC0((uint64_t)&v117);
        }
LABEL_44:
        v85 += 3;
        if (!--v83)
          goto LABEL_52;
      }
    }
    v11 = *(_QWORD *)(v1 + 16);
    sub_1ABF2FF5C();
    v12 = (unsigned __int8 *)(v1 + 73);
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v103 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v1 = v11;
    while (1)
    {
      v112 = v13;
      v14 = *(_QWORD *)(v12 - 41);
      v15 = *(_QWORD *)(v12 - 33);
      v16 = *(_QWORD *)(v12 - 25);
      v115 = *(_QWORD *)(v12 - 17);
      v17 = *(_QWORD *)(v12 - 9);
      v114 = *(v12 - 1);
      LODWORD(v121) = *v12;
      v18 = v10[2];
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      if (!v18)
        break;
      sub_1ABF2FF5C();
      v19 = sub_1ABD00F9C(v14, v15);
      if ((v20 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        break;
      }
      v105 = v1;
      v21 = *(_QWORD *)(v10[7] + 8 * v19);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      v116 = v21;
      v110 = v14;
      v22 = (void *)qword_1ED3683A8;
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1ABF366E0;
      v24 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v23 + 64) = v106;
      *(_QWORD *)(v23 + 32) = v110;
      *(_QWORD *)(v23 + 40) = v15;
      *(_QWORD *)&v117 = 0;
      *((_QWORD *)&v117 + 1) = 0xE000000000000000;
      sub_1ABF2FF5C();
      v25 = v22;
      sub_1ABF31F6C();
      v26 = v117;
      *(_QWORD *)(v23 + 96) = v24;
      *(_QWORD *)(v23 + 104) = v106;
      *(_OWORD *)(v23 + 72) = v26;
      sub_1ABF31BF4();
      sub_1ABF31318();

      swift_bridgeObjectRelease();
      sub_1ABF2FF5C();
      sub_1ABD23760(v16);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1ABDF10D0(v116, v110, v15, isUniquelyReferenced_nonNull_native);
      v107 = v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = (void *)qword_1ED3683A8;
      v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1ABF366E0;
      sub_1ABF2FF5C();
      v30 = v28;
      v31 = MEMORY[0x1AF437C34](v16, v24);
      v109 = v17;
      v33 = v32;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 56) = v24;
      *(_QWORD *)(v29 + 64) = v106;
      *(_QWORD *)(v29 + 32) = v31;
      *(_QWORD *)(v29 + 40) = v33;
      *(_QWORD *)&v117 = 0;
      *((_QWORD *)&v117 + 1) = 0xE000000000000000;
      *(_QWORD *)&v119 = v110;
      *((_QWORD *)&v119 + 1) = v15;
      *(_QWORD *)v120 = v16;
      *(_QWORD *)&v120[8] = v115;
      *(_QWORD *)&v120[16] = v109;
      v120[24] = v114;
      v120[25] = v121;
      sub_1ABF31F6C();
      v34 = v117;
      *(_QWORD *)(v29 + 96) = v24;
      *(_QWORD *)(v29 + 104) = v106;
      *(_OWORD *)(v29 + 72) = v34;
      sub_1ABF31BF4();
      sub_1ABF31318();

      swift_bridgeObjectRelease();
      v35 = (void *)qword_1ED3683A8;
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1ABF366E0;
      v37 = v35;
      v38 = v24;
      v39 = MEMORY[0x1AF437C34](v116, v24);
      v41 = v40;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v36 + 56) = v38;
      *(_QWORD *)(v36 + 64) = v106;
      *(_QWORD *)(v36 + 32) = v39;
      *(_QWORD *)(v36 + 40) = v41;
      *(_QWORD *)(v36 + 96) = v38;
      *(_QWORD *)(v36 + 104) = v106;
      *(_QWORD *)(v36 + 72) = v110;
      *(_QWORD *)(v36 + 80) = v15;
      sub_1ABF2FF5C();
      sub_1ABF31BF4();
      sub_1ABF31318();

      swift_bridgeObjectRelease();
      if (v115 == sub_1ABF317A4() && v109 == v42)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v13 = v112;
        v10 = v107;
        v1 = v105;
      }
      else
      {
        v43 = sub_1ABF3223C();
        swift_bridgeObjectRelease();
        v1 = v105;
        if ((v43 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v107;
          v13 = v112;
        }
        else
        {
          v10 = v107;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v103 = sub_1ABD124D4(0, v103[2] + 1, 1, v103);
          v58 = v103[2];
          v57 = v103[3];
          if (v58 >= v57 >> 1)
            v103 = sub_1ABD124D4((_QWORD *)(v57 > 1), v58 + 1, 1, v103);
          v103[2] = v58 + 1;
          v59 = &v103[6 * v58];
          v59[4] = v110;
          v59[5] = v15;
          v59[6] = v16;
          v59[7] = v115;
          v59[8] = v109;
          *((_BYTE *)v59 + 72) = v114;
          *((_BYTE *)v59 + 73) = v121;
          v13 = v112;
        }
      }
LABEL_5:
      v12 += 48;
      if (!--v1)
      {
        v113 = v13;
        v108 = v10;
        swift_bridgeObjectRelease();
        v8 = v103;
        goto LABEL_36;
      }
    }
    v44 = v17;
    sub_1ABF2FF5C();
    v111 = v16;
    sub_1ABF2FF5C();
    v45 = v10;
    v46 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v119 = v45;
    v47 = v14;
    v49 = sub_1ABD00F9C(v14, v15);
    v50 = v45[2];
    v51 = (v48 & 1) == 0;
    v52 = v50 + v51;
    if (__OFADD__(v50, v51))
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      swift_once();
      continue;
    }
    break;
  }
  v53 = v48;
  if (v45[3] >= v52)
  {
    if ((v46 & 1) != 0)
    {
      v10 = (_QWORD *)v119;
      if ((v48 & 1) != 0)
        goto LABEL_20;
    }
    else
    {
      sub_1ABE6ECA4();
      v10 = (_QWORD *)v119;
      if ((v53 & 1) != 0)
        goto LABEL_20;
    }
LABEL_27:
    v10[(v49 >> 6) + 8] |= 1 << v49;
    v60 = (uint64_t *)(v10[6] + 16 * v49);
    *v60 = v47;
    v60[1] = v15;
    *(_QWORD *)(v10[7] + 8 * v49) = v111;
    v61 = v10[2];
    v62 = __OFADD__(v61, 1);
    v63 = v61 + 1;
    if (v62)
      goto LABEL_54;
    v10[2] = v63;
    sub_1ABF2FF5C();
    goto LABEL_29;
  }
  sub_1ABD23C30(v52, v46);
  v54 = sub_1ABD00F9C(v47, v15);
  if ((v53 & 1) == (v55 & 1))
  {
    v49 = v54;
    v10 = (_QWORD *)v119;
    if ((v53 & 1) == 0)
      goto LABEL_27;
LABEL_20:
    v56 = v10[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v56 + 8 * v49) = v111;
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v112;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1ABD124D4(0, v112[2] + 1, 1, v112);
    v65 = v13[2];
    v64 = v13[3];
    if (v65 >= v64 >> 1)
      v13 = sub_1ABD124D4((_QWORD *)(v64 > 1), v65 + 1, 1, v13);
    v13[2] = v65 + 1;
    v66 = &v13[6 * v65];
    v66[4] = v47;
    v66[5] = v15;
    v66[6] = v111;
    v66[7] = v115;
    v66[8] = v44;
    *((_BYTE *)v66 + 72) = v114;
    *((_BYTE *)v66 + 73) = v121;
    goto LABEL_5;
  }
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABF20098(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a2;
  v23 = sub_1ABF30B38();
  v27 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF30760();
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30C28();
  v21 = *(_QWORD *)(v8 - 8);
  v22 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1ABF30B14();
  v20 = *(_QWORD *)(v11 - 8);
  v12 = v20;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[17];
  v16 = a1[18];
  __swift_project_boxed_opaque_existential_1(a1 + 14, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DB32A8], v11);
  sub_1ABF30C1C();
  sub_1ABF30754();
  v17 = v23;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v4, *MEMORY[0x1E0DB3560], v23);
  v18 = (*(uint64_t (**)(uint64_t, char *, char *, char *, char *, uint64_t, uint64_t))(v16 + 8))(v26, v14, v10, v7, v4, v15, v16);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v17);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v22);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v11);
  return v18;
}

void sub_1ABF202A4(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _OWORD *v8;
  __int128 v9;
  void *v10;
  _QWORD v11[4];
  uint64_t v12;

  v5 = sub_1ABF2FF5C();
  v6 = sub_1ABF12520(v5);
  swift_bridgeObjectRelease();
  v12 = a2;
  v11[2] = &v12;
  v11[3] = a3;
  sub_1ABF121BC((void (*)(uint64_t *__return_ptr, _OWORD *))sub_1ABF22458, (uint64_t)v11, v6);
  v7 = (void *)sub_1ABF31114();
  sub_1ABF3109C();
  swift_bridgeObjectRelease();

  v8 = (_OWORD *)swift_allocObject();
  v9 = a3[1];
  v8[1] = *a3;
  v8[2] = v9;
  *(_OWORD *)((char *)v8 + 42) = *(_OWORD *)((char *)a3 + 26);
  sub_1ABD04B78((uint64_t)a3);
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABF203E8(_QWORD *a1, __int128 *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = a1[3];
  v7 = a1[4];
  v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  return sub_1ABF20C40((uint64_t)v8, a2, a3, v3, v6, v7);
}

uint64_t sub_1ABF20438(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return sub_1ABF20BB0((uint64_t)v4, v1, v2, v3);
}

uint64_t sub_1ABF20470()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABF20494()
{
  return swift_deallocObject();
}

unint64_t sub_1ABF204A4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_1ABF204F4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1ABD2426C(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
}

unint64_t sub_1ABF20500(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v5;
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = (_OWORD *)(a5[7] + 48 * result);
  v7 = a4[1];
  *v6 = *a4;
  v6[1] = v7;
  *(_OWORD *)((char *)v6 + 26) = *(_OWORD *)((char *)a4 + 26);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_1ABF20560(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_1ABF205A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1ABD2426C(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
}

uint64_t sub_1ABF205B8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1ABD2426C(a1, a2, a3, a4, a5, type metadata accessor for Chart);
}

unint64_t sub_1ABF205C4(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = a4[6] + 136 * result;
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 112) = v5;
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(a2 + 128);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v8;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v9 = a4[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a4[2] = v11;
  return result;
}

unint64_t sub_1ABF20634(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = a7[7] + 24 * result;
  *(_QWORD *)v8 = a4;
  *(_QWORD *)(v8 + 8) = a5;
  *(_BYTE *)(v8 + 16) = a6;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

uint64_t sub_1ABF20688(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1ABD2426C(a1, a2, a3, a4, a5, type metadata accessor for YahooMultiQuoteItem);
}

unint64_t sub_1ABF20694(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1ABF206DC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1ABF305D4();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for SDSAuthToken();
  result = sub_1ABCFE2AC(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for SDSAuthToken);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

_OWORD *sub_1ABF20794(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1ABF31F84();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_1ABD1F610(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

char *sub_1ABF20834(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1ABD12054(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1ABF3202C();
  __break(1u);
  return result;
}

char *sub_1ABF209B4(uint64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  char *result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1ABD32E4C(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  v14 = (uint64_t)&v5[17 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v9)
    goto LABEL_20;
  v16 = v5[2];
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_26;
  if ((v18 & 0x8000000000000000) == 0)
  {
    result = (char *)(v14 + 136);
    v19 = (char *)&v5[17 * a2 + 4];
    if ((char *)(v14 + 136) != v19 || result >= &v19[136 * v18])
      result = (char *)memmove(result, v19, 136 * v18);
    v20 = v5[2];
    v17 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v17)
    {
      v5[2] = v21;
LABEL_20:
      v22 = *(_OWORD *)(a3 + 112);
      *(_OWORD *)(v14 + 96) = *(_OWORD *)(a3 + 96);
      *(_OWORD *)(v14 + 112) = v22;
      *(_QWORD *)(v14 + 128) = *(_QWORD *)(a3 + 128);
      v23 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v14 + 32) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v14 + 48) = v23;
      v24 = *(_OWORD *)(a3 + 80);
      *(_OWORD *)(v14 + 64) = *(_OWORD *)(a3 + 64);
      *(_OWORD *)(v14 + 80) = v24;
      v25 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)v14 = *(_OWORD *)a3;
      *(_OWORD *)(v14 + 16) = v25;
      *(_QWORD *)v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1ABF3202C();
  __break(1u);
  return result;
}

_QWORD *sub_1ABF20B60(_QWORD *a1)
{
  return sub_1ABD124D4(0, a1[2], 0, a1);
}

_QWORD *sub_1ABF20B74(_QWORD *a1)
{
  return sub_1ABD12054(0, a1[2], 0, a1);
}

uint64_t sub_1ABF20B88(unint64_t a1)
{
  return sub_1ABD82A90(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1ABF20B9C(_QWORD *a1)
{
  return sub_1ABD32E4C(0, a1[2], 0, a1);
}

uint64_t sub_1ABF20BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v11[5];

  v11[3] = a3;
  v11[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  if (MEMORY[0x1AF4390D4](a2 + 16))
  {
    v8 = *(_QWORD *)(a2 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v11, ObjectType, v8);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t sub_1ABF20C40(uint64_t a1, __int128 *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t ObjectType;
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38[6];

  v38[3] = a5;
  v38[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v38);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  v12 = *a2;
  v13 = *((_QWORD *)a2 + 2);
  v14 = *((_QWORD *)a2 + 3);
  v15 = *((_BYTE *)a2 + 32);
  v16 = *((_BYTE *)a2 + 33);
  v17 = *a3;
  v25 = *(_OWORD *)(a3 + 1);
  v26 = v12;
  v18 = a3[3];
  v19 = a3[4];
  v24 = *((_BYTE *)a3 + 40);
  v20 = *((_BYTE *)a3 + 41);
  if (MEMORY[0x1AF4390D4](a4 + 16))
  {
    v21 = *(_QWORD *)(a4 + 24);
    ObjectType = swift_getObjectType();
    v33 = v26;
    v34 = v13;
    v35 = v14;
    v36 = v15;
    v37 = v16;
    v27 = v17;
    v28 = v25;
    v29 = v18;
    v30 = v19;
    v31 = v24;
    v32 = v20;
    (*(void (**)(uint64_t *, __int128 *, uint64_t *, uint64_t, uint64_t))(v21 + 8))(v38, &v33, &v27, ObjectType, v21);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_1ABF20D54(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *i;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = result + 40;
  v6 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v4 <= v2)
      v7 = v2;
    else
      v7 = v4;
    v8 = -(uint64_t)v7;
    for (i = (uint64_t *)(v5 + 16 * v4++); ; i += 2)
    {
      if (v8 + v4 == 1)
      {
        __break(1u);
        return result;
      }
      v10 = *(i - 1);
      v11 = *i;
      if (v10 != *(_QWORD *)(a2 + 16) || v11 != *(_QWORD *)(a2 + 24))
      {
        result = sub_1ABF3223C();
        if ((result & 1) == 0)
          break;
      }
      if (++v4 - v2 == 1)
        return v6;
    }
    sub_1ABF2FF5C();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1ABD16414(0, *(_QWORD *)(v6 + 16) + 1, 1);
    v14 = *(_QWORD *)(v6 + 16);
    v13 = *(_QWORD *)(v6 + 24);
    if (v14 >= v13 >> 1)
      result = sub_1ABD16414(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v6 + 16) = v14 + 1;
    v15 = v6 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v10;
    *(_QWORD *)(v15 + 40) = v11;
    v5 = v16;
  }
  while (v4 != v2);
  return v6;
}

uint64_t sub_1ABF20EB0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *i;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  v6 = 0;
  v7 = result + 40;
  v8 = -(uint64_t)v3;
  v9 = MEMORY[0x1E0DEE9D8];
  v19 = result + 40;
  do
  {
    if (v6 <= v3)
      v10 = v3;
    else
      v10 = v6;
    v11 = -(uint64_t)v10;
    for (i = (uint64_t *)(v7 + 16 * v6++); ; i += 2)
    {
      if (v11 + v6 == 1)
      {
        __break(1u);
        return result;
      }
      v13 = *(i - 1);
      v14 = *i;
      if (v13 != a2 || v14 != a3)
      {
        result = sub_1ABF3223C();
        if ((result & 1) == 0)
          break;
      }
      ++v6;
      if (v8 + v6 == 1)
        return v9;
    }
    sub_1ABF2FF5C();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1ABD16414(0, *(_QWORD *)(v9 + 16) + 1, 1);
    v17 = *(_QWORD *)(v9 + 16);
    v16 = *(_QWORD *)(v9 + 24);
    if (v17 >= v16 >> 1)
      result = sub_1ABD16414(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v9 + 16) = v17 + 1;
    v18 = v9 + 16 * v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_QWORD *)(v18 + 40) = v14;
    v3 = v20;
    v7 = v19;
  }
  while (v8 + v6);
  return v9;
}

uint64_t sub_1ABF2101C(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *i;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = result + 40;
  v6 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v4 <= v2)
      v7 = v2;
    else
      v7 = v4;
    v8 = -(uint64_t)v7;
    for (i = (uint64_t *)(v5 + 16 * v4++); ; i += 2)
    {
      if (v8 + v4 == 1)
      {
        __break(1u);
        return result;
      }
      v10 = *(i - 1);
      v11 = *i;
      if (v10 != *(_QWORD *)(a2 + 24) || v11 != *(_QWORD *)(a2 + 32))
      {
        result = sub_1ABF3223C();
        if ((result & 1) == 0)
          break;
      }
      if (++v4 - v2 == 1)
        return v6;
    }
    sub_1ABF2FF5C();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1ABD16414(0, *(_QWORD *)(v6 + 16) + 1, 1);
    v14 = *(_QWORD *)(v6 + 16);
    v13 = *(_QWORD *)(v6 + 24);
    if (v14 >= v13 >> 1)
      result = sub_1ABD16414(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v6 + 16) = v14 + 1;
    v15 = v6 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v10;
    *(_QWORD *)(v15 + 40) = v11;
    v5 = v16;
  }
  while (v4 != v2);
  return v6;
}

_QWORD *sub_1ABF21178(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = (uint64_t *)(sub_1ABF2FF5C() + 40);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain_n();
      v8 = sub_1ABD00F9C(v7, v6);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 136 * v8;
        v27 = *(_OWORD *)v10;
        v11 = *(_OWORD *)(v10 + 64);
        v13 = *(_OWORD *)(v10 + 16);
        v12 = *(_OWORD *)(v10 + 32);
        v30 = *(_OWORD *)(v10 + 48);
        v31 = v11;
        v28 = v13;
        v29 = v12;
        v15 = *(_OWORD *)(v10 + 96);
        v14 = *(_OWORD *)(v10 + 112);
        v16 = *(_OWORD *)(v10 + 80);
        v35 = *(_QWORD *)(v10 + 128);
        v33 = v15;
        v34 = v14;
        v32 = v16;
        sub_1ABD97ECC((uint64_t)&v27);
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1ABD32E4C(0, v5[2] + 1, 1, v5);
        v18 = v5[2];
        v17 = v5[3];
        if (v18 >= v17 >> 1)
          v5 = sub_1ABD32E4C((_QWORD *)(v17 > 1), v18 + 1, 1, v5);
        v5[2] = v18 + 1;
        v19 = &v5[17 * v18];
        *((_OWORD *)v19 + 2) = v27;
        v20 = v28;
        v21 = v29;
        v22 = v31;
        *((_OWORD *)v19 + 5) = v30;
        *((_OWORD *)v19 + 6) = v22;
        *((_OWORD *)v19 + 3) = v20;
        *((_OWORD *)v19 + 4) = v21;
        v23 = v32;
        v24 = v33;
        v25 = v34;
        v19[20] = v35;
        *((_OWORD *)v19 + 8) = v24;
        *((_OWORD *)v19 + 9) = v25;
        *((_OWORD *)v19 + 7) = v23;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1ABF21324@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ABF19C80(v1, a1);
}

uint64_t sub_1ABF2132C()
{
  return sub_1ABF19D10();
}

_QWORD *sub_1ABF21344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = (uint64_t *)(sub_1ABF2FF5C() + 40);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = *(v4 - 1);
      v7 = *v4;
      swift_bridgeObjectRetain_n();
      v8 = sub_1ABD00F9C(v6, v7);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 48 * v8;
        v11 = *(_QWORD *)(v10 + 8);
        v21 = *(_QWORD *)v10;
        v12 = *(_QWORD *)(v10 + 16);
        v20 = *(_QWORD *)(v10 + 24);
        v13 = *(_QWORD *)(v10 + 32);
        v18 = *(_BYTE *)(v10 + 41);
        v19 = *(_BYTE *)(v10 + 40);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1ABD124D4(0, v5[2] + 1, 1, v5);
        v15 = v5[2];
        v14 = v5[3];
        if (v15 >= v14 >> 1)
          v5 = sub_1ABD124D4((_QWORD *)(v14 > 1), v15 + 1, 1, v5);
        v5[2] = v15 + 1;
        v16 = &v5[6 * v15];
        v16[4] = v21;
        v16[5] = v11;
        v16[6] = v12;
        v16[7] = v20;
        v16[8] = v13;
        *((_BYTE *)v16 + 72) = v19;
        *((_BYTE *)v16 + 73) = v18;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1ABF214EC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = sub_1ABF2FF5C();
  v10 = 0;
  v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v10 << 6);
LABEL_22:
    v16 = (_QWORD *)(*(_QWORD *)(a1 + 56) + 48 * v12);
    if (*v16 != *a2 || v16[1] != a2[1])
    {
      result = sub_1ABF3223C();
      if ((result & 1) == 0)
      {
        v18 = sub_1ABF31804();
        v23 = v19;
        v24 = v18;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1ABD12054(0, v25[2] + 1, 1, v25);
          v25 = (_QWORD *)result;
        }
        v21 = v25[2];
        v20 = v25[3];
        if (v21 >= v20 >> 1)
        {
          result = (uint64_t)sub_1ABD12054((_QWORD *)(v20 > 1), v21 + 1, 1, v25);
          v25 = (_QWORD *)result;
        }
        v25[2] = v21 + 1;
        v22 = &v25[2 * v21];
        v22[4] = v24;
        v22[5] = v23;
      }
    }
  }
  v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v13 >= v8)
    goto LABEL_32;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  ++v10;
  if (v14)
    goto LABEL_21;
  v10 = v13 + 1;
  if (v13 + 1 >= v8)
    goto LABEL_32;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_21;
  v10 = v13 + 2;
  if (v13 + 2 >= v8)
    goto LABEL_32;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_21;
  v10 = v13 + 3;
  if (v13 + 3 >= v8)
    goto LABEL_32;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
  {
LABEL_21:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_22;
  }
  v15 = v13 + 4;
  if (v15 >= v8)
  {
LABEL_32:
    swift_release();
    return (uint64_t)v25;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_32;
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1ABF2170C(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1ABD12054(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABF21874()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF218B8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;
  _OWORD v12[2];

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  v7 = a2[12];
  v8 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v7);
  v9 = *(_OWORD *)(v2 + 64);
  v11 = *(_OWORD *)(v2 + 48);
  v12[0] = v9;
  *(_OWORD *)((char *)v12 + 10) = *(_OWORD *)(v2 + 74);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __int128 *, uint64_t, uint64_t))(v8 + 168))(v3, v4, v5, v6, &v11, v7, v8);
}

uint64_t sub_1ABF2194C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF21988(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF18570(a1, a2, v2 + 16, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_1ABF219A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF219E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v8;
  _OWORD v9[2];

  v3 = *(_QWORD *)(v2 + 16);
  v4 = a2[12];
  v5 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v4);
  v6 = *(_OWORD *)(v2 + 40);
  v8 = *(_OWORD *)(v2 + 24);
  v9[0] = v6;
  *(_OWORD *)((char *)v9 + 10) = *(_OWORD *)(v2 + 50);
  return (*(uint64_t (**)(uint64_t, __int128 *, uint64_t, uint64_t))(v5 + 32))(v3, &v8, v4, v5);
}

uint64_t sub_1ABF21A60()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF21A68(uint64_t a1, _QWORD *a2)
{
  return sub_1ABF21BB4(a1, a2);
}

uint64_t sub_1ABF21A7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF21AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF18024(a1, a2, (_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1ABF21AD4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 160))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF21B8C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1ABF17868(a1, a2, v2 + 16, v2 + 152, (__int128 *)(v2 + 288));
}

uint64_t sub_1ABF21BAC()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF21BB4(uint64_t a1, _QWORD *a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  char v7;
  __int128 v8;
  _OWORD v9[2];

  v3 = a2[12];
  v4 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v3);
  v5 = v2[2];
  v8 = v2[1];
  v9[0] = v5;
  *(_OWORD *)((char *)v9 + 10) = *(_OWORD *)((char *)v2 + 42);
  v7 = -96;
  return (*(uint64_t (**)(__int128 *, char *, uint64_t, uint64_t))(v4 + 104))(&v8, &v7, v3, v4);
}

uint64_t sub_1ABF21C2C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 208))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1ABF21CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF1793C(a1, a2, v2 + 16, v2 + 64, v2 + 200);
}

uint64_t sub_1ABF21D08(uint64_t a1, _QWORD *a2)
{
  return sub_1ABF22754(a1, a2);
}

uint64_t sub_1ABF21D1C()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF21D24(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF172E4(a1, a2, v2 + 16);
}

uint64_t sub_1ABF21D40(uint64_t a1, _QWORD *a2)
{
  return sub_1ABF22548(a1, a2);
}

uint64_t sub_1ABF21D58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF16BB0(a1, a2, v2 + 16, v2 + 64, *(_QWORD *)(v2 + 200));
}

uint64_t sub_1ABF21D80()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF21D88@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;

  v2 = v1[2];
  *a1 = v1[1];
  a1[1] = v2;
  *(_OWORD *)((char *)a1 + 26) = *(_OWORD *)((char *)v1 + 42);
  return sub_1ABD04B78((uint64_t)(v1 + 1));
}

uint64_t sub_1ABF21DC0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 72))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1ABF21E10(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1ABF18A70(a1, a2, (__int128 *)(v2 + 16), v2 + 64);
}

uint64_t sub_1ABF21E2C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1ABF21E64(__int128 *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF18B0C(a1, a2, v2 + 16);
}

uint64_t sub_1ABF21E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF15D50(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1ABF21E94()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF21E9C()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF21EA4()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF21EAC()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF21EB4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v8;
  _OWORD v9[2];
  char v10;

  v3 = *(_BYTE *)(v2 + 58);
  v4 = a2[12];
  v5 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v4);
  v6 = *(_OWORD *)(v2 + 32);
  v8 = *(_OWORD *)(v2 + 16);
  v9[0] = v6;
  *(_OWORD *)((char *)v9 + 10) = *(_OWORD *)(v2 + 42);
  v10 = v3;
  return (*(uint64_t (**)(__int128 *, char *, uint64_t, uint64_t))(v5 + 112))(&v8, &v10, v4, v5);
}

uint64_t sub_1ABF21F34()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF21F3C(__int128 *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF1987C(a1, a2, v2 + 16);
}

uint64_t sub_1ABF21F54()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF21F5C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v8;
  _OWORD v9[2];
  char v10;

  v3 = *(_BYTE *)(v2 + 58);
  v4 = a2[12];
  v5 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v4);
  v6 = *(_OWORD *)(v2 + 32);
  v8 = *(_OWORD *)(v2 + 16);
  v9[0] = v6;
  *(_OWORD *)((char *)v9 + 10) = *(_OWORD *)(v2 + 42);
  v10 = v3;
  return (*(uint64_t (**)(__int128 *, char *, uint64_t, uint64_t))(v5 + 104))(&v8, &v10, v4, v5);
}

uint64_t sub_1ABF21FDC()
{
  return swift_deallocObject();
}

uint64_t sub_1ABF21FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF194DC(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_1ABF22008(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF18F64(a1, a2, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + 32);
}

uint64_t sub_1ABF22024()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF2202C(uint64_t *a1, _QWORD *a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v9;
  _OWORD v10[2];

  v3 = *a1;
  v4 = a1[1];
  v5 = a2[12];
  v6 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v5);
  v7 = v2[2];
  v9 = v2[1];
  v10[0] = v7;
  *(_OWORD *)((char *)v10 + 10) = *(_OWORD *)((char *)v2 + 42);
  return (*(uint64_t (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 96))(&v9, v3, v4, v5, v6);
}

uint64_t sub_1ABF220AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF19288(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1ABF220C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1ABF19208(*(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_1ABF220CC()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF220D4(uint64_t a1, _QWORD *a2)
{
  return sub_1ABF22390(a1, a2);
}

uint64_t sub_1ABF220E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF16068(a1, a2, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1ABF22100@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABF162DC(a1);
}

void sub_1ABF22108()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34E478)
  {
    sub_1ABD83F24();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34E478);
  }
}

uint64_t sub_1ABF22170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34E480, (uint64_t (*)(uint64_t))sub_1ABF22108, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ABF221CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34E458;
  if (!qword_1ED34E458)
  {
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF58], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34E458);
  }
  return result;
}

unint64_t sub_1ABF2222C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34E450;
  if (!qword_1ED34E450)
  {
    sub_1ABCF5A54(255, (unint64_t *)&unk_1ED34E440, (uint64_t (*)(uint64_t))sub_1ABD83F24, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF48], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34E450);
  }
  return result;
}

uint64_t sub_1ABF2228C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABF1E168(a1, v1);
}

unint64_t sub_1ABF222A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34E470;
  if (!qword_1ED34E470)
  {
    sub_1ABCF5A54(255, &qword_1ED34E468, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34E470);
  }
  return result;
}

void sub_1ABF22304()
{
  uint64_t v0;

  sub_1ABF1EBC0(v0);
}

uint64_t sub_1ABF2230C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[12];
  v2 = v0[13];
  __swift_project_boxed_opaque_existential_1(v0 + 9, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2);
}

uint64_t sub_1ABF22358(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABF1ED6C(a1, v1);
}

uint64_t sub_1ABF22370(uint64_t *a1)
{
  return sub_1ABF1F394(a1);
}

uint64_t sub_1ABF22388()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF22390(uint64_t a1, _QWORD *a2)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v7;
  _OWORD v8[2];

  v3 = a2[12];
  v4 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v3);
  v5 = v2[2];
  v7 = v2[1];
  v8[0] = v5;
  *(_OWORD *)((char *)v8 + 10) = *(_OWORD *)((char *)v2 + 42);
  return (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v4 + 88))(&v7, v3, v4);
}

uint64_t sub_1ABF223FC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF22420(_QWORD *a1)
{
  uint64_t v1;

  return sub_1ABF20098(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1ABF22438()
{
  return objectdestroy_2Tm_1();
}

void sub_1ABF22440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1ABF202A4(a1, a2, (_OWORD *)(v2 + 16));
}

uint64_t sub_1ABF22458@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *v5;
  uint64_t *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t result;
  _OWORD v12[8];
  uint64_t v13;

  v6 = *(uint64_t **)(v2 + 16);
  v5 = *(_OWORD **)(v2 + 24);
  v7 = *(_OWORD *)(a1 + 112);
  v12[6] = *(_OWORD *)(a1 + 96);
  v12[7] = v7;
  v13 = *(_QWORD *)(a1 + 128);
  v8 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v8;
  v9 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v9;
  v10 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v10;
  result = sub_1ABF144CC((uint64_t)v12, *v6, v5);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1ABF224C8()
{
  return objectdestroy_2Tm_1();
}

uint64_t objectdestroy_71Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF22548(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v11;
  _OWORD v12[2];
  _OWORD v13[8];
  uint64_t v14;

  v3 = a2[12];
  v4 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v3);
  v5 = *(_OWORD *)(v2 + 128);
  v13[6] = *(_OWORD *)(v2 + 112);
  v13[7] = v5;
  v14 = *(_QWORD *)(v2 + 144);
  v6 = *(_OWORD *)(v2 + 64);
  v13[2] = *(_OWORD *)(v2 + 48);
  v13[3] = v6;
  v7 = *(_OWORD *)(v2 + 96);
  v13[4] = *(_OWORD *)(v2 + 80);
  v13[5] = v7;
  v8 = *(_OWORD *)(v2 + 32);
  v13[0] = *(_OWORD *)(v2 + 16);
  v13[1] = v8;
  v9 = *(_OWORD *)(v2 + 168);
  v11 = *(_OWORD *)(v2 + 152);
  v12[0] = v9;
  *(_OWORD *)((char *)v12 + 10) = *(_OWORD *)(v2 + 178);
  return (*(uint64_t (**)(_OWORD *, __int128 *, uint64_t, uint64_t))(v4 + 144))(v13, &v11, v3, v4);
}

uint64_t objectdestroy_74Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABF22664(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABF1F1A4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1ABF2267C()
{
  return sub_1ABF1F318();
}

uint64_t sub_1ABF22698(_QWORD *a1)
{
  uint64_t v1;

  return sub_1ABF1C6C0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1ABF226B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF226F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABF1C9E4(a1, a2, *(void **)(v2 + 16), v2 + 24, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t objectdestroy_65Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF22754(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v9;
  _OWORD v10[2];

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = a2[12];
  v6 = a2[13];
  __swift_project_boxed_opaque_existential_1(a2 + 9, v5);
  v7 = *(_OWORD *)(v2 + 48);
  v9 = *(_OWORD *)(v2 + 32);
  v10[0] = v7;
  *(_OWORD *)((char *)v10 + 10) = *(_OWORD *)(v2 + 58);
  return (*(uint64_t (**)(uint64_t, uint64_t, __int128 *, uint64_t, uint64_t))(v6 + 152))(v3, v4, &v9, v5, v6);
}

uint64_t sub_1ABF227D4()
{
  return objectdestroy_2Tm_1();
}

uint64_t sub_1ABF227DC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t objectdestroy_171Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABF22878()
{
  uint64_t v0;

  return sub_1ABF1CF58(*(_QWORD *)(v0 + 16), v0 + 24, (__int128 *)(v0 + 64));
}

uint64_t sub_1ABF228C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABF14A50(a1, a2);
}

uint64_t sub_1ABF228DC(uint64_t *a1, uint64_t a2)
{
  return sub_1ABF21D24(a1, a2);
}

uint64_t sub_1ABF228F0@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1ABF149A4(a1, a2);
}

uint64_t sub_1ABF22910()
{
  return sub_1ABF21D58();
}

BOOL sub_1ABF22924(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  id v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v6, a1, v3);
  v7 = sub_1ABF3220C();
  if (v7)
  {
    v8 = (void *)v7;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  }
  else
  {
    v8 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v9, v5, a1);
  }
  v10 = (void *)sub_1ABF30460();

  v11 = objc_msgSend(v10, sel_domain);
  v12 = sub_1ABF317A4();
  v14 = v13;

  if (v12 == sub_1ABF317A4() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {

      return 0;
    }
  }
  v19 = objc_msgSend(v10, sel_code);

  return v19 == (id)2;
}

uint64_t type metadata accessor for YahooQuoteDetailOperation(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED351778);
}

uint64_t sub_1ABF22AD0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF30B38();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

id sub_1ABF22B84(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1ABF22C0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, &qword_1EEC45258, (uint64_t (*)(void))sub_1ABD6B298, (uint64_t)&type metadata for YahooNewsResponse);
}

id sub_1ABF22BC8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1ABF22C0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, &qword_1ED3517B8, (uint64_t (*)(void))sub_1ABE51800, (uint64_t)&type metadata for YahooChartResponse);
}

id sub_1ABF22C0C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t (*a12)(void), uint64_t a13)
{
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  void *v28;
  id v29;
  id result;
  Class v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[48];

  v44 = a8;
  v45 = a4;
  v47 = a6;
  v48 = a7;
  v46 = a5;
  v42 = a2;
  v43 = a3;
  v41 = a1;
  v40 = sub_1ABF30B38();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1ABF30760();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1ABF305D4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, v23, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v37 - v25;
  v27 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  if (!v27)
  {
    __break(1u);
    goto LABEL_6;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, sel_stocksYQLBaseURL);

  if (!v29)
  {
LABEL_6:
    result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v26, 1, 1, v19);
    goto LABEL_7;
  }
  sub_1ABF30580();

  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v26, v22, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v26, 0, 1, v19);
  result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v26, 1, v19);
  if ((_DWORD)result != 1)
  {
    sub_1ABD07E04(v39 + 16, (uint64_t)v49);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a9, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v14, a10, v40);
    sub_1ABF2661C(0, a11, a12, a13);
    v32 = objc_allocWithZone(v31);
    v33 = v43;
    sub_1ABF2FF5C();
    v34 = v45;
    sub_1ABF2FF5C();
    v35 = v47;
    sub_1ABF2FF5C();
    v36 = sub_1ABF2FF5C();
    return sub_1ABF22F68(v41, (uint64_t)v26, v42, v33, v34, v46, v35, v48, v36, (uint64_t)v49, (uint64_t)v18, (uint64_t)v14);
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_1ABF22EE0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1ABF22C0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, &qword_1EEC45250, (uint64_t (*)(void))sub_1ABE614C0, (uint64_t)&type metadata for YahooSearchResponse);
}

id sub_1ABF22F24(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1ABF22C0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, &qword_1ED3517A8, (uint64_t (*)(void))sub_1ABF265D8, (uint64_t)&type metadata for YahooMultiQuoteResponse);
}

id sub_1ABF22F68(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  objc_class *ObjectType;
  uint64_t v35;
  uint64_t v37;
  objc_super v38;

  v13 = v12;
  ObjectType = (objc_class *)swift_getObjectType();
  v19 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *((_BYTE *)v13 + *(_QWORD *)(qword_1ED368460 + (*MEMORY[0x1E0DEEDD8] & *v13) + 16)) = a1;
  v20 = (char *)v13 + *(_QWORD *)(qword_1ED368460 + (*v19 & *v13) + 24);
  v35 = sub_1ABF305D4();
  v37 = *(_QWORD *)(v35 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v20, a2, v35);
  v21 = (_QWORD *)((char *)v13 + *(_QWORD *)(qword_1ED368460 + (*v19 & *v13) + 32));
  *v21 = a3;
  v21[1] = a4;
  *(_QWORD *)((char *)v13 + *(_QWORD *)(qword_1ED368460 + (*v19 & *v13) + 40)) = a5;
  v22 = (_QWORD *)((char *)v13 + *(_QWORD *)(qword_1ED368460 + (*v19 & *v13) + 48));
  *v22 = a6;
  v22[1] = a7;
  v22[2] = a8;
  v22[3] = a9;
  sub_1ABD07E04(a10, (uint64_t)v13 + *(_QWORD *)(qword_1ED368460 + (*v19 & *v13) + 56));
  v23 = (char *)v13 + *(_QWORD *)(qword_1ED368460 + (*v19 & *v13) + 64);
  v24 = sub_1ABF30760();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, a11, v24);
  v26 = (char *)v13 + *(_QWORD *)(qword_1ED368460 + (*v19 & *v13) + 72);
  v27 = sub_1ABF30B38();
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v26, a12, v27);
  v38.receiver = v13;
  v38.super_class = ObjectType;
  v29 = objc_msgSendSuper2(&v38, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a12, v27);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a11, v24);
  __swift_destroy_boxed_opaque_existential_1(a10);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(a2, v35);
  return v29;
}

uint64_t sub_1ABF231D4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1ABE8C064(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1ABF256E0(v5);
  *a1 = v2;
  return result;
}

void sub_1ABF2323C(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = v2;
  v13 = *(_QWORD *)&v2[qword_1ED351758];
  swift_bridgeObjectRetain_n();
  sub_1ABF231D4(&v13);
  swift_bridgeObjectRelease();
  sub_1ABD165AC();
  sub_1ABF262E8((unint64_t *)&qword_1ED34DFE8, MEMORY[0x1E0DEAF50]);
  v6 = sub_1ABF31B64();
  swift_release();
  v7 = v3;
  sub_1ABF2612C(v6);
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1ABF31114();
  sub_1ABF26264();
  sub_1ABF3109C();
  swift_bridgeObjectRelease();

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  sub_1ABF2FF68();
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  sub_1ABF2FF68();
  v12 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABF23418(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = MEMORY[0x1E0DEE9E0];
  v7 = MEMORY[0x1E0DEE9E0];
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v4)
  {
    sub_1ABF2FF5C();
    type metadata accessor for YahooQuoteDetailItem(0);
    v5 = 0;
    do
    {
      ++v5;
      sub_1ABF2FF5C();
      sub_1ABF3103C();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

void sub_1ABF2350C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  id v21;
  char *v22;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  __swift_project_boxed_opaque_existential_1(&a5[qword_1ED351760], *(_QWORD *)&a5[qword_1ED351760 + 24]);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF366E0;
  *(_QWORD *)(inited + 32) = 0x7372656B636974;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  sub_1ABD165AC();
  sub_1ABF262E8((unint64_t *)&qword_1ED34FCC0, MEMORY[0x1E0DEAF20]);
  sub_1ABF2FF68();
  *(_QWORD *)(inited + 48) = sub_1ABF316E4();
  *(_QWORD *)(inited + 56) = v11;
  strcpy((char *)(inited + 64), "crossProduct");
  *(_BYTE *)(inited + 77) = 0;
  *(_WORD *)(inited + 78) = -5120;
  *(_QWORD *)(inited + 80) = 0x657A696D6974706FLL;
  *(_QWORD *)(inited + 88) = 0xE900000000000064;
  v12 = sub_1ABD031C0(inited);
  v13 = *(_QWORD *)&a5[qword_1ED351768];
  v14 = *(_QWORD *)&a5[qword_1ED351768 + 8];
  v16 = *(_QWORD *)&a5[qword_1ED351768 + 16];
  v15 = *(_QWORD *)&a5[qword_1ED351768 + 24];
  v17 = (uint64_t)&a5[qword_1EEC45248];
  v18 = (uint64_t)&a5[qword_1ED351770];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v19 = sub_1ABF22C0C(4, 0xD000000000000014, 0x80000001ABF650E0, v12, v13, v14, v16, v15, v17, v18, &qword_1ED351798, (uint64_t (*)(void))sub_1ABF26594, (uint64_t)&type metadata for YahooQuoteDetailResponse);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a6;
  v20[3] = a5;
  v20[4] = sub_1ABD17050;
  v20[5] = v9;
  v20[6] = a3;
  v20[7] = a4;
  v21 = v19;
  sub_1ABF2FF5C();
  v22 = a5;
  sub_1ABF2FF68();
  sub_1ABF30BF8();

  objc_msgSend(v21, sel_start);
}

void sub_1ABF237B0(char **a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, void (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t *v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  BOOL v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  char v109;
  BOOL v110;
  BOOL v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  _QWORD *v125;
  int v126;
  char v127;
  unint64_t v128;
  uint64_t v129;
  _BOOL8 v130;
  uint64_t v131;
  char v132;
  unint64_t v133;
  char v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD v139[2];
  void (*v140)(_QWORD *);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  _QWORD *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  _QWORD v185[91];

  v139[1] = a5;
  v140 = (void (*)(_QWORD *))a4;
  v9 = sub_1ABF302A4();
  v152 = *(_QWORD *)(v9 - 8);
  v153 = v9;
  MEMORY[0x1E0C80A78](v9);
  v151 = (char *)v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v178 = (uint64_t)v139 - v15;
  v16 = type metadata accessor for YahooQuoteDetailItem(0);
  v147 = *(_QWORD *)(v16 - 8);
  v148 = (int *)v16;
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v139 - v19;
  v21 = *a1;
  v22 = (uint64_t)a1[1];
  v23 = (uint64_t)a1[3];
  if (((_BYTE)a1[4] & 1) != 0)
  {
    v24 = (uint64_t)a1[2];
    v25 = v21;
    a6(v21);
    sub_1ABD6B2E4(v21, v22, v24, v23, 1);
    return;
  }
  v26 = *(_QWORD *)(a2 + 16);
  v145 = v13;
  v146 = v18;
  if (v26)
  {
    v177 = (_QWORD *)v23;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v180 = v21;
    sub_1ABF2FF5C();
    v179 = v22;
    sub_1ABF2FF5C();
    v176 = a2;
    v27 = (uint64_t *)(a2 + 40);
    v28 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v30 = *(v27 - 1);
      v31 = *v27;
      v181 = v26;
      v182 = v30;
      v32 = sub_1ABF31810();
      v34 = v33;
      sub_1ABF2FF5C();
      v35 = v28;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v185[0] = v35;
      v37 = v32;
      v39 = sub_1ABD00F9C(v32, v34);
      v40 = v35[2];
      v41 = (v38 & 1) == 0;
      v42 = v40 + v41;
      if (__OFADD__(v40, v41))
        goto LABEL_98;
      v43 = v38;
      if (v35[3] >= v42)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v28 = (_QWORD *)v185[0];
          if ((v38 & 1) == 0)
            goto LABEL_14;
        }
        else
        {
          sub_1ABE6E690();
          v28 = (_QWORD *)v185[0];
          if ((v43 & 1) == 0)
            goto LABEL_14;
        }
      }
      else
      {
        sub_1ABD0EBF8(v42, isUniquelyReferenced_nonNull_native);
        v44 = sub_1ABD00F9C(v37, v34);
        if ((v43 & 1) != (v45 & 1))
          goto LABEL_101;
        v39 = v44;
        v28 = (_QWORD *)v185[0];
        if ((v43 & 1) == 0)
        {
LABEL_14:
          v28[(v39 >> 6) + 8] |= 1 << v39;
          v46 = (uint64_t *)(v28[6] + 16 * v39);
          *v46 = v37;
          v46[1] = v34;
          v47 = (_QWORD *)(v28[7] + 16 * v39);
          *v47 = v182;
          v47[1] = v31;
          v48 = v28[2];
          v49 = __OFADD__(v48, 1);
          v50 = v48 + 1;
          if (v49)
            goto LABEL_100;
          v28[2] = v50;
          sub_1ABF2FF5C();
          goto LABEL_6;
        }
      }
      v29 = (_QWORD *)(v28[7] + 16 * v39);
      swift_bridgeObjectRelease();
      *v29 = v182;
      v29[1] = v31;
LABEL_6:
      v27 += 2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = v181 - 1;
      if (v181 == 1)
      {
        swift_bridgeObjectRelease();
        v21 = v180;
        goto LABEL_20;
      }
    }
  }
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v28 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_20:
  v51 = sub_1ABF26474((uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v143 = *(_QWORD *)(v51 + 16);
  if (!v143)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v53 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_95;
  }
  v52 = 0;
  v53 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v141 = v51;
  v142 = v51 + 32;
  v150 = v28;
  while (1)
  {
    if (v52 >= *(_QWORD *)(v51 + 16))
      goto LABEL_99;
    v144 = v52;
    v54 = *(_QWORD *)(v142 + 8 * v52) ? *(_QWORD *)(v142 + 8 * v52) : MEMORY[0x1E0DEE9D8];
    v55 = *(_QWORD *)(v54 + 16);
    if (v55)
      break;
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
LABEL_23:
    v52 = v144 + 1;
    v51 = v141;
    if (v144 + 1 == v143)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_95:
      v140(v53);
      swift_bridgeObjectRelease();
      return;
    }
  }
  sub_1ABF2FF5C();
  memcpy(v185, (const void *)(v54 + 32), 0x2D0uLL);
  v56 = (char *)(v55 - 1);
  v57 = 752;
  v58 = v150;
  v149 = v54;
  while (1)
  {
    v59 = sub_1ABF31810();
    v61 = v60;
    if (!v58[2])
    {
      swift_bridgeObjectRelease();
      if (!v56)
        goto LABEL_22;
      goto LABEL_91;
    }
    v62 = v59;
    sub_1ABE84D58(v185);
    v63 = sub_1ABD00F9C(v62, v61);
    if ((v64 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1ABE850DC(v185);
      if (!v56)
        goto LABEL_22;
      goto LABEL_91;
    }
    v179 = v57;
    v180 = v56;
    v65 = v185[4];
    v66 = v185[5];
    v67 = (uint64_t *)(v58[7] + 16 * v63);
    v68 = v67[1];
    v182 = *v67;
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    if (v66)
      break;
    swift_bridgeObjectRelease();
    sub_1ABE850DC(v185);
LABEL_90:
    v57 = v179;
    v56 = v180;
    if (!v180)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
LABEL_91:
    memcpy(v185, (const void *)(v54 + v57), 0x2D0uLL);
    v57 += 720;
    --v56;
  }
  v181 = v68;
  v69 = v185[18];
  v176 = v185[18];
  v177 = v53;
  v174 = v185[3];
  v175 = v185[2];
  if (v185[18])
  {
    v70 = v185[16];
    v71 = v185[17];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v173 = v70;
    sub_1ABE84D28(v70, v71, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v173 = 0;
  }
  v72 = v185[21];
  if (!v185[23])
    v72 = 0;
  v171 = v72;
  v172 = v185[23];
  v73 = v185[26];
  if (!v185[28])
    v73 = 0;
  v169 = v185[28];
  v170 = v73;
  v165 = v185[33];
  if (v185[33])
    v74 = v185[31];
  else
    v74 = 0;
  v75 = v185[36];
  v162 = v185[38];
  if (!v185[38])
    v75 = 0;
  v167 = v75;
  v168 = v74;
  v76 = v185[41];
  v157 = v185[43];
  if (!v185[43])
    v76 = 0;
  v166 = v76;
  v156 = v185[53];
  if (v185[53])
    v77 = v185[51];
  else
    v77 = 0;
  v78 = v185[56];
  v155 = v185[58];
  if (!v185[58])
    v78 = 0;
  v163 = v78;
  v164 = v77;
  v154 = v185[63];
  if (v185[63])
    v79 = v185[61];
  else
    v79 = 0;
  v80 = v185[68];
  v81 = v185[66];
  if (!v185[68])
    v81 = 0;
  v160 = v81;
  v161 = v79;
  v82 = v185[73];
  if (v185[73])
    v83 = v185[71];
  else
    v83 = 0;
  v158 = v185[76];
  v159 = v83;
  v84 = v185[77];
  if (v185[79])
  {
    v85 = v65;
    v183 = (_QWORD *)v185[78];
    v184 = v185[79];
    v86 = v185[77];
    sub_1ABF2FF5C();
    v87 = v151;
    sub_1ABF30268();
    sub_1ABD0E288();
    sub_1ABF31DB0();
    v89 = v88;
    (*(void (**)(char *, uint64_t))(v152 + 8))(v87, v153);
    if (v89)
    {
      sub_1ABF305BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      v94 = sub_1ABF305D4();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v178, 1, 1, v94);
    }
    v65 = v85;
    v91 = v185[85];
    if (v185[85])
      goto LABEL_72;
LABEL_69:
    v92 = sub_1ABF305D4();
    v93 = (uint64_t)v145;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v145, 1, 1, v92);
    goto LABEL_76;
  }
  v90 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v178, 1, 1, v90);
  v86 = v84;
  sub_1ABF2FF5C();
  v91 = v185[85];
  if (!v185[85])
    goto LABEL_69;
LABEL_72:
  v95 = v65;
  v183 = (_QWORD *)v185[84];
  v184 = v91;
  v96 = v151;
  sub_1ABF30268();
  sub_1ABD0E288();
  sub_1ABF31DB0();
  v98 = v97;
  (*(void (**)(char *, uint64_t))(v152 + 8))(v96, v153);
  if (v98)
  {
    v99 = (uint64_t)v145;
    sub_1ABF305BC();
    swift_bridgeObjectRelease();
    v93 = v99;
  }
  else
  {
    v100 = sub_1ABF305D4();
    v93 = (uint64_t)v145;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v145, 1, 1, v100);
  }
  v65 = v95;
LABEL_76:
  v101 = v82 == 0;
  v102 = v174;
  *(_QWORD *)v20 = v175;
  *((_QWORD *)v20 + 1) = v102;
  v103 = v155;
  v104 = v154 == 0;
  *((_QWORD *)v20 + 2) = v65;
  *((_QWORD *)v20 + 3) = v66;
  v105 = v103 == 0;
  v106 = v157;
  v107 = v156 == 0;
  v108 = v172;
  *((_QWORD *)v20 + 4) = v173;
  v109 = v107;
  v110 = v162 == 0;
  v111 = v165 == 0;
  v112 = v169 == 0;
  v20[40] = v176 == 0;
  *((_QWORD *)v20 + 6) = v171;
  v20[56] = v108 == 0;
  *((_QWORD *)v20 + 8) = v170;
  v20[72] = v112;
  *((_QWORD *)v20 + 10) = v168;
  v20[88] = v111;
  *((_QWORD *)v20 + 12) = v167;
  v20[104] = v110;
  *((_QWORD *)v20 + 14) = v166;
  v20[120] = v106 == 0;
  *((_QWORD *)v20 + 16) = v164;
  v20[136] = v109;
  *((_QWORD *)v20 + 18) = v163;
  v20[152] = v105;
  v176 = v185[88];
  *((_QWORD *)v20 + 20) = v161;
  v113 = v185[89];
  v20[168] = v104;
  v114 = v185[86];
  *((_QWORD *)v20 + 22) = v160;
  v115 = v185[87];
  v20[184] = v80 == 0;
  v174 = v185[82];
  v175 = v114;
  *((_QWORD *)v20 + 24) = v159;
  v116 = v185[83];
  v20[200] = v101;
  v117 = v185[80];
  *((_QWORD *)v20 + 26) = v158;
  *((_QWORD *)v20 + 27) = v86;
  v118 = v148;
  v119 = v185[81];
  sub_1ABDD7BB8(v178, (uint64_t)&v20[v148[18]]);
  sub_1ABDD7BB8(v93, (uint64_t)&v20[v118[19]]);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABE850DC(v185);
  v120 = &v20[v118[20]];
  *(_QWORD *)v120 = v117;
  *((_QWORD *)v120 + 1) = v119;
  v121 = &v20[v118[21]];
  *(_QWORD *)v121 = v174;
  *((_QWORD *)v121 + 1) = v116;
  v122 = &v20[v118[22]];
  *(_QWORD *)v122 = v175;
  *((_QWORD *)v122 + 1) = v115;
  v123 = &v20[v118[23]];
  *(_QWORD *)v123 = v176;
  *((_QWORD *)v123 + 1) = v113;
  v124 = v146;
  sub_1ABDFEFE0((uint64_t)v20, v146);
  v125 = v177;
  v126 = swift_isUniquelyReferenced_nonNull_native();
  v183 = v125;
  v128 = sub_1ABD00F9C(v182, v181);
  v129 = v125[2];
  v130 = (v127 & 1) == 0;
  v131 = v129 + v130;
  if (!__OFADD__(v129, v130))
  {
    v132 = v127;
    v58 = v150;
    if (v125[3] >= v131)
    {
      v54 = v149;
      if ((v126 & 1) == 0)
        sub_1ABE70B98();
    }
    else
    {
      sub_1ABE6E10C(v131, v126);
      v133 = sub_1ABD00F9C(v182, v181);
      v54 = v149;
      if ((v132 & 1) != (v134 & 1))
        goto LABEL_101;
      v128 = v133;
    }
    v135 = v181;
    v53 = v183;
    if ((v132 & 1) != 0)
    {
      sub_1ABF26550(v124, v183[7] + *(_QWORD *)(v147 + 72) * v128);
    }
    else
    {
      v183[(v128 >> 6) + 8] |= 1 << v128;
      v136 = (_QWORD *)(v53[6] + 16 * v128);
      *v136 = v182;
      v136[1] = v135;
      sub_1ABDFEFE0(v124, v53[7] + *(_QWORD *)(v147 + 72) * v128);
      v137 = v53[2];
      v49 = __OFADD__(v137, 1);
      v138 = v137 + 1;
      if (v49)
        goto LABEL_97;
      v53[2] = v138;
      sub_1ABF2FF5C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_90;
  }
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  sub_1ABF3229C();
  __break(1u);
}

void sub_1ABF2431C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABF24348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED351760);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_1EEC45248;
  v2 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_1ED351770;
  v4 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t sub_1ABF243EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED351760);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + qword_1EEC45248;
  v3 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = a1 + qword_1ED351770;
  v5 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1ABF24494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABF2323C((uint64_t)sub_1ABD6B260, v4);
  return swift_release();
}

uint64_t sub_1ABF244F4()
{
  return type metadata accessor for YahooQuoteDetailOperation(0);
}

_QWORD *sub_1ABF244FC(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  void *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v9 = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    *(_QWORD *)(a1 + 128) = a2[16];
    v10 = a2[18];
    *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
    *(_QWORD *)(a1 + 144) = v10;
    v11 = a2[20];
    *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
    *(_QWORD *)(a1 + 160) = v11;
    v12 = a2[22];
    *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
    *(_QWORD *)(a1 + 176) = v12;
    v13 = a2[24];
    *(_BYTE *)(a1 + 200) = *((_BYTE *)a2 + 200);
    *(_QWORD *)(a1 + 192) = v13;
    v14 = a2[27];
    v15 = a3[18];
    __dst = (void *)(a1 + v15);
    v16 = (char *)a2 + v15;
    *(_QWORD *)(a1 + 208) = a2[26];
    *(_QWORD *)(a1 + 216) = v14;
    v17 = sub_1ABF305D4();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    if (v19(v16, 1, v17))
    {
      sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
    }
    v22 = a3[19];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    if (v19((char *)a2 + v22, 1, v17))
    {
      sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v23, v24, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v23, 0, 1, v17);
    }
    v26 = a3[20];
    v27 = a3[21];
    v28 = (_QWORD *)((char *)v4 + v26);
    v29 = (uint64_t *)((char *)a2 + v26);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = (_QWORD *)((char *)v4 + v27);
    v32 = (uint64_t *)((char *)a2 + v27);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = a3[22];
    v35 = a3[23];
    v36 = (_QWORD *)((char *)v4 + v34);
    v37 = (uint64_t *)((char *)a2 + v34);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = (_QWORD *)((char *)v4 + v35);
    v40 = (uint64_t *)((char *)a2 + v35);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  return v4;
}

uint64_t sub_1ABF247E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 72);
  v5 = sub_1ABF305D4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 76);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABF248D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  void *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v9 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v9;
  v10 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v10;
  v11 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v11;
  v12 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v12;
  v13 = *(_QWORD *)(a2 + 216);
  v14 = a3[18];
  __dst = (void *)(a1 + v14);
  v15 = (const void *)(a2 + v14);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v13;
  v16 = sub_1ABF305D4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v18(v15, 1, v16))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(__dst, v15, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
  }
  v20 = a3[19];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  if (v18((const void *)(a2 + v20), 1, v16))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v21, v22, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
  }
  v24 = a3[20];
  v25 = a3[21];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = (_QWORD *)(a1 + v25);
  v30 = (_QWORD *)(a2 + v25);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = a3[22];
  v33 = a3[23];
  v34 = (_QWORD *)(a1 + v32);
  v35 = (_QWORD *)(a2 + v32);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = (_QWORD *)(a1 + v33);
  v38 = (_QWORD *)(a2 + v33);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABF24B88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v11;
  v12 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v13;
  v14 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v14;
  v15 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v15;
  v16 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v16;
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v17 = a3[18];
  v18 = (void *)(a1 + v17);
  v19 = (void *)(a2 + v17);
  v20 = sub_1ABF305D4();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  v26 = a3[19];
  v27 = (void *)(a1 + v26);
  v28 = (void *)(a2 + v26);
  v29 = v22((void *)(a1 + v26), 1, v20);
  v30 = v22(v28, 1, v20);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v27, v28, v20);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v27, v20);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v27, v28, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
LABEL_13:
  v32 = a3[20];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v35 = a3[21];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v38 = a3[22];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v41 = a3[23];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABF24F34(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v8 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v8;
  v9 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v9;
  v10 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v10;
  v11 = a3[18];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  v14 = sub_1ABF305D4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[19];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  if (v16((const void *)(a2 + v18), 1, v14))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v19, v20, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  v22 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  v23 = a3[23];
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  return a1;
}

uint64_t sub_1ABF25178(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = v9;
  v10 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v10;
  v11 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v11;
  swift_bridgeObjectRelease();
  v12 = a3[18];
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = sub_1ABF305D4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  v21 = a3[19];
  v22 = (void *)(a1 + v21);
  v23 = (void *)(a2 + v21);
  v24 = v17((void *)(a1 + v21), 1, v15);
  v25 = v17(v23, 1, v15);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v22, v23, v15);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v22, v15);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v22, v23, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
LABEL_13:
  v27 = a3[20];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  v32 = a3[21];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)(a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  v37 = a3[22];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  v42 = a3[23];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (uint64_t *)(a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABF254B4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABF254C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 72), a2, v8);
  }
}

uint64_t sub_1ABF25554()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABF25560(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 72), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for YahooQuoteDetailItem(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED351788);
}

void sub_1ABF25600()
{
  unint64_t v0;

  sub_1ABCF5A54(319, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1ABF256BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABF256E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1ABF321E8();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1ABF25DC8(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1ABF25E94((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1ABE8C050((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1ABF31A74();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1ABF3223C();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1ABF3223C()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1ABE8BC6C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1ABE8BC6C((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1ABF25E94((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1ABF3223C() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

uint64_t sub_1ABF25DC8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1ABF3223C(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABF25E94(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1ABF3223C() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1ABF3223C() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1ABE8BD78((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABF2612C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    v4 = a1 + 32;
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED3514A0, (uint64_t (*)(uint64_t))sub_1ABF26264, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    do
    {
      v4 += 8;
      MEMORY[0x1E0C80A78](v5);
      swift_allocObject();
      sub_1ABF2FF5C();
      sub_1ABF31228();
      swift_bridgeObjectRelease();
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      v5 = sub_1ABF31F00();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

void sub_1ABF26264()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3514A8)
  {
    type metadata accessor for YahooQuoteDetailItem(255);
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3514A8);
  }
}

uint64_t sub_1ABF262C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABF23418(a1, *(void (**)(uint64_t, _QWORD))(v1 + 16));
}

void sub_1ABF262E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABF2350C(a1, a2, a3, a4, *(char **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABF262E8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1ABD165AC();
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABF26328()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABF26364(char **a1)
{
  uint64_t v1;

  sub_1ABF237B0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD *))(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(char *))(v1 + 48));
}

uint64_t sub_1ABF26374(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1ABF2FF5C();
    sub_1ABDB5234(0, v1, 0);
    v2 = v12;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 2);
      v6 = *(v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      if (v9 >= v8 >> 1)
        sub_1ABDB5234(v8 > 1, v9 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = (_QWORD *)(v12 + 24 * v9);
      v10[4] = v5;
      v10[5] = v6;
      v10[6] = v7;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1ABF26474(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1ABF2FF5C();
    sub_1ABDB52A8(0, v1, 0);
    v4 = 0;
    v2 = v9;
    do
    {
      v5 = *(_QWORD *)(a1 + 8 * v4 + 32);
      v6 = *(_QWORD *)(v9 + 16);
      v7 = *(_QWORD *)(v9 + 24);
      sub_1ABF2FF5C();
      if (v6 >= v7 >> 1)
        sub_1ABDB52A8(v7 > 1, v6 + 1, 1);
      ++v4;
      *(_QWORD *)(v9 + 16) = v6 + 1;
      *(_QWORD *)(v9 + 8 * v6 + 32) = v5;
    }
    while (v1 != v4);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1ABF26550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YahooQuoteDetailItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ABF26594()
{
  unint64_t result;

  result = qword_1ED3517A0;
  if (!qword_1ED3517A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF477EC, &type metadata for YahooQuoteDetailResponse);
    atomic_store(result, (unint64_t *)&qword_1ED3517A0);
  }
  return result;
}

unint64_t sub_1ABF265D8()
{
  unint64_t result;

  result = qword_1ED3517B0;
  if (!qword_1ED3517B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4B23C, &type metadata for YahooMultiQuoteResponse);
    atomic_store(result, (unint64_t *)&qword_1ED3517B0);
  }
  return result;
}

void sub_1ABF2661C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3();
    v9 = type metadata accessor for YahooBaseOperation(a1, a4, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1ABF26680(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = result;
    v7 = *(void (**)(unint64_t, uint64_t, uint64_t))(a3 + 16);
    v8 = *(_QWORD *)(type metadata accessor for NetworkEvent() - 8);
    v9 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    sub_1ABF2FF5C();
    do
    {
      v7(v9, a2, a3);
      v9 += v10;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABF26728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1ABF26730()
{
  return sub_1ABF31504();
}

uint64_t sub_1ABF26754()
{
  sub_1ABCF5A54(0, &qword_1ED346DE8, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABF267B0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1ABF267DC()
{
  unint64_t result;

  result = qword_1EEC45260;
  if (!qword_1EEC45260)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50B4C, &type metadata for StubChartService.ChartServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEC45260);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StubChartService.ChartServiceError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABF26860 + 4 * byte_1ABF50A80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABF26880 + 4 * byte_1ABF50A85[v4]))();
}

_BYTE *sub_1ABF26860(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABF26880(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABF26888(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABF26890(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABF26898(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABF268A0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StubChartService.ChartServiceError()
{
  return &type metadata for StubChartService.ChartServiceError;
}

unint64_t sub_1ABF268C0()
{
  unint64_t result;

  result = qword_1EEC45268;
  if (!qword_1EEC45268)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50B24, &type metadata for StubChartService.ChartServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEC45268);
  }
  return result;
}

uint64_t sub_1ABF26904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = v0;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34EA48, type metadata accessor for RawAttributionSourceLogo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - v4;
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v2);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - v8;
  v10 = type metadata accessor for RawAttributionSource(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - v14;
  sub_1ABF305BC();
  v16 = type metadata accessor for RawAttributionSourceLogo(0);
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v17(v5, 1, 1, v16);
  v18 = (uint64_t)v13 + *(int *)(v10 + 20);
  v19 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (uint64_t)v13 + *(int *)(v10 + 24);
  v17((char *)v20, 1, 1, v16);
  *v13 = 0x654EAF80E2BFA3EFLL;
  v13[1] = 0xAA00000000007377;
  sub_1ABDE560C((uint64_t)v9, v18, (unint64_t *)&qword_1ED350380, v6);
  sub_1ABDE560C((uint64_t)v5, v20, &qword_1ED34EA48, type metadata accessor for RawAttributionSourceLogo);
  sub_1ABD76140((uint64_t)v13, (uint64_t)v15);
  sub_1ABCF5A54(0, &qword_1ED34EA58, type metadata accessor for RawAttributionSource, MEMORY[0x1E0DB39E0]);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1ABF30CD0();
  return v1;
}

uint64_t sub_1ABF26B58()
{
  void *v0;
  uint64_t v1;

  sub_1ABF30BA4();
  sub_1ABCF5A54(0, &qword_1ED346E08, (uint64_t (*)(uint64_t))sub_1ABDD3954, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF31228();
  v0 = (void *)sub_1ABF31114();
  sub_1ABDD38CC();
  v1 = sub_1ABF31174();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1ABF26C18()
{
  sub_1ABCF5A54(0, &qword_1ED346E08, (uint64_t (*)(uint64_t))sub_1ABDD3954, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABF26C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD v14[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = sub_1ABD17050;
  v11[3] = v10;
  v11[4] = a3;
  v11[5] = a4;
  v14[4] = sub_1ABF2716C;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1ABD29B8C;
  v14[3] = &block_descriptor_43;
  v12 = _Block_copy(v14);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(a5, sel_setFetchCompletionBlock_, v12);
  _Block_release(v12);
  return sub_1ABF30BC8();
}

void sub_1ABF26D90(void *a1, void (*a2)(), uint64_t a3, void (*a4)(void))
{
  id v7;
  void *v8;

  if (objc_msgSend(a1, sel_fetchedObject)
    && (sub_1ABDD3954(0), (swift_dynamicCast() & 1) != 0))
  {
    a2();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = objc_msgSend(a1, sel_error);
    if (v7)
    {
      v8 = v7;
    }
    else
    {
      sub_1ABF270D8();
      v8 = (void *)swift_allocError();
    }
    a4();

  }
}

uint64_t sub_1ABF26E90()
{
  void *v0;
  uint64_t v1;

  sub_1ABCF5A54(0, &qword_1ED346E08, (uint64_t (*)(uint64_t))sub_1ABDD3954, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF31228();
  v0 = (void *)sub_1ABF31114();
  sub_1ABDD38CC();
  v1 = sub_1ABF31174();
  swift_release();

  return v1;
}

uint64_t sub_1ABF26F3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  id v4;

  v1 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1ABF270D8();
    swift_allocError();
    return swift_willThrow();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  if (!v2)
    goto LABEL_8;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1AF4380CC](0, v1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v1 + 32);
LABEL_6:
    swift_bridgeObjectRelease();
    sub_1ABCF5A54(0, (unint64_t *)&unk_1ED346E10, (uint64_t (*)(uint64_t))sub_1ABDD38CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311E0();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABF27050()
{
  uint64_t v0;

  sub_1ABF30BA4();
  sub_1ABCF5A54(0, &qword_1ED346E08, (uint64_t (*)(uint64_t))sub_1ABDD3954, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  v0 = sub_1ABF31228();
  swift_release();
  return v0;
}

unint64_t sub_1ABF270D8()
{
  unint64_t result;

  result = qword_1EEC45270;
  if (!qword_1EEC45270)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50C48, &_s6ErrorsON);
    atomic_store(result, (unint64_t *)&qword_1EEC45270);
  }
  return result;
}

uint64_t sub_1ABF2711C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABF27140()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABF2716C(void *a1)
{
  uint64_t v1;

  sub_1ABF26D90(a1, *(void (**)())(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

uint64_t _s6ErrorsOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABF271B8 + 4 * byte_1ABF50BCC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABF271D8 + 4 * byte_1ABF50BD1[v4]))();
}

_BYTE *sub_1ABF271B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABF271D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABF271E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABF271E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABF271F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABF271F8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s6ErrorsOMa()
{
  return &_s6ErrorsON;
}

unint64_t sub_1ABF27218()
{
  unint64_t result;

  result = qword_1EEC45278;
  if (!qword_1EEC45278)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50C20, &_s6ErrorsON);
    atomic_store(result, (unint64_t *)&qword_1EEC45278);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSSearchResponse()
{
  return &type metadata for SDSSearchResponse;
}

uint64_t sub_1ABF27270()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABF272C8()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABF272E8()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABF2733C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ABF2738C(_QWORD *a1@<X8>)
{
  *a1 = 0x7449686372616573;
  a1[1] = 0xEB00000000736D65;
}

uint64_t sub_1ABF273B0()
{
  return 0x7449686372616573;
}

uint64_t sub_1ABF273D0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ABF27424()
{
  sub_1ABF27FBC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABF2744C()
{
  sub_1ABF27FBC();
  return sub_1ABF32398();
}

uint64_t sub_1ABF27474(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1ABCF4DA8(0, &qword_1EEC452A8, (uint64_t (*)(void))sub_1ABF27FBC, (uint64_t)&type metadata for SDSSearchResponse.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF27FBC();
  sub_1ABF32368();
  v10[1] = a2;
  sub_1ABF28000();
  sub_1ABF28098(&qword_1EEC452B0, (uint64_t (*)(void))sub_1ABF280FC, MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1ABF275A8(char *a1)
{
  sub_1ABDE2A68(*a1);
}

void sub_1ABF275B4()
{
  char *v0;

  sub_1ABF0FBE4(*v0);
}

void sub_1ABF275BC()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABF275F8()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABF27688(uint64_t a1)
{
  char *v1;

  sub_1ABF10544(a1, *v1);
}

uint64_t sub_1ABF27690@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABF28538();
  *a1 = result;
  return result;
}

uint64_t sub_1ABF276BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABF276EC + 4 * byte_1ABF50C96[*v0]))();
}

void sub_1ABF276EC(_QWORD *a1@<X8>)
{
  *a1 = 1701667182;
  a1[1] = 0xE400000000000000;
}

void sub_1ABF27700(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6F626D7973;
  a1[1] = 0xE600000000000000;
}

void sub_1ABF27718(_QWORD *a1@<X8>)
{
  *a1 = 0x6D614E74726F6873;
  a1[1] = 0xE900000000000065;
}

void sub_1ABF27738(_QWORD *a1@<X8>)
{
  *a1 = 0x4E746361706D6F63;
  a1[1] = 0xEB00000000656D61;
}

void sub_1ABF2775C(_QWORD *a1@<X8>)
{
  *a1 = 0x79546C6F626D7973;
  a1[1] = 0xEA00000000006570;
}

uint64_t sub_1ABF2777C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABF277AC + 4 * byte_1ABF50C9C[*v0]))(0x65676E6168637865, 0xE800000000000000);
}

uint64_t sub_1ABF277AC()
{
  return 1701667182;
}

uint64_t sub_1ABF277BC()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1ABF277D0()
{
  return 0x6D614E74726F6873;
}

uint64_t sub_1ABF277EC()
{
  return 0x4E746361706D6F63;
}

uint64_t sub_1ABF2780C()
{
  return 0x79546C6F626D7973;
}

uint64_t sub_1ABF27828@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABF28538();
  *a1 = result;
  return result;
}

uint64_t sub_1ABF2784C()
{
  sub_1ABF288B0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABF27874()
{
  sub_1ABF288B0();
  return sub_1ABF32398();
}

uint64_t sub_1ABF2789C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1EEC452F0, (uint64_t (*)(void))sub_1ABF288B0, (uint64_t)&type metadata for SDSSearchResponse.SDSSearchResponseItem.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF288B0();
  sub_1ABF32368();
  v18 = 0;
  sub_1ABF32194();
  if (!v2)
  {
    v17 = 1;
    sub_1ABF32194();
    v16 = 2;
    sub_1ABF32194();
    v15 = 3;
    sub_1ABF32140();
    v14 = 4;
    sub_1ABF32140();
    v13 = *(_BYTE *)(v3 + 80);
    v12 = 5;
    sub_1ABF28938();
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ABF27A84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABF28C34();
  *a1 = result;
  return result;
}

uint64_t sub_1ABF27AB0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABF27AE0 + 4 * byte_1ABF50CA2[*v0]))();
}

void sub_1ABF27AE0(_QWORD *a1@<X8>)
{
  *a1 = 0x59434E4552525543;
  a1[1] = 0xE800000000000000;
}

void sub_1ABF27AFC(_QWORD *a1@<X8>)
{
  *a1 = 0x435F4F5450595243;
  a1[1] = 0xEF59434E45525255;
}

void sub_1ABF27B24(_QWORD *a1@<X8>)
{
  *a1 = 0x595449555145;
  a1[1] = 0xE600000000000000;
}

void sub_1ABF27B3C(_QWORD *a1@<X8>)
{
  *a1 = 4609093;
  a1[1] = 0xE300000000000000;
}

void sub_1ABF27B50(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x53455255545546;
  a1[1] = v1;
}

void sub_1ABF27B68(_QWORD *a1@<X8>)
{
  *a1 = 0x5845444E49;
  a1[1] = 0xE500000000000000;
}

void sub_1ABF27B80(_QWORD *a1@<X8>)
{
  *a1 = 0x465F4C415554554DLL;
  a1[1] = 0xEB00000000444E55;
}

unint64_t sub_1ABF27BA4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_1ABF28C7C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABF27BCC()
{
  sub_1ABF28D4C();
  return sub_1ABF31990();
}

double sub_1ABF27C18@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  char v8;

  sub_1ABF28580(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_BYTE *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1ABF27C70(_QWORD *a1)
{
  return sub_1ABF2789C(a1);
}

uint64_t sub_1ABF27C84(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  char v8;
  _OWORD v9[5];
  char v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_BYTE *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_BYTE *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1ABF27D38((uint64_t)v7, (uint64_t)v9) & 1;
}

_QWORD *sub_1ABF27CEC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABF27E4C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABF27D14(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABF27474(a1, *v1);
}

uint64_t sub_1ABF27D2C(uint64_t *a1, _QWORD **a2)
{
  return sub_1ABDE0078(*a1, *a2);
}

uint64_t sub_1ABF27D38(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (!v4 && (sub_1ABF3223C() & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (!v5 && (sub_1ABF3223C() & 1) == 0
    || (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
    && (sub_1ABF3223C() & 1) == 0)
  {
    return 0;
  }
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a2 + 72);
  if (v6)
  {
    if (!v7 || (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64) || v6 != v7) && (sub_1ABF3223C() & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a2 + 56);
  if (v8)
  {
    if (v9 && (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && v8 == v9 || (sub_1ABF3223C() & 1) != 0))
      return sub_1ABDE2A64(*(unsigned __int8 *)(a1 + 80), *(unsigned __int8 *)(a2 + 80));
  }
  else if (!v9)
  {
    return sub_1ABDE2A64(*(unsigned __int8 *)(a1 + 80), *(unsigned __int8 *)(a2 + 80));
  }
  return 0;
}

_QWORD *sub_1ABF27E4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABCF4DA8(0, &qword_1EEC45280, (uint64_t (*)(void))sub_1ABF27FBC, (uint64_t)&type metadata for SDSSearchResponse.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF27FBC();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABF28000();
    sub_1ABF28098(&qword_1EEC45298, (uint64_t (*)(void))sub_1ABF28054, MEMORY[0x1E0DEAF40]);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABF27FBC()
{
  unint64_t result;

  result = qword_1EEC45288;
  if (!qword_1EEC45288)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50EF0, &type metadata for SDSSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC45288);
  }
  return result;
}

void sub_1ABF28000()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC45290)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC45290);
  }
}

unint64_t sub_1ABF28054()
{
  unint64_t result;

  result = qword_1EEC452A0;
  if (!qword_1EEC452A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50EC8, &type metadata for SDSSearchResponse.SDSSearchResponseItem);
    atomic_store(result, (unint64_t *)&qword_1EEC452A0);
  }
  return result;
}

uint64_t sub_1ABF28098(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABF28000();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABF280FC()
{
  unint64_t result;

  result = qword_1EEC452B8;
  if (!qword_1EEC452B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50EA0, &type metadata for SDSSearchResponse.SDSSearchResponseItem);
    atomic_store(result, (unint64_t *)&qword_1EEC452B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDSSearchResponse.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABF28180 + 4 * byte_1ABF50CAA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABF281A0 + 4 * byte_1ABF50CAF[v4]))();
}

_BYTE *sub_1ABF28180(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABF281A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABF281A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABF281B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABF281B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABF281C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDSSearchResponse.CodingKeys()
{
  return &type metadata for SDSSearchResponse.CodingKeys;
}

uint64_t initializeWithCopy for SDSSearchResponse.SDSSearchResponseItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for SDSSearchResponse.SDSSearchResponseItem(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for SDSSearchResponse.SDSSearchResponseItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSSearchResponse.SDSSearchResponseItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSSearchResponse.SDSSearchResponseItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSSearchResponse.SDSSearchResponseItem()
{
  return &type metadata for SDSSearchResponse.SDSSearchResponseItem;
}

unint64_t sub_1ABF28464()
{
  unint64_t result;

  result = qword_1EEC452C0;
  if (!qword_1EEC452C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50E78, &type metadata for SDSSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC452C0);
  }
  return result;
}

unint64_t sub_1ABF284AC()
{
  unint64_t result;

  result = qword_1EEC452C8;
  if (!qword_1EEC452C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50DB0, &type metadata for SDSSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC452C8);
  }
  return result;
}

unint64_t sub_1ABF284F4()
{
  unint64_t result;

  result = qword_1EEC452D0;
  if (!qword_1EEC452D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50DD8, &type metadata for SDSSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC452D0);
  }
  return result;
}

uint64_t sub_1ABF28538()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1ABF28580@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;

  v35 = a2;
  sub_1ABCF4DA8(0, &qword_1EEC452D8, (uint64_t (*)(void))sub_1ABF288B0, (uint64_t)&type metadata for SDSSearchResponse.SDSSearchResponseItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF288B0();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = (uint64_t)a1;
  v10 = v6;
  v11 = v35;
  v42 = 0;
  v12 = v5;
  v13 = sub_1ABF320E0();
  v15 = v14;
  v41 = 1;
  v33 = sub_1ABF320E0();
  v34 = v16;
  v40 = 2;
  v31 = sub_1ABF320E0();
  v32 = v17;
  v39 = 3;
  v29 = sub_1ABF3208C();
  v30 = v18;
  v38 = 4;
  v27 = sub_1ABF3208C();
  v28 = v19;
  v36 = 5;
  sub_1ABF288F4();
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v12);
  v20 = v37;
  result = __swift_destroy_boxed_opaque_existential_1(v9);
  *(_QWORD *)v11 = v13;
  *(_QWORD *)(v11 + 8) = v15;
  v22 = v34;
  *(_QWORD *)(v11 + 16) = v33;
  *(_QWORD *)(v11 + 24) = v22;
  v23 = v32;
  *(_QWORD *)(v11 + 32) = v31;
  *(_QWORD *)(v11 + 40) = v23;
  v24 = v28;
  *(_QWORD *)(v11 + 48) = v27;
  *(_QWORD *)(v11 + 56) = v24;
  v25 = v30;
  *(_QWORD *)(v11 + 64) = v29;
  *(_QWORD *)(v11 + 72) = v25;
  *(_BYTE *)(v11 + 80) = v20;
  return result;
}

unint64_t sub_1ABF288B0()
{
  unint64_t result;

  result = qword_1EEC452E0;
  if (!qword_1EEC452E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF5113C, &type metadata for SDSSearchResponse.SDSSearchResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC452E0);
  }
  return result;
}

unint64_t sub_1ABF288F4()
{
  unint64_t result;

  result = qword_1EEC452E8;
  if (!qword_1EEC452E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF51114, &type metadata for SDSSearchResponse.SDSSearchResponseItem.SDSSearchResponseItemType);
    atomic_store(result, (unint64_t *)&qword_1EEC452E8);
  }
  return result;
}

unint64_t sub_1ABF28938()
{
  unint64_t result;

  result = qword_1EEC452F8;
  if (!qword_1EEC452F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF510EC, &type metadata for SDSSearchResponse.SDSSearchResponseItem.SDSSearchResponseItemType);
    atomic_store(result, (unint64_t *)&qword_1EEC452F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDSSearchResponse.SDSSearchResponseItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1ABF289C8 + 4 * byte_1ABF50CB9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1ABF289FC + 4 * byte_1ABF50CB4[v4]))();
}

uint64_t sub_1ABF289FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF28A04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABF28A0CLL);
  return result;
}

uint64_t sub_1ABF28A18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABF28A20);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1ABF28A24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF28A2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSSearchResponse.SDSSearchResponseItem.CodingKeys()
{
  return &type metadata for SDSSearchResponse.SDSSearchResponseItem.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SDSSearchResponse.SDSSearchResponseItem.SDSSearchResponseItemType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1ABF28A94 + 4 * byte_1ABF50CC3[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1ABF28AC8 + 4 * byte_1ABF50CBE[v4]))();
}

uint64_t sub_1ABF28AC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF28AD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABF28AD8);
  return result;
}

uint64_t sub_1ABF28AE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABF28AECLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1ABF28AF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABF28AF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSSearchResponse.SDSSearchResponseItem.SDSSearchResponseItemType()
{
  return &type metadata for SDSSearchResponse.SDSSearchResponseItem.SDSSearchResponseItemType;
}

unint64_t sub_1ABF28B18()
{
  unint64_t result;

  result = qword_1EEC45300;
  if (!qword_1EEC45300)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50FD4, &type metadata for SDSSearchResponse.SDSSearchResponseItem.SDSSearchResponseItemType);
    atomic_store(result, (unint64_t *)&qword_1EEC45300);
  }
  return result;
}

unint64_t sub_1ABF28B60()
{
  unint64_t result;

  result = qword_1EEC45308;
  if (!qword_1EEC45308)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF510C4, &type metadata for SDSSearchResponse.SDSSearchResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC45308);
  }
  return result;
}

unint64_t sub_1ABF28BA8()
{
  unint64_t result;

  result = qword_1EEC45310;
  if (!qword_1EEC45310)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50FFC, &type metadata for SDSSearchResponse.SDSSearchResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC45310);
  }
  return result;
}

unint64_t sub_1ABF28BF0()
{
  unint64_t result;

  result = qword_1EEC45318;
  if (!qword_1EEC45318)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF51024, &type metadata for SDSSearchResponse.SDSSearchResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC45318);
  }
  return result;
}

uint64_t sub_1ABF28C34()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

unint64_t sub_1ABF28C7C(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD v5[4];

  v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF32344();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1ABF32248();
    LODWORD(v3) = sub_1ABF28C34();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    if (v3 == 8)
      v3 = 0;
    else
      v3 = v3;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

unint64_t sub_1ABF28D4C()
{
  unint64_t result;

  result = qword_1EEC45320;
  if (!qword_1EEC45320)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50F5C, &type metadata for SDSSearchResponse.SDSSearchResponseItem.SDSSearchResponseItemType);
    atomic_store(result, (unint64_t *)&qword_1EEC45320);
  }
  return result;
}

uint64_t sub_1ABF28D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, double);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1ABD7E2B8;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1ABF28E28()
{
  return 0x67616D695F736473;
}

uint64_t sub_1ABF28E44()
{
  return 0x302E302E32;
}

uint64_t sub_1ABF28E58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABF31060();
  sub_1ABE7BDE4();
  swift_allocObject();
  result = sub_1ABF313E4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABF28ED0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 1608) = v3;
  *(double *)(v4 + 1560) = a3;
  *(_QWORD *)(v4 + 1512) = a2;
  *(_QWORD *)(v4 + 1464) = a1;
  v5 = *(_QWORD *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) - 8);
  *(_QWORD *)(v4 + 1616) = v5;
  *(_QWORD *)(v4 + 1624) = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v4 + 1632) = swift_task_alloc();
  *(_QWORD *)(v4 + 1640) = swift_task_alloc();
  *(_QWORD *)(v4 + 1648) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABF28F58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0[206];
  v16 = v0[205];
  v2 = v0[203];
  v3 = v0[202];
  v4 = v0[201];
  v5 = v0[195];
  v6 = v0[189];
  sub_1ABCFC790(v6, v1, type metadata accessor for RawAttributionSourceLogo.Unresolved);
  v7 = *(unsigned __int8 *)(v3 + 80);
  v8 = (v7 + 24) & ~v7;
  v9 = v2 + 7;
  v10 = (v8 + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject();
  v0[207] = v11;
  *(_QWORD *)(v11 + 16) = v4;
  sub_1ABCFE2AC(v1, v11 + v8, type metadata accessor for RawAttributionSourceLogo.Unresolved);
  *(_QWORD *)(v11 + v10) = v5;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_asyncLet_begin();
  sub_1ABCFC790(v6, v16, type metadata accessor for RawAttributionSourceLogo.Unresolved);
  v12 = (v7 + 16) & ~v7;
  v13 = (v12 + v9) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject();
  v0[208] = v14;
  sub_1ABCFE2AC(v16, v14 + v12, type metadata accessor for RawAttributionSourceLogo.Unresolved);
  *(_QWORD *)(v14 + v13) = v4;
  *(_QWORD *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = v5;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2AD60();
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_1ABF2912C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;

  v1[209] = v0;
  if (v0)
    return swift_asyncLet_finish();
  v3 = v1[175];
  v1[210] = v3;
  v4 = v1[176];
  v1[211] = v4;
  v1[212] = v1[177];
  sub_1ABD0F474(v3, v4);
  return swift_asyncLet_get();
}

uint64_t sub_1ABF291C4()
{
  return swift_task_switch();
}

uint64_t sub_1ABF291D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int *v10;
  _QWORD *v11;
  uint64_t *v12;

  v1 = v0[212];
  v2 = v0[211];
  v3 = v0[210];
  v4 = v0[204];
  v5 = v0[183];
  v6 = v0[167];
  v7 = v0[168];
  sub_1ABCFC790(v0[189], v4, type metadata accessor for RawAttributionSourceLogo.Unresolved);
  if (v7 >> 60 == 15)
    v8 = 0;
  else
    v8 = v6;
  if (v7 >> 60 == 15)
    v9 = 0xF000000000000000;
  else
    v9 = v7;
  sub_1ABCFE2AC(v4, v5, type metadata accessor for RawAttributionSourceLogo.Unresolved);
  v10 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  *(_QWORD *)(v5 + v10[5]) = v1;
  v11 = (_QWORD *)(v5 + v10[6]);
  *v11 = v3;
  v11[1] = v2;
  v12 = (uint64_t *)(v5 + v10[7]);
  *v12 = v8;
  v12[1] = v9;
  sub_1ABD9EA4C(v6, v7);
  return swift_asyncLet_finish();
}

uint64_t sub_1ABF292DC()
{
  return swift_task_switch();
}

uint64_t sub_1ABF292F0()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1ABF29344()
{
  return swift_task_switch();
}

uint64_t sub_1ABF29358()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF293C8()
{
  return swift_task_switch();
}

uint64_t sub_1ABF293DC()
{
  swift_release();
  return swift_asyncLet_finish();
}

uint64_t sub_1ABF29430()
{
  return swift_task_switch();
}

uint64_t sub_1ABF29444()
{
  uint64_t v0;

  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF294B4(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v7;
  *v7 = v4;
  v7[1] = sub_1ABF2951C;
  return sub_1ABF295D4(a4, a2);
}

uint64_t sub_1ABF2951C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *v4;
  v9 = *v4;
  swift_task_dealloc();
  if (v3)
    return (*(uint64_t (**)(void))(v9 + 8))();
  *(double *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_1ABF295B0()
{
  uint64_t v0;
  uint64_t v1;
  int8x16_t *v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(int8x16_t **)(v0 + 16);
  *v2 = vextq_s8(*(int8x16_t *)(v0 + 40), *(int8x16_t *)(v0 + 40), 8uLL);
  v2[1].i64[0] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF295D4(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 88) = v2;
  *(double *)(v3 + 80) = a2;
  *(_QWORD *)(v3 + 72) = a1;
  v4 = sub_1ABF30C28();
  *(_QWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 104) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  v5 = sub_1ABF305D4();
  *(_QWORD *)(v3 + 120) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 128) = v6;
  *(_QWORD *)(v3 + 136) = *(_QWORD *)(v6 + 64);
  *(_QWORD *)(v3 + 144) = swift_task_alloc();
  v7 = sub_1ABF30B14();
  *(_QWORD *)(v3 + 152) = v7;
  *(_QWORD *)(v3 + 160) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v3 + 168) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABF29690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 72);
  sub_1ABCF5A54(0, &qword_1ED350D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v27 = v4;
  v30 = ~v4;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1ABF366C0;
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v36(v6 + v5, v3, v1);
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED34C2D0 != -1)
    swift_once();
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 144);
  v10 = *(_QWORD *)(v0 + 152);
  v34 = v10;
  v28 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 120);
  v26 = *(_QWORD *)(v0 + 128);
  v31 = v8;
  v32 = *(_QWORD *)(v0 + 112);
  v35 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 88);
  v33 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 72);
  sub_1ABF309B8();
  swift_release();
  if (*(_BYTE *)(v0 + 200))
    v15 = (unsigned int *)MEMORY[0x1E0DB32A0];
  else
    v15 = (unsigned int *)MEMORY[0x1E0DB32A8];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v8, *v15, v10);
  sub_1ABF2AF5C(0, &qword_1ED34C7F0, MEMORY[0x1E0DB4B98]);
  sub_1ABD07E04(v12 + 24, v0 + 16);
  v36(v9, v14, v11);
  v16 = (v27 + 56) & v30;
  v25 = v28 + 7;
  v17 = (v28 + 7 + v16) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  sub_1ABD065C8((__int128 *)(v0 + 16), v29 + 16);
  v18 = v29 + v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32);
  v20 = v9;
  v19(v18, v9, v11);
  *(_QWORD *)(v29 + v17) = v13;
  v36(v9, v14, v11);
  v21 = (v27 + 24) & v30;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v12;
  v19(v22 + v21, v20, v11);
  *(_QWORD *)(v22 + ((v25 + v21) & 0xFFFFFFFFFFFFFFF8)) = v13;
  sub_1ABCFE1EC(&qword_1ED34C2C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
  swift_retain_n();
  sub_1ABF321F4();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 64) = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350AF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868], MEMORY[0x1E0DB3870]);
  sub_1ABD20158(0);
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350B70, (uint64_t (*)(uint64_t))sub_1ABD20158, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  *(_QWORD *)(v0 + 176) = sub_1ABF3112C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v32, v33);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v31, v34);
  v23 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v23;
  *v23 = v0;
  v23[1] = sub_1ABF29AF4;
  return sub_1ABF31150();
}

uint64_t sub_1ABF29AF4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABF29B60()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  double v7;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 56);
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_1ABD9A5B4(*(_QWORD *)(v0 + 72)), (v3 & 1) != 0))
  {
    v4 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 24 * v2);
    v5 = *v4;
    v6 = v4[1];
    v7 = *((double *)v4 + 2);
    sub_1ABD0F474(*v4, v6);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, unint64_t, double))(v0 + 8))(v5, v6, v7);
  }
  else
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABF29C24()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF29C80(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  *(double *)(v4 + 40) = a4;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  sub_1ABCF5968();
  *(_QWORD *)(v4 + 48) = swift_task_alloc();
  v5 = sub_1ABF305D4();
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABF29D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  sub_1ABCFC790(v4 + *(int *)(v5 + 20), v3, (uint64_t (*)(_QWORD))sub_1ABCF5968);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1ABCF59BC(*(_QWORD *)(v0 + 48));
    v6 = *(_QWORD *)(v0 + 16);
    *(_OWORD *)v6 = xmmword_1ABF39B30;
    *(_QWORD *)(v6 + 16) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 32))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v8;
    *v8 = v0;
    v8[1] = sub_1ABF29E08;
    return sub_1ABF295D4(*(_QWORD *)(v0 + 72), *(double *)(v0 + 40));
  }
}

uint64_t sub_1ABF29E08(uint64_t a1, uint64_t a2, double a3)
{
  void *v3;
  uint64_t *v4;
  uint64_t v8;

  v8 = *v4;
  swift_task_dealloc();
  if (v3)
  {

  }
  else
  {
    *(double *)(v8 + 88) = a3;
    *(_QWORD *)(v8 + 96) = a2;
    *(_QWORD *)(v8 + 104) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1ABF29E94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  v4 = *(_QWORD **)(v0 + 16);
  *v4 = v1;
  v4[1] = v2;
  v4[2] = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF29F00()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
  v1 = *(_QWORD *)(v0 + 16);
  *(_OWORD *)v1 = xmmword_1ABF39B30;
  *(_QWORD *)(v1 + 16) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF29F64(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v15[2];
  __int128 v16[2];

  v7 = sub_1ABF305D4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF2AEF8();
  sub_1ABD07E04(a3, (uint64_t)v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
  sub_1ABD065C8(v16, (uint64_t)v15);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v11, v10, v7);
  sub_1ABD065C8(v15, v13 + v12);
  *(double *)(v13 + ((v12 + 47) & 0xFFFFFFFFFFFFFFF8)) = a1;
  return sub_1ABF31168();
}

uint64_t sub_1ABF2A090(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;

  *(double *)(v4 + 40) = a4;
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1ABF2A0B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD **)(v0 + 32);
  sub_1ABCF5A54(0, &qword_1ED34CC98, (uint64_t (*)(uint64_t))sub_1ABF2B2DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1ABF2B2DC();
  *(_QWORD *)(v0 + 48) = v3;
  v4 = *(_DWORD *)(*(_QWORD *)(v3 - 8) + 80);
  *(_DWORD *)(v0 + 120) = v4;
  v5 = (v4 + 32) & ~(unint64_t)v4;
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = v6;
  *(_OWORD *)(v6 + 16) = xmmword_1ABF366C0;
  v7 = v6 + v5;
  v8 = sub_1ABF305D4();
  *(_QWORD *)(v0 + 64) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v0 + 72) = v9;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v1, v8);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v10;
  *v10 = v0;
  v10[1] = sub_1ABF2A1B4;
  return sub_1ABD9BCDC(*(_QWORD *)(v0 + 24), *(double *)(v0 + 40));
}

uint64_t sub_1ABF2A1B4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;

  v8 = *v4;
  *(_QWORD *)(*v4 + 88) = v3;
  swift_task_dealloc();
  if (!v3)
  {
    v9 = *(_QWORD *)(v8 + 48);
    *(double *)(v8 + 96) = a3;
    *(_QWORD *)(v8 + 104) = a2;
    *(_QWORD *)(v8 + 112) = a1;
    *(_DWORD *)(v8 + 124) = *(_DWORD *)(v9 + 48);
  }
  return swift_task_switch();
}

uint64_t sub_1ABF2A248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  int8x16_t *v4;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(unint64_t **)(v0 + 16);
  v4 = (int8x16_t *)(v2
                   + *(int *)(v0 + 124)
                   + ((*(unsigned __int8 *)(v0 + 120) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 120)));
  *v4 = vextq_s8(*(int8x16_t *)(v0 + 104), *(int8x16_t *)(v0 + 104), 8uLL);
  v4[1].i64[0] = v1;
  *v3 = sub_1ABDEAD30(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF2A2B0()
{
  uint64_t v0;

  (*(void (**)(unint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 56) + ((*(unsigned __int8 *)(v0 + 120) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 120)), *(_QWORD *)(v0 + 64));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABF2A330(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8 = sub_1ABF305D4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  sub_1ABF2AEF8();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v8);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(double *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  sub_1ABF2FF68();
  return sub_1ABF311A4();
}

unint64_t sub_1ABF2A438@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t result;

  v4 = sub_1ABF2B18C();
  if (v5 >> 60 == 15)
  {
    v7 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v8 = v4;
    v9 = v5;
    v10 = v6;
    sub_1ABCF5A54(0, &qword_1ED34CC98, (uint64_t (*)(uint64_t))sub_1ABF2B2DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1ABF2B2DC();
    v12 = v11;
    v13 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
    v14 = (v13 + 32) & ~v13;
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1ABF366C0;
    v16 = v15 + v14;
    v17 = (uint64_t *)(v16 + *(int *)(v12 + 48));
    v18 = sub_1ABF305D4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, a1, v18);
    *v17 = v8;
    v17[1] = v9;
    v17[2] = v10;
    v7 = v15;
  }
  result = sub_1ABDEAD30(v7);
  *a2 = result;
  return result;
}

uint64_t sub_1ABF2A554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABF2AEF8();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  return sub_1ABF311A4();
}

uint64_t sub_1ABF2A5C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v40 = a3;
  v44 = a2;
  v4 = sub_1ABF305D4();
  v51 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF2B024(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - v11;
  v13 = *(_QWORD *)(a1 + 64);
  v41 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v42 = (unint64_t)(v14 + 63) >> 6;
  v43 = a1;
  v39 = v42 - 1;
  result = sub_1ABF2FF5C();
  v45 = 0;
  v46 = v6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v19 = (v16 - 1) & v16;
      v20 = v18 | (v45 << 6);
LABEL_7:
      v21 = v43;
      (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v9, *(_QWORD *)(v43 + 48) + *(_QWORD *)(v51 + 72) * v20, v4);
      v22 = (uint64_t *)(*(_QWORD *)(v21 + 56) + 24 * v20);
      sub_1ABF2B040();
      v24 = v23;
      v25 = (uint64_t *)&v9[*(int *)(v23 + 48)];
      v26 = *v22;
      v27 = v22[1];
      v28 = v22[2];
      *v25 = *v22;
      v25[1] = v27;
      v25[2] = v28;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 0, 1, v23);
      sub_1ABD0F474(v26, v27);
      v6 = v46;
      goto LABEL_26;
    }
    v29 = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v29 < v42)
    {
      v30 = *(_QWORD *)(v41 + 8 * v29);
      if (v30)
        goto LABEL_11;
      v31 = v45 + 2;
      ++v45;
      if (v29 + 1 < v42)
      {
        v30 = *(_QWORD *)(v41 + 8 * v31);
        if (v30)
          goto LABEL_14;
        v45 = v29 + 1;
        if (v29 + 2 < v42)
        {
          v30 = *(_QWORD *)(v41 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_11;
          }
          v31 = v29 + 3;
          v45 = v29 + 2;
          if (v29 + 3 < v42)
            break;
        }
      }
    }
LABEL_25:
    sub_1ABF2B040();
    v24 = v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 1, 1, v32);
    v19 = 0;
LABEL_26:
    sub_1ABCFE2AC((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1ABF2B024);
    sub_1ABF2B040();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24) == 1)
    {
      v37 = v43;
      swift_release();
      *v40 = v37;
      return sub_1ABF2FF5C();
    }
    v47 = v19;
    v33 = (uint64_t *)&v12[*(int *)(v24 + 48)];
    v34 = *v33;
    v35 = v33[1];
    v36 = v33[2];
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v6, v12, v4);
    sub_1ABF31060();
    if (v48)
    {
      sub_1ABF3052C();
      v48 = v34;
      v49 = v35;
      v50 = v36;
      sub_1ABD0F474(v34, v35);
      v6 = v46;
      sub_1ABF31420();
      swift_release();
    }
    sub_1ABD0F430(v34, v35);
    result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v6, v4);
    v16 = v47;
  }
  v30 = *(_QWORD *)(v41 + 8 * v31);
  if (v30)
  {
LABEL_14:
    v29 = v31;
LABEL_11:
    v19 = (v30 - 1) & v30;
    v20 = __clz(__rbit64(v30)) + (v29 << 6);
    v45 = v29;
    goto LABEL_7;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v42)
    {
      v45 = v39;
      goto LABEL_25;
    }
    v30 = *(_QWORD *)(v41 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_11;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AttributionSourceAssetManager()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for AttributionSourceAssetManager.ImageStoreDescriptor()
{
  return &type metadata for AttributionSourceAssetManager.ImageStoreDescriptor;
}

uint64_t sub_1ABF2A9F0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1ABD37AA0;
  return sub_1ABF28ED0(a1, a2, a3);
}

uint64_t sub_1ABF2AA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v1 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_1ABF305D4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v7 = v3 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  return swift_deallocObject();
}

uint64_t sub_1ABF2AB24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  double v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1 + v5;
  v7 = *(double *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1ABD7E2B8;
  v8[2] = a1;
  v9 = (_QWORD *)swift_task_alloc();
  v8[3] = v9;
  *v9 = v8;
  v9[1] = sub_1ABF2951C;
  return sub_1ABF295D4(v6, v7);
}

uint64_t sub_1ABF2ABE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v1 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  v3 = sub_1ABF305D4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  v6 = v2 + *(int *)(v1 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v3))
    v5(v6, v3);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABF2ACB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = *(_QWORD *)(v1 + v6);
  v9 = *(double *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1ABD7E2B8;
  return sub_1ABF29C80(a1, v7, v8, v9);
}

void sub_1ABF2AD60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED347318)
  {
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED347318);
  }
}

uint64_t sub_1ABF2ADB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1ABF305D4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ABF2AE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_1ABF305D4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1ABF29F64(*(double *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1, v1 + 16, v1 + v4);
}

uint64_t sub_1ABF2AE8C(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1ABF305D4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1ABF2A330(a2, *(double *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a1, *(_QWORD *)(v2 + 16), v2 + v6);
}

uint64_t sub_1ABF2AEF0(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABF2A554(a1, v1);
}

void sub_1ABF2AEF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34CC60)
  {
    sub_1ABF2AF5C(255, (unint64_t *)&qword_1ED34CC78, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, uint64_t))MEMORY[0x1E0DEA048]);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34CC60);
  }
}

void sub_1ABF2AF5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, ValueMetadata *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_1ABF305D4();
    v7 = sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    v8 = a3(a1, v6, &type metadata for DownloadedImage, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1ABF2AFE0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABF2B00C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1ABF2A5C8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1ABF2B024(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED34C2C0, (uint64_t (*)(uint64_t))sub_1ABF2B040, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1ABF2B040()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34C2B8)
  {
    sub_1ABF305D4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34C2B8);
  }
}

uint64_t objectdestroy_21Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1ABF305D4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

unint64_t sub_1ABF2B12C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF305D4() - 8) + 80);
  return sub_1ABF2A438(v1 + ((v3 + 24) & ~v3), a1);
}

uint64_t sub_1ABF2B18C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v6;
  unint64_t v7;

  sub_1ABF31060();
  if (!v6)
    return 0;
  sub_1ABF3052C();
  sub_1ABF31414();
  swift_bridgeObjectRelease();
  swift_release();
  if (v7 >> 60 == 15)
    return 0;
  v0 = v6;
  if (qword_1ED34C2E0 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED347340);
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Using cached attribution source logo", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }

  return v0;
}

void sub_1ABF2B2DC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34CAE8)
  {
    sub_1ABF305D4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34CAE8);
  }
}

uint64_t sub_1ABF2B340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1ABF305D4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + v4);
  return swift_deallocObject();
}

uint64_t sub_1ABF2B3BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_1ABF305D4() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1 + v5;
  v8 = v1 + v6;
  v9 = *(_QWORD *)(v1 + ((v6 + 47) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1ABD37AA0;
  v10[5] = v9;
  v10[3] = v7;
  v10[4] = v8;
  v10[2] = a1;
  return swift_task_switch();
}

void CreateCredential_cold_1()
{
  __assert_rtn("CreateCredential", "SCWPreferences.m", 305, "credential.consumerKey");
}

void CreateCredential_cold_2()
{
  __assert_rtn("CreateCredential", "SCWPreferences.m", 306, "credential.consumerSecret");
}

uint64_t sub_1ABF2FBC0()
{
  return MEMORY[0x1E0C90308]();
}

uint64_t sub_1ABF2FBCC()
{
  return MEMORY[0x1E0C90328]();
}

uint64_t sub_1ABF2FBD8()
{
  return MEMORY[0x1E0C90330]();
}

uint64_t sub_1ABF2FBE4()
{
  return MEMORY[0x1E0C90350]();
}

uint64_t sub_1ABF2FBF0()
{
  return MEMORY[0x1E0C90360]();
}

uint64_t sub_1ABF2FBFC()
{
  return MEMORY[0x1E0C90368]();
}

uint64_t sub_1ABF2FC08()
{
  return MEMORY[0x1E0C90378]();
}

uint64_t sub_1ABF2FC14()
{
  return MEMORY[0x1E0C90380]();
}

uint64_t sub_1ABF2FC20()
{
  return MEMORY[0x1E0C90390]();
}

uint64_t sub_1ABF2FC2C()
{
  return MEMORY[0x1E0C90420]();
}

uint64_t sub_1ABF2FC38()
{
  return MEMORY[0x1E0C90428]();
}

uint64_t sub_1ABF2FC44()
{
  return MEMORY[0x1E0C90438]();
}

uint64_t sub_1ABF2FC50()
{
  return MEMORY[0x1E0C904D8]();
}

uint64_t sub_1ABF2FC5C()
{
  return MEMORY[0x1E0C90518]();
}

uint64_t sub_1ABF2FC68()
{
  return MEMORY[0x1E0C905A0]();
}

uint64_t sub_1ABF2FC74()
{
  return MEMORY[0x1E0C905C0]();
}

uint64_t sub_1ABF2FC80()
{
  return MEMORY[0x1E0C905D0]();
}

uint64_t sub_1ABF2FC8C()
{
  return MEMORY[0x1E0C905E0]();
}

uint64_t sub_1ABF2FC98()
{
  return MEMORY[0x1E0C90640]();
}

uint64_t sub_1ABF2FCA4()
{
  return MEMORY[0x1E0C90650]();
}

uint64_t sub_1ABF2FCB0()
{
  return MEMORY[0x1E0C90720]();
}

uint64_t sub_1ABF2FCBC()
{
  return MEMORY[0x1E0C90730]();
}

uint64_t sub_1ABF2FCC8()
{
  return MEMORY[0x1E0C90778]();
}

uint64_t sub_1ABF2FCD4()
{
  return MEMORY[0x1E0C907D0]();
}

uint64_t sub_1ABF2FCE0()
{
  return MEMORY[0x1E0C909C8]();
}

uint64_t sub_1ABF2FCEC()
{
  return MEMORY[0x1E0C909D8]();
}

uint64_t sub_1ABF2FCF8()
{
  return MEMORY[0x1E0C909F0]();
}

uint64_t sub_1ABF2FD04()
{
  return MEMORY[0x1E0C90A08]();
}

uint64_t sub_1ABF2FD10()
{
  return MEMORY[0x1E0C90AC8]();
}

uint64_t sub_1ABF2FD1C()
{
  return MEMORY[0x1E0C90AD8]();
}

uint64_t sub_1ABF2FD28()
{
  return MEMORY[0x1E0C90AE8]();
}

uint64_t sub_1ABF2FD34()
{
  return MEMORY[0x1E0C90AF8]();
}

uint64_t sub_1ABF2FD40()
{
  return MEMORY[0x1E0C90B20]();
}

uint64_t sub_1ABF2FD4C()
{
  return MEMORY[0x1E0C90B38]();
}

uint64_t sub_1ABF2FD58()
{
  return MEMORY[0x1E0C90B78]();
}

uint64_t sub_1ABF2FD64()
{
  return MEMORY[0x1E0C90B80]();
}

uint64_t sub_1ABF2FD70()
{
  return MEMORY[0x1E0C90BA8]();
}

uint64_t sub_1ABF2FD7C()
{
  return MEMORY[0x1E0C90BB0]();
}

uint64_t sub_1ABF2FD88()
{
  return MEMORY[0x1E0C90BC0]();
}

uint64_t sub_1ABF2FD94()
{
  return MEMORY[0x1E0C90C48]();
}

uint64_t sub_1ABF2FDA0()
{
  return MEMORY[0x1E0C90C50]();
}

uint64_t sub_1ABF2FDAC()
{
  return MEMORY[0x1E0C90CF0]();
}

uint64_t sub_1ABF2FDB8()
{
  return MEMORY[0x1E0C90D00]();
}

uint64_t sub_1ABF2FDC4()
{
  return MEMORY[0x1E0C90D10]();
}

uint64_t sub_1ABF2FDD0()
{
  return MEMORY[0x1E0C90D20]();
}

uint64_t sub_1ABF2FDDC()
{
  return MEMORY[0x1E0C90D98]();
}

uint64_t sub_1ABF2FDE8()
{
  return MEMORY[0x1E0C90DB0]();
}

uint64_t sub_1ABF2FDF4()
{
  return MEMORY[0x1E0C90DB8]();
}

uint64_t sub_1ABF2FE00()
{
  return MEMORY[0x1E0C90DC8]();
}

uint64_t sub_1ABF2FE0C()
{
  return MEMORY[0x1E0C90E50]();
}

uint64_t sub_1ABF2FE18()
{
  return MEMORY[0x1E0C90E60]();
}

uint64_t sub_1ABF2FE24()
{
  return MEMORY[0x1E0C90E90]();
}

uint64_t sub_1ABF2FE30()
{
  return MEMORY[0x1E0C90F00]();
}

uint64_t sub_1ABF2FE3C()
{
  return MEMORY[0x1E0C91108]();
}

uint64_t sub_1ABF2FE48()
{
  return MEMORY[0x1E0C91110]();
}

uint64_t sub_1ABF2FE54()
{
  return MEMORY[0x1E0C91128]();
}

uint64_t sub_1ABF2FE60()
{
  return MEMORY[0x1E0C91148]();
}

uint64_t sub_1ABF2FE6C()
{
  return MEMORY[0x1E0C91170]();
}

uint64_t sub_1ABF2FE78()
{
  return MEMORY[0x1E0C91180]();
}

uint64_t sub_1ABF2FE84()
{
  return MEMORY[0x1E0C91210]();
}

uint64_t sub_1ABF2FE90()
{
  return MEMORY[0x1E0C91220]();
}

uint64_t sub_1ABF2FE9C()
{
  return MEMORY[0x1E0C91258]();
}

uint64_t sub_1ABF2FEA8()
{
  return MEMORY[0x1E0C912C8]();
}

uint64_t sub_1ABF2FEB4()
{
  return MEMORY[0x1E0C912D8]();
}

uint64_t sub_1ABF2FEC0()
{
  return MEMORY[0x1E0C912F0]();
}

uint64_t sub_1ABF2FECC()
{
  return MEMORY[0x1E0C91330]();
}

uint64_t sub_1ABF2FED8()
{
  return MEMORY[0x1E0C91350]();
}

uint64_t sub_1ABF2FEE4()
{
  return MEMORY[0x1E0C91368]();
}

uint64_t sub_1ABF2FEF0()
{
  return MEMORY[0x1E0C91370]();
}

uint64_t sub_1ABF2FEFC()
{
  return MEMORY[0x1E0C91480]();
}

uint64_t sub_1ABF2FF08()
{
  return MEMORY[0x1E0C914B0]();
}

uint64_t sub_1ABF2FF14()
{
  return MEMORY[0x1E0C914D0]();
}

uint64_t sub_1ABF2FF20()
{
  return MEMORY[0x1E0C914E8]();
}

uint64_t sub_1ABF2FF2C()
{
  return MEMORY[0x1E0C914F8]();
}

uint64_t sub_1ABF2FF38()
{
  return MEMORY[0x1E0C91568]();
}

uint64_t sub_1ABF2FF44()
{
  return MEMORY[0x1E0C91620]();
}

uint64_t sub_1ABF2FF50()
{
  return MEMORY[0x1E0C91640]();
}

uint64_t sub_1ABF2FF5C()
{
  return MEMORY[0x1E0C91658]();
}

uint64_t sub_1ABF2FF68()
{
  return MEMORY[0x1E0C91668]();
}

uint64_t sub_1ABF2FF74()
{
  return MEMORY[0x1E0C91690]();
}

uint64_t sub_1ABF2FF80()
{
  return MEMORY[0x1E0C91698]();
}

uint64_t sub_1ABF2FF8C()
{
  return MEMORY[0x1E0C916A8]();
}

uint64_t sub_1ABF2FF98()
{
  return MEMORY[0x1E0C916C0]();
}

uint64_t sub_1ABF2FFA4()
{
  return MEMORY[0x1E0C916C8]();
}

uint64_t sub_1ABF2FFB0()
{
  return MEMORY[0x1E0C916D0]();
}

uint64_t sub_1ABF2FFBC()
{
  return MEMORY[0x1E0C916F8]();
}

uint64_t sub_1ABF2FFC8()
{
  return MEMORY[0x1E0C91750]();
}

uint64_t sub_1ABF2FFD4()
{
  return MEMORY[0x1E0C91760]();
}

uint64_t sub_1ABF2FFE0()
{
  return MEMORY[0x1E0C91768]();
}

uint64_t sub_1ABF2FFEC()
{
  return MEMORY[0x1E0C91780]();
}

uint64_t sub_1ABF2FFF8()
{
  return MEMORY[0x1E0C917D8]();
}

uint64_t sub_1ABF30004()
{
  return MEMORY[0x1E0C917F8]();
}

uint64_t sub_1ABF30010()
{
  return MEMORY[0x1E0C91820]();
}

uint64_t sub_1ABF3001C()
{
  return MEMORY[0x1E0C918B0]();
}

uint64_t sub_1ABF30028()
{
  return MEMORY[0x1E0C918B8]();
}

uint64_t sub_1ABF30034()
{
  return MEMORY[0x1E0C918E8]();
}

uint64_t sub_1ABF30040()
{
  return MEMORY[0x1E0C918F0]();
}

uint64_t sub_1ABF3004C()
{
  return MEMORY[0x1E0C91900]();
}

uint64_t sub_1ABF30058()
{
  return MEMORY[0x1E0C91918]();
}

uint64_t sub_1ABF30064()
{
  return MEMORY[0x1E0C91920]();
}

uint64_t sub_1ABF30070()
{
  return MEMORY[0x1E0C91930]();
}

uint64_t sub_1ABF3007C()
{
  return MEMORY[0x1E0C91980]();
}

uint64_t sub_1ABF30088()
{
  return MEMORY[0x1E0C919D0]();
}

uint64_t sub_1ABF30094()
{
  return MEMORY[0x1E0C919E8]();
}

uint64_t sub_1ABF300A0()
{
  return MEMORY[0x1E0C91A20]();
}

uint64_t sub_1ABF300AC()
{
  return MEMORY[0x1E0C91A30]();
}

uint64_t sub_1ABF300B8()
{
  return MEMORY[0x1E0C91A38]();
}

uint64_t sub_1ABF300C4()
{
  return MEMORY[0x1E0C91AA8]();
}

uint64_t sub_1ABF300D0()
{
  return MEMORY[0x1E0C91AB8]();
}

uint64_t sub_1ABF300DC()
{
  return MEMORY[0x1E0C91AD0]();
}

uint64_t sub_1ABF300E8()
{
  return MEMORY[0x1E0C91B40]();
}

uint64_t sub_1ABF300F4()
{
  return MEMORY[0x1E0C91B48]();
}

uint64_t sub_1ABF30100()
{
  return MEMORY[0x1E0C91B50]();
}

uint64_t sub_1ABF3010C()
{
  return MEMORY[0x1E0C91BC8]();
}

uint64_t sub_1ABF30118()
{
  return MEMORY[0x1E0C91BD0]();
}

uint64_t sub_1ABF30124()
{
  return MEMORY[0x1E0CADEA8]();
}

uint64_t sub_1ABF30130()
{
  return MEMORY[0x1E0CADEB0]();
}

uint64_t sub_1ABF3013C()
{
  return MEMORY[0x1E0CADF08]();
}

uint64_t sub_1ABF30148()
{
  return MEMORY[0x1E0CADF10]();
}

uint64_t sub_1ABF30154()
{
  return MEMORY[0x1E0CADF18]();
}

uint64_t sub_1ABF30160()
{
  return MEMORY[0x1E0CADF30]();
}

uint64_t sub_1ABF3016C()
{
  return MEMORY[0x1E0CADF40]();
}

uint64_t sub_1ABF30178()
{
  return MEMORY[0x1E0CADF48]();
}

uint64_t sub_1ABF30184()
{
  return MEMORY[0x1E0CADF50]();
}

uint64_t sub_1ABF30190()
{
  return MEMORY[0x1E0CADF80]();
}

uint64_t sub_1ABF3019C()
{
  return MEMORY[0x1E0CADF98]();
}

uint64_t sub_1ABF301A8()
{
  return MEMORY[0x1E0CAE048]();
}

uint64_t sub_1ABF301B4()
{
  return MEMORY[0x1E0CAE060]();
}

uint64_t sub_1ABF301C0()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1ABF301CC()
{
  return MEMORY[0x1E0CAE080]();
}

uint64_t sub_1ABF301D8()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1ABF301E4()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1ABF301F0()
{
  return MEMORY[0x1E0CAE160]();
}

uint64_t sub_1ABF301FC()
{
  return MEMORY[0x1E0CAE178]();
}

uint64_t sub_1ABF30208()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1ABF30214()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1ABF30220()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1ABF3022C()
{
  return MEMORY[0x1E0CAE390]();
}

uint64_t sub_1ABF30238()
{
  return MEMORY[0x1E0CAE3B0]();
}

uint64_t sub_1ABF30244()
{
  return MEMORY[0x1E0CAE3C8]();
}

uint64_t sub_1ABF30250()
{
  return MEMORY[0x1E0CAE3D0]();
}

uint64_t sub_1ABF3025C()
{
  return MEMORY[0x1E0CAE3D8]();
}

uint64_t sub_1ABF30268()
{
  return MEMORY[0x1E0CAE408]();
}

uint64_t sub_1ABF30274()
{
  return MEMORY[0x1E0CAE418]();
}

uint64_t sub_1ABF30280()
{
  return MEMORY[0x1E0CAE440]();
}

uint64_t sub_1ABF3028C()
{
  return MEMORY[0x1E0CAE480]();
}

uint64_t sub_1ABF30298()
{
  return MEMORY[0x1E0CAE4A8]();
}

uint64_t sub_1ABF302A4()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1ABF302B0()
{
  return MEMORY[0x1E0CAE668]();
}

uint64_t sub_1ABF302BC()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t sub_1ABF302C8()
{
  return MEMORY[0x1E0CAE718]();
}

uint64_t sub_1ABF302D4()
{
  return MEMORY[0x1E0CAE7A0]();
}

uint64_t sub_1ABF302E0()
{
  return MEMORY[0x1E0CAE7B0]();
}

uint64_t sub_1ABF302EC()
{
  return MEMORY[0x1E0CAE7C8]();
}

uint64_t sub_1ABF302F8()
{
  return MEMORY[0x1E0CAE7D0]();
}

uint64_t sub_1ABF30304()
{
  return MEMORY[0x1E0CAE7F0]();
}

uint64_t sub_1ABF30310()
{
  return MEMORY[0x1E0CAE808]();
}

uint64_t sub_1ABF3031C()
{
  return MEMORY[0x1E0CAE848]();
}

uint64_t sub_1ABF30328()
{
  return MEMORY[0x1E0CAE878]();
}

uint64_t sub_1ABF30334()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_1ABF30340()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t sub_1ABF3034C()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_1ABF30358()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1ABF30364()
{
  return MEMORY[0x1E0CAE8D8]();
}

uint64_t sub_1ABF30370()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1ABF3037C()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1ABF30388()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1ABF30394()
{
  return MEMORY[0x1E0CAEA38]();
}

uint64_t sub_1ABF303A0()
{
  return MEMORY[0x1E0CAEA40]();
}

uint64_t sub_1ABF303AC()
{
  return MEMORY[0x1E0CAEAA8]();
}

uint64_t sub_1ABF303B8()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1ABF303C4()
{
  return MEMORY[0x1E0CAEB20]();
}

uint64_t sub_1ABF303D0()
{
  return MEMORY[0x1E0CAEB38]();
}

uint64_t sub_1ABF303DC()
{
  return MEMORY[0x1E0CAEB50]();
}

uint64_t sub_1ABF303E8()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t sub_1ABF303F4()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_1ABF30400()
{
  return MEMORY[0x1E0CAF8D8]();
}

uint64_t sub_1ABF3040C()
{
  return MEMORY[0x1E0CAF8E8]();
}

uint64_t sub_1ABF30418()
{
  return MEMORY[0x1E0CAF8F8]();
}

uint64_t sub_1ABF30424()
{
  return MEMORY[0x1E0CAF900]();
}

uint64_t sub_1ABF30430()
{
  return MEMORY[0x1E0CAF910]();
}

uint64_t sub_1ABF3043C()
{
  return MEMORY[0x1E0CAF920]();
}

uint64_t sub_1ABF30448()
{
  return MEMORY[0x1E0CAF928]();
}

uint64_t sub_1ABF30454()
{
  return MEMORY[0x1E0CAF930]();
}

uint64_t sub_1ABF30460()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1ABF3046C()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1ABF30478()
{
  return MEMORY[0x1E0CAF9B0]();
}

uint64_t sub_1ABF30484()
{
  return MEMORY[0x1E0CAF9D0]();
}

uint64_t sub_1ABF30490()
{
  return MEMORY[0x1E0CAF9D8]();
}

uint64_t sub_1ABF3049C()
{
  return MEMORY[0x1E0CAF9F8]();
}

uint64_t sub_1ABF304A8()
{
  return MEMORY[0x1E0CAFA28]();
}

uint64_t sub_1ABF304B4()
{
  return MEMORY[0x1E0CAFA88]();
}

uint64_t sub_1ABF304C0()
{
  return MEMORY[0x1E0CAFAD8]();
}

uint64_t sub_1ABF304CC()
{
  return MEMORY[0x1E0CAFAE0]();
}

uint64_t sub_1ABF304D8()
{
  return MEMORY[0x1E0CAFB50]();
}

uint64_t sub_1ABF304E4()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_1ABF304F0()
{
  return MEMORY[0x1E0CAFC88]();
}

uint64_t sub_1ABF304FC()
{
  return MEMORY[0x1E0CAFC90]();
}

uint64_t sub_1ABF30508()
{
  return MEMORY[0x1E0CAFCA8]();
}

uint64_t sub_1ABF30514()
{
  return MEMORY[0x1E0CAFCC0]();
}

uint64_t sub_1ABF30520()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_1ABF3052C()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1ABF30538()
{
  return MEMORY[0x1E0CAFDD8]();
}

uint64_t sub_1ABF30544()
{
  return MEMORY[0x1E0CAFE28]();
}

uint64_t sub_1ABF30550()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1ABF3055C()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1ABF30568()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_1ABF30574()
{
  return MEMORY[0x1E0CAFED8]();
}

uint64_t sub_1ABF30580()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1ABF3058C()
{
  return MEMORY[0x1E0CAFF18]();
}

uint64_t sub_1ABF30598()
{
  return MEMORY[0x1E0CAFF20]();
}

uint64_t sub_1ABF305A4()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1ABF305B0()
{
  return MEMORY[0x1E0CAFF58]();
}

uint64_t sub_1ABF305BC()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1ABF305C8()
{
  return MEMORY[0x1E0CAFFD0]();
}

uint64_t sub_1ABF305D4()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1ABF305E0()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_1ABF305EC()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1ABF305F8()
{
  return MEMORY[0x1E0CB0128]();
}

uint64_t sub_1ABF30604()
{
  return MEMORY[0x1E0CB0138]();
}

uint64_t sub_1ABF30610()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1ABF3061C()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t sub_1ABF30628()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t sub_1ABF30634()
{
  return MEMORY[0x1E0CB01C8]();
}

uint64_t sub_1ABF30640()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1ABF3064C()
{
  return MEMORY[0x1E0CB01F8]();
}

uint64_t sub_1ABF30658()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1ABF30664()
{
  return MEMORY[0x1E0CB02C0]();
}

uint64_t sub_1ABF30670()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1ABF3067C()
{
  return MEMORY[0x1E0CB05E8]();
}

uint64_t sub_1ABF30688()
{
  return MEMORY[0x1E0CB05F8]();
}

uint64_t sub_1ABF30694()
{
  return MEMORY[0x1E0CB0608]();
}

uint64_t sub_1ABF306A0()
{
  return MEMORY[0x1E0CB0620]();
}

uint64_t sub_1ABF306AC()
{
  return MEMORY[0x1E0CB0630]();
}

uint64_t sub_1ABF306B8()
{
  return MEMORY[0x1E0CB0670]();
}

uint64_t sub_1ABF306C4()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1ABF306D0()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1ABF306DC()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1ABF306E8()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1ABF306F4()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1ABF30700()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1ABF3070C()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1ABF30718()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1ABF30724()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1ABF30730()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1ABF3073C()
{
  return MEMORY[0x1E0CB0840]();
}

uint64_t sub_1ABF30748()
{
  return MEMORY[0x1E0CB0848]();
}

uint64_t sub_1ABF30754()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1ABF30760()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1ABF3076C()
{
  return MEMORY[0x1E0CB08D8]();
}

uint64_t sub_1ABF30778()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1ABF30784()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1ABF30790()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1ABF3079C()
{
  return MEMORY[0x1E0CB0A80]();
}

uint64_t sub_1ABF307A8()
{
  return MEMORY[0x1E0CB0A98]();
}

uint64_t sub_1ABF307B4()
{
  return MEMORY[0x1E0CB0AC0]();
}

uint64_t sub_1ABF307C0()
{
  return MEMORY[0x1E0CB0AE8]();
}

uint64_t sub_1ABF307CC()
{
  return MEMORY[0x1E0CB0B28]();
}

uint64_t sub_1ABF307D8()
{
  return MEMORY[0x1E0CB0BD8]();
}

uint64_t sub_1ABF307E4()
{
  return MEMORY[0x1E0CB0BE0]();
}

uint64_t sub_1ABF307F0()
{
  return MEMORY[0x1E0CB0BF8]();
}

uint64_t sub_1ABF307FC()
{
  return MEMORY[0x1E0CB0C30]();
}

uint64_t sub_1ABF30808()
{
  return MEMORY[0x1E0CB0C38]();
}

uint64_t sub_1ABF30814()
{
  return MEMORY[0x1E0CB0C40]();
}

uint64_t sub_1ABF30820()
{
  return MEMORY[0x1E0CB0C48]();
}

uint64_t sub_1ABF3082C()
{
  return MEMORY[0x1E0CB0C70]();
}

uint64_t sub_1ABF30838()
{
  return MEMORY[0x1E0CB0CB0]();
}

uint64_t sub_1ABF30844()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1ABF30850()
{
  return MEMORY[0x1E0CB0D80]();
}

uint64_t sub_1ABF3085C()
{
  return MEMORY[0x1E0CB0DA8]();
}

uint64_t sub_1ABF30868()
{
  return MEMORY[0x1E0CB0DB8]();
}

uint64_t sub_1ABF30874()
{
  return MEMORY[0x1E0CB0DF0]();
}

uint64_t sub_1ABF30880()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1ABF3088C()
{
  return MEMORY[0x1E0CB0F00]();
}

uint64_t sub_1ABF30898()
{
  return MEMORY[0x1E0CB0F20]();
}

uint64_t sub_1ABF308A4()
{
  return MEMORY[0x1E0CB0FA0]();
}

uint64_t sub_1ABF308B0()
{
  return MEMORY[0x1E0CB0FB8]();
}

uint64_t sub_1ABF308BC()
{
  return MEMORY[0x1E0CB1060]();
}

uint64_t sub_1ABF308C8()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_1ABF308D4()
{
  return MEMORY[0x1E0CB10D8]();
}

uint64_t sub_1ABF308E0()
{
  return MEMORY[0x1E0CB10E0]();
}

uint64_t sub_1ABF308EC()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1ABF308F8()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1ABF30904()
{
  return MEMORY[0x1E0CB1400]();
}

uint64_t sub_1ABF30910()
{
  return MEMORY[0x1E0CB1408]();
}

uint64_t sub_1ABF3091C()
{
  return MEMORY[0x1E0CB1420]();
}

uint64_t sub_1ABF30928()
{
  return MEMORY[0x1E0CB1438]();
}

uint64_t sub_1ABF30934()
{
  return MEMORY[0x1E0CB1440]();
}

uint64_t sub_1ABF30940()
{
  return MEMORY[0x1E0CB1450]();
}

uint64_t sub_1ABF3094C()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1ABF30958()
{
  return MEMORY[0x1E0DB54B0]();
}

uint64_t sub_1ABF30964()
{
  return MEMORY[0x1E0DB54B8]();
}

uint64_t sub_1ABF30970()
{
  return MEMORY[0x1E0DB54C0]();
}

uint64_t sub_1ABF3097C()
{
  return MEMORY[0x1E0DB54C8]();
}

uint64_t sub_1ABF30988()
{
  return MEMORY[0x1E0DB54F8]();
}

uint64_t sub_1ABF30994()
{
  return MEMORY[0x1E0DB5510]();
}

uint64_t sub_1ABF309A0()
{
  return MEMORY[0x1E0DB5520]();
}

uint64_t sub_1ABF309AC()
{
  return MEMORY[0x1E0DB5538]();
}

uint64_t sub_1ABF309B8()
{
  return MEMORY[0x1E0DB55D0]();
}

uint64_t sub_1ABF309C4()
{
  return MEMORY[0x1E0DB55D8]();
}

uint64_t sub_1ABF309D0()
{
  return MEMORY[0x1E0DB55E0]();
}

uint64_t sub_1ABF309DC()
{
  return MEMORY[0x1E0DB55E8]();
}

uint64_t sub_1ABF309E8()
{
  return MEMORY[0x1E0DB57F0]();
}

uint64_t sub_1ABF309F4()
{
  return MEMORY[0x1E0DB5808]();
}

uint64_t sub_1ABF30A00()
{
  return MEMORY[0x1E0DB5818]();
}

uint64_t sub_1ABF30A0C()
{
  return MEMORY[0x1E0DB5820]();
}

uint64_t sub_1ABF30A18()
{
  return MEMORY[0x1E0DB5858]();
}

uint64_t sub_1ABF30A24()
{
  return MEMORY[0x1E0DB5860]();
}

uint64_t sub_1ABF30A30()
{
  return MEMORY[0x1E0DB5868]();
}

uint64_t sub_1ABF30A3C()
{
  return MEMORY[0x1E0DB5870]();
}

uint64_t sub_1ABF30A48()
{
  return MEMORY[0x1E0DB5878]();
}

uint64_t sub_1ABF30A54()
{
  return MEMORY[0x1E0DB5890]();
}

uint64_t sub_1ABF30A60()
{
  return MEMORY[0x1E0DB5930]();
}

uint64_t sub_1ABF30A6C()
{
  return MEMORY[0x1E0DB5938]();
}

uint64_t sub_1ABF30A78()
{
  return MEMORY[0x1E0DB5940]();
}

uint64_t sub_1ABF30A84()
{
  return MEMORY[0x1E0DB3050]();
}

uint64_t sub_1ABF30A90()
{
  return MEMORY[0x1E0DB3058]();
}

uint64_t sub_1ABF30A9C()
{
  return MEMORY[0x1E0DB3060]();
}

uint64_t sub_1ABF30AA8()
{
  return MEMORY[0x1E0DB3068]();
}

uint64_t sub_1ABF30AB4()
{
  return MEMORY[0x1E0DB3070]();
}

uint64_t sub_1ABF30AC0()
{
  return MEMORY[0x1E0DB31E0]();
}

uint64_t sub_1ABF30ACC()
{
  return MEMORY[0x1E0DB31E8]();
}

uint64_t sub_1ABF30AD8()
{
  return MEMORY[0x1E0DB31F0]();
}

uint64_t sub_1ABF30AE4()
{
  return MEMORY[0x1E0DB31F8]();
}

uint64_t sub_1ABF30AF0()
{
  return MEMORY[0x1E0DB3210]();
}

uint64_t sub_1ABF30AFC()
{
  return MEMORY[0x1E0DB3220]();
}

uint64_t sub_1ABF30B08()
{
  return MEMORY[0x1E0DB3290]();
}

uint64_t sub_1ABF30B14()
{
  return MEMORY[0x1E0DB32D0]();
}

uint64_t sub_1ABF30B20()
{
  return MEMORY[0x1E0DB33C0]();
}

uint64_t sub_1ABF30B2C()
{
  return MEMORY[0x1E0DB33C8]();
}

uint64_t sub_1ABF30B38()
{
  return MEMORY[0x1E0DB3568]();
}

uint64_t sub_1ABF30B44()
{
  return MEMORY[0x1E0DB35A0]();
}

uint64_t sub_1ABF30B50()
{
  return MEMORY[0x1E0DB35C8]();
}

uint64_t sub_1ABF30B5C()
{
  return MEMORY[0x1E0DB35D0]();
}

uint64_t sub_1ABF30B68()
{
  return MEMORY[0x1E0DB35E8]();
}

uint64_t sub_1ABF30B74()
{
  return MEMORY[0x1E0DB35F0]();
}

uint64_t sub_1ABF30B80()
{
  return MEMORY[0x1E0DB36F0]();
}

uint64_t sub_1ABF30B8C()
{
  return MEMORY[0x1E0DB3770]();
}

uint64_t sub_1ABF30B98()
{
  return MEMORY[0x1E0DB3780]();
}

uint64_t sub_1ABF30BA4()
{
  return MEMORY[0x1E0DB3790]();
}

uint64_t sub_1ABF30BB0()
{
  return MEMORY[0x1E0DB3798]();
}

uint64_t sub_1ABF30BBC()
{
  return MEMORY[0x1E0DB37A0]();
}

uint64_t sub_1ABF30BC8()
{
  return MEMORY[0x1E0DB37A8]();
}

uint64_t sub_1ABF30BD4()
{
  return MEMORY[0x1E0DB37B8]();
}

uint64_t sub_1ABF30BE0()
{
  return MEMORY[0x1E0DB37C0]();
}

uint64_t sub_1ABF30BEC()
{
  return MEMORY[0x1E0DB3828]();
}

uint64_t sub_1ABF30BF8()
{
  return MEMORY[0x1E0DB3830]();
}

uint64_t sub_1ABF30C04()
{
  return MEMORY[0x1E0DB3838]();
}

uint64_t sub_1ABF30C10()
{
  return MEMORY[0x1E0DB3858]();
}

uint64_t sub_1ABF30C1C()
{
  return MEMORY[0x1E0DB3860]();
}

uint64_t sub_1ABF30C28()
{
  return MEMORY[0x1E0DB3868]();
}

uint64_t sub_1ABF30C34()
{
  return MEMORY[0x1E0DB3880]();
}

uint64_t sub_1ABF30C40()
{
  return MEMORY[0x1E0DB3890]();
}

uint64_t sub_1ABF30C4C()
{
  return MEMORY[0x1E0DB3898]();
}

uint64_t sub_1ABF30C58()
{
  return MEMORY[0x1E0DB38A8]();
}

uint64_t sub_1ABF30C64()
{
  return MEMORY[0x1E0DB38B0]();
}

uint64_t sub_1ABF30C70()
{
  return MEMORY[0x1E0DB38B8]();
}

uint64_t sub_1ABF30C7C()
{
  return MEMORY[0x1E0DB3908]();
}

uint64_t sub_1ABF30C88()
{
  return MEMORY[0x1E0DB3910]();
}

uint64_t sub_1ABF30C94()
{
  return MEMORY[0x1E0DB3918]();
}

uint64_t sub_1ABF30CA0()
{
  return MEMORY[0x1E0DB3930]();
}

uint64_t sub_1ABF30CAC()
{
  return MEMORY[0x1E0DB3950]();
}

uint64_t sub_1ABF30CB8()
{
  return MEMORY[0x1E0DB3968]();
}

uint64_t sub_1ABF30CC4()
{
  return MEMORY[0x1E0DB3978]();
}

uint64_t sub_1ABF30CD0()
{
  return MEMORY[0x1E0DB39B8]();
}

uint64_t sub_1ABF30CDC()
{
  return MEMORY[0x1E0DB39C0]();
}

uint64_t sub_1ABF30CE8()
{
  return MEMORY[0x1E0DB39D0]();
}

uint64_t sub_1ABF30CF4()
{
  return MEMORY[0x1E0DB39D8]();
}

uint64_t sub_1ABF30D00()
{
  return MEMORY[0x1E0DB3AB0]();
}

uint64_t sub_1ABF30D0C()
{
  return MEMORY[0x1E0DB3AB8]();
}

uint64_t sub_1ABF30D18()
{
  return MEMORY[0x1E0DB3AC0]();
}

uint64_t sub_1ABF30D24()
{
  return MEMORY[0x1E0DB3AC8]();
}

uint64_t sub_1ABF30D30()
{
  return MEMORY[0x1E0DB3B58]();
}

uint64_t sub_1ABF30D3C()
{
  return MEMORY[0x1E0DB3B98]();
}

uint64_t sub_1ABF30D48()
{
  return MEMORY[0x1E0DB3BB0]();
}

uint64_t sub_1ABF30D54()
{
  return MEMORY[0x1E0DB3BB8]();
}

uint64_t sub_1ABF30D60()
{
  return MEMORY[0x1E0DB3BC0]();
}

uint64_t sub_1ABF30D6C()
{
  return MEMORY[0x1E0DB3BC8]();
}

uint64_t sub_1ABF30D78()
{
  return MEMORY[0x1E0DB3BD0]();
}

uint64_t sub_1ABF30D84()
{
  return MEMORY[0x1E0DB3BD8]();
}

uint64_t sub_1ABF30D90()
{
  return MEMORY[0x1E0DB3C88]();
}

uint64_t sub_1ABF30D9C()
{
  return MEMORY[0x1E0DB3C90]();
}

uint64_t sub_1ABF30DA8()
{
  return MEMORY[0x1E0DB3C98]();
}

uint64_t sub_1ABF30DB4()
{
  return MEMORY[0x1E0DB3CB0]();
}

uint64_t sub_1ABF30DC0()
{
  return MEMORY[0x1E0DB3CC0]();
}

uint64_t sub_1ABF30DCC()
{
  return MEMORY[0x1E0DB3CD0]();
}

uint64_t sub_1ABF30DD8()
{
  return MEMORY[0x1E0DB3CE0]();
}

uint64_t sub_1ABF30DE4()
{
  return MEMORY[0x1E0DB3CE8]();
}

uint64_t sub_1ABF30DF0()
{
  return MEMORY[0x1E0DB3E78]();
}

uint64_t sub_1ABF30DFC()
{
  return MEMORY[0x1E0DB3E80]();
}

uint64_t sub_1ABF30E08()
{
  return MEMORY[0x1E0DB3EB0]();
}

uint64_t sub_1ABF30E14()
{
  return MEMORY[0x1E0DB3EB8]();
}

uint64_t sub_1ABF30E20()
{
  return MEMORY[0x1E0DB3EC0]();
}

uint64_t sub_1ABF30E2C()
{
  return MEMORY[0x1E0DB3EC8]();
}

uint64_t sub_1ABF30E38()
{
  return MEMORY[0x1E0DB3ED0]();
}

uint64_t sub_1ABF30E44()
{
  return MEMORY[0x1E0DB3ED8]();
}

uint64_t sub_1ABF30E50()
{
  return MEMORY[0x1E0DB3EE0]();
}

uint64_t sub_1ABF30E5C()
{
  return MEMORY[0x1E0DB3EE8]();
}

uint64_t sub_1ABF30E68()
{
  return MEMORY[0x1E0DB3EF0]();
}

uint64_t sub_1ABF30E74()
{
  return MEMORY[0x1E0DB4010]();
}

uint64_t sub_1ABF30E80()
{
  return MEMORY[0x1E0DB4018]();
}

uint64_t sub_1ABF30E8C()
{
  return MEMORY[0x1E0DB4020]();
}

uint64_t sub_1ABF30E98()
{
  return MEMORY[0x1E0DB4038]();
}

uint64_t sub_1ABF30EA4()
{
  return MEMORY[0x1E0DB4040]();
}

uint64_t sub_1ABF30EB0()
{
  return MEMORY[0x1E0DB4048]();
}

uint64_t sub_1ABF30EBC()
{
  return MEMORY[0x1E0DB4058]();
}

uint64_t sub_1ABF30EC8()
{
  return MEMORY[0x1E0DB4100]();
}

uint64_t sub_1ABF30ED4()
{
  return MEMORY[0x1E0DB4120]();
}

uint64_t sub_1ABF30EE0()
{
  return MEMORY[0x1E0DB4198]();
}

uint64_t sub_1ABF30EEC()
{
  return MEMORY[0x1E0DB41C0]();
}

uint64_t sub_1ABF30EF8()
{
  return MEMORY[0x1E0DB42B8]();
}

uint64_t sub_1ABF30F04()
{
  return MEMORY[0x1E0DB42D0]();
}

uint64_t sub_1ABF30F10()
{
  return MEMORY[0x1E0DB42D8]();
}

uint64_t sub_1ABF30F1C()
{
  return MEMORY[0x1E0DB42E0]();
}

uint64_t sub_1ABF30F28()
{
  return MEMORY[0x1E0DB4338]();
}

uint64_t sub_1ABF30F34()
{
  return MEMORY[0x1E0DB4348]();
}

uint64_t sub_1ABF30F40()
{
  return MEMORY[0x1E0DB43B0]();
}

uint64_t sub_1ABF30F4C()
{
  return MEMORY[0x1E0DB43B8]();
}

uint64_t sub_1ABF30F58()
{
  return MEMORY[0x1E0DB4418]();
}

uint64_t sub_1ABF30F64()
{
  return MEMORY[0x1E0DB44D0]();
}

uint64_t sub_1ABF30F70()
{
  return MEMORY[0x1E0DB44E0]();
}

uint64_t sub_1ABF30F7C()
{
  return MEMORY[0x1E0DB44E8]();
}

uint64_t sub_1ABF30F88()
{
  return MEMORY[0x1E0DB4548]();
}

uint64_t sub_1ABF30F94()
{
  return MEMORY[0x1E0DB4558]();
}

uint64_t sub_1ABF30FA0()
{
  return MEMORY[0x1E0DB45C8]();
}

uint64_t sub_1ABF30FAC()
{
  return MEMORY[0x1E0DB45D0]();
}

uint64_t sub_1ABF30FB8()
{
  return MEMORY[0x1E0DB45F8]();
}

uint64_t sub_1ABF30FC4()
{
  return MEMORY[0x1E0DB4600]();
}

uint64_t sub_1ABF30FD0()
{
  return MEMORY[0x1E0DB4610]();
}

uint64_t sub_1ABF30FDC()
{
  return MEMORY[0x1E0DB4678]();
}

uint64_t sub_1ABF30FE8()
{
  return MEMORY[0x1E0DB4680]();
}

uint64_t sub_1ABF30FF4()
{
  return MEMORY[0x1E0DB4688]();
}

uint64_t sub_1ABF31000()
{
  return MEMORY[0x1E0DB4698]();
}

uint64_t sub_1ABF3100C()
{
  return MEMORY[0x1E0DB46B8]();
}

uint64_t sub_1ABF31018()
{
  return MEMORY[0x1E0DB46E8]();
}

uint64_t sub_1ABF31024()
{
  return MEMORY[0x1E0DB4758]();
}

uint64_t sub_1ABF31030()
{
  return MEMORY[0x1E0DB4798]();
}

uint64_t sub_1ABF3103C()
{
  return MEMORY[0x1E0DB47C0]();
}

uint64_t sub_1ABF31048()
{
  return MEMORY[0x1E0DB48B0]();
}

uint64_t sub_1ABF31054()
{
  return MEMORY[0x1E0DB48F0]();
}

uint64_t sub_1ABF31060()
{
  return MEMORY[0x1E0DB48F8]();
}

uint64_t sub_1ABF3106C()
{
  return MEMORY[0x1E0DB4900]();
}

uint64_t sub_1ABF31078()
{
  return MEMORY[0x1E0DB4910]();
}

uint64_t sub_1ABF31084()
{
  return MEMORY[0x1E0DB4918]();
}

uint64_t sub_1ABF31090()
{
  return MEMORY[0x1E0DB4928]();
}

uint64_t sub_1ABF3109C()
{
  return MEMORY[0x1E0DB4988]();
}

uint64_t sub_1ABF310A8()
{
  return MEMORY[0x1E0DB4998]();
}

uint64_t sub_1ABF310B4()
{
  return MEMORY[0x1E0DB49A8]();
}

uint64_t sub_1ABF310C0()
{
  return MEMORY[0x1E0DB49B8]();
}

uint64_t sub_1ABF310CC()
{
  return MEMORY[0x1E0DB49C0]();
}

uint64_t sub_1ABF310D8()
{
  return MEMORY[0x1E0DB49D8]();
}

uint64_t sub_1ABF310E4()
{
  return MEMORY[0x1E0DB49E8]();
}

uint64_t sub_1ABF310F0()
{
  return MEMORY[0x1E0DB49F0]();
}

uint64_t sub_1ABF310FC()
{
  return MEMORY[0x1E0DB4A20]();
}

uint64_t sub_1ABF31108()
{
  return MEMORY[0x1E0DB4AA8]();
}

uint64_t sub_1ABF31114()
{
  return MEMORY[0x1E0DB4AB8]();
}

uint64_t sub_1ABF31120()
{
  return MEMORY[0x1E0DB4B70]();
}

uint64_t sub_1ABF3112C()
{
  return MEMORY[0x1E0DB4B88]();
}

uint64_t sub_1ABF31138()
{
  return MEMORY[0x1E0DB4B90]();
}

uint64_t sub_1ABF31144()
{
  return MEMORY[0x1E0DB4BA0]();
}

uint64_t sub_1ABF31150()
{
  return MEMORY[0x1E0DB4BA8]();
}

uint64_t sub_1ABF3115C()
{
  return MEMORY[0x1E0DB4BC8]();
}

uint64_t sub_1ABF31168()
{
  return MEMORY[0x1E0DB4BF0]();
}

uint64_t sub_1ABF31174()
{
  return MEMORY[0x1E0DB4BF8]();
}

uint64_t sub_1ABF31180()
{
  return MEMORY[0x1E0DB4C00]();
}

uint64_t sub_1ABF3118C()
{
  return MEMORY[0x1E0DB4C08]();
}

uint64_t sub_1ABF31198()
{
  return MEMORY[0x1E0DB4C10]();
}

uint64_t sub_1ABF311A4()
{
  return MEMORY[0x1E0DB4C28]();
}

uint64_t sub_1ABF311B0()
{
  return MEMORY[0x1E0DB4C30]();
}

uint64_t sub_1ABF311BC()
{
  return MEMORY[0x1E0DB4C38]();
}

uint64_t sub_1ABF311C8()
{
  return MEMORY[0x1E0DB4C40]();
}

uint64_t sub_1ABF311D4()
{
  return MEMORY[0x1E0DB4C48]();
}

uint64_t sub_1ABF311E0()
{
  return MEMORY[0x1E0DB4C58]();
}

uint64_t sub_1ABF311EC()
{
  return MEMORY[0x1E0DB4C60]();
}

uint64_t sub_1ABF311F8()
{
  return MEMORY[0x1E0DB4C78]();
}

uint64_t sub_1ABF31204()
{
  return MEMORY[0x1E0DB4C80]();
}

uint64_t sub_1ABF31210()
{
  return MEMORY[0x1E0DB4C88]();
}

uint64_t sub_1ABF3121C()
{
  return MEMORY[0x1E0DB4CB8]();
}

uint64_t sub_1ABF31228()
{
  return MEMORY[0x1E0DB4CC0]();
}

uint64_t sub_1ABF31234()
{
  return MEMORY[0x1E0DB4CD8]();
}

uint64_t sub_1ABF31240()
{
  return MEMORY[0x1E0DB4CF0]();
}

uint64_t sub_1ABF3124C()
{
  return MEMORY[0x1E0DB4D08]();
}

uint64_t sub_1ABF31258()
{
  return MEMORY[0x1E0DB4D20]();
}

uint64_t sub_1ABF31264()
{
  return MEMORY[0x1E0DB4E60]();
}

uint64_t sub_1ABF31270()
{
  return MEMORY[0x1E0DB4E78]();
}

uint64_t sub_1ABF3127C()
{
  return MEMORY[0x1E0DB4E88]();
}

uint64_t sub_1ABF31288()
{
  return MEMORY[0x1E0DB4E90]();
}

uint64_t sub_1ABF31294()
{
  return MEMORY[0x1E0DB4E98]();
}

uint64_t sub_1ABF312A0()
{
  return MEMORY[0x1E0DB4EA0]();
}

uint64_t sub_1ABF312AC()
{
  return MEMORY[0x1E0DB4EB0]();
}

uint64_t sub_1ABF312B8()
{
  return MEMORY[0x1E0DB5038]();
}

uint64_t sub_1ABF312C4()
{
  return MEMORY[0x1E0DB50A8]();
}

uint64_t sub_1ABF312D0()
{
  return MEMORY[0x1E0DB50B8]();
}

uint64_t sub_1ABF312DC()
{
  return MEMORY[0x1E0DB50D0]();
}

uint64_t sub_1ABF312E8()
{
  return MEMORY[0x1E0DB50E8]();
}

uint64_t sub_1ABF312F4()
{
  return MEMORY[0x1E0CA87B0]();
}

uint64_t sub_1ABF31300()
{
  return MEMORY[0x1E0CA87B8]();
}

uint64_t sub_1ABF3130C()
{
  return MEMORY[0x1E0CB1748]();
}

uint64_t sub_1ABF31318()
{
  return MEMORY[0x1E0DF2078]();
}

uint64_t sub_1ABF31324()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1ABF31330()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1ABF3133C()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1ABF31348()
{
  return MEMORY[0x1E0DB2920]();
}

uint64_t sub_1ABF31354()
{
  return MEMORY[0x1E0DB2928]();
}

uint64_t sub_1ABF31360()
{
  return MEMORY[0x1E0DB2930]();
}

uint64_t sub_1ABF3136C()
{
  return MEMORY[0x1E0DB2938]();
}

uint64_t sub_1ABF31378()
{
  return MEMORY[0x1E0DB2940]();
}

uint64_t sub_1ABF31384()
{
  return MEMORY[0x1E0DB2948]();
}

uint64_t sub_1ABF31390()
{
  return MEMORY[0x1E0DB2958]();
}

uint64_t sub_1ABF3139C()
{
  return MEMORY[0x1E0DB2A38]();
}

uint64_t sub_1ABF313A8()
{
  return MEMORY[0x1E0DB2A48]();
}

uint64_t sub_1ABF313B4()
{
  return MEMORY[0x1E0DB2A60]();
}

uint64_t sub_1ABF313C0()
{
  return MEMORY[0x1E0DB2A68]();
}

uint64_t sub_1ABF313CC()
{
  return MEMORY[0x1E0DB2A70]();
}

uint64_t sub_1ABF313D8()
{
  return MEMORY[0x1E0DB2A78]();
}

uint64_t sub_1ABF313E4()
{
  return MEMORY[0x1E0DB2A90]();
}

uint64_t sub_1ABF313F0()
{
  return MEMORY[0x1E0DB2A98]();
}

uint64_t sub_1ABF313FC()
{
  return MEMORY[0x1E0DB2AB0]();
}

uint64_t sub_1ABF31408()
{
  return MEMORY[0x1E0DB2AC0]();
}

uint64_t sub_1ABF31414()
{
  return MEMORY[0x1E0DB2AC8]();
}

uint64_t sub_1ABF31420()
{
  return MEMORY[0x1E0DB2AD0]();
}

uint64_t sub_1ABF3142C()
{
  return MEMORY[0x1E0DB2AE8]();
}

uint64_t sub_1ABF31438()
{
  return MEMORY[0x1E0DB2B08]();
}

uint64_t sub_1ABF31444()
{
  return MEMORY[0x1E0DB2B10]();
}

uint64_t sub_1ABF31450()
{
  return MEMORY[0x1E0DB2B98]();
}

uint64_t sub_1ABF3145C()
{
  return MEMORY[0x1E0DB2C18]();
}

uint64_t sub_1ABF31468()
{
  return MEMORY[0x1E0DB2C20]();
}

uint64_t sub_1ABF31474()
{
  return MEMORY[0x1E0DB2C28]();
}

uint64_t sub_1ABF31480()
{
  return MEMORY[0x1E0DB2C30]();
}

uint64_t sub_1ABF3148C()
{
  return MEMORY[0x1E0DB2C78]();
}

uint64_t sub_1ABF31498()
{
  return MEMORY[0x1E0DB2D60]();
}

uint64_t sub_1ABF314A4()
{
  return MEMORY[0x1E0DB2D90]();
}

uint64_t sub_1ABF314B0()
{
  return MEMORY[0x1E0DB2DB8]();
}

uint64_t sub_1ABF314BC()
{
  return MEMORY[0x1E0DB2DC8]();
}

uint64_t sub_1ABF314C8()
{
  return MEMORY[0x1E0DB2E08]();
}

uint64_t sub_1ABF314D4()
{
  return MEMORY[0x1E0DB2E18]();
}

uint64_t sub_1ABF314E0()
{
  return MEMORY[0x1E0DB2E30]();
}

uint64_t sub_1ABF314EC()
{
  return MEMORY[0x1E0DB2E40]();
}

uint64_t sub_1ABF314F8()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1ABF31504()
{
  return MEMORY[0x1E0C95F08]();
}

uint64_t sub_1ABF31510()
{
  return MEMORY[0x1E0C95F20]();
}

uint64_t sub_1ABF3151C()
{
  return MEMORY[0x1E0C95F28]();
}

uint64_t sub_1ABF31528()
{
  return MEMORY[0x1E0C95F60]();
}

uint64_t sub_1ABF31534()
{
  return MEMORY[0x1E0C95F70]();
}

uint64_t sub_1ABF31540()
{
  return MEMORY[0x1E0C95F88]();
}

uint64_t sub_1ABF3154C()
{
  return MEMORY[0x1E0C95FA8]();
}

uint64_t sub_1ABF31558()
{
  return MEMORY[0x1E0C96238]();
}

uint64_t sub_1ABF31564()
{
  return MEMORY[0x1E0C963B0]();
}

uint64_t sub_1ABF31570()
{
  return MEMORY[0x1E0C963E8]();
}

uint64_t sub_1ABF3157C()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1ABF31588()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1ABF31594()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1ABF315A0()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1ABF315AC()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1ABF315B8()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_1ABF315C4()
{
  return MEMORY[0x1E0DEF598]();
}

uint64_t sub_1ABF315D0()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1ABF315DC()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1ABF315E8()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1ABF315F4()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1ABF31600()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t sub_1ABF3160C()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_1ABF31618()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1ABF31624()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1ABF31630()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1ABF3163C()
{
  return MEMORY[0x1E0DB5108]();
}

uint64_t sub_1ABF31648()
{
  return MEMORY[0x1E0DB5118]();
}

uint64_t sub_1ABF31654()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t sub_1ABF31660()
{
  return MEMORY[0x1E0DE9E90]();
}

uint64_t sub_1ABF3166C()
{
  return MEMORY[0x1E0DE9EC0]();
}

uint64_t sub_1ABF31678()
{
  return MEMORY[0x1E0DE9F58]();
}

uint64_t sub_1ABF31684()
{
  return MEMORY[0x1E0DEA038]();
}

uint64_t sub_1ABF31690()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1ABF3169C()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1ABF316A8()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1ABF316B4()
{
  return MEMORY[0x1E0DB5140]();
}

uint64_t sub_1ABF316C0()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1ABF316CC()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1ABF316D8()
{
  return MEMORY[0x1E0DEA2A8]();
}

uint64_t sub_1ABF316E4()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1ABF316F0()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1ABF316FC()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1ABF31708()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t sub_1ABF31714()
{
  return MEMORY[0x1E0DEA4B0]();
}

uint64_t sub_1ABF31720()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1ABF3172C()
{
  return MEMORY[0x1E0C91C98]();
}

uint64_t sub_1ABF31738()
{
  return MEMORY[0x1E0CB18A0]();
}

uint64_t sub_1ABF31744()
{
  return MEMORY[0x1E0CB18C0]();
}

uint64_t sub_1ABF31750()
{
  return MEMORY[0x1E0CB18D8]();
}

uint64_t sub_1ABF3175C()
{
  return MEMORY[0x1E0CB18E0]();
}

uint64_t sub_1ABF31768()
{
  return MEMORY[0x1E0CB18E8]();
}

uint64_t sub_1ABF31774()
{
  return MEMORY[0x1E0CB18F8]();
}

uint64_t sub_1ABF31780()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1ABF3178C()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1ABF31798()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1ABF317A4()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1ABF317B0()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1ABF317BC()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1ABF317C8()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1ABF317D4()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1ABF317E0()
{
  return MEMORY[0x1E0CB1A30]();
}

uint64_t sub_1ABF317EC()
{
  return MEMORY[0x1E0CB1A40]();
}

uint64_t sub_1ABF317F8()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1ABF31804()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1ABF31810()
{
  return MEMORY[0x1E0DEA628]();
}

uint64_t sub_1ABF3181C()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1ABF31828()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_1ABF31834()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1ABF31840()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1ABF3184C()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1ABF31858()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1ABF31864()
{
  return MEMORY[0x1E0DEA7D8]();
}

uint64_t sub_1ABF31870()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1ABF3187C()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1ABF31888()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1ABF31894()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1ABF318A0()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1ABF318AC()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1ABF318B8()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1ABF318C4()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1ABF318D0()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1ABF318DC()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1ABF318E8()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1ABF318F4()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1ABF31900()
{
  return MEMORY[0x1E0DB51C8]();
}

uint64_t sub_1ABF3190C()
{
  return MEMORY[0x1E0DB51E8]();
}

uint64_t sub_1ABF31918()
{
  return MEMORY[0x1E0DEAA68]();
}

uint64_t sub_1ABF31924()
{
  return MEMORY[0x1E0DEAAB0]();
}

uint64_t sub_1ABF31930()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_1ABF3193C()
{
  return MEMORY[0x1E0DEAB20]();
}

uint64_t sub_1ABF31948()
{
  return MEMORY[0x1E0DEAB30]();
}

uint64_t sub_1ABF31954()
{
  return MEMORY[0x1E0DEABB0]();
}

uint64_t sub_1ABF31960()
{
  return MEMORY[0x1E0DB5960]();
}

uint64_t sub_1ABF3196C()
{
  return MEMORY[0x1E0DB5968]();
}

uint64_t sub_1ABF31978()
{
  return MEMORY[0x1E0DB5970]();
}

uint64_t sub_1ABF31984()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1ABF31990()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1ABF3199C()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1ABF319A8()
{
  return MEMORY[0x1E0DEAD00]();
}

uint64_t sub_1ABF319B4()
{
  return MEMORY[0x1E0DEAD08]();
}

uint64_t sub_1ABF319C0()
{
  return MEMORY[0x1E0DEAD10]();
}

uint64_t sub_1ABF319CC()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1ABF319D8()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1ABF319E4()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1ABF319F0()
{
  return MEMORY[0x1E0C91CB8]();
}

uint64_t sub_1ABF319FC()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1ABF31A08()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1ABF31A14()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1ABF31A20()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1ABF31A2C()
{
  return MEMORY[0x1E0DB5220]();
}

uint64_t sub_1ABF31A38()
{
  return MEMORY[0x1E0DB5228]();
}

uint64_t sub_1ABF31A44()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1ABF31A50()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1ABF31A5C()
{
  return MEMORY[0x1E0DEADF8]();
}

uint64_t sub_1ABF31A68()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1ABF31A74()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1ABF31A80()
{
  return MEMORY[0x1E0DEAE40]();
}

uint64_t sub_1ABF31A8C()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1ABF31A98()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1ABF31AA4()
{
  return MEMORY[0x1E0C91CF8]();
}

uint64_t sub_1ABF31AB0()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1ABF31ABC()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1ABF31AC8()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1ABF31AD4()
{
  return MEMORY[0x1E0DF05D8]();
}

uint64_t sub_1ABF31AE0()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_1ABF31AEC()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_1ABF31AF8()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1ABF31B04()
{
  return MEMORY[0x1E0DEB110]();
}

uint64_t sub_1ABF31B10()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1ABF31B1C()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1ABF31B28()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1ABF31B34()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1ABF31B40()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_1ABF31B4C()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1ABF31B58()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1ABF31B64()
{
  return MEMORY[0x1E0DB5320]();
}

uint64_t sub_1ABF31B70()
{
  return MEMORY[0x1E0DF1FC0]();
}

uint64_t sub_1ABF31B7C()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1ABF31B88()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1ABF31B94()
{
  return MEMORY[0x1E0DEB620]();
}

uint64_t sub_1ABF31BA0()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1ABF31BAC()
{
  return MEMORY[0x1E0DB5338]();
}

uint64_t sub_1ABF31BB8()
{
  return MEMORY[0x1E0DEB848]();
}

uint64_t sub_1ABF31BC4()
{
  return MEMORY[0x1E0CB1CA0]();
}

uint64_t sub_1ABF31BD0()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1ABF31BDC()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1ABF31BE8()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1ABF31BF4()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1ABF31C00()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1ABF31C0C()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t sub_1ABF31C18()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1ABF31C24()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1ABF31C30()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1ABF31C3C()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1ABF31C48()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1ABF31C54()
{
  return MEMORY[0x1E0DEF938]();
}

uint64_t sub_1ABF31C60()
{
  return MEMORY[0x1E0DEF978]();
}

uint64_t sub_1ABF31C6C()
{
  return MEMORY[0x1E0DEF9A0]();
}

uint64_t sub_1ABF31C78()
{
  return MEMORY[0x1E0DEF9B0]();
}

uint64_t sub_1ABF31C84()
{
  return MEMORY[0x1E0DEF9D8]();
}

uint64_t sub_1ABF31C90()
{
  return MEMORY[0x1E0DEF9F0]();
}

uint64_t sub_1ABF31C9C()
{
  return MEMORY[0x1E0DEFA18]();
}

uint64_t sub_1ABF31CA8()
{
  return MEMORY[0x1E0DEFA20]();
}

uint64_t sub_1ABF31CB4()
{
  return MEMORY[0x1E0DEFA30]();
}

uint64_t sub_1ABF31CC0()
{
  return MEMORY[0x1E0D58200]();
}

uint64_t sub_1ABF31CCC()
{
  return MEMORY[0x1E0D58208]();
}

uint64_t sub_1ABF31CD8()
{
  return MEMORY[0x1E0C94620]();
}

uint64_t sub_1ABF31CE4()
{
  return MEMORY[0x1E0DEFAB0]();
}

uint64_t sub_1ABF31CF0()
{
  return MEMORY[0x1E0CB1FF0]();
}

uint64_t sub_1ABF31CFC()
{
  return MEMORY[0x1E0C94678]();
}

uint64_t sub_1ABF31D08()
{
  return MEMORY[0x1E0C94680]();
}

uint64_t sub_1ABF31D14()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1ABF31D20()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1ABF31D2C()
{
  return MEMORY[0x1E0DEFCF0]();
}

uint64_t sub_1ABF31D38()
{
  return MEMORY[0x1E0CB22C0]();
}

uint64_t sub_1ABF31D44()
{
  return MEMORY[0x1E0DF22B8]();
}

uint64_t sub_1ABF31D50()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_1ABF31D5C()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1ABF31D68()
{
  return MEMORY[0x1E0DEBA00]();
}

uint64_t sub_1ABF31D74()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1ABF31D80()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1ABF31D8C()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1ABF31D98()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1ABF31DA4()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1ABF31DB0()
{
  return MEMORY[0x1E0CB24B0]();
}

uint64_t sub_1ABF31DBC()
{
  return MEMORY[0x1E0CB24B8]();
}

uint64_t sub_1ABF31DC8()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1ABF31DD4()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1ABF31DE0()
{
  return MEMORY[0x1E0DEBFE8]();
}

uint64_t sub_1ABF31DEC()
{
  return MEMORY[0x1E0DEC010]();
}

uint64_t sub_1ABF31DF8()
{
  return MEMORY[0x1E0DEC058]();
}

uint64_t sub_1ABF31E04()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1ABF31E10()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1ABF31E1C()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1ABF31E28()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1ABF31E34()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1ABF31E40()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1ABF31E4C()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1ABF31E58()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1ABF31E64()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1ABF31E70()
{
  return MEMORY[0x1E0DEC268]();
}

uint64_t sub_1ABF31E7C()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_1ABF31E88()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1ABF31E94()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1ABF31EA0()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1ABF31EAC()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1ABF31EB8()
{
  return MEMORY[0x1E0DEC408]();
}

uint64_t sub_1ABF31EC4()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1ABF31ED0()
{
  return MEMORY[0x1E0DEC488]();
}

uint64_t sub_1ABF31EDC()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1ABF31EE8()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1ABF31EF4()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1ABF31F00()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1ABF31F0C()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1ABF31F18()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1ABF31F24()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1ABF31F30()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1ABF31F3C()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1ABF31F48()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1ABF31F54()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1ABF31F60()
{
  return MEMORY[0x1E0DEC808]();
}

uint64_t sub_1ABF31F6C()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1ABF31F78()
{
  return MEMORY[0x1E0DEC980]();
}

uint64_t sub_1ABF31F84()
{
  return MEMORY[0x1E0DEC990]();
}

uint64_t sub_1ABF31F90()
{
  return MEMORY[0x1E0DECB40]();
}

uint64_t sub_1ABF31F9C()
{
  return MEMORY[0x1E0DECB80]();
}

uint64_t sub_1ABF31FA8()
{
  return MEMORY[0x1E0DECBA8]();
}

uint64_t sub_1ABF31FB4()
{
  return MEMORY[0x1E0DECBB8]();
}

uint64_t sub_1ABF31FC0()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1ABF31FCC()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1ABF31FD8()
{
  return MEMORY[0x1E0DECC58]();
}

uint64_t sub_1ABF31FE4()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1ABF31FF0()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1ABF31FFC()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1ABF32008()
{
  return MEMORY[0x1E0DECD48]();
}

uint64_t sub_1ABF32014()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1ABF32020()
{
  return MEMORY[0x1E0DECD58]();
}

uint64_t sub_1ABF3202C()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1ABF32038()
{
  return MEMORY[0x1E0DECD78]();
}

uint64_t sub_1ABF32044()
{
  return MEMORY[0x1E0DECDA0]();
}

uint64_t sub_1ABF32050()
{
  return MEMORY[0x1E0DECDA8]();
}

uint64_t sub_1ABF3205C()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1ABF32068()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1ABF32074()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1ABF32080()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1ABF3208C()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1ABF32098()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1ABF320A4()
{
  return MEMORY[0x1E0DECF68]();
}

uint64_t sub_1ABF320B0()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1ABF320BC()
{
  return MEMORY[0x1E0DECF80]();
}

uint64_t sub_1ABF320C8()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1ABF320D4()
{
  return MEMORY[0x1E0DECFA0]();
}

uint64_t sub_1ABF320E0()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1ABF320EC()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1ABF320F8()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1ABF32104()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1ABF32110()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1ABF3211C()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1ABF32128()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1ABF32134()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1ABF32140()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1ABF3214C()
{
  return MEMORY[0x1E0DED098]();
}

uint64_t sub_1ABF32158()
{
  return MEMORY[0x1E0DED0A0]();
}

uint64_t sub_1ABF32164()
{
  return MEMORY[0x1E0DED0B0]();
}

uint64_t sub_1ABF32170()
{
  return MEMORY[0x1E0DED0B8]();
}

uint64_t sub_1ABF3217C()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1ABF32188()
{
  return MEMORY[0x1E0DED0D0]();
}

uint64_t sub_1ABF32194()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1ABF321A0()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1ABF321AC()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1ABF321B8()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1ABF321C4()
{
  return MEMORY[0x1E0DED118]();
}

uint64_t sub_1ABF321D0()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1ABF321DC()
{
  return MEMORY[0x1E0DED140]();
}

uint64_t sub_1ABF321E8()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1ABF321F4()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1ABF32200()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1ABF3220C()
{
  return MEMORY[0x1E0DED4A0]();
}

uint64_t sub_1ABF32218()
{
  return MEMORY[0x1E0DED530]();
}

uint64_t sub_1ABF32224()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1ABF32230()
{
  return MEMORY[0x1E0DED5F8]();
}

uint64_t sub_1ABF3223C()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1ABF32248()
{
  return MEMORY[0x1E0DED628]();
}

uint64_t sub_1ABF32254()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1ABF32260()
{
  return MEMORY[0x1E0DED788]();
}

uint64_t sub_1ABF3226C()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1ABF32278()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1ABF32284()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_1ABF32290()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1ABF3229C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1ABF322A8()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1ABF322B4()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1ABF322C0()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1ABF322CC()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1ABF322D8()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1ABF322E4()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1ABF322F0()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1ABF322FC()
{
  return MEMORY[0x1E0CB2688]();
}

uint64_t sub_1ABF32308()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1ABF32314()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1ABF32320()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1ABF3232C()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1ABF32338()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1ABF32344()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1ABF32350()
{
  return MEMORY[0x1E0DEE238]();
}

uint64_t sub_1ABF3235C()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1ABF32368()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1ABF32374()
{
  return MEMORY[0x1E0DEE298]();
}

uint64_t sub_1ABF32380()
{
  return MEMORY[0x1E0DEE750]();
}

uint64_t sub_1ABF3238C()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1ABF32398()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1ABF323A4()
{
  return MEMORY[0x1E0DEE8F8]();
}

uint64_t sub_1ABF323B0()
{
  return MEMORY[0x1E0DEE978]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x1E0CD2388]();
  return result;
}

void CCHmac(CCHmacAlgorithm algorithm, const void *key, size_t keyLength, const void *data, size_t dataLength, void *macOut)
{
  MEMORY[0x1E0C801D8](*(_QWORD *)&algorithm, key, keyLength, data, dataLength, macOut);
}

CFStringRef CFURLCreateStringByAddingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1E0C993F8](allocator, originalString, charactersToLeaveUnescaped, legalURLCharactersToBeEscaped, *(_QWORD *)&encoding);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9BB10](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1E0C9BB20](context);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

size_t CGColorSpaceGetNumberOfComponents(CGColorSpaceRef space)
{
  return MEMORY[0x1E0C9BED8](space);
}

void CGContextDrawPDFPage(CGContextRef c, CGPDFPageRef page)
{
  MEMORY[0x1E0C9C1A0](c, page);
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C220](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
  MEMORY[0x1E0C9C390](c, sx, sy);
}

void CGContextSetGrayFillColor(CGContextRef c, CGFloat gray, CGFloat alpha)
{
  MEMORY[0x1E0C9C448](c, gray, alpha);
}

CGDataProviderRef CGDataProviderCreateWithCFData(CFDataRef data)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9C5F0](data);
}

CGImageRef CGImageCreateWithJPEGDataProvider(CGDataProviderRef source, const CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent)
{
  return (CGImageRef)MEMORY[0x1E0C9CBB8](source, decode, shouldInterpolate, *(_QWORD *)&intent);
}

CGImageRef CGImageCreateWithPNGDataProvider(CGDataProviderRef source, const CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent)
{
  return (CGImageRef)MEMORY[0x1E0C9CBD0](source, decode, shouldInterpolate, *(_QWORD *)&intent);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9CC20](image);
}

CGPDFDocumentRef CGPDFDocumentCreateWithProvider(CGDataProviderRef provider)
{
  return (CGPDFDocumentRef)MEMORY[0x1E0C9CF58](provider);
}

CGPDFPageRef CGPDFDocumentGetPage(CGPDFDocumentRef document, size_t pageNumber)
{
  return (CGPDFPageRef)MEMORY[0x1E0C9CFA0](document, pageNumber);
}

CGRect CGPDFPageGetBoxRect(CGPDFPageRef page, CGPDFBox box)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D090](page, *(_QWORD *)&box);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

uint64_t FCAnalyticsEnvelopeContentTypeConfigsByContentType()
{
  return MEMORY[0x1E0D58230]();
}

uint64_t FCAssignHeadlineMetadata()
{
  return MEMORY[0x1E0D58248]();
}

uint64_t FCEndpointEnvironmentForEnvironment()
{
  return MEMORY[0x1E0D58438]();
}

uint64_t FCPermanentURLForRecordID()
{
  return MEMORY[0x1E0D586F0]();
}

uint64_t FCURLForContainerizedUserAccountCachesDirectory()
{
  return MEMORY[0x1E0D58850]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1E0CB3178](directory, domainMask, expandTilde);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFPreferencesSetBackupDisabled()
{
  return MEMORY[0x1E0C9A380]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x1E0C80AC8](a1);
  return result;
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x1E0DE7960]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x1E0DE7970]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1E0DEE9F8]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1E0DEEA50]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1E0C81588](*(_QWORD *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1E0C82C60](flags, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_merge_data(dispatch_source_t source, uintptr_t value)
{
  MEMORY[0x1E0C82F40](source, value);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F48](source, handler);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_suspend(dispatch_object_t object)
{
  MEMORY[0x1E0C82F88](object);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

long double exp2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83288](__x);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C83840](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x1E0C84480](a1, *(_QWORD *)&a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C84BB8](__x, __y);
  return result;
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C853A0](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x1E0DF0F68]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x1E0DF0F70]();
}

uint64_t swift_asyncLet_get()
{
  return MEMORY[0x1E0DF0F78]();
}

uint64_t swift_asyncLet_get_throwing()
{
  return MEMORY[0x1E0DF0F80]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getAtPartialKeyPath()
{
  return MEMORY[0x1E0DEEC20]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x1E0DEEC58]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1E0DEEC60]();
}

uint64_t swift_getExtendedExistentialTypeMetadata()
{
  return MEMORY[0x1E0DEEC68]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x1E0DEEC98]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1E0DEED80]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return MEMORY[0x1E0DEEEF8]();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return MEMORY[0x1E0DEEF00]();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return MEMORY[0x1E0DEEF08]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t ucnv_close()
{
  return MEMORY[0x1E0DE5E98]();
}

uint64_t ucnv_fromUChars()
{
  return MEMORY[0x1E0DE5EC0]();
}

uint64_t ucnv_getMaxCharSize()
{
  return MEMORY[0x1E0DE5F00]();
}

uint64_t ucnv_open()
{
  return MEMORY[0x1E0DE5F20]();
}

uint64_t unum_close()
{
  return MEMORY[0x1E0DE6530]();
}

uint64_t unum_formatInt64()
{
  return MEMORY[0x1E0DE6560]();
}

uint64_t unum_open()
{
  return MEMORY[0x1E0DE6598]();
}

uint64_t unum_setAttribute()
{
  return MEMORY[0x1E0DE65C8]();
}

uint64_t uscript_hasScript()
{
  return MEMORY[0x1E0DE68B0]();
}

