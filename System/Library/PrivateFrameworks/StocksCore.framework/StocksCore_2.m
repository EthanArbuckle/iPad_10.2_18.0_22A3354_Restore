uint64_t sub_1ABE30988(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE30990(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE30998);
  return result;
}

uint64_t sub_1ABE309A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE309ACLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1ABE309B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE309B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys;
}

uint64_t _s10StocksCore16SDSQuoteResponseV25SDSQuoteResponseChartItemV14TimeZoneOffsetV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABE30A40 + 4 * byte_1ABF407B9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABE30A74 + 4 * byte_1ABF407B4[v4]))();
}

uint64_t sub_1ABE30A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE30A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE30A84);
  return result;
}

uint64_t sub_1ABE30A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE30A98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABE30A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE30AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys;
}

unint64_t sub_1ABE30AC4()
{
  unint64_t result;

  result = qword_1EEC43988;
  if (!qword_1EEC43988)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41A74, &type metadata for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43988);
  }
  return result;
}

unint64_t sub_1ABE30B0C()
{
  unint64_t result;

  result = qword_1EEC43990;
  if (!qword_1EEC43990)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41B2C, &type metadata for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43990);
  }
  return result;
}

unint64_t sub_1ABE30B54()
{
  unint64_t result;

  result = qword_1EEC43998;
  if (!qword_1EEC43998)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41C1C, &type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43998);
  }
  return result;
}

unint64_t sub_1ABE30B9C()
{
  unint64_t result;

  result = qword_1EEC439A0;
  if (!qword_1EEC439A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41D0C, &type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC439A0);
  }
  return result;
}

unint64_t sub_1ABE30BE4()
{
  unint64_t result;

  result = qword_1ED3469B0;
  if (!qword_1ED3469B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41C44, &type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3469B0);
  }
  return result;
}

unint64_t sub_1ABE30C2C()
{
  unint64_t result;

  result = qword_1ED3469A8;
  if (!qword_1ED3469A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41C6C, &type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3469A8);
  }
  return result;
}

unint64_t sub_1ABE30C74()
{
  unint64_t result;

  result = qword_1ED346990;
  if (!qword_1ED346990)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41B54, &type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346990);
  }
  return result;
}

unint64_t sub_1ABE30CBC()
{
  unint64_t result;

  result = qword_1ED346988;
  if (!qword_1ED346988)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41B7C, &type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346988);
  }
  return result;
}

unint64_t sub_1ABE30D04()
{
  unint64_t result;

  result = qword_1EEC439A8;
  if (!qword_1EEC439A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41A9C, &type metadata for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC439A8);
  }
  return result;
}

unint64_t sub_1ABE30D4C()
{
  unint64_t result;

  result = qword_1EEC439B0;
  if (!qword_1EEC439B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41AC4, &type metadata for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC439B0);
  }
  return result;
}

unint64_t sub_1ABE30D94()
{
  unint64_t result;

  result = qword_1EEC439B8;
  if (!qword_1EEC439B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF419E4, &type metadata for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC439B8);
  }
  return result;
}

unint64_t sub_1ABE30DDC()
{
  unint64_t result;

  result = qword_1EEC439C0;
  if (!qword_1EEC439C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41A0C, &type metadata for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC439C0);
  }
  return result;
}

uint64_t sub_1ABE30E20@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13)
{
  unint64_t v14;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v14 = a13;
  v16 = a11;
  if (a2)
    v17 = a1;
  else
    v17 = 0;
  v18 = 0xE000000000000000;
  if (a2)
    v19 = a2;
  else
    v19 = 0xE000000000000000;
  if (a4)
    v20 = a3;
  else
    v20 = 0;
  if (a4)
    v18 = a4;
  if (a6)
    result = a5;
  else
    result = 0x464646464646;
  *a9 = v17;
  a9[1] = v19;
  if (a6)
    v22 = a6;
  else
    v22 = 0xE600000000000000;
  a9[2] = v20;
  a9[3] = v18;
  if (a8)
    v23 = a7;
  else
    v23 = 0x303030303030;
  if (a8)
    v24 = a8;
  else
    v24 = 0xE600000000000000;
  a9[4] = result;
  a9[5] = v22;
  if (!a11)
  {
    a10 = 0x464646464646;
    v16 = 0xE600000000000000;
  }
  a9[6] = v23;
  a9[7] = v24;
  if (!a13)
    a12 = 0x303030303030;
  a9[8] = a10;
  a9[9] = v16;
  if (!a13)
    v14 = 0xE600000000000000;
  a9[10] = a12;
  a9[11] = v14;
  return result;
}

uint64_t sub_1ABE30EA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE30ED4 + 4 * byte_1ABF41E80[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1ABE30ED4()
{
  return 0x6C6562616CLL;
}

uint64_t sub_1ABE30EE8()
{
  return 0x756F72676B636162;
}

unint64_t sub_1ABE30F18()
{
  return 0xD000000000000018;
}

uint64_t sub_1ABE30F40(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE30F6C + 4 * byte_1ABF41E86[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1ABE30F6C()
{
  return 0x6C6562616CLL;
}

uint64_t sub_1ABE30F80()
{
  return 0x756F72676B636162;
}

unint64_t sub_1ABE30FB0()
{
  return 0xD000000000000018;
}

void sub_1ABE30FD8(char *a1)
{
  sub_1ABDE12D8(*a1);
}

void sub_1ABE30FE4()
{
  char *v0;

  sub_1ABF0F880(*v0);
}

void sub_1ABE30FEC(uint64_t a1)
{
  char *v1;

  sub_1ABD98E18(a1, *v1);
}

void sub_1ABE30FF4(uint64_t a1)
{
  char *v1;

  sub_1ABF10900(a1, *v1);
}

uint64_t sub_1ABE30FFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE32458();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE31028@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABE30EA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE31050()
{
  unsigned __int8 *v0;

  return sub_1ABE30F40(*v0);
}

uint64_t sub_1ABE31058@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE32458();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE3107C()
{
  sub_1ABE31AEC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE310A4()
{
  sub_1ABE31AEC();
  return sub_1ABF32398();
}

uint64_t sub_1ABE310CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  unint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t *v75;
  char v76;
  _QWORD *v77;

  sub_1ABE31F48(0, &qword_1ED34FEC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v62 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE31AEC();
  sub_1ABF3235C();
  if (!v2)
  {
    v77 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v76 = 0;
    sub_1ABF320C8();
    v10 = (unint64_t)v75;
    v72 = v74;
    if (v75)
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v73 = a2;
      swift_beginAccess();
      v11 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v13 = v11[2];
      v12 = v11[3];
      if (v13 >= v12 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
      v11[2] = v13 + 1;
      v14 = &v11[2 * v13];
      v14[4] = 1701869940;
      v14[5] = 0xE400000000000000;
      v77 = v11;
      swift_endAccess();
      v10 = 0;
      a2 = v73;
    }
    v76 = 1;
    sub_1ABF320C8();
    v70 = v74;
    v71 = (unint64_t)v75;
    if (!v75)
    {
      v73 = a2;
      swift_beginAccess();
      v11 = v77;
      v15 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v17 = v11[2];
      v16 = v11[3];
      if (v17 >= v16 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v16 > 1), v17 + 1, 1, v11);
      v11[2] = v17 + 1;
      v18 = &v11[2 * v17];
      v18[4] = 0x6C6562616CLL;
      v18[5] = 0xE500000000000000;
      v77 = v11;
      swift_endAccess();
      v10 = v15;
      a2 = v73;
    }
    v76 = 2;
    sub_1ABF320C8();
    v68 = v74;
    v69 = (unint64_t)v75;
    if (!v75)
    {
      v73 = a2;
      swift_beginAccess();
      v11 = v77;
      v19 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v21 = v11[2];
      v20 = v11[3];
      if (v21 >= v20 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v20 > 1), v21 + 1, 1, v11);
      v11[2] = v21 + 1;
      v22 = &v11[2 * v21];
      v22[4] = 0x756F72676B636162;
      v22[5] = 0xEF726F6C6F43646ELL;
      v77 = v11;
      swift_endAccess();
      v10 = v19;
      a2 = v73;
    }
    v76 = 3;
    sub_1ABF320C8();
    v66 = v74;
    v67 = (unint64_t)v75;
    if (!v75)
    {
      v73 = a2;
      swift_beginAccess();
      v11 = v77;
      v23 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v25 = v11[2];
      v24 = v11[3];
      if (v25 >= v24 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v24 > 1), v25 + 1, 1, v11);
      v11[2] = v25 + 1;
      v26 = &v11[2 * v25];
      v26[4] = 0x756F726765726F66;
      v26[5] = 0xEF726F6C6F43646ELL;
      v77 = v11;
      swift_endAccess();
      v10 = v23;
      a2 = v73;
    }
    v76 = 4;
    sub_1ABF320C8();
    v65 = v74;
    v73 = v75;
    if (!v75)
    {
      swift_beginAccess();
      v11 = v77;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v64 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v29 = v11[2];
      v28 = v11[3];
      if (v29 >= v28 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v28 > 1), v29 + 1, 1, v11);
      v11[2] = v29 + 1;
      v30 = &v11[2 * v29];
      v30[4] = 0xD000000000000018;
      v30[5] = 0x80000001ABF53A20;
      v77 = v11;
      swift_endAccess();
      v10 = v64;
    }
    v76 = 5;
    sub_1ABF320C8();
    v32 = (unint64_t)v75;
    if (v75)
    {
      v63 = v74;
      v33 = v72;
    }
    else
    {
      v62 = 0;
      swift_beginAccess();
      v11 = v77;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v35 = v11[2];
      v34 = v11[3];
      v36 = v35 + 1;
      if (v35 >= v34 >> 1)
      {
        v63 = v35 + 1;
        v61 = sub_1ABD12054((_QWORD *)(v34 > 1), v35 + 1, 1, v11);
        v36 = v63;
        v11 = v61;
      }
      v11[2] = v36;
      v37 = &v11[2 * v35];
      v37[4] = 0xD000000000000018;
      v37[5] = 0x80000001ABF53ED0;
      v77 = v11;
      swift_endAccess();
      v63 = 0x303030303030;
      v33 = v72;
      v32 = v62;
    }
    if (v10)
      v38 = v33;
    else
      v38 = 0;
    v39 = 0xE000000000000000;
    if (v10)
      v40 = v10;
    else
      v40 = 0xE000000000000000;
    v64 = v40;
    v41 = v70;
    if (!v71)
      v41 = 0;
    v70 = v41;
    if (v71)
      v39 = v71;
    v71 = v39;
    v72 = v38;
    v42 = v69;
    v43 = 0x464646464646;
    if (v69)
      v44 = v68;
    else
      v44 = 0x464646464646;
    if (!v69)
      v42 = 0xE600000000000000;
    v68 = v44;
    v69 = v42;
    v46 = v66;
    v45 = v67;
    if (!v67)
    {
      v46 = 0x303030303030;
      v45 = 0xE600000000000000;
    }
    v66 = v46;
    v67 = v45;
    if (v73)
      v43 = v65;
    v65 = v43;
    if (v73)
      v47 = (unint64_t)v73;
    else
      v47 = 0xE600000000000000;
    v73 = (uint64_t *)v47;
    if (v32)
      v48 = v32;
    else
      v48 = 0xE600000000000000;
    v62 = v48;
    v49 = v11[2];
    sub_1ABD0F55C();
    v50 = swift_allocObject();
    if (v49)
    {
      *(_OWORD *)(v50 + 16) = xmmword_1ABF366E0;
      *(_QWORD *)(v50 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v50 + 64) = sub_1ABD0F5C0();
      v51 = v64;
      *(_QWORD *)(v50 + 32) = v72;
      *(_QWORD *)(v50 + 40) = v51;
      sub_1ABD165AC();
      *(_QWORD *)(v50 + 96) = v52;
      *(_QWORD *)(v50 + 104) = sub_1ABD82448();
      *(_QWORD *)(v50 + 72) = v11;
      sub_1ABD19560();
      sub_1ABF2FF5C();
    }
    else
    {
      *(_OWORD *)(v50 + 16) = xmmword_1ABF366C0;
      *(_QWORD *)(v50 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v50 + 64) = sub_1ABD0F5C0();
      v54 = v64;
      *(_QWORD *)(v50 + 32) = v72;
      *(_QWORD *)(v50 + 40) = v54;
      sub_1ABD19560();
    }
    sub_1ABF2FF5C();
    v53 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    v55 = v64;
    *a2 = v72;
    a2[1] = v55;
    v56 = v71;
    a2[2] = v70;
    a2[3] = v56;
    v57 = v69;
    a2[4] = v68;
    a2[5] = v57;
    v58 = v67;
    a2[6] = v66;
    a2[7] = v58;
    v59 = v73;
    a2[8] = v65;
    a2[9] = (uint64_t)v59;
    v60 = v62;
    a2[10] = v63;
    a2[11] = v60;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1ABE31AEC()
{
  unint64_t result;

  result = qword_1ED34F740;
  if (!qword_1ED34F740)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42028, &type metadata for TopStoriesStyleConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F740);
  }
  return result;
}

uint64_t sub_1ABE31B34(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[12];
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  sub_1ABE31F48(0, &qword_1ED34FF80, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v15 - v6;
  v8 = v1[2];
  v15[9] = v1[3];
  v15[10] = v8;
  v9 = v1[4];
  v15[7] = v1[5];
  v15[8] = v9;
  v10 = v1[6];
  v15[5] = v1[7];
  v15[6] = v10;
  v11 = v1[9];
  v15[3] = v1[8];
  v15[4] = v11;
  v12 = v1[10];
  v15[1] = v1[11];
  v15[2] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE31AEC();
  sub_1ABF32368();
  v21 = 0;
  v13 = v15[11];
  sub_1ABF32194();
  if (!v13)
  {
    v20 = 1;
    sub_1ABF32194();
    v19 = 2;
    sub_1ABF32194();
    v18 = 3;
    sub_1ABF32194();
    v17 = 4;
    sub_1ABF32194();
    v16 = 5;
    sub_1ABF32194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABE31D48@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABE310CC(a1, a2);
}

uint64_t sub_1ABE31D5C(_QWORD *a1)
{
  return sub_1ABE31B34(a1);
}

uint64_t sub_1ABE31D74(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v26 = a1[7];
  v27 = a1[6];
  v23 = a1[9];
  v20 = a1[11];
  v21 = a1[10];
  v7 = a2[2];
  v6 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  v11 = a2[6];
  v10 = a2[7];
  v24 = a2[8];
  v25 = a1[8];
  v22 = a2[9];
  v18 = a2[11];
  v19 = a2[10];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_1ABF3223C(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v6 || (v14 = sub_1ABF3223C(), result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v8 || (v15 = sub_1ABF3223C(), result = 0, (v15 & 1) != 0))
      {
        if (v27 == v11 && v26 == v10 || (v16 = sub_1ABF3223C(), result = 0, (v16 & 1) != 0))
        {
          if (v25 == v24 && v23 == v22 || (v17 = sub_1ABF3223C(), result = 0, (v17 & 1) != 0))
          {
            if (v21 == v19 && v20 == v18)
              return 1;
            else
              return sub_1ABF3223C();
          }
        }
      }
    }
  }
  return result;
}

void sub_1ABE31F48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE31AEC();
    v7 = a3(a1, &type metadata for TopStoriesStyleConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t destroy for TopStoriesStyleConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TopStoriesStyleConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for TopStoriesStyleConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

_QWORD *assignWithTake for TopStoriesStyleConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TopStoriesStyleConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TopStoriesStyleConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TopStoriesStyleConfiguration()
{
  return &type metadata for TopStoriesStyleConfiguration;
}

uint64_t storeEnumTagSinglePayload for TopStoriesStyleConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1ABE32300 + 4 * byte_1ABF41E91[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1ABE32334 + 4 * byte_1ABF41E8C[v4]))();
}

uint64_t sub_1ABE32334(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE3233C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE32344);
  return result;
}

uint64_t sub_1ABE32350(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE32358);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1ABE3235C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE32364(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TopStoriesStyleConfiguration.CodingKeys()
{
  return &type metadata for TopStoriesStyleConfiguration.CodingKeys;
}

unint64_t sub_1ABE32384()
{
  unint64_t result;

  result = qword_1EEC439C8;
  if (!qword_1EEC439C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42000, &type metadata for TopStoriesStyleConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC439C8);
  }
  return result;
}

unint64_t sub_1ABE323CC()
{
  unint64_t result;

  result = qword_1ED34F750;
  if (!qword_1ED34F750)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41F38, &type metadata for TopStoriesStyleConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F750);
  }
  return result;
}

unint64_t sub_1ABE32414()
{
  unint64_t result;

  result = qword_1ED34F748;
  if (!qword_1ED34F748)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41F60, &type metadata for TopStoriesStyleConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F748);
  }
  return result;
}

uint64_t sub_1ABE32458()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1ABE324A0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1ABD16414(0, v1, 0);
  v2 = v24;
  result = sub_1ABD0F01C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v20 = v1;
  v21 = v5;
  v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v23 = v7;
    sub_1ABF2FF5C();
    sub_1ABF31870();
    sub_1ABF316D8();
    sub_1ABF31870();
    result = swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v24 + 16);
    v12 = *(_QWORD *)(v24 + 24);
    if (v13 >= v12 >> 1)
      result = sub_1ABD16414(v12 > 1, v13 + 1, 1);
    *(_QWORD *)(v24 + 16) = v13 + 1;
    v14 = v24 + 16 * v13;
    *(_QWORD *)(v14 + 32) = 0;
    *(_QWORD *)(v14 + 40) = 0xE000000000000000;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v15 = *(_QWORD *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21)
      goto LABEL_27;
    v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v20;
    }
    else
    {
      v17 = v11 + 1;
      v18 = (unint64_t)(v9 + 63) >> 6;
      v10 = v20;
      if (v11 + 1 < v18)
      {
        v19 = *(_QWORD *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            v19 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v23 + 1;
    v6 = v9;
    if (v23 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1ABE32704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v31;

  v2 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_18:
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABE32ACC(MEMORY[0x1E0DEE9D8], (uint64_t)v5, v2);
    swift_bridgeObjectRelease();
    v26 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v26);
    sub_1ABD0EF28();
    sub_1ABF3127C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(swift_allocObject() + 16) = v5;
    v27 = (void *)sub_1ABF31114();
    sub_1ABE32E68();
    v28 = sub_1ABF31180();
    swift_release();
    swift_release();

    return v28;
  }
  v4 = (uint64_t *)(sub_1ABF2FF5C() + 40);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v31 = v3;
    v8 = *(v4 - 1);
    v7 = *v4;
    v9 = sub_1ABF31810();
    v11 = v10;
    sub_1ABF2FF5C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = sub_1ABD00F9C(v9, v11);
    v15 = v5[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
      break;
    v18 = v13;
    if (v5[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v13 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1ABE6E690();
        if ((v18 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1ABD0EBF8(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_1ABD00F9C(v9, v11);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_21;
      v14 = v19;
      if ((v18 & 1) != 0)
      {
LABEL_3:
        v6 = (_QWORD *)(v5[7] + 16 * v14);
        swift_bridgeObjectRelease();
        *v6 = v8;
        v6[1] = v7;
        goto LABEL_4;
      }
    }
    v5[(v14 >> 6) + 8] |= 1 << v14;
    v21 = (uint64_t *)(v5[6] + 16 * v14);
    *v21 = v9;
    v21[1] = v11;
    v22 = (_QWORD *)(v5[7] + 16 * v14);
    *v22 = v8;
    v22[1] = v7;
    v23 = v5[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_20;
    v5[2] = v25;
    sub_1ABF2FF5C();
LABEL_4:
    v4 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v31 - 1;
    if (v31 == 1)
    {
      swift_bridgeObjectRelease();
      v2 = a2;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABE329F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a1;
  sub_1ABF2FF5C();
  v6 = sub_1ABE32EE4(MEMORY[0x1E0DEE9E0], v5, a2);
  result = swift_bridgeObjectRelease();
  *a3 = v6;
  return result;
}

uint64_t sub_1ABE32A50()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE32A74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE32A98()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE32ACC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  uint64_t v12;
  uint64_t v14;
  int64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  int64_t v20;
  _QWORD *v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v5 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  result = sub_1ABF2FF5C();
  v11 = 0;
  v21 = (_QWORD *)(a3 + 40);
  v22 = v9;
  v24 = a3;
  v23 = v5;
  if (v8)
    goto LABEL_4;
  while (1)
  {
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v9)
      goto LABEL_34;
    v14 = *(_QWORD *)(v5 + 8 * v11);
    if (v14)
      goto LABEL_16;
    v15 = v11 + 1;
    if (v11 + 1 >= v9)
      goto LABEL_34;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      v15 = v11 + 2;
      if (v11 + 2 >= v9)
        goto LABEL_34;
      v14 = *(_QWORD *)(v5 + 8 * v15);
      if (!v14)
      {
        v15 = v11 + 3;
        if (v11 + 3 >= v9)
          goto LABEL_34;
        v14 = *(_QWORD *)(v5 + 8 * v15);
        if (!v14)
          break;
      }
    }
    v11 = v15;
LABEL_16:
    v8 = (v14 - 1) & v14;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_17:
      v25 = v11;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v16 = v21;
      do
      {
        if (*v16)
        {
          sub_1ABF2FF5C();
          sub_1ABF31870();
          sub_1ABF316D8();
          sub_1ABF31870();
          sub_1ABF316D8();
          sub_1ABF31870();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1ABF31870();
          sub_1ABF316D8();
          sub_1ABF31870();
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a1 = sub_1ABD12054(0, a1[2] + 1, 1, a1);
        v18 = a1[2];
        v17 = a1[3];
        if (v18 >= v17 >> 1)
          a1 = sub_1ABD12054((_QWORD *)(v17 > 1), v18 + 1, 1, a1);
        a1[2] = v18 + 1;
        v19 = &a1[2 * v18];
        v19[4] = 0;
        v19[5] = 0xE000000000000000;
        v16 += 2;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      a3 = v24;
      result = swift_bridgeObjectRelease();
      v11 = v25;
      v9 = v22;
      v5 = v23;
      if (v8)
        goto LABEL_4;
    }
    else
    {
      while (2)
      {
        if (v8)
        {
LABEL_4:
          v8 &= v8 - 1;
          v12 = *(_QWORD *)(a3 + 16);
          if (!v12)
            continue;
          goto LABEL_17;
        }
        break;
      }
    }
  }
  v20 = v11 + 4;
  if (v11 + 4 >= v9)
  {
LABEL_34:
    swift_release();
    return (uint64_t)a1;
  }
  v14 = *(_QWORD *)(v5 + 8 * v20);
  v11 += 4;
  if (v14)
    goto LABEL_16;
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v9)
      goto LABEL_34;
    v14 = *(_QWORD *)(v5 + 8 * v11);
    ++v20;
    if (v14)
      goto LABEL_16;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1ABE32DF4()
{
  sub_1ABD0F114();
  return sub_1ABD0EF8C();
}

uint64_t sub_1ABE32E50@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1ABE329F0(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1ABE32E68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE60)
  {
    sub_1ABD04578(255, (unint64_t *)&unk_1ED34CA88, (uint64_t)&type metadata for StockRecord, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE60);
  }
}

uint64_t sub_1ABE32EE4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  char v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;

  v52 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v53 = (unint64_t)(v3 + 63) >> 6;
  sub_1ABF2FF5C();
  v6 = 0;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v62 = (v5 - 1) & v5;
  v63 = v6;
  for (i = __clz(__rbit64(v5)) | (v6 << 6); ; i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    v12 = *(_QWORD *)(a2 + 56) + 104 * i;
    v13 = *(_QWORD *)v12;
    v14 = *(_QWORD *)(v12 + 8);
    v59 = *(_QWORD *)(v12 + 16);
    v64 = *(_QWORD *)(v12 + 24);
    v15 = *(_QWORD *)(v12 + 40);
    v16 = *(_QWORD *)(v12 + 56);
    v57 = *(_QWORD *)(v12 + 48);
    v58 = *(_QWORD *)(v12 + 32);
    v17 = *(_QWORD *)(v12 + 72);
    v56 = *(_QWORD *)(v12 + 64);
    v55 = *(_BYTE *)(v12 + 80);
    v18 = *(_QWORD *)(v12 + 96);
    v54 = *(_QWORD *)(v12 + 88);
    v19 = sub_1ABF31810();
    v21 = v20;
    if (*(_QWORD *)(a3 + 16))
    {
      v22 = v19;
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v23 = sub_1ABD00F9C(v22, v21);
      if ((v24 & 1) != 0)
      {
        v25 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v23);
        v26 = v25[1];
        v50 = *v25;
        sub_1ABF2FF5C();
        swift_bridgeObjectRelease();
        sub_1ABD04578(0, &qword_1ED34E2D8, (uint64_t)&type metadata for StockRecord, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1ABF366C0;
        *(_QWORD *)(v27 + 32) = v13;
        *(_QWORD *)(v27 + 40) = v14;
        *(_QWORD *)(v27 + 48) = v59;
        *(_QWORD *)(v27 + 56) = v64;
        *(_QWORD *)(v27 + 64) = v58;
        *(_QWORD *)(v27 + 72) = v15;
        *(_QWORD *)(v27 + 80) = v57;
        *(_QWORD *)(v27 + 88) = v16;
        *(_QWORD *)(v27 + 96) = v56;
        *(_QWORD *)(v27 + 104) = v17;
        *(_BYTE *)(v27 + 112) = v55;
        *(_QWORD *)(v27 + 120) = v54;
        *(_QWORD *)(v27 + 128) = v18;
        if (a1[2])
        {
          sub_1ABF2FF5C();
          v28 = v50;
          v29 = sub_1ABD00F9C(v50, v26);
          v30 = MEMORY[0x1E0DEE9D8];
          v31 = v26;
          if ((v32 & 1) != 0)
          {
            v30 = *(_QWORD *)(a1[7] + 8 * v29);
            sub_1ABF2FF5C();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v28 = v50;
          v30 = MEMORY[0x1E0DEE9D8];
          v31 = v26;
        }
        sub_1ABEACBF8(v30);
        v33 = v27;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v36 = sub_1ABD00F9C(v28, v31);
        v37 = a1[2];
        v38 = (v35 & 1) == 0;
        v39 = v37 + v38;
        if (__OFADD__(v37, v38))
          goto LABEL_45;
        if (a1[3] >= v39)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v48 = v35;
            sub_1ABE6F4E0();
            v35 = v48;
          }
        }
        else
        {
          v40 = v35;
          sub_1ABE6B870(v39, isUniquelyReferenced_nonNull_native);
          v41 = sub_1ABD00F9C(v28, v31);
          if ((v40 & 1) != (v42 & 1))
            goto LABEL_47;
          v36 = v41;
          v35 = v40;
        }
        if ((v35 & 1) != 0)
        {
          v43 = a1[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v43 + 8 * v36) = v33;
        }
        else
        {
          a1[(v36 >> 6) + 8] |= 1 << v36;
          v44 = (uint64_t *)(a1[6] + 16 * v36);
          *v44 = v28;
          v44[1] = v31;
          *(_QWORD *)(a1[7] + 8 * v36) = v33;
          v45 = a1[2];
          v46 = __OFADD__(v45, 1);
          v47 = v45 + 1;
          if (v46)
            goto LABEL_46;
          a1[2] = v47;
          sub_1ABF2FF5C();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
    }
    swift_bridgeObjectRelease();
    v5 = v62;
    v6 = v63;
    if (v62)
      goto LABEL_4;
LABEL_5:
    v8 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v8 >= v53)
      goto LABEL_42;
    v9 = *(_QWORD *)(v52 + 8 * v8);
    v10 = v6 + 1;
    if (!v9)
    {
      v10 = v6 + 2;
      if (v6 + 2 >= v53)
        goto LABEL_42;
      v9 = *(_QWORD *)(v52 + 8 * v10);
      if (!v9)
      {
        v10 = v6 + 3;
        if (v6 + 3 >= v53)
          goto LABEL_42;
        v9 = *(_QWORD *)(v52 + 8 * v10);
        if (!v9)
        {
          v10 = v6 + 4;
          if (v6 + 4 >= v53)
            goto LABEL_42;
          v9 = *(_QWORD *)(v52 + 8 * v10);
          if (!v9)
            break;
        }
      }
    }
LABEL_20:
    v62 = (v9 - 1) & v9;
    v63 = v10;
  }
  v11 = v6 + 5;
  if (v6 + 5 >= v53)
  {
LABEL_42:
    swift_release();
    return (uint64_t)a1;
  }
  v9 = *(_QWORD *)(v52 + 8 * v11);
  if (v9)
  {
    v10 = v6 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v10 >= v53)
      goto LABEL_42;
    v9 = *(_QWORD *)(v52 + 8 * v10);
    ++v11;
    if (v9)
      goto LABEL_20;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABE33454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  sub_1ABE36304(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for QuoteDetail();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1ABCFC3BC(a1, (uint64_t (*)(_QWORD))sub_1ABE36304);
    sub_1ABDEFA80(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1ABCFC3BC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1ABE36304);
  }
  else
  {
    sub_1ABCFE2AC(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_1ABDF0E1C((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ABE335B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  sub_1ABE360B4(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for EarningsCalendarEventModel();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1ABCFC3BC(a1, (uint64_t (*)(_QWORD))sub_1ABE360B4);
    sub_1ABDEFF5C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1ABCFC3BC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1ABE360B4);
  }
  else
  {
    sub_1ABCFE2AC(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v4;
    *v4 = 0x8000000000000000;
    sub_1ABDF13C0((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ABE3371C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  sub_1ABE362E8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Chart(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1ABCFC3BC(a1, (uint64_t (*)(_QWORD))sub_1ABE362E8);
    sub_1ABDEFF70(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1ABCFC3BC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1ABE362E8);
  }
  else
  {
    sub_1ABCFE2AC(a1, (uint64_t)v13, type metadata accessor for Chart);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_1ABDF13E4((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ABE33880(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1ABD1F610((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_1ABDF197C(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_1ABF31F84();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1ABD6B430(a1);
    sub_1ABDEFF84(a2, v9);
    v7 = sub_1ABF31F84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_1ABD6B430((uint64_t)v9);
  }
}

uint64_t sub_1ABE33954()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE33980()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE339AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EarningsCalendarEventModel() + 24);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1ABE339F4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656449746E657665;
  if (*v0 != 1)
    v1 = 0x73676E696E726165;
  if (*v0)
    return v1;
  else
    return 0x6D79536B636F7473;
}

uint64_t sub_1ABE33A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE35EA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE33A90()
{
  sub_1ABE33C68();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE33AB8()
{
  sub_1ABE33C68();
  return sub_1ABF32398();
}

uint64_t sub_1ABE33AE0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1ABE33F64(0, &qword_1EEC439D0, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE33C68();
  sub_1ABF32368();
  v9[15] = 0;
  sub_1ABF32194();
  if (!v1)
  {
    v9[14] = 1;
    sub_1ABF32194();
    type metadata accessor for EarningsCalendarEventModel();
    v9[13] = 2;
    sub_1ABF30760();
    sub_1ABCFE22C(&qword_1ED34EAA8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1ABE33C68()
{
  unint64_t result;

  result = qword_1EEC439D8;
  if (!qword_1EEC439D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42364, &type metadata for EarningsCalendarEventModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC439D8);
  }
  return result;
}

uint64_t sub_1ABE33CAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char v30;
  char v31;
  char v32;

  v24 = a2;
  v3 = sub_1ABF30760();
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE33F64(0, &qword_1EEC439E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v27 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - v8;
  v10 = type metadata accessor for EarningsCalendarEventModel();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE33C68();
  v28 = v9;
  v13 = v29;
  sub_1ABF3235C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = v10;
  v14 = v7;
  v29 = v5;
  v16 = v25;
  v15 = v26;
  v32 = 0;
  v17 = (uint64_t)v12;
  *v12 = sub_1ABF320E0();
  v12[1] = v18;
  v31 = 1;
  v12[2] = sub_1ABF320E0();
  v12[3] = v19;
  v30 = 2;
  sub_1ABCFE22C(&qword_1ED34CCC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v20 = v29;
  v22 = 0;
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v27);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v17 + *(int *)(v23 + 24), v20, v15);
  sub_1ABE33FC0(v17, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1ABCFC3BC(v17, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
}

void sub_1ABE33F64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE33C68();
    v7 = a3(a1, &type metadata for EarningsCalendarEventModel.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1ABE33FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EarningsCalendarEventModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABE34004@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE33CAC(a1, a2);
}

uint64_t sub_1ABE34018(_QWORD *a1)
{
  return sub_1ABE33AE0(a1);
}

uint64_t *sub_1ABE3402C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1ABF2FF68();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1ABF30760();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_1ABE340E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1ABE34130(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF30760();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_1ABE341B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1ABE34254(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_1ABE342B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1ABF30760();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1ABE3432C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABE34338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1ABF30760();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1ABE343B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABE343C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1ABF30760();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1ABE34434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1ABE3443C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1ABE34444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t sub_1ABE3444C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1ABE34454()
{
  return sub_1ABE34F4C();
}

uint64_t sub_1ABE34464(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for EarningsCalendarEventModel();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE360B4(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  v13 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v13 + 16))
  {
    sub_1ABF2FF5C();
    v14 = sub_1ABD00F9C(v12, v11);
    if ((v15 & 1) != 0)
    {
      sub_1ABE33FC0(*(_QWORD *)(v13 + 56) + *(_QWORD *)(v5 + 72) * v14, (uint64_t)v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    sub_1ABCFC3BC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1ABE360B4);
    swift_endAccess();
    v16 = 0;
  }
  else
  {
    sub_1ABE33FC0((uint64_t)v10, (uint64_t)v7);
    sub_1ABCFC3BC((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1ABE360B4);
    swift_endAccess();
    v16 = *((_QWORD *)v7 + 2);
    sub_1ABF2FF5C();
    sub_1ABCFC3BC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
  }
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  swift_release();
  return v16;
}

uint64_t sub_1ABE34660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v6 + 16))
  {
    sub_1ABF2FF5C();
    v7 = sub_1ABD00F9C(v5, v4);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = *(_QWORD *)(v6 + 56);
      v11 = type metadata accessor for EarningsCalendarEventModel();
      v12 = *(_QWORD *)(v11 - 8);
      sub_1ABE33FC0(v10 + *(_QWORD *)(v12 + 72) * v9, a2);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    }
    else
    {
      v14 = type metadata accessor for EarningsCalendarEventModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = type metadata accessor for EarningsCalendarEventModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  swift_endAccess();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  return swift_release();
}

uint64_t sub_1ABE347A8(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  void *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[6];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v45 = a4;
  v44 = a3;
  v43 = a2;
  v52 = sub_1ABF31594();
  v55 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v51 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1ABF315D0();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v50 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1ABF315A0();
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE360B4(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for EarningsCalendarEventModel();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v46 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v43 - v17;
  v19 = a1[6];
  v20 = a1[7];
  v21 = a1[4];
  v63 = a1[5];
  v64 = v19;
  v65 = v20;
  v66 = *((_QWORD *)a1 + 16);
  v22 = a1[3];
  v60 = a1[2];
  v61 = v22;
  v62 = v21;
  v23 = a1[1];
  v58 = *a1;
  v59 = v23;
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v24 = v59;
  v25 = &v18[*(int *)(v13 + 24)];
  v26 = sub_1ABF30760();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v25, v43, v26);
  *(_OWORD *)v18 = v24;
  v27 = v45;
  *((_QWORD *)v18 + 2) = v44;
  *((_QWORD *)v18 + 3) = v27;
  sub_1ABE33FC0((uint64_t)v18, (uint64_t)v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  v49 = v4;
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  sub_1ABE335B8((uint64_t)v12, v24, *((uint64_t *)&v24 + 1));
  swift_endAccess();
  sub_1ABD133B8();
  v28 = v47;
  v29 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v9, *MEMORY[0x1E0DEF530], v48);
  v30 = (void *)sub_1ABF31C48();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  v31 = swift_allocObject();
  swift_weakInit();
  v32 = v46;
  sub_1ABE33FC0((uint64_t)v18, v46);
  v33 = (*(unsigned __int8 *)(v14 + 80) + 160) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v34 = swift_allocObject();
  v35 = v64;
  *(_OWORD *)(v34 + 104) = v63;
  *(_OWORD *)(v34 + 120) = v35;
  *(_OWORD *)(v34 + 136) = v65;
  v36 = v58;
  *(_OWORD *)(v34 + 40) = v59;
  v37 = v61;
  *(_OWORD *)(v34 + 56) = v60;
  *(_OWORD *)(v34 + 72) = v37;
  *(_OWORD *)(v34 + 88) = v62;
  *(_QWORD *)(v34 + 16) = v31;
  *(_QWORD *)(v34 + 152) = v66;
  *(_OWORD *)(v34 + 24) = v36;
  sub_1ABCFE2AC(v32, v34 + v33, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
  aBlock[4] = sub_1ABE3621C;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_11;
  v38 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABD97ECC((uint64_t)&v58);
  v39 = v50;
  sub_1ABF315AC();
  v56 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE22C((unint64_t *)&unk_1ED34FB10, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABD1339C(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED34FCA0, 255, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
  v40 = v51;
  v41 = v52;
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v39, v40, v38);
  _Block_release(v38);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v54);
  sub_1ABCFC3BC((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
  swift_release();
  swift_release();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  return swift_release();
}

void sub_1ABE34D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;

  sub_1ABD02FCC(0, &qword_1ED346E50, &qword_1ED346E48, MEMORY[0x1E0DB2A80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - v6;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1ABF31060();
    sub_1ABF313F0();
    swift_release();
    sub_1ABD0302C(0, &qword_1ED346E48, MEMORY[0x1E0DB2A80]);
    v9 = v8;
    v10 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8) == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1ABCF5A54(0, (unint64_t *)&unk_1EEC43A00, (uint64_t (*)(uint64_t))sub_1ABE36250, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      sub_1ABE36250();
      v12 = v11;
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
      v14 = (v13 + 32) & ~v13;
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1ABF366C0;
      v16 = (_QWORD *)(v15 + v14);
      v17 = v15 + v14 + *(int *)(v12 + 48);
      v18 = *(_QWORD *)(a2 + 16);
      v19 = *(_QWORD *)(a2 + 24);
      *v16 = v18;
      v16[1] = v19;
      sub_1ABE33FC0(a3, v17);
      sub_1ABF2FF5C();
      sub_1ABDEA8F0(v15);
      sub_1ABF313C0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
      v20 = (void *)sub_1ABF31114();
      sub_1ABF311B0();
      swift_release();
      swift_release();
      swift_release();

    }
  }
}

uint64_t sub_1ABE34F3C()
{
  return sub_1ABE34F4C();
}

uint64_t sub_1ABE34F4C()
{
  id v0;
  uint64_t v1;

  if (qword_1ED346698 != -1)
    swift_once();
  v0 = (id)qword_1ED368318;
  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0xE000000000000000;
  sub_1ABF31318();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE35084(__int128 *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v29 = sub_1ABF31594();
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1ABF315D0();
  v30 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF315A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE360B4(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[6];
  v14 = a1[7];
  v15 = a1[4];
  v40 = a1[5];
  v41 = v13;
  v42 = v14;
  v43 = *((_QWORD *)a1 + 16);
  v16 = a1[3];
  v37 = a1[2];
  v38 = v16;
  v39 = v15;
  v17 = a1[1];
  v35 = *a1;
  v36 = v17;
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v18 = v36;
  swift_beginAccess();
  sub_1ABF2FF5C();
  sub_1ABDEFF5C(v18, *((uint64_t *)&v18 + 1), (uint64_t)v12);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1ABCFC3BC((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1ABE360B4);
  sub_1ABD133B8();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF520], v6);
  v19 = (void *)sub_1ABF31C48();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = swift_allocObject();
  swift_weakInit();
  v21 = swift_allocObject();
  v22 = v41;
  *(_OWORD *)(v21 + 104) = v40;
  *(_OWORD *)(v21 + 120) = v22;
  *(_OWORD *)(v21 + 136) = v42;
  v23 = v35;
  *(_OWORD *)(v21 + 40) = v36;
  v24 = v38;
  *(_OWORD *)(v21 + 56) = v37;
  *(_OWORD *)(v21 + 72) = v24;
  *(_OWORD *)(v21 + 88) = v39;
  *(_QWORD *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 152) = v43;
  *(_OWORD *)(v21 + 24) = v23;
  aBlock[4] = sub_1ABE36134;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_15;
  v25 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABD97ECC((uint64_t)&v35);
  sub_1ABF315AC();
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE22C((unint64_t *)&unk_1ED34FB10, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABD1339C(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED34FCA0, 255, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
  v26 = v29;
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v5, v3, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v3, v26);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v31);
  swift_release();
  swift_release();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  return swift_release();
}

void sub_1ABE35498(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  sub_1ABD02FCC(0, &qword_1ED346E50, &qword_1ED346E48, MEMORY[0x1E0DB2A80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - v4;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1ABF31060();
    sub_1ABF313F0();
    swift_release();
    sub_1ABD0302C(0, &qword_1ED346E48, MEMORY[0x1E0DB2A80]);
    v7 = v6;
    v8 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1ABF366C0;
      v10 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(v9 + 32) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(v9 + 40) = v10;
      sub_1ABF2FF5C();
      sub_1ABF313CC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
      v11 = (void *)sub_1ABF31114();
      sub_1ABF311B0();
      swift_release();
      swift_release();
      swift_release();

    }
  }
}

uint64_t sub_1ABE3565C()
{
  return sub_1ABE34F4C();
}

uint64_t sub_1ABE3566C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD aBlock[6];

  v3 = sub_1ABF31594();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v46 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF315D0();
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  MEMORY[0x1E0C80A78](v6);
  v43 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF315A0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v42 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE360B4(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF2FF68();
  sub_1ABF30AC0();
  swift_release();
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v36 = v9;
    v37 = v8;
    v39 = v4;
    v40 = v3;
    v41 = v1;
    v15 = (uint64_t *)(v1 + 24);
    sub_1ABF2FF5C();
    v38 = a1;
    v16 = (uint64_t *)(a1 + 40);
    do
    {
      v19 = *(v16 - 1);
      v18 = *v16;
      swift_beginAccess();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v20 = sub_1ABD00F9C(v19, v18);
      v22 = v21;
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v24 = *v15;
        v47 = *v15;
        *v15 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1ABE6F6B8();
          v24 = v47;
        }
        swift_bridgeObjectRelease();
        v25 = *(_QWORD *)(v24 + 56);
        v26 = type metadata accessor for EarningsCalendarEventModel();
        v27 = *(_QWORD *)(v26 - 8);
        sub_1ABCFE2AC(v25 + *(_QWORD *)(v27 + 72) * v20, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
        sub_1ABDF0844(v20, v24);
        *v15 = v24;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v13, 0, 1, v26);
      }
      else
      {
        v17 = type metadata accessor for EarningsCalendarEventModel();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v13, 1, 1, v17);
      }
      v16 += 2;
      swift_endAccess();
      sub_1ABCFC3BC((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1ABE360B4);
      swift_bridgeObjectRelease();
      --v14;
    }
    while (v14);
    a1 = v38;
    swift_bridgeObjectRelease();
    v3 = v40;
    v4 = v39;
    v9 = v36;
    v8 = v37;
  }
  sub_1ABD133B8();
  v28 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v42, *MEMORY[0x1E0DEF520], v8);
  v29 = (void *)sub_1ABF31C48();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v28, v8);
  v30 = swift_allocObject();
  swift_weakInit();
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v30;
  *(_QWORD *)(v31 + 24) = a1;
  aBlock[4] = sub_1ABE362E0;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_18;
  v32 = _Block_copy(aBlock);
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  v33 = v43;
  sub_1ABF315AC();
  v47 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE22C((unint64_t *)&unk_1ED34FB10, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABD1339C(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED34FCA0, 255, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
  v34 = v46;
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v33, v34, v32);
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v34, v3);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v45);
  swift_release();
  swift_release();
  sub_1ABF2FF68();
  sub_1ABF30ACC();
  return swift_release();
}

void sub_1ABE35B14()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  sub_1ABD02FCC(0, &qword_1ED346E50, &qword_1ED346E48, MEMORY[0x1E0DB2A80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - v1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1ABF31060();
    sub_1ABF313F0();
    swift_release();
    sub_1ABD0302C(0, &qword_1ED346E48, MEMORY[0x1E0DB2A80]);
    v4 = v3;
    v5 = *(_QWORD *)(v3 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3) == 1)
    {
      __break(1u);
    }
    else
    {
      sub_1ABF313CC();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
      v6 = (void *)sub_1ABF31114();
      sub_1ABF311B0();
      swift_release();
      swift_release();
      swift_release();

    }
  }
}

uint64_t sub_1ABE35C80()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for EarningsCalendarEventManager.StoreDescriptor()
{
  return &type metadata for EarningsCalendarEventManager.StoreDescriptor;
}

uint64_t storeEnumTagSinglePayload for EarningsCalendarEventModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABE35D10 + 4 * byte_1ABF42085[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABE35D44 + 4 * byte_1ABF42080[v4]))();
}

uint64_t sub_1ABE35D44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE35D4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE35D54);
  return result;
}

uint64_t sub_1ABE35D60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE35D68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABE35D6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE35D74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EarningsCalendarEventModel.CodingKeys()
{
  return &type metadata for EarningsCalendarEventModel.CodingKeys;
}

unint64_t sub_1ABE35D94()
{
  unint64_t result;

  result = qword_1EEC439E8;
  if (!qword_1EEC439E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42248, &type metadata for EarningsCalendarEventModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC439E8);
  }
  return result;
}

uint64_t sub_1ABE35DE8()
{
  return sub_1ABF30E08();
}

uint64_t sub_1ABE35DF0()
{
  return sub_1ABF30E2C();
}

uint64_t sub_1ABE35DF8()
{
  return sub_1ABF30E08();
}

uint64_t sub_1ABE35E00()
{
  return sub_1ABF30E2C();
}

uint64_t sub_1ABE35E08()
{
  return sub_1ABF30E08();
}

unint64_t sub_1ABE35E18()
{
  unint64_t result;

  result = qword_1EEC439F0;
  if (!qword_1EEC439F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF421B8, &type metadata for EarningsCalendarEventModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC439F0);
  }
  return result;
}

unint64_t sub_1ABE35E60()
{
  unint64_t result;

  result = qword_1EEC439F8;
  if (!qword_1EEC439F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF421E0, &type metadata for EarningsCalendarEventModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC439F8);
  }
  return result;
}

uint64_t sub_1ABE35EA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D79536B636F7473 && a2 == 0xEB000000006C6F62;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656449746E657665 && a2 == 0xEF7265696669746ELL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73676E696E726165 && a2 == 0xEC00000065746144)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1ABE3604C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABE36070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EarningsCalendarEventModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1ABE360B4(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED346C48, (uint64_t (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1ABE360D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABE36134()
{
  uint64_t v0;

  sub_1ABE35498(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_1ABE36140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for EarningsCalendarEventModel();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 160) & ~v2;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 24);
  v5 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

void sub_1ABE3621C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for EarningsCalendarEventModel() - 8) + 80);
  sub_1ABE34D24(*(_QWORD *)(v0 + 16), v0 + 24, v0 + ((v1 + 160) & ~v1));
}

void sub_1ABE36250()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEC431D0)
  {
    type metadata accessor for EarningsCalendarEventModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEC431D0);
  }
}

uint64_t sub_1ABE362B4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABE362E0()
{
  sub_1ABE35B14();
}

void sub_1ABE362E8(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED34DA40, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1ABE36304(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1ABE36330(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ABE36338(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1ABE36340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1ABE36348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1ABE36350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t assignWithCopy for UserIdentitySource(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  void *v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    else if (!v4)
    {

    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v8 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v8 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v9 = *a2;
      v10 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      v6 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
      v7 = v6;
    }
  }
  return a1;
}

uint64_t assignWithTake for UserIdentitySource(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    else if (!v4)
    {

    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t sub_1ABE364E8(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1ABE36504(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UserIdentitySource()
{
  return &type metadata for UserIdentitySource;
}

id sub_1ABE3653C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  objc_super v14;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = &v0[OBJC_IVAR____TtC10StocksCore21IdentificationService_source];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_QWORD *)v3 + 4) = 0;
  v3[40] = 2;
  v4 = OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults;
  v5 = qword_1ED34E968;
  v6 = v0;
  if (v5 != -1)
    swift_once();
  swift_beginAccess();
  v7 = (void *)qword_1ED34E958;
  *(_QWORD *)&v1[v4] = qword_1ED34E958;
  v8 = OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults;
  v9 = qword_1ED34FD48;
  v10 = v7;
  if (v9 != -1)
    swift_once();
  v11 = (void *)qword_1ED368420;
  *(_QWORD *)&v6[v8] = qword_1ED368420;
  *(_QWORD *)&v6[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers] = MEMORY[0x1E0DEE9D8];
  v12 = v11;

  v14.receiver = v6;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t type metadata accessor for IdentificationService()
{
  return objc_opt_self();
}

void sub_1ABE36700(__int128 *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  id (*v6)(int, int);
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id (*v11)(int, int);
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  _QWORD aBlock[3];
  void *v20;
  id (*v21)(int, int);
  uint64_t v22;
  __int128 v23[2];
  __int128 v24[2];
  char v25;

  v2 = v1;
  v4 = (uint64_t)v2 + OBJC_IVAR____TtC10StocksCore21IdentificationService_source;
  swift_beginAccess();
  sub_1ABE388C4(a1, v4);
  swift_endAccess();
  sub_1ABE388F8((uint64_t)a1, (uint64_t)v24);
  if (v25)
  {
    if (v25 == 1)
    {
      sub_1ABD065C8(v24, (uint64_t)aBlock);
      v5 = v20;
      v6 = v21;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v20);
      (*((void (**)(void *, id (*)(int, int)))v6 + 1))(v5, v6);
      sub_1ABD07E04((uint64_t)aBlock, (uint64_t)v23);
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v2;
      sub_1ABD065C8(v23, v7 + 24);
      v8 = v2;
      v9 = (void *)sub_1ABF31114();
      sub_1ABF31180();
      swift_release();
      swift_release();
      swift_release();

      v10 = v20;
      v11 = v21;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v20);
      (*((void (**)(void *, id (*)(int, int)))v11 + 3))(v10, v11);
      *(_QWORD *)(swift_allocObject() + 16) = v8;
      v12 = v8;
      v13 = (void *)sub_1ABF31114();
      sub_1ABF31180();
      swift_release();
      swift_release();
      swift_release();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    }
  }
  else
  {
    v14 = *(void **)&v24[0];
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v2;
    *(_QWORD *)(v15 + 24) = v14;
    v21 = sub_1ABE389DC;
    v22 = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1ABE36E80;
    v20 = &block_descriptor_16;
    v16 = _Block_copy(aBlock);
    v17 = v2;
    v18 = v14;
    swift_release();
    objc_msgSend(v18, sel_syncWithCompletion_, v16);
    _Block_release(v16);

  }
}

id sub_1ABE36958(int a1, int a2, char *a3, id a4)
{
  id v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id result;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  void (*v28)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void *v36;
  void *v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  _UNKNOWN **v55;

  v4 = a4;
  v6 = objc_msgSend(a4, sel_stocks_generateFeldsparIDIfNeeded);
  v7 = sub_1ABF317A4();
  v9 = v8;

  if (v7 == sub_1ABE37488() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
  v12 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_22;
  v13 = *(void **)&a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  v14 = (void *)sub_1ABF31780();
  v15 = (void *)sub_1ABF31780();
  objc_msgSend(v13, sel_setObject_forKey_, v14, v15);

  v16 = *(void **)&a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults];
  v17 = (void *)sub_1ABF31780();
  v18 = (void *)sub_1ABF31780();
  objc_msgSend(v16, sel_setObject_forKey_, v17, v18);

  v19 = &a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers];
  swift_beginAccess();
  v20 = *(_QWORD *)v19;
  if (*(_QWORD *)v19 >> 62)
  {
    sub_1ABF2FF5C();
    result = (id)sub_1ABF31FE4();
    v21 = (uint64_t)result;
    if (result)
      goto LABEL_10;
LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)sub_1ABF2FF5C();
  if (!v21)
    goto LABEL_21;
LABEL_10:
  v51 = v7;
  v49 = v4;
  if (v21 < 1)
  {
    __break(1u);
    goto LABEL_45;
  }
  v23 = 0;
  do
  {
    if ((v20 & 0xC000000000000001) != 0)
    {
      v25 = MEMORY[0x1AF4380CC](v23, v20);
    }
    else
    {
      v25 = *(_QWORD *)(v20 + 8 * v23 + 32);
      sub_1ABF2FF68();
    }
    v54 = type metadata accessor for IdentificationService();
    v55 = &off_1E5AEB2C8;
    v53[0] = a3;
    if (MEMORY[0x1AF4390D4](v25 + 16))
    {
      v26 = *(_QWORD *)(v25 + 24);
      ObjectType = swift_getObjectType();
      v28 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8);
      v29 = a3;
      v28(v53, v51, v9, ObjectType, v26);
      swift_unknownObjectRelease();
    }
    else
    {
      v24 = a3;
    }
    ++v23;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);

    swift_release();
  }
  while (v21 != v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v49;
LABEL_23:
  v30 = objc_msgSend(v4, sel_adsUserID, v49);
  if (!v30)
    v30 = objc_msgSend(v4, sel_stocks_resetAdsUserID);
  v31 = sub_1ABF317A4();
  v33 = v32;

  if (v31 == sub_1ABE37A40() && v33 == v34)
    goto LABEL_40;
  v35 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v35 & 1) != 0)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    return objc_msgSend(v4, sel_addObserver_, a3);
  }
  v36 = *(void **)&a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  v37 = (void *)sub_1ABF31780();
  v38 = (void *)sub_1ABF31780();
  objc_msgSend(v36, sel_setObject_forKey_, v37, v38);

  v39 = &a3[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers];
  swift_beginAccess();
  v40 = *(_QWORD *)v39;
  if (!(*(_QWORD *)v39 >> 62))
  {
    v41 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)sub_1ABF2FF5C();
    if (v41)
      goto LABEL_30;
LABEL_40:
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  sub_1ABF2FF5C();
  result = (id)sub_1ABF31FE4();
  v41 = (uint64_t)result;
  if (!result)
    goto LABEL_40;
LABEL_30:
  v52 = v31;
  v50 = v4;
  if (v41 >= 1)
  {
    v42 = 0;
    do
    {
      if ((v40 & 0xC000000000000001) != 0)
      {
        v44 = MEMORY[0x1AF4380CC](v42, v40);
      }
      else
      {
        v44 = *(_QWORD *)(v40 + 8 * v42 + 32);
        sub_1ABF2FF68();
      }
      v54 = type metadata accessor for IdentificationService();
      v55 = &off_1E5AEB2C8;
      v53[0] = a3;
      if (MEMORY[0x1AF4390D4](v44 + 16))
      {
        v45 = *(_QWORD *)(v44 + 24);
        v46 = swift_getObjectType();
        v47 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 16);
        v48 = a3;
        v47(v53, v52, v33, v46, v45);
        swift_unknownObjectRelease();
      }
      else
      {
        v43 = a3;
      }
      ++v42;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);

      swift_release();
    }
    while (v41 != v42);
    v4 = v50;
    goto LABEL_40;
  }
LABEL_45:
  __break(1u);
  return result;
}

void sub_1ABE36E80(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_1ABF2FF68();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1ABE36EE0(uint64_t *a1, char *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  void (*v26)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  unint64_t v34;

  v6 = *a1;
  v5 = a1[1];
  sub_1ABF2FF5C();
  if (v6 == sub_1ABE37488() && v5 == v7)
  {
    swift_bridgeObjectRelease_n();
LABEL_23:
    v28 = a3[3];
    v29 = a3[4];
    __swift_project_boxed_opaque_existential_1(a3, v28);
    return (*(uint64_t (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v29 + 120))(a2, &off_1E5AEB300, v28, v29);
  }
  v9 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  v10 = *(void **)&a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  v11 = (void *)sub_1ABF31780();
  v12 = (void *)sub_1ABF31780();
  objc_msgSend(v10, sel_setObject_forKey_, v11, v12);

  v13 = *(void **)&a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults];
  v31 = v6;
  v14 = (void *)sub_1ABF31780();
  v15 = (void *)sub_1ABF31780();
  objc_msgSend(v13, sel_setObject_forKey_, v14, v15);

  v16 = &a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers];
  swift_beginAccess();
  v17 = *(_QWORD *)v16;
  if (!(*(_QWORD *)v16 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v18)
      goto LABEL_10;
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v18 = result;
  if (!result)
    goto LABEL_21;
LABEL_10:
  v32 = v5;
  v30 = a3;
  if (v18 >= 1)
  {
    v20 = 0;
    v34 = v17 & 0xC000000000000001;
    do
    {
      if (v34)
      {
        v22 = MEMORY[0x1AF4380CC](v20, v17);
      }
      else
      {
        v22 = *(_QWORD *)(v17 + 8 * v20 + 32);
        sub_1ABF2FF68();
      }
      v33[3] = type metadata accessor for IdentificationService();
      v33[4] = &off_1E5AEB2C8;
      v33[0] = a2;
      if (MEMORY[0x1AF4390D4](v22 + 16))
      {
        v23 = *(_QWORD *)(v22 + 24);
        ObjectType = swift_getObjectType();
        v25 = v18;
        v26 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8);
        v27 = a2;
        v26(v33, v31, v32, ObjectType, v23);
        v18 = v25;
        swift_unknownObjectRelease();
      }
      else
      {
        v21 = a2;
      }
      ++v20;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);

      swift_release();
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v30;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE371DC(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t result;
  void *v10;
  void *v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[5];
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  v5 = *a1;
  v4 = a1[1];
  sub_1ABF2FF5C();
  if (v5 == sub_1ABE37A40() && v4 == v6)
    return swift_bridgeObjectRelease_n();
  v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
    return swift_bridgeObjectRelease();
  v10 = *(void **)&a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  v11 = (void *)sub_1ABF31780();
  v12 = (void *)sub_1ABF31780();
  objc_msgSend(v10, sel_setObject_forKey_, v11, v12);

  v13 = &a2[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers];
  swift_beginAccess();
  v14 = *(_QWORD *)v13;
  if (!(*(_QWORD *)v13 >> 62))
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v15)
      goto LABEL_10;
LABEL_21:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v15 = result;
  if (!result)
    goto LABEL_21;
LABEL_10:
  v25 = v5;
  v26 = v4;
  if (v15 < 1)
  {
    __break(1u);
  }
  else
  {
    v16 = 0;
    v27 = v14 & 0xC000000000000001;
    do
    {
      if (v27)
      {
        v18 = MEMORY[0x1AF4380CC](v16, v14);
      }
      else
      {
        v18 = *(_QWORD *)(v14 + 8 * v16 + 32);
        sub_1ABF2FF68();
      }
      v28[3] = ObjectType;
      v28[4] = &off_1E5AEB2C8;
      v28[0] = a2;
      if (MEMORY[0x1AF4390D4](v18 + 16))
      {
        v19 = *(_QWORD *)(v18 + 24);
        v20 = swift_getObjectType();
        v21 = v15;
        v22 = v14;
        v23 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 16);
        v24 = a2;
        v23(v28, v25, v26, v20, v19);
        v14 = v22;
        v15 = v21;
        swift_unknownObjectRelease();
      }
      else
      {
        v17 = a2;
      }
      ++v16;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);

      swift_release();
    }
    while (v15 != v16);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1ABE37468(__int128 *a1)
{
  sub_1ABE36700(a1);
}

uint64_t sub_1ABE37488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v16;

  v1 = sub_1ABF30790();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults);
  v6 = (void *)sub_1ABF31780();
  v7 = objc_msgSend(v5, sel_stringForKey_, v6);

  if (v7)
  {
    v8 = sub_1ABF317A4();
    v9 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults);
    v10 = (void *)sub_1ABF31780();
    v11 = objc_msgSend(v9, sel_stringForKey_, v10);

    if (!v11)
    {
      v11 = (id)sub_1ABF31780();
      objc_msgSend(v9, sel_setObject_forKey_, v7, v11);
    }
  }
  else
  {
    sub_1ABF2FBD8();
    v8 = sub_1ABF30778();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v12 = (void *)sub_1ABF31780();
    v13 = (void *)sub_1ABF31780();
    objc_msgSend(v5, sel_setObject_forKey_, v12, v13);

    v14 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults);
    v7 = (id)sub_1ABF31780();
    v11 = (id)sub_1ABF31780();
    objc_msgSend(v14, sel_setObject_forKey_, v7, v11);
  }

  return v8;
}

uint64_t sub_1ABE376A4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  _UNKNOWN **v45;
  char v46;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = sub_1ABF30790();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_source];
  swift_beginAccess();
  sub_1ABE388F8(v6, (uint64_t)&v43);
  if (v46)
  {
    if (v46 == 1)
    {
      sub_1ABD065C8(&v43, (uint64_t)v40);
      v7 = v41;
      v8 = v42;
      __swift_project_boxed_opaque_existential_1(v40, v41);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
      v11 = v10;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    }
    else
    {
      sub_1ABF2FBD8();
      v9 = sub_1ABF30778();
      v11 = v15;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    v12 = (void *)v43;
    v13 = objc_msgSend((id)v43, sel_stocks_resetFeldsparID);
    v9 = sub_1ABF317A4();
    v11 = v14;

  }
  if (v9 == sub_1ABE37488() && v11 == v16)
    goto LABEL_22;
  v18 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    return swift_bridgeObjectRelease();
  v19 = *(void **)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  v20 = (void *)sub_1ABF31780();
  v21 = (void *)sub_1ABF31780();
  objc_msgSend(v19, sel_setObject_forKey_, v20, v21);

  v22 = *(void **)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults];
  v23 = (void *)sub_1ABF31780();
  v24 = (void *)sub_1ABF31780();
  objc_msgSend(v22, sel_setObject_forKey_, v23, v24);

  v25 = &v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers];
  swift_beginAccess();
  v26 = *(_QWORD *)v25;
  if (!(*(_QWORD *)v25 >> 62))
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v27)
      goto LABEL_13;
LABEL_22:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v27 = result;
  if (!result)
    goto LABEL_22;
LABEL_13:
  v37 = v9;
  v38 = v11;
  if (v27 >= 1)
  {
    v29 = 0;
    do
    {
      if ((v26 & 0xC000000000000001) != 0)
      {
        v31 = MEMORY[0x1AF4380CC](v29, v26);
      }
      else
      {
        v31 = *(_QWORD *)(v26 + 8 * v29 + 32);
        sub_1ABF2FF68();
      }
      v44 = ObjectType;
      v45 = &off_1E5AEB2C8;
      *(_QWORD *)&v43 = v1;
      if (MEMORY[0x1AF4390D4](v31 + 16))
      {
        v32 = *(_QWORD *)(v31 + 24);
        v33 = swift_getObjectType();
        v34 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8);
        v35 = v1;
        v34(&v43, v37, v38, v33, v32);
        swift_unknownObjectRelease();
      }
      else
      {
        v30 = v1;
      }
      ++v29;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);

      swift_release();
    }
    while (v27 != v29);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE37A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v1 = sub_1ABF30790();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults);
  v6 = (void *)sub_1ABF31780();
  v7 = objc_msgSend(v5, sel_stringForKey_, v6);

  if (v7)
  {
    v8 = sub_1ABF317A4();

    return v8;
  }
  else
  {
    sub_1ABF2FBD8();
    v10 = sub_1ABF30778();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v11 = (void *)sub_1ABF31780();
    v12 = (void *)sub_1ABF31780();
    objc_msgSend(v5, sel_setObject_forKey_, v11, v12);

    return v10;
  }
}

uint64_t sub_1ABE37B98()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  void *v19;
  void *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _UNKNOWN **v42;
  char v43;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = sub_1ABF30790();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_source];
  swift_beginAccess();
  sub_1ABE388F8(v6, (uint64_t)&v40);
  if (v43)
  {
    if (v43 == 1)
    {
      sub_1ABD065C8(&v40, (uint64_t)v37);
      v7 = v38;
      v8 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
      v11 = v10;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    }
    else
    {
      sub_1ABF2FBD8();
      v9 = sub_1ABF30778();
      v11 = v15;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    v12 = (void *)v40;
    v13 = objc_msgSend((id)v40, sel_stocks_resetAdsUserID);
    v9 = sub_1ABF317A4();
    v11 = v14;

  }
  if (v9 == sub_1ABE37A40() && v11 == v16)
    goto LABEL_22;
  v18 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    return swift_bridgeObjectRelease();
  v19 = *(void **)&v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  v20 = (void *)sub_1ABF31780();
  v21 = (void *)sub_1ABF31780();
  objc_msgSend(v19, sel_setObject_forKey_, v20, v21);

  v22 = &v1[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers];
  swift_beginAccess();
  v23 = *(_QWORD *)v22;
  if (!(*(_QWORD *)v22 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v24)
      goto LABEL_13;
LABEL_22:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v24 = result;
  if (!result)
    goto LABEL_22;
LABEL_13:
  v34 = v9;
  v35 = v11;
  if (v24 >= 1)
  {
    v26 = 0;
    do
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        v28 = MEMORY[0x1AF4380CC](v26, v23);
      }
      else
      {
        v28 = *(_QWORD *)(v23 + 8 * v26 + 32);
        sub_1ABF2FF68();
      }
      v41 = ObjectType;
      v42 = &off_1E5AEB2C8;
      *(_QWORD *)&v40 = v1;
      if (MEMORY[0x1AF4390D4](v28 + 16))
      {
        v29 = *(_QWORD *)(v28 + 24);
        v30 = swift_getObjectType();
        v31 = *(void (**)(__int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 16);
        v32 = v1;
        v31(&v40, v34, v35, v30, v29);
        swift_unknownObjectRelease();
      }
      else
      {
        v27 = v1;
      }
      ++v26;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);

      swift_release();
    }
    while (v24 != v26);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE37EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC10StocksCore21IdentificationService_observers);
  swift_beginAccess();
  v5 = *v4;
  v14 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)*v4 >> 62)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1AF4380CC](i, v5);
    }
    else
    {
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      sub_1ABF2FF68();
    }
    v10 = MEMORY[0x1AF4390D4](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v14;
LABEL_15:
  *v4 = v11;
  swift_bridgeObjectRelease();
  _s10StocksCore13ObserverProxyCMa_0();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1AF437C04](v13);
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  return swift_endAccess();
}

uint64_t sub_1ABE38104()
{
  return sub_1ABE37488();
}

uint64_t sub_1ABE38124()
{
  return sub_1ABE376A4();
}

uint64_t sub_1ABE38144()
{
  return sub_1ABE37A40();
}

uint64_t sub_1ABE38164()
{
  return sub_1ABE37B98();
}

uint64_t sub_1ABE38184(uint64_t a1, uint64_t a2)
{
  return sub_1ABE37EE4(a1, a2);
}

uint64_t sub_1ABE381A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*v1 + OBJC_IVAR____TtC10StocksCore21IdentificationService_observers);
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD8A848(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *v3 = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE382EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t result;
  char v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  _QWORD v29[5];

  v4 = v3;
  ObjectType = swift_getObjectType();
  sub_1ABF2FF5C();
  if (sub_1ABE37488() == a2 && v7 == a3)
    return swift_bridgeObjectRelease_n();
  v9 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return swift_bridgeObjectRelease();
  v10 = *(void **)&v3[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  v11 = (void *)sub_1ABF31780();
  v12 = (void *)sub_1ABF31780();
  objc_msgSend(v10, sel_setObject_forKey_, v11, v12);

  v13 = *(void **)&v4[OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults];
  v14 = (void *)sub_1ABF31780();
  v15 = (void *)sub_1ABF31780();
  objc_msgSend(v13, sel_setObject_forKey_, v14, v15);

  v16 = &v4[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers];
  swift_beginAccess();
  v17 = *(_QWORD *)v16;
  if (!(*(_QWORD *)v16 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v18)
      goto LABEL_8;
LABEL_19:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v18 = result;
  if (!result)
    goto LABEL_19;
LABEL_8:
  v26 = a2;
  v27 = a3;
  if (v18 >= 1)
  {
    v19 = 0;
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
      {
        v21 = MEMORY[0x1AF4380CC](v19, v17);
      }
      else
      {
        v21 = *(_QWORD *)(v17 + 8 * v19 + 32);
        sub_1ABF2FF68();
      }
      v29[3] = ObjectType;
      v29[4] = &off_1E5AEB2C8;
      v29[0] = v4;
      if (MEMORY[0x1AF4390D4](v21 + 16))
      {
        v22 = *(_QWORD *)(v21 + 24);
        v23 = swift_getObjectType();
        v24 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8);
        v25 = v4;
        v24(v29, v26, v27, v23, v22);
        swift_unknownObjectRelease();
      }
      else
      {
        v20 = v4;
      }
      ++v19;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);

      swift_release();
    }
    while (v18 != v19);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE385B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t result;
  char v9;
  void *v10;
  void *v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  _QWORD v26[5];

  v4 = v3;
  ObjectType = swift_getObjectType();
  sub_1ABF2FF5C();
  if (sub_1ABE37A40() == a2 && v7 == a3)
    return swift_bridgeObjectRelease_n();
  v9 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return swift_bridgeObjectRelease();
  v10 = *(void **)&v3[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
  v11 = (void *)sub_1ABF31780();
  v12 = (void *)sub_1ABF31780();
  objc_msgSend(v10, sel_setObject_forKey_, v11, v12);

  v13 = &v4[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers];
  swift_beginAccess();
  v14 = *(_QWORD *)v13;
  if (!(*(_QWORD *)v13 >> 62))
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v15)
      goto LABEL_8;
LABEL_19:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v15 = result;
  if (!result)
    goto LABEL_19;
LABEL_8:
  v23 = a2;
  v24 = a3;
  if (v15 >= 1)
  {
    v16 = 0;
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
      {
        v18 = MEMORY[0x1AF4380CC](v16, v14);
      }
      else
      {
        v18 = *(_QWORD *)(v14 + 8 * v16 + 32);
        sub_1ABF2FF68();
      }
      v26[3] = ObjectType;
      v26[4] = &off_1E5AEB2C8;
      v26[0] = v4;
      if (MEMORY[0x1AF4390D4](v18 + 16))
      {
        v19 = *(_QWORD *)(v18 + 24);
        v20 = swift_getObjectType();
        v21 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 16);
        v22 = v4;
        v21(v26, v23, v24, v20, v19);
        swift_unknownObjectRelease();
      }
      else
      {
        v17 = v4;
      }
      ++v16;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);

      swift_release();
    }
    while (v15 != v16);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t _s10StocksCore13ObserverProxyCMa_0()
{
  return objc_opt_self();
}

uint64_t sub_1ABE3884C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1ABE38864(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABDDEA6C);
}

uint64_t sub_1ABE38858(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1ABE38864(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABE389E4);
}

uint64_t sub_1ABE38864(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v9 = a1[3];
  v10 = a1[4];
  v11 = __swift_project_boxed_opaque_existential_1(a1, v9);
  return a6(v11, a2, a3, v6, v9, v10);
}

uint64_t sub_1ABE388C4(__int128 *a1, uint64_t a2)
{
  assignWithCopy for UserIdentitySource(a2, a1);
  return a2;
}

uint64_t sub_1ABE388F8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for UserIdentitySource(a2, a1);
  return a2;
}

uint64_t sub_1ABE3892C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1ABE38958(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABE36EE0(a1, *(char **)(v1 + 16), (_QWORD *)(v1 + 24));
}

uint64_t sub_1ABE38974()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1ABE38998(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABE371DC(a1, *(char **)(v1 + 16));
}

uint64_t sub_1ABE389B0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1ABE389DC(int a1, int a2)
{
  uint64_t v2;

  return sub_1ABE36958(a1, a2, *(char **)(v2 + 16), *(id *)(v2 + 24));
}

uint64_t sub_1ABE389E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v15[5];

  v15[3] = a5;
  v15[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  if (MEMORY[0x1AF4390D4](a4 + 16))
  {
    v12 = *(_QWORD *)(a4 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, a2, a3, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

id sub_1ABE38A90(void *a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  id result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];

  v2 = v1;
  ObjectType = swift_getObjectType();
  result = objc_msgSend(a1, sel_feldsparID);
  if (result)
  {
    v6 = result;
    v7 = sub_1ABF317A4();
    v9 = v8;

    if (v7 == sub_1ABE37488() && v9 == v10)
      return (id)swift_bridgeObjectRelease_n();
    v12 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      return (id)swift_bridgeObjectRelease();
    v13 = *(void **)&v2[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
    v14 = (void *)sub_1ABF31780();
    v15 = (void *)sub_1ABF31780();
    objc_msgSend(v13, sel_setObject_forKey_, v14, v15);

    v16 = *(void **)&v2[OBJC_IVAR____TtC10StocksCore21IdentificationService_stocksKitDefaults];
    v17 = (void *)sub_1ABF31780();
    v18 = (void *)sub_1ABF31780();
    objc_msgSend(v16, sel_setObject_forKey_, v17, v18);

    v19 = &v2[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers];
    swift_beginAccess();
    v20 = *(_QWORD *)v19;
    if (*(_QWORD *)v19 >> 62)
    {
      sub_1ABF2FF5C();
      result = (id)sub_1ABF31FE4();
      v21 = (uint64_t)result;
      if (result)
        goto LABEL_11;
    }
    else
    {
      v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)sub_1ABF2FF5C();
      if (v21)
      {
LABEL_11:
        v31 = v7;
        v32 = v9;
        if (v21 < 1)
        {
          __break(1u);
          return result;
        }
        v22 = 0;
        do
        {
          if ((v20 & 0xC000000000000001) != 0)
          {
            v24 = MEMORY[0x1AF4380CC](v22, v20);
          }
          else
          {
            v24 = *(_QWORD *)(v20 + 8 * v22 + 32);
            sub_1ABF2FF68();
          }
          v33[3] = ObjectType;
          v33[4] = &off_1E5AEB2C8;
          v33[0] = v2;
          if (MEMORY[0x1AF4390D4](v24 + 16))
          {
            v25 = *(_QWORD *)(v24 + 24);
            v26 = swift_getObjectType();
            v27 = v21;
            v28 = ObjectType;
            v29 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8);
            v30 = v2;
            v29(v33, v31, v32, v26, v25);
            ObjectType = v28;
            v21 = v27;
            swift_unknownObjectRelease();
          }
          else
          {
            v23 = v2;
          }
          ++v22;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);

          swift_release();
        }
        while (v21 != v22);
      }
    }
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1ABE38D8C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  id result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  void *v13;
  void *v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD v32[5];

  v2 = v1;
  ObjectType = swift_getObjectType();
  result = objc_msgSend(a1, sel_adsUserID);
  if (result)
  {
    v6 = result;
    v7 = sub_1ABF317A4();
    v9 = v8;

    if (v7 == sub_1ABE37A40() && v9 == v10)
      return (id)swift_bridgeObjectRelease_n();
    v12 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      return (id)swift_bridgeObjectRelease();
    v13 = *(void **)&v2[OBJC_IVAR____TtC10StocksCore21IdentificationService_sensitiveUserDefaults];
    v14 = (void *)sub_1ABF31780();
    v15 = (void *)sub_1ABF31780();
    objc_msgSend(v13, sel_setObject_forKey_, v14, v15);

    v16 = &v2[OBJC_IVAR____TtC10StocksCore21IdentificationService_observers];
    swift_beginAccess();
    v17 = *(_QWORD *)v16;
    if (*(_QWORD *)v16 >> 62)
    {
      sub_1ABF2FF5C();
      result = (id)sub_1ABF31FE4();
      v18 = (uint64_t)result;
      if (result)
        goto LABEL_11;
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)sub_1ABF2FF5C();
      if (v18)
      {
LABEL_11:
        v29 = v7;
        v30 = v9;
        if (v18 < 1)
        {
          __break(1u);
          return result;
        }
        v19 = 0;
        v31 = v17 & 0xC000000000000001;
        do
        {
          if (v31)
          {
            v21 = MEMORY[0x1AF4380CC](v19, v17);
          }
          else
          {
            v21 = *(_QWORD *)(v17 + 8 * v19 + 32);
            sub_1ABF2FF68();
          }
          v32[3] = ObjectType;
          v32[4] = &off_1E5AEB2C8;
          v32[0] = v2;
          if (MEMORY[0x1AF4390D4](v21 + 16))
          {
            v22 = *(_QWORD *)(v21 + 24);
            v23 = swift_getObjectType();
            v24 = v18;
            v25 = v17;
            v26 = ObjectType;
            v27 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16);
            v28 = v2;
            v27(v32, v29, v30, v23, v22);
            ObjectType = v26;
            v17 = v25;
            v18 = v24;
            swift_unknownObjectRelease();
          }
          else
          {
            v20 = v2;
          }
          ++v19;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);

          swift_release();
        }
        while (v18 != v19);
      }
    }
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1ABE39040()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;
  _QWORD v12[2];

  v1 = sub_1ABF317D4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v0, sel_stocksFields, v3);
  if (!v6)
    return MEMORY[0x1E0DEE9D8];
  v7 = objc_msgSend(v6, sel_stocksFeedConfigJSON);
  swift_unknownObjectRelease();
  if (!v7)
    return MEMORY[0x1E0DEE9D8];
  sub_1ABF317A4();

  sub_1ABF301E4();
  swift_allocObject();
  sub_1ABF301D8();
  sub_1ABF317C8();
  v8 = sub_1ABF317B0();
  v10 = v9;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  if (v10 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_1ABE391E0();
    sub_1ABF301C0();
    sub_1ABD0D868(v8, v10);
    swift_release();
    return v12[1];
  }
  return result;
}

unint64_t sub_1ABE391E0()
{
  unint64_t result;

  result = qword_1ED346880;
  if (!qword_1ED346880)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF37FD4, &type metadata for TagStocksFeedConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED346880);
  }
  return result;
}

uint64_t sub_1ABE39224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC43A98);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC43A98);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABE393A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC41050, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1EEC43A98, a1);
}

uint64_t sub_1ABE393C4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v12[0] = sub_1ABF30484();
  v3 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF2FE54();
  __swift_allocate_value_buffer(v10, qword_1EEC43AB0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC43AB0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v12[0]);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1ABF2FE60();
}

uint64_t sub_1ABE395F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC41058, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1EEC43AB0, a1);
}

uint64_t sub_1ABE39614()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABCF4DA8(0, &qword_1EEC43AC8, (uint64_t (*)(void))sub_1ABE397A0, (uint64_t)&type metadata for NewWatchlistIntent, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABCF4DA8(0, &qword_1EEC43AD0, (uint64_t (*)(void))sub_1ABE397A0, (uint64_t)&type metadata for NewWatchlistIntent, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABE397A0();
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABE39808();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF80();
}

unint64_t sub_1ABE397A0()
{
  unint64_t result;

  result = qword_1ED3470C8;
  if (!qword_1ED3470C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF424E4, &type metadata for NewWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3470C8);
  }
  return result;
}

uint64_t sub_1ABE397E4()
{
  return sub_1ABF2FDD0();
}

void sub_1ABE39808()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43AD8)
  {
    sub_1ABCF4DA8(255, &qword_1EEC43AE0, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43AD8);
  }
}

uint64_t sub_1ABE39884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getKeyPath();
  sub_1ABE397A0();
  v0 = sub_1ABF2FF68();
  swift_release();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ABF38ED0;
  *(_QWORD *)(v1 + 32) = v0;
  sub_1ABF31A20();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_1ABE39960()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABE39980()
{
  uint64_t v1;

  sub_1ABF2FDB8();
  return v1;
}

uint64_t sub_1ABE399B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE39A24()
{
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE39A98()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABE39AC8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE39B10()
{
  uint64_t v1;

  sub_1ABF2FDB8();
  return v1;
}

uint64_t sub_1ABE39B40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1ABE39BB4()
{
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE39C28()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABE39C58(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE39CA0()
{
  return sub_1ABF2FBF0();
}

uint64_t sub_1ABE39CC0()
{
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE39D20(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[40];

  sub_1ABD07E04(a1, (uint64_t)v3);
  sub_1ABD07E04((uint64_t)v3, (uint64_t)&v2);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBFC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE39DA8(uint64_t a1)
{
  _BYTE v3[40];

  sub_1ABD07E04(a1, (uint64_t)v3);
  sub_1ABF2FBFC();
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t (*sub_1ABE39DE8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FBE4();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE39E30()
{
  return sub_1ABF2FC08();
}

uint64_t sub_1ABE39E50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t *v36;
  _BYTE v37[4];
  unsigned int v38;
  uint64_t v39;
  void (*v40)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v41;
  unsigned int v42;
  void (*v43)(_BYTE *);
  uint64_t v44;
  void (*v45)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t *v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v50 = a1;
  v53 = sub_1ABF2FFC8();
  v48 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v52 = &v37[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C907D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v49 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v47 = &v37[-v6];
  sub_1ABCF5A54(0, &qword_1EEC43AE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91C98], v2);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v37[-v8];
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v2);
  MEMORY[0x1E0C80A78](v10);
  v51 = &v37[-v11];
  v12 = sub_1ABF30484();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1ABF3049C();
  v19 = *(_QWORD *)(v18 - 8);
  v46 = v18;
  MEMORY[0x1E0C80A78](v18);
  v41 = &v37[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABCF4DA8(0, &qword_1EEC43AE0, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
  v44 = v21;
  sub_1ABF31738();
  sub_1ABF30844();
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 104);
  v38 = *MEMORY[0x1E0CAF9B8];
  v22 = v38;
  v39 = v12;
  v23(v15, v38, v12);
  v40 = v23;
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v23(v15, v22, v12);
  v24 = v51;
  sub_1ABF304A8();
  v45 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v45(v24, 0, 1, v18);
  v25 = sub_1ABF3172C();
  v54 = 0uLL;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 1, 1, v25);
  v26 = sub_1ABF2FCD4();
  v27 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v28 = v47;
  v27(v47, 1, 1, v26);
  v42 = *MEMORY[0x1E0C91738];
  v43 = *(void (**)(_BYTE *))(v48 + 104);
  v43(v52);
  v48 = sub_1ABF2FE0C();
  sub_1ABE3A480();
  v44 = v29;
  sub_1ABF31738();
  sub_1ABF30844();
  v30 = v38;
  v31 = v39;
  v32 = v40;
  v40(v15, v38, v39);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v32(v15, v30, v31);
  v33 = v51;
  sub_1ABF304A8();
  v45(v33, 0, 1, v46);
  *(_QWORD *)&v54 = 0;
  v27(v28, 1, 1, v26);
  v27(v49, 1, 1, v26);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v43)(v52, v42, v53);
  sub_1ABCFE1EC(&qword_1ED3467A8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  v34 = sub_1ABF2FE00();
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34C7B8, (uint64_t (*)(uint64_t))sub_1ABD68798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  v54 = 0u;
  v55 = 0u;
  v56 = 0;
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  v36 = v50;
  *v50 = v48;
  v36[1] = v34;
  v36[2] = result;
  return result;
}

void sub_1ABE3A480()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43AF0)
  {
    sub_1ABCF5A54(255, &qword_1EEC43AF8, (uint64_t (*)(uint64_t))sub_1ABE3A4F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABE3A514();
    v0 = sub_1ABF2FE24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43AF0);
  }
}

void sub_1ABE3A4F8(uint64_t a1)
{
  sub_1ABCF5A54(a1, qword_1EEC424F0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

unint64_t sub_1ABE3A514()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC43B00;
  if (!qword_1EEC43B00)
  {
    sub_1ABCF5A54(255, &qword_1EEC43AF8, (uint64_t (*)(uint64_t))sub_1ABE3A4F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1ABE3A58C();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91D78], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC43B00);
  }
  return result;
}

unint64_t sub_1ABE3A58C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EEC43B08;
  if (!qword_1EEC43B08)
  {
    sub_1ABE3A4F8(255);
    v2 = v1;
    v3 = sub_1ABCFE1EC((unint64_t *)&qword_1ED34CB18, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91CC8], v2, &v3);
    atomic_store(result, &qword_1EEC43B08);
  }
  return result;
}

uint64_t sub_1ABE3A604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 384) = a1;
  *(_QWORD *)(v2 + 392) = *(_QWORD *)(type metadata accessor for SymbolEntity() - 8);
  *(_QWORD *)(v2 + 400) = swift_task_alloc();
  *(_QWORD *)(v2 + 408) = swift_task_alloc();
  *(_OWORD *)(v2 + 416) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 432) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_1ABE3A680()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[55] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FDB8();
    swift_release();
    swift_release();
    swift_release();
    v0[47] = sub_1ABD1FE2C(v0[41], v0[42], &v10);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Creating watchlist name=%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v5, -1, -1);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_release_n();
    swift_release_n();
  }

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  swift_release();
  v6 = v0[22];
  v7 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v6);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  v0[56] = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v7 + 72))(v0[35], v0[36], v6, v7);
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)swift_task_alloc();
  v0[57] = v8;
  *v8 = v0;
  v8[1] = sub_1ABE3A9B4;
  return sub_1ABF31150();
}

uint64_t sub_1ABE3A9B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 464) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE3AA2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int16 v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  os_log_type_t v75;
  uint64_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82[3];
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  char v92[9];

  v1 = (_QWORD *)(v0 + 352);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  v2 = *(_QWORD *)(v0 + 368);
  v70 = v0;
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    v3 = sub_1ABF31324();
    v4 = sub_1ABF31BF4();
    v66 = v2;
    if (os_log_type_enabled(v3, v4))
    {
      v75 = v4;
      v71 = (uint64_t *)(v0 + 360);
      v5 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v82[0] = v73;
      v77 = v5;
      *(_DWORD *)v5 = 136315138;
      v6 = *(_QWORD *)(v2 + 16);
      v7 = MEMORY[0x1E0DEE9D8];
      if (v6)
      {
        v68 = v3;
        v69 = (_QWORD *)(v0 + 352);
        v80 = *(_QWORD *)(v0 + 408);
        v8 = *(_QWORD *)(v0 + 392);
        *(_QWORD *)&v83 = MEMORY[0x1E0DEE9D8];
        sub_1ABD16414(0, v6, 0);
        v9 = v2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v10 = *(_QWORD *)(v8 + 72);
        v7 = v83;
        do
        {
          v11 = *(uint64_t **)(v0 + 408);
          sub_1ABDBAE80(v9, (uint64_t)v11);
          v12 = *v11;
          v13 = *(_QWORD *)(v80 + 8);
          sub_1ABF2FF5C();
          sub_1ABD64AD4((uint64_t)v11);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1ABD16414(0, *(_QWORD *)(v7 + 16) + 1, 1);
            v7 = v83;
          }
          v15 = *(_QWORD *)(v7 + 16);
          v14 = *(_QWORD *)(v7 + 24);
          if (v15 >= v14 >> 1)
          {
            sub_1ABD16414(v14 > 1, v15 + 1, 1);
            v7 = v83;
          }
          *(_QWORD *)(v7 + 16) = v15 + 1;
          v16 = v7 + 16 * v15;
          *(_QWORD *)(v16 + 32) = v12;
          *(_QWORD *)(v16 + 40) = v13;
          v9 += v10;
          --v6;
          v0 = v70;
        }
        while (v6);
        v2 = v66;
        v3 = v68;
        v1 = v69;
      }
      *v1 = v7;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v31 = sub_1ABF316E4();
      v33 = v32;
      swift_bridgeObjectRelease();
      *v71 = sub_1ABD1FE2C(v31, v33, v82);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ABCEF000, v3, v75, "Adding symbols to new watchlist symbols=[%s]", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v73, -1, -1);
      MEMORY[0x1AF438FFC](v77, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v34 = *(_QWORD *)(v2 + 16);
    if (v34)
    {
      v35 = v2;
      v36 = *(_QWORD *)(v0 + 392);
      v37 = *(_QWORD **)(v0 + 400);
      v82[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABD080B8(0, v34, 0);
      v38 = v35 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
      v67 = *(_QWORD *)(v36 + 72);
      v74 = v34 - 1;
      v76 = v82[0];
      while (1)
      {
        v40 = *(_QWORD *)(v0 + 400);
        v39 = *(_QWORD *)(v0 + 408);
        v72 = v38;
        sub_1ABDBAE80(v38, v39);
        sub_1ABDBAE80(v39, v40);
        sub_1ABF2FD1C();
        v79 = *(_QWORD *)(v0 + 272);
        v81 = *(_QWORD *)(v0 + 264);
        sub_1ABF2FD1C();
        v41 = *(_QWORD *)(v0 + 304);
        v78 = *(_QWORD *)(v0 + 296);
        sub_1ABF2FD1C();
        v42 = *(_QWORD *)(v0 + 312);
        v43 = *(_QWORD *)(v0 + 320);
        v45 = v37[5];
        v44 = v37[6];
        v47 = v37[7];
        v46 = v37[8];
        v92[0] = 0;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABD15B80(v81, v79, v78, v41, v42, v43, v92, v45, (uint64_t)&v83, v44, v47, v46, 0, 0, 0, 0);
        sub_1ABD64AD4(v40);
        sub_1ABD64AD4(v39);
        v48 = v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ABD080B8(0, *(_QWORD *)(v76 + 16) + 1, 1);
          v48 = v82[0];
        }
        v50 = *(_QWORD *)(v48 + 16);
        v49 = *(_QWORD *)(v48 + 24);
        v0 = v70;
        if (v50 >= v49 >> 1)
        {
          sub_1ABD080B8(v49 > 1, v50 + 1, 1);
          v48 = v82[0];
        }
        *(_QWORD *)(v48 + 16) = v50 + 1;
        v51 = v48 + 136 * v50;
        *(_OWORD *)(v51 + 32) = v83;
        v52 = v84;
        v53 = v85;
        v54 = v87;
        *(_OWORD *)(v51 + 80) = v86;
        *(_OWORD *)(v51 + 96) = v54;
        *(_OWORD *)(v51 + 48) = v52;
        *(_OWORD *)(v51 + 64) = v53;
        v55 = v88;
        v56 = v89;
        v57 = v90;
        *(_QWORD *)(v51 + 160) = v91;
        *(_OWORD *)(v51 + 128) = v56;
        *(_OWORD *)(v51 + 144) = v57;
        *(_OWORD *)(v51 + 112) = v55;
        if (!v74)
          break;
        --v74;
        v76 = v48;
        v38 = v72 + v67;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v48 = MEMORY[0x1E0DEE9D8];
    }
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FBF0();
    swift_release();
    swift_release();
    swift_release();
    v58 = *(_QWORD *)(v0 + 136);
    v59 = *(_QWORD *)(v0 + 144);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 112), v58);
    v60 = *(_QWORD *)(v0 + 24);
    v62 = *(_QWORD *)(v0 + 32);
    v61 = *(_QWORD *)(v0 + 40);
    v63 = *(_QWORD *)(v0 + 48);
    v64 = *(_WORD *)(v0 + 56);
    *(_QWORD *)&v83 = *(_QWORD *)(v0 + 16);
    *((_QWORD *)&v83 + 1) = v60;
    *(_QWORD *)&v84 = v62;
    *((_QWORD *)&v84 + 1) = v61;
    *(_QWORD *)&v85 = v63;
    WORD4(v85) = v64;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    *(_QWORD *)(v0 + 472) = sub_1ABF13358(v48, &v83, v58, v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v65 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 480) = v65;
    *v65 = v0;
    v65[1] = sub_1ABE3B268;
    return sub_1ABF31150();
  }
  else
  {
    v17 = sub_1ABF31324();
    v18 = sub_1ABF31BF4();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_QWORD *)&v83 = v20;
      *(_DWORD *)v19 = 136315138;
      swift_beginAccess();
      v21 = *(_QWORD *)(v0 + 40);
      v22 = *(_QWORD *)(v70 + 48);
      sub_1ABF2FF5C();
      *(_QWORD *)(v70 + 344) = sub_1ABD1FE2C(v21, v22, (uint64_t *)&v83);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1ABCEF000, v17, (os_log_type_t)v18, "Successfully created new watchlist id=%s", v19, 0xCu);
      swift_arrayDestroy();
      v0 = v70;
      MEMORY[0x1AF438FFC](v20, -1, -1);
      MEMORY[0x1AF438FFC](v19, -1, -1);
    }

    swift_beginAccess();
    v23 = *(_QWORD *)(v0 + 24);
    v25 = *(_QWORD *)(v0 + 32);
    v24 = *(_QWORD *)(v0 + 40);
    v26 = *(_QWORD *)(v0 + 48);
    v27 = *(_WORD *)(v0 + 56);
    *(_QWORD *)&v83 = *(_QWORD *)(v0 + 16);
    *((_QWORD *)&v83 + 1) = v23;
    *(_QWORD *)&v84 = v25;
    *((_QWORD *)&v84 + 1) = v24;
    *(_QWORD *)&v85 = v26;
    WORD4(v85) = v27;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    WatchlistEntity.init(from:)((uint64_t)&v83, v82);
    v28 = v82[1];
    v29 = v82[2];
    *(_QWORD *)(v0 + 216) = v82[0];
    *(_QWORD *)(v0 + 224) = v28;
    *(_QWORD *)(v0 + 232) = v29;
    sub_1ABD67FB8();
    sub_1ABF2FCF8();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1ABE3B268()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 112);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE3B2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  _QWORD v20[3];
  uint64_t v21[5];
  __int16 v22;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_WORD *)(v0 + 104);
  v19 = *(_OWORD *)(v0 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = v19;
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 56) = v4;
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BF4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v21[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_beginAccess();
    v10 = *(_QWORD *)(v0 + 40);
    v9 = *(_QWORD *)(v0 + 48);
    sub_1ABF2FF5C();
    *(_QWORD *)(v0 + 344) = sub_1ABD1FE2C(v10, v9, v21);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v5, v6, "Successfully created new watchlist id=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);
  }

  swift_beginAccess();
  v11 = *(_QWORD *)(v0 + 24);
  v13 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(_WORD *)(v0 + 56);
  v21[0] = *(_QWORD *)(v0 + 16);
  v21[1] = v11;
  v21[2] = v13;
  v21[3] = v12;
  v21[4] = v14;
  v22 = v15;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  WatchlistEntity.init(from:)((uint64_t)v21, v20);
  v16 = v20[1];
  v17 = v20[2];
  *(_QWORD *)(v0 + 216) = v20[0];
  *(_QWORD *)(v0 + 224) = v16;
  *(_QWORD *)(v0 + 232) = v17;
  sub_1ABD67FB8();
  sub_1ABF2FCF8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE3B55C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE3B5AC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE3B618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41050 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC43A98);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE3B688()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABCF4DA8(0, &qword_1EEC43AC8, (uint64_t (*)(void))sub_1ABE397A0, (uint64_t)&type metadata for NewWatchlistIntent, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABCF4DA8(0, &qword_1EEC43AD0, (uint64_t (*)(void))sub_1ABE397A0, (uint64_t)&type metadata for NewWatchlistIntent, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABE39808();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF80();
}

uint64_t sub_1ABE3B814(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1ABD37AA0;
  return sub_1ABE3A604(a1);
}

uint64_t sub_1ABE3B868()
{
  sub_1ABE397A0();
  return sub_1ABF2FCA4();
}

unint64_t sub_1ABE3B894()
{
  unint64_t result;

  result = qword_1ED3470D0;
  if (!qword_1ED3470D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42574, &type metadata for NewWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3470D0);
  }
  return result;
}

unint64_t sub_1ABE3B8DC()
{
  unint64_t result;

  result = qword_1ED3470C0;
  if (!qword_1ED3470C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4259C, &type metadata for NewWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3470C0);
  }
  return result;
}

uint64_t sub_1ABE3B920()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1ABE3B944()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for NewWatchlistIntent()
{
  return &type metadata for NewWatchlistIntent;
}

unint64_t sub_1ABE3B980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC43B20;
  if (!qword_1EEC43B20)
  {
    sub_1ABCF4DA8(255, &qword_1EEC43B28, (uint64_t (*)(void))sub_1ABE397A0, (uint64_t)&type metadata for NewWatchlistIntent, MEMORY[0x1E0C91678]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C916B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC43B20);
  }
  return result;
}

uint64_t sub_1ABE3B9E8()
{
  return sub_1ABCFE1EC(&qword_1EEC43B30, (uint64_t (*)(uint64_t))sub_1ABE3BA14, MEMORY[0x1E0C915A0]);
}

void sub_1ABE3BA14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43B38)
  {
    sub_1ABD67FB8();
    sub_1ABD6998C();
    v0 = sub_1ABF2FF38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43B38);
  }
}

uint64_t SDSAuthToken.init(fetchDate:url:accessKey:expirationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  v12 = sub_1ABF30760();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v18(a6, a1, v12);
  v13 = (int *)type metadata accessor for SDSAuthToken();
  v14 = a6 + v13[5];
  v15 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a2, v15);
  v16 = (_QWORD *)(a6 + v13[6]);
  *v16 = a3;
  v16[1] = a4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(a6 + v13[7], a5, v12);
}

uint64_t sub_1ABE3BB64()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE3BB98 + 4 * byte_1ABF42600[*v0]))(0x7461446863746566, 0xE900000000000065);
}

uint64_t sub_1ABE3BB98()
{
  return 7107189;
}

uint64_t sub_1ABE3BBA8()
{
  return 0x654B737365636361;
}

uint64_t sub_1ABE3BBC0()
{
  return 0x6974617269707865;
}

uint64_t sub_1ABE3BBE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE3CB48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE3BC08()
{
  sub_1ABE3BE5C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE3BC30()
{
  sub_1ABE3BE5C();
  return sub_1ABF32398();
}

uint64_t SDSAuthToken.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;
  char v12;
  char v13;

  sub_1ABE3C2B0(0, &qword_1ED34E608, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE3BE5C();
  sub_1ABF32368();
  v13 = 0;
  sub_1ABF30760();
  sub_1ABCFE1EC(&qword_1ED34EAA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1ABF321D0();
  if (!v1)
  {
    v9[1] = type metadata accessor for SDSAuthToken();
    v12 = 1;
    sub_1ABF305D4();
    sub_1ABCFE1EC(&qword_1ED34EA80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1ABF321D0();
    v11 = 2;
    sub_1ABF32194();
    v10 = 3;
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1ABE3BE5C()
{
  unint64_t result;

  result = qword_1ED34EC70;
  if (!qword_1ED34EC70)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4274C, &type metadata for SDSAuthToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EC70);
  }
  return result;
}

uint64_t SDSAuthToken.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v31 = a2;
  v35 = sub_1ABF305D4();
  v32 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1ABF30760();
  v33 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v36 = (void (*)(uint64_t, char *, uint64_t))((char *)v28 - v7);
  sub_1ABE3C2B0(0, &qword_1ED34E200, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v38 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v28 - v10;
  v12 = type metadata accessor for SDSAuthToken();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE3BE5C();
  v39 = v11;
  v15 = (uint64_t)v40;
  sub_1ABF3235C();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = v5;
  v30 = v12;
  v16 = (uint64_t)v14;
  v40 = a1;
  v17 = v34;
  v18 = v35;
  v44 = 0;
  v19 = sub_1ABCFE1EC(&qword_1ED34CCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v20 = v37;
  sub_1ABF32110();
  v28[1] = v19;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
  v21(v16, (char *)v36, v20);
  v43 = 1;
  sub_1ABCFE1EC(&qword_1ED34EA90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  sub_1ABF32110();
  v36 = v21;
  v22 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v16 + *(int *)(v30 + 20), v17, v18);
  v42 = 2;
  v23 = sub_1ABF320E0();
  v24 = (uint64_t *)(v16 + *(int *)(v22 + 24));
  *v24 = v23;
  v24[1] = v25;
  v41 = 3;
  v26 = v37;
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v39, v38);
  v36(v16 + *(int *)(v22 + 28), v29, v26);
  sub_1ABE3C30C(v16, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return sub_1ABE3C350(v16);
}

void sub_1ABE3C2B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE3BE5C();
    v7 = a3(a1, &type metadata for SDSAuthToken.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1ABE3C30C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDSAuthToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABE3C350(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SDSAuthToken();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABE3C38C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SDSAuthToken.init(from:)(a1, a2);
}

uint64_t sub_1ABE3C3A0(_QWORD *a1)
{
  return SDSAuthToken.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for SDSAuthToken(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = sub_1ABF30760();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1ABF305D4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)a1 + v14;
    v19 = (char *)a2 + v14;
    sub_1ABF2FF5C();
    v8((uint64_t *)v18, (uint64_t *)v19, v7);
  }
  return a1;
}

uint64_t destroy for SDSAuthToken(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_1ABF30760();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 28), v4);
}

uint64_t initializeWithCopy for SDSAuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1ABF30760();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = a1 + v13;
  v18 = a2 + v13;
  sub_1ABF2FF5C();
  v7(v17, v18, v6);
  return a1;
}

uint64_t assignWithCopy for SDSAuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v6 = sub_1ABF30760();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t initializeWithTake for SDSAuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1ABF30760();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v7(a1 + v12, a2 + v12, v6);
  return a1;
}

uint64_t assignWithTake for SDSAuthToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1ABF30760();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSAuthToken()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABE3C844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1ABF30760();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1ABF305D4();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSAuthToken()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABE3C8FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1ABF30760();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1ABF305D4();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for SDSAuthToken.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABE3C9F0 + 4 * byte_1ABF42609[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABE3CA24 + 4 * byte_1ABF42604[v4]))();
}

uint64_t sub_1ABE3CA24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE3CA2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE3CA34);
  return result;
}

uint64_t sub_1ABE3CA40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE3CA48);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABE3CA4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE3CA54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSAuthToken.CodingKeys()
{
  return &type metadata for SDSAuthToken.CodingKeys;
}

unint64_t sub_1ABE3CA74()
{
  unint64_t result;

  result = qword_1EEC43B40;
  if (!qword_1EEC43B40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42724, &type metadata for SDSAuthToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43B40);
  }
  return result;
}

unint64_t sub_1ABE3CABC()
{
  unint64_t result;

  result = qword_1ED34EC80;
  if (!qword_1ED34EC80)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42694, &type metadata for SDSAuthToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EC80);
  }
  return result;
}

unint64_t sub_1ABE3CB04()
{
  unint64_t result;

  result = qword_1ED34EC78;
  if (!qword_1ED34EC78)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF426BC, &type metadata for SDSAuthToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EC78);
  }
  return result;
}

uint64_t sub_1ABE3CB48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461446863746566 && a2 == 0xE900000000000065;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654B737365636361 && a2 == 0xE900000000000079 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1ABE3CD24()
{
  return 1;
}

uint64_t sub_1ABE3CD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC43B48);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC43B48);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABE3CEA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC41060, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1EEC43B48, a1);
}

uint64_t sub_1ABE3CEC4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABD00308(0, &qword_1ED34CAE0, (void (*)(uint64_t))MEMORY[0x1E0CAF9F8]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v12[0] = sub_1ABF30484();
  v3 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF2FE54();
  __swift_allocate_value_buffer(v10, qword_1EEC43B60);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC43B60);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v12[0]);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1ABF2FE60();
}

uint64_t sub_1ABE3D0E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC41068, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1EEC43B60, a1);
}

uint64_t sub_1ABE3D10C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABE3EFEC(0, &qword_1EEC43B78, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABE3EFEC(0, &qword_1EEC43B80, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABE3D27C();
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABE3D2E4();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF74();
}

unint64_t sub_1ABE3D27C()
{
  unint64_t result;

  result = qword_1ED3470F8;
  if (!qword_1ED3470F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF427C4, &type metadata for GetSymbolQuoteIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3470F8);
  }
  return result;
}

uint64_t sub_1ABE3D2C0()
{
  return sub_1ABF2FDD0();
}

void sub_1ABE3D2E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43B88)
  {
    sub_1ABDBAB38();
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43B88);
  }
}

uint64_t sub_1ABE3D340()
{
  return sub_1ABF2FDB8();
}

uint64_t sub_1ABE3D360(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1ABDBAE80(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABF2FDC4();
  return sub_1ABD64AD4(a1);
}

void (*sub_1ABE3D3DC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD682E8;
}

uint64_t sub_1ABE3D424@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v37 = a1;
  v1 = sub_1ABF2FFC8();
  v35 = *(_QWORD *)(v1 - 8);
  v36 = v1;
  MEMORY[0x1E0C80A78](v1);
  v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, &qword_1ED34CAD0, (void (*)(uint64_t))MEMORY[0x1E0C907D0]);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v30 - v6;
  sub_1ABD00308(0, &qword_1ED3467B0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  MEMORY[0x1E0C80A78](v7);
  v31 = (char *)&v30 - v8;
  sub_1ABD00308(0, &qword_1ED34CAE0, (void (*)(uint64_t))MEMORY[0x1E0CAF9F8]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - v10;
  v12 = sub_1ABF30484();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1ABF3049C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1ABDBAB38();
  v30 = v20;
  sub_1ABF31738();
  sub_1ABF30844();
  v21 = *MEMORY[0x1E0CAF9B8];
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v22(v15, v21, v12);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v22(v15, v21, v12);
  sub_1ABF304A8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v11, 0, 1, v18);
  v23 = type metadata accessor for SymbolEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v31, 1, 1, v23);
  v24 = sub_1ABF2FCD4();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v32, 1, 1, v24);
  v25(v33, 1, 1, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v34, *MEMORY[0x1E0C91738], v36);
  sub_1ABCFE1EC(&qword_1ED3467A8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  v26 = sub_1ABF2FE00();
  sub_1ABDAE5B8(0, &qword_1EEC43B90, &qword_1ED350680);
  sub_1ABF2FC44();
  v38 = 0u;
  v39 = 0u;
  v40 = 0;
  sub_1ABF2FC38();
  v27 = sub_1ABF2FC14();
  sub_1ABDAE5B8(0, &qword_1EEC43B98, (unint64_t *)&unk_1ED350800);
  v40 = 0;
  v38 = 0u;
  v39 = 0u;
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  v29 = v37;
  *v37 = v26;
  v29[1] = v27;
  v29[2] = result;
  return result;
}

uint64_t sub_1ABE3D8D8(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2[54] = a1;
  type metadata accessor for SymbolEntity();
  v2[55] = swift_task_alloc();
  sub_1ABD00308(0, &qword_1ED34CD90, (void (*)(uint64_t))type metadata accessor for QuoteDetail);
  v2[56] = swift_task_alloc();
  v2[57] = swift_task_alloc();
  sub_1ABD00308(0, &qword_1ED34DA80, (void (*)(uint64_t))type metadata accessor for Quote);
  v2[58] = swift_task_alloc();
  v3 = swift_task_alloc();
  v4 = *v1;
  v5 = v1[1];
  v2[59] = v3;
  v2[60] = v4;
  v6 = v1[2];
  v2[61] = v5;
  v2[62] = v6;
  v2[46] = v4;
  v2[47] = v5;
  v2[48] = v6;
  v7 = (_QWORD *)swift_task_alloc();
  v2[63] = v7;
  *v7 = v2;
  v7[1] = sub_1ABE3D9F0;
  return sub_1ABE3DCE4(v3);
}

uint64_t sub_1ABE3D9F0()
{
  uint64_t *v0;
  _QWORD *v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;

  v1 = (_QWORD *)*v0;
  v2 = (_OWORD *)(*v0 + 392);
  v3 = *(_QWORD *)(*v0 + 496);
  v4 = *v0;
  v7 = *(_OWORD *)(*v0 + 480);
  swift_task_dealloc();
  *v2 = v7;
  v1[51] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v1[64] = v5;
  *v5 = v4;
  v5[1] = sub_1ABE3DA7C;
  return sub_1ABE3E34C(v1[57]);
}

uint64_t sub_1ABE3DA7C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1ABE3DAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v13[2];

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 456);
  v3 = *(_QWORD *)(v0 + 464);
  v4 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 448);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  sub_1ABCF57B8(v1, v3, &qword_1ED34DA80, (void (*)(uint64_t))type metadata accessor for Quote);
  sub_1ABCF57B8(v2, v5, &qword_1ED34CD90, (void (*)(uint64_t))type metadata accessor for QuoteDetail);
  sub_1ABE92C70(v4, v3, v5, (_OWORD *)(v0 + 16));
  v6 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 336) = v6;
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 176);
  v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 272) = v7;
  v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 304) = v8;
  v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 208) = v9;
  v10 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 240) = v10;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  sub_1ABEC5648(v4, v13);
  v11 = v13[1];
  *(_QWORD *)(v0 + 416) = v13[0];
  *(_QWORD *)(v0 + 424) = v11;
  sub_1ABE3EACC();
  sub_1ABE19BE4();
  sub_1ABF2FCEC();
  swift_release();
  swift_release();
  sub_1ABD18510(v2, &qword_1ED34CD90, (void (*)(uint64_t))type metadata accessor for QuoteDetail);
  sub_1ABD18510(v1, &qword_1ED34DA80, (void (*)(uint64_t))type metadata accessor for Quote);
  sub_1ABE3EB10(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE3DCE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 136) = a1;
  v3 = sub_1ABF30B14();
  *(_QWORD *)(v2 + 144) = v3;
  *(_QWORD *)(v2 + 152) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 160) = swift_task_alloc();
  type metadata accessor for SymbolEntity();
  *(_QWORD *)(v2 + 168) = swift_task_alloc();
  *(_OWORD *)(v2 + 176) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 192) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_1ABE3DD74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[21];
  v2 = v0[20];
  v9 = v0[19];
  v10 = v0[18];
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  swift_release();
  v3 = v0[5];
  v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  sub_1ABF2FD1C();
  v5 = v0[10];
  v6 = v0[11];
  sub_1ABD64AD4(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  v0[25] = sub_1ABD88E44(v5, v6, v2, v3, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v10);
  v7 = (_QWORD *)swift_task_alloc();
  v0[26] = v7;
  *v7 = v0;
  v7[1] = sub_1ABE3DEFC;
  return sub_1ABF31150();
}

uint64_t sub_1ABE3DEFC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE3DF74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE3DFE0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t type;
  uint64_t v19;
  uint64_t v20;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (qword_1ED346718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 216);
  v2 = sub_1ABF3133C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED3466E0);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v3 = v1;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v4 = v1;
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BE8();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 216);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 168);
    v10 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v10 = 136315394;
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    type = v6;
    sub_1ABF2FDB8();
    swift_release();
    swift_release();
    swift_release();
    sub_1ABF2FD1C();
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 104);
    sub_1ABD64AD4(v9);
    *(_QWORD *)(v0 + 120) = sub_1ABD1FE2C(v11, v12, &v20);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    swift_getErrorValue();
    v13 = sub_1ABF322C0();
    *(_QWORD *)(v0 + 128) = sub_1ABD1FE2C(v13, v14, &v20);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1ABCEF000, v5, type, "Failed to fetch quote for symbol=%s, error=%s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v19, -1, -1);
    MEMORY[0x1AF438FFC](v10, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
    swift_release_n();

  }
  v15 = *(_QWORD *)(v0 + 136);
  v16 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE3E34C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 136) = a1;
  v3 = sub_1ABF30B38();
  *(_QWORD *)(v2 + 144) = v3;
  *(_QWORD *)(v2 + 152) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 160) = swift_task_alloc();
  v4 = sub_1ABF30760();
  *(_QWORD *)(v2 + 168) = v4;
  *(_QWORD *)(v2 + 176) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 184) = swift_task_alloc();
  v5 = sub_1ABF30B14();
  *(_QWORD *)(v2 + 192) = v5;
  *(_QWORD *)(v2 + 200) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 208) = swift_task_alloc();
  type metadata accessor for SymbolEntity();
  *(_QWORD *)(v2 + 216) = swift_task_alloc();
  *(_OWORD *)(v2 + 224) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 240) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_1ABE3E42C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0[27];
  v2 = (_QWORD *)v0[26];
  v12 = v0[25];
  v13 = v0[24];
  v3 = v0[20];
  v17 = v0[22];
  v18 = v0[21];
  v14 = v0[23];
  v15 = v0[19];
  v16 = v0[18];
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  swift_release();
  v4 = v0[5];
  v11 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v4);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  sub_1ABF2FD1C();
  v5 = v0[10];
  v6 = v0[11];
  sub_1ABD64AD4(v1);
  *v2 = 0x404E000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v2, *MEMORY[0x1E0DB32C8], v13);
  sub_1ABF30754();
  v7 = *MEMORY[0x1E0DB3560];
  v8 = sub_1ABF30B38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v3, v7, v8);
  v0[31] = sub_1ABEE8290(v5, v6, (uint64_t)v2, v14, v3, v4, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v18);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v2, v13);
  v9 = (_QWORD *)swift_task_alloc();
  v0[32] = v9;
  *v9 = v0;
  v9[1] = sub_1ABE3E644;
  return sub_1ABF31150();
}

uint64_t sub_1ABE3E644()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE3E6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE3E748()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t type;
  uint64_t v19;
  uint64_t v20;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (qword_1ED346718 != -1)
    swift_once();
  v1 = *(void **)(v0 + 264);
  v2 = sub_1ABF3133C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED3466E0);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v3 = v1;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v4 = v1;
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BE8();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 264);
  if (v7)
  {
    v9 = *(_QWORD *)(v0 + 216);
    v10 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v10 = 136315394;
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    type = v6;
    sub_1ABF2FDB8();
    swift_release();
    swift_release();
    swift_release();
    sub_1ABF2FD1C();
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 104);
    sub_1ABD64AD4(v9);
    *(_QWORD *)(v0 + 120) = sub_1ABD1FE2C(v11, v12, &v20);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    swift_getErrorValue();
    v13 = sub_1ABF322C0();
    *(_QWORD *)(v0 + 128) = sub_1ABD1FE2C(v13, v14, &v20);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1ABCEF000, v5, type, "Failed to fetch quote detail for symbol=%s, error=%s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v19, -1, -1);
    MEMORY[0x1AF438FFC](v10, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
    swift_release_n();

  }
  v15 = *(_QWORD *)(v0 + 136);
  v16 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1ABE3EACC()
{
  unint64_t result;

  result = qword_1ED34CB88;
  if (!qword_1ED34CB88)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48B18, &type metadata for SymbolQuoteEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34CB88);
  }
  return result;
}

uint64_t sub_1ABE3EB10(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_1ABE3EC64()
{
  unint64_t result;

  result = qword_1ED347100;
  if (!qword_1ED347100)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42854, &type metadata for GetSymbolQuoteIntent);
    atomic_store(result, (unint64_t *)&qword_1ED347100);
  }
  return result;
}

unint64_t sub_1ABE3ECAC()
{
  unint64_t result;

  result = qword_1ED3470F0;
  if (!qword_1ED3470F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4287C, &type metadata for GetSymbolQuoteIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3470F0);
  }
  return result;
}

uint64_t sub_1ABE3ECF0()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1ABE3ED14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ABE3ED24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41060 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC43B48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE3ED94()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABE3EFEC(0, &qword_1EEC43B78, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABE3EFEC(0, &qword_1EEC43B80, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABE3D2E4();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF74();
}

uint64_t sub_1ABE3EEFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1ABD37AA0;
  return sub_1ABE3D8D8(a1);
}

uint64_t sub_1ABE3EF50()
{
  sub_1ABE3D27C();
  return sub_1ABF2FCA4();
}

ValueMetadata *type metadata accessor for GetSymbolQuoteIntent()
{
  return &type metadata for GetSymbolQuoteIntent;
}

unint64_t sub_1ABE3EF94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC43BC0;
  if (!qword_1EEC43BC0)
  {
    sub_1ABE3EFEC(255, &qword_1EEC43BC8, MEMORY[0x1E0C91678]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C916B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC43BC0);
  }
  return result;
}

void sub_1ABE3EFEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE3D27C();
    v7 = a3(a1, &type metadata for GetSymbolQuoteIntent, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1ABE3F048()
{
  return sub_1ABCFE1EC(&qword_1EEC43BD0, (uint64_t (*)(uint64_t))sub_1ABE3F074, MEMORY[0x1E0C91580]);
}

void sub_1ABE3F074()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43BD8)
  {
    sub_1ABE3EACC();
    sub_1ABE19BE4();
    v0 = sub_1ABF2FF38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43BD8);
  }
}

uint64_t sub_1ABE3F0F8()
{
  return sub_1ABCFE1EC(&qword_1EEC43BE0, (uint64_t (*)(uint64_t))sub_1ABE3F074, MEMORY[0x1E0C915A0]);
}

uint64_t sub_1ABE3F124(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABE3F12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1ABE3F134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1ABE3F13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1ABE3F144()
{
  sub_1ABE3F2A4();
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABE3F190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v10 = (void *)sub_1ABF31618();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a1;
  v11[5] = a2;
  v13[4] = sub_1ABE3F45C;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1ABD9FF74;
  v13[3] = &block_descriptor_17;
  v12 = _Block_copy(v13);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(a5, sel_handleRemoteNotification_completion_, v10, v12);
  _Block_release(v12);

}

void sub_1ABE3F29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABE3F190(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1ABE3F2A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43BE8)
  {
    sub_1ABF31030();
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43BE8);
  }
}

void sub_1ABE3F2F8(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;

  v7 = sub_1ABF31030();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = a1;
    a2(a1);

  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E0DB4790], v7, v9);
    a4(v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_1ABE3F3E4()
{
  sub_1ABE3F2A4();
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABE3F430()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABE3F45C(void *a1)
{
  uint64_t v1;

  sub_1ABE3F2F8(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(char *))(v1 + 32));
}

void sub_1ABE3F46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD v16[6];

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  sub_1ABF30BE0();
  sub_1ABF2FF68();
  sub_1ABF30BA4();
  v13 = (void *)sub_1ABF30B8C();
  swift_release();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = sub_1ABE3FB08;
  v14[5] = v12;
  v16[4] = sub_1ABE3FB68;
  v16[5] = v14;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1ABE3F940;
  v16[3] = &block_descriptor_18;
  v15 = _Block_copy(v16);
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(a5, sel_fetchSingleConfigurationWithSettings_completionQueue_completion_, a6, v13, v15);
  _Block_release(v15);

}

void sub_1ABE3F5B0(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, id a5, void (*a6)(void), int a7, void (*a8)(_QWORD, _QWORD, _QWORD, _QWORD), uint64_t a9)
{
  id v11;
  unint64_t v12;
  void *v13;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  id v29;
  void *v30;
  unsigned int v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v35)(_QWORD, _QWORD, _QWORD, _QWORD);
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;

  if (a5)
  {
    v11 = a5;
    ((void (*)(id))a6)(a5);

    return;
  }
  v12 = a2;
  if (a2 >> 60 == 15)
  {
    sub_1ABE3FB90();
    v13 = (void *)swift_allocError();
    a6();

    return;
  }
  if (!a3)
  {
    sub_1ABD0F474(a1, a2);
LABEL_20:
    v20 = MEMORY[0x1E0DEE9D8];
    goto LABEL_21;
  }
  if (a3 >> 62)
  {
    sub_1ABD9EA4C(a1, a2);
    sub_1ABF2FF5C();
    v18 = sub_1ABF31FE4();
    if (v18)
      goto LABEL_8;
    goto LABEL_19;
  }
  v18 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_1ABD9EA4C(a1, a2);
  sub_1ABF2FF5C();
  if (!v18)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
LABEL_8:
  v34 = a8;
  v36 = v12;
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1ABDB51C0(0, v18 & ~(v18 >> 63), 0);
  if (v18 < 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  v19 = 0;
  v20 = v38;
  do
  {
    if ((a3 & 0xC000000000000001) != 0)
      v21 = (id)MEMORY[0x1AF4380CC](v19, a3);
    else
      v21 = *(id *)(a3 + 8 * v19 + 32);
    v22 = v21;
    v23 = objc_msgSend(v21, sel_longLongValue);

    v25 = *(_QWORD *)(v38 + 16);
    v24 = *(_QWORD *)(v38 + 24);
    if (v25 >= v24 >> 1)
      sub_1ABDB51C0(v24 > 1, v25 + 1, 1);
    ++v19;
    *(_QWORD *)(v38 + 16) = v25 + 1;
    *(_QWORD *)(v38 + 8 * v25 + 32) = v23;
  }
  while (v18 != v19);
  swift_bridgeObjectRelease();
  v12 = v36;
  a8 = v34;
LABEL_21:
  v26 = MEMORY[0x1E0DEE9D8];
  if (!a4)
  {
LABEL_35:
    sub_1ABD9EA4C(a1, v12);
    a8(a1, v12, v20, v26);
    sub_1ABD0F430(a1, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABD0D868(a1, v12);
    return;
  }
  if (!(a4 >> 62))
  {
    v27 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_1ABF2FF5C();
    if (v27)
      goto LABEL_24;
    goto LABEL_34;
  }
  sub_1ABF2FF5C();
  v27 = sub_1ABF31FE4();
  if (!v27)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
LABEL_24:
  v35 = a8;
  v37 = v12;
  sub_1ABDB51A4(0, v27 & ~(v27 >> 63), 0);
  if ((v27 & 0x8000000000000000) == 0)
  {
    for (i = 0; i != v27; ++i)
    {
      if ((a4 & 0xC000000000000001) != 0)
        v29 = (id)MEMORY[0x1AF4380CC](i, a4);
      else
        v29 = *(id *)(a4 + 8 * i + 32);
      v30 = v29;
      v31 = objc_msgSend(v29, sel_intValue);

      v33 = *(_QWORD *)(v26 + 16);
      v32 = *(_QWORD *)(v26 + 24);
      if (v33 >= v32 >> 1)
        sub_1ABDB51A4(v32 > 1, v33 + 1, 1);
      *(_QWORD *)(v26 + 16) = v33 + 1;
      *(_DWORD *)(v26 + 4 * v33 + 32) = v31;
    }
    swift_bridgeObjectRelease();
    v12 = v37;
    a8 = v35;
    goto LABEL_35;
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_1ABE3F940(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  void (*v9)(void *, unint64_t, uint64_t, uint64_t, void *);
  id v10;
  unint64_t v11;
  unint64_t v12;
  id v13;

  v8 = a2;
  v9 = *(void (**)(void *, unint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1ABF2FF68();
    v10 = v8;
    v8 = (void *)sub_1ABF30658();
    v12 = v11;

    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  sub_1ABF2FF68();
  v12 = 0xF000000000000000;
  if (a3)
  {
LABEL_3:
    sub_1ABD22AD4();
    a3 = sub_1ABF31A08();
  }
LABEL_4:
  if (a4)
  {
    sub_1ABD22AD4();
    a4 = sub_1ABF31A08();
  }
  v13 = a5;
  v9(v8, v12, a3, a4, a5);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABD0D868((uint64_t)v8, v12);
  return swift_release();
}

uint64_t sub_1ABE3FA38()
{
  sub_1ABE3FA90();
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABE3FA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABE3F46C(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void sub_1ABE3FA90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FAC8)
  {
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FAC8);
  }
}

uint64_t sub_1ABE3FAE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE3FB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  _QWORD v7[4];

  v5 = *(uint64_t (**)(_QWORD *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  v7[3] = a4;
  return v5(v7);
}

uint64_t sub_1ABE3FB3C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABE3FB68(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5;

  sub_1ABE3F5B0(a1, a2, a3, a4, a5, *(void (**)(void))(v5 + 16), *(_QWORD *)(v5 + 24), *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v5 + 32), *(_QWORD *)(v5 + 40));
}

unint64_t sub_1ABE3FB90()
{
  unint64_t result;

  result = qword_1ED34C318;
  if (!qword_1ED34C318)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42A24, &_s12ManagerErrorON);
    atomic_store(result, (unint64_t *)&qword_1ED34C318);
  }
  return result;
}

uint64_t _s12ManagerErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE3FC14 + 4 * byte_1ABF42930[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE3FC34 + 4 * byte_1ABF42935[v4]))();
}

_BYTE *sub_1ABE3FC14(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE3FC34(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE3FC3C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE3FC44(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE3FC4C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE3FC54(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s12ManagerErrorOMa()
{
  return &_s12ManagerErrorON;
}

uint64_t destroy for RemoteConfigurationResult(uint64_t a1)
{
  sub_1ABD0F430(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for RemoteConfigurationResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_1ABD0F474(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[2];
  v7 = a2[3];
  a1[2] = v6;
  a1[3] = v7;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t *assignWithCopy for RemoteConfigurationResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_1ABD0F474(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1ABD0F430(v6, v7);
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RemoteConfigurationResult(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1ABD0F430(v4, v5);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteConfigurationResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteConfigurationResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteConfigurationResult()
{
  return &type metadata for RemoteConfigurationResult;
}

unint64_t sub_1ABE3FE5C()
{
  unint64_t result;

  result = qword_1EEC43BF0;
  if (!qword_1EEC43BF0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF429FC, &_s12ManagerErrorON);
    atomic_store(result, (unint64_t *)&qword_1EEC43BF0);
  }
  return result;
}

uint64_t sub_1ABE3FEA0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE146C(*a1, *a2);
}

uint64_t sub_1ABE3FEAC()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE3FF60()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE3FFF0()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE400A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE40468();
  *a1 = result;
  return result;
}

void sub_1ABE400CC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xED0000676E697373;
  v4 = 0xE900000000000065;
  v5 = 0x746972777265766FLL;
  if (v2 != 1)
  {
    v5 = 0x65646C4F7065656BLL;
    v4 = 0xEA00000000007473;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x694D6649796C6E6FLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_1ABE40140(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = (void *)sub_1ABF306D0();
  v3 = (void *)sub_1ABF31780();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  v4 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  v5 = (id)sub_1ABF31780();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

}

uint64_t sub_1ABE4034C()
{
  return type metadata accessor for UpdateUserStartDateCommand();
}

uint64_t storeEnumTagSinglePayload for UpdateUserStartDateCommand.MergePolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABE403A0 + 4 * byte_1ABF42A75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABE403D4 + 4 * byte_1ABF42A70[v4]))();
}

uint64_t sub_1ABE403D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE403DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE403E4);
  return result;
}

uint64_t sub_1ABE403F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE403F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABE403FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE40404(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateUserStartDateCommand.MergePolicy()
{
  return &type metadata for UpdateUserStartDateCommand.MergePolicy;
}

unint64_t sub_1ABE40424()
{
  unint64_t result;

  result = qword_1EEC43BF8;
  if (!qword_1EEC43BF8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42B4C, &type metadata for UpdateUserStartDateCommand.MergePolicy);
    atomic_store(result, (unint64_t *)&qword_1EEC43BF8);
  }
  return result;
}

uint64_t sub_1ABE40468()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1ABE404B0()
{
  uint64_t v0;

  return swift_deallocObject();
}

unint64_t sub_1ABE404D4()
{
  unint64_t result;

  result = qword_1ED346F70;
  if (!qword_1ED346F70)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED346F70);
  }
  return result;
}

id sub_1ABE40528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  unsigned __int8 v50;

  v7 = (_QWORD *)v6;
  v46 = a3;
  v47 = a4;
  v44 = a1;
  v45 = a2;
  sub_1ABCF5968();
  v10 = MEMORY[0x1E0C80A78](v9);
  v48 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v41 - v12;
  if (a6)
  {
    sub_1ABD69D24();
    v14 = sub_1ABF305D4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  }
  else
  {
    v15 = sub_1ABF305D4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 1, 1, v15);
  }
  v16 = qword_1ABF42C38[*(char *)(v6 + 64)];
  if (qword_1ED34E950 != -1)
    swift_once();
  sub_1ABE40F48();
  sub_1ABF30970();
  v17 = v49;
  if (qword_1ED34E948 != -1)
    swift_once();
  v18 = sub_1ABF309A0() & 1;
  v19 = sub_1ABE409C0((uint64_t)v7, v18, &qword_1ED34E888);
  v20 = sub_1ABE409C0((uint64_t)v7, v18, &qword_1ED34FA10);
  v21 = sub_1ABE40E34(v7, v18);
  v42 = v22;
  v43 = v21;
  if (qword_1ED34E940 != -1)
    swift_once();
  sub_1ABF30970();
  v23 = v49;
  if (qword_1ED34F9D8 != -1)
    swift_once();
  sub_1ABF30970();
  v24 = v50;
  if (v19)
  {
    sub_1ABD22AD4();
    v25 = (void *)sub_1ABF319FC();
    swift_bridgeObjectRelease();
    if (v20)
    {
LABEL_14:
      sub_1ABD22AD4();
      v26 = (void *)sub_1ABF319FC();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  else
  {
    v25 = 0;
    if (v20)
      goto LABEL_14;
  }
  v26 = 0;
LABEL_17:
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D86F58]), sel_initWithDisableAbTesting_overrideSegmentSetIDs_additionalSegmentSetIDs_configurationSource_debugEnvironment_ignoreCache_, v23, v25, v26, v17, v16, v24);

  sub_1ABCF5A10((uint64_t)v13, v48);
  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  v28 = qword_1ED34E878;
  v29 = qword_1ED34E880;
  v30 = (void *)objc_opt_self();
  sub_1ABF2FF5C();
  v31 = objc_msgSend(v30, sel_mainBundle);
  v32 = objc_msgSend(v31, sel_bundleIdentifier);

  if (v32)
  {
    v33 = sub_1ABF317A4();
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0xE000000000000000;
  }
  v36 = objc_msgSend((id)objc_opt_self(), sel_defaultDeviceInfo);
  objc_allocWithZone(MEMORY[0x1E0D86F50]);
  v37 = v47;
  sub_1ABF2FF5C();
  v38 = v45;
  sub_1ABF2FF5C();
  v39 = sub_1ABE40F8C(15.0, v44, v38, v46, v37, v48, v43, v42, v28, v29, v33, v35, v36, v27, 0, 1);
  sub_1ABCF59BC((uint64_t)v13);
  return v39;
}

uint64_t sub_1ABE409C0(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unsigned __int8 *v29;
  unsigned int v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  if (*a3 != -1)
    swift_once();
  type metadata accessor for RemoteConfigurationSettingsFactory();
  sub_1ABE40F48();
  sub_1ABF30970();
  v4 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0)
    v4 = v34 & 0xFFFFFFFFFFFFLL;
  if (!v4 || (a2 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1ABD0E288();
  v5 = sub_1ABF31D98();
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x1E0DEE9D8];
  v33 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
LABEL_71:
    swift_bridgeObjectRelease();
    return v6;
  }
  result = sub_1ABF2FF5C();
  v9 = 0;
  while (1)
  {
    v10 = (uint64_t *)(v5 + 32 + 16 * v9);
    v12 = *v10;
    v11 = v10[1];
    v13 = HIBYTE(v11) & 0xF;
    v14 = v12 & 0xFFFFFFFFFFFFLL;
    if ((v11 & 0x2000000000000000) != 0 ? HIBYTE(v11) & 0xF : v12 & 0xFFFFFFFFFFFFLL)
      break;
    sub_1ABF2FF5C();
    v17 = 0;
LABEL_57:
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v17);
    result = swift_bridgeObjectRelease();
    if (v28)
    {
      MEMORY[0x1AF437C04](result);
      if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1ABF31A50();
      sub_1ABF31A8C();
      result = sub_1ABF31A20();
    }
    if (++v9 == v7)
    {
      swift_bridgeObjectRelease();
      v6 = v33;
      goto LABEL_71;
    }
  }
  if ((v11 & 0x1000000000000000) != 0)
  {
    sub_1ABF2FF5C();
    v17 = (uint64_t)sub_1ABE411D8(v12, v11, 10);
    LOBYTE(v12) = v32;
LABEL_55:
    if ((v12 & 1) != 0)
      v17 = 0;
    goto LABEL_57;
  }
  if ((v11 & 0x2000000000000000) == 0)
  {
    if ((v12 & 0x1000000000000000) != 0)
      v16 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v16 = (unsigned __int8 *)sub_1ABF31EE8();
    v17 = (uint64_t)sub_1ABE412BC(v16, v14, 10);
    LOBYTE(v12) = v18 & 1;
    goto LABEL_54;
  }
  v34 = v12;
  v35 = v11 & 0xFFFFFFFFFFFFFFLL;
  if (v12 == 43)
  {
    if (!v13)
      goto LABEL_74;
    if (v13 == 1 || (BYTE1(v12) - 48) > 9u)
      goto LABEL_41;
    v17 = (BYTE1(v12) - 48);
    if (v13 != 2)
    {
      if ((BYTE2(v12) - 48) > 9u)
        goto LABEL_41;
      v17 = 10 * (BYTE1(v12) - 48) + (BYTE2(v12) - 48);
      v19 = v13 - 3;
      if (v19)
      {
        v20 = (unsigned __int8 *)&v34 + 3;
        while (1)
        {
          v21 = *v20 - 48;
          if (v21 > 9)
            goto LABEL_41;
          v22 = 10 * v17;
          if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63)
            goto LABEL_41;
          v17 = v22 + v21;
          if (__OFADD__(v22, v21))
            goto LABEL_41;
          LOBYTE(v12) = 0;
          ++v20;
          if (!--v19)
            goto LABEL_54;
        }
      }
    }
LABEL_53:
    LOBYTE(v12) = 0;
    goto LABEL_54;
  }
  if (v12 != 45)
  {
    if (!v13 || (v12 - 48) > 9u)
      goto LABEL_41;
    v17 = (v12 - 48);
    if (v13 != 1)
    {
      if ((BYTE1(v12) - 48) > 9u)
        goto LABEL_41;
      v17 = 10 * (v12 - 48) + (BYTE1(v12) - 48);
      v23 = v13 - 2;
      if (v23)
      {
        v24 = (unsigned __int8 *)&v34 + 2;
        while (1)
        {
          v25 = *v24 - 48;
          if (v25 > 9)
            goto LABEL_41;
          v26 = 10 * v17;
          if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63)
            goto LABEL_41;
          v17 = v26 + v25;
          if (__OFADD__(v26, v25))
            goto LABEL_41;
          LOBYTE(v12) = 0;
          ++v24;
          if (!--v23)
            goto LABEL_54;
        }
      }
    }
    goto LABEL_53;
  }
  if (v13)
  {
    if (v13 != 1 && (BYTE1(v12) - 48) <= 9u)
    {
      if (v13 == 2)
      {
        LOBYTE(v12) = 0;
        v17 = -(uint64_t)(BYTE1(v12) - 48);
LABEL_54:
        sub_1ABF2FF5C();
        goto LABEL_55;
      }
      if ((BYTE2(v12) - 48) <= 9u)
      {
        v17 = -10 * (BYTE1(v12) - 48) - (BYTE2(v12) - 48);
        v27 = v13 - 3;
        if (!v27)
          goto LABEL_53;
        v29 = (unsigned __int8 *)&v34 + 3;
        while (1)
        {
          v30 = *v29 - 48;
          if (v30 > 9)
            break;
          v31 = 10 * v17;
          if ((unsigned __int128)(v17 * (__int128)10) >> 64 != (10 * v17) >> 63)
            break;
          v17 = v31 - v30;
          if (__OFSUB__(v31, v30))
            break;
          LOBYTE(v12) = 0;
          ++v29;
          if (!--v27)
            goto LABEL_54;
        }
      }
    }
LABEL_41:
    v17 = 0;
    LOBYTE(v12) = 1;
    goto LABEL_54;
  }
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_1ABE40E34(_QWORD *a1, char a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if (qword_1ED34F9F0 != -1)
    swift_once();
  type metadata accessor for RemoteConfigurationSettingsFactory();
  sub_1ABE40F48();
  sub_1ABF30970();
  result = v8;
  v5 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v5 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v5 || (a2 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v6 = a1[5];
    v7 = a1[6];
    __swift_project_boxed_opaque_existential_1(a1 + 2, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  }
  return result;
}

uint64_t sub_1ABE40EFC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteConfigurationSettingsFactory()
{
  return objc_opt_self();
}

unint64_t sub_1ABE40F48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34F838;
  if (!qword_1ED34F838)
  {
    v1 = type metadata accessor for RemoteConfigurationSettingsFactory();
    result = MEMORY[0x1AF438F30](&unk_1ABF42BE4, v1);
    atomic_store(result, (unint64_t *)&qword_1ED34F838);
  }
  return result;
}

id sub_1ABE40F8C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, char a15, uint64_t a16)
{
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v28;
  void *v29;

  v18 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  v19 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  v20 = sub_1ABF305D4();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(a6, 1, v20) != 1)
  {
    v22 = (void *)sub_1ABF30550();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a6, v20);
  }
  v23 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  v25 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  LOBYTE(v28) = a15 & 1;
  v26 = objc_msgSend(v29, sel_initWithRequestKey_responseKey_fallbackURL_userID_storefrontID_bundleID_deviceInfo_debugOverrides_useBackgroundRefreshRate_requestMode_endpointTimeoutDuration_, v18, v19, v22, v23, v24, v25, a1, a13, a14, v28, a16);

  return v26;
}

uint64_t sub_1ABE4114C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1ABF318B8();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1AF437AB4](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_1ABE411C4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABE412BC(a1, a2, a3);
}

unsigned __int8 *sub_1ABE411D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  sub_1ABF2FF5C();
  v5 = sub_1ABF318DC();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1ABE41538();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1ABF31EE8();
  }
LABEL_7:
  v11 = sub_1ABE412BC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1ABE412BC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1ABE41538()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1ABF318E8();
  v4 = sub_1ABE415B4(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1ABE415B4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1ABE416F8(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1ABD2037C(v9, 0);
      v12 = sub_1ABE417E4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1AF437A54](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1AF437A54);
LABEL_9:
      sub_1ABF31EE8();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1AF437A54]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1ABE416F8(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1ABE4114C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1ABE4114C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1ABF318A0();
  }
  __break(1u);
  return result;
}

unint64_t sub_1ABE417E4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1ABE4114C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1ABF318AC();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1ABF31EE8();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1ABE4114C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1ABF31888();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1ABE419F4(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _OWORD v25[8];
  uint64_t v26;

  v6 = sub_1ABF30B38();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[7];
  v22 = a1[6];
  v23 = v10;
  v24 = *((_QWORD *)a1 + 16);
  v11 = a1[3];
  v18 = a1[2];
  v19 = v11;
  v12 = a1[5];
  v20 = a1[4];
  v21 = v12;
  v13 = a1[1];
  v16 = *a1;
  v17 = v13;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DB3560], v6);
  v25[6] = v22;
  v25[7] = v23;
  v26 = v24;
  v25[2] = v18;
  v25[3] = v19;
  v25[4] = v20;
  v25[5] = v21;
  v25[0] = v16;
  v25[1] = v17;
  v14 = (*(uint64_t (**)(_OWORD *, char *, _QWORD, uint64_t, uint64_t, uint64_t))(a3 + 8))(v25, v9, 0, 1, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1ABE41B20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1ABE41B28(a1, a2, a3, a4 & 1, a5, a6);
}

uint64_t sub_1ABE41B28(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;

  v7 = v6;
  v29 = a6;
  v30 = a3;
  v31 = a4;
  v28 = a1;
  v10 = sub_1ABF30B38();
  v11 = *(_QWORD *)(v10 - 8);
  v27[0] = v10;
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a5 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v16);
  v17 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE440C8(0, &qword_1ED347170, (void (*)(uint64_t))sub_1ABE41D34);
  v27[1] = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v7, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  v19 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v20 = (v15 + *(unsigned __int8 *)(v11 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  v24 = v28;
  v23 = v29;
  *((_QWORD *)v22 + 2) = a5;
  *((_QWORD *)v22 + 3) = v23;
  *((_QWORD *)v22 + 4) = v24;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v22[v19], v17, a5);
  (*(void (**)(char *, char *, _QWORD))(v11 + 32))(&v22[v20], v13, v27[0]);
  v25 = &v22[v21];
  *(_QWORD *)v25 = v30;
  v25[8] = v31 & 1;
  sub_1ABF2FF5C();
  return sub_1ABF31168();
}

uint64_t sub_1ABE41CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[8];
  uint64_t v10;

  v4 = *(_OWORD *)(a1 + 112);
  v9[6] = *(_OWORD *)(a1 + 96);
  v9[7] = v4;
  v10 = *(_QWORD *)(a1 + 128);
  v5 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v5;
  v6 = *(_OWORD *)(a1 + 80);
  v9[4] = *(_OWORD *)(a1 + 64);
  v9[5] = v6;
  v7 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v7;
  return (*(uint64_t (**)(_OWORD *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a4 + 8))(v9, a2, 0, 1, a3, a4);
}

void sub_1ABE41D34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED347178)
  {
    sub_1ABD12448(255, (unint64_t *)&qword_1ED34DFB0);
    sub_1ABD97FF4();
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED347178);
  }
}

uint64_t sub_1ABE41DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + 400) = a5;
  *(_QWORD *)(v5 + 320) = a3;
  *(_QWORD *)(v5 + 328) = a4;
  *(_QWORD *)(v5 + 304) = a1;
  *(_QWORD *)(v5 + 312) = a2;
  v6 = sub_1ABF30B38();
  *(_QWORD *)(v5 + 336) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 344) = v7;
  *(_QWORD *)(v5 + 352) = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v5 + 360) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABE41E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(v0 + 352);
  v1 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 344);
  v5 = *(_BYTE *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = (v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject();
  *(_QWORD *)(v0 + 368) = v11;
  *(_QWORD *)(v11 + 16) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v1, v3);
  v12 = v11 + v10;
  *(_QWORD *)v12 = v7;
  *(_BYTE *)(v12 + 8) = v5 & 1;
  sub_1ABF2FF68();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 376) = v13;
  sub_1ABD12448(0, (unint64_t *)&unk_1ED34DF90);
  sub_1ABE43C10();
  sub_1ABD33E84();
  *v13 = v0;
  v13[1] = sub_1ABE41F64;
  return sub_1ABF3190C();
}

uint64_t sub_1ABE41F64(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 384) = a1;
  *(_QWORD *)(v3 + 392) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABE41FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + 400) = a5;
  *(_QWORD *)(v5 + 320) = a3;
  *(_QWORD *)(v5 + 328) = a4;
  *(_QWORD *)(v5 + 304) = a1;
  *(_QWORD *)(v5 + 312) = a2;
  v6 = sub_1ABF30B38();
  *(_QWORD *)(v5 + 336) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 344) = v7;
  *(_QWORD *)(v5 + 352) = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v5 + 360) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABE42044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(v0 + 352);
  v1 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 344);
  v5 = *(_BYTE *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = (v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject();
  *(_QWORD *)(v0 + 368) = v11;
  *(_QWORD *)(v11 + 16) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v1, v3);
  v12 = v11 + v10;
  *(_QWORD *)v12 = v7;
  *(_BYTE *)(v12 + 8) = v5 & 1;
  sub_1ABF2FF68();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 376) = v13;
  sub_1ABD12448(0, (unint64_t *)&unk_1ED34DF90);
  sub_1ABE43C10();
  sub_1ABD33E84();
  *v13 = v0;
  v13[1] = sub_1ABE42190;
  return sub_1ABF3190C();
}

uint64_t sub_1ABE42190(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 384) = a1;
  *(_QWORD *)(v3 + 392) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABE42204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t result;
  char v24;
  _OWORD *v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (!v2)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v3);
  }
  v4 = (_OWORD *)(v0 + 16);
  v5 = v0 + 160;
  sub_1ABF2FF5C();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
  v6 = *(_OWORD *)(v1 + 48);
  v7 = *(_OWORD *)(v1 + 64);
  v8 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  v9 = *(_OWORD *)(v1 + 112);
  v10 = *(_OWORD *)(v1 + 128);
  v11 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 144) = v11;
  *(_OWORD *)(v0 + 96) = v9;
  *(_OWORD *)(v0 + 112) = v10;
  v53 = v0;
  v54 = *(_QWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v1 + 32);
  v12 = *(_OWORD *)(v1 + 96);
  v14 = *(_OWORD *)(v1 + 48);
  v13 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 224) = v12;
  *(_OWORD *)(v0 + 176) = v14;
  *(_OWORD *)(v0 + 192) = v13;
  v16 = *(_OWORD *)(v1 + 128);
  v15 = *(_OWORD *)(v1 + 144);
  v17 = *(_OWORD *)(v1 + 112);
  *(_QWORD *)(v0 + 288) = *(_QWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 256) = v16;
  *(_OWORD *)(v0 + 272) = v15;
  *(_OWORD *)(v0 + 240) = v17;
  sub_1ABDFD688(v0 + 16);
  sub_1ABDFD688(v0 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v55 = v3;
  v20 = sub_1ABD9A4D0((unint64_t *)(v0 + 160));
  v21 = v3[2];
  v22 = (v19 & 1) == 0;
  result = v21 + v22;
  if (!__OFADD__(v21, v22))
  {
    v24 = v19;
    v25 = (_OWORD *)(v1 + 176);
    do
    {
      if (v3[3] >= result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1ABE6F6CC();
          v3 = v55;
        }
      }
      else
      {
        sub_1ABE6B8A0(result, isUniquelyReferenced_nonNull_native & 1);
        v3 = v55;
        v26 = sub_1ABD9A4D0((unint64_t *)v5);
        if ((v24 & 1) != (v27 & 1))
          return sub_1ABF3229C();
        v20 = v26;
      }
      result = swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        v3[(v20 >> 6) + 8] |= 1 << v20;
        v28 = v3[6] + 136 * v20;
        v30 = *(_OWORD *)(v5 + 48);
        v29 = *(_OWORD *)(v5 + 64);
        v31 = *(_OWORD *)(v5 + 32);
        *(_OWORD *)(v28 + 16) = *(_OWORD *)(v5 + 16);
        *(_OWORD *)(v28 + 32) = v31;
        *(_OWORD *)(v28 + 48) = v30;
        *(_OWORD *)(v28 + 64) = v29;
        *(_OWORD *)v28 = *(_OWORD *)v5;
        v32 = *(_OWORD *)(v5 + 80);
        v33 = *(_OWORD *)(v5 + 96);
        v34 = *(_OWORD *)(v5 + 112);
        *(_QWORD *)(v28 + 128) = *(_QWORD *)(v5 + 128);
        *(_OWORD *)(v28 + 96) = v33;
        *(_OWORD *)(v28 + 112) = v34;
        *(_OWORD *)(v28 + 80) = v32;
        *(_QWORD *)(v3[7] + 8 * v20) = MEMORY[0x1E0DEE9D8];
        v35 = v3[2];
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (v36)
          goto LABEL_20;
        v3[2] = v37;
        sub_1ABD97ECC((uint64_t)v4);
      }
      sub_1ABEACD54(v54);
      sub_1ABD97F60((uint64_t)v4);
      sub_1ABDFD5E4((uint64_t)v4);
      if (!--v2)
      {
        v0 = v53;
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      *v4 = *v25;
      v38 = v25[1];
      v39 = v25[2];
      v40 = v25[4];
      v4[3] = v25[3];
      v4[4] = v40;
      v4[1] = v38;
      v4[2] = v39;
      v41 = v25[5];
      v42 = v25[6];
      v43 = v25[8];
      v4[7] = v25[7];
      v4[8] = v43;
      v4[5] = v41;
      v4[6] = v42;
      v54 = *(_QWORD *)(v53 + 152);
      *(_OWORD *)v5 = *v25;
      v44 = v25[4];
      v46 = v25[1];
      v45 = v25[2];
      *(_OWORD *)(v5 + 48) = v25[3];
      *(_OWORD *)(v5 + 64) = v44;
      *(_OWORD *)(v5 + 16) = v46;
      *(_OWORD *)(v5 + 32) = v45;
      v48 = v25[6];
      v47 = v25[7];
      v49 = v25[5];
      *(_QWORD *)(v5 + 128) = *((_QWORD *)v25 + 16);
      *(_OWORD *)(v5 + 96) = v48;
      *(_OWORD *)(v5 + 112) = v47;
      *(_OWORD *)(v5 + 80) = v49;
      sub_1ABDFD688((uint64_t)v4);
      sub_1ABDFD688((uint64_t)v4);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v55 = v3;
      v20 = sub_1ABD9A4D0((unint64_t *)v5);
      v24 = v50;
      v51 = v3[2];
      v52 = (v50 & 1) == 0;
      v25 += 9;
      result = v51 + v52;
    }
    while (!__OFADD__(v51, v52));
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1ABE42538()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE42574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + 400) = a5;
  *(_QWORD *)(v5 + 320) = a3;
  *(_QWORD *)(v5 + 328) = a4;
  *(_QWORD *)(v5 + 304) = a1;
  *(_QWORD *)(v5 + 312) = a2;
  v6 = sub_1ABF30B38();
  *(_QWORD *)(v5 + 336) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 344) = v7;
  *(_QWORD *)(v5 + 352) = *(_QWORD *)(v7 + 64);
  *(_QWORD *)(v5 + 360) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABE425E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(v0 + 352);
  v1 = *(_QWORD *)(v0 + 360);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v0 + 344);
  v5 = *(_BYTE *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 320);
  v7 = *(_QWORD *)(v0 + 328);
  v8 = *(_QWORD *)(v0 + 312);
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v10 = (v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = swift_allocObject();
  *(_QWORD *)(v0 + 368) = v11;
  *(_QWORD *)(v11 + 16) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v1, v3);
  v12 = v11 + v10;
  *(_QWORD *)v12 = v7;
  *(_BYTE *)(v12 + 8) = v5 & 1;
  sub_1ABF2FF68();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 376) = v13;
  sub_1ABD12448(0, (unint64_t *)&unk_1ED34DF90);
  sub_1ABE43C10();
  sub_1ABD33E84();
  *v13 = v0;
  v13[1] = sub_1ABE41F64;
  return sub_1ABF3190C();
}

uint64_t sub_1ABE4272C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v8 + 344) = a7;
  *(_QWORD *)(v8 + 352) = a8;
  *(_BYTE *)(v8 + 448) = a6;
  *(_QWORD *)(v8 + 328) = a4;
  *(_QWORD *)(v8 + 336) = a5;
  *(_QWORD *)(v8 + 312) = a2;
  *(_QWORD *)(v8 + 320) = a3;
  *(_QWORD *)(v8 + 304) = a1;
  v10 = sub_1ABF30B38();
  *(_QWORD *)(v8 + 360) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 368) = v11;
  *(_QWORD *)(v8 + 376) = *(_QWORD *)(v11 + 64);
  *(_QWORD *)(v8 + 384) = swift_task_alloc();
  v12 = *(_QWORD *)(a7 - 8);
  *(_QWORD *)(v8 + 392) = v12;
  *(_QWORD *)(v8 + 400) = *(_QWORD *)(v12 + 64);
  *(_QWORD *)(v8 + 408) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABE427C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char v19;

  v2 = *(_QWORD *)(v0 + 400);
  v1 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 392);
  v5 = *(_QWORD *)(v0 + 368);
  v16 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 360);
  v19 = *(_BYTE *)(v0 + 448);
  v7 = *(_QWORD *)(v0 + 328);
  v18 = *(_QWORD *)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 320);
  *(_QWORD *)(v0 + 296) = *(_QWORD *)(v0 + 312);
  v17 = *(_OWORD *)(v0 + 344);
  v9 = *(_QWORD *)(v0 + 344);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v7, v6);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = (v2 + *(unsigned __int8 *)(v5 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v0 + 416) = v12;
  *(_OWORD *)(v12 + 16) = v17;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v12 + v10, v1, v9);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12 + v11, v3, v6);
  v13 = v12 + ((v16 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v13 = v18;
  *(_BYTE *)(v13 + 8) = v19 & 1;
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v14;
  sub_1ABD12448(0, (unint64_t *)&unk_1ED34DF90);
  sub_1ABE43C10();
  sub_1ABD33E84();
  *v14 = v0;
  v14[1] = sub_1ABE42974;
  return sub_1ABF3190C();
}

uint64_t sub_1ABE42974(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 432) = a1;
  *(_QWORD *)(v3 + 440) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABE429E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t result;
  char v24;
  _OWORD *v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v50;
  uint64_t v51;
  _BOOL8 v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;

  v1 = *(_QWORD *)(v0 + 432);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (!v2)
  {
LABEL_17:
    v53 = *(_QWORD **)(v0 + 304);
    swift_bridgeObjectRelease();
    *v53 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = (_OWORD *)(v0 + 16);
  v5 = v0 + 160;
  sub_1ABF2FF5C();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
  v6 = *(_OWORD *)(v1 + 48);
  v7 = *(_OWORD *)(v1 + 64);
  v8 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 80) = v8;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  v9 = *(_OWORD *)(v1 + 112);
  v10 = *(_OWORD *)(v1 + 128);
  v11 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 144) = v11;
  *(_OWORD *)(v0 + 96) = v9;
  *(_OWORD *)(v0 + 112) = v10;
  v54 = v0;
  v55 = *(_QWORD *)(v0 + 152);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v1 + 32);
  v12 = *(_OWORD *)(v1 + 96);
  v14 = *(_OWORD *)(v1 + 48);
  v13 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 224) = v12;
  *(_OWORD *)(v0 + 176) = v14;
  *(_OWORD *)(v0 + 192) = v13;
  v16 = *(_OWORD *)(v1 + 128);
  v15 = *(_OWORD *)(v1 + 144);
  v17 = *(_OWORD *)(v1 + 112);
  *(_QWORD *)(v0 + 288) = *(_QWORD *)(v1 + 160);
  *(_OWORD *)(v0 + 256) = v16;
  *(_OWORD *)(v0 + 272) = v15;
  *(_OWORD *)(v0 + 240) = v17;
  sub_1ABDFD688(v0 + 16);
  sub_1ABDFD688(v0 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v56 = v3;
  v20 = sub_1ABD9A4D0((unint64_t *)(v0 + 160));
  v21 = v3[2];
  v22 = (v19 & 1) == 0;
  result = v21 + v22;
  if (!__OFADD__(v21, v22))
  {
    v24 = v19;
    v25 = (_OWORD *)(v1 + 176);
    do
    {
      if (v3[3] >= result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1ABE6F6CC();
          v3 = v56;
        }
      }
      else
      {
        sub_1ABE6B8A0(result, isUniquelyReferenced_nonNull_native & 1);
        v3 = v56;
        v26 = sub_1ABD9A4D0((unint64_t *)v5);
        if ((v24 & 1) != (v27 & 1))
          return sub_1ABF3229C();
        v20 = v26;
      }
      result = swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        v3[(v20 >> 6) + 8] |= 1 << v20;
        v28 = v3[6] + 136 * v20;
        v30 = *(_OWORD *)(v5 + 48);
        v29 = *(_OWORD *)(v5 + 64);
        v31 = *(_OWORD *)(v5 + 32);
        *(_OWORD *)(v28 + 16) = *(_OWORD *)(v5 + 16);
        *(_OWORD *)(v28 + 32) = v31;
        *(_OWORD *)(v28 + 48) = v30;
        *(_OWORD *)(v28 + 64) = v29;
        *(_OWORD *)v28 = *(_OWORD *)v5;
        v32 = *(_OWORD *)(v5 + 80);
        v33 = *(_OWORD *)(v5 + 96);
        v34 = *(_OWORD *)(v5 + 112);
        *(_QWORD *)(v28 + 128) = *(_QWORD *)(v5 + 128);
        *(_OWORD *)(v28 + 96) = v33;
        *(_OWORD *)(v28 + 112) = v34;
        *(_OWORD *)(v28 + 80) = v32;
        *(_QWORD *)(v3[7] + 8 * v20) = MEMORY[0x1E0DEE9D8];
        v35 = v3[2];
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (v36)
          goto LABEL_20;
        v3[2] = v37;
        sub_1ABD97ECC((uint64_t)v4);
      }
      sub_1ABEACD54(v55);
      sub_1ABD97F60((uint64_t)v4);
      sub_1ABDFD5E4((uint64_t)v4);
      if (!--v2)
      {
        v0 = v54;
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      *v4 = *v25;
      v38 = v25[1];
      v39 = v25[2];
      v40 = v25[4];
      v4[3] = v25[3];
      v4[4] = v40;
      v4[1] = v38;
      v4[2] = v39;
      v41 = v25[5];
      v42 = v25[6];
      v43 = v25[8];
      v4[7] = v25[7];
      v4[8] = v43;
      v4[5] = v41;
      v4[6] = v42;
      v55 = *(_QWORD *)(v54 + 152);
      *(_OWORD *)v5 = *v25;
      v44 = v25[4];
      v46 = v25[1];
      v45 = v25[2];
      *(_OWORD *)(v5 + 48) = v25[3];
      *(_OWORD *)(v5 + 64) = v44;
      *(_OWORD *)(v5 + 16) = v46;
      *(_OWORD *)(v5 + 32) = v45;
      v48 = v25[6];
      v47 = v25[7];
      v49 = v25[5];
      *(_QWORD *)(v5 + 128) = *((_QWORD *)v25 + 16);
      *(_OWORD *)(v5 + 96) = v48;
      *(_OWORD *)(v5 + 112) = v47;
      *(_OWORD *)(v5 + 80) = v49;
      sub_1ABDFD688((uint64_t)v4);
      sub_1ABDFD688((uint64_t)v4);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v56 = v3;
      v20 = sub_1ABD9A4D0((unint64_t *)v5);
      v24 = v50;
      v51 = v3[2];
      v52 = (v50 & 1) == 0;
      v25 += 9;
      result = v51 + v52;
    }
    while (!__OFADD__(v51, v52));
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1ABE42D2C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE42D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1ABF30B38();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1ABE42E34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;

  v4 = v1[2];
  v5 = v1[3];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(sub_1ABF30B38() - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v1[4];
  v12 = (uint64_t)v1 + v7;
  v13 = (uint64_t)v1 + v10;
  v14 = (char *)v1 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v17;
  *v17 = v2;
  v17[1] = sub_1ABD7E2B8;
  return sub_1ABE4272C(a1, v11, v12, v13, v15, v16, v4, v5);
}

uint64_t sub_1ABE42F14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(a6 + 8))(a1, a2, a3, a4 & 1);
}

uint64_t sub_1ABE42F20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(a6 + 16))(a1, a2, a3, a4 & 1);
}

uint64_t sub_1ABE42F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[22] = a2;
  v3[23] = a3;
  v3[21] = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE42F48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;

  v2 = v0[22];
  v1 = v0[23];
  v3 = v0[21];
  v4 = *(_OWORD *)(v2 + 64);
  v6 = *(_OWORD *)(v2 + 16);
  v5 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 64) = v4;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v5;
  v8 = *(_OWORD *)(v2 + 96);
  v7 = *(_OWORD *)(v2 + 112);
  v9 = *(_OWORD *)(v2 + 80);
  *(_QWORD *)(v3 + 128) = *(_QWORD *)(v2 + 128);
  *(_OWORD *)(v3 + 96) = v8;
  *(_OWORD *)(v3 + 112) = v7;
  *(_OWORD *)(v3 + 80) = v9;
  *(_OWORD *)v3 = *(_OWORD *)v2;
  v10 = swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v1;
  *(_QWORD *)(v10 + 24) = v2;
  sub_1ABD97ECC(v2);
  sub_1ABE43C9C();
  sub_1ABF3127C();
  swift_task_dealloc();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_OWORD *)(v11 + 24) = *(_OWORD *)v2;
  v12 = *(_OWORD *)(v2 + 48);
  v13 = *(_OWORD *)(v2 + 64);
  v14 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v11 + 88) = v13;
  *(_OWORD *)(v11 + 72) = v12;
  *(_OWORD *)(v11 + 56) = v14;
  v16 = *(_OWORD *)(v2 + 96);
  v15 = *(_OWORD *)(v2 + 112);
  v17 = *(_QWORD *)(v2 + 128);
  *(_OWORD *)(v11 + 104) = *(_OWORD *)(v2 + 80);
  *(_QWORD *)(v11 + 152) = v17;
  *(_OWORD *)(v11 + 136) = v15;
  *(_OWORD *)(v11 + 120) = v16;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1ABE43D64;
  *(_QWORD *)(v18 + 24) = v11;
  sub_1ABD97ECC(v2);
  sub_1ABF2FF68();
  v19 = (void *)sub_1ABF31114();
  sub_1ABD33E04();
  v0[24] = sub_1ABF31174();

  swift_release();
  swift_release();
  v20 = (_QWORD *)swift_task_alloc();
  v0[25] = v20;
  *v20 = v0;
  v20[1] = sub_1ABE430F8;
  return sub_1ABF31150();
}

uint64_t sub_1ABE430F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABE43164()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 168) + 136) = *(_QWORD *)(v0 + 152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE4317C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  v2 = *(_OWORD *)(v1 + 16);
  v3 = *(_OWORD *)(v1 + 32);
  v4 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 80) = v4;
  *(_OWORD *)(v0 + 32) = v2;
  *(_OWORD *)(v0 + 48) = v3;
  v5 = *(_OWORD *)(v1 + 80);
  v6 = *(_OWORD *)(v1 + 96);
  v7 = *(_OWORD *)(v1 + 112);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 112) = v6;
  *(_OWORD *)(v0 + 128) = v7;
  *(_OWORD *)(v0 + 96) = v5;
  sub_1ABD97F60(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE431F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[22] = a2;
  v3[23] = a3;
  v3[21] = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE4320C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD *v9;

  v1 = v0[22];
  v2 = v0[21];
  v3 = *(_OWORD *)(v1 + 64);
  v5 = *(_OWORD *)(v1 + 16);
  v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 64) = v3;
  *(_OWORD *)(v2 + 16) = v5;
  *(_OWORD *)(v2 + 32) = v4;
  v7 = *(_OWORD *)(v1 + 96);
  v6 = *(_OWORD *)(v1 + 112);
  v8 = *(_OWORD *)(v1 + 80);
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v1 + 128);
  *(_OWORD *)(v2 + 96) = v7;
  *(_OWORD *)(v2 + 112) = v6;
  *(_OWORD *)(v2 + 80) = v8;
  *(_OWORD *)v2 = *(_OWORD *)v1;
  sub_1ABE440C8(0, (unint64_t *)&unk_1ED34DD40, (void (*)(uint64_t))sub_1ABD33E04);
  swift_allocObject();
  sub_1ABD97ECC(v1);
  v0[24] = sub_1ABF31228();
  v9 = (_QWORD *)swift_task_alloc();
  v0[25] = v9;
  *v9 = v0;
  v9[1] = sub_1ABE430F8;
  return sub_1ABF31150();
}

uint64_t sub_1ABE432EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[23] = a3;
  v4[24] = a4;
  v4[21] = a1;
  v4[22] = a2;
  return swift_task_switch();
}

uint64_t sub_1ABE43308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 168);
  v13 = *(_OWORD *)(v0 + 176);
  v3 = *(_OWORD *)(v13 + 64);
  v5 = *(_OWORD *)(v13 + 16);
  v4 = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v2 + 64) = v3;
  *(_OWORD *)(v2 + 16) = v5;
  *(_OWORD *)(v2 + 32) = v4;
  v7 = *(_OWORD *)(v13 + 96);
  v6 = *(_OWORD *)(v13 + 112);
  v8 = *(_OWORD *)(v13 + 80);
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v13 + 128);
  *(_OWORD *)(v2 + 96) = v7;
  *(_OWORD *)(v2 + 112) = v6;
  *(_OWORD *)(v2 + 80) = v8;
  *(_OWORD *)v2 = *(_OWORD *)v13;
  v9 = swift_task_alloc();
  *(_OWORD *)(v9 + 16) = v13;
  *(_QWORD *)(v9 + 32) = v1;
  sub_1ABD97ECC(v13);
  sub_1ABD12448(0, (unint64_t *)&qword_1ED34DFB0);
  sub_1ABF3127C();
  swift_task_dealloc();
  v10 = (void *)sub_1ABF31114();
  sub_1ABD33E04();
  *(_QWORD *)(v0 + 200) = sub_1ABF31180();

  swift_release();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v11;
  *v11 = v0;
  v11[1] = sub_1ABE43448;
  return sub_1ABF31150();
}

uint64_t sub_1ABE43448()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABE434B4()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  v2 = *(_OWORD *)(v1 + 16);
  v3 = *(_OWORD *)(v1 + 32);
  v4 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 80) = v4;
  *(_OWORD *)(v0 + 32) = v2;
  *(_OWORD *)(v0 + 48) = v3;
  v5 = *(_OWORD *)(v1 + 80);
  v6 = *(_OWORD *)(v1 + 96);
  v7 = *(_OWORD *)(v1 + 112);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 112) = v6;
  *(_OWORD *)(v0 + 128) = v7;
  *(_OWORD *)(v0 + 96) = v5;
  sub_1ABD97F60(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE43528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v8 + 344) = a7;
  *(_QWORD *)(v8 + 352) = a8;
  *(_BYTE *)(v8 + 297) = a6;
  *(_QWORD *)(v8 + 328) = a4;
  *(_QWORD *)(v8 + 336) = a5;
  *(_QWORD *)(v8 + 312) = a2;
  *(_QWORD *)(v8 + 320) = a3;
  *(_QWORD *)(v8 + 304) = a1;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v8 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v8 + 128) = v9;
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(a2 + 128);
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v8 + 64) = v10;
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v8 + 96) = v11;
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 32) = v12;
  return swift_task_switch();
}

uint64_t sub_1ABE43578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t (*v18)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v19;
  _OWORD v21[8];
  uint64_t v22;

  v2 = *(_QWORD *)(v0 + 344);
  v1 = *(_QWORD *)(v0 + 352);
  v3 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 336);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 304);
  v7 = *(_BYTE *)(v0 + 297) & 1;
  v8 = *(_OWORD *)(v5 + 64);
  v10 = *(_OWORD *)(v5 + 16);
  v9 = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 16) = v10;
  *(_OWORD *)(v6 + 32) = v9;
  v12 = *(_OWORD *)(v5 + 96);
  v11 = *(_OWORD *)(v5 + 112);
  v13 = *(_OWORD *)(v5 + 80);
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(v5 + 128);
  *(_OWORD *)(v6 + 96) = v12;
  *(_OWORD *)(v6 + 112) = v11;
  *(_OWORD *)(v6 + 80) = v13;
  *(_OWORD *)v6 = *(_OWORD *)v5;
  v14 = *(_OWORD *)(v5 + 112);
  v21[6] = *(_OWORD *)(v5 + 96);
  v21[7] = v14;
  v22 = *(_QWORD *)(v5 + 128);
  v15 = *(_OWORD *)(v5 + 48);
  v21[2] = *(_OWORD *)(v5 + 32);
  v21[3] = v15;
  v16 = *(_OWORD *)(v5 + 80);
  v21[4] = *(_OWORD *)(v5 + 64);
  v21[5] = v16;
  v17 = *(_OWORD *)(v5 + 16);
  v21[0] = *(_OWORD *)v5;
  v21[1] = v17;
  v18 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8);
  sub_1ABD97ECC(v0 + 16);
  *(_QWORD *)(v0 + 360) = v18(v21, v3, v4, v7, v2, v1);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v19;
  *v19 = v0;
  v19[1] = sub_1ABE4368C;
  return sub_1ABF31150();
}

uint64_t sub_1ABE4368C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 376) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABE436F8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 304) + 136) = *(_QWORD *)(v0 + 288);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE43710()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 312);
  swift_release();
  *(_OWORD *)(v0 + 152) = *(_OWORD *)v1;
  v2 = *(_OWORD *)(v1 + 16);
  v3 = *(_OWORD *)(v1 + 32);
  v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 200) = v4;
  *(_OWORD *)(v0 + 184) = v3;
  *(_OWORD *)(v0 + 168) = v2;
  v5 = *(_OWORD *)(v1 + 80);
  v6 = *(_OWORD *)(v1 + 96);
  v7 = *(_OWORD *)(v1 + 112);
  *(_QWORD *)(v0 + 280) = *(_QWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 264) = v7;
  *(_OWORD *)(v0 + 248) = v6;
  *(_OWORD *)(v0 + 232) = v5;
  sub_1ABD97F60(v0 + 152);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE43790(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(*a1, a1[1]);
}

uint64_t sub_1ABE437C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_1ABE437EC(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E5AF8268, (uint64_t)&unk_1EEC43C78);
}

uint64_t sub_1ABE437D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_1ABE437EC(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E5AF8308, (uint64_t)&unk_1EEC43CB8);
}

uint64_t sub_1ABE437EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE v20[4];
  int v21;
  uint64_t v22;

  v22 = a8;
  v21 = a4;
  v12 = sub_1ABF30B38();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = *v8;
  sub_1ABE440C8(0, &qword_1ED347170, (void (*)(uint64_t))sub_1ABE41D34);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(&v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v12);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = v15;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v13 + 32))(v17 + v16, &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], v12);
  v18 = v17 + ((v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v18 = a3;
  *(_BYTE *)(v18 + 8) = v21 & 1;
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  return sub_1ABF31168();
}

uint64_t sub_1ABE43928@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *a1;
  *(_BYTE *)(a2 + 8) = 0;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE43948(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  return sub_1ABE437EC(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E5AF8358, (uint64_t)&unk_1EEC43CE8);
}

uint64_t sub_1ABE4395C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  *(_QWORD *)(v6 + 16) = a1;
  v10 = *a3;
  v11 = a6 & 1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_1ABD98460;
  return sub_1ABE41DAC(a2, v10, a4, a5, v11);
}

uint64_t sub_1ABE439E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_1ABF30B38() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = (uint64_t *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1ABD7E2B8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, char))((char *)&dword_1EEC43C70
                                                                                      + dword_1EEC43C70))(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1ABE43AA8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;

  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v3 + 128) = v5;
  *(_QWORD *)(v3 + 144) = *(_QWORD *)(a2 + 128);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 64) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v3 + 96) = v7;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 32) = v8;
  v9 = *a3;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 152) = v10;
  *v10 = v3;
  v10[1] = sub_1ABE4463C;
  v10[22] = v3 + 16;
  v10[23] = v9;
  v10[21] = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE43B48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  sub_1ABF30B38();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1ABD7E2B8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *))((char *)&dword_1EEC43C88 + dword_1EEC43C88))(a1, a2, (uint64_t *)(v2 + 16));
}

void sub_1ABE43C10()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEC43C98)
  {
    sub_1ABD12448(255, (unint64_t *)&qword_1ED34DFB0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, &qword_1EEC43C98);
  }
}

uint64_t sub_1ABE43C84()
{
  uint64_t v0;

  return sub_1ABEAB434(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1ABE43C9C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEC43CA8)
  {
    sub_1ABD345C8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEC43CA8);
  }
}

uint64_t sub_1ABE43D00()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1ABE43D64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABEAB540(a1, a2, *(_QWORD **)(v2 + 16), v2 + 24);
}

uint64_t sub_1ABE43D70()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE43D94(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1ABE43DC4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  *(_QWORD *)(v6 + 16) = a1;
  v10 = *a3;
  v11 = a6 & 1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_1ABD8D5B0;
  return sub_1ABE41FD8(a2, v10, a4, a5, v11);
}

uint64_t sub_1ABE43E48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_1ABF30B38() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = (uint64_t *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1ABD37AA0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, char))((char *)&dword_1EEC43CB0
                                                                                      + dword_1EEC43CB0))(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1ABE43F10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _QWORD *v10;

  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v3 + 128) = v5;
  *(_QWORD *)(v3 + 144) = *(_QWORD *)(a2 + 128);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 64) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v3 + 96) = v7;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 32) = v8;
  v9 = *a3;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 152) = v10;
  *v10 = v3;
  v10[1] = sub_1ABE43FAC;
  v10[22] = v3 + 16;
  v10[23] = v9;
  v10[21] = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE43FAC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABE43FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  sub_1ABF30B38();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1ABD7E2B8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *))((char *)&dword_1EEC43CC8 + dword_1EEC43CC8))(a1, a2, (uint64_t *)(v2 + 16));
}

uint64_t sub_1ABE440C0(uint64_t a1, uint64_t a2)
{
  return sub_1ABEC92EC(a1, a2);
}

void sub_1ABE440C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1ABF3124C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1ABE44114(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  *(_QWORD *)(v6 + 16) = a1;
  v10 = *a3;
  v11 = a6 & 1;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_1ABD98460;
  return sub_1ABE42574(a2, v10, a4, a5, v11);
}

uint64_t sub_1ABE44198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_1ABF30B38() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = (uint64_t *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1ABD7E2B8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, char))((char *)&dword_1EEC43CE0
                                                                                      + dword_1EEC43CE0))(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1ABE44260(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _QWORD *v12;

  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 128) = v7;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(a2 + 128);
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 64) = v8;
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 96) = v9;
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 32) = v10;
  v11 = *a3;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 152) = v12;
  *v12 = v4;
  v12[1] = sub_1ABE4463C;
  v12[23] = v11;
  v12[24] = a4;
  v12[21] = a1;
  v12[22] = v4 + 16;
  return swift_task_switch();
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1ABF30B38();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ABE44384(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(sub_1ABF30B38() - 8);
  v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1ABD7E2B8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t))((char *)&dword_1EEC43CF8 + dword_1EEC43CF8))(a1, a2, (uint64_t *)(v2 + 16), v7);
}

uint64_t sub_1ABE4444C()
{
  uint64_t *v0;

  return sub_1ABEC963C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1ABE44468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1ABF30B38();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1ABE44520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v6 = *(_QWORD *)(sub_1ABF30B38() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = swift_task_alloc();
  v10 = *(_OWORD *)(v2 + 16);
  v11 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + *(_QWORD *)(v11 + 64) + v7) & ~v7;
  v14 = (uint64_t *)(v2 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  v15 = *v14;
  LOBYTE(v14) = *((_BYTE *)v14 + 8);
  *(_QWORD *)(v3 + 16) = v9;
  *(_QWORD *)v9 = v3;
  *(_QWORD *)(v9 + 8) = sub_1ABD7E2B8;
  *(_OWORD *)(v9 + 344) = v10;
  *(_BYTE *)(v9 + 297) = (_BYTE)v14;
  *(_QWORD *)(v9 + 328) = v2 + v13;
  *(_QWORD *)(v9 + 336) = v15;
  *(_QWORD *)(v9 + 312) = a2;
  *(_QWORD *)(v9 + 320) = v2 + v12;
  *(_QWORD *)(v9 + 304) = a1;
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a2;
  v16 = *(_OWORD *)(a2 + 64);
  v18 = *(_OWORD *)(a2 + 16);
  v17 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v9 + 64) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v9 + 80) = v16;
  *(_OWORD *)(v9 + 32) = v18;
  *(_OWORD *)(v9 + 48) = v17;
  v20 = *(_OWORD *)(a2 + 96);
  v19 = *(_OWORD *)(a2 + 112);
  v21 = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(v9 + 144) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(v9 + 112) = v20;
  *(_OWORD *)(v9 + 128) = v19;
  *(_OWORD *)(v9 + 96) = v21;
  return swift_task_switch();
}

double sub_1ABE44644()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t sub_1ABE4464C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1ABE44654()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1ABE4465C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1ABE44664@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  double v9;
  uint64_t v10;

  v9 = *(double *)&result;
  if ((a2 & 1) != 0)
    v9 = 1.79769313e308;
  v10 = 0x7FFFFFFFFFFFFFFFLL;
  if ((a4 & 1) != 0)
    a3 = 0x7FFFFFFFFFFFFFFFLL;
  if ((a6 & 1) != 0)
    a5 = 0x7FFFFFFFFFFFFFFFLL;
  *(double *)a9 = v9;
  if ((a8 & 1) == 0)
    v10 = a7;
  *(_QWORD *)(a9 + 8) = a3;
  *(_QWORD *)(a9 + 16) = a5;
  *(_QWORD *)(a9 + 24) = v10;
  return result;
}

uint64_t sub_1ABE446A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  unsigned __int8 v41;
  char v42;
  _QWORD *v43;

  sub_1ABE44FE4(0, &qword_1ED34FEB8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE44D78();
  sub_1ABF3235C();
  if (!v2)
  {
    v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v42 = 0;
    sub_1ABF320C8();
    v10 = v40;
    LODWORD(v39) = v41;
    if ((v41 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v13 = v11[2];
      v12 = v11[3];
      if (v13 >= v12 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
      v11[2] = v13 + 1;
      v14 = &v11[2 * v13];
      v14[4] = 0xD000000000000012;
      v14[5] = 0x80000001ABF5E2E0;
      v43 = v11;
      swift_endAccess();
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v42 = 1;
    sub_1ABF320C8();
    v38 = *(_QWORD *)&v40;
    v37 = v41;
    if ((v41 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v16 = v11[2];
      v15 = v11[3];
      if (v16 >= v15 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v15 > 1), v16 + 1, 1, v11);
      v11[2] = v16 + 1;
      v17 = &v11[2 * v16];
      v17[4] = 0xD000000000000017;
      v17[5] = 0x80000001ABF5E300;
      v43 = v11;
      swift_endAccess();
    }
    v42 = 2;
    sub_1ABF320C8();
    v18 = *(_QWORD *)&v40;
    v35 = v41;
    if ((v41 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v43;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v36 = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v21 = v11[2];
      v20 = v11[3];
      if (v21 >= v20 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v20 > 1), v21 + 1, 1, v11);
      v11[2] = v21 + 1;
      v22 = &v11[2 * v21];
      v22[4] = 0xD000000000000016;
      v22[5] = 0x80000001ABF5E320;
      v43 = v11;
      swift_endAccess();
      v18 = v36;
    }
    v42 = 3;
    sub_1ABF320C8();
    if ((v41 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v43;
      v24 = swift_isUniquelyReferenced_nonNull_native();
      v36 = v18;
      if ((v24 & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v26 = v11[2];
      v25 = v11[3];
      if (v26 >= v25 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v25 > 1), v26 + 1, 1, v11);
      v11[2] = v26 + 1;
      v27 = &v11[2 * v26];
      v27[4] = 0xD000000000000022;
      v27[5] = 0x80000001ABF5E340;
      v43 = v11;
      swift_endAccess();
      v34 = 0x7FFFFFFFFFFFFFFFLL;
      v28 = v39;
      v18 = v36;
    }
    else
    {
      v34 = *(_QWORD *)&v40;
      v28 = v39;
    }
    if (v28)
      v10 = 1.79769313e308;
    v29 = v38;
    if (v37)
      v29 = 0x7FFFFFFFFFFFFFFFLL;
    v39 = v29;
    if (v35)
      v18 = 0x7FFFFFFFFFFFFFFFLL;
    if (v11[2])
    {
      sub_1ABD0F55C();
      v30 = swift_allocObject();
      v38 = v18;
      v31 = (_QWORD *)v30;
      *(_OWORD *)(v30 + 16) = xmmword_1ABF366C0;
      sub_1ABD165AC();
      v31[7] = v32;
      v31[8] = sub_1ABD82448();
      v31[4] = v11;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v33 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      v18 = v38;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v33 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    *(double *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v39;
    *(_QWORD *)(a2 + 16) = v18;
    *(_QWORD *)(a2 + 24) = v34;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ABE44D00(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABE44D38
                                                                     + 4 * asc_1ABF42CA0[a1]))(0xD000000000000012, 0x80000001ABF5E2E0);
}

uint64_t sub_1ABE44D38(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_1ABE44D70()
{
  unsigned __int8 *v0;

  return sub_1ABE44D00(*v0);
}

unint64_t sub_1ABE44D78()
{
  unint64_t result;

  result = qword_1ED34F6E8;
  if (!qword_1ED34F6E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42E20, &type metadata for AppReviewPromptConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F6E8);
  }
  return result;
}

uint64_t sub_1ABE44DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE45230(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE44DE0()
{
  sub_1ABE44D78();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE44E08()
{
  sub_1ABE44D78();
  return sub_1ABF32398();
}

uint64_t sub_1ABE44E30(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[3];
  char v12;
  char v13;
  char v14;
  char v15;

  sub_1ABE44FE4(0, &qword_1ED34FF70, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *(_QWORD *)(v1 + 8);
  v11[1] = *(_QWORD *)(v1 + 16);
  v11[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE44D78();
  sub_1ABF32368();
  v15 = 0;
  sub_1ABF321AC();
  if (!v2)
  {
    v14 = 1;
    sub_1ABF321B8();
    v13 = 2;
    sub_1ABF321B8();
    v12 = 3;
    sub_1ABF321B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABE44FB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE446A4(a1, a2);
}

uint64_t sub_1ABE44FCC(_QWORD *a1)
{
  return sub_1ABE44E30(a1);
}

void sub_1ABE44FE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE44D78();
    v7 = a3(a1, &type metadata for AppReviewPromptConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t getEnumTagSinglePayload for AppReviewPromptConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABE450D8 + 4 * byte_1ABF42CA9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABE4510C + 4 * byte_1ABF42CA4[v4]))();
}

uint64_t sub_1ABE4510C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE45114(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE4511CLL);
  return result;
}

uint64_t sub_1ABE45128(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE45130);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABE45134(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE4513C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppReviewPromptConfiguration.CodingKeys()
{
  return &type metadata for AppReviewPromptConfiguration.CodingKeys;
}

unint64_t sub_1ABE4515C()
{
  unint64_t result;

  result = qword_1EEC43D20;
  if (!qword_1EEC43D20)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42DF8, &type metadata for AppReviewPromptConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D20);
  }
  return result;
}

unint64_t sub_1ABE451A4()
{
  unint64_t result;

  result = qword_1ED34F6F8;
  if (!qword_1ED34F6F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42D68, &type metadata for AppReviewPromptConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F6F8);
  }
  return result;
}

unint64_t sub_1ABE451EC()
{
  unint64_t result;

  result = qword_1ED34F6F0;
  if (!qword_1ED34F6F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42D90, &type metadata for AppReviewPromptConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F6F0);
  }
  return result;
}

uint64_t sub_1ABE45230(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001ABF5E2E0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF5E300 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ABF5E320 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001ABF5E340)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1ABE453C8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 8))();
  sub_1ABF30CDC();
  return swift_release();
}

uint64_t sub_1ABE453FC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABE45404@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v10;
  uint64_t v13;

  v10 = 0xFFFFFFFFLL;
  if ((a3 & 1) == 0)
    v10 = a2;
  if ((a5 & 1) != 0)
    a4 = 0;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = v10;
  *(_BYTE *)(a9 + 16) = 0;
  if ((a7 & 1) != 0)
    a6 = 1;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = 0;
  v13 = 86400;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = 0;
  if ((a10 & 1) == 0)
    v13 = a8;
  *(_QWORD *)(a9 + 56) = v13;
  *(_BYTE *)(a9 + 64) = 0;
  return result;
}

uint64_t sub_1ABE4545C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABE45494 + 4 * byte_1ABF42EA0[a1]))(0xD000000000000013, 0x80000001ABF5E410);
}

uint64_t sub_1ABE45494(uint64_t a1)
{
  return a1 + 8;
}

uint64_t sub_1ABE454DC()
{
  unsigned __int8 *v0;

  return sub_1ABE4545C(*v0);
}

uint64_t sub_1ABE454E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE45EB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE45508()
{
  sub_1ABE45A38();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE45530()
{
  sub_1ABE45A38();
  return sub_1ABF32398();
}

uint64_t sub_1ABE45558(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _DWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;

  sub_1ABE45A7C(0, &qword_1ED34FF90, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v13 - v7;
  v9 = *v1;
  v19 = v1[1];
  v18 = *((unsigned __int8 *)v1 + 16);
  v17 = v1[3];
  v16 = *((unsigned __int8 *)v1 + 32);
  v10 = v1[5];
  v11 = *((unsigned __int8 *)v1 + 48);
  v14 = v1[7];
  v15 = v10;
  v13[0] = *((unsigned __int8 *)v1 + 64);
  v13[1] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE45A38();
  sub_1ABF32368();
  v25 = v9;
  v24 = 0;
  sub_1ABD165AC();
  sub_1ABD10510((unint64_t *)&qword_1ED34FCB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1ABF3217C();
  if (!v2)
  {
    v23 = 1;
    sub_1ABF32170();
    v22 = 2;
    sub_1ABF32164();
    v21 = 3;
    sub_1ABF32164();
    v20 = 4;
    sub_1ABF32164();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABE45784@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;

  sub_1ABE45A7C(0, &qword_1ED34FED8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE45A38();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1ABD165AC();
  v31 = 0;
  sub_1ABD10510((unint64_t *)&qword_1ED34FCC8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1ABF320C8();
  v10 = v32;
  v30 = 1;
  sub_1ABF2FF5C();
  v11 = sub_1ABF320BC();
  v26 = v12;
  v29 = 2;
  v13 = sub_1ABF320B0();
  v24 = v14;
  v25 = v13;
  v28 = 3;
  v15 = sub_1ABF320B0();
  HIDWORD(v22) = v16;
  v23 = v15;
  v27 = 4;
  v18 = sub_1ABF320B0();
  v19 = v9;
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v26 & 1;
  *(_QWORD *)(a2 + 24) = v25;
  *(_BYTE *)(a2 + 32) = v24 & 1;
  *(_QWORD *)(a2 + 40) = v23;
  *(_BYTE *)(a2 + 48) = BYTE4(v22) & 1;
  *(_QWORD *)(a2 + 56) = v18;
  *(_BYTE *)(a2 + 64) = v21 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE45A0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE45784(a1, a2);
}

uint64_t sub_1ABE45A20(_QWORD *a1)
{
  return sub_1ABE45558(a1);
}

unint64_t sub_1ABE45A38()
{
  unint64_t result;

  result = qword_1ED34F7B8;
  if (!qword_1ED34F7B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43014, &type metadata for PaidBundleViaOfferConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F7B8);
  }
  return result;
}

void sub_1ABE45A7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE45A38();
    v7 = a3(a1, &type metadata for PaidBundleViaOfferConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t destroy for PaidBundleViaOfferConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaidBundleViaOfferConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for PaidBundleViaOfferConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  return a1;
}

uint64_t assignWithTake for PaidBundleViaOfferConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaidBundleViaOfferConfiguration(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 65))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaidBundleViaOfferConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidBundleViaOfferConfiguration()
{
  return &type metadata for PaidBundleViaOfferConfiguration;
}

uint64_t storeEnumTagSinglePayload for PaidBundleViaOfferConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABE45D5C + 4 * byte_1ABF42EAA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABE45D90 + 4 * byte_1ABF42EA5[v4]))();
}

uint64_t sub_1ABE45D90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE45D98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE45DA0);
  return result;
}

uint64_t sub_1ABE45DAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE45DB4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABE45DB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE45DC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaidBundleViaOfferConfiguration.CodingKeys()
{
  return &type metadata for PaidBundleViaOfferConfiguration.CodingKeys;
}

unint64_t sub_1ABE45DE0()
{
  unint64_t result;

  result = qword_1EEC43D28;
  if (!qword_1EEC43D28)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42FEC, &type metadata for PaidBundleViaOfferConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D28);
  }
  return result;
}

unint64_t sub_1ABE45E28()
{
  unint64_t result;

  result = qword_1ED34F7C8;
  if (!qword_1ED34F7C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42F5C, &type metadata for PaidBundleViaOfferConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F7C8);
  }
  return result;
}

unint64_t sub_1ABE45E70()
{
  unint64_t result;

  result = qword_1ED34F7C0;
  if (!qword_1ED34F7C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42F84, &type metadata for PaidBundleViaOfferConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F7C0);
  }
  return result;
}

uint64_t sub_1ABE45EB4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001ABF5E410 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001ABF5E430 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ABF5E450 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ABF5E470 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001ABF5E490)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1ABE460A4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, char *a18, uint64_t a19, uint64_t a20,uint64_t a21,char *a22,char *a23,char *a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  char v32;
  char v33;
  char v34;
  char v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v32 = *a18;
  v33 = *a22;
  v34 = *a23;
  v35 = *a24;
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8 & 1;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11 & 1;
  *(_QWORD *)(a9 + 80) = a12;
  *(_BYTE *)(a9 + 88) = a13 & 1;
  *(_QWORD *)(a9 + 96) = a14;
  *(_BYTE *)(a9 + 104) = a15 & 1;
  *(_QWORD *)(a9 + 112) = a16;
  *(_QWORD *)(a9 + 120) = a17;
  *(_BYTE *)(a9 + 128) = v32;
  v36 = (int *)type metadata accessor for Quote();
  sub_1ABD241F8(a19, a9 + v36[13]);
  sub_1ABD241F8(a20, a9 + v36[14]);
  sub_1ABD241F8(a21, a9 + v36[15]);
  *(_BYTE *)(a9 + v36[16]) = v33;
  *(_BYTE *)(a9 + v36[17]) = v34;
  *(_BYTE *)(a9 + v36[18]) = v35;
  v37 = a9 + v36[19];
  *(_QWORD *)v37 = a25;
  *(_BYTE *)(v37 + 8) = a26 & 1;
  sub_1ABD241F8(a27, a9 + v36[20]);
  sub_1ABD241F8(a28, a9 + v36[21]);
  sub_1ABD241F8(a29, a9 + v36[23]);
  v38 = a9 + v36[22];
  v39 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v38, a30, v39);
  v40 = a9 + v36[24];
  v41 = sub_1ABF3094C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v40, a31, v41);
}

uint64_t sub_1ABE46290()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_1ABE4629C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t sub_1ABE462A8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_1ABE462B4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t sub_1ABE462C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Quote();
  return sub_1ABCFC790(v1 + *(int *)(v3 + 52), a1, (uint64_t (*)(_QWORD))sub_1ABD226F0);
}

uint64_t sub_1ABE462FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Quote();
  return sub_1ABCFC790(v1 + *(int *)(v3 + 56), a1, (uint64_t (*)(_QWORD))sub_1ABD226F0);
}

uint64_t sub_1ABE46338@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Quote();
  return sub_1ABCFC790(v1 + *(int *)(v3 + 60), a1, (uint64_t (*)(_QWORD))sub_1ABD226F0);
}

uint64_t sub_1ABE46374@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Quote();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t sub_1ABE463A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Quote();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 68));
  return result;
}

uint64_t sub_1ABE463D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Quote();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 72));
  return result;
}

uint64_t sub_1ABE46404@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Quote();
  return sub_1ABCFC790(v1 + *(int *)(v3 + 80), a1, (uint64_t (*)(_QWORD))sub_1ABD226F0);
}

uint64_t sub_1ABE46440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Quote();
  return sub_1ABCFC790(v1 + *(int *)(v3 + 84), a1, (uint64_t (*)(_QWORD))sub_1ABD226F0);
}

uint64_t sub_1ABE4647C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Quote() + 88);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1ABE464C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for Quote();
  return sub_1ABCFC790(v1 + *(int *)(v3 + 92), a1, (uint64_t (*)(_QWORD))sub_1ABD226F0);
}

uint64_t sub_1ABE46500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Quote() + 96);
  v4 = sub_1ABF3094C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1ABE4654C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE47D0C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ABE46570(_BYTE *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_1ABE4657C()
{
  sub_1ABCF4E04();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE465A4()
{
  sub_1ABCF4E04();
  return sub_1ABF32398();
}

uint64_t sub_1ABE465CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  int *v59;
  uint64_t *v60;
  char v61;
  char v62;

  v51 = a2;
  v50 = sub_1ABF3094C();
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v48 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30760();
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v6);
  v49 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v52 = (char *)&v45 - v9;
  MEMORY[0x1E0C80A78](v10);
  v45 = (uint64_t)&v45 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v45 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v45 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v45 - v19;
  sub_1ABCF4DA8(0, &qword_1ED34E288, (uint64_t (*)(void))sub_1ABCF4E04, (uint64_t)&type metadata for Quote.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v54 = v21;
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v45 - v23;
  v59 = (int *)type metadata accessor for Quote();
  MEMORY[0x1E0C80A78](v59);
  v60 = (uint64_t *)((char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = a1[3];
  v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1ABCF4E04();
  v53 = v24;
  v27 = (uint64_t)v57;
  sub_1ABF3235C();
  if (v27)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  v28 = (uint64_t)v20;
  v57 = v17;
  v29 = (uint64_t)v52;
  v62 = 0;
  v30 = sub_1ABF320A4();
  v31 = v60;
  *v60 = v30;
  *((_BYTE *)v31 + 8) = v32 & 1;
  v62 = 1;
  v31[2] = sub_1ABF320A4();
  *((_BYTE *)v31 + 24) = v33 & 1;
  v62 = 2;
  v31[4] = sub_1ABF320A4();
  *((_BYTE *)v31 + 40) = v34 & 1;
  v62 = 3;
  v31[6] = sub_1ABF320A4();
  *((_BYTE *)v31 + 56) = v35 & 1;
  v62 = 4;
  v31[8] = sub_1ABF320A4();
  *((_BYTE *)v31 + 72) = v36 & 1;
  v62 = 5;
  v31[10] = sub_1ABF320A4();
  *((_BYTE *)v31 + 88) = v37 & 1;
  v62 = 6;
  v31[12] = sub_1ABF320A4();
  *((_BYTE *)v31 + 104) = v38 & 1;
  v62 = 7;
  v31[14] = sub_1ABF3208C();
  v31[15] = v39;
  v61 = 8;
  sub_1ABE47024();
  sub_1ABF32110();
  *((_BYTE *)v31 + 128) = v62;
  v62 = 9;
  sub_1ABCFE1EC(&qword_1ED34CCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1ABF320C8();
  sub_1ABD241F8(v28, (uint64_t)v60 + v59[13]);
  v62 = 10;
  sub_1ABF320C8();
  sub_1ABD241F8((uint64_t)v57, (uint64_t)v60 + v59[14]);
  v62 = 11;
  sub_1ABF320C8();
  sub_1ABD241F8((uint64_t)v14, (uint64_t)v60 + v59[15]);
  v61 = 12;
  sub_1ABE47068();
  sub_1ABF320C8();
  *((_BYTE *)v60 + v59[16]) = v62;
  v61 = 13;
  sub_1ABF320C8();
  *((_BYTE *)v60 + v59[17]) = v62;
  v61 = 14;
  sub_1ABF320C8();
  *((_BYTE *)v60 + v59[18]) = v62;
  v62 = 15;
  v40 = sub_1ABF320A4();
  v41 = (char *)v60 + v59[19];
  *(_QWORD *)v41 = v40;
  v41[8] = v42 & 1;
  v62 = 16;
  sub_1ABF320C8();
  sub_1ABD241F8(v45, (uint64_t)v60 + v59[20]);
  v62 = 17;
  sub_1ABF320C8();
  sub_1ABD241F8(v29, (uint64_t)v60 + v59[21]);
  v62 = 18;
  sub_1ABF32110();
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))((char *)v60 + v59[22], v46, v56);
  v62 = 19;
  sub_1ABF320C8();
  sub_1ABD241F8(v49, (uint64_t)v60 + v59[23]);
  v62 = 20;
  sub_1ABCFE1EC(&qword_1ED34CCF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB14A0]);
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v53, v54);
  v43 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))((char *)v60 + v59[24], v48, v50);
  sub_1ABCFC790(v43, v51, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  return sub_1ABCFC3BC(v43, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
}

uint64_t sub_1ABE47010@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE465CC(a1, a2);
}

unint64_t sub_1ABE47024()
{
  unint64_t result;

  result = qword_1ED34CEE0;
  if (!qword_1ED34CEE0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for ExchangeStatus, &type metadata for ExchangeStatus);
    atomic_store(result, (unint64_t *)&qword_1ED34CEE0);
  }
  return result;
}

unint64_t sub_1ABE47068()
{
  unint64_t result;

  result = qword_1ED34CDA8;
  if (!qword_1ED34CDA8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for QuoteSource, &type metadata for QuoteSource);
    atomic_store(result, (unint64_t *)&qword_1ED34CDA8);
  }
  return result;
}

unint64_t sub_1ABE470AC()
{
  unint64_t result;

  result = qword_1ED34E7B0;
  if (!qword_1ED34E7B0)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEB078], MEMORY[0x1E0DEB070]);
    atomic_store(result, (unint64_t *)&qword_1ED34E7B0);
  }
  return result;
}

void sub_1ABE470F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E7D8)
  {
    v0 = sub_1ABF32038();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E7D8);
  }
}

unint64_t sub_1ABE4714C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34E778;
  if (!qword_1ED34E778)
  {
    sub_1ABCF4DA8(255, &qword_1ED34E780, (uint64_t (*)(void))sub_1ABE470AC, MEMORY[0x1E0DEB070], MEMORY[0x1E0CAFAE8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0CAFAF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34E778);
  }
  return result;
}

uint64_t sub_1ABE471B4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  int v47;
  int v48;
  uint64_t v49;
  void (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  void *v52;
  char *v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  v9 = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  v10 = a2[8];
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 64) = v10;
  v11 = a2[10];
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_QWORD *)(a1 + 80) = v11;
  v12 = a2[12];
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  *(_QWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 112) = a2[14];
  *(_QWORD *)(a1 + 120) = a2[15];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
  v13 = a3[13];
  v14 = (void *)(a1 + v13);
  v15 = (char *)a2 + v13;
  v16 = sub_1ABF30760();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    sub_1ABD226F0();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  v22 = a3[14];
  v23 = (void *)(a1 + v22);
  v24 = (char *)a2 + v22;
  v25 = v18((void *)(a1 + v22), 1, v16);
  v26 = v18(v24, 1, v16);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v23, v24, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v23, v16);
LABEL_12:
    sub_1ABD226F0();
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v23, v24, v16);
LABEL_13:
  v28 = a3[15];
  v29 = (void *)(a1 + v28);
  v30 = (char *)a2 + v28;
  v31 = v18((void *)(a1 + v28), 1, v16);
  v32 = v18(v30, 1, v16);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v29, v30, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v29, 0, 1, v16);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v29, v16);
LABEL_18:
    sub_1ABD226F0();
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v29, v30, v16);
LABEL_19:
  *(_BYTE *)(a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  *(_BYTE *)(a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
  v34 = a3[19];
  v35 = a1 + v34;
  v36 = (uint64_t *)((char *)a2 + v34);
  v37 = *v36;
  *(_BYTE *)(v35 + 8) = *((_BYTE *)v36 + 8);
  *(_QWORD *)v35 = v37;
  v38 = a3[20];
  v39 = (void *)(a1 + v38);
  v40 = (char *)a2 + v38;
  v41 = v18((void *)(a1 + v38), 1, v16);
  v42 = v18(v40, 1, v16);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v39, v40, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v39, 0, 1, v16);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v39, v16);
LABEL_24:
    sub_1ABD226F0();
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v39, v40, v16);
LABEL_25:
  v44 = a3[21];
  v45 = (void *)(a1 + v44);
  v46 = (char *)a2 + v44;
  v47 = v18((void *)(a1 + v44), 1, v16);
  v48 = v18(v46, 1, v16);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v45, v46, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v45, 0, 1, v16);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v45, v16);
LABEL_30:
    sub_1ABD226F0();
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v45, v46, v16);
LABEL_31:
  v50 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 24);
  v50(a1 + a3[22], (char *)a2 + a3[22], v16);
  v51 = a3[23];
  v52 = (void *)(a1 + v51);
  v53 = (char *)a2 + v51;
  v54 = v18((void *)(a1 + v51), 1, v16);
  v55 = v18(v53, 1, v16);
  if (!v54)
  {
    if (!v55)
    {
      v50((uint64_t)v52, v53, v16);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v52, v16);
    goto LABEL_36;
  }
  if (v55)
  {
LABEL_36:
    sub_1ABD226F0();
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v52, v53, v16);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v52, 0, 1, v16);
LABEL_37:
  v57 = a3[24];
  v58 = a1 + v57;
  v59 = (uint64_t)a2 + v57;
  v60 = sub_1ABF3094C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 24))(v58, v59, v60);
  return a1;
}

uint64_t sub_1ABE47748(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  void (*v35)(void *, const void *, uint64_t);
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v8 = a3[13];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 112) = v7;
  v11 = sub_1ABF30760();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_1ABD226F0();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[14];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if (v13((const void *)(a2 + v15), 1, v11))
  {
    sub_1ABD226F0();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[15];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  if (v13((const void *)(a2 + v19), 1, v11))
  {
    sub_1ABD226F0();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  v23 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  v27 = a3[20];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  if (v13((const void *)(a2 + v27), 1, v11))
  {
    sub_1ABD226F0();
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v28, v29, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
  }
  v31 = a3[21];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  if (v13((const void *)(a2 + v31), 1, v11))
  {
    sub_1ABD226F0();
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    v35 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  }
  else
  {
    v35 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
    v35(v32, v33, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
  }
  v35((void *)(a1 + a3[22]), (const void *)(a2 + a3[22]), v11);
  v36 = a3[23];
  v37 = (void *)(a1 + v36);
  v38 = (const void *)(a2 + v36);
  if (v13((const void *)(a2 + v36), 1, v11))
  {
    sub_1ABD226F0();
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v35(v37, v38, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v37, 0, 1, v11);
  }
  v40 = a3[24];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = sub_1ABF3094C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  return a1;
}

uint64_t sub_1ABE47B24(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 120);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1ABD226F0();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = a3[13];
    }
    else
    {
      v13 = sub_1ABF30760();
      v10 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v13;
        v12 = a3[22];
      }
      else
      {
        v11 = sub_1ABF3094C();
        v10 = *(_QWORD *)(v11 - 8);
        v12 = a3[24];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_1ABE47BF4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 120) = a2;
  }
  else
  {
    sub_1ABD226F0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[13];
    }
    else
    {
      v12 = sub_1ABF30760();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[22];
      }
      else
      {
        v10 = sub_1ABF3094C();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[24];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

ValueMetadata *type metadata accessor for Quote.CodingKeys()
{
  return &type metadata for Quote.CodingKeys;
}

unint64_t sub_1ABE47CC8()
{
  unint64_t result;

  result = qword_1EEC43D30;
  if (!qword_1EEC43D30)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF432BC, &type metadata for Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D30);
  }
  return result;
}

uint64_t sub_1ABE47D0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF53CC0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756F487265746661 && a2 == 0xEF65636972507372 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF53BA0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656B72614D657270 && a2 == 0xEE00656369725074 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF5E4C0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xEE00737574617453 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xEC0000006E65704FLL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xED000065736F6C43 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ABF53C60 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x756F536563697270 && a2 == 0xEB00000000656372 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ABF53BC0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x656B72614D657270 && a2 == 0xEF656372756F5374 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ABF5E4E0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ABF53D30 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x73676E696E726165 && a2 == 0xEF65746144646E45 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ABF55EC0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x7243726576726573 && a2 == 0xEF74416465746165 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x695474656B72616DLL && a2 == 0xEE00656E6F5A656DLL)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 20;
    else
      return 21;
  }
}

ValueMetadata *type metadata accessor for YahooNewsResponse()
{
  return &type metadata for YahooNewsResponse;
}

uint64_t sub_1ABE48664()
{
  _BYTE *v0;

  if (*v0)
    return 1635018093;
  else
    return 0x656E696C64616568;
}

uint64_t sub_1ABE48698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE49378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE486BC()
{
  sub_1ABE4AB18();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE486E4()
{
  sub_1ABE4AB18();
  return sub_1ABF32398();
}

double sub_1ABE4870C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[6];

  sub_1ABE49458(a1, v8);
  if (!v2)
  {
    v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    result = *(double *)v8;
    v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1ABE48754()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7107189;
  if (*v0 != 1)
    v1 = 0x6D755374726F6873;
  if (*v0)
    return v1;
  else
    return 0x656C746974;
}

uint64_t sub_1ABE487AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE496F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE487D0()
{
  sub_1ABE4AE4C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE487F8()
{
  sub_1ABE4AE4C();
  return sub_1ABF32398();
}

double sub_1ABE48820@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1ABE4984C(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1ABE48860()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001ALL;
  if (*v0 != 1)
    v1 = 0x546873696C627570;
  if (*v0)
    return v1;
  else
    return 0x72656469766F7270;
}

uint64_t sub_1ABE488C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE49A9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE488EC()
{
  sub_1ABE4AE90();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE48914()
{
  sub_1ABE4AE90();
  return sub_1ABF32398();
}

double sub_1ABE4893C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1ABE49C00(a1, v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1ABE4897C()
{
  return 1701667182;
}

uint64_t sub_1ABE4898C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABE48A10()
{
  sub_1ABE4B340();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE48A38()
{
  sub_1ABE4B340();
  return sub_1ABF32398();
}

uint64_t sub_1ABE48A60@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_1ABDE97D0(0, &qword_1EEC43EA8, (void (*)(void))sub_1ABE4B340);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE4B340();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1ABF3208C();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1ABE48B9C()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1ABE48BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABE48C3C()
{
  sub_1ABE4B384();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE48C64()
{
  sub_1ABE4B384();
  return sub_1ABF32398();
}

uint64_t sub_1ABE48C8C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_1ABDE97D0(0, &qword_1EEC43EB8, (void (*)(void))sub_1ABE4B384);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE4B384();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1ABF320E0();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1ABE48DC8()
{
  return 0x65736E6F70736572;
}

uint64_t sub_1ABE48DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABE48E74()
{
  sub_1ABE4A5E0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE48E9C()
{
  sub_1ABE4A5E0();
  return sub_1ABF32398();
}

_QWORD *sub_1ABE48EC4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABE49E80(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE48EEC()
{
  return 0x6D6574497377656ELL;
}

uint64_t sub_1ABE48F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6D6574497377656ELL && a2 == 0xE900000000000073)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABE48FA8()
{
  sub_1ABE4A760();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE48FD0()
{
  sub_1ABE4A760();
  return sub_1ABF32398();
}

_QWORD *sub_1ABE48FF8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABE49FC8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE49020()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABE49070()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABE49088()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABE490D4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ABE49124(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6574497377656ELL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1ABE49140()
{
  return 0x6D6574497377656ELL;
}

uint64_t sub_1ABE49158@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ABE491AC()
{
  sub_1ABE4A8E0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE491D4()
{
  sub_1ABE4A8E0();
  return sub_1ABF32398();
}

uint64_t sub_1ABE491FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1ABE4A110(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE49224()
{
  return 0x5265636976726573;
}

uint64_t sub_1ABE49248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x5265636976726573 && a2 == 0xEF65736E6F707365)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABE49300()
{
  sub_1ABE4A45C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE49328()
{
  sub_1ABE4A45C();
  return sub_1ABF32398();
}

_QWORD *sub_1ABE49350@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABE4A314(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE49378(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656E696C64616568 && a2 == 0xE800000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635018093 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1ABE49458@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a2;
  sub_1ABDE97D0(0, &qword_1EEC43E10, (void (*)(void))sub_1ABE4AB18);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE4AB18();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v27;
  v34 = 0;
  sub_1ABE4AB5C();
  sub_1ABF32110();
  v11 = v29;
  v12 = v31;
  v24 = v30;
  v25 = v28;
  v13 = v33;
  v23 = v32;
  v34 = 1;
  sub_1ABE4ABA0();
  v26 = v11;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v28;
  v14 = v29;
  v16 = v31;
  v17 = v33;
  v21 = v32;
  v22 = v30;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v26;
  result = swift_bridgeObjectRelease();
  *v10 = v25;
  v10[1] = v18;
  v10[2] = v24;
  v10[3] = v12;
  v10[4] = v23;
  v10[5] = v13;
  v10[6] = v15;
  v10[7] = v14;
  v10[8] = v22;
  v10[9] = v16;
  v10[10] = v21;
  v10[11] = v17;
  return result;
}

uint64_t sub_1ABE496F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D755374726F6873 && a2 == 0xEC0000007972616DLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1ABE4984C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  char v28;
  char v29;

  v26 = a2;
  sub_1ABDE97D0(0, &qword_1EEC43E48, (void (*)(void))sub_1ABE4AE4C);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE4AE4C();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v26;
  v29 = 0;
  v11 = sub_1ABF320E0();
  v13 = v12;
  v25 = v11;
  v28 = 1;
  sub_1ABF2FF5C();
  v14 = sub_1ABF320E0();
  v16 = v15;
  v23 = v14;
  v27 = 2;
  sub_1ABF2FF5C();
  v24 = v16;
  v17 = sub_1ABF3208C();
  v19 = v18;
  v20 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  sub_1ABF2FF5C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v21 = v24;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *v10 = v25;
  v10[1] = v13;
  v10[2] = v23;
  v10[3] = v21;
  v10[4] = v20;
  v10[5] = v19;
  return result;
}

uint64_t sub_1ABE49A9C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72656469766F7270 && a2 == 0xE800000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001ABF5E500 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x546873696C627570 && a2 == 0xEB00000000656D69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1ABE49C00@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  sub_1ABDE97D0(0, &qword_1EEC43E58, (void (*)(void))sub_1ABE4AE90);
  v25 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE4AE90();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v24 = a2;
  v28 = 0;
  sub_1ABE4AED4();
  v10 = v25;
  sub_1ABF32110();
  v11 = v26;
  v12 = v27;
  v28 = 1;
  sub_1ABE4AF18();
  sub_1ABF2FF5C();
  sub_1ABF32110();
  v22 = v26;
  v23 = v11;
  v13 = v27;
  LOBYTE(v26) = 2;
  sub_1ABF2FF5C();
  v14 = sub_1ABF320E0();
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18 = v14;
  v17(v8, v10);
  sub_1ABF2FF5C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v20 = v13;
  v21 = v24;
  *v24 = v23;
  v21[1] = v12;
  v21[2] = v22;
  v21[3] = v20;
  v21[4] = v18;
  v21[5] = v16;
  return result;
}

_QWORD *sub_1ABE49E80(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1EEC43D68, (void (*)(void))sub_1ABE4A5E0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE4A5E0();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE4A624();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

_QWORD *sub_1ABE49FC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1EEC43D98, (void (*)(void))sub_1ABE4A760);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE4A760();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE4A7A4();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1ABE4A110(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1ABDE97D0(0, &qword_1EEC43DC8, (void (*)(void))sub_1ABE4A8E0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ABE4A8E0();
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE4A9D8(0, &qword_1EEC43DD8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    sub_1ABE4A924();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8 = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

_QWORD *sub_1ABE4A314(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1EEC43D38, (void (*)(void))sub_1ABE4A45C);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE4A45C();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE4A4A0();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABE4A45C()
{
  unint64_t result;

  result = qword_1EEC43D40;
  if (!qword_1EEC43D40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43498, &type metadata for YahooNewsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D40);
  }
  return result;
}

unint64_t sub_1ABE4A4A0()
{
  unint64_t result;

  result = qword_1EEC43D48;
  if (!qword_1EEC43D48)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43470, &type metadata for YahooNewsResponse.ServiceResponse);
    atomic_store(result, (unint64_t *)&qword_1EEC43D48);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.CodingKeys()
{
  return &type metadata for YahooNewsResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.ServiceResponse()
{
  return &type metadata for YahooNewsResponse.ServiceResponse;
}

unint64_t sub_1ABE4A50C()
{
  unint64_t result;

  result = qword_1EEC43D50;
  if (!qword_1EEC43D50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43448, &type metadata for YahooNewsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D50);
  }
  return result;
}

unint64_t sub_1ABE4A554()
{
  unint64_t result;

  result = qword_1EEC43D58;
  if (!qword_1EEC43D58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF433B8, &type metadata for YahooNewsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D58);
  }
  return result;
}

unint64_t sub_1ABE4A59C()
{
  unint64_t result;

  result = qword_1EEC43D60;
  if (!qword_1EEC43D60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF433E0, &type metadata for YahooNewsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D60);
  }
  return result;
}

unint64_t sub_1ABE4A5E0()
{
  unint64_t result;

  result = qword_1EEC43D70;
  if (!qword_1EEC43D70)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF435D4, &type metadata for YahooNewsResponse.ServiceResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D70);
  }
  return result;
}

unint64_t sub_1ABE4A624()
{
  unint64_t result;

  result = qword_1EEC43D78;
  if (!qword_1EEC43D78)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF435AC, &type metadata for YahooNewsResponse.Response);
    atomic_store(result, (unint64_t *)&qword_1EEC43D78);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.ServiceResponse.CodingKeys()
{
  return &type metadata for YahooNewsResponse.ServiceResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Response()
{
  return &type metadata for YahooNewsResponse.Response;
}

unint64_t sub_1ABE4A68C()
{
  unint64_t result;

  result = qword_1EEC43D80;
  if (!qword_1EEC43D80)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43584, &type metadata for YahooNewsResponse.ServiceResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D80);
  }
  return result;
}

unint64_t sub_1ABE4A6D4()
{
  unint64_t result;

  result = qword_1EEC43D88;
  if (!qword_1EEC43D88)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF434F4, &type metadata for YahooNewsResponse.ServiceResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D88);
  }
  return result;
}

unint64_t sub_1ABE4A71C()
{
  unint64_t result;

  result = qword_1EEC43D90;
  if (!qword_1EEC43D90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4351C, &type metadata for YahooNewsResponse.ServiceResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43D90);
  }
  return result;
}

unint64_t sub_1ABE4A760()
{
  unint64_t result;

  result = qword_1EEC43DA0;
  if (!qword_1EEC43DA0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43710, &type metadata for YahooNewsResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43DA0);
  }
  return result;
}

unint64_t sub_1ABE4A7A4()
{
  unint64_t result;

  result = qword_1EEC43DA8;
  if (!qword_1EEC43DA8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF436E8, &type metadata for YahooNewsResponse.NewsItems);
    atomic_store(result, (unint64_t *)&qword_1EEC43DA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Response.CodingKeys()
{
  return &type metadata for YahooNewsResponse.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.NewsItems()
{
  return &type metadata for YahooNewsResponse.NewsItems;
}

unint64_t sub_1ABE4A80C()
{
  unint64_t result;

  result = qword_1EEC43DB0;
  if (!qword_1EEC43DB0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF436C0, &type metadata for YahooNewsResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43DB0);
  }
  return result;
}

unint64_t sub_1ABE4A854()
{
  unint64_t result;

  result = qword_1EEC43DB8;
  if (!qword_1EEC43DB8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43630, &type metadata for YahooNewsResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43DB8);
  }
  return result;
}

unint64_t sub_1ABE4A89C()
{
  unint64_t result;

  result = qword_1EEC43DC0;
  if (!qword_1EEC43DC0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43658, &type metadata for YahooNewsResponse.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43DC0);
  }
  return result;
}

unint64_t sub_1ABE4A8E0()
{
  unint64_t result;

  result = qword_1EEC43DD0;
  if (!qword_1EEC43DD0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43884, &type metadata for YahooNewsResponse.NewsItems.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43DD0);
  }
  return result;
}

unint64_t sub_1ABE4A924()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC43DE0;
  if (!qword_1EEC43DE0)
  {
    sub_1ABE4A9D8(255, &qword_1EEC43DD8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE4A994();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC43DE0);
  }
  return result;
}

unint64_t sub_1ABE4A994()
{
  unint64_t result;

  result = qword_1EEC43DE8;
  if (!qword_1EEC43DE8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4385C, &type metadata for YahooNewsResponse.NewsItem);
    atomic_store(result, (unint64_t *)&qword_1EEC43DE8);
  }
  return result;
}

void sub_1ABE4A9D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for YahooNewsResponse.NewsItem);
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for YahooNewsResponse.NewsItems.CodingKeys()
{
  return &type metadata for YahooNewsResponse.NewsItems.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.NewsItem()
{
  return &type metadata for YahooNewsResponse.NewsItem;
}

unint64_t sub_1ABE4AA44()
{
  unint64_t result;

  result = qword_1EEC43DF8;
  if (!qword_1EEC43DF8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43834, &type metadata for YahooNewsResponse.NewsItems.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43DF8);
  }
  return result;
}

unint64_t sub_1ABE4AA8C()
{
  unint64_t result;

  result = qword_1EEC43E00;
  if (!qword_1EEC43E00)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4376C, &type metadata for YahooNewsResponse.NewsItems.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E00);
  }
  return result;
}

unint64_t sub_1ABE4AAD4()
{
  unint64_t result;

  result = qword_1EEC43E08;
  if (!qword_1EEC43E08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43794, &type metadata for YahooNewsResponse.NewsItems.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E08);
  }
  return result;
}

unint64_t sub_1ABE4AB18()
{
  unint64_t result;

  result = qword_1EEC43E18;
  if (!qword_1EEC43E18)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF439EC, &type metadata for YahooNewsResponse.NewsItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E18);
  }
  return result;
}

unint64_t sub_1ABE4AB5C()
{
  unint64_t result;

  result = qword_1EEC43E20;
  if (!qword_1EEC43E20)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF439C4, &type metadata for YahooNewsResponse.Headline);
    atomic_store(result, (unint64_t *)&qword_1EEC43E20);
  }
  return result;
}

unint64_t sub_1ABE4ABA0()
{
  unint64_t result;

  result = qword_1EEC43E28;
  if (!qword_1EEC43E28)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4399C, &type metadata for YahooNewsResponse.Meta);
    atomic_store(result, (unint64_t *)&qword_1EEC43E28);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for YahooNewsResponse.NewsItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABE4AC30 + 4 * byte_1ABF43345[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABE4AC64 + 4 * byte_1ABF43340[v4]))();
}

uint64_t sub_1ABE4AC64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE4AC6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE4AC74);
  return result;
}

uint64_t sub_1ABE4AC80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE4AC88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABE4AC8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE4AC94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.NewsItem.CodingKeys()
{
  return &type metadata for YahooNewsResponse.NewsItem.CodingKeys;
}

uint64_t getEnumTagSinglePayload for YahooNewsResponse.Meta(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooNewsResponse.Meta(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Meta()
{
  return &type metadata for YahooNewsResponse.Meta;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Headline()
{
  return &type metadata for YahooNewsResponse.Headline;
}

unint64_t sub_1ABE4AD78()
{
  unint64_t result;

  result = qword_1EEC43E30;
  if (!qword_1EEC43E30)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43974, &type metadata for YahooNewsResponse.NewsItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E30);
  }
  return result;
}

unint64_t sub_1ABE4ADC0()
{
  unint64_t result;

  result = qword_1EEC43E38;
  if (!qword_1EEC43E38)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF438E4, &type metadata for YahooNewsResponse.NewsItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E38);
  }
  return result;
}

unint64_t sub_1ABE4AE08()
{
  unint64_t result;

  result = qword_1EEC43E40;
  if (!qword_1EEC43E40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4390C, &type metadata for YahooNewsResponse.NewsItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E40);
  }
  return result;
}

unint64_t sub_1ABE4AE4C()
{
  unint64_t result;

  result = qword_1EEC43E50;
  if (!qword_1EEC43E50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43C70, &type metadata for YahooNewsResponse.Headline.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E50);
  }
  return result;
}

unint64_t sub_1ABE4AE90()
{
  unint64_t result;

  result = qword_1EEC43E60;
  if (!qword_1EEC43E60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43C20, &type metadata for YahooNewsResponse.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E60);
  }
  return result;
}

unint64_t sub_1ABE4AED4()
{
  unint64_t result;

  result = qword_1EEC43E68;
  if (!qword_1EEC43E68)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43BF8, &type metadata for YahooNewsResponse.Provider);
    atomic_store(result, (unint64_t *)&qword_1EEC43E68);
  }
  return result;
}

unint64_t sub_1ABE4AF18()
{
  unint64_t result;

  result = qword_1EEC43E70;
  if (!qword_1EEC43E70)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43BD0, &type metadata for YahooNewsResponse.FinancialInstrument);
    atomic_store(result, (unint64_t *)&qword_1EEC43E70);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Meta.CodingKeys()
{
  return &type metadata for YahooNewsResponse.Meta.CodingKeys;
}

uint64_t _s10StocksCore17YahooNewsResponseV4MetaV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABE4AFBC + 4 * byte_1ABF4334F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABE4AFF0 + 4 * byte_1ABF4334A[v4]))();
}

uint64_t sub_1ABE4AFF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE4AFF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE4B000);
  return result;
}

uint64_t sub_1ABE4B00C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE4B014);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABE4B018(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE4B020(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Headline.CodingKeys()
{
  return &type metadata for YahooNewsResponse.Headline.CodingKeys;
}

uint64_t getEnumTagSinglePayload for YahooNewsResponse.FinancialInstrument(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooNewsResponse.FinancialInstrument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.FinancialInstrument()
{
  return &type metadata for YahooNewsResponse.FinancialInstrument;
}

uint64_t getEnumTagSinglePayload for YahooNewsResponse.Provider(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooNewsResponse.Provider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Provider()
{
  return &type metadata for YahooNewsResponse.Provider;
}

unint64_t sub_1ABE4B194()
{
  unint64_t result;

  result = qword_1EEC43E78;
  if (!qword_1EEC43E78)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43AF0, &type metadata for YahooNewsResponse.Headline.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E78);
  }
  return result;
}

unint64_t sub_1ABE4B1DC()
{
  unint64_t result;

  result = qword_1EEC43E80;
  if (!qword_1EEC43E80)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43BA8, &type metadata for YahooNewsResponse.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E80);
  }
  return result;
}

unint64_t sub_1ABE4B224()
{
  unint64_t result;

  result = qword_1EEC43E88;
  if (!qword_1EEC43E88)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43B18, &type metadata for YahooNewsResponse.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E88);
  }
  return result;
}

unint64_t sub_1ABE4B26C()
{
  unint64_t result;

  result = qword_1EEC43E90;
  if (!qword_1EEC43E90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43B40, &type metadata for YahooNewsResponse.Meta.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E90);
  }
  return result;
}

unint64_t sub_1ABE4B2B4()
{
  unint64_t result;

  result = qword_1EEC43E98;
  if (!qword_1EEC43E98)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43A60, &type metadata for YahooNewsResponse.Headline.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43E98);
  }
  return result;
}

unint64_t sub_1ABE4B2FC()
{
  unint64_t result;

  result = qword_1EEC43EA0;
  if (!qword_1EEC43EA0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43A88, &type metadata for YahooNewsResponse.Headline.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43EA0);
  }
  return result;
}

unint64_t sub_1ABE4B340()
{
  unint64_t result;

  result = qword_1EEC43EB0;
  if (!qword_1EEC43EB0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43E80, &type metadata for YahooNewsResponse.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43EB0);
  }
  return result;
}

unint64_t sub_1ABE4B384()
{
  unint64_t result;

  result = qword_1EEC43EC0;
  if (!qword_1EEC43EC0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43E30, &type metadata for YahooNewsResponse.FinancialInstrument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43EC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.FinancialInstrument.CodingKeys()
{
  return &type metadata for YahooNewsResponse.FinancialInstrument.CodingKeys;
}

uint64_t _s10StocksCore17YahooNewsResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE4B418 + 4 * byte_1ABF43354[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE4B438 + 4 * byte_1ABF43359[v4]))();
}

_BYTE *sub_1ABE4B418(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE4B438(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE4B440(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE4B448(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE4B450(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE4B458(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for YahooNewsResponse.Provider.CodingKeys()
{
  return &type metadata for YahooNewsResponse.Provider.CodingKeys;
}

unint64_t sub_1ABE4B478()
{
  unint64_t result;

  result = qword_1EEC43EC8;
  if (!qword_1EEC43EC8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43D50, &type metadata for YahooNewsResponse.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43EC8);
  }
  return result;
}

unint64_t sub_1ABE4B4C0()
{
  unint64_t result;

  result = qword_1EEC43ED0;
  if (!qword_1EEC43ED0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43E08, &type metadata for YahooNewsResponse.FinancialInstrument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43ED0);
  }
  return result;
}

unint64_t sub_1ABE4B508()
{
  unint64_t result;

  result = qword_1EEC43ED8;
  if (!qword_1EEC43ED8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43D78, &type metadata for YahooNewsResponse.FinancialInstrument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43ED8);
  }
  return result;
}

unint64_t sub_1ABE4B550()
{
  unint64_t result;

  result = qword_1EEC43EE0;
  if (!qword_1EEC43EE0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43DA0, &type metadata for YahooNewsResponse.FinancialInstrument.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43EE0);
  }
  return result;
}

unint64_t sub_1ABE4B598()
{
  unint64_t result;

  result = qword_1EEC43EE8;
  if (!qword_1EEC43EE8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43CC0, &type metadata for YahooNewsResponse.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43EE8);
  }
  return result;
}

unint64_t sub_1ABE4B5E0()
{
  unint64_t result;

  result = qword_1EEC43EF0;
  if (!qword_1EEC43EF0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF43CE8, &type metadata for YahooNewsResponse.Provider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43EF0);
  }
  return result;
}

uint64_t sub_1ABE4B628()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1ABE4B654()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE4B678()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE4B6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _QWORD v12[2];
  uint64_t v13;

  v5 = sub_1ABF30760();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v12[0] = v2;
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    v12[1] = *(_QWORD *)(a2 + 16);
    v11 = a1 + 40;
    do
    {
      v11 += 16;
      sub_1ABF2FF5C();
      sub_1ABF30754();
      sub_1ABF30DE4();
      swift_allocObject();
      sub_1ABF30DD8();
      sub_1ABCF5A54(0, &qword_1ED346DE8, type metadata accessor for Chart, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      sub_1ABF31228();
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_bridgeObjectRelease();
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
      --v9;
    }
    while (v9);
    return v13;
  }
  return result;
}

uint64_t sub_1ABE4B860()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE4B884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Chart(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_1ABE4B8D0()
{
  uint64_t v0;

  return *(double *)v0;
}

double sub_1ABE4B8D8()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double sub_1ABE4B8E0()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double sub_1ABE4B8E8()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double sub_1ABE4B8F0()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double sub_1ABE4B8F8()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double sub_1ABE4B900()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double sub_1ABE4B908()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

double sub_1ABE4B910()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

double sub_1ABE4B918()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

double sub_1ABE4B920()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

double sub_1ABE4B928()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

double sub_1ABE4B930()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

double sub_1ABE4B938()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

double sub_1ABE4B940()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

double sub_1ABE4B948()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

double sub_1ABE4B950()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

double sub_1ABE4B958()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

double sub_1ABE4B960()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

double sub_1ABE4B968()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

uint64_t sub_1ABE4B970@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, double *a9@<X8>, double a10, char a11, double a12, char a13, double a14, char a15, double a16, char a17, double a18, char a19, double a20,char a21,double a22,char a23,double a24,char a25,double a26,char a27,double a28,char a29,double a30,char a31,double a32,char a33,double a34,char a35,double a36,char a37,double a38,char a39,double a40,char a41)
{
  double v42;
  double v44;
  double v46;
  double v48;
  double v53;
  uint64_t result;
  double v61;

  v42 = 0.05;
  if ((a2 & 1) != 0)
    a1 = 0.05;
  v44 = 0.3;
  if ((a4 & 1) != 0)
    a3 = 0.3;
  v46 = 1.0;
  if ((a6 & 1) != 0)
    a5 = 1.0;
  v48 = 0.0;
  if ((a8 & 1) != 0)
    a7 = 0.0;
  if ((a11 & 1) != 0)
    a10 = 0.0;
  if ((a13 & 1) != 0)
    a12 = 0.0;
  if ((a15 & 1) == 0)
    v42 = a14;
  if ((a17 & 1) != 0)
    a16 = 0.01;
  v53 = 0.1;
  if ((a19 & 1) != 0)
    a18 = 0.1;
  if ((a21 & 1) != 0)
    a20 = 0.12;
  result = 0x3FC3333333333333;
  if ((a23 & 1) != 0)
    a22 = 0.15;
  if ((a25 & 1) != 0)
    a24 = 0.3;
  if ((a27 & 1) == 0)
    v46 = a26;
  if ((a29 & 1) != 0)
    a28 = 0.0;
  if ((a31 & 1) == 0)
    v44 = a30;
  if ((a33 & 1) != 0)
    a32 = 0.2;
  v61 = 0.5;
  if ((a35 & 1) != 0)
    a34 = 0.5;
  if ((a37 & 1) == 0)
    v61 = a36;
  if ((a39 & 1) == 0)
    v53 = a38;
  if ((a41 & 1) == 0)
    v48 = a40;
  *a9 = a1;
  a9[1] = a3;
  a9[2] = a5;
  a9[3] = a7;
  a9[4] = a10;
  a9[5] = a12;
  a9[6] = v42;
  a9[7] = a16;
  a9[8] = a18;
  a9[9] = a20;
  a9[10] = a22;
  a9[11] = a24;
  a9[12] = v46;
  a9[13] = a28;
  a9[14] = v44;
  a9[15] = a32;
  a9[16] = a34;
  a9[17] = v61;
  a9[18] = v53;
  a9[19] = v48;
  return result;
}

uint64_t sub_1ABE4BB38@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  char v70;
  unint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  __int128 v77;
  _OWORD *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  int64_t v84;
  double v85;
  int v86;
  double v87;
  int v88;
  double v89;
  int v90;
  double v91;
  int v92;
  double v93;
  int v94;
  double v95;
  int v96;
  double v97;
  int v98;
  double v99;
  int v100;
  double v101;
  int v102;
  double v103;
  int v104;
  double v105;
  int v106;
  double v107;
  int v108;
  double v109;
  int v110;
  double v111;
  int v112;
  double v113;
  int v114;
  double v115;
  int v116;
  double v117;
  int v118;
  double v119;
  int v120;
  double v121;
  double v122;
  _OWORD *v123;
  _OWORD v124[10];
  double v125;
  unsigned __int8 v126;
  char v127;
  _QWORD *v128;

  sub_1ABE4DA70(0, &qword_1ED34FEB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v83 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE4D4FC();
  sub_1ABF3235C();
  if (!v2)
  {
    v128 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v127 = 0;
    sub_1ABF320C8();
    v123 = a2;
    v10 = v126;
    v122 = v125;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v13 = v11[2];
      v12 = v11[3];
      if (v13 >= v12 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
      v11[2] = v13 + 1;
      v14 = &v11[2 * v13];
      v14[4] = 0xD00000000000001ELL;
      v14[5] = 0x80000001ABF5E590;
      v128 = v11;
      swift_endAccess();
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v127 = 1;
    sub_1ABF320C8();
    v121 = v125;
    v120 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v16 = v11[2];
      v15 = v11[3];
      if (v16 >= v15 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v15 > 1), v16 + 1, 1, v11);
      v11[2] = v16 + 1;
      v17 = &v11[2 * v16];
      v17[4] = 0xD000000000000011;
      v17[5] = 0x80000001ABF5E5B0;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 2;
    sub_1ABF320C8();
    v119 = v125;
    v118 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v19 = v11[2];
      v18 = v11[3];
      if (v19 >= v18 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v18 > 1), v19 + 1, 1, v11);
      v11[2] = v19 + 1;
      v20 = &v11[2 * v19];
      v20[4] = 0xD000000000000017;
      v20[5] = 0x80000001ABF5E5D0;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 3;
    sub_1ABF320C8();
    v117 = v125;
    v116 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v22 = v11[2];
      v21 = v11[3];
      if (v22 >= v21 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v21 > 1), v22 + 1, 1, v11);
      v11[2] = v22 + 1;
      v23 = &v11[2 * v22];
      v23[4] = 0xD00000000000001ELL;
      v23[5] = 0x80000001ABF5E5F0;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 4;
    sub_1ABF320C8();
    v115 = v125;
    v114 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v25 = v11[2];
      v24 = v11[3];
      if (v25 >= v24 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v24 > 1), v25 + 1, 1, v11);
      v11[2] = v25 + 1;
      v26 = &v11[2 * v25];
      v26[4] = 0xD00000000000001ELL;
      v26[5] = 0x80000001ABF5E610;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 5;
    sub_1ABF320C8();
    v113 = v125;
    v112 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v28 = v11[2];
      v27 = v11[3];
      if (v28 >= v27 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v27 > 1), v28 + 1, 1, v11);
      v11[2] = v28 + 1;
      v29 = &v11[2 * v28];
      v29[4] = 0xD000000000000027;
      v29[5] = 0x80000001ABF5E630;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 6;
    sub_1ABF320C8();
    v111 = v125;
    v110 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v31 = v11[2];
      v30 = v11[3];
      if (v31 >= v30 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v30 > 1), v31 + 1, 1, v11);
      v11[2] = v31 + 1;
      v32 = &v11[2 * v31];
      v32[4] = 0xD000000000000017;
      v32[5] = 0x80000001ABF5E660;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 7;
    sub_1ABF320C8();
    v109 = v125;
    v108 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v34 = v11[2];
      v33 = v11[3];
      if (v34 >= v33 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v33 > 1), v34 + 1, 1, v11);
      v11[2] = v34 + 1;
      v35 = &v11[2 * v34];
      v35[4] = 0xD000000000000015;
      v35[5] = 0x80000001ABF545A0;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 8;
    sub_1ABF320C8();
    v107 = v125;
    v106 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v37 = v11[2];
      v36 = v11[3];
      if (v37 >= v36 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v36 > 1), v37 + 1, 1, v11);
      v11[2] = v37 + 1;
      v38 = &v11[2 * v37];
      v38[4] = 0xD000000000000014;
      v38[5] = 0x80000001ABF544C0;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 9;
    sub_1ABF320C8();
    v105 = v125;
    v104 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v40 = v11[2];
      v39 = v11[3];
      if (v40 >= v39 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v39 > 1), v40 + 1, 1, v11);
      v11[2] = v40 + 1;
      v41 = &v11[2 * v40];
      v41[4] = 0xD000000000000014;
      v41[5] = 0x80000001ABF54560;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 10;
    sub_1ABF320C8();
    v103 = v125;
    v102 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v43 = v11[2];
      v42 = v11[3];
      if (v43 >= v42 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v42 > 1), v43 + 1, 1, v11);
      v11[2] = v43 + 1;
      v44 = &v11[2 * v43];
      v44[4] = 0xD000000000000016;
      v44[5] = 0x80000001ABF54520;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 11;
    sub_1ABF320C8();
    v101 = v125;
    v100 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v46 = v11[2];
      v45 = v11[3];
      if (v46 >= v45 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v45 > 1), v46 + 1, 1, v11);
      v11[2] = v46 + 1;
      v47 = &v11[2 * v46];
      v47[4] = 0xD000000000000015;
      v47[5] = 0x80000001ABF5E680;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 12;
    sub_1ABF320C8();
    v99 = v125;
    v98 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v49 = v11[2];
      v48 = v11[3];
      if (v49 >= v48 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v48 > 1), v49 + 1, 1, v11);
      v11[2] = v49 + 1;
      v50 = &v11[2 * v49];
      v50[4] = 0xD000000000000019;
      v50[5] = 0x80000001ABF5E6A0;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 13;
    sub_1ABF320C8();
    v97 = v125;
    v96 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v52 = v11[2];
      v51 = v11[3];
      if (v52 >= v51 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v51 > 1), v52 + 1, 1, v11);
      v11[2] = v52 + 1;
      v53 = &v11[2 * v52];
      v53[4] = 0xD00000000000001DLL;
      v53[5] = 0x80000001ABF5E6C0;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 14;
    sub_1ABF320C8();
    v95 = v125;
    v94 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v55 = v11[2];
      v54 = v11[3];
      if (v55 >= v54 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v54 > 1), v55 + 1, 1, v11);
      v11[2] = v55 + 1;
      v56 = &v11[2 * v55];
      v56[4] = 0xD000000000000014;
      v56[5] = 0x80000001ABF5E6E0;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 15;
    sub_1ABF320C8();
    v93 = v125;
    v92 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v58 = v11[2];
      v57 = v11[3];
      if (v58 >= v57 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v57 > 1), v58 + 1, 1, v11);
      v11[2] = v58 + 1;
      v59 = &v11[2 * v58];
      v59[4] = 0xD00000000000001CLL;
      v59[5] = 0x80000001ABF5E700;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 16;
    sub_1ABF320C8();
    v91 = v125;
    v90 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v61 = v11[2];
      v60 = v11[3];
      if (v61 >= v60 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v60 > 1), v61 + 1, 1, v11);
      v11[2] = v61 + 1;
      v62 = &v11[2 * v61];
      v62[4] = 0xD000000000000013;
      v62[5] = 0x80000001ABF54850;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 17;
    sub_1ABF320C8();
    v89 = v125;
    v88 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v64 = v11[2];
      v63 = v11[3];
      if (v64 >= v63 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v63 > 1), v64 + 1, 1, v11);
      v11[2] = v64 + 1;
      v65 = &v11[2 * v64];
      v65[4] = 0x616E655064616572;
      v65[5] = 0xEB0000000079746CLL;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 18;
    sub_1ABF320C8();
    v87 = v125;
    v86 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v67 = v11[2];
      v66 = v11[3];
      if (v67 >= v66 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v66 > 1), v67 + 1, 1, v11);
      v11[2] = v67 + 1;
      v68 = &v11[2 * v67];
      v68[4] = 0xD000000000000015;
      v68[5] = 0x80000001ABF5E720;
      v128 = v11;
      swift_endAccess();
    }
    v127 = 19;
    sub_1ABF320C8();
    v85 = v125;
    v70 = v126;
    if ((v126 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v72 = v11[2];
      v71 = v11[3];
      v84 = v72 + 1;
      if (v72 >= v71 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v71 > 1), v84, 1, v11);
      v11[2] = v84;
      v73 = &v11[2 * v72];
      v73[4] = 0x6769655769626174;
      v73[5] = 0xEA00000000007468;
      v128 = v11;
      swift_endAccess();
    }
    sub_1ABE4B970(v122, v10, v121, v120, v119, v118, v117, v116, (double *)v124, v115, v114, v113, v112, v111, v110, v109, v108, v107, v106,
      v105,
      v104,
      v103,
      v102,
      v101,
      v100,
      v99,
      v98,
      v97,
      v96,
      v95,
      v94,
      v93,
      v92,
      v91,
      v90,
      v89,
      v88,
      v87,
      v86,
      v85,
      v70);
    if (v11[2])
    {
      sub_1ABD0F55C();
      v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = xmmword_1ABF366C0;
      sub_1ABD165AC();
      *(_QWORD *)(v74 + 56) = v75;
      *(_QWORD *)(v74 + 64) = sub_1ABD82448();
      *(_QWORD *)(v74 + 32) = v11;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v76 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v76 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    v77 = v124[7];
    v78 = v123;
    v123[6] = v124[6];
    v78[7] = v77;
    v79 = v124[9];
    v78[8] = v124[8];
    v78[9] = v79;
    v80 = v124[3];
    v78[2] = v124[2];
    v78[3] = v80;
    v81 = v124[5];
    v78[4] = v124[4];
    v78[5] = v81;
    v82 = v124[1];
    *v78 = v124[0];
    v78[1] = v82;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ABE4D35C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABE4D39C + 4 * byte_1ABF43F50[a1]))(0xD00000000000001ELL, 0x80000001ABF5E590);
}

uint64_t sub_1ABE4D39C()
{
  uint64_t v0;

  return v0 - 3;
}

uint64_t sub_1ABE4D4D8()
{
  return 0x6769655769626174;
}

uint64_t sub_1ABE4D4F4()
{
  unsigned __int8 *v0;

  return sub_1ABE4D35C(*v0);
}

unint64_t sub_1ABE4D4FC()
{
  unint64_t result;

  result = qword_1ED34F690;
  if (!qword_1ED34F690)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44130, &type metadata for ArticleScoringConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F690);
  }
  return result;
}

uint64_t sub_1ABE4D540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE4DD84(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ABE4D564(_BYTE *a1@<X8>)
{
  *a1 = 20;
}

uint64_t sub_1ABE4D570()
{
  sub_1ABE4D4FC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE4D598()
{
  sub_1ABE4D4FC();
  return sub_1ABF32398();
}

uint64_t sub_1ABE4D5C0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[13];
  char v17;

  sub_1ABE4DA70(0, &qword_1ED34FF68, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v16 - v7;
  v9 = v1[1];
  v16[11] = v1[2];
  v16[12] = v9;
  v10 = v1[3];
  v16[9] = v1[4];
  v16[10] = v10;
  v11 = v1[5];
  v16[7] = v1[6];
  v16[8] = v11;
  v12 = v1[7];
  v16[5] = v1[8];
  v16[6] = v12;
  v13 = v1[9];
  v16[3] = v1[10];
  v16[4] = v13;
  v14 = v1[11];
  v16[1] = v1[12];
  v16[2] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE4D4FC();
  sub_1ABF32368();
  v17 = 0;
  sub_1ABF321AC();
  if (!v2)
  {
    v17 = 1;
    sub_1ABF321AC();
    v17 = 2;
    sub_1ABF321AC();
    v17 = 3;
    sub_1ABF321AC();
    v17 = 4;
    sub_1ABF321AC();
    v17 = 5;
    sub_1ABF321AC();
    v17 = 6;
    sub_1ABF321AC();
    v17 = 7;
    sub_1ABF321AC();
    v17 = 8;
    sub_1ABF321AC();
    v17 = 9;
    sub_1ABF321AC();
    v17 = 10;
    sub_1ABF321AC();
    v17 = 11;
    sub_1ABF321AC();
    v17 = 12;
    sub_1ABF321AC();
    v17 = 13;
    sub_1ABF321AC();
    v17 = 14;
    sub_1ABF321AC();
    v17 = 15;
    sub_1ABF321AC();
    v17 = 16;
    sub_1ABF321AC();
    v17 = 17;
    sub_1ABF321AC();
    v17 = 18;
    sub_1ABF321AC();
    v17 = 19;
    sub_1ABF321AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABE4DA1C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1ABE4BB38(a1, a2);
}

uint64_t sub_1ABE4DA30(_QWORD *a1)
{
  return sub_1ABE4D5C0(a1);
}

double sub_1ABE4DA48()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

double sub_1ABE4DA50()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

double sub_1ABE4DA58()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

double sub_1ABE4DA60()
{
  uint64_t v0;

  return *(double *)(v0 + 136);
}

double sub_1ABE4DA68()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

void sub_1ABE4DA70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE4D4FC();
    v7 = a3(a1, &type metadata for ArticleScoringConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t getEnumTagSinglePayload for ArticleScoringConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 160))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ArticleScoringConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 160) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ArticleScoringConfiguration()
{
  return &type metadata for ArticleScoringConfiguration;
}

uint64_t getEnumTagSinglePayload for ArticleScoringConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleScoringConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1ABE4DC2C + 4 * byte_1ABF43F69[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1ABE4DC60 + 4 * byte_1ABF43F64[v4]))();
}

uint64_t sub_1ABE4DC60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE4DC68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE4DC70);
  return result;
}

uint64_t sub_1ABE4DC7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE4DC84);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1ABE4DC88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE4DC90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleScoringConfiguration.CodingKeys()
{
  return &type metadata for ArticleScoringConfiguration.CodingKeys;
}

unint64_t sub_1ABE4DCB0()
{
  unint64_t result;

  result = qword_1EEC43EF8;
  if (!qword_1EEC43EF8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44108, &type metadata for ArticleScoringConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43EF8);
  }
  return result;
}

unint64_t sub_1ABE4DCF8()
{
  unint64_t result;

  result = qword_1ED34F6A0;
  if (!qword_1ED34F6A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44078, &type metadata for ArticleScoringConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F6A0);
  }
  return result;
}

unint64_t sub_1ABE4DD40()
{
  unint64_t result;

  result = qword_1ED34F698;
  if (!qword_1ED34F698)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF440A0, &type metadata for ArticleScoringConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F698);
  }
  return result;
}

uint64_t sub_1ABE4DD84(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ABF5E590 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ABF5E5B0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF5E5D0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ABF5E5F0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001ABF5E610 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x80000001ABF5E630 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF5E660 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF545A0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF544C0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF54560 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ABF54520 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF5E680 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001ABF5E6A0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001ABF5E6C0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF5E6E0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001ABF5E700 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ABF54850 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x616E655064616572 && a2 == 0xEB0000000079746CLL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF5E720 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x6769655769626174 && a2 == 0xEA00000000007468)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    v5 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 19;
    else
      return 20;
  }
}

uint64_t sub_1ABE4E4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ABE4E4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1ABE4E4B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;

  swift_getObjectType();
  sub_1ABD178DC(&v14);
  v0 = v14;
  v1 = *(_QWORD *)(v14 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    sub_1ABF2FF5C();
    v3 = (uint64_t *)(v0 + 56);
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v6 = *v3;
      if (*v3)
      {
        v7 = *(v3 - 1);
        sub_1ABF2FF5C();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_1ABD12054(0, v4[2] + 1, 1, v4);
        v9 = v4[2];
        v8 = v4[3];
        if (v9 >= v8 >> 1)
          v4 = sub_1ABD12054((_QWORD *)(v8 > 1), v9 + 1, 1, v4);
        v4[2] = v9 + 1;
        v5 = &v4[2 * v9];
        v5[4] = v7;
        v5[5] = v6;
      }
      v3 += 6;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v10 = swift_bridgeObjectRelease();
  if (v4[2])
  {
    MEMORY[0x1E0C80A78](v10);
    sub_1ABD345C8();
    sub_1ABF3127C();
    swift_bridgeObjectRelease();
    v11 = (void *)sub_1ABF31114();
    sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FCB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    v12 = sub_1ABF31180();
    swift_release();

  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = v2;
    sub_1ABD34D3C();
    swift_allocObject();
    return sub_1ABF311E0();
  }
  return v12;
}

uint64_t sub_1ABE4E6B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1ABF2FF5C();
  v3 = sub_1ABE4E7E4(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for NewsStockFeedIdentifierService()
{
  return objc_opt_self();
}

uint64_t sub_1ABE4E720()
{
  return sub_1ABE4E4B8();
}

uint64_t sub_1ABE4E740()
{
  swift_getObjectType();
  sub_1ABE39040();
  sub_1ABD34D3C();
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE4E790()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return sub_1ABD3D490(v2, v3, v4);
}

uint64_t sub_1ABE4E7E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v2 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(63 - v4) >> 6;
  result = sub_1ABF2FF5C();
  v8 = 0;
  v9 = 0;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v39 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
LABEL_27:
  while (v5)
  {
    v26 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v27 = v26 | (v9 << 6);
LABEL_26:
    v28 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v27);
    sub_1ABF2FF5C();
    result = swift_bridgeObjectRelease();
    v25 = 0;
    v29 = v28;
    if (v28)
    {
      while (1)
      {
        v11 = *(_QWORD *)(v29 + 16);
        if (v25 == v11)
          break;
        if (v25 >= v11)
          goto LABEL_53;
        v12 = v29 + 16 * v25;
        result = *(_QWORD *)(v12 + 40);
        v37 = *(_QWORD *)(v12 + 32);
        v38 = result;
        if (v8)
        {
          result = sub_1ABF2FF5C();
          v13 = v10;
          v14 = __OFSUB__(v8--, 1);
          if (v14)
            goto LABEL_54;
        }
        else
        {
          v15 = *((_QWORD *)v10 + 3);
          if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0)
            goto LABEL_57;
          v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
          if (v16 <= 1)
            v17 = 1;
          else
            v17 = v16;
          sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FFD0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
          v13 = (char *)swift_allocObject();
          v18 = _swift_stdlib_malloc_size(v13);
          v19 = v18 - 32;
          if (v18 < 32)
            v19 = v18 - 17;
          v20 = v19 >> 4;
          *((_QWORD *)v13 + 2) = v17;
          *((_QWORD *)v13 + 3) = 2 * (v19 >> 4);
          v21 = v13 + 32;
          v22 = *((_QWORD *)v10 + 3) >> 1;
          v39 = &v13[16 * v22 + 32];
          v23 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
          if (*((_QWORD *)v10 + 2))
          {
            v24 = v10 + 32;
            if (v13 != v10 || v21 >= &v24[16 * v22])
              memmove(v21, v24, 16 * v22);
            sub_1ABF2FF5C();
            *((_QWORD *)v10 + 2) = 0;
          }
          else
          {
            sub_1ABF2FF5C();
          }
          result = swift_release();
          v14 = __OFSUB__(v23, 1);
          v8 = v23 - 1;
          if (v14)
            goto LABEL_54;
        }
        ++v25;
        *(_QWORD *)v39 = v37;
        *((_QWORD *)v39 + 1) = v38;
        v39 += 16;
        v10 = v13;
        if (!v29)
          goto LABEL_27;
      }
    }
  }
  v30 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v30 >= v6)
    goto LABEL_48;
  v31 = *(_QWORD *)(v2 + 8 * v30);
  if (v31)
  {
LABEL_37:
    v5 = (v31 - 1) & v31;
    v27 = __clz(__rbit64(v31)) + (v30 << 6);
    v9 = v30;
    goto LABEL_26;
  }
  v32 = v9 + 2;
  if (v9 + 2 >= v6)
    goto LABEL_48;
  v31 = *(_QWORD *)(v2 + 8 * v32);
  if (v31)
  {
LABEL_33:
    v30 = v32;
    goto LABEL_37;
  }
  v33 = v9 + 3;
  if (v9 + 3 >= v6)
    goto LABEL_48;
  v31 = *(_QWORD *)(v2 + 8 * v33);
  if (v31)
    goto LABEL_36;
  v32 = v9 + 4;
  if (v9 + 4 >= v6)
    goto LABEL_48;
  v31 = *(_QWORD *)(v2 + 8 * v32);
  if (v31)
    goto LABEL_33;
  v33 = v9 + 5;
  if (v9 + 5 >= v6)
    goto LABEL_48;
  v31 = *(_QWORD *)(v2 + 8 * v33);
  if (v31)
  {
LABEL_36:
    v30 = v33;
    goto LABEL_37;
  }
  v32 = v9 + 6;
  if (v9 + 6 >= v6)
  {
LABEL_48:
    sub_1ABD97E10();
    result = swift_bridgeObjectRelease();
    v34 = *((_QWORD *)v10 + 3);
    if (v34 >= 2)
    {
      v35 = v34 >> 1;
      v14 = __OFSUB__(v35, v8);
      v36 = v35 - v8;
      if (v14)
        goto LABEL_56;
      *((_QWORD *)v10 + 2) = v36;
    }
    return (uint64_t)v10;
  }
  v31 = *(_QWORD *)(v2 + 8 * v32);
  if (v31)
    goto LABEL_33;
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v6)
      goto LABEL_48;
    v31 = *(_QWORD *)(v2 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_37;
  }
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

BOOL ExchangeStatus.isClosed.getter()
{
  unsigned __int8 *v0;

  return *v0 > 1u;
}

StocksCore::ExchangeStatus_optional __swiftcall ExchangeStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksCore::ExchangeStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1ABF32068();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ExchangeStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE4EBC8 + 4 * byte_1ABF441E0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1ABE4EBC8()
{
  return 1852141679;
}

uint64_t sub_1ABE4EBD8()
{
  return 0x6465736F6C63;
}

uint64_t sub_1ABE4EBEC()
{
  return 0x656B72614D657270;
}

uint64_t sub_1ABE4EC08()
{
  return 0x756F487265746661;
}

unint64_t sub_1ABE4EC28()
{
  unint64_t result;

  result = qword_1EEC43F00;
  if (!qword_1EEC43F00)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for ExchangeStatus, &type metadata for ExchangeStatus);
    atomic_store(result, (unint64_t *)&qword_1EEC43F00);
  }
  return result;
}

void sub_1ABE4EC6C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABE4ECB8()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABE4ED3C()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABE4ED78()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABE4EDE8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABE4EE30()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

StocksCore::ExchangeStatus_optional sub_1ABE4EEB4(Swift::String *a1)
{
  return ExchangeStatus.init(rawValue:)(*a1);
}

uint64_t sub_1ABE4EEC0()
{
  sub_1ABCF7F5C();
  return sub_1ABF319CC();
}

void sub_1ABE4EF1C(char *a1)
{
  sub_1ABCFF664(*a1);
}

uint64_t storeEnumTagSinglePayload for ExchangeStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABE4EF74 + 4 * byte_1ABF441FE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABE4EFA8 + 4 * byte_1ABF441F9[v4]))();
}

uint64_t sub_1ABE4EFA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE4EFB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE4EFB8);
  return result;
}

uint64_t sub_1ABE4EFC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE4EFCCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABE4EFD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE4EFD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for SparklineOperation()
{
  uint64_t result;

  result = qword_1ED34D488;
  if (!qword_1ED34D488)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABE4F020()
{
  return swift_initClassMetadata2();
}

BOOL sub_1ABE4F088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BOOL8 result;
  _QWORD v9[4];

  v0 = sub_1ABF305D4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF31294();
  v4 = sub_1ABF30598();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  result = 1;
  if (v6)
  {
    v9[2] = v4;
    v9[3] = v6;
    v9[0] = 0xD000000000000010;
    v9[1] = 0x80000001ABF5E910;
    sub_1ABD0E288();
    v7 = sub_1ABF31DC8();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 0;
  }
  return result;
}

void sub_1ABE4F188(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = v2;
  v13 = *(_QWORD *)&v2[qword_1ED34D480];
  swift_bridgeObjectRetain_n();
  sub_1ABF231D4(&v13);
  swift_bridgeObjectRelease();
  sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FCB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1ABE51034();
  v6 = sub_1ABF31B64();
  swift_release();
  v7 = v3;
  sub_1ABE5151C(v6);
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1ABF31114();
  sub_1ABD1E99C(0, (unint64_t *)&qword_1ED34DE40, (void (*)(uint64_t))type metadata accessor for Chart);
  sub_1ABF3109C();
  swift_bridgeObjectRelease();

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  sub_1ABF2FF68();
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  sub_1ABF2FF68();
  v12 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABE4F374(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = MEMORY[0x1E0DEE9E0];
  v7 = MEMORY[0x1E0DEE9E0];
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v4)
  {
    sub_1ABF2FF5C();
    type metadata accessor for Chart(0);
    v5 = 0;
    do
    {
      ++v5;
      sub_1ABF2FF5C();
      sub_1ABF3103C();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE4F468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v52 = a6;
  v53 = a4;
  v50 = a3;
  v9 = sub_1ABF30760();
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1ABF30B38();
  v46 = *(_QWORD *)(v11 - 8);
  v47 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1ABF302BC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  v49 = v18;
  sub_1ABF2FF68();
  sub_1ABF31BD0();
  sub_1ABE518D4(0, (unint64_t *)&qword_1ED34FFF0, (unint64_t *)&qword_1ED350010);
  v19 = swift_allocObject();
  v45 = xmmword_1ABF366C0;
  *(_OWORD *)(v19 + 16) = xmmword_1ABF366C0;
  v20 = MEMORY[0x1E0DEA968];
  v21 = MEMORY[0x1AF437C34](a5, MEMORY[0x1E0DEA968]);
  v23 = v22;
  *(_QWORD *)(v19 + 56) = v20;
  *(_QWORD *)(v19 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v19 + 32) = v21;
  *(_QWORD *)(v19 + 40) = v23;
  sub_1ABD19560();
  v24 = (void *)sub_1ABF31D44();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  v25 = *(_QWORD *)(a5 + 16);
  v51 = a5;
  if (v25)
  {
    v54 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB51DC(0, v25, 0);
    v26 = v54;
    v27 = a5 + 40;
    do
    {
      sub_1ABF2FF5C();
      sub_1ABF302B0();
      swift_bridgeObjectRelease();
      v54 = v26;
      v29 = *(_QWORD *)(v26 + 16);
      v28 = *(_QWORD *)(v26 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1ABDB51DC(v28 > 1, v29 + 1, 1);
        v26 = v54;
      }
      v27 += 16;
      *(_QWORD *)(v26 + 16) = v29 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v26+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v29, v17, v14);
      --v25;
    }
    while (v25);
    v30 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v30 = MEMORY[0x1E0DEE9D8];
  }
  sub_1ABE516C0();
  v31 = v52;
  sub_1ABF2FF68();
  sub_1ABE5108C(v30);
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v13, *MEMORY[0x1E0DB3560], v47);
  sub_1ABF30754();
  v32 = (void *)sub_1ABF30D54();
  sub_1ABE518D4(0, &qword_1ED34E340, &qword_1ED34DC70);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v45;
  sub_1ABF31294();
  v34 = v54;
  v35 = v55;
  v36 = type metadata accessor for SparklinesRequestSigner();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v34;
  *(_QWORD *)(v37 + 24) = v35;
  *(_QWORD *)(v33 + 56) = v36;
  *(_QWORD *)(v33 + 64) = sub_1ABCFE1EC(&qword_1ED34D790, (uint64_t (*)(uint64_t))type metadata accessor for SparklinesRequestSigner, (uint64_t)&unk_1ABF45578);
  *(_QWORD *)(v33 + 32) = v37;
  sub_1ABF30D60();
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v30;
  sub_1ABF2FF68();
  sub_1ABF30D48();
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = v51;
  v39[3] = v31;
  v40 = v49;
  v39[4] = sub_1ABD17048;
  v39[5] = v40;
  v41 = v50;
  v39[6] = v38;
  v39[7] = v41;
  v39[8] = v53;
  sub_1ABF2FF68();
  v42 = v32;
  sub_1ABF2FF5C();
  v43 = v31;
  sub_1ABF2FF68();
  sub_1ABF30BF8();

  objc_msgSend(v42, sel_start);
  return swift_release();
}

uint64_t sub_1ABE4F918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  unint64_t *v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v4 = sub_1ABF30F34();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (unint64_t *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1ABD8331C(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
    *v9 = v10;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1ABD8331C(v12 > 1, v13 + 1, 1, v10);
    *v9 = v10;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, v8, v4);
  return swift_endAccess();
}

void sub_1ABE4FA5C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, void (*a7)(void *))
{
  void *v7;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v7 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v9 = v7;
    sub_1ABF31BE8();
    sub_1ABE518D4(0, (unint64_t *)&qword_1ED34FFF0, (unint64_t *)&qword_1ED350010);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1ABF366C0;
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v10 + 32) = 0;
    *(_QWORD *)(v10 + 40) = 0xE000000000000000;
    sub_1ABD19560();
    v11 = (void *)sub_1ABF31D44();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    a7(v7);
    swift_beginAccess();
    v12 = sub_1ABF2FF5C();
    sub_1ABE52250(v12);
    swift_bridgeObjectRelease();
    sub_1ABE524F4(v7, 1);
    return;
  }
  v14 = *(_QWORD *)(a2 + 16);
  if (!v14)
  {
LABEL_19:
    MEMORY[0x1E0C80A78](a1);
    sub_1ABE517A8(0);
    v37 = sub_1ABF31648();
    v38 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v38);
    type metadata accessor for Chart(0);
    v39 = sub_1ABF31648();
    a4();
    sub_1ABF2FF5C();
    v40 = sub_1ABF2FF5C();
    v41 = sub_1ABE51CC0(v40, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 = sub_1ABF2FF5C();
    sub_1ABE51E28(v42, v37, v39);
    v44 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABE52144(v41);
    swift_beginAccess();
    v45 = sub_1ABF2FF5C();
    sub_1ABE506BC(v45, v41, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  sub_1ABF2FF5C();
  v15 = (uint64_t *)(a2 + 40);
  v16 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v19 = *(v15 - 1);
    v18 = *v15;
    v20 = sub_1ABF31810();
    v22 = v21;
    sub_1ABF2FF5C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = sub_1ABD00F9C(v20, v22);
    v26 = v16[2];
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
      break;
    v29 = v24;
    if (v16[3] >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v24 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_1ABE6E690();
        if ((v29 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_1ABD0EBF8(v28, isUniquelyReferenced_nonNull_native);
      v30 = sub_1ABD00F9C(v20, v22);
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_22;
      v25 = v30;
      if ((v29 & 1) != 0)
      {
LABEL_5:
        v17 = (_QWORD *)(v16[7] + 16 * v25);
        swift_bridgeObjectRelease();
        *v17 = v19;
        v17[1] = v18;
        goto LABEL_6;
      }
    }
    v16[(v25 >> 6) + 8] |= 1 << v25;
    v32 = (uint64_t *)(v16[6] + 16 * v25);
    *v32 = v20;
    v32[1] = v22;
    v33 = (_QWORD *)(v16[7] + 16 * v25);
    *v33 = v19;
    v33[1] = v18;
    v34 = v16[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
      goto LABEL_21;
    v16[2] = v36;
    sub_1ABF2FF5C();
LABEL_6:
    v15 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v14)
    {
      a1 = swift_bridgeObjectRelease();
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  sub_1ABF3229C();
  __break(1u);
}

uint64_t sub_1ABE4FF4C(_QWORD *a1, _QWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v8 = *a4;
  v7 = a4[1];
  v10 = a4[2];
  v9 = a4[3];
  if (*(_QWORD *)(a5 + 16))
  {
    v12 = *a3;
    v13 = a3[1];
    sub_1ABF2FF5C();
    v14 = sub_1ABD00F9C(v12, v13);
    if ((v15 & 1) != 0)
    {
      v16 = (uint64_t *)(*(_QWORD *)(a5 + 56) + 16 * v14);
      v17 = *v16;
      v18 = v16[1];
      sub_1ABF2FF5C();
    }
    else
    {
      v17 = 0;
      v18 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
    v18 = 0;
  }
  *a1 = v17;
  a1[1] = v18;
  *a2 = v8;
  a2[1] = v7;
  a2[2] = v10;
  a2[3] = v9;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return sub_1ABF2FF5C();
}

void sub_1ABE5001C(_OWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _OWORD *v19;
  uint64_t v20;

  v18[1] = a5;
  v20 = a2;
  v19 = a1;
  sub_1ABE52574();
  v8 = v7;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *a3;
  v12 = a3[1];
  v14 = *(_QWORD *)(a4 + 8);
  v15 = (void *)MEMORY[0x1AF43878C](v9);
  v16 = v18[2];
  sub_1ABE5011C(v14, v13, v12, v11);
  objc_autoreleasePoolPop(v15);
  if (v16)
  {
    __break(1u);
  }
  else
  {
    v17 = (uint64_t)v11 + *(int *)(v8 + 48);
    *v19 = *(_OWORD *)v11;
    sub_1ABE52600(v17, v20);
  }
}

uint64_t sub_1ABE5011C@<X0>(unint64_t a1@<X2>, uint64_t a2@<X5>, uint64_t a3@<X6>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  uint64_t v62;
  __int128 v63;
  char v64;
  uint64_t v65;
  unint64_t v66;

  v61 = a4;
  v62 = a3;
  v55 = (_QWORD *)sub_1ABF30760();
  MEMORY[0x1E0C80A78](v55);
  v60 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF3094C();
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  MEMORY[0x1E0C80A78](v7);
  v59 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCFC730();
  v54 = v9;
  MEMORY[0x1E0C80A78](v9);
  v56 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, &qword_1ED34DA40, (void (*)(uint64_t))type metadata accessor for Chart);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v51 - v12;
  v14 = type metadata accessor for Chart(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABF2FF5C();
  v18 = sub_1ABDEA374(MEMORY[0x1E0DEE9D8]);
  v66 = v18;
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    sub_1ABF2FF5C();
    v20 = (_QWORD *)(a1 + 56);
    do
    {
      v21 = *v20;
      v22 = *((_BYTE *)v20 - 8);
      v63 = *(_OWORD *)(v20 - 3);
      v64 = v22;
      v65 = v21;
      sub_1ABECBB8C((uint64_t)&v63, 0, (uint64_t)&v66);
      v20 += 4;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    v23 = v66;
  }
  else
  {
    v23 = v18;
  }
  sub_1ABE0E824(v23, (uint64_t)v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1ABD18510((uint64_t)v13, &qword_1ED34DA40, (void (*)(uint64_t))type metadata accessor for Chart);
    sub_1ABF31BE8();
    sub_1ABE518D4(0, (unint64_t *)&qword_1ED34FFF0, (unint64_t *)&qword_1ED350010);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1ABF366E0;
    v25 = v15;
    v26 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
    v27 = sub_1ABD0F5C0();
    *(_QWORD *)(v24 + 64) = v27;
    v28 = v62;
    *(_QWORD *)(v24 + 32) = a2;
    *(_QWORD *)(v24 + 40) = v28;
    *(_QWORD *)&v63 = 0;
    *((_QWORD *)&v63 + 1) = 0xE000000000000000;
    v66 = a1;
    sub_1ABF2FF5C();
    sub_1ABF31F6C();
    v29 = v63;
    *(_QWORD *)(v24 + 96) = v26;
    *(_QWORD *)(v24 + 104) = v27;
    *(_OWORD *)(v24 + 72) = v29;
    sub_1ABD19560();
    v30 = (void *)sub_1ABF31D44();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    sub_1ABE52574();
    v32 = v61;
    v33 = (char *)v61 + *(int *)(v31 + 48);
    *v61 = 0;
    v32[1] = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v33, 1, 1, v14);
  }
  else
  {
    sub_1ABCFE2AC((uint64_t)v13, (uint64_t)v17, type metadata accessor for Chart);
    sub_1ABE518D4(0, (unint64_t *)&qword_1ED34FFF0, (unint64_t *)&qword_1ED350010);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1ABF366E0;
    *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
    v36 = sub_1ABD0F5C0();
    *(_QWORD *)(v35 + 64) = v36;
    *(_QWORD *)(v35 + 32) = a2;
    v51 = a2;
    v37 = v62;
    *(_QWORD *)(v35 + 40) = v62;
    v53 = v14;
    v38 = (uint64_t)v17 + *(int *)(v14 + 20);
    *(_QWORD *)&v63 = 0;
    *((_QWORD *)&v63 + 1) = 0xE000000000000000;
    sub_1ABF2FF5C();
    v39 = v61;
    v52 = v15;
    sub_1ABF31F6C();
    sub_1ABF31870();
    sub_1ABF31F6C();
    v40 = v63;
    *(_QWORD *)(v35 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 104) = v36;
    *(_OWORD *)(v35 + 72) = v40;
    sub_1ABD19560();
    v41 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    sub_1ABE52574();
    v55 = (_QWORD *)((char *)v39 + *(int *)(v42 + 48));
    *v39 = v51;
    v39[1] = v37;
    sub_1ABF2FF5C();
    v43 = sub_1ABE50B40(v17, 600.0);
    v44 = v56;
    sub_1ABCFC790(v38, v56, (uint64_t (*)(_QWORD))sub_1ABCFC730);
    v45 = (uint64_t)v17;
    v46 = (char *)v17 + *(int *)(v53 + 24);
    v47 = *(_QWORD *)v46;
    LOBYTE(v35) = v46[8];
    v48 = (uint64_t)v59;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v59, (char *)v17 + *(int *)(v53 + 28), v58);
    v49 = (uint64_t)v60;
    sub_1ABF30754();
    v50 = v55;
    sub_1ABD00568(v43, v44, v47, v35, v48, v49, v55);
    sub_1ABCFC3BC(v45, type metadata accessor for Chart);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v50, 0, 1, v53);
  }
}

uint64_t sub_1ABE506BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v7 = sub_1ABF30F34();
  v35 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NetworkEvent();
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1ABE4F088())
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v3 + qword_1ED34D480) + 16) - *(_QWORD *)(a2 + 16);
    *(_QWORD *)&v37 = *(_QWORD *)(*(_QWORD *)(v3 + qword_1ED34D480) + 16);
    *((_QWORD *)&v37 + 1) = v13;
    v38 = a2;
    v39 = a3;
    v40 = 0;
    v41 = 0;
    v14 = (_QWORD *)(v3 + qword_1ED34D468);
    v15 = *(_QWORD *)(v3 + qword_1ED34D468 + 24);
    v16 = *(_QWORD *)(v3 + qword_1ED34D468 + 32);
    __swift_project_boxed_opaque_existential_1(v14, v15);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v17 = sub_1ABE511A8(a1, &v37);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1ABF26680(v17, v15, v16);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ABD07E04(v3 + qword_1ED34D468, (uint64_t)&v37);
    v19 = v39;
    v20 = v40;
    v21 = __swift_project_boxed_opaque_existential_1(&v37, v39);
    v22 = *(_QWORD *)(a1 + 16);
    v23 = MEMORY[0x1E0DEE9D8];
    if (v22)
    {
      v29 = v21;
      v30 = v20;
      v31 = v19;
      v36 = MEMORY[0x1E0DEE9D8];
      sub_1ABDB5014(0, v22, 0);
      v24 = a1 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
      v25 = *(_QWORD *)(v35 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v32 = v25;
      do
      {
        v26(v9, v24, v7);
        v26(v12, (unint64_t)v9, v7);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v7);
        v23 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ABDB5014(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v25 = v32;
          v23 = v36;
        }
        v28 = *(_QWORD *)(v23 + 16);
        v27 = *(_QWORD *)(v23 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1ABDB5014(v27 > 1, v28 + 1, 1);
          v25 = v32;
          v23 = v36;
        }
        *(_QWORD *)(v23 + 16) = v28 + 1;
        sub_1ABCFE2AC((uint64_t)v12, v23+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v28, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEvent);
        v24 += v25;
        --v22;
      }
      while (v22);
      v20 = v30;
      v19 = v31;
    }
    sub_1ABF26680(v23, v19, v20);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
  }
}

void sub_1ABE509C4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABE509F0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED34D460);
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED34D468);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE50A4C(uint64_t a1)
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED34D460);
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED34D468);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE50AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABE4F188((uint64_t)sub_1ABD6B260, v4);
  return swift_release();
}

uint64_t sub_1ABE50B14()
{
  return type metadata accessor for SparklineOperation();
}

uint64_t sub_1ABE50B1C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1ABE50B40(uint64_t *a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;

  sub_1ABE52654();
  v56 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Chart.Entry(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v57 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v53 = (uint64_t)&v50 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v50 - v13;
  sub_1ABD00308(0, &qword_1ED34DA00, v15);
  MEMORY[0x1E0C80A78](v16);
  v55 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v50 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v50 - v22;
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v50 - v26;
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v8 + 56);
  v28((char *)&v50 - v26, 1, 1, v7, v25);
  v29 = *a1;
  v30 = sub_1ABF2FF5C();
  v58 = v27;
  v31 = sub_1ABE519AC(v30, (uint64_t)v27, a2);
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(v29 + 16);
  if (v32)
  {
    v54 = v6;
    v33 = v31;
    v34 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v35 = *(_QWORD *)(v8 + 72);
    sub_1ABCFC790(v29 + v34 + v35 * (v32 - 1), (uint64_t)v14, type metadata accessor for Chart.Entry);
    v36 = *(_QWORD *)(v33 + 16);
    v37 = (uint64_t)v14;
    v51 = v34;
    v52 = v35;
    if (v36)
    {
      sub_1ABCFC790(v33 + v34 + (v36 - 1) * v35, (uint64_t)v23, type metadata accessor for Chart.Entry);
      v38 = 0;
    }
    else
    {
      v38 = 1;
    }
    v31 = v33;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v28)(v23, v38, 1, v7);
    sub_1ABCFC790((uint64_t)v14, (uint64_t)v20, type metadata accessor for Chart.Entry);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v28)(v20, 0, 1, v7);
    v39 = (uint64_t)v54;
    v40 = (uint64_t)&v54[*(int *)(v56 + 48)];
    sub_1ABE526C4((uint64_t)v23, (uint64_t)v54);
    sub_1ABE526C4((uint64_t)v20, v40);
    v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (v41(v39, 1, v7) == 1)
    {
      sub_1ABD18510((uint64_t)v20, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
      sub_1ABD18510((uint64_t)v23, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
      if (v41(v40, 1, v7) == 1)
      {
        sub_1ABD18510(v39, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
LABEL_16:
        sub_1ABCFC3BC(v37, type metadata accessor for Chart.Entry);
        goto LABEL_17;
      }
    }
    else
    {
      v42 = v55;
      sub_1ABE526C4(v39, v55);
      if (v41(v40, 1, v7) != 1)
      {
        v48 = v53;
        sub_1ABCFE2AC(v40, v53, type metadata accessor for Chart.Entry);
        v49 = sub_1ABDB6744(v42, v48);
        sub_1ABCFC3BC(v48, type metadata accessor for Chart.Entry);
        sub_1ABD18510((uint64_t)v20, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
        sub_1ABD18510((uint64_t)v23, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
        sub_1ABCFC3BC(v42, type metadata accessor for Chart.Entry);
        sub_1ABD18510(v39, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
        if (v49)
          goto LABEL_16;
LABEL_11:
        sub_1ABCFC790(v37, v57, type metadata accessor for Chart.Entry);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v31 = sub_1ABD83330(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
        v43 = v51;
        v44 = v52;
        v46 = *(_QWORD *)(v31 + 16);
        v45 = *(_QWORD *)(v31 + 24);
        if (v46 >= v45 >> 1)
          v31 = sub_1ABD83330(v45 > 1, v46 + 1, 1, v31);
        *(_QWORD *)(v31 + 16) = v46 + 1;
        sub_1ABCFE2AC(v57, v31 + v43 + v46 * v44, type metadata accessor for Chart.Entry);
        goto LABEL_16;
      }
      sub_1ABD18510((uint64_t)v20, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
      sub_1ABD18510((uint64_t)v23, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
      sub_1ABCFC3BC(v42, type metadata accessor for Chart.Entry);
    }
    sub_1ABCFC3BC(v39, (uint64_t (*)(_QWORD))sub_1ABE52654);
    goto LABEL_11;
  }
LABEL_17:
  sub_1ABD18510((uint64_t)v58, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
  return v31;
}

unint64_t sub_1ABE51034()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34DFE8;
  if (!qword_1ED34DFE8)
  {
    sub_1ABD1248C(255, (unint64_t *)&qword_1ED34FCB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34DFE8);
  }
  return result;
}

unint64_t sub_1ABE5108C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1ABE52718();
  v2 = (_QWORD *)sub_1ABF32014();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1ABF2FF68();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    result = sub_1ABD00F9C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1ABE511A8(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = type metadata accessor for NetworkEvent();
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v20[1] = v2;
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB5014(0, v8, 0);
    v9 = v25;
    v10 = sub_1ABF30F34();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v22 = *(_QWORD *)(v11 + 72);
    v23 = v10;
    sub_1ABD66FD0();
    v21 = v13;
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v15 = &v7[*(int *)(v21 + 48)];
      v14(v7, v12, v23);
      v16 = a2[1];
      *(_OWORD *)v15 = *a2;
      *((_OWORD *)v15 + 1) = v16;
      *((_OWORD *)v15 + 2) = a2[2];
      swift_storeEnumTagMultiPayload();
      sub_1ABE52530((uint64_t)a2);
      v25 = v9;
      v18 = *(_QWORD *)(v9 + 16);
      v17 = *(_QWORD *)(v9 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1ABDB5014(v17 > 1, v18 + 1, 1);
        v9 = v25;
      }
      *(_QWORD *)(v9 + 16) = v18 + 1;
      sub_1ABCFE2AC((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEvent);
      v12 += v22;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1ABE51354(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v26 = type metadata accessor for NetworkEvent();
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v8)
    return MEMORY[0x1E0DEE9D8];
  v21 = v2;
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1ABDB5014(0, v8, 0);
  v10 = v27;
  v11 = sub_1ABF30F34();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v24 = *(_QWORD *)(a2 + qword_1ED34D480);
  v25 = v11;
  v23 = *(_QWORD *)(v12 + 72);
  sub_1ABD66FD0();
  v22 = v14;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  do
  {
    v16 = &v7[*(int *)(v22 + 48)];
    v15(v7, v13, v25);
    *(_QWORD *)v16 = *(_QWORD *)(v24 + 16);
    *((_QWORD *)v16 + 1) = 0;
    *((_QWORD *)v16 + 2) = v9;
    *((_QWORD *)v16 + 3) = v9;
    v17 = v9;
    *((_QWORD *)v16 + 4) = 0;
    *((_QWORD *)v16 + 5) = 0;
    swift_storeEnumTagMultiPayload();
    v27 = v10;
    v19 = *(_QWORD *)(v10 + 16);
    v18 = *(_QWORD *)(v10 + 24);
    if (v19 >= v18 >> 1)
    {
      sub_1ABDB5014(v18 > 1, v19 + 1, 1);
      v10 = v27;
    }
    *(_QWORD *)(v10 + 16) = v19 + 1;
    sub_1ABCFE2AC((uint64_t)v7, v10+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v19, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEvent);
    v13 += v23;
    --v8;
    v9 = v17;
  }
  while (v8);
  return v10;
}

uint64_t sub_1ABE5151C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    v4 = a1 + 32;
    sub_1ABE5165C();
    do
    {
      v4 += 8;
      MEMORY[0x1E0C80A78](v5);
      swift_allocObject();
      sub_1ABF2FF5C();
      sub_1ABF31228();
      swift_bridgeObjectRelease();
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      v5 = sub_1ABF31F00();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_1ABE5163C(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABE4F374(a1, *(void (**)(uint64_t, _QWORD))(v1 + 16));
}

uint64_t sub_1ABE51654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABE4F468(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24));
}

void sub_1ABE5165C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C8C0)
  {
    sub_1ABD1E99C(255, (unint64_t *)&qword_1ED34DE40, (void (*)(uint64_t))type metadata accessor for Chart);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C8C0);
  }
}

void sub_1ABE516C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DC68)
  {
    sub_1ABE51738();
    sub_1ABCFE1EC(&qword_1ED34DC58, (uint64_t (*)(uint64_t))sub_1ABE51738, MEMORY[0x1E0DB3BA8]);
    v0 = sub_1ABF30D84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DC68);
  }
}

void sub_1ABE51738()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DC60)
  {
    sub_1ABD1E99C(255, &qword_1ED34DE20, sub_1ABE517A8);
    sub_1ABE51844();
    v0 = sub_1ABF30D3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DC60);
  }
}

void sub_1ABE517A8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED34D378)
  {
    v2 = sub_1ABE51800();
    v4 = type metadata accessor for YahooBaseResponse(a1, (uint64_t)&type metadata for YahooChartResponse, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED34D378);
  }
}

unint64_t sub_1ABE51800()
{
  unint64_t result;

  result = qword_1ED34D5D8;
  if (!qword_1ED34D5D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D384, &type metadata for YahooChartResponse);
    atomic_store(result, (unint64_t *)&qword_1ED34D5D8);
  }
  return result;
}

unint64_t sub_1ABE51844()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED34DE28;
  if (!qword_1ED34DE28)
  {
    sub_1ABD1E99C(255, &qword_1ED34DE20, sub_1ABE517A8);
    v2 = v1;
    v3 = sub_1ABCFE1EC(&qword_1ED34D370, (uint64_t (*)(uint64_t))sub_1ABE517A8, (uint64_t)&unk_1ABF4F9B8);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED34DE28);
  }
  return result;
}

void sub_1ABE518D4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1ABD0F510(255, a3);
    v4 = sub_1ABF32200();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1ABE51928()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE5194C(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABE4F918(a1, v1);
}

uint64_t sub_1ABE51954()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABE51998(uint64_t a1)
{
  uint64_t v1;

  sub_1ABE4FA5C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(void *))(v1 + 56));
}

uint64_t sub_1ABE519AC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_1ABD00308(0, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v37 - v8;
  v10 = type metadata accessor for Chart.Entry(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v42 = (uint64_t)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v38 = (uint64_t)v37 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v37 - v16;
  result = MEMORY[0x1E0DEE9D8];
  v43 = MEMORY[0x1E0DEE9D8];
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v37[1] = v3;
    v20 = *(_QWORD *)(v11 + 72);
    v39 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v21 = a1 + v39;
    v22 = v20;
    v40 = v10;
    v41 = v11;
    while (1)
    {
      sub_1ABCFC790(v21, (uint64_t)v17, type metadata accessor for Chart.Entry);
      sub_1ABE526C4(a2, (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        break;
      v23 = (uint64_t)v9;
      v24 = v10;
      v25 = v22;
      v26 = v9;
      v27 = a2;
      v28 = v38;
      sub_1ABCFE2AC(v23, v38, type metadata accessor for Chart.Entry);
      sub_1ABF3070C();
      v30 = v29;
      sub_1ABF3070C();
      v32 = v31;
      v33 = v28;
      a2 = v27;
      v9 = v26;
      v22 = v25;
      v10 = v24;
      v11 = v41;
      sub_1ABCFC3BC(v33, type metadata accessor for Chart.Entry);
      if (v30 - v32 >= a3)
        goto LABEL_8;
      sub_1ABCFC3BC((uint64_t)v17, type metadata accessor for Chart.Entry);
LABEL_4:
      v21 += v22;
      if (!--v19)
        return v43;
    }
    sub_1ABD18510((uint64_t)v9, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
LABEL_8:
    sub_1ABD18510(a2, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
    sub_1ABCFC790((uint64_t)v17, a2, type metadata accessor for Chart.Entry);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
    sub_1ABCFE2AC((uint64_t)v17, v42, type metadata accessor for Chart.Entry);
    v34 = v43;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1ABD008FC(0, *(_QWORD *)(v34 + 16) + 1, 1);
      v34 = v43;
    }
    v36 = *(_QWORD *)(v34 + 16);
    v35 = *(_QWORD *)(v34 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_1ABD008FC(v35 > 1, v36 + 1, 1);
      v34 = v43;
    }
    *(_QWORD *)(v34 + 16) = v36 + 1;
    sub_1ABCFE2AC(v42, v34 + v39 + v36 * v22, type metadata accessor for Chart.Entry);
    v10 = v40;
    v11 = v41;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1ABE51CC0(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = result + 40;
  v6 = -(uint64_t)v2;
  v7 = MEMORY[0x1E0DEE9D8];
  v19 = result + 40;
  v20 = *(_QWORD *)(result + 16);
  do
  {
    if (v4 <= v2)
      v8 = v2;
    else
      v8 = v4;
    v9 = -(uint64_t)v8;
    for (i = (uint64_t *)(v5 + 16 * v4++); ; i += 2)
    {
      if (v9 + v4 == 1)
      {
        __break(1u);
        return result;
      }
      v12 = *(i - 1);
      v11 = *i;
      v13 = *(_QWORD *)(a2 + 16);
      sub_1ABF2FF5C();
      if (!v13)
        break;
      sub_1ABF2FF5C();
      sub_1ABD00F9C(v12, v11);
      v15 = v14;
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        break;
      result = swift_bridgeObjectRelease();
      ++v4;
      if (v6 + v4 == 1)
        return v7;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1ABD16414(0, *(_QWORD *)(v7 + 16) + 1, 1);
    v17 = *(_QWORD *)(v7 + 16);
    v16 = *(_QWORD *)(v7 + 24);
    if (v17 >= v16 >> 1)
      result = sub_1ABD16414(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v7 + 16) = v17 + 1;
    v18 = v7 + 16 * v17;
    *(_QWORD *)(v18 + 32) = v12;
    *(_QWORD *)(v18 + 40) = v11;
    v5 = v19;
    v2 = v20;
  }
  while (v6 + v4);
  return v7;
}

void sub_1ABE51E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *i;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_1ABD00308(0, &qword_1ED34DA40, (void (*)(uint64_t))type metadata accessor for Chart);
  MEMORY[0x1E0C80A78](v7);
  v40 = (uint64_t)&v36 - v8;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    return;
  }
  v10 = 0;
  v11 = a1 + 40;
  v12 = -(uint64_t)v9;
  v38 = v3;
  v39 = MEMORY[0x1E0DEE9D8];
  v13 = v40;
  v36 = v11;
  v37 = v9;
  v41 = -(uint64_t)v9;
  do
  {
    if (v10 <= v9)
      v14 = v9;
    else
      v14 = v10;
    v43 = -(uint64_t)v14;
    for (i = (uint64_t *)(v11 + 16 * v10++); ; i += 2)
    {
      if (v43 + v10 == 1)
      {
        __break(1u);
        return;
      }
      if (*(_QWORD *)(a2 + 16))
        break;
LABEL_8:
      ++v10;
      if (v12 + v10 == 1)
        return;
    }
    v16 = *(i - 1);
    v17 = *i;
    swift_bridgeObjectRetain_n();
    v42 = v16;
    sub_1ABD00F9C(v16, v17);
    LOBYTE(v16) = v18;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_7;
    if (*(_QWORD *)(a3 + 16))
    {
      sub_1ABF2FF5C();
      v19 = sub_1ABD00F9C(v42, v17);
      if ((v20 & 1) != 0)
      {
        v21 = v19;
        v22 = a2;
        v23 = *(_QWORD *)(a3 + 56);
        v24 = type metadata accessor for Chart(0);
        v25 = a3;
        v26 = *(_QWORD *)(v24 - 8);
        v27 = v23 + *(_QWORD *)(v26 + 72) * v21;
        a2 = v22;
        v13 = v40;
        sub_1ABCFC790(v27, v40, type metadata accessor for Chart);
        v28 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56);
        a3 = v25;
        v28(v13, 0, 1, v24);
      }
      else
      {
        v24 = type metadata accessor for Chart(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v13, 1, 1, v24);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for Chart(0);
      v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v13, 1, v24);
      v12 = v41;
      if (v29 == 1)
        goto LABEL_19;
      sub_1ABD18510(v13, &qword_1ED34DA40, (void (*)(uint64_t))type metadata accessor for Chart);
LABEL_7:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    v30 = type metadata accessor for Chart(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v13, 1, 1, v30);
LABEL_19:
    sub_1ABD18510(v13, &qword_1ED34DA40, (void (*)(uint64_t))type metadata accessor for Chart);
    v31 = v39;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ABD16414(0, *(_QWORD *)(v31 + 16) + 1, 1);
      v31 = v44;
    }
    v9 = v37;
    v34 = *(_QWORD *)(v31 + 16);
    v33 = *(_QWORD *)(v31 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_1ABD16414(v33 > 1, v34 + 1, 1);
      v31 = v44;
    }
    *(_QWORD *)(v31 + 16) = v34 + 1;
    v39 = v31;
    v35 = v31 + 16 * v34;
    v12 = v41;
    *(_QWORD *)(v35 + 32) = v42;
    *(_QWORD *)(v35 + 40) = v17;
    v11 = v36;
  }
  while (v12 + v10);
}

void sub_1ABE52144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1ABF31BE8();
    sub_1ABE518D4(0, (unint64_t *)&qword_1ED34FFF0, (unint64_t *)&qword_1ED350010);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1ABF366C0;
    v3 = MEMORY[0x1E0DEA968];
    v4 = MEMORY[0x1AF437C34](a1, MEMORY[0x1E0DEA968]);
    v6 = v5;
    *(_QWORD *)(v2 + 56) = v3;
    *(_QWORD *)(v2 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v2 + 32) = v4;
    *(_QWORD *)(v2 + 40) = v6;
    sub_1ABD19560();
    v7 = (id)sub_1ABF31D44();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1ABE52250(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  BOOL v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);
  unint64_t v24;
  unint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;

  v3 = sub_1ABF30F34();
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NetworkEvent();
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1ABE4F088();
  v10 = &v1[qword_1ED34D468];
  if (v9)
  {
    v11 = *((_QWORD *)v10 + 3);
    v12 = *((_QWORD *)v10 + 4);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v13 = v1;
    v14 = sub_1ABE51354(a1, (uint64_t)v13);

    sub_1ABF26680(v14, v11, v12);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ABD07E04((uint64_t)v10, (uint64_t)v34);
    v16 = v35;
    v17 = v36;
    v18 = __swift_project_boxed_opaque_existential_1(v34, v35);
    v19 = *(_QWORD *)(a1 + 16);
    v20 = MEMORY[0x1E0DEE9D8];
    if (v19)
    {
      v26[1] = v18;
      v27 = v17;
      v28 = v16;
      v33 = MEMORY[0x1E0DEE9D8];
      sub_1ABDB5014(0, v19, 0);
      v21 = a1 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
      v22 = *(_QWORD *)(v32 + 72);
      v23 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      v29 = v22;
      do
      {
        v23(v5, v21, v3);
        v23(v8, (unint64_t)v5, v3);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
        v20 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1ABDB5014(0, *(_QWORD *)(v20 + 16) + 1, 1);
          v22 = v29;
          v20 = v33;
        }
        v25 = *(_QWORD *)(v20 + 16);
        v24 = *(_QWORD *)(v20 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_1ABDB5014(v24 > 1, v25 + 1, 1);
          v22 = v29;
          v20 = v33;
        }
        *(_QWORD *)(v20 + 16) = v25 + 1;
        sub_1ABCFE2AC((uint64_t)v8, v20+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * v25, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEvent);
        v21 += v22;
        --v19;
      }
      while (v19);
      v17 = v27;
      v16 = v28;
    }
    sub_1ABF26680(v20, v16, v17);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
}

void sub_1ABE524F4(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1ABE52500(_QWORD *a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;

  return sub_1ABE4FF4C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

void sub_1ABE52518(_OWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABE5001C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1ABE52530(uint64_t a1)
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

void sub_1ABE52574()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34DED0)
  {
    sub_1ABD1248C(255, (unint64_t *)&qword_1ED34FB80, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEB940]);
    sub_1ABD00308(255, &qword_1ED34DA40, (void (*)(uint64_t))type metadata accessor for Chart);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34DED0);
  }
}

uint64_t sub_1ABE52600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD00308(0, &qword_1ED34DA40, (void (*)(uint64_t))type metadata accessor for Chart);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABE52654()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34CA68)
  {
    sub_1ABD00308(255, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34CA68);
  }
}

uint64_t sub_1ABE526C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD00308(0, &qword_1ED34DA00, (void (*)(uint64_t))type metadata accessor for Chart.Entry);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1ABE52718()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FDF0)
  {
    v0 = sub_1ABF32020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FDF0);
  }
}

uint64_t sub_1ABE52784()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE527B0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE527DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_1ABE527EC()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6176;
  else
    return 1701667182;
}

uint64_t sub_1ABE5281C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE546C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE52840()
{
  sub_1ABE53EFC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE52868()
{
  sub_1ABE53EFC();
  return sub_1ABF32398();
}

uint64_t sub_1ABE52890(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1ABCF4DA8(0, &qword_1ED34FF98, (uint64_t (*)(void))sub_1ABE53EFC, (uint64_t)&type metadata for ExternalAnalyticsQueryParameterConfig.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE53EFC();
  sub_1ABF32368();
  v13 = 0;
  v9 = v11[3];
  sub_1ABF32194();
  if (!v9)
  {
    v12 = 1;
    sub_1ABF32194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABE529D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  char v22;

  v20 = a2;
  sub_1ABCF4DA8(0, &qword_1ED34FEE0, (uint64_t (*)(void))sub_1ABE53EFC, (uint64_t)&type metadata for ExternalAnalyticsQueryParameterConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE53EFC();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v20;
  v22 = 0;
  v10 = sub_1ABF320E0();
  v12 = v11;
  v21 = 1;
  sub_1ABF2FF5C();
  v13 = sub_1ABF320E0();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v13;
  v16(v8, v5);
  *v9 = v10;
  v9[1] = v12;
  v9[2] = v17;
  v9[3] = v15;
  sub_1ABF2FF5C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE52B98@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABE529D4(a1, a2);
}

uint64_t sub_1ABE52BAC(_QWORD *a1)
{
  return sub_1ABE52890(a1);
}

uint64_t sub_1ABE52BC4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE52BF0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1ABE52C24())()
{
  return nullsub_2;
}

uint64_t sub_1ABE52C34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE52C60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1ABE52C94())()
{
  return nullsub_2;
}

uint64_t sub_1ABE52CA4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE52CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1ABE52D04())()
{
  return nullsub_2;
}

uint64_t sub_1ABE52D14()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE52D1C()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE52D24()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_1ABE52D2C()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE52D34@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = a11;
  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  if (a7)
    v13 = a7;
  else
    v13 = v12;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  if (a8)
    v14 = a8;
  else
    v14 = v12;
  if (!a11)
    v11 = v12;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = v13;
  *(_QWORD *)(a9 + 56) = v14;
  *(_BYTE *)(a9 + 64) = a10 & 1;
  *(_QWORD *)(a9 + 72) = v11;
  return result;
}

uint64_t sub_1ABE52D7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  _QWORD *v70;

  sub_1ABCF4DA8(0, &qword_1ED34FED0, (uint64_t (*)(void))sub_1ABE53F40, (uint64_t)&type metadata for ExternalAnalyticsConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v55 - v8;
  v10 = a1[3];
  v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1ABE53F40();
  sub_1ABF3235C();
  if (!v2)
  {
    v11 = v7;
    v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v69 = 0;
    sub_1ABF320C8();
    v12 = v6;
    v13 = v68;
    v65 = v67;
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v68)
    {
      swift_beginAccess();
      v14 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v16 = v14[2];
      v15 = v14[3];
      if (v16 >= v15 >> 1)
        v14 = sub_1ABD12054((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
      v14[2] = v16 + 1;
      v17 = &v14[2 * v16];
      v17[4] = 0xD000000000000010;
      v17[5] = 0x80000001ABF5EA10;
      v70 = v14;
      swift_endAccess();
    }
    v69 = 1;
    sub_1ABF320C8();
    v18 = a2;
    v61 = v67;
    v62 = v13;
    v63 = v68;
    v64 = v9;
    if (!v68)
    {
      swift_beginAccess();
      v14 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v20 = v14[2];
      v19 = v14[3];
      if (v20 >= v19 >> 1)
        v14 = sub_1ABD12054((_QWORD *)(v19 > 1), v20 + 1, 1, v14);
      v14[2] = v20 + 1;
      v21 = &v14[2 * v20];
      v21[4] = 0x636974796C616E61;
      v21[5] = 0xEB00000000644973;
      v70 = v14;
      swift_endAccess();
      v18 = a2;
    }
    v69 = 2;
    sub_1ABF320C8();
    v59 = v67;
    v60 = v68;
    if (!v68)
    {
      swift_beginAccess();
      v14 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v23 = v14[2];
      v22 = v14[3];
      if (v23 >= v22 >> 1)
        v14 = sub_1ABD12054((_QWORD *)(v22 > 1), v23 + 1, 1, v14);
      v14[2] = v23 + 1;
      v24 = &v14[2 * v23];
      v24[4] = 0xD000000000000017;
      v24[5] = 0x80000001ABF5EA30;
      v70 = v14;
      swift_endAccess();
      v18 = a2;
    }
    v69 = 3;
    sub_1ABD12448(0, (unint64_t *)&qword_1ED34FCB0);
    v26 = v25;
    v27 = sub_1ABD105E0((unint64_t *)&qword_1ED34FCC8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1ABF320C8();
    v57 = v27;
    v58 = v67;
    if (!v67)
    {
      swift_beginAccess();
      v14 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v29 = v14[2];
      v28 = v14[3];
      if (v29 >= v28 >> 1)
        v14 = sub_1ABD12054((_QWORD *)(v28 > 1), v29 + 1, 1, v14);
      v14[2] = v29 + 1;
      v30 = (char *)&v14[2 * v29];
      strcpy(v30 + 32, "proxyHostNames");
      v30[47] = -18;
      v70 = v14;
      swift_endAccess();
      v18 = a2;
    }
    v69 = 4;
    sub_1ABD12448(0, &qword_1ED34FC70);
    sub_1ABE53FC8((unint64_t *)&unk_1ED34FC80, (uint64_t (*)(void))sub_1ABE53F84, MEMORY[0x1E0DEAF40]);
    sub_1ABF320C8();
    v56 = v67;
    if (!v67)
    {
      swift_beginAccess();
      v14 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v32 = v14[2];
      v31 = v14[3];
      if (v32 >= v31 >> 1)
        v14 = sub_1ABD12054((_QWORD *)(v31 > 1), v32 + 1, 1, v14);
      v14[2] = v32 + 1;
      v33 = &v14[2 * v32];
      v33[4] = 0xD000000000000014;
      v33[5] = 0x80000001ABF5EA50;
      v70 = v14;
      swift_endAccess();
      v18 = a2;
    }
    LOBYTE(v67) = 5;
    sub_1ABF320C8();
    v34 = v69;
    if (v69 == 2)
    {
      swift_beginAccess();
      v14 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v36 = v14[2];
      v35 = v14[3];
      if (v36 >= v35 >> 1)
        v14 = sub_1ABD12054((_QWORD *)(v35 > 1), v36 + 1, 1, v14);
      v14[2] = v36 + 1;
      v37 = &v14[2 * v36];
      v37[4] = 0xD000000000000010;
      v37[5] = 0x80000001ABF5EA70;
      v70 = v14;
      swift_endAccess();
      v18 = a2;
    }
    v69 = 6;
    sub_1ABF320C8();
    v39 = v67;
    if (!v67)
    {
      swift_beginAccess();
      v14 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v41 = v14[2];
      v40 = v14[3];
      v42 = v41 + 1;
      if (v41 >= v40 >> 1)
      {
        v57 = v41 + 1;
        v54 = sub_1ABD12054((_QWORD *)(v40 > 1), v41 + 1, 1, v14);
        v42 = v57;
        v14 = v54;
      }
      v14[2] = v42;
      v43 = &v14[2 * v41];
      v43[4] = 0x69666F72506E7076;
      v43[5] = 0xEF73656D614E656CLL;
      v70 = v14;
      swift_endAccess();
      v18 = a2;
    }
    v44 = MEMORY[0x1E0DEE9D8];
    if (v58)
      v45 = v58;
    else
      v45 = MEMORY[0x1E0DEE9D8];
    v46 = v56;
    if (!v56)
      v46 = MEMORY[0x1E0DEE9D8];
    v47 = v34 & 1;
    if (v39)
      v44 = v39;
    v57 = v44;
    v58 = v46;
    if (v14[2])
    {
      sub_1ABD0F55C();
      v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1ABF366C0;
      *(_QWORD *)(v48 + 56) = v26;
      *(_QWORD *)(v48 + 64) = sub_1ABD82448();
      *(_QWORD *)(v48 + 32) = v14;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v49 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v49 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v64, v12);
    swift_bridgeObjectRelease();
    v50 = v62;
    *(_QWORD *)v18 = v65;
    *(_QWORD *)(v18 + 8) = v50;
    v51 = v63;
    *(_QWORD *)(v18 + 16) = v61;
    *(_QWORD *)(v18 + 24) = v51;
    v52 = v60;
    *(_QWORD *)(v18 + 32) = v59;
    *(_QWORD *)(v18 + 40) = v52;
    v53 = v58;
    *(_QWORD *)(v18 + 48) = v45;
    *(_QWORD *)(v18 + 56) = v53;
    *(_BYTE *)(v18 + 64) = v47;
    *(_QWORD *)(v18 + 72) = v57;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
}

uint64_t sub_1ABE537EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ABE53824 + 4 * byte_1ABF44370[a1]))(0xD000000000000010, 0x80000001ABF5EA10);
}

uint64_t sub_1ABE53824()
{
  return 0x636974796C616E61;
}

uint64_t sub_1ABE53844(uint64_t a1)
{
  return a1 + 7;
}

uint64_t sub_1ABE5389C()
{
  return 0x69666F72506E7076;
}

uint64_t sub_1ABE538C0()
{
  unsigned __int8 *v0;

  return sub_1ABE537EC(*v0);
}

uint64_t sub_1ABE538C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE54798(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ABE538EC(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1ABE538F8()
{
  sub_1ABE53F40();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE53920()
{
  sub_1ABE53F40();
  return sub_1ABF32398();
}

uint64_t sub_1ABE53948(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  sub_1ABCF4DA8(0, &qword_1ED34FF88, (uint64_t (*)(void))sub_1ABE53F40, (uint64_t)&type metadata for ExternalAnalyticsConfiguration.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v21 - v5;
  v7 = *(_QWORD *)(v1 + 16);
  v27 = *(_QWORD *)(v1 + 24);
  v28 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v25 = *(_QWORD *)(v1 + 40);
  v26 = v8;
  v9 = *(_QWORD *)(v1 + 48);
  v23 = *(_QWORD *)(v1 + 56);
  v24 = v9;
  v22 = *(unsigned __int8 *)(v1 + 64);
  v21 = *(_QWORD *)(v1 + 72);
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1ABE53F40();
  sub_1ABF32368();
  LOBYTE(v31) = 0;
  v14 = v29;
  sub_1ABF32140();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v13);
  v16 = v24;
  v17 = v4;
  LOBYTE(v31) = 1;
  sub_1ABF32140();
  LOBYTE(v31) = 2;
  sub_1ABF32140();
  v31 = v16;
  v30 = 3;
  sub_1ABD12448(0, (unint64_t *)&qword_1ED34FCB0);
  v19 = v18;
  v20 = sub_1ABD105E0((unint64_t *)&qword_1ED34FCB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  v28 = v20;
  v29 = v19;
  v31 = v23;
  v30 = 4;
  sub_1ABD12448(0, &qword_1ED34FC70);
  sub_1ABE53FC8(&qword_1ED34FC78, (uint64_t (*)(void))sub_1ABE5403C, MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  LOBYTE(v31) = 5;
  sub_1ABF321A0();
  v31 = v21;
  v30 = 6;
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v6, v13);
}

uint64_t sub_1ABE53C38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE52D7C(a1, a2);
}

uint64_t sub_1ABE53C4C(_QWORD *a1)
{
  return sub_1ABE53948(a1);
}

uint64_t sub_1ABE53C64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  _QWORD *v37;
  int v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD **)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 64);
  v11 = *(_QWORD **)(a1 + 72);
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 32);
  v17 = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD **)(a2 + 48);
  v18 = *(_QWORD *)(a2 + 56);
  v19 = *(unsigned __int8 *)(a2 + 64);
  v20 = *(_QWORD **)(a2 + 72);
  if (v3)
  {
    if (!v12)
      return 0;
    if (*(_QWORD *)a1 != *(_QWORD *)a2 || v3 != v12)
    {
      v43 = *(_QWORD *)(a2 + 56);
      v45 = *(_QWORD **)(a1 + 48);
      v42 = *(unsigned __int8 *)(a2 + 64);
      v40 = *(_QWORD **)(a2 + 72);
      v41 = *(_QWORD *)(a1 + 56);
      v39 = *(unsigned __int8 *)(a1 + 64);
      v21 = *(_QWORD **)(a1 + 72);
      v22 = *(_QWORD **)(a2 + 48);
      v23 = *(_QWORD *)(a1 + 40);
      v24 = *(_QWORD *)(a1 + 32);
      v25 = *(_QWORD *)(a2 + 40);
      v26 = *(_QWORD *)(a2 + 32);
      v27 = *(_QWORD *)(a2 + 16);
      v28 = sub_1ABF3223C();
      v13 = v27;
      v14 = v26;
      v17 = v25;
      v5 = v24;
      v7 = v23;
      v16 = v22;
      v11 = v21;
      v10 = v39;
      v20 = v40;
      v9 = v41;
      v19 = v42;
      v18 = v43;
      v8 = v45;
      if ((v28 & 1) == 0)
        return 0;
    }
  }
  else if (v12)
  {
    return 0;
  }
  if (v6)
  {
    if (!v15)
      return 0;
    if (v4 != v13 || v6 != v15)
    {
      v44 = v11;
      v46 = v17;
      v29 = v16;
      v30 = v7;
      v31 = v5;
      v32 = v14;
      v33 = sub_1ABF3223C();
      v14 = v32;
      v11 = v44;
      v17 = v46;
      v5 = v31;
      v7 = v30;
      v16 = v29;
      if ((v33 & 1) == 0)
        return 0;
    }
  }
  else if (v15)
  {
    return 0;
  }
  if (v7)
  {
    if (!v17)
      return 0;
    if (v5 != v14 || v7 != v17)
    {
      v34 = v11;
      v35 = v16;
      v36 = sub_1ABF3223C();
      v16 = v35;
      v11 = v34;
      if ((v36 & 1) == 0)
        return 0;
    }
  }
  else if (v17)
  {
    return 0;
  }
  v37 = v11;
  if ((sub_1ABD1C278(v8, v16) & 1) != 0 && (sub_1ABDDFDB0(v9, v18) & 1) != 0 && ((v10 ^ v19) & 1) == 0)
    return sub_1ABD1C278(v37, v20);
  return 0;
}

uint64_t _s10StocksCore14MultiSizeVideoV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1ABF3223C(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1ABF3223C();
  }
  return result;
}

unint64_t sub_1ABE53EFC()
{
  unint64_t result;

  result = qword_1ED34F840;
  if (!qword_1ED34F840)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF446BC, &type metadata for ExternalAnalyticsQueryParameterConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F840);
  }
  return result;
}

unint64_t sub_1ABE53F40()
{
  unint64_t result;

  result = qword_1ED34F790;
  if (!qword_1ED34F790)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4466C, &type metadata for ExternalAnalyticsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F790);
  }
  return result;
}

unint64_t sub_1ABE53F84()
{
  unint64_t result;

  result = qword_1ED34F860;
  if (!qword_1ED34F860)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4438C, &type metadata for ExternalAnalyticsQueryParameterConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34F860);
  }
  return result;
}

uint64_t sub_1ABE53FC8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD12448(255, &qword_1ED34FC70);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABE5403C()
{
  unint64_t result;

  result = qword_1ED34F858;
  if (!qword_1ED34F858)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF443B4, &type metadata for ExternalAnalyticsQueryParameterConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34F858);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsQueryParameterConfig()
{
  return &type metadata for ExternalAnalyticsQueryParameterConfig;
}

uint64_t destroy for ExternalAnalyticsConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalAnalyticsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for ExternalAnalyticsConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExternalAnalyticsConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsConfiguration()
{
  return &type metadata for ExternalAnalyticsConfiguration;
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1ABE543C4 + 4 * byte_1ABF4437C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1ABE543F8 + 4 * byte_1ABF44377[v4]))();
}

uint64_t sub_1ABE543F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE54400(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE54408);
  return result;
}

uint64_t sub_1ABE54414(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE5441CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1ABE54420(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE54428(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsConfiguration.CodingKeys()
{
  return &type metadata for ExternalAnalyticsConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsQueryParameterConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABE54490 + 4 * byte_1ABF44386[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABE544C4 + 4 * byte_1ABF44381[v4]))();
}

uint64_t sub_1ABE544C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE544CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE544D4);
  return result;
}

uint64_t sub_1ABE544E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE544E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABE544EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE544F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsQueryParameterConfig.CodingKeys()
{
  return &type metadata for ExternalAnalyticsQueryParameterConfig.CodingKeys;
}

unint64_t sub_1ABE54514()
{
  unint64_t result;

  result = qword_1EEC43F08;
  if (!qword_1EEC43F08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4458C, &type metadata for ExternalAnalyticsQueryParameterConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F08);
  }
  return result;
}

unint64_t sub_1ABE5455C()
{
  unint64_t result;

  result = qword_1EEC43F10;
  if (!qword_1EEC43F10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44644, &type metadata for ExternalAnalyticsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F10);
  }
  return result;
}

unint64_t sub_1ABE545A4()
{
  unint64_t result;

  result = qword_1ED34F7A0;
  if (!qword_1ED34F7A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF445B4, &type metadata for ExternalAnalyticsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F7A0);
  }
  return result;
}

unint64_t sub_1ABE545EC()
{
  unint64_t result;

  result = qword_1ED34F798;
  if (!qword_1ED34F798)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF445DC, &type metadata for ExternalAnalyticsConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F798);
  }
  return result;
}

unint64_t sub_1ABE54634()
{
  unint64_t result;

  result = qword_1ED34F850;
  if (!qword_1ED34F850)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF444FC, &type metadata for ExternalAnalyticsQueryParameterConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F850);
  }
  return result;
}

unint64_t sub_1ABE5467C()
{
  unint64_t result;

  result = qword_1ED34F848;
  if (!qword_1ED34F848)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44524, &type metadata for ExternalAnalyticsQueryParameterConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F848);
  }
  return result;
}

uint64_t sub_1ABE546C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1ABE54798(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001ABF5EA10 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636974796C616E61 && a2 == 0xEB00000000644973 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF5EA30 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736F4879786F7270 && a2 == 0xEE0073656D614E74 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF5EA50 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ABF5EA70 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69666F72506E7076 && a2 == 0xEF73656D614E656CLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

BOOL sub_1ABE54AB8()
{
  void *v0;

  return (uint64_t)objc_msgSend(v0, sel_contentProvider) > 1;
}

id sub_1ABE54B24()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoopAppActivityMonitor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NoopAppActivityMonitor()
{
  return objc_opt_self();
}

id sub_1ABE54C18(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  char *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char *v8;
  id v9;
  objc_super v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[2];
  _BYTE v15[24];
  uint64_t v16;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = v1;
  v5 = (void *)sub_1ABF31780();
  v6 = objc_msgSend(a1, sel_decodeObjectForKey_, v5);

  if (v6)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_1ABD22B10((uint64_t)v14, (uint64_t)v15);
  if (!v16)
  {

    sub_1ABD6B430((uint64_t)v15);
LABEL_9:
    swift_deallocPartialClassInstance();
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_9;
  }
  v7 = v13;
  v8 = &v4[OBJC_IVAR___SCUpdateLastAppLaunchUpsellInstanceIDCommand_lastAppLaunchUpsellInstanceID];
  *(_QWORD *)v8 = v12;
  *((_QWORD *)v8 + 1) = v7;

  v11.receiver = v4;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_init);

  return v9;
}

uint64_t sub_1ABE54DE0()
{
  sub_1ABE54FC4();
  sub_1ABF2FF5C();
  return sub_1ABF31CD8();
}

uint64_t sub_1ABE54F98()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1ABE54FBC()
{
  return sub_1ABE54DE0();
}

unint64_t sub_1ABE54FC4()
{
  unint64_t result;

  result = qword_1ED34E140;
  if (!qword_1ED34E140)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34E140);
  }
  return result;
}

uint64_t sub_1ABE55000()
{
  return sub_1ABF30478();
}

uint64_t sub_1ABE55048()
{
  return sub_1ABF30478();
}

uint64_t getEnumTagSinglePayload for WatchlistIntentError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchlistIntentError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABE5517C + 4 * byte_1ABF44775[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABE551B0 + 4 * asc_1ABF44770[v4]))();
}

uint64_t sub_1ABE551B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE551B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE551C0);
  return result;
}

uint64_t sub_1ABE551CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE551D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABE551D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE551E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistIntentError()
{
  return &type metadata for WatchlistIntentError;
}

BOOL sub_1ABE551FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  return v2 != 0;
}

BOOL sub_1ABE55218(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  _QWORD v13[2];

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  v5 = a2 & 0xFFFFFFFFFFFFFFLL;
  v6 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  sub_1ABF2FF5C();
  for (i = 0; i < v2; i += v10)
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      sub_1ABF31E88();
      v10 = v9;
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v13[0] = a1;
        v13[1] = v5;
        if (*((char *)v13 + i) < 0)
          __asm { BR              X9 }
      }
      else
      {
        v8 = v6;
        if ((a1 & 0x1000000000000000) == 0)
          v8 = sub_1ABF31EE8();
        if (*(char *)(v8 + i) < 0)
          __asm { BR              X10 }
      }
      v10 = 1;
    }
    v11 = SCIsCJKCharacter();
    if (v11)
      break;
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1ABE553F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  v3 = a1;
  sub_1ABF2FF5C();
  return v3;
}

id sub_1ABE55448(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  _BYTE v34[24];
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;

  v11 = sub_1ABF30B38();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1ABF30760();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = &v34[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(a3) = *a3;
  (*(void (**)(_BYTE *, uint64_t, double))(v19 + 16))(v18, a4, v16);
  sub_1ABD07E04(v5 + 16, (uint64_t)v36);
  sub_1ABD07E04(v5 + 56, (uint64_t)v34);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a5, v11);
  v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (uint64_t *)&v34[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
  v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (uint64_t *)&v34[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v29 + 16))(v28, v26);
  v30 = *v23;
  v31 = *v28;
  sub_1ABF2FF5C();
  v32 = sub_1ABE5580C(a1, a2, (char)a3, (uint64_t)v18, v30, v31, (uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v32;
}

uint64_t sub_1ABE55634()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for YahooChartOperationFactory()
{
  return objc_opt_self();
}

id sub_1ABE55680(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _BYTE *a8)
{
  objc_class *ObjectType;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  objc_super v26;
  _QWORD v27[5];
  _QWORD v28[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v28[3] = type metadata accessor for YahooChartModelEngine();
  v28[4] = &off_1E5AEB810;
  v28[0] = a5;
  v27[3] = type metadata accessor for YahooBaseOperationFactory();
  v27[4] = &off_1E5AEEE20;
  v27[0] = a6;
  v17 = &a8[qword_1ED3510F0];
  *v17 = a1;
  v17[1] = a2;
  a8[qword_1ED3510F8] = a3;
  v18 = &a8[qword_1EEC41F40];
  v19 = sub_1ABF30760();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a4, v19);
  sub_1ABD07E04((uint64_t)v28, (uint64_t)&a8[qword_1ED351100]);
  sub_1ABD07E04((uint64_t)v27, (uint64_t)&a8[qword_1ED351108]);
  v21 = &a8[qword_1ED351110];
  v22 = sub_1ABF30B38();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a7, v22);
  v26.receiver = a8;
  v26.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v26, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a7, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a4, v19);
  return v24;
}

id sub_1ABE5580C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _BYTE *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  id v25;
  _QWORD v27[3];
  uint64_t v28;
  _UNKNOWN **v29;
  _QWORD v30[3];
  uint64_t v31;
  _UNKNOWN **v32;

  v31 = type metadata accessor for YahooChartModelEngine();
  v32 = &off_1E5AEB810;
  v30[0] = a5;
  v28 = type metadata accessor for YahooBaseOperationFactory();
  v29 = &off_1E5AEEE20;
  v27[0] = a6;
  v14 = objc_allocWithZone((Class)type metadata accessor for YahooChartOperation());
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (_QWORD *)((char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
  v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (_QWORD *)((char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
  v25 = sub_1ABE55680(a1, a2, a3, a4, *v18, *v23, a7, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v25;
}

uint64_t WidgetQuote.price.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t WidgetQuote.priceChange.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t WidgetQuote.marketCapitalization.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t WidgetQuote.currencyCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1ABF2FF5C();
  return v1;
}

void WidgetQuote.exchangeStatus.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

uint64_t WidgetQuote.exchangeNextOpen.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for WidgetQuote();
  return sub_1ABCFC790(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(_QWORD))sub_1ABD226F0);
}

uint64_t WidgetQuote.init(price:priceChange:marketCapitalization:currencyCode:exchangeStatus:exchangeNextOpen:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v12;
  uint64_t v13;

  v12 = *a10;
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = v12;
  v13 = a9 + *(int *)(type metadata accessor for WidgetQuote() + 36);
  return sub_1ABD241F8(a11, v13);
}

uint64_t WidgetQuote.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_BYTE *)(a2 + 8) = v7;
  v8 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a2 + 16) = *(_QWORD *)(a1 + 16);
  *(_BYTE *)(a2 + 24) = v8;
  v9 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(_BYTE *)(a2 + 40) = v9;
  v10 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a2 + 56) = v10;
  *(_BYTE *)(a2 + 64) = *(_BYTE *)(a1 + 128);
  v11 = type metadata accessor for Quote();
  sub_1ABCFC790(a1 + *(int *)(v11 + 60), (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  sub_1ABF2FF5C();
  sub_1ABCFC3BC(a1, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  v12 = type metadata accessor for WidgetQuote();
  return sub_1ABD241F8((uint64_t)v6, a2 + *(int *)(v12 + 36));
}

uint64_t sub_1ABE55B84(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE55BB4 + 4 * byte_1ABF44880[a1]))(0x6563697270, 0xE500000000000000);
}

uint64_t sub_1ABE55BB4()
{
  return 0x6168436563697270;
}

unint64_t sub_1ABE55BD4()
{
  return 0xD000000000000014;
}

uint64_t sub_1ABE55BF4()
{
  return 0x79636E6572727563;
}

uint64_t sub_1ABE55C14()
{
  return 0x65676E6168637865;
}

unint64_t sub_1ABE55C38()
{
  return 0xD000000000000010;
}

uint64_t sub_1ABE55C54()
{
  unsigned __int8 *v0;

  return sub_1ABE55B84(*v0);
}

uint64_t sub_1ABE55C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE56FA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE55C80()
{
  sub_1ABE5660C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE55CA8()
{
  sub_1ABE5660C();
  return sub_1ABF32398();
}

uint64_t WidgetQuote.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  v3 = v1;
  sub_1ABE56650(0, &qword_1EEC43F28, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE5660C();
  sub_1ABF32368();
  v11[15] = 0;
  sub_1ABF32158();
  if (!v2)
  {
    v11[14] = 1;
    sub_1ABF32158();
    v11[13] = 2;
    sub_1ABF32158();
    v11[12] = 3;
    sub_1ABF32140();
    v11[11] = *(_BYTE *)(v3 + 64);
    v11[10] = 4;
    sub_1ABCF4E48();
    sub_1ABF321D0();
    type metadata accessor for WidgetQuote();
    v11[9] = 5;
    sub_1ABF30760();
    sub_1ABCFE26C(&qword_1ED34EAA8, MEMORY[0x1E0CB0890]);
    sub_1ABF3217C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t WidgetQuote.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v23 = a2;
  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE56650(0, &qword_1EEC43F38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v24 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - v9;
  v11 = type metadata accessor for WidgetQuote();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1ABE5660C();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v22 = v11;
  v15 = (uint64_t)v6;
  v32 = 0;
  v16 = v24;
  *(_QWORD *)v13 = sub_1ABF320A4();
  v13[8] = v17 & 1;
  v31 = 1;
  *((_QWORD *)v13 + 2) = sub_1ABF320A4();
  v13[24] = v18 & 1;
  v30 = 2;
  *((_QWORD *)v13 + 4) = sub_1ABF320A4();
  v13[40] = v19 & 1;
  v29 = 3;
  *((_QWORD *)v13 + 6) = sub_1ABF3208C();
  *((_QWORD *)v13 + 7) = v20;
  v27 = 4;
  sub_1ABE47024();
  sub_1ABF32110();
  v13[64] = v28;
  sub_1ABF30760();
  v26 = 5;
  sub_1ABCFE26C(&qword_1ED34CCC0, MEMORY[0x1E0CB08C0]);
  sub_1ABF320C8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  sub_1ABD241F8(v15, (uint64_t)&v13[*(int *)(v22 + 36)]);
  sub_1ABCFC790((uint64_t)v13, v23, (uint64_t (*)(_QWORD))type metadata accessor for WidgetQuote);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_1ABCFC3BC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for WidgetQuote);
}

uint64_t sub_1ABE56220@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetQuote.init(from:)(a1, a2);
}

uint64_t sub_1ABE56234(_QWORD *a1)
{
  return WidgetQuote.encode(to:)(a1);
}

uint64_t _s10StocksCore11WidgetQuoteV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v4 = sub_1ABF30760();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCFF7EC();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD226F0();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v33 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v33 - v19;
  v21 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v21 = 1;
    if ((v21 & 1) != 0)
      return 0;
  }
  v22 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
      v22 = 1;
    if ((v22 & 1) != 0)
      return 0;
  }
  v23 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
      v23 = 1;
    if ((v23 & 1) != 0)
      return 0;
  }
  v24 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a2 + 56);
  if (!v24)
  {
    if (v25)
      return 0;
    goto LABEL_26;
  }
  if (!v25)
    return 0;
  if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && v24 == v25
    || (v26 = sub_1ABF3223C(), result = 0, (v26 & 1) != 0))
  {
LABEL_26:
    sub_1ABCFF664(*(_BYTE *)(a1 + 64));
    if ((v28 & 1) != 0)
    {
      v34 = type metadata accessor for WidgetQuote();
      sub_1ABCFC790(a1 + *(int *)(v34 + 36), (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      sub_1ABCFC790(a2 + *(int *)(v34 + 36), (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      v29 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_1ABCFC790((uint64_t)v20, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      sub_1ABCFC790((uint64_t)v18, v29, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v30((uint64_t)v11, 1, v4) == 1)
      {
        sub_1ABCFC3BC((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        sub_1ABCFC3BC((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        if (v30(v29, 1, v4) == 1)
        {
          sub_1ABCFC3BC((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          return 1;
        }
        goto LABEL_32;
      }
      sub_1ABCFC790((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      if (v30(v29, 1, v4) == 1)
      {
        sub_1ABCFC3BC((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        sub_1ABCFC3BC((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
LABEL_32:
        sub_1ABCFC3BC((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1ABCFF7EC);
        return 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v29, v4);
      sub_1ABCFE26C(&qword_1ED34CCB8, MEMORY[0x1E0CB08B8]);
      v31 = sub_1ABF31720();
      v32 = *(void (**)(char *, uint64_t))(v5 + 8);
      v32(v7, v4);
      sub_1ABCFC3BC((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      sub_1ABCFC3BC((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      v32(v15, v4);
      sub_1ABCFC3BC((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      if ((v31 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1ABE5660C()
{
  unint64_t result;

  result = qword_1EEC43F30;
  if (!qword_1EEC43F30)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44A44, &type metadata for WidgetQuote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F30);
  }
  return result;
}

void sub_1ABE56650(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE5660C();
    v7 = a3(a1, &type metadata for WidgetQuote.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for WidgetQuote(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1ABF2FF68();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v5 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v5;
    v6 = *(int *)(a3 + 36);
    v7 = (char *)a2 + v6;
    v8 = (void *)(a1 + v6);
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    v9 = sub_1ABF30760();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    sub_1ABF2FF5C();
    if (v11(v7, 1, v9))
    {
      sub_1ABD226F0();
      memcpy(v8, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v8, v7, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for WidgetQuote(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1ABF30760();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for WidgetQuote(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(int *)(a3 + 36);
  v6 = (const void *)(a2 + v5);
  v7 = (void *)(a1 + v5);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = sub_1ABF30760();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  sub_1ABF2FF5C();
  if (v10(v6, 1, v8))
  {
    sub_1ABD226F0();
    memcpy(v7, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v7, v6, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for WidgetQuote(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  v9 = *(int *)(a3 + 36);
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = sub_1ABF30760();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1ABD226F0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for WidgetQuote(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  const void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v4 = *(int *)(a3 + 36);
  v5 = (const void *)(a2 + v4);
  v6 = (void *)(a1 + v4);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = sub_1ABF30760();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
  {
    sub_1ABD226F0();
    memcpy(v6, v5, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v6, v5, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for WidgetQuote(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(int *)(a3 + 36);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1ABF30760();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1ABD226F0();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetQuote()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABE56CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    sub_1ABD226F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetQuote()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABE56D8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 56) = a2;
  }
  else
  {
    sub_1ABD226F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetQuote.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1ABE56E4C + 4 * byte_1ABF4488B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1ABE56E80 + 4 * byte_1ABF44886[v4]))();
}

uint64_t sub_1ABE56E80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE56E88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE56E90);
  return result;
}

uint64_t sub_1ABE56E9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE56EA4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1ABE56EA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE56EB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetQuote.CodingKeys()
{
  return &type metadata for WidgetQuote.CodingKeys;
}

unint64_t sub_1ABE56ED0()
{
  unint64_t result;

  result = qword_1EEC43F40;
  if (!qword_1EEC43F40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44A1C, &type metadata for WidgetQuote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F40);
  }
  return result;
}

unint64_t sub_1ABE56F18()
{
  unint64_t result;

  result = qword_1EEC43F48;
  if (!qword_1EEC43F48)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4498C, &type metadata for WidgetQuote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F48);
  }
  return result;
}

unint64_t sub_1ABE56F60()
{
  unint64_t result;

  result = qword_1EEC43F50;
  if (!qword_1EEC43F50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF449B4, &type metadata for WidgetQuote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F50);
  }
  return result;
}

uint64_t sub_1ABE56FA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6563697270 && a2 == 0xE500000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF53CC0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xEE00737574617453 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001ABF53C60)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1ABE57264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1ABE57270(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE572A4 + 4 * byte_1ABF44AC0[a1]))(0x73756C507377656ELL, 0xE800000000000000);
}

uint64_t sub_1ABE572A4()
{
  return 0x6F69647561;
}

unint64_t sub_1ABE572B8()
{
  return 0xD000000000000016;
}

uint64_t sub_1ABE57320()
{
  unsigned __int8 *v0;

  return sub_1ABE57270(*v0);
}

uint64_t sub_1ABE57328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE5AAD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE5734C()
{
  sub_1ABE59374();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE57374()
{
  sub_1ABE59374();
  return sub_1ABF32398();
}

uint64_t FlexiblePaywall.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  sub_1ABCF4DA8(0, &qword_1ED34FF10, (uint64_t (*)(void))sub_1ABE59374, (uint64_t)&type metadata for FlexiblePaywall.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v22 - v6;
  v38 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v8 = *((_QWORD *)v1 + 3);
  v10 = *((_QWORD *)v1 + 4);
  v36 = *((_QWORD *)v1 + 5);
  v37 = v10;
  v11 = *((_QWORD *)v1 + 6);
  v34 = *((_QWORD *)v1 + 7);
  v35 = v11;
  v12 = *((_QWORD *)v1 + 8);
  v32 = *((_QWORD *)v1 + 9);
  v33 = v12;
  v13 = *((_QWORD *)v1 + 10);
  v30 = *((_QWORD *)v1 + 11);
  v31 = v13;
  v14 = *((_QWORD *)v1 + 13);
  *(_QWORD *)&v27 = *((_QWORD *)v1 + 12);
  *((_QWORD *)&v27 + 1) = v14;
  v15 = *((_QWORD *)v1 + 15);
  v28 = *((_QWORD *)v1 + 14);
  v29 = v15;
  v24 = v1[8];
  v16 = *((_QWORD *)v1 + 18);
  v25 = *((_QWORD *)v1 + 19);
  v26 = v16;
  v23 = *((_QWORD *)v1 + 20);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE59374();
  sub_1ABF32368();
  v40 = v38;
  v41 = v9;
  v42 = v8;
  v43 = 0;
  sub_1ABE593B8();
  v17 = v39;
  sub_1ABF3217C();
  if (!v17)
  {
    v18 = v31;
    v19 = v32;
    *(_QWORD *)&v40 = v37;
    *((_QWORD *)&v40 + 1) = v36;
    v20 = v33;
    v41 = v35;
    v42 = v34;
    v43 = 1;
    sub_1ABF3217C();
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v19;
    v41 = v18;
    v42 = v30;
    v43 = 2;
    sub_1ABF3217C();
    v40 = v27;
    v41 = v28;
    v42 = v29;
    v43 = 3;
    sub_1ABF3217C();
    v40 = v24;
    v41 = v26;
    v42 = v25;
    v43 = 4;
    sub_1ABF3217C();
    *(_QWORD *)&v40 = v23;
    v43 = 5;
    sub_1ABE593FC();
    sub_1ABE594A4(&qword_1ED34FB50, (uint64_t (*)(void))sub_1ABD10814, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1ABF3217C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t *FlexiblePaywall.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  unsigned __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;

  v71 = a2;
  sub_1ABCF4DA8(0, &qword_1ED34FE50, (uint64_t (*)(void))sub_1ABE59374, (uint64_t)&type metadata for FlexiblePaywall.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v72 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v51 - v6;
  v8 = a1[3];
  v73 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ABE59374();
  v9 = v7;
  sub_1ABF3235C();
  if (v2)
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  v70 = v5;
  LOBYTE(v74) = 0;
  v10 = sub_1ABE59460();
  v11 = v72;
  v12 = v9;
  sub_1ABF320C8();
  v13 = v86;
  v14 = v10;
  v16 = v87;
  v15 = v88;
  LOBYTE(v74) = 1;
  v17 = v85;
  sub_1ABDC23D0(v85);
  v69 = v14;
  sub_1ABF320C8();
  *((_QWORD *)&v65 + 1) = v15;
  v66 = v17;
  v68 = v13;
  *(_QWORD *)&v65 = v16;
  v19 = v85;
  v18 = v86;
  v21 = v87;
  v20 = v88;
  LOBYTE(v74) = 2;
  sub_1ABDC23D0(v85);
  sub_1ABF320C8();
  v67 = v18;
  v57 = v20;
  v58 = v21;
  v56 = v19;
  v22 = v85;
  v23 = v86;
  v24 = v87;
  v25 = v88;
  LOBYTE(v74) = 3;
  sub_1ABDC23D0(v85);
  v55 = 0;
  sub_1ABF320C8();
  v61 = v24;
  v62 = v25;
  v59 = v22;
  v60 = v23;
  v27 = v85;
  v26 = v86;
  v29 = v87;
  v28 = v88;
  LOBYTE(v74) = 4;
  sub_1ABDC23D0(v85);
  sub_1ABF320C8();
  *(_QWORD *)&v53 = v29;
  *((_QWORD *)&v53 + 1) = v28;
  v52 = v26;
  v54 = v27;
  v31 = v85;
  v30 = v86;
  v33 = v87;
  v32 = v88;
  sub_1ABE593FC();
  v104 = 5;
  *(_QWORD *)&v64 = v31;
  *((_QWORD *)&v64 + 1) = v30;
  v69 = v33;
  sub_1ABDC23D0(v31);
  sub_1ABE594A4((unint64_t *)&unk_1ED34FB58, (uint64_t (*)(void))sub_1ABDCF100, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  sub_1ABF320C8();
  v35 = v60;
  v34 = v61;
  v36 = v59;
  v63 = v32;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v12, v11);
  v72 = v105;
  *(_QWORD *)&v74 = v66;
  *((_QWORD *)&v74 + 1) = v68;
  v75 = v65;
  *(_QWORD *)&v76 = v56;
  *((_QWORD *)&v76 + 1) = v67;
  *(_QWORD *)&v77 = v58;
  *((_QWORD *)&v77 + 1) = v57;
  *(_QWORD *)&v78 = v36;
  *((_QWORD *)&v78 + 1) = v35;
  v79 = __PAIR128__(v62, v34);
  *(_QWORD *)&v80 = v54;
  *((_QWORD *)&v80 + 1) = v52;
  v81 = v53;
  v37 = v64;
  v82 = v64;
  *(_QWORD *)&v83 = v69;
  *((_QWORD *)&v83 + 1) = v32;
  v84 = v105;
  sub_1ABDD07A0((uint64_t *)&v74);
  sub_1ABD7E1E0(v37);
  sub_1ABD7E1E0(v54);
  sub_1ABD7E1E0(v59);
  v38 = v56;
  v39 = v57;
  sub_1ABD7E1E0(v56);
  v41 = *((_QWORD *)&v65 + 1);
  v40 = v66;
  v42 = v68;
  v43 = v65;
  sub_1ABD7E1E0(v66);
  v44 = v83;
  v45 = v71;
  *(_OWORD *)(v71 + 128) = v82;
  *(_OWORD *)(v45 + 144) = v44;
  *(_QWORD *)(v45 + 160) = v84;
  v46 = v79;
  *(_OWORD *)(v45 + 64) = v78;
  *(_OWORD *)(v45 + 80) = v46;
  v47 = v81;
  *(_OWORD *)(v45 + 96) = v80;
  *(_OWORD *)(v45 + 112) = v47;
  v48 = v75;
  *(_OWORD *)v45 = v74;
  *(_OWORD *)(v45 + 16) = v48;
  v49 = v77;
  *(_OWORD *)(v45 + 32) = v76;
  *(_OWORD *)(v45 + 48) = v49;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  v85 = v40;
  v86 = v42;
  v87 = v43;
  v88 = v41;
  v89 = v38;
  v90 = v67;
  v91 = v58;
  v92 = v39;
  v93 = v59;
  v94 = v60;
  v95 = v61;
  v96 = v62;
  v97 = v54;
  v98 = v52;
  v99 = v53;
  v100 = v64;
  v101 = v69;
  v102 = v63;
  v103 = v72;
  return sub_1ABDD0888(&v85);
}

uint64_t *sub_1ABE57EA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FlexiblePaywall.init(from:)(a1, a2);
}

uint64_t sub_1ABE57EBC(_QWORD *a1)
{
  return FlexiblePaywall.encode(to:)(a1);
}

uint64_t sub_1ABE57ED8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE57F10 + 4 * byte_1ABF44AC6[*v0]))(0x53656C6369747261, 0xEB0000000074666FLL);
}

uint64_t sub_1ABE57F10()
{
  return 0x48656C6369747261;
}

unint64_t sub_1ABE57F30()
{
  return 0xD000000000000011;
}

uint64_t sub_1ABE57F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE5AD38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE57F7C()
{
  sub_1ABE59514();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE57FA4()
{
  sub_1ABE59514();
  return sub_1ABF32398();
}

uint64_t sub_1ABE57FCC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  sub_1ABCF4DA8(0, &qword_1ED34FFA0, (uint64_t (*)(void))sub_1ABE59514, (uint64_t)&type metadata for FlexiblePaywallResourceByLocationConfig.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - v6;
  v9 = *v1;
  v8 = v1[1];
  v16 = v1[2];
  v17 = v8;
  v15 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE59514();
  sub_1ABF32368();
  v20 = v9;
  v19 = 0;
  sub_1ABE59558();
  sub_1ABE595F0(&qword_1ED34FC18, (uint64_t (*)(void))sub_1ABE595AC, MEMORY[0x1E0DEAF10]);
  v10 = v18;
  sub_1ABF3217C();
  if (!v10)
  {
    v11 = v15;
    v12 = v16;
    v20 = v17;
    v19 = 1;
    sub_1ABF3217C();
    v20 = v12;
    v19 = 2;
    sub_1ABF3217C();
    v20 = v11;
    v19 = 3;
    sub_1ABF3217C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABE581C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  sub_1ABCF4DA8(0, &qword_1ED34FEE8, (uint64_t (*)(void))sub_1ABE59514, (uint64_t)&type metadata for FlexiblePaywallResourceByLocationConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v24 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE59514();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v23 = a2;
  sub_1ABE59558();
  v25 = 0;
  sub_1ABE595F0(&qword_1ED34FC20, (uint64_t (*)(void))sub_1ABE59654, MEMORY[0x1E0DEAF40]);
  v10 = v24;
  sub_1ABF320C8();
  v11 = v26;
  v25 = 1;
  sub_1ABF2FF5C();
  sub_1ABF320C8();
  v22 = v11;
  v12 = v26;
  v25 = 2;
  sub_1ABF2FF5C();
  v21 = 0;
  sub_1ABF320C8();
  v25 = 3;
  v19 = v26;
  v20 = v12;
  sub_1ABF2FF5C();
  sub_1ABF320C8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  v14 = v26;
  sub_1ABF2FF5C();
  v15 = v23;
  v17 = v19;
  v16 = v20;
  *v23 = v22;
  v15[1] = v16;
  v15[2] = v17;
  v15[3] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE5850C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABE581C8(a1, a2);
}

uint64_t sub_1ABE58520(_QWORD *a1)
{
  return sub_1ABE57FCC(a1);
}

uint64_t sub_1ABE5853C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE58570 + 4 * byte_1ABF44ACA[*v0]))(0x656372756F736572, 0xEA00000000006449);
}

uint64_t sub_1ABE58570()
{
  return 0x567377654E6E696DLL;
}

uint64_t sub_1ABE585A0()
{
  return 0x7250646C756F6873;
}

uint64_t sub_1ABE585C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE5AF14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE585E8()
{
  sub_1ABE597E0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE58610()
{
  sub_1ABE597E0();
  return sub_1ABF32398();
}

uint64_t sub_1ABE58638(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[6];
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;

  sub_1ABCF4DA8(0, &qword_1ED34FF48, (uint64_t (*)(void))sub_1ABE597E0, (uint64_t)&type metadata for FlexiblePaywallResource.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v15 - v5;
  v7 = *(_QWORD *)(v1 + 16);
  v15[3] = *(_QWORD *)(v1 + 24);
  v15[4] = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v15[1] = *(_QWORD *)(v1 + 40);
  v15[2] = v8;
  v16 = *(unsigned __int8 *)(v1 + 48);
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1ABE597E0();
  sub_1ABF32368();
  v20 = 0;
  v13 = v15[5];
  sub_1ABF32194();
  if (!v13)
  {
    v19 = 1;
    sub_1ABF32140();
    v18 = 2;
    sub_1ABF32140();
    v17 = 3;
    sub_1ABF3214C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
}

uint64_t sub_1ABE587F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v27 = a2;
  sub_1ABCF4DA8(0, &qword_1ED34FE90, (uint64_t (*)(void))sub_1ABE597E0, (uint64_t)&type metadata for FlexiblePaywallResource.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE597E0();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v31 = 0;
  v10 = v5;
  v11 = sub_1ABF320E0();
  v13 = v12;
  v30 = 1;
  sub_1ABF2FF5C();
  v14 = sub_1ABF3208C();
  v26 = v15;
  v25 = v14;
  v29 = 2;
  sub_1ABF2FF5C();
  v23 = sub_1ABF3208C();
  v24 = v16;
  v28 = 3;
  sub_1ABF2FF5C();
  v18 = sub_1ABF32098();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  v20 = v26;
  v19 = v27;
  *v27 = v11;
  v19[1] = v13;
  v21 = v24;
  v19[2] = v25;
  v19[3] = v20;
  v19[4] = v23;
  v19[5] = v21;
  *((_BYTE *)v19 + 48) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE58AAC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABE587F0(a1, a2);
}

uint64_t sub_1ABE58AC0(_QWORD *a1)
{
  return sub_1ABE58638(a1);
}

uint64_t sub_1ABE58AD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = *a2;
  v10 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  if (v4)
  {
    if (!v8 || (sub_1ABDE0C8C(v4, v8) & 1) == 0)
      return 0;
  }
  else if (v8)
  {
    return 0;
  }
  if (v6)
  {
    if (!v10 || (sub_1ABDE0C8C(v6, v10) & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  if (v5)
  {
    if (!v9 || (sub_1ABDE0C8C(v5, v9) & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  if (v7)
  {
    if (v11 && (sub_1ABDE0C8C(v7, v11) & 1) != 0)
      return 1;
  }
  else if (!v11)
  {
    return 1;
  }
  return 0;
}

BOOL _s10StocksCore15FlexiblePaywallV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v116 = a1[5];
  v117 = a1[6];
  v118 = a1[7];
  v108 = a1[9];
  v109 = a1[10];
  v7 = a1[12];
  v110 = a1[11];
  v111 = a1[8];
  v8 = a1[13];
  v9 = a1[14];
  v10 = a1[15];
  v11 = a1[16];
  v13 = a1[17];
  v12 = a1[18];
  v15 = a1[19];
  v14 = a1[20];
  v16 = *a2;
  v17 = a2[1];
  v18 = a2[2];
  v19 = a2[3];
  v20 = a2[4];
  v112 = a2[5];
  v113 = a2[6];
  v114 = a2[7];
  v107 = a2[8];
  v104 = a2[9];
  v105 = a2[10];
  v21 = a2[12];
  v106 = a2[11];
  v23 = a2[13];
  v22 = a2[14];
  v24 = a2[15];
  v25 = a2[16];
  v27 = a2[17];
  v26 = a2[18];
  v29 = a2[19];
  v28 = a2[20];
  if (v3 == 1)
  {
    if (v16 == 1)
      goto LABEL_8;
LABEL_6:
    sub_1ABDC23D0(v16);
    sub_1ABD7E1E0(v3);
    v30 = v16;
LABEL_29:
    sub_1ABD7E1E0(v30);
    return 0;
  }
  v125 = v3;
  v126 = v2;
  v127 = v5;
  v128 = v4;
  if (v16 == 1)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    goto LABEL_6;
  }
  v121 = v16;
  v122 = v17;
  v123 = v18;
  v124 = v19;
  v95 = v15;
  v99 = v14;
  v87 = v28;
  v91 = v12;
  v71 = v25;
  v75 = v29;
  v48 = v7;
  v50 = v21;
  v79 = v11;
  v83 = v13;
  v65 = v27;
  v68 = v26;
  v59 = v9;
  v62 = v10;
  v53 = v24;
  v56 = v8;
  v47 = v22;
  v46 = sub_1ABE58AD8(&v125, &v121);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v50;
  v24 = v53;
  v22 = v47;
  v7 = v48;
  v8 = v56;
  v9 = v59;
  v10 = v62;
  v27 = v65;
  v26 = v68;
  v25 = v71;
  v29 = v75;
  v11 = v79;
  v13 = v83;
  v28 = v87;
  v12 = v91;
  v15 = v95;
  v14 = v99;
  if ((v46 & 1) == 0)
    return 0;
LABEL_8:
  if (v6 == 1)
  {
    if (v20 == 1)
      goto LABEL_15;
    goto LABEL_13;
  }
  v125 = v6;
  v126 = v116;
  v127 = v117;
  v128 = v118;
  if (v20 == 1)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
LABEL_13:
    sub_1ABDC23D0(v20);
    sub_1ABD7E1E0(v6);
    v30 = v20;
    goto LABEL_29;
  }
  v121 = v20;
  v122 = v112;
  v123 = v113;
  v124 = v114;
  v96 = v15;
  v100 = v14;
  v88 = v28;
  v92 = v12;
  v72 = v25;
  v76 = v29;
  v49 = v7;
  v51 = v21;
  v80 = v11;
  v84 = v13;
  v66 = v27;
  v69 = v26;
  v60 = v9;
  v63 = v10;
  v54 = v24;
  v57 = v8;
  v31 = v22;
  v115 = sub_1ABE58AD8(&v125, &v121);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v51;
  v24 = v54;
  v22 = v31;
  v7 = v49;
  v8 = v57;
  v9 = v60;
  v10 = v63;
  v27 = v66;
  v26 = v69;
  v25 = v72;
  v29 = v76;
  v11 = v80;
  v13 = v84;
  v28 = v88;
  v12 = v92;
  v15 = v96;
  v14 = v100;
  if ((v115 & 1) == 0)
    return 0;
LABEL_15:
  v32 = v111;
  if (v111 == 1)
  {
    v33 = v107;
    if (v107 == 1)
      goto LABEL_22;
LABEL_20:
    v21 = v33;
LABEL_28:
    sub_1ABDC23D0(v21);
    sub_1ABD7E1E0(v32);
    v30 = v33;
    goto LABEL_29;
  }
  v125 = v111;
  v126 = v108;
  v127 = v109;
  v128 = v110;
  v33 = v107;
  if (v107 == 1)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    goto LABEL_20;
  }
  v121 = v107;
  v122 = v104;
  v123 = v105;
  v124 = v106;
  v97 = v15;
  v101 = v14;
  v89 = v28;
  v93 = v12;
  v73 = v25;
  v77 = v29;
  v52 = v21;
  v55 = v24;
  v81 = v11;
  v85 = v13;
  v67 = v27;
  v70 = v26;
  v61 = v9;
  v64 = v10;
  v58 = v8;
  v34 = v7;
  v35 = v22;
  v119 = sub_1ABE58AD8(&v125, &v121);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v52;
  v24 = v55;
  v22 = v35;
  v7 = v34;
  v8 = v58;
  v9 = v61;
  v10 = v64;
  v27 = v67;
  v26 = v70;
  v25 = v73;
  v29 = v77;
  v11 = v81;
  v13 = v85;
  v28 = v89;
  v12 = v93;
  v15 = v97;
  v14 = v101;
  if ((v119 & 1) == 0)
    return 0;
LABEL_22:
  if (v7 == 1)
  {
    v32 = 1;
    if (v21 == 1)
      goto LABEL_32;
    goto LABEL_27;
  }
  v125 = v7;
  v126 = v8;
  v127 = v9;
  v128 = v10;
  if (v21 == 1)
  {
    v32 = v7;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v21 = 1;
LABEL_27:
    v33 = v21;
    goto LABEL_28;
  }
  v121 = v21;
  v122 = v23;
  v123 = v22;
  v124 = v24;
  v98 = v15;
  v102 = v14;
  v90 = v28;
  v94 = v12;
  v74 = v25;
  v78 = v29;
  v82 = v11;
  v86 = v13;
  v37 = v26;
  v38 = v27;
  v120 = sub_1ABE58AD8(&v125, &v121);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = v74;
  v29 = v78;
  v27 = v38;
  v26 = v37;
  v11 = v82;
  v13 = v86;
  v28 = v90;
  v12 = v94;
  v15 = v98;
  v14 = v102;
  if ((v120 & 1) == 0)
    return 0;
LABEL_32:
  if (v11 == 1)
  {
    v39 = 1;
    if (v25 == 1)
      goto LABEL_39;
    goto LABEL_37;
  }
  v125 = v11;
  v126 = v13;
  v127 = v12;
  v128 = v15;
  if (v25 == 1)
  {
    v39 = v11;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v25 = 1;
LABEL_37:
    v40 = v25;
    sub_1ABDC23D0(v25);
    sub_1ABD7E1E0(v39);
    v30 = v40;
    goto LABEL_29;
  }
  v121 = v25;
  v122 = v27;
  v123 = v26;
  v124 = v29;
  v103 = v14;
  v41 = v28;
  v42 = sub_1ABE58AD8(&v125, &v121);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = v41;
  v14 = v103;
  if ((v42 & 1) == 0)
    return 0;
LABEL_39:
  if (v14)
  {
    if (v28)
    {
      v43 = v28;
      sub_1ABF2FF5C();
      v44 = sub_1ABF2FF5C();
      v45 = sub_1ABE5D74C(v44, v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v45 & 1) != 0)
        return 1;
    }
    return 0;
  }
  return !v28;
}

unint64_t sub_1ABE59374()
{
  unint64_t result;

  result = qword_1ED34EDB0;
  if (!qword_1ED34EDB0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44F8C, &type metadata for FlexiblePaywall.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EDB0);
  }
  return result;
}

unint64_t sub_1ABE593B8()
{
  unint64_t result;

  result = qword_1ED34F8A8;
  if (!qword_1ED34F8A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44B84, &type metadata for FlexiblePaywallResourceByLocationConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34F8A8);
  }
  return result;
}

void sub_1ABE593FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FB48)
  {
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FB48);
  }
}

unint64_t sub_1ABE59460()
{
  unint64_t result;

  result = qword_1ED34F8B0;
  if (!qword_1ED34F8B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44B5C, &type metadata for FlexiblePaywallResourceByLocationConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34F8B0);
  }
  return result;
}

uint64_t sub_1ABE594A4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  result = *a1;
  if (!result)
  {
    sub_1ABE593FC();
    v10 = v9;
    v11[0] = a3;
    v11[1] = a2();
    result = MEMORY[0x1AF438F30](a4, v10, v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABE59514()
{
  unint64_t result;

  result = qword_1ED34F890;
  if (!qword_1ED34F890)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44F3C, &type metadata for FlexiblePaywallResourceByLocationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F890);
  }
  return result;
}

void sub_1ABE59558()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FC10)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FC10);
  }
}

unint64_t sub_1ABE595AC()
{
  unint64_t result;

  result = qword_1ED34F4A8;
  if (!qword_1ED34F4A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44BFC, &type metadata for FlexiblePaywallResource);
    atomic_store(result, (unint64_t *)&qword_1ED34F4A8);
  }
  return result;
}

uint64_t sub_1ABE595F0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABE59558();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABE59654()
{
  unint64_t result;

  result = qword_1ED34F4B0;
  if (!qword_1ED34F4B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44BD4, &type metadata for FlexiblePaywallResource);
    atomic_store(result, (unint64_t *)&qword_1ED34F4B0);
  }
  return result;
}

uint64_t sub_1ABE59698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1ABF3223C(), result = 0, (v12 & 1) != 0))
  {
    if (v4)
    {
      if (!v7)
        return 0;
      if (v2 != v8 || v4 != v7)
      {
        v14 = sub_1ABF3223C();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v5)
    {
      if (v9)
      {
        if (v3 != v10 || v5 != v9)
        {
          v15 = sub_1ABF3223C();
          result = 0;
          if ((v15 & 1) == 0)
            return result;
        }
LABEL_18:
        if (v6 == 2)
        {
          if (v11 != 2)
            return 0;
        }
        else if (v11 == 2 || ((((v6 & 1) == 0) ^ v11) & 1) == 0)
        {
          return 0;
        }
        return 1;
      }
    }
    else if (!v9)
    {
      goto LABEL_18;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1ABE597E0()
{
  unint64_t result;

  result = qword_1ED34F490;
  if (!qword_1ED34F490)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44EEC, &type metadata for FlexiblePaywallResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F490);
  }
  return result;
}

uint64_t destroy for FlexiblePaywall(_QWORD *a1)
{
  if (*a1 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[4] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[8] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[12] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[16] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FlexiblePaywall(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (*(_QWORD *)a2 == 1)
  {
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 8);
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    v7 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  v8 = *(_QWORD *)(a2 + 32);
  if (v8 == 1)
  {
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  else
  {
    v10 = *(_QWORD *)(a2 + 40);
    v11 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v10;
    v12 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  v13 = *(_QWORD *)(a2 + 64);
  if (v13 == 1)
  {
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
  }
  else
  {
    v15 = *(_QWORD *)(a2 + 72);
    v16 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v15;
    v17 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v16;
    *(_QWORD *)(a1 + 88) = v17;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  v18 = *(_QWORD *)(a2 + 96);
  if (v18 == 1)
  {
    v19 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v19;
  }
  else
  {
    v20 = *(_QWORD *)(a2 + 104);
    v21 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 96) = v18;
    *(_QWORD *)(a1 + 104) = v20;
    v22 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = v21;
    *(_QWORD *)(a1 + 120) = v22;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  v23 = *(_QWORD *)(a2 + 128);
  if (v23 == 1)
  {
    v24 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v24;
  }
  else
  {
    v25 = *(_QWORD *)(a2 + 136);
    v26 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 128) = v23;
    *(_QWORD *)(a1 + 136) = v25;
    v27 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = v26;
    *(_QWORD *)(a1 + 152) = v27;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for FlexiblePaywall(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  _OWORD *v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  _OWORD *v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;

  v4 = *(_QWORD *)a1;
  v5 = *a2;
  if (v4 == 1)
  {
    if (v5 == 1)
    {
      v6 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
    }
    else
    {
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = a2[3];
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
  }
  else if (v5 == 1)
  {
    sub_1ABDD0054(a1);
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    *(_QWORD *)a1 = v5;
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 8) = a2[1];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = a2[2];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = a2[3];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
  }
  v8 = (_OWORD *)(a1 + 32);
  v10 = a2 + 4;
  v9 = a2[4];
  if (*(_QWORD *)(a1 + 32) == 1)
  {
    if (v9 == 1)
    {
      v11 = *((_OWORD *)a2 + 3);
      *v8 = *v10;
      *(_OWORD *)(a1 + 48) = v11;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = a2[7];
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
  }
  else if (v9 == 1)
  {
    sub_1ABDD0054(a1 + 32);
    v12 = *((_OWORD *)a2 + 3);
    *v8 = *v10;
    *(_OWORD *)(a1 + 48) = v12;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v9;
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 40) = a2[5];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = a2[6];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = a2[7];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
  }
  v13 = (_OWORD *)(a1 + 64);
  v15 = a2 + 8;
  v14 = a2[8];
  if (*(_QWORD *)(a1 + 64) == 1)
  {
    if (v14 == 1)
    {
      v16 = *((_OWORD *)a2 + 5);
      *v13 = *v15;
      *(_OWORD *)(a1 + 80) = v16;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = v14;
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_QWORD *)(a1 + 80) = a2[10];
      *(_QWORD *)(a1 + 88) = a2[11];
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
  }
  else if (v14 == 1)
  {
    sub_1ABDD0054(a1 + 64);
    v17 = *((_OWORD *)a2 + 5);
    *v13 = *v15;
    *(_OWORD *)(a1 + 80) = v17;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = v14;
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = a2[9];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = a2[10];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = a2[11];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
  }
  v18 = (_OWORD *)(a1 + 96);
  v20 = a2 + 12;
  v19 = a2[12];
  if (*(_QWORD *)(a1 + 96) == 1)
  {
    if (v19 == 1)
    {
      v21 = *((_OWORD *)a2 + 7);
      *v18 = *v20;
      *(_OWORD *)(a1 + 112) = v21;
    }
    else
    {
      *(_QWORD *)(a1 + 96) = v19;
      *(_QWORD *)(a1 + 104) = a2[13];
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = a2[15];
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
  }
  else if (v19 == 1)
  {
    sub_1ABDD0054(a1 + 96);
    v22 = *((_OWORD *)a2 + 7);
    *v18 = *v20;
    *(_OWORD *)(a1 + 112) = v22;
  }
  else
  {
    *(_QWORD *)(a1 + 96) = v19;
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 104) = a2[13];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = a2[14];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 120) = a2[15];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
  }
  v23 = (_OWORD *)(a1 + 128);
  v25 = a2 + 16;
  v24 = a2[16];
  if (*(_QWORD *)(a1 + 128) == 1)
  {
    if (v24 == 1)
    {
      v26 = *((_OWORD *)a2 + 9);
      *v23 = *v25;
      *(_OWORD *)(a1 + 144) = v26;
    }
    else
    {
      *(_QWORD *)(a1 + 128) = v24;
      *(_QWORD *)(a1 + 136) = a2[17];
      *(_QWORD *)(a1 + 144) = a2[18];
      *(_QWORD *)(a1 + 152) = a2[19];
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
  }
  else if (v24 == 1)
  {
    sub_1ABDD0054(a1 + 128);
    v27 = *((_OWORD *)a2 + 9);
    *v23 = *v25;
    *(_OWORD *)(a1 + 144) = v27;
  }
  else
  {
    *(_QWORD *)(a1 + 128) = v24;
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 136) = a2[17];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 144) = a2[18];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 152) = a2[19];
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 160) = a2[20];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for FlexiblePaywall(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;

  if (*(_QWORD *)a1 == 1)
    goto LABEL_4;
  if (*(_QWORD *)a2 == 1)
  {
    sub_1ABDD0054(a1);
LABEL_4:
    v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
LABEL_6:
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) == 1)
  {
LABEL_9:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    goto LABEL_11;
  }
  if (v5 == 1)
  {
    sub_1ABDD0054(a1 + 32);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
LABEL_11:
  v7 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) == 1)
  {
LABEL_14:
    v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    goto LABEL_16;
  }
  if (v7 == 1)
  {
    sub_1ABDD0054(a1 + 64);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
LABEL_16:
  v9 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) == 1)
  {
LABEL_19:
    v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    goto LABEL_21;
  }
  if (v9 == 1)
  {
    sub_1ABDD0054(a1 + 96);
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
LABEL_21:
  v11 = *(_QWORD *)(a2 + 128);
  if (*(_QWORD *)(a1 + 128) != 1)
  {
    if (v11 != 1)
    {
      *(_QWORD *)(a1 + 128) = v11;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1ABDD0054(a1 + 128);
  }
  v12 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v12;
LABEL_26:
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for FlexiblePaywall(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 168) = 0;
    if (a2)
      *(_QWORD *)(result + 160) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexiblePaywall()
{
  return &type metadata for FlexiblePaywall;
}

uint64_t destroy for FlexiblePaywallResourceByLocationConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FlexiblePaywallResourceByLocationConfig(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for FlexiblePaywallResourceByLocationConfig(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FlexiblePaywallResourceByLocationConfig(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FlexiblePaywallResourceByLocationConfig(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FlexiblePaywallResourceByLocationConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexiblePaywallResourceByLocationConfig()
{
  return &type metadata for FlexiblePaywallResourceByLocationConfig;
}

uint64_t initializeWithCopy for FlexiblePaywallResource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for FlexiblePaywallResource(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FlexiblePaywallResource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlexiblePaywallResource(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlexiblePaywallResource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FlexiblePaywallResource()
{
  return &type metadata for FlexiblePaywallResource;
}

ValueMetadata *type metadata accessor for FlexiblePaywallResource.CodingKeys()
{
  return &type metadata for FlexiblePaywallResource.CodingKeys;
}

uint64_t _s10StocksCore23FlexiblePaywallResourceV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABE5A704 + 4 * byte_1ABF44AD3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABE5A738 + 4 * byte_1ABF44ACE[v4]))();
}

uint64_t sub_1ABE5A738(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE5A740(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE5A748);
  return result;
}

uint64_t sub_1ABE5A754(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE5A75CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABE5A760(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE5A768(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlexiblePaywallResourceByLocationConfig.CodingKeys()
{
  return &type metadata for FlexiblePaywallResourceByLocationConfig.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FlexiblePaywall.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1ABE5A7D0 + 4 * byte_1ABF44ADD[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1ABE5A804 + 4 * byte_1ABF44AD8[v4]))();
}

uint64_t sub_1ABE5A804(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE5A80C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE5A814);
  return result;
}

uint64_t sub_1ABE5A820(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE5A828);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1ABE5A82C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE5A834(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlexiblePaywall.CodingKeys()
{
  return &type metadata for FlexiblePaywall.CodingKeys;
}

unint64_t sub_1ABE5A854()
{
  unint64_t result;

  result = qword_1EEC43F58;
  if (!qword_1EEC43F58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44D54, &type metadata for FlexiblePaywall.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F58);
  }
  return result;
}

unint64_t sub_1ABE5A89C()
{
  unint64_t result;

  result = qword_1EEC43F60;
  if (!qword_1EEC43F60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44E0C, &type metadata for FlexiblePaywallResourceByLocationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F60);
  }
  return result;
}

unint64_t sub_1ABE5A8E4()
{
  unint64_t result;

  result = qword_1EEC43F68;
  if (!qword_1EEC43F68)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44EC4, &type metadata for FlexiblePaywallResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F68);
  }
  return result;
}

unint64_t sub_1ABE5A92C()
{
  unint64_t result;

  result = qword_1ED34F4A0;
  if (!qword_1ED34F4A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44E34, &type metadata for FlexiblePaywallResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F4A0);
  }
  return result;
}

unint64_t sub_1ABE5A974()
{
  unint64_t result;

  result = qword_1ED34F498;
  if (!qword_1ED34F498)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44E5C, &type metadata for FlexiblePaywallResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F498);
  }
  return result;
}

unint64_t sub_1ABE5A9BC()
{
  unint64_t result;

  result = qword_1ED34F8A0;
  if (!qword_1ED34F8A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44D7C, &type metadata for FlexiblePaywallResourceByLocationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F8A0);
  }
  return result;
}

unint64_t sub_1ABE5AA04()
{
  unint64_t result;

  result = qword_1ED34F898;
  if (!qword_1ED34F898)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44DA4, &type metadata for FlexiblePaywallResourceByLocationConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F898);
  }
  return result;
}

unint64_t sub_1ABE5AA4C()
{
  unint64_t result;

  result = qword_1ED34EDC0;
  if (!qword_1ED34EDC0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44CC4, &type metadata for FlexiblePaywall.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EDC0);
  }
  return result;
}

unint64_t sub_1ABE5AA94()
{
  unint64_t result;

  result = qword_1ED34EDB8;
  if (!qword_1ED34EDB8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF44CEC, &type metadata for FlexiblePaywall.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34EDB8);
  }
  return result;
}

uint64_t sub_1ABE5AAD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73756C507377656ELL && a2 == 0xE800000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69647561 && a2 == 0xE500000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ABF5EC40 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ABF5EC60 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574726143616C61 && a2 == 0xE800000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF5EC80)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1ABE5AD38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x53656C6369747261 && a2 == 0xEB0000000074666FLL;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x48656C6369747261 && a2 == 0xEB00000000647261 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ABF5ECA0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ABF5ECC0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1ABE5AF14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656372756F736572 && a2 == 0xEA00000000006449;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x567377654E6E696DLL && a2 == 0xEE006E6F69737265 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x567377654E78616DLL && a2 == 0xEE006E6F69737265 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7250646C756F6873 && a2 == 0xED00006D72617765)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t destroy for SDSCurrencyResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SDSCurrencyResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for SDSCurrencyResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SDSCurrencyResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSCurrencyResponse(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSCurrencyResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSCurrencyResponse()
{
  return &type metadata for SDSCurrencyResponse;
}

uint64_t sub_1ABE5B414(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  sub_1ABCF4DA8(0, &qword_1EEC43F90, (uint64_t (*)(void))sub_1ABE5CB0C, (uint64_t)&type metadata for SDSCurrencyResponse.CurrencyItem.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE5CB0C();
  sub_1ABF32368();
  v13 = 0;
  sub_1ABF32194();
  if (!v1)
  {
    v12 = 1;
    sub_1ABF32194();
    v11 = 2;
    sub_1ABF321AC();
    v10 = 3;
    sub_1ABF32194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABE5B594(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  uint64_t v13;
  char v14;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1EEC43F70, (uint64_t (*)(void))sub_1ABE5C660, (uint64_t)&type metadata for SDSCurrencyResponse.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE5C660();
  sub_1ABF32368();
  *(_QWORD *)&v12[0] = *(_QWORD *)v3;
  v14 = 0;
  sub_1ABE5C6A4();
  sub_1ABE5C73C(&qword_1EEC43F78, (uint64_t (*)(void))sub_1ABE5C7A0, MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  if (!v2)
  {
    LOBYTE(v12[0]) = 1;
    sub_1ABF32194();
    LOBYTE(v12[0]) = 2;
    sub_1ABF32194();
    v10 = *(_OWORD *)(v3 + 56);
    v12[0] = *(_OWORD *)(v3 + 40);
    v12[1] = v10;
    v13 = *(_QWORD *)(v3 + 72);
    v14 = 3;
    sub_1ABD46480();
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ABE5B774()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE5B7AC + 4 * byte_1ABF44FE0[*v0]))(0x79636E6572727563, 0xEC0000006D6F7246);
}

uint64_t sub_1ABE5B7B8()
{
  return 0x6563697270;
}

uint64_t sub_1ABE5B7CC()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1ABE5B7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE5BC58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE5B80C()
{
  sub_1ABE5CB0C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE5B834()
{
  sub_1ABE5CB0C();
  return sub_1ABF32398();
}

double sub_1ABE5B85C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_1ABE5BE30(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1ABE5B8A8(_QWORD *a1)
{
  return sub_1ABE5B414(a1);
}

uint64_t sub_1ABE5B8BC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return sub_1ABE5BAD8((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1ABE5B914()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE5B950 + 4 * byte_1ABF44FE4[*v0]))(0x79636E6572727563, 0xED0000736D657449);
}

uint64_t sub_1ABE5B950()
{
  return 0x4164657461657263;
}

uint64_t sub_1ABE5B96C()
{
  return 0x7243656372756F73;
}

uint64_t sub_1ABE5B990()
{
  return 0x646174654D736473;
}

uint64_t sub_1ABE5B9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE5C0CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE5B9D4()
{
  sub_1ABE5C660();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE5B9FC()
{
  sub_1ABE5C660();
  return sub_1ABF32398();
}

__n128 sub_1ABE5BA24@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_1ABE5C2F0(a1, v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1ABE5BA6C(_QWORD *a1)
{
  return sub_1ABE5B594(a1);
}

uint64_t sub_1ABE5BA80(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[5];
  _OWORD v9[5];

  v2 = a1[3];
  v8[2] = a1[2];
  v8[3] = v2;
  v3 = a1[4];
  v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  v5 = a2[3];
  v9[2] = a2[2];
  v9[3] = v5;
  v9[4] = a2[4];
  v6 = *a2;
  v9[1] = a2[1];
  v8[4] = v3;
  v9[0] = v6;
  return sub_1ABE5BB90((uint64_t)v8, (uint64_t)v9) & 1;
}

uint64_t sub_1ABE5BAD8(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_1ABF3223C(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v7 || (v8 = sub_1ABF3223C(), result = 0, (v8 & 1) != 0))
    {
      if (*(double *)(a1 + 32) == *(double *)(a2 + 32))
      {
        if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48))
          return 1;
        else
          return sub_1ABF3223C();
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1ABE5BB90(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  char v6;
  BOOL v7;
  char v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[2];
  uint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  if ((sub_1ABDDFF28(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0)
  {
    v4 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
    if (v4 || (v5 = sub_1ABF3223C(), v6 = 0, (v5 & 1) != 0))
    {
      v7 = *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32);
      if (v7 || (v8 = sub_1ABF3223C(), v6 = 0, (v8 & 1) != 0))
      {
        v9 = *(_OWORD *)(a1 + 56);
        v14[0] = *(_OWORD *)(a1 + 40);
        v14[1] = v9;
        v15 = *(_QWORD *)(a1 + 72);
        v10 = *(_OWORD *)(a2 + 56);
        v12[0] = *(_OWORD *)(a2 + 40);
        v12[1] = v10;
        v13 = *(_QWORD *)(a2 + 72);
        v6 = sub_1ABEBC628(v14, v12);
      }
    }
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1ABE5BC58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79636E6572727563 && a2 == 0xEC0000006D6F7246;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEA00000000006F54 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6563697270 && a2 == 0xE500000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1ABE5BE30@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  char v29;
  char v30;
  char v31;
  char v32;

  v28 = a2;
  sub_1ABCF4DA8(0, &qword_1ED34C548, (uint64_t (*)(void))sub_1ABE5CB0C, (uint64_t)&type metadata for SDSCurrencyResponse.CurrencyItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE5CB0C();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v32 = 0;
  v10 = v5;
  v11 = sub_1ABF320E0();
  v13 = v12;
  v31 = 1;
  sub_1ABF2FF5C();
  v14 = sub_1ABF320E0();
  v16 = v15;
  v26 = v14;
  v30 = 2;
  sub_1ABF2FF5C();
  v27 = v16;
  sub_1ABF320F8();
  v18 = v17;
  v29 = 3;
  v19 = sub_1ABF320E0();
  v21 = v20;
  v22 = v19;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v23 = v27;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v25 = v28;
  *v28 = v11;
  v25[1] = v13;
  v25[2] = v26;
  v25[3] = v23;
  v25[4] = v18;
  v25[5] = v22;
  v25[6] = v21;
  return result;
}

uint64_t sub_1ABE5C0CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79636E6572727563 && a2 == 0xED0000736D657449;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7243656372756F73 && a2 == 0xEF74416465746165 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646174654D736473 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1ABE5C2F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  sub_1ABCF4DA8(0, &qword_1ED34C540, (uint64_t (*)(void))sub_1ABE5C660, (uint64_t)&type metadata for SDSCurrencyResponse.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v30 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE5C660();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  sub_1ABE5C6A4();
  v36 = 0;
  sub_1ABE5C73C(&qword_1ED34C510, (uint64_t (*)(void))sub_1ABE5C6F8, MEMORY[0x1E0DEAF40]);
  sub_1ABF32110();
  v10 = v31;
  LOBYTE(v31) = 1;
  sub_1ABF2FF5C();
  v11 = sub_1ABF320E0();
  v13 = v12;
  v29 = v11;
  LOBYTE(v31) = 2;
  sub_1ABF2FF5C();
  v27 = sub_1ABF320E0();
  v36 = 3;
  v15 = v14;
  sub_1ABD4643C();
  v28 = v15;
  sub_1ABF2FF5C();
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v30);
  v16 = v32;
  v30 = v31;
  v17 = v13;
  v18 = v33;
  v19 = v34;
  v20 = v35;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v23 = v29;
  *a2 = v10;
  a2[1] = v23;
  v24 = v27;
  a2[2] = v17;
  a2[3] = v24;
  v25 = v30;
  a2[4] = v21;
  a2[5] = v25;
  a2[6] = v16;
  a2[7] = v18;
  a2[8] = v19;
  a2[9] = v20;
  return result;
}

unint64_t sub_1ABE5C660()
{
  unint64_t result;

  result = qword_1ED34C3A8;
  if (!qword_1ED34C3A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF451D4, &type metadata for SDSCurrencyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C3A8);
  }
  return result;
}

void sub_1ABE5C6A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C508)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C508);
  }
}

unint64_t sub_1ABE5C6F8()
{
  unint64_t result;

  result = qword_1ED34C3D8;
  if (!qword_1ED34C3D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF451AC, &type metadata for SDSCurrencyResponse.CurrencyItem);
    atomic_store(result, (unint64_t *)&qword_1ED34C3D8);
  }
  return result;
}

uint64_t sub_1ABE5C73C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABE5C6A4();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABE5C7A0()
{
  unint64_t result;

  result = qword_1EEC43F80;
  if (!qword_1EEC43F80)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45184, &type metadata for SDSCurrencyResponse.CurrencyItem);
    atomic_store(result, (unint64_t *)&qword_1EEC43F80);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSCurrencyResponse.CodingKeys()
{
  return &type metadata for SDSCurrencyResponse.CodingKeys;
}

uint64_t destroy for SDSCurrencyResponse.CurrencyItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SDSCurrencyResponse.CurrencyItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for SDSCurrencyResponse.CurrencyItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for SDSCurrencyResponse.CurrencyItem(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSCurrencyResponse.CurrencyItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSCurrencyResponse.CurrencyItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSCurrencyResponse.CurrencyItem()
{
  return &type metadata for SDSCurrencyResponse.CurrencyItem;
}

unint64_t sub_1ABE5CA38()
{
  unint64_t result;

  result = qword_1EEC43F88;
  if (!qword_1EEC43F88)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4515C, &type metadata for SDSCurrencyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F88);
  }
  return result;
}

unint64_t sub_1ABE5CA80()
{
  unint64_t result;

  result = qword_1ED34C3B8;
  if (!qword_1ED34C3B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF450CC, &type metadata for SDSCurrencyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C3B8);
  }
  return result;
}

unint64_t sub_1ABE5CAC8()
{
  unint64_t result;

  result = qword_1ED34C3B0;
  if (!qword_1ED34C3B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF450F4, &type metadata for SDSCurrencyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C3B0);
  }
  return result;
}

unint64_t sub_1ABE5CB0C()
{
  unint64_t result;

  result = qword_1ED34C3C0;
  if (!qword_1ED34C3C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF452DC, &type metadata for SDSCurrencyResponse.CurrencyItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C3C0);
  }
  return result;
}

uint64_t _s10StocksCore19SDSCurrencyResponseV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABE5CB9C + 4 * byte_1ABF44FED[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABE5CBD0 + 4 * byte_1ABF44FE8[v4]))();
}

uint64_t sub_1ABE5CBD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE5CBD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE5CBE0);
  return result;
}

uint64_t sub_1ABE5CBEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE5CBF4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABE5CBF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE5CC00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSCurrencyResponse.CurrencyItem.CodingKeys()
{
  return &type metadata for SDSCurrencyResponse.CurrencyItem.CodingKeys;
}

unint64_t sub_1ABE5CC20()
{
  unint64_t result;

  result = qword_1EEC43F98;
  if (!qword_1EEC43F98)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF452B4, &type metadata for SDSCurrencyResponse.CurrencyItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43F98);
  }
  return result;
}

unint64_t sub_1ABE5CC68()
{
  unint64_t result;

  result = qword_1ED34C3D0;
  if (!qword_1ED34C3D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45224, &type metadata for SDSCurrencyResponse.CurrencyItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C3D0);
  }
  return result;
}

unint64_t sub_1ABE5CCB0()
{
  unint64_t result;

  result = qword_1ED34C3C8;
  if (!qword_1ED34C3C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4524C, &type metadata for SDSCurrencyResponse.CurrencyItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C3C8);
  }
  return result;
}

uint64_t sub_1ABE5CCF4()
{
  sub_1ABD1363C();
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABE5CD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a10 + 16))(a6, a7, a8, a9, a10);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  sub_1ABF2FF68();
  v13 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  sub_1ABF2FF68();
  v15 = (id)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABE5CE5C(uint64_t a1, void (*a2)(_QWORD *))
{
  _QWORD v4[2];

  if (qword_1ED347160 != -1)
    swift_once();
  v4[0] = qword_1ED347150;
  v4[1] = *(_QWORD *)algn_1ED347158;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  a2(v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE5CEE8(uint64_t a1)
{
  int64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1ABD16414(0, v1, 0);
    v3 = (uint64_t *)(a1 + 56);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      v7 = *(_QWORD *)(v11 + 16);
      v6 = *(_QWORD *)(v11 + 24);
      sub_1ABF2FF5C();
      if (v7 >= v6 >> 1)
        sub_1ABD16414(v6 > 1, v7 + 1, 1);
      *(_QWORD *)(v11 + 16) = v7 + 1;
      v8 = v11 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v4;
      *(_QWORD *)(v8 + 40) = v5;
      v3 += 17;
      --v1;
    }
    while (v1);
  }
  v9 = sub_1ABE5CCF4();
  swift_bridgeObjectRelease();
  return v9;
}

void sub_1ABE5CFEC(_QWORD *a1@<X8>)
{
  sub_1ABE5D000(a1);
}

void sub_1ABE5D000(_QWORD *a1@<X8>)
{
  uint64_t v2;
  void *v3;

  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
  v3 = (void *)sub_1ABF31D44();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  *a1 = MEMORY[0x1E0DEE9E0];
}

uint64_t sub_1ABE5D130()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE5D17C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *v1;
  sub_1ABF30AC0();
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD8A848(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(v3 + 136) = v5;
  swift_bridgeObjectRelease();
  return sub_1ABF30ACC();
}

uint64_t sub_1ABE5D21C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *v1;
  sub_1ABF30AC0();
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD8A848(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(v3 + 144) = v5;
  swift_bridgeObjectRelease();
  return sub_1ABF30ACC();
}

uint64_t sub_1ABE5D2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(uint64_t);
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  int v39;
  _BOOL8 v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  char v46;
  char v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t *v60;
  int64_t v61;
  uint64_t v62;

  v4 = sub_1ABF31048();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v59 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v51 - v8;
  sub_1ABCFE340(0, &qword_1ED34E7B8, &qword_1ED34E670, v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v12);
  v60 = (uint64_t *)((char *)&v51 - v16);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v57 = v9;
  v58 = v5;
  v61 = 0;
  v55 = a1;
  v56 = a2;
  v19 = *(_QWORD *)(a1 + 64);
  v18 = a1 + 64;
  v17 = v19;
  v20 = 1 << *(_BYTE *)(v18 - 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v17;
  v53 = v18;
  v54 = (unint64_t)(v20 + 63) >> 6;
  v52 = v54 - 1;
  while (1)
  {
    if (v22)
    {
      v62 = (v22 - 1) & v22;
      v23 = v60;
      v24 = __clz(__rbit64(v22)) | (v61 << 6);
      v25 = v58;
LABEL_8:
      v26 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * v24);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v55 + 56) + *(_QWORD *)(v25 + 72) * v24;
      v30 = MEMORY[0x1E0DB48B0];
      sub_1ABCFC7E8(0, &qword_1ED34E670, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      v32 = v31;
      v33 = v29;
      v34 = (void (*)(uint64_t))v30;
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(&v14[*(int *)(v31 + 48)], v33, v4);
      *(_QWORD *)v14 = v28;
      *((_QWORD *)v14 + 1) = v27;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v14, 0, 1, v32);
      sub_1ABF2FF5C();
      a2 = v56;
      goto LABEL_27;
    }
    v23 = v60;
    v35 = v61 + 1;
    if (__OFADD__(v61, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    v25 = v58;
    v34 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
    if (v35 < v54)
    {
      v36 = *(_QWORD *)(v53 + 8 * v35);
      if (v36)
        goto LABEL_12;
      v37 = v61 + 2;
      ++v61;
      if (v35 + 1 < v54)
      {
        v36 = *(_QWORD *)(v53 + 8 * v37);
        if (v36)
          goto LABEL_15;
        v61 = v35 + 1;
        if (v35 + 2 < v54)
        {
          v36 = *(_QWORD *)(v53 + 8 * (v35 + 2));
          if (v36)
          {
            v35 += 2;
            goto LABEL_12;
          }
          v37 = v35 + 3;
          v61 = v35 + 2;
          if (v35 + 3 < v54)
            break;
        }
      }
    }
LABEL_26:
    sub_1ABCFC7E8(0, &qword_1ED34E670, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    v32 = v38;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v14, 1, 1, v38);
    v62 = 0;
LABEL_27:
    sub_1ABCFE2F0((uint64_t)v14, (uint64_t)v23, (uint64_t)&qword_1ED34E7B8, (uint64_t)&qword_1ED34E670, (uint64_t)v34, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABCFE340);
    sub_1ABCFC7E8(0, &qword_1ED34E670, v34);
    v39 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v23, 1, v32);
    v40 = v39 == 1;
    if (v39 == 1)
      return v40;
    v41 = (char *)v23 + *(int *)(v32 + 48);
    v43 = *v23;
    v42 = v23[1];
    v44 = v57;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v57, v41, v4);
    v45 = sub_1ABD00F9C(v43, v42);
    v47 = v46;
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v44, v4);
      return 0;
    }
    v48 = v59;
    (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v59, *(_QWORD *)(a2 + 56) + *(_QWORD *)(v25 + 72) * v45, v4);
    sub_1ABCFE1EC(&qword_1ED34E7A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
    v49 = sub_1ABF31720();
    v50 = *(void (**)(char *, uint64_t))(v25 + 8);
    v50(v48, v4);
    result = ((uint64_t (*)(char *, uint64_t))v50)(v44, v4);
    v22 = v62;
    if ((v49 & 1) == 0)
      return v40;
  }
  v36 = *(_QWORD *)(v53 + 8 * v37);
  if (v36)
  {
LABEL_15:
    v35 = v37;
LABEL_12:
    v61 = v35;
    v62 = (v36 - 1) & v36;
    v24 = __clz(__rbit64(v36)) + (v35 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    v35 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v35 >= v54)
    {
      v61 = v52;
      goto LABEL_26;
    }
    v36 = *(_QWORD *)(v53 + 8 * v35);
    ++v37;
    if (v36)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1ABE5D74C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;
  uint64_t v41;
  int64_t v42;
  _OWORD v43[10];
  uint64_t v44;
  _OWORD v45[10];
  uint64_t v46;
  _OWORD v47[10];
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  _QWORD v60[2];
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  _OWORD v72[10];
  uint64_t v73;
  _QWORD v74[2];
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v41 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v42 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v4 << 6);
      goto LABEL_24;
    }
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v42)
      return 1;
    v11 = *(_QWORD *)(v41 + 8 * v10);
    ++v4;
    if (!v11)
    {
      v4 = v10 + 1;
      if (v10 + 1 >= v42)
        return 1;
      v11 = *(_QWORD *)(v41 + 8 * v4);
      if (!v11)
      {
        v4 = v10 + 2;
        if (v10 + 2 >= v42)
          return 1;
        v11 = *(_QWORD *)(v41 + 8 * v4);
        if (!v11)
        {
          v4 = v10 + 3;
          if (v10 + 3 >= v42)
            return 1;
          v11 = *(_QWORD *)(v41 + 8 * v4);
          if (!v11)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_24:
    v13 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(v3 + 56) + 168 * v9;
    v18 = *(_OWORD *)(v16 + 16);
    v17 = *(_OWORD *)(v16 + 32);
    v47[0] = *(_OWORD *)v16;
    v47[1] = v18;
    v47[2] = v17;
    v19 = *(_OWORD *)(v16 + 96);
    v21 = *(_OWORD *)(v16 + 48);
    v20 = *(_OWORD *)(v16 + 64);
    v47[5] = *(_OWORD *)(v16 + 80);
    v47[6] = v19;
    v47[3] = v21;
    v47[4] = v20;
    v23 = *(_OWORD *)(v16 + 128);
    v22 = *(_OWORD *)(v16 + 144);
    v24 = *(_OWORD *)(v16 + 112);
    v48 = *(_QWORD *)(v16 + 160);
    v47[8] = v23;
    v47[9] = v22;
    v47[7] = v24;
    v25 = *(_OWORD *)(v16 + 144);
    v57 = *(_OWORD *)(v16 + 128);
    v58 = v25;
    v59 = *(_QWORD *)(v16 + 160);
    v26 = *(_OWORD *)(v16 + 80);
    v53 = *(_OWORD *)(v16 + 64);
    v54 = v26;
    v27 = *(_OWORD *)(v16 + 112);
    v55 = *(_OWORD *)(v16 + 96);
    v56 = v27;
    v28 = *(_OWORD *)(v16 + 16);
    v49 = *(_OWORD *)v16;
    v50 = v28;
    v29 = *(_OWORD *)(v16 + 48);
    v51 = *(_OWORD *)(v16 + 32);
    v52 = v29;
    v60[0] = v14;
    v60[1] = v15;
    v63 = v51;
    v64 = v29;
    v61 = v49;
    v62 = v28;
    v65 = v53;
    v66 = v54;
    v71 = v59;
    v69 = v57;
    v70 = v58;
    v67 = v55;
    v68 = v56;
    nullsub_2(v60);
    sub_1ABCFE2F0((uint64_t)v60, (uint64_t)v74, (uint64_t)&unk_1EEC43FA0, (uint64_t)sub_1ABE5DC58, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABCF5A54);
    v72[8] = v83;
    v72[9] = v84;
    v72[4] = v79;
    v72[5] = v80;
    v72[6] = v81;
    v72[7] = v82;
    v72[0] = v75;
    v72[1] = v76;
    v72[2] = v77;
    v72[3] = v78;
    v45[8] = v83;
    v45[9] = v84;
    v45[4] = v79;
    v45[5] = v80;
    v45[6] = v81;
    v45[7] = v82;
    v45[0] = v75;
    v45[1] = v76;
    v30 = v74[0];
    v31 = v74[1];
    v73 = v85;
    v46 = v85;
    v45[2] = v77;
    v45[3] = v78;
    sub_1ABF2FF5C();
    sub_1ABDD07A0((uint64_t *)v47);
    v32 = sub_1ABD00F9C(v30, v31);
    LOBYTE(v30) = v33;
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0)
    {
      sub_1ABDD0888((uint64_t *)v72);
      return 0;
    }
    v34 = *(_QWORD *)(a2 + 56) + 168 * v32;
    v35 = *(_OWORD *)(v34 + 144);
    v43[8] = *(_OWORD *)(v34 + 128);
    v43[9] = v35;
    v44 = *(_QWORD *)(v34 + 160);
    v36 = *(_OWORD *)(v34 + 80);
    v43[4] = *(_OWORD *)(v34 + 64);
    v43[5] = v36;
    v37 = *(_OWORD *)(v34 + 112);
    v43[6] = *(_OWORD *)(v34 + 96);
    v43[7] = v37;
    v38 = *(_OWORD *)(v34 + 16);
    v43[0] = *(_OWORD *)v34;
    v43[1] = v38;
    v39 = *(_OWORD *)(v34 + 48);
    v43[2] = *(_OWORD *)(v34 + 32);
    v43[3] = v39;
    v40 = static FlexiblePaywall.== infix(_:_:)(v43, v45);
    result = (uint64_t)sub_1ABDD0888((uint64_t *)v72);
    if ((v40 & 1) == 0)
      return 0;
  }
  v12 = v10 + 4;
  if (v12 >= v42)
    return 1;
  v11 = *(_QWORD *)(v41 + 8 * v12);
  if (v11)
  {
    v4 = v12;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v4 >= v42)
      return 1;
    v11 = *(_QWORD *)(v41 + 8 * v4);
    ++v12;
    if (v11)
      goto LABEL_23;
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_1ABE5DAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1ABE5CD48(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[2], v4[3]);
}

uint64_t sub_1ABE5DB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ABE5DB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1ABE5DB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1ABE5DB28()
{
  return objectdestroyTm_1((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1ABE5DB34()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABE5DB58()
{
  return objectdestroyTm_1((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1ABE5DB64()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE5DB88(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1ABE5DBB8(uint64_t a1)
{
  uint64_t v2;

  sub_1ABCF5A54(0, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroy_15Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE5DC50(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABE5CE5C(a1, *(void (**)(_QWORD *))(v1 + 16));
}

void sub_1ABE5DC58()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEC43FA8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEC43FA8);
  }
}

uint64_t sub_1ABE5DCE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  _QWORD v17[6];
  id v18[4];
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CKError(0);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v3 = (void *)v19;
  sub_1ABE5DF94();
  sub_1ABF30430();
  if (v21 != 2)
  {
    if (v21 == 11)
    {

      return 1;
    }
    goto LABEL_17;
  }
  v18[0] = v3;
  v5 = sub_1ABF30448();
  v6 = sub_1ABF317A4();
  if (*(_QWORD *)(v5 + 16) && (v8 = sub_1ABD00F9C(v6, v7), (v9 & 1) != 0))
  {
    sub_1ABD1FEFC(*(_QWORD *)(v5 + 56) + 32 * v8, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
  {

    sub_1ABD6B430((uint64_t)&v19);
    return 0;
  }
  sub_1ABE5DFDC();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:

    return 0;
  }
  v10 = v18[0];
  v11 = objc_msgSend(v18[0], sel_allValues);
  v12 = sub_1ABF31A08();

  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = v12 + 32;
    sub_1ABF2FF5C();
    while (1)
    {
      sub_1ABD1FEFC(v14, (uint64_t)&v19);
      sub_1ABD1FEFC((uint64_t)&v19, (uint64_t)v18);
      sub_1ABE5E018();
      if (!swift_dynamicCast())
        break;
      v15 = (void *)v17[5];
      swift_getErrorValue();
      v16 = sub_1ABE5DCE0(v17[2]);

      if ((v16 & 1) == 0)
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
      v14 += 32;
      if (!--v13)
      {

        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);

    swift_bridgeObjectRelease_n();
    return 0;
  }

LABEL_23:
  swift_bridgeObjectRelease();
  return 1;
}

unint64_t sub_1ABE5DF94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED347248;
  if (!qword_1ED347248)
  {
    type metadata accessor for CKError(255);
    result = MEMORY[0x1AF438F30](&unk_1ABF36980, v1);
    atomic_store(result, (unint64_t *)&qword_1ED347248);
  }
  return result;
}

unint64_t sub_1ABE5DFDC()
{
  unint64_t result;

  result = qword_1EEC43FB0;
  if (!qword_1EEC43FB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEC43FB0);
  }
  return result;
}

unint64_t sub_1ABE5E018()
{
  unint64_t result;

  result = qword_1ED350000;
  if (!qword_1ED350000)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED350000);
  }
  return result;
}

uint64_t sub_1ABE5E06C()
{
  return sub_1ABF2FDB8();
}

uint64_t sub_1ABE5E08C()
{
  return sub_1ABF2FDB8();
}

uint64_t sub_1ABE5E0AC()
{
  return sub_1ABF2FDC4();
}

uint64_t sub_1ABE5E0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC43FB8);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC43FB8);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABE5E25C@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC41070, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1EEC43FB8, a1);
}

uint64_t sub_1ABE5E280()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v12[0] = sub_1ABF30484();
  v3 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF2FE54();
  __swift_allocate_value_buffer(v10, qword_1EEC43FD0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC43FD0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v12[0]);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1ABF2FE60();
}

uint64_t sub_1ABE5E4AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC41078, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1EEC43FD0, a1);
}

uint64_t sub_1ABE5E4D0()
{
  return 1;
}

uint64_t sub_1ABE5E4D8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABCF4DA8(0, &qword_1EEC43FE8, (uint64_t (*)(void))sub_1ABDAE664, (uint64_t)&type metadata for AddSymbolToWatchlistIntent, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABCF4DA8(0, &qword_1EEC43FF0, (uint64_t (*)(void))sub_1ABDAE664, (uint64_t)&type metadata for AddSymbolToWatchlistIntent, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABDAE664();
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABE5E6C0();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABE5E740();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF74();
}

uint64_t sub_1ABE5E69C()
{
  return sub_1ABF2FDD0();
}

void sub_1ABE5E6C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43FF8)
  {
    sub_1ABDBAB38();
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43FF8);
  }
}

uint64_t sub_1ABE5E71C()
{
  return sub_1ABF2FDD0();
}

void sub_1ABE5E740()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC44000)
  {
    sub_1ABCF4DA8(255, &qword_1ED347078, (uint64_t (*)(void))sub_1ABD67FB8, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, &qword_1EEC44000);
  }
}

uint64_t sub_1ABE5E7BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1ABDBAE80(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABF2FDC4();
  return sub_1ABD64AD4(a1);
}

uint64_t (*sub_1ABE5E838(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t (*sub_1ABE5E880(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE5E8C8()
{
  uint64_t v1;

  sub_1ABF2FBF0();
  return v1;
}

uint64_t sub_1ABE5E8F8()
{
  swift_unknownObjectRetain();
  sub_1ABF2FBFC();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ABE5E938(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FBE4();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE5E980()
{
  return sub_1ABF2FC08();
}

uint64_t sub_1ABE5E9A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t result;
  uint64_t *v38;
  _QWORD v39[2];
  unsigned int v40;
  void (*v41)(char *);
  uint64_t v42;
  void (*v43)(char *);
  unsigned int v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v51 = a1;
  v55 = sub_1ABF2FFC8();
  v50 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v54 = (char *)v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C907D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v53 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)v39 - v6;
  sub_1ABCF5A54(0, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, v2);
  MEMORY[0x1E0C80A78](v7);
  v49 = (char *)v39 - v8;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v2);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v39 - v10;
  v12 = sub_1ABF30484();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v12;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v18);
  v19 = sub_1ABF3049C();
  v20 = *(_QWORD *)(v19 - 8);
  v48 = v19;
  MEMORY[0x1E0C80A78](v19);
  v39[1] = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABDBAB38();
  v46 = v22;
  sub_1ABF31738();
  sub_1ABF30844();
  v23 = *(void (**)(char *))(v13 + 104);
  v44 = *MEMORY[0x1E0CAF9B8];
  v24 = v44;
  v42 = v14;
  v23(v16);
  v43 = v23;
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  ((void (*)(char *, uint64_t, uint64_t))v23)(v16, v24, v14);
  v25 = v11;
  sub_1ABF304A8();
  v47 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v47(v11, 0, 1, v19);
  v26 = type metadata accessor for SymbolEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v49, 1, 1, v26);
  v27 = sub_1ABF2FCD4();
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v45 = v28;
  v28(v52, 1, 1, v27);
  v28(v53, 1, 1, v27);
  *(_QWORD *)&v56 = sub_1ABDAE404();
  *((_QWORD *)&v56 + 1) = v29;
  *(_QWORD *)&v57 = v30;
  *((_QWORD *)&v57 + 1) = v31;
  v40 = *MEMORY[0x1E0C91738];
  v41 = *(void (**)(char *))(v50 + 104);
  v41(v54);
  sub_1ABDAB25C();
  v50 = sub_1ABF2FDF4();
  sub_1ABCF4DA8(0, &qword_1ED347078, (uint64_t (*)(void))sub_1ABD67FB8, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
  sub_1ABF31738();
  sub_1ABF30844();
  v32 = v44;
  v34 = v42;
  v33 = (void (*)(char *, uint64_t, uint64_t))v43;
  ((void (*)(char *, _QWORD, uint64_t))v43)(v16, v44, v42);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v33(v16, v32, v34);
  sub_1ABF304A8();
  v47(v25, 0, 1, v48);
  v56 = 0uLL;
  *(_QWORD *)&v57 = 0;
  v35 = v45;
  v45(v52, 1, 1, v27);
  v35(v53, 1, 1, v27);
  ((void (*)(char *, _QWORD, uint64_t))v41)(v54, v40, v55);
  sub_1ABD68830();
  v36 = sub_1ABF2FE00();
  sub_1ABCF5A54(0, &qword_1ED34C7B0, (uint64_t (*)(uint64_t))sub_1ABD79618, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  v56 = 0u;
  v57 = 0u;
  v58 = 0;
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  v38 = v51;
  *v51 = v50;
  v38[1] = v36;
  v38[2] = result;
  return result;
}

uint64_t sub_1ABE5EFF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_OWORD *)(v2 + 104) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 120) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_1ABE5F020()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  swift_release();
  v4 = v0[9];
  v0[16] = v0[8];
  ObjectType = swift_getObjectType();
  v0[2] = v3;
  v0[3] = v2;
  v0[4] = v1;
  v8 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v6 = (_QWORD *)swift_task_alloc();
  v0[17] = v6;
  *v6 = v0;
  v6[1] = sub_1ABDBBB18;
  return v8(v0 + 2, ObjectType, v4);
}

uint64_t sub_1ABE5F120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41070 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC43FB8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE5F194(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1ABD37AA0;
  *(_QWORD *)(v4 + 96) = a1;
  *(_OWORD *)(v4 + 104) = *(_OWORD *)v1;
  *(_QWORD *)(v4 + 120) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_1ABE5F208()
{
  sub_1ABDAE664();
  return sub_1ABF2FCA4();
}

unint64_t sub_1ABE5F234()
{
  unint64_t result;

  result = qword_1ED347130;
  if (!qword_1ED347130)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4548C, &type metadata for AddSymbolToWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED347130);
  }
  return result;
}

unint64_t sub_1ABE5F27C()
{
  unint64_t result;

  result = qword_1ED347120;
  if (!qword_1ED347120)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF454B4, &type metadata for AddSymbolToWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED347120);
  }
  return result;
}

uint64_t sub_1ABE5F2C0()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1ABE5F2E4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for AddSymbolToWatchlistIntent()
{
  return &type metadata for AddSymbolToWatchlistIntent;
}

unint64_t sub_1ABE5F320()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC44018;
  if (!qword_1EEC44018)
  {
    sub_1ABCF4DA8(255, &qword_1EEC44020, (uint64_t (*)(void))sub_1ABDAE664, (uint64_t)&type metadata for AddSymbolToWatchlistIntent, MEMORY[0x1E0C91678]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C916B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC44018);
  }
  return result;
}

uint64_t sub_1ABE5F388()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE5F3B4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1ABCF5968();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF305D4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  v12 = *a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v13 = v12 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
  swift_beginAccess();
  sub_1ABCF5CFC((uint64_t)v6, v13);
  return swift_endAccess();
}

uint64_t sub_1ABE5F4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1ABCF5968();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v5, a1, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  v8 = v1 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
  swift_beginAccess();
  sub_1ABCF5CFC((uint64_t)v5, v8);
  return swift_endAccess();
}

void (*sub_1ABE5F5A8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  sub_1ABCF5968();
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = sub_1ABF305D4();
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  sub_1ABCF5804((uint64_t)v8);
  return sub_1ABE5F640;
}

void sub_1ABE5F640(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD **)a1;
  v4 = *(void **)(*(_QWORD *)a1 + 80);
  v3 = *(void **)(*(_QWORD *)a1 + 88);
  if ((a2 & 1) != 0)
  {
    v5 = v2[8];
    v6 = v2[9];
    v8 = v2[6];
    v7 = (void *)v2[7];
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v6 + 16))(v2[10], v2[11], v5);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v7, v4, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
    v9 = v8 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
    swift_beginAccess();
    sub_1ABCF5CFC((uint64_t)v7, v9);
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    v10 = v2[8];
    v11 = v2[9];
    v12 = v2[6];
    v7 = (void *)v2[7];
    (*(void (**)(void *, _QWORD, uint64_t))(v11 + 32))(v7, v2[11], v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    v13 = v12 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL;
    swift_beginAccess();
    sub_1ABCF5CFC((uint64_t)v7, v13);
    swift_endAccess();
  }
  free(v3);
  free(v4);
  free(v7);
  free(v2);
}

id sub_1ABE5F798()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC10StocksCore8AppGroup_userDefaults);
}

uint64_t sub_1ABE5F7A8()
{
  return sub_1ABD03B0C(&qword_1ED346C88);
}

uint64_t sub_1ABE5F7C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1ABCF59BC(v0 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL);
  v1 = v0 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain;
  v2 = sub_1ABF309F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_1ABE5F830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  sub_1ABCF59BC(v0 + OBJC_IVAR____TtC10StocksCore8AppGroup____lazy_storage___containerURL);
  v1 = v0 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain;
  v2 = sub_1ABF309F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1ABE5F8A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABCF5804(a1);
}

uint64_t sub_1ABE5F8CC()
{
  return type metadata accessor for AppGroup();
}

uint64_t sub_1ABE5F8D4()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABE5F8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[2];

  v78 = a2;
  v3 = sub_1ABF317D4();
  v74 = *(_QWORD *)(v3 - 8);
  v75 = v3;
  MEMORY[0x1E0C80A78](v3);
  v73 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF306B8();
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v65 - v13;
  v15 = sub_1ABF305D4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1ABF30124();
  if (!v20)
    goto LABEL_12;
  v21 = v20;
  v70 = v19;
  v77 = a1;
  sub_1ABF30154();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1ABD184CC((uint64_t)v14, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
LABEL_11:
    a1 = v77;
LABEL_12:
    sub_1ABF31BE8();
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1ABF366C0;
    v49 = sub_1ABF30184();
    sub_1ABCFE1EC(&qword_1EEC44028, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], MEMORY[0x1E0CADF70]);
    v50 = a1;
    v51 = sub_1ABF321F4();
    v53 = v52;
    *(_QWORD *)(v48 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v48 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v48 + 32) = v51;
    *(_QWORD *)(v48 + 40) = v53;
    sub_1ABD19560();
    v54 = (void *)sub_1ABF31D44();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v78, v50, v49);
  }
  v22 = v18;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  v23 = v15;
  v24 = sub_1ABF30598();
  if (!v25)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v26 = v24;
  v27 = v25;
  v68 = v16;
  v69 = v23;
  v28 = sub_1ABF305B0();
  v30 = v22;
  if (!v29)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v22, v69);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v66 = v28;
  v67 = v29;
  v31 = sub_1ABE5FFE8((uint64_t)v11);
  MEMORY[0x1AF4363BC](v31);
  sub_1ABCFE1EC(&qword_1ED34E4B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0670], MEMORY[0x1E0CB0660]);
  v32 = v72;
  sub_1ABF30748();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v7, v32);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v33 = v26;
  v34 = v79[0];
  v35 = v79[1];
  sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FFD0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1ABF38EC0;
  *(_QWORD *)(v36 + 32) = v70;
  *(_QWORD *)(v36 + 40) = v21;
  *(_QWORD *)(v36 + 48) = v33;
  *(_QWORD *)(v36 + 56) = v27;
  *(_QWORD *)(v36 + 64) = sub_1ABF305A4();
  *(_QWORD *)(v36 + 72) = v37;
  *(_QWORD *)(v36 + 80) = 63;
  *(_QWORD *)(v36 + 88) = 0xE100000000000000;
  v38 = v67;
  *(_QWORD *)(v36 + 96) = v66;
  *(_QWORD *)(v36 + 104) = v38;
  *(_QWORD *)(v36 + 112) = v34;
  *(_QWORD *)(v36 + 120) = v35;
  v79[0] = v36;
  sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FCB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1ABD16600();
  sub_1ABF2FF5C();
  v72 = (uint64_t)v30;
  v39 = sub_1ABF316E4();
  v41 = v40;
  swift_bridgeObjectRelease();
  v42 = v73;
  sub_1ABF317C8();
  v43 = sub_1ABF317B0();
  v45 = v44;
  (*(void (**)(char *, unint64_t))(v74 + 8))(v42, v75);
  if (v45 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v72, v69);
    v46 = sub_1ABF30184();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v78, v77, v46);
  }
  else
  {
    sub_1ABE607D4(v43, v45);
    v56 = v55;
    v75 = v57;
    sub_1ABF3064C();
    v76 = v43;
    v79[0] = 0;
    v79[1] = 0xE000000000000000;
    sub_1ABF31E94();
    swift_bridgeObjectRelease();
    strcpy((char *)v79, "HHMAC;date=\"");
    BYTE5(v79[1]) = 0;
    HIWORD(v79[1]) = -5120;
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    sub_1ABF31870();
    v59 = v79[0];
    v58 = v79[1];
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_1ABF366E0;
    v61 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v60 + 56) = MEMORY[0x1E0DEA968];
    v62 = sub_1ABD0F5C0();
    *(_QWORD *)(v60 + 32) = v39;
    *(_QWORD *)(v60 + 40) = v41;
    *(_QWORD *)(v60 + 96) = v61;
    *(_QWORD *)(v60 + 104) = v62;
    *(_QWORD *)(v60 + 64) = v62;
    *(_QWORD *)(v60 + 72) = v59;
    *(_QWORD *)(v60 + 80) = v58;
    sub_1ABD19560();
    sub_1ABF2FF5C();
    v63 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    v64 = sub_1ABF30184();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v78, v77, v64);
    sub_1ABF30178();
    swift_bridgeObjectRelease();
    sub_1ABD0F430(v56, v75);
    sub_1ABD0D868(v76, v45);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8))(v72, v69);
  }
}

uint64_t sub_1ABE5FFE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(unint64_t, _QWORD, uint64_t);
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a1;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v29 = (char *)&v29 - v2;
  v3 = sub_1ABF303B8();
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30760();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1ABF308F8();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF308C8();
  sub_1ABF30754();
  sub_1ABCF5A54(0, &qword_1ED34E2D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = sub_1ABF308EC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1ABF39DC0;
  v17 = v16 + v15;
  v18 = *(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104);
  v18(v17, *MEMORY[0x1E0CB1158], v12);
  v18(v17 + v14, *MEMORY[0x1E0CB1160], v12);
  v18(v17 + 2 * v14, *MEMORY[0x1E0CB1130], v12);
  v18(v17 + 3 * v14, *MEMORY[0x1E0CB1140], v12);
  v18(v17 + 4 * v14, *MEMORY[0x1E0CB1178], v12);
  sub_1ABE60570(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1ABF308B0();
  swift_bridgeObjectRelease();
  sub_1ABF30394();
  if ((v19 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
    v25 = (uint64_t)v8;
    v26 = v35;
    v24 = v36;
    v27 = v34;
  }
  else
  {
    sub_1ABF303A0();
    v20 = v29;
    sub_1ABF308BC();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
    v22 = v34;
    v21 = v35;
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v20, 1, v35);
    v24 = v36;
    v25 = (uint64_t)v20;
    v26 = v21;
    v27 = v22;
    if (v23 == 1)
    {
      sub_1ABD184CC(v25, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v25 = (uint64_t)v8;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v26);
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v24, v25, v26);
}

void sub_1ABE60370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X12 }
}

uint64_t sub_1ABE603BC(int a1, const void *a2, int a3, uint64_t a4, size_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  const void *v16;
  uint64_t *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  CCHmac(2u, a2, BYTE6(a4), v16, a5, v18);
  v20 = sub_1ABE60964(v18, v19);
  v22 = v21;
  result = MEMORY[0x1AF438FFC](v18, -1, -1);
  *v17 = v20;
  v17[1] = v22;
  return result;
}

uint64_t sub_1ABE6044C()
{
  uint64_t v0;

  sub_1ABD0F430(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SparklinesRequestSigner()
{
  return objc_opt_self();
}

uint64_t sub_1ABE60490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE5F8E0(a1, a2);
}

uint64_t sub_1ABE604B0(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1ABE60570(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1ABF308EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_1ABE60A10();
    v10 = sub_1ABF31E64();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1ABCFE1EC(&qword_1ED34CCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1ABF316C0();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v5, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1ABCFE1EC(&qword_1ED34CCE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1ABF31720();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v5, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

void sub_1ABE607D4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABE60820()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_slowAlloc();
  MEMORY[0x1E0C80A78](v1);
  sub_1ABF30634();
  return *(_QWORD *)(v0 - 80);
}

uint64_t sub_1ABE608F0()
{
  return sub_1ABF30634();
}

void sub_1ABE60944(uint64_t a1)
{
  uint64_t *v1;

  sub_1ABE60370(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1ABE60964(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_1ABE604B0(__src, &__src[a2]);
  sub_1ABF30388();
  swift_allocObject();
  sub_1ABF3034C();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_1ABF30610();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

void sub_1ABE60A10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E178)
  {
    sub_1ABF308EC();
    sub_1ABCFE1EC(&qword_1ED34CCE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
    v0 = sub_1ABF31E70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E178);
  }
}

uint64_t type metadata accessor for YahooSearchOperation()
{
  uint64_t result;

  result = qword_1EEC44048;
  if (!qword_1EEC44048)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABE60AC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30B38();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1ABE60B50(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1ABE60B5C(a1, a2, a3, a4, a5, a6, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1ABF22B84);
}

uint64_t sub_1ABE60B5C(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t (*v16)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v11 = 0x73752D6E65;
  v12 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  v13 = v12;
  if (!v12)
  {
    v18 = 0xE500000000000000;
LABEL_9:

    v24 = a7(a1, a2, a3, a4, v11, v18, 21333, 0xE200000000000000, a5, a6);
    goto LABEL_10;
  }
  v27 = a4;
  v14 = objc_msgSend(v12, sel_stocksLanguageCode);
  if (v14)
  {
    v15 = v14;
    v16 = a7;
    v11 = sub_1ABF317A4();
    v18 = v17;

  }
  else
  {
    v16 = a7;
    v18 = 0xE500000000000000;
  }
  v19 = objc_msgSend(v13, sel_stocksCountryCode);
  if (!v19)
  {
    a7 = v16;
    a4 = v27;
    goto LABEL_9;
  }
  v20 = v19;
  v21 = sub_1ABF317A4();
  v23 = v22;

  v24 = v16(a1, a2, a3, v27, v11, v18, v21, v23, a5, a6);
LABEL_10:
  v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25;
}

void sub_1ABE60CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t inited;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _BYTE v16[64];

  v5 = sub_1ABF30760();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + qword_1EEC44038), *(_QWORD *)(v2 + qword_1EEC44038 + 24));
  sub_1ABD32AEC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(inited + 32) = 0x72656B636974;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v10 = *(_QWORD *)(v2 + qword_1EEC44030 + 8);
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v2 + qword_1EEC44030);
  *(_QWORD *)(inited + 56) = v10;
  sub_1ABF2FF5C();
  v11 = sub_1ABD031C0(inited);
  v12 = v2 + qword_1EEC44040;
  sub_1ABE614C0();
  sub_1ABF30754();
  v13 = (void *)sub_1ABE60B5C(0, 0xD000000000000015, 0x80000001ABF5F1D0, v11, (uint64_t)v8, v12, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))sub_1ABF22EE0);
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = v13;
  sub_1ABF2FF68();
  sub_1ABF30BF8();

  objc_msgSend(v15, sel_start);
}

void sub_1ABE60E78(uint64_t a1, void (*a2)(id, uint64_t))
{
  void (*v2)(id, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v23;
  _QWORD *v24;
  BOOL v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  _OWORD v46[8];
  uint64_t v47;
  uint64_t v48;

  v2 = a2;
  v3 = *(_QWORD *)(a1 + 8);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    v5 = *(_QWORD *)(a1 + 16);
    v4 = *(_QWORD *)(a1 + 24);
    v6 = *(id *)a1;
    v7 = *(id *)a1;
    v2(v6, 1);
    sub_1ABD6B2E4(v6, v3, v5, v4, 1);
    return;
  }
  v48 = MEMORY[0x1E0DEE9E8];
  v41 = *(_QWORD *)(v3 + 16);
  if (v41)
  {
    v40 = v3 + 32;
    sub_1ABF2FF5C();
    v8 = 0;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v39 = v3;
    while (1)
    {
      if (v8 >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
        return;
      }
      v44 = v9;
      v10 = (uint64_t *)(v40 + 80 * v8);
      v11 = *v10;
      v12 = v10[1];
      v13 = v10[2];
      v14 = v10[3];
      v15 = v10[5];
      v16 = v10[9];
      v17 = v48;
      v43 = v10[4];
      v42 = v10[8];
      if (!*(_QWORD *)(v48 + 16))
        break;
      v38 = *v10;
      sub_1ABF32308();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF31840();
      v18 = sub_1ABF32338();
      v19 = -1 << *(_BYTE *)(v17 + 32);
      v20 = v18 & ~v19;
      if (((*(_QWORD *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        goto LABEL_22;
      v21 = (_QWORD *)(*(_QWORD *)(v17 + 48) + 16 * v20);
      if (*v21 != v13 || v21[1] != v14)
      {
        v36 = *(_QWORD *)(v17 + 48);
        v37 = v17 + 56;
        if ((sub_1ABF3223C() & 1) == 0)
        {
          v23 = (v20 + 1) & ~v19;
          if (((*(_QWORD *)(v37 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
          {
LABEL_22:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v11 = v38;
LABEL_24:
            sub_1ABF2FF5C();
            sub_1ABCFB740((uint64_t *)v46, v13, v14);
            swift_bridgeObjectRelease();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABEC8F34(&v45);
            swift_bridgeObjectRelease();
            sub_1ABF2FF5C();
            sub_1ABD15B80(v13, v14, v11, v12, v43, v15, &v45, v42, (uint64_t)v46, v16, 0, 0, 0, 0, 0, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v9 = v44;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v9 = sub_1ABD32E4C(0, v44[2] + 1, 1, v44);
            v3 = v39;
            v27 = v9[2];
            v26 = v9[3];
            if (v27 >= v26 >> 1)
              v9 = sub_1ABD32E4C((_QWORD *)(v26 > 1), v27 + 1, 1, v9);
            v9[2] = v27 + 1;
            v28 = &v9[17 * v27];
            *((_OWORD *)v28 + 2) = v46[0];
            v29 = v46[1];
            v30 = v46[2];
            v31 = v46[4];
            *((_OWORD *)v28 + 5) = v46[3];
            *((_OWORD *)v28 + 6) = v31;
            *((_OWORD *)v28 + 3) = v29;
            *((_OWORD *)v28 + 4) = v30;
            v32 = v46[5];
            v33 = v46[6];
            v34 = v46[7];
            v28[20] = v47;
            *((_OWORD *)v28 + 8) = v33;
            *((_OWORD *)v28 + 9) = v34;
            *((_OWORD *)v28 + 7) = v32;
            goto LABEL_6;
          }
          while (1)
          {
            v24 = (_QWORD *)(v36 + 16 * v23);
            v25 = *v24 == v13 && v24[1] == v14;
            if (v25 || (sub_1ABF3223C() & 1) != 0)
              break;
            v23 = (v23 + 1) & ~v19;
            if (((*(_QWORD *)(v37 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
              goto LABEL_22;
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = v39;
LABEL_6:
      if (++v8 == v41)
      {
        swift_bridgeObjectRelease();
        v2 = a2;
        goto LABEL_31;
      }
    }
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    goto LABEL_24;
  }
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_31:
  swift_bridgeObjectRelease();
  v2(v9, 0);
  swift_bridgeObjectRelease();
}

void sub_1ABE61338()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABE61364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EEC44038);
  v1 = v0 + qword_1EEC44040;
  v2 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_1ABE613C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EEC44038);
  v2 = a1 + qword_1EEC44040;
  v3 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_1ABE61428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABE60CC8((uint64_t)sub_1ABE614B4, v4);
  return swift_release();
}

uint64_t sub_1ABE61488()
{
  return type metadata accessor for YahooSearchOperation();
}

uint64_t sub_1ABE61490()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE614B4(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1ABECFF10(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

unint64_t sub_1ABE614C0()
{
  unint64_t result;

  result = qword_1EEC44058;
  if (!qword_1EEC44058)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45E64, &type metadata for YahooSearchResponse);
    atomic_store(result, (unint64_t *)&qword_1EEC44058);
  }
  return result;
}

void sub_1ABE61504(uint64_t a1)
{
  uint64_t v1;

  sub_1ABE60E78(a1, *(void (**)(id, uint64_t))(v1 + 16));
}

uint64_t sub_1ABE61510(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1ABD16414(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      sub_1ABF2FF5C();
      if (v8 >= v7 >> 1)
        sub_1ABD16414(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      v4 += 17;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1ABE615E4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NewsStockFeedService()
{
  return objc_opt_self();
}

uint64_t sub_1ABE61650(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;

  v8 = v4[11];
  __swift_project_boxed_opaque_existential_1(v4 + 7, v4[10]);
  sub_1ABE61510(a1);
  (*(void (**)(void))(v8 + 8))();
  swift_bridgeObjectRelease();
  v9 = v4[13];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9);
  v11 = (void *)sub_1ABF31114();
  sub_1ABF31108();
  swift_release();
  swift_release();

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a3;
  *(_BYTE *)(v12 + 32) = a4 & 1;
  *(_QWORD *)(v12 + 40) = v4;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  v13 = (void *)sub_1ABF31114();
  sub_1ABE41D34();
  v14 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1ABE617B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[393];

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v11 = a1[4];
  v10 = (void *)a1[5];
  v12 = qword_1ED34E660;
  sub_1ABF2FF5C();
  v13 = v6;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v40 = v9;
  sub_1ABF2FF5C();
  v39 = v11;
  sub_1ABF2FF5C();
  v14 = v10;
  if (v12 != -1)
    goto LABEL_10;
  while (1)
  {
    v15 = sub_1ABF3133C();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED34E648);
    swift_bridgeObjectRetain_n();
    v16 = sub_1ABF31324();
    v17 = sub_1ABF31BF4();
    if (os_log_type_enabled(v16, v17))
    {
      v32 = v14;
      v18 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v41[0] = v31;
      *(_DWORD *)v18 = 136446210;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABF2FF5C();
      v19 = sub_1ABF31630();
      v20 = v13;
      v22 = v21;
      swift_bridgeObjectRelease();
      v23 = v19;
      v14 = v32;
      v41[392] = sub_1ABD1FE2C(v23, v22, v41);
      sub_1ABF31D80();
      swift_bridgeObjectRelease_n();
      v13 = v20;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1ABCEF000, v16, v17, "Fetching headlines for feed ids %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v31, -1, -1);
      MEMORY[0x1AF438FFC](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1ABF2FF5C();
    sub_1ABE63F84(MEMORY[0x1E0DEE9E0], v7, a3);
    swift_bridgeObjectRelease();
    v24 = swift_bridgeObjectRelease();
    if ((a5 & 1) != 0)
      break;
    v7 = (uint64_t)a6;
    if ((a4 & 0x8000000000000000) == 0)
      goto LABEL_7;
LABEL_9:
    sub_1ABF31FC0();
    __break(1u);
LABEL_10:
    swift_once();
  }
  v7 = (uint64_t)a6;
  v29 = a6[17];
  v30 = a6[18];
  __swift_project_boxed_opaque_existential_1(a6 + 14, v29);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v30 + 8))(v41, v29, v30);
  v24 = sub_1ABD7DDF4((uint64_t)v41);
  if (v41[8] < 0)
    goto LABEL_9;
LABEL_7:
  MEMORY[0x1E0C80A78](v24);
  sub_1ABD04578(0, &qword_1ED34CA98, (uint64_t)&type metadata for StockNewsFeed, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  swift_bridgeObjectRelease();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a2;
  v25[3] = v13;
  v25[4] = v8;
  v25[5] = v40;
  v25[6] = v39;
  v25[7] = v14;
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v38 = v14;
  v26 = (void *)sub_1ABF31114();
  sub_1ABE41D34();
  v27 = sub_1ABF31174();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1ABE61C40(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[391];

  v21 = a2;
  v22 = a3;
  v6 = sub_1ABF30760();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v19 - v11;
  v13 = a1[5];
  v20 = a1[6];
  v19[1] = __swift_project_boxed_opaque_existential_1(a1 + 2, v13);
  sub_1ABF30754();
  v14 = a4[17];
  v15 = a4[18];
  __swift_project_boxed_opaque_existential_1(a4 + 14, v14);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v15 + 8))(v23, v14, v15);
  sub_1ABD7DDF4((uint64_t)v23);
  sub_1ABF306C4();
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v9, v6);
  v17 = sub_1ABDF6420(v21, v22, (uint64_t)v12, v13, v20);
  v16(v12, v6);
  return v17;
}

uint64_t sub_1ABE61D88(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  id v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _QWORD *v25;
  uint64_t i;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _OWORD v65[8];
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  _QWORD v77[392];
  uint64_t v78;

  v5 = *a1;
  v6 = (uint64_t)(a2 + 14);
  v7 = a2[17];
  v8 = a2[18];
  __swift_project_boxed_opaque_existential_1(a2 + 14, v7);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v77, v7, v8);
  sub_1ABE64284();
  v9 = *(_OWORD *)(a3 + 16);
  v55 = *(_OWORD *)a3;
  v56 = v9;
  *(_QWORD *)&v57 = *(_QWORD *)(a3 + 32);
  v10 = a2[19];
  swift_getObjectType();
  sub_1ABE642C0(a3);
  swift_unknownObjectRetain();
  v11 = sub_1ABEA4CDC(&v55, v10);
  v12 = MEMORY[0x1E0DED1E8];
  sub_1ABD04578(0, &qword_1ED34E310, (uint64_t)&type metadata for NewsFeedFilterOptions.Option, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1ABF3C150;
  v14 = v77[46];
  *(_QWORD *)(v13 + 32) = v77[45];
  *(_QWORD *)(v13 + 40) = v14;
  *(_BYTE *)(v13 + 89) = 3;
  sub_1ABD04578(0, &qword_1ED34E2F8, (uint64_t)&type metadata for HeadlineCondition, (uint64_t (*)(_QWORD, uint64_t))v12);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1ABF366E0;
  *(_QWORD *)(v15 + 32) = 4;
  *(_OWORD *)(v15 + 40) = 0u;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_QWORD *)(v15 + 72) = 0;
  *(_BYTE *)(v15 + 80) = 9;
  *(_QWORD *)(v15 + 88) = v77[47];
  *(_BYTE *)(v15 + 136) = 5;
  *(_QWORD *)(v13 + 96) = v15;
  *(_BYTE *)(v13 + 153) = 5;
  *(_QWORD *)(v13 + 160) = 3;
  *(_OWORD *)(v13 + 168) = 0u;
  *(_OWORD *)(v13 + 184) = 0u;
  *(_QWORD *)(v13 + 200) = 0;
  *(_BYTE *)(v13 + 208) = 9;
  *(_BYTE *)(v13 + 217) = 4;
  *(_OWORD *)(v13 + 240) = 0u;
  *(_OWORD *)(v13 + 256) = 0u;
  *(_OWORD *)(v13 + 224) = 0u;
  *(_BYTE *)(v13 + 272) = 9;
  *(_BYTE *)(v13 + 281) = 4;
  *(_QWORD *)(v13 + 288) = v11;
  sub_1ABD07E04(v6, v13 + 296);
  *(_BYTE *)(v13 + 336) = 0;
  *(_BYTE *)(v13 + 345) = 4;
  v67 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(v13 + 352) = v67;
  *(_BYTE *)(v13 + 400) = 3;
  v16 = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v13 + 409) = 4;
  *(_QWORD *)(v13 + 416) = v16;
  *(_BYTE *)(v13 + 473) = 0;
  *(_QWORD *)(v13 + 480) = v16;
  *(_BYTE *)(v13 + 537) = 1;
  v17 = v11;
  sub_1ABD0B24C((uint64_t)&v67);
  sub_1ABD7DDF4((uint64_t)v77);
  v18 = sub_1ABE6431C(v5, v13, 1);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v19 = v18[2];
  if (v19)
  {
    sub_1ABF2FF5C();
    v20 = *((_OWORD *)v18 + 9);
    v61 = *((_OWORD *)v18 + 8);
    v62 = v20;
    v21 = *((_OWORD *)v18 + 11);
    v63 = *((_OWORD *)v18 + 10);
    v64 = v21;
    v22 = *((_OWORD *)v18 + 5);
    v57 = *((_OWORD *)v18 + 4);
    v58 = v22;
    v23 = *((_OWORD *)v18 + 7);
    v59 = *((_OWORD *)v18 + 6);
    v60 = v23;
    v24 = *((_OWORD *)v18 + 3);
    v54 = v18;
    v55 = *((_OWORD *)v18 + 2);
    v56 = v24;
    v78 = v19 - 1;
    v25 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    for (i = 24; ; i += 20)
    {
      sub_1ABDEA124((uint64_t)&v56 + 8, (uint64_t)v65);
      v74 = v65[6];
      v75 = v65[7];
      v76 = v66;
      v70 = v65[2];
      v71 = v65[3];
      v72 = v65[4];
      v73 = v65[5];
      v68 = v65[0];
      v69 = v65[1];
      v27 = v55;
      sub_1ABD97E18((uint64_t)&v55);
      sub_1ABD97ECC((uint64_t)&v56 + 8);
      sub_1ABF2FF5C();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v30 = sub_1ABD9A4D0((unint64_t *)&v68);
      v31 = v25[2];
      v32 = (v29 & 1) == 0;
      v33 = v31 + v32;
      if (__OFADD__(v31, v32))
        break;
      v34 = v29;
      if (v25[3] >= v33)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1ABE6F6CC();
      }
      else
      {
        sub_1ABE6B8A0(v33, isUniquelyReferenced_nonNull_native);
        v35 = sub_1ABD9A4D0((unint64_t *)&v68);
        if ((v34 & 1) != (v36 & 1))
          goto LABEL_23;
        v30 = v35;
      }
      swift_bridgeObjectRelease();
      if ((v34 & 1) != 0)
      {
        sub_1ABF2FF5C();
      }
      else
      {
        v25[(v30 >> 6) + 8] |= 1 << v30;
        v37 = v25[6] + 136 * v30;
        v38 = v75;
        *(_OWORD *)(v37 + 96) = v74;
        *(_OWORD *)(v37 + 112) = v38;
        *(_QWORD *)(v37 + 128) = v76;
        v39 = v71;
        *(_OWORD *)(v37 + 32) = v70;
        *(_OWORD *)(v37 + 48) = v39;
        v40 = v73;
        *(_OWORD *)(v37 + 64) = v72;
        *(_OWORD *)(v37 + 80) = v40;
        v41 = v69;
        *(_OWORD *)v37 = v68;
        *(_OWORD *)(v37 + 16) = v41;
        *(_QWORD *)(v25[7] + 8 * v30) = MEMORY[0x1E0DEE9D8];
        v42 = v25[2];
        v43 = v42 + 1;
        v44 = __OFADD__(v42, 1);
        sub_1ABF2FF5C();
        if (v44)
          goto LABEL_22;
        v25[2] = v43;
        sub_1ABD97ECC((uint64_t)v65);
      }
      swift_bridgeObjectRelease();
      sub_1ABEACD54(v27);
      sub_1ABD97F60((uint64_t)&v56 + 8);
      sub_1ABDFCC34((uint64_t)&v55);
      if (!v78)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      v45 = *(_OWORD *)&v54[i + 2];
      v55 = *(_OWORD *)&v54[i];
      v56 = v45;
      v46 = *(_OWORD *)&v54[i + 4];
      v47 = *(_OWORD *)&v54[i + 6];
      v48 = *(_OWORD *)&v54[i + 10];
      v59 = *(_OWORD *)&v54[i + 8];
      v60 = v48;
      v57 = v46;
      v58 = v47;
      v49 = *(_OWORD *)&v54[i + 12];
      v50 = *(_OWORD *)&v54[i + 14];
      v51 = *(_OWORD *)&v54[i + 18];
      v63 = *(_OWORD *)&v54[i + 16];
      v64 = v51;
      v61 = v49;
      v62 = v50;
      --v78;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_1ABF3229C();
    __break(1u);
  }
  else
  {
    v25 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_20:
    swift_bridgeObjectRelease();
    *(_QWORD *)&v55 = v25;
    sub_1ABE440C8(0, &qword_1ED347170, (void (*)(uint64_t))sub_1ABE41D34);
    swift_allocObject();
    v52 = sub_1ABF311E0();

    return v52;
  }
  return result;
}

uint64_t sub_1ABE622C0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  _OWORD v24[10];
  _QWORD v25[3];
  uint64_t v26;
  __int128 v27;
  _OWORD v28[9];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[9];
  _BYTE v52[16];
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;

  v55 = a4;
  v7 = a1[7];
  v51[5] = a1[6];
  v51[6] = v7;
  v8 = a1[9];
  v51[7] = a1[8];
  v51[8] = v8;
  v9 = a1[3];
  v51[1] = a1[2];
  v51[2] = v9;
  v10 = a1[5];
  v51[3] = a1[4];
  v51[4] = v10;
  v11 = a1[1];
  v50 = *a1;
  v51[0] = v11;
  sub_1ABDEA124((uint64_t)v51 + 8, (uint64_t)v52);
  v39 = v50;
  sub_1ABD97ECC((uint64_t)v51 + 8);
  sub_1ABF2FF5C();
  sub_1ABDF6840(&v39);
  if (v4)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    v12 = *((_QWORD *)&v50 + 1);
    v13 = *(_QWORD *)&v51[0];
    v14 = v39;
    v25[0] = v39;
    v25[1] = *((_QWORD *)&v50 + 1);
    v25[2] = *(_QWORD *)&v51[0];
    sub_1ABDEA124((uint64_t)v51 + 8, (uint64_t)&v26);
    *(_QWORD *)&v40 = a2;
    sub_1ABD97ECC((uint64_t)v51 + 8);
    sub_1ABF2FF5C();
    v15 = sub_1ABDF344C(v14);
    sub_1ABD97ECC((uint64_t)v51 + 8);
    sub_1ABF2FF5C();
    sub_1ABDFCC34((uint64_t)v25);
    *(_QWORD *)&v27 = v15;
    *((_QWORD *)&v27 + 1) = v12;
    *(_QWORD *)&v28[0] = v13;
    sub_1ABDEA124((uint64_t)v51 + 8, (uint64_t)v28 + 8);
    v35 = v28[5];
    v36 = v28[6];
    v37 = v28[7];
    v38 = v28[8];
    v31 = v28[1];
    v32 = v28[2];
    v33 = v28[3];
    v34 = v28[4];
    v29 = v27;
    v30 = v28[0];
    LOBYTE(v24[0]) = a3;
    StockNewsFeed.sorted(_:)((unsigned __int8 *)v24);
    sub_1ABDFCC34((uint64_t)&v27);
    v35 = v46;
    v36 = v47;
    v37 = v48;
    v38 = v49;
    v31 = v42;
    v32 = v43;
    v33 = v44;
    v34 = v45;
    v29 = v40;
    v30 = v41;
    if (qword_1ED34E660 != -1)
      swift_once();
    v16 = sub_1ABF3133C();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED34E648);
    sub_1ABD97ECC((uint64_t)v51 + 8);
    sub_1ABD97E18((uint64_t)&v50);
    sub_1ABD97E18((uint64_t)&v29);
    v17 = sub_1ABF31324();
    v18 = sub_1ABF31BF4();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      *(_DWORD *)v19 = 134218498;
      *(_QWORD *)&v24[0] = v23;
      sub_1ABF31D80();
      sub_1ABDFCC34((uint64_t)&v50);
      *(_WORD *)(v19 + 12) = 2048;
      sub_1ABF31D80();
      sub_1ABDFCC34((uint64_t)&v29);
      *(_WORD *)(v19 + 22) = 2082;
      v21 = v53;
      v20 = v54;
      sub_1ABF2FF5C();
      sub_1ABD1FE2C(v21, v20, (uint64_t *)v24);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      sub_1ABD97F60((uint64_t)v51 + 8);
      sub_1ABD97F60((uint64_t)v51 + 8);
      _os_log_impl(&dword_1ABCEF000, v17, v18, "stock feed service pared %ld headlines down to %ld for %{public}s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v23, -1, -1);
      MEMORY[0x1AF438FFC](v19, -1, -1);
    }
    else
    {
      sub_1ABDFCC34((uint64_t)&v50);
      sub_1ABDFCC34((uint64_t)&v29);
      sub_1ABD97F60((uint64_t)v51 + 8);
      sub_1ABD97F60((uint64_t)v51 + 8);
    }

    v24[6] = v35;
    v24[7] = v36;
    v24[8] = v37;
    v24[9] = v38;
    v24[2] = v31;
    v24[3] = v32;
    v24[4] = v33;
    v24[5] = v34;
    v24[0] = v29;
    v24[1] = v30;
    nullsub_2(v24);
    return sub_1ABE64590((uint64_t)v24, v55);
  }
  return result;
}

uint64_t sub_1ABE62694(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t ObjectType;
  void *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v8 = a1[7];
  v35 = a1[6];
  v36 = v8;
  v37 = *((_QWORD *)a1 + 16);
  v9 = a1[3];
  v31 = a1[2];
  v32 = v9;
  v10 = a1[5];
  v33 = a1[4];
  v34 = v10;
  v11 = a1[1];
  v29 = *a1;
  v30 = v11;
  v12 = v4[10];
  v13 = v4[11];
  __swift_project_boxed_opaque_existential_1(v4 + 7, v12);
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1ABF366C0;
  v15 = *((_QWORD *)&v30 + 1);
  *(_QWORD *)(v14 + 32) = v30;
  *(_QWORD *)(v14 + 40) = v15;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8);
  sub_1ABF2FF5C();
  v16(v14, 1, v12, v13);
  swift_bridgeObjectRelease();
  v17 = v4[13];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v17 + 24))(ObjectType, v17);
  v19 = (void *)sub_1ABF31114();
  sub_1ABF31108();
  swift_release();
  swift_release();

  v20 = swift_allocObject();
  v21 = a1[4];
  *(_OWORD *)(v20 + 104) = a1[5];
  v22 = a1[7];
  *(_OWORD *)(v20 + 120) = a1[6];
  *(_OWORD *)(v20 + 136) = v22;
  v23 = *a1;
  *(_OWORD *)(v20 + 40) = a1[1];
  v24 = a1[3];
  *(_OWORD *)(v20 + 56) = a1[2];
  *(_OWORD *)(v20 + 72) = v24;
  *(_OWORD *)(v20 + 88) = v21;
  *(_QWORD *)(v20 + 16) = v4;
  v25 = *((_QWORD *)a1 + 16);
  *(_OWORD *)(v20 + 24) = v23;
  *(_QWORD *)(v20 + 152) = v25;
  *(_QWORD *)(v20 + 160) = a3;
  *(_BYTE *)(v20 + 168) = a4 & 1;
  sub_1ABF2FF68();
  sub_1ABD97ECC((uint64_t)&v29);
  v26 = (void *)sub_1ABF31114();
  sub_1ABD33E04();
  v27 = sub_1ABF3118C();
  swift_release();
  swift_release();

  return v27;
}

uint64_t sub_1ABE62890(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v44;
  id v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50[4];
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  v12 = a1[4];
  v11 = (void *)a1[5];
  v13 = qword_1ED34E660;
  sub_1ABF2FF5C();
  v14 = v7;
  sub_1ABF2FF5C();
  v49 = v9;
  sub_1ABF2FF5C();
  v48 = v10;
  sub_1ABF2FF5C();
  v47 = v12;
  sub_1ABF2FF5C();
  v44 = v11;
  if (v13 != -1)
    goto LABEL_13;
  while (1)
  {
    v15 = sub_1ABF3133C();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED34E648);
    swift_bridgeObjectRetain_n();
    v16 = sub_1ABF31324();
    v17 = sub_1ABF31BF4();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      *(_QWORD *)&v50[0] = v39;
      *(_DWORD *)v18 = 136446210;
      v40 = v14;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABF2FF5C();
      v19 = sub_1ABF31630();
      v21 = v20;
      swift_bridgeObjectRelease();
      v22 = v19;
      v14 = v40;
      v56 = sub_1ABD1FE2C(v22, v21, (uint64_t *)v50);
      sub_1ABF31D80();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1ABCEF000, v16, v17, "Fetching headlines for feed ids %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v39, -1, -1);
      MEMORY[0x1AF438FFC](v18, -1, -1);

    }
    else
    {

      v23 = swift_bridgeObjectRelease_n();
    }
    if (!*(_QWORD *)(v8 + 16))
      break;
    if ((a6 & 1) != 0)
    {
      v37 = a3[17];
      v38 = a3[18];
      __swift_project_boxed_opaque_existential_1(a3 + 14, v37);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v38 + 8))(v50, v37, v38);
      v23 = sub_1ABD7DDF4((uint64_t)v50);
      if ((v51 & 0x8000000000000000) == 0)
      {
LABEL_8:
        MEMORY[0x1E0C80A78](v23);
        sub_1ABD04578(0, &qword_1ED34CA98, (uint64_t)&type metadata for StockNewsFeed, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1ABF3127C();
        swift_bridgeObjectRelease();
        v24 = swift_allocObject();
        v25 = *(_OWORD *)(a4 + 64);
        *(_OWORD *)(v24 + 104) = *(_OWORD *)(a4 + 80);
        v26 = *(_OWORD *)(a4 + 112);
        *(_OWORD *)(v24 + 120) = *(_OWORD *)(a4 + 96);
        *(_OWORD *)(v24 + 136) = v26;
        v27 = *(_OWORD *)a4;
        *(_OWORD *)(v24 + 40) = *(_OWORD *)(a4 + 16);
        v28 = *(_OWORD *)(a4 + 48);
        *(_OWORD *)(v24 + 56) = *(_OWORD *)(a4 + 32);
        *(_OWORD *)(v24 + 72) = v28;
        *(_OWORD *)(v24 + 88) = v25;
        *(_QWORD *)(v24 + 16) = a3;
        v29 = *(_QWORD *)(a4 + 128);
        *(_OWORD *)(v24 + 24) = v27;
        *(_QWORD *)(v24 + 152) = v29;
        *(_QWORD *)(v24 + 160) = a2;
        *(_QWORD *)(v24 + 168) = v14;
        *(_QWORD *)(v24 + 176) = v49;
        *(_QWORD *)(v24 + 184) = v48;
        *(_QWORD *)(v24 + 192) = v47;
        *(_QWORD *)(v24 + 200) = v44;
        sub_1ABF2FF68();
        sub_1ABD97ECC(a4);
        sub_1ABF2FF68();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        v45 = v44;
        v30 = (void *)sub_1ABF31114();
        sub_1ABD33E04();
        v31 = sub_1ABF31174();
        swift_release();
        swift_release();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    else if ((a5 & 0x8000000000000000) == 0)
    {
      goto LABEL_8;
    }
    sub_1ABF31FC0();
    __break(1u);
LABEL_13:
    swift_once();
  }
  swift_bridgeObjectRelease();
  v32 = *(_OWORD *)(a4 + 112);
  v53 = *(_OWORD *)(a4 + 96);
  v54 = v32;
  v55 = *(_QWORD *)(a4 + 128);
  v33 = *(_OWORD *)(a4 + 48);
  v50[2] = *(_OWORD *)(a4 + 32);
  v50[3] = v33;
  v34 = *(_OWORD *)(a4 + 80);
  v51 = *(_OWORD *)(a4 + 64);
  v52 = v34;
  v35 = *(_OWORD *)(a4 + 16);
  v50[0] = *(_OWORD *)a4;
  v50[1] = v35;
  v31 = sub_1ABE62D98(v50);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1ABE62D98(__int128 *a1)
{
  _QWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v2 = a1[6];
  v32 = a1[7];
  v33 = *((_QWORD *)a1 + 16);
  v3 = a1[3];
  v27 = a1[2];
  v28 = v3;
  v4 = a1[4];
  v30 = a1[5];
  v31 = v2;
  v29 = v4;
  v5 = a1[1];
  v25 = *a1;
  v26 = v5;
  v6 = v1[24];
  v7 = v1[25];
  __swift_project_boxed_opaque_existential_1(v1 + 21, v6);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7) & 1) != 0)
  {
    if (qword_1ED34E660 != -1)
      swift_once();
    v8 = sub_1ABF3133C();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED34E648);
    sub_1ABD97ECC((uint64_t)&v25);
    v9 = sub_1ABF31324();
    v10 = sub_1ABF31BF4();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v23 = v12;
      *(_DWORD *)v11 = 136446210;
      v13 = v26;
      sub_1ABF2FF5C();
      sub_1ABD1FE2C(v13, *((unint64_t *)&v13 + 1), &v23);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      sub_1ABD97F60((uint64_t)&v25);
      _os_log_impl(&dword_1ABCEF000, v9, v10, "stock feed service checking for bilingual headlines for %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v12, -1, -1);
      MEMORY[0x1AF438FFC](v11, -1, -1);
    }
    else
    {
      sub_1ABD97F60((uint64_t)&v25);
    }

    MEMORY[0x1E0C80A78](v15);
    sub_1ABE64764();
    sub_1ABF3127C();
    v16 = swift_allocObject();
    v17 = v32;
    *(_OWORD *)(v16 + 112) = v31;
    *(_OWORD *)(v16 + 128) = v17;
    *(_QWORD *)(v16 + 144) = v33;
    v18 = v28;
    *(_OWORD *)(v16 + 48) = v27;
    *(_OWORD *)(v16 + 64) = v18;
    v19 = v30;
    *(_OWORD *)(v16 + 80) = v29;
    *(_OWORD *)(v16 + 96) = v19;
    v20 = v26;
    *(_OWORD *)(v16 + 16) = v25;
    *(_OWORD *)(v16 + 32) = v20;
    sub_1ABD97ECC((uint64_t)&v25);
    v21 = (void *)sub_1ABF31114();
    sub_1ABD33E04();
    v14 = sub_1ABF3118C();
    swift_release();
    swift_release();

  }
  else
  {
    v23 = MEMORY[0x1E0DEE9D8];
    v24 = 0;
    sub_1ABE440C8(0, (unint64_t *)&unk_1ED34DD40, (void (*)(uint64_t))sub_1ABD33E04);
    swift_allocObject();
    return sub_1ABF311E0();
  }
  return v14;
}

uint64_t sub_1ABE630C4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[136];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[8];
  uint64_t v40;
  _QWORD v41[390];
  _BYTE v42[152];

  v27 = a2;
  v28 = a4;
  v8 = *(_OWORD *)(a3 + 112);
  v36 = *(_OWORD *)(a3 + 96);
  v37 = v8;
  v38 = *(_QWORD *)(a3 + 128);
  v9 = *(_OWORD *)(a3 + 48);
  v32 = *(_OWORD *)(a3 + 32);
  v33 = v9;
  v10 = *(_OWORD *)(a3 + 80);
  v34 = *(_OWORD *)(a3 + 64);
  v35 = v10;
  v11 = *(_OWORD *)(a3 + 16);
  v30 = *(_OWORD *)a3;
  v31 = v11;
  v12 = sub_1ABF30760();
  v26 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = a1[5];
  v25 = a1[6];
  v24 = __swift_project_boxed_opaque_existential_1(a1 + 2, v18);
  v39[6] = v36;
  v39[7] = v37;
  v40 = v38;
  v39[2] = v32;
  v39[3] = v33;
  v39[4] = v34;
  v39[5] = v35;
  v39[0] = v30;
  v39[1] = v31;
  nullsub_2(v39);
  sub_1ABDEA124((uint64_t)v39, (uint64_t)v29);
  sub_1ABD97ECC(a3);
  sub_1ABF30754();
  v20 = a5[17];
  v19 = a5[18];
  __swift_project_boxed_opaque_existential_1(a5 + 14, v20);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v19 + 8))(v41, v20, v19);
  sub_1ABD7DDF4((uint64_t)v41);
  sub_1ABF306C4();
  v21 = *(void (**)(char *, uint64_t))(v26 + 8);
  v21(v14, v12);
  v22 = sub_1ABDF61A4(v27, (uint64_t)v29, v28, (uint64_t)v17, v18, v25);
  v21(v17, v12);
  sub_1ABDEA124((uint64_t)v29, (uint64_t)v42);
  sub_1ABD97F60((uint64_t)v42);
  return v22;
}

uint64_t sub_1ABE632A0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(__int128 *__return_ptr, uint64_t, uint64_t);
  __int128 v19;
  uint64_t v20;
  id v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  id v51;
  uint64_t v53;
  char v54;
  _QWORD v55[3];
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66[8];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  _OWORD v72[9];
  uint64_t v73[3];
  uint64_t v74;

  v6 = *(_OWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v7)
    goto LABEL_10;
  v8 = v6[4];
  v72[0] = v6[3];
  v9 = v6[5];
  v10 = v6[6];
  v11 = v6[8];
  v72[4] = v6[7];
  v72[3] = v10;
  v72[2] = v9;
  v72[1] = v8;
  v12 = v6[10];
  v13 = v6[9];
  v72[8] = v6[11];
  v72[7] = v12;
  v72[6] = v13;
  v72[5] = v11;
  v71 = v6[2];
  if (!*(_QWORD *)(v71 + 16))
  {
LABEL_10:
    v44 = *(_OWORD *)(a3 + 112);
    v66[6] = *(_OWORD *)(a3 + 96);
    v66[7] = v44;
    v67 = *(_QWORD *)(a3 + 128);
    v45 = *(_OWORD *)(a3 + 48);
    v66[2] = *(_OWORD *)(a3 + 32);
    v66[3] = v45;
    v46 = *(_OWORD *)(a3 + 80);
    v66[4] = *(_OWORD *)(a3 + 64);
    v66[5] = v46;
    v47 = *(_OWORD *)(a3 + 16);
    v66[0] = *(_OWORD *)a3;
    v66[1] = v47;
    return sub_1ABE62D98(v66);
  }
  v74 = v5;
  v50 = (uint64_t)(a4 + 14);
  v16 = a4[17];
  v17 = a4[18];
  __swift_project_boxed_opaque_existential_1(a4 + 14, v16);
  v18 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v17 + 8);
  sub_1ABD97E18((uint64_t)&v71);
  v18(v66, v16, v17);
  sub_1ABE64284();
  v19 = *(_OWORD *)(a5 + 16);
  v63 = *(_OWORD *)a5;
  v64 = v19;
  v65 = *(_QWORD *)(a5 + 32);
  v20 = a4[19];
  swift_getObjectType();
  sub_1ABE642C0(a5);
  swift_unknownObjectRetain();
  v21 = sub_1ABEA4CDC(&v63, v20);
  v22 = MEMORY[0x1E0DED1E8];
  sub_1ABD04578(0, &qword_1ED34E310, (uint64_t)&type metadata for NewsFeedFilterOptions.Option, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1ABF3C150;
  v24 = v69;
  *(_QWORD *)(v23 + 32) = v68;
  *(_QWORD *)(v23 + 40) = v24;
  *(_BYTE *)(v23 + 89) = 3;
  sub_1ABD04578(0, &qword_1ED34E2F8, (uint64_t)&type metadata for HeadlineCondition, (uint64_t (*)(_QWORD, uint64_t))v22);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1ABF366E0;
  *(_QWORD *)(v25 + 32) = 4;
  *(_OWORD *)(v25 + 40) = 0u;
  *(_OWORD *)(v25 + 56) = 0u;
  *(_QWORD *)(v25 + 72) = 0;
  *(_BYTE *)(v25 + 80) = 9;
  *(_QWORD *)(v25 + 88) = v70;
  *(_BYTE *)(v25 + 136) = 5;
  *(_QWORD *)(v23 + 96) = v25;
  *(_BYTE *)(v23 + 153) = 5;
  *(_QWORD *)(v23 + 160) = 3;
  *(_OWORD *)(v23 + 168) = 0u;
  *(_OWORD *)(v23 + 184) = 0u;
  *(_QWORD *)(v23 + 200) = 0;
  *(_BYTE *)(v23 + 208) = 9;
  *(_BYTE *)(v23 + 217) = 4;
  *(_OWORD *)(v23 + 240) = 0u;
  *(_OWORD *)(v23 + 256) = 0u;
  *(_OWORD *)(v23 + 224) = 0u;
  *(_BYTE *)(v23 + 272) = 9;
  *(_BYTE *)(v23 + 281) = 4;
  *(_QWORD *)(v23 + 288) = v21;
  sub_1ABD07E04(v50, v23 + 296);
  *(_BYTE *)(v23 + 336) = 0;
  *(_BYTE *)(v23 + 345) = 4;
  v73[0] = *(_QWORD *)(a5 + 8);
  *(_QWORD *)(v23 + 352) = v73[0];
  *(_BYTE *)(v23 + 400) = 3;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v23 + 409) = 4;
  *(_QWORD *)(v23 + 416) = v26;
  *(_BYTE *)(v23 + 473) = 0;
  *(_QWORD *)(v23 + 480) = v26;
  *(_BYTE *)(v23 + 537) = 1;
  v51 = v21;
  sub_1ABD0B24C((uint64_t)v73);
  sub_1ABD7DDF4((uint64_t)v66);
  sub_1ABF2FF5C();
  v27 = 32;
  do
  {
    *(_QWORD *)&v63 = v26;
    sub_1ABF2FF5C();
    v28 = sub_1ABF2FF5C();
    sub_1ABEACD54(v28);
    swift_bridgeObjectRelease();
    v26 = v63;
    v27 += 160;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  v29 = *((_QWORD *)&v71 + 1);
  v30 = *(_QWORD *)&v72[0];
  sub_1ABF2FF5C();
  sub_1ABD97ECC((uint64_t)v72 + 8);
  sub_1ABDFCC34((uint64_t)&v71);
  *(_QWORD *)&v63 = v26;
  *((_QWORD *)&v63 + 1) = v29;
  *(_QWORD *)&v64 = v30;
  sub_1ABDEA124((uint64_t)v72 + 8, (uint64_t)&v64 + 8);
  v62 = v26;
  sub_1ABF2FF5C();
  v31 = v74;
  sub_1ABDF6840(&v62);
  if (!v31)
  {
    v32 = v62;
    v60[0] = v62;
    v60[1] = v29;
    v60[2] = v30;
    sub_1ABDEA124((uint64_t)v72 + 8, (uint64_t)&v61);
    v57[0] = v23;
    sub_1ABF2FF5C();
    sub_1ABD97ECC((uint64_t)v72 + 8);
    v33 = sub_1ABDF344C(v32);
    sub_1ABF2FF5C();
    sub_1ABD97ECC((uint64_t)v72 + 8);
    sub_1ABDFCC34((uint64_t)v60);
    swift_bridgeObjectRelease();
    v59 = v33;
    sub_1ABF2FF5C();
    sub_1ABDF6824(&v59);
    v55[0] = v33;
    v55[1] = v29;
    v55[2] = v30;
    sub_1ABDEA124((uint64_t)v72 + 8, (uint64_t)&v56);
    v34 = v59;
    sub_1ABF2FF5C();
    sub_1ABD97ECC((uint64_t)v72 + 8);
    sub_1ABDFCC34((uint64_t)v55);
    v57[0] = v34;
    v57[1] = v29;
    v57[2] = v30;
    sub_1ABDEA124((uint64_t)v72 + 8, (uint64_t)&v58);
    if (qword_1ED34E660 != -1)
      swift_once();
    v35 = sub_1ABF3133C();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED34E648);
    sub_1ABD97E18((uint64_t)v57);
    sub_1ABD97ECC(a3);
    sub_1ABD97E18((uint64_t)v57);
    sub_1ABD97ECC(a3);
    sub_1ABD97E18((uint64_t)&v63);
    v36 = sub_1ABF31324();
    v37 = sub_1ABF31BF4();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v74 = v34;
      v39 = v38;
      v40 = swift_slowAlloc();
      v53 = v40;
      *(_DWORD *)v39 = 134218498;
      sub_1ABDFCC34((uint64_t)&v63);
      sub_1ABF31D80();
      sub_1ABDFCC34((uint64_t)&v63);
      *(_WORD *)(v39 + 12) = 2048;
      sub_1ABDFCC34((uint64_t)v57);
      sub_1ABF31D80();
      sub_1ABDFCC34((uint64_t)v57);
      *(_WORD *)(v39 + 22) = 2082;
      v42 = *(_QWORD *)(a3 + 16);
      v41 = *(_QWORD *)(a3 + 24);
      sub_1ABF2FF5C();
      sub_1ABD1FE2C(v42, v41, &v53);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      sub_1ABD97F60(a3);
      sub_1ABD97F60(a3);
      _os_log_impl(&dword_1ABCEF000, v36, v37, "stock feed service pared %ld headlines down to %ld for %{public}s", (uint8_t *)v39, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v40, -1, -1);
      v43 = v39;
      v34 = v74;
      MEMORY[0x1AF438FFC](v43, -1, -1);
    }
    else
    {
      sub_1ABDFCC34((uint64_t)v57);
      sub_1ABDFCC34((uint64_t)&v63);
      sub_1ABDFCC34((uint64_t)&v63);
      sub_1ABDFCC34((uint64_t)v57);
      sub_1ABD97F60(a3);
      sub_1ABD97F60(a3);
    }

    v53 = v34;
    v54 = 0;
    sub_1ABE440C8(0, (unint64_t *)&unk_1ED34DD40, (void (*)(uint64_t))sub_1ABD33E04);
    swift_allocObject();
    sub_1ABF2FF5C();
    v48 = sub_1ABF311E0();

    sub_1ABDFCC34((uint64_t)v57);
    return v48;
  }
  swift_release();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1ABE6396C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t ObjectType;
  void *v11;
  uint64_t v12;

  v4 = a1[10];
  v5 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v4);
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1ABF366C0;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v6 + 40) = v7;
  v8 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 8);
  sub_1ABF2FF5C();
  v8(v6, 0, v4, v5);
  swift_bridgeObjectRelease();
  v9 = a1[13];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9);
  v11 = (void *)sub_1ABF31114();
  v12 = sub_1ABF31108();
  swift_release();
  swift_release();

  return v12;
}

uint64_t sub_1ABE63A7C(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    MEMORY[0x1E0C80A78](a1);
    sub_1ABD04578(0, &qword_1ED34CA98, (uint64_t)&type metadata for StockNewsFeed, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABF3127C();
    v1 = (void *)sub_1ABF31114();
    sub_1ABD33E04();
    v2 = sub_1ABF31174();
    swift_release();

  }
  else
  {
    sub_1ABE440C8(0, (unint64_t *)&unk_1ED34DD40, (void (*)(uint64_t))sub_1ABD33E04);
    swift_allocObject();
    return sub_1ABF311E0();
  }
  return v2;
}

uint64_t sub_1ABE63BA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[390];
  _BYTE v35[136];
  _BYTE v36[136];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _OWORD v46[8];
  uint64_t v47;
  _QWORD v48[8];
  uint64_t v49;

  MEMORY[0x1E0C80A78](a1);
  v2 = v1;
  v33 = v3;
  v5 = v4;
  v6 = *(_OWORD *)(v1 + 112);
  v43 = *(_OWORD *)(v1 + 96);
  v44 = v6;
  v45 = *(_QWORD *)(v1 + 128);
  v7 = *(_OWORD *)(v1 + 48);
  v39 = *(_OWORD *)(v1 + 32);
  v40 = v7;
  v8 = *(_OWORD *)(v1 + 64);
  v42 = *(_OWORD *)(v1 + 80);
  v41 = v8;
  v9 = *(_OWORD *)v1;
  v38 = *(_OWORD *)(v1 + 16);
  v37 = v9;
  v32 = sub_1ABF30760();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v31 = (char *)v27 - v13;
  v14 = v5[5];
  v28 = v5[6];
  v29 = v14;
  v27[1] = __swift_project_boxed_opaque_existential_1(v5 + 2, v14);
  v46[6] = v43;
  v46[7] = v44;
  v47 = v45;
  v46[2] = v39;
  v46[3] = v40;
  v46[5] = v42;
  v46[4] = v41;
  v46[1] = v38;
  v46[0] = v37;
  nullsub_2(v46);
  sub_1ABDEA124((uint64_t)v46, (uint64_t)v36);
  v15 = v5 + 14;
  v16 = v5[17];
  v17 = v5[18];
  __swift_project_boxed_opaque_existential_1(v5 + 14, v16);
  v18 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 8);
  sub_1ABD97ECC(v2);
  v18(v48, v16, v17);
  sub_1ABD7DDF4((uint64_t)v48);
  v19 = v49;
  if (v49 < 0)
  {
    result = sub_1ABF31FC0();
    __break(1u);
  }
  else
  {
    sub_1ABF30754();
    v20 = v5[17];
    v21 = v5[18];
    __swift_project_boxed_opaque_existential_1(v15, v20);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v21 + 8))(v34, v20, v21);
    sub_1ABD7DDF4((uint64_t)v34);
    v22 = (uint64_t)v31;
    sub_1ABF306C4();
    v23 = *(void (**)(char *, uint64_t))(v30 + 8);
    v24 = v32;
    v23(v11, v32);
    v25 = sub_1ABDF61A4(v33, (uint64_t)v36, v19, v22, v29, v28);
    v23((char *)v22, v24);
    sub_1ABDEA124((uint64_t)v36, (uint64_t)v35);
    sub_1ABD97F60((uint64_t)v35);
    return v25;
  }
  return result;
}

uint64_t sub_1ABE63E58()
{
  sub_1ABE440C8(0, (unint64_t *)&unk_1ED34DD40, (void (*)(uint64_t))sub_1ABD33E04);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE63EF0(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ABE62694(a1, a2, a3, a4 & 1);
}

uint64_t sub_1ABE63F14(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ABE61650(a1, a2, a3, a4 & 1);
}

uint64_t sub_1ABE63F38()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE63F64(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABE617B8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_QWORD **)(v2 + 40));
}

uint64_t sub_1ABE63F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  _OWORD v30[8];
  uint64_t v31;
  uint64_t v32;

  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v28 = (unint64_t)(v5 + 63) >> 6;
  v27 = a3 + 32;
  result = sub_1ABF2FF5C();
  v9 = 0;
LABEL_5:
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v9 << 6);
LABEL_22:
    v16 = *(_QWORD *)(a3 + 16);
    if (v16)
    {
      v17 = (unint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v12);
      v19 = *v17;
      v18 = v17[1];
      v20 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v12);
      v21 = v27;
      while (1)
      {
        v22 = *(_OWORD *)(v21 + 112);
        v30[6] = *(_OWORD *)(v21 + 96);
        v30[7] = v22;
        v31 = *(_QWORD *)(v21 + 128);
        v23 = *(_OWORD *)(v21 + 48);
        v30[2] = *(_OWORD *)(v21 + 32);
        v30[3] = v23;
        v24 = *(_OWORD *)(v21 + 80);
        v30[4] = *(_OWORD *)(v21 + 64);
        v30[5] = v24;
        v25 = *(_OWORD *)(v21 + 16);
        v30[0] = *(_OWORD *)v21;
        v30[1] = v25;
        if (v25 == __PAIR128__(v18, v19))
          break;
        result = sub_1ABF3223C();
        if ((result & 1) != 0)
          break;
        v21 += 136;
        if (!--v16)
          goto LABEL_5;
      }
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      sub_1ABD97ECC((uint64_t)v30);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v32 = a1;
      sub_1ABDF1408(v20, (unint64_t *)v30, isUniquelyReferenced_nonNull_native);
      a1 = v32;
      swift_bridgeObjectRelease();
      sub_1ABD97F60((uint64_t)v30);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
  }
  v13 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v13 >= v28)
    goto LABEL_28;
  v14 = *(_QWORD *)(v26 + 8 * v13);
  ++v9;
  if (v14)
    goto LABEL_21;
  v9 = v13 + 1;
  if (v13 + 1 >= v28)
    goto LABEL_28;
  v14 = *(_QWORD *)(v26 + 8 * v9);
  if (v14)
    goto LABEL_21;
  v9 = v13 + 2;
  if (v13 + 2 >= v28)
    goto LABEL_28;
  v14 = *(_QWORD *)(v26 + 8 * v9);
  if (v14)
    goto LABEL_21;
  v9 = v13 + 3;
  if (v13 + 3 >= v28)
    goto LABEL_28;
  v14 = *(_QWORD *)(v26 + 8 * v9);
  if (v14)
    goto LABEL_21;
  v15 = v13 + 4;
  if (v15 >= v28)
  {
LABEL_28:
    swift_release();
    return a1;
  }
  v14 = *(_QWORD *)(v26 + 8 * v15);
  v9 = v15;
  if (v14)
  {
LABEL_21:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v28)
      goto LABEL_28;
    v14 = *(_QWORD *)(v26 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1ABE64200()
{
  uint64_t v0;

  return sub_1ABE61C40(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40));
}

uint64_t sub_1ABE6421C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1ABE64268(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABE61D88(a1, *(_QWORD **)(v1 + 16), v1 + 24);
}

unint64_t sub_1ABE64284()
{
  unint64_t result;

  result = qword_1ED34E0B8;
  if (!qword_1ED34E0B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED34E0B8);
  }
  return result;
}

uint64_t sub_1ABE642C0(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v3 = v2;
  return a1;
}

_QWORD *sub_1ABE6431C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD *v14;
  uint64_t i;
  unint64_t v16;
  unint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v32[10];
  _BYTE v33[160];
  uint64_t v34[20];
  _BYTE v35[160];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v8 = (_OWORD *)sub_1ABF2FF5C();
  v9 = v8[9];
  v52 = v8[8];
  v53 = v9;
  v10 = v8[11];
  v54 = v8[10];
  v55 = v10;
  v11 = v8[5];
  v48 = v8[4];
  v49 = v11;
  v12 = v8[7];
  v50 = v8[6];
  v51 = v12;
  v13 = v8[3];
  v46 = v8[2];
  v47 = v13;
  v42 = v52;
  v43 = v9;
  v44 = v54;
  v45 = v55;
  v38 = v48;
  v39 = v11;
  v40 = v50;
  v41 = v51;
  v36 = v46;
  v37 = v13;
  sub_1ABD97E18((uint64_t)&v46);
  sub_1ABE622C0(&v36, a2, a3, (uint64_t)v35);
  v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    sub_1ABDFCC34((uint64_t)&v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    for (i = 192; ; i += 160)
    {
      sub_1ABDFCC34((uint64_t)&v46);
      sub_1ABE64590((uint64_t)v35, (uint64_t)v33);
      sub_1ABE64590((uint64_t)v33, (uint64_t)v34);
      if (sub_1ABDFDCD4(v34) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_1ABD82AB8(0, v14[2] + 1, 1, v14);
        v17 = v14[2];
        v16 = v14[3];
        if (v17 >= v16 >> 1)
          v14 = sub_1ABD82AB8((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
        sub_1ABE64590((uint64_t)v33, (uint64_t)v32);
        v14[2] = v17 + 1;
        v18 = &v14[20 * v17];
        v19 = v32[1];
        v18[2] = v32[0];
        v18[3] = v19;
        v20 = v32[5];
        v22 = v32[2];
        v21 = v32[3];
        v18[6] = v32[4];
        v18[7] = v20;
        v18[4] = v22;
        v18[5] = v21;
        v23 = v32[9];
        v25 = v32[6];
        v24 = v32[7];
        v18[10] = v32[8];
        v18[11] = v23;
        v18[8] = v25;
        v18[9] = v24;
      }
      if (!--v4)
        break;
      v26 = *(_OWORD *)(a1 + i + 112);
      v52 = *(_OWORD *)(a1 + i + 96);
      v53 = v26;
      v27 = *(_OWORD *)(a1 + i + 144);
      v54 = *(_OWORD *)(a1 + i + 128);
      v55 = v27;
      v28 = *(_OWORD *)(a1 + i + 48);
      v48 = *(_OWORD *)(a1 + i + 32);
      v49 = v28;
      v29 = *(_OWORD *)(a1 + i + 80);
      v50 = *(_OWORD *)(a1 + i + 64);
      v51 = v29;
      v30 = *(_OWORD *)(a1 + i + 16);
      v46 = *(_OWORD *)(a1 + i);
      v47 = v30;
      v42 = v52;
      v43 = v26;
      v44 = v54;
      v45 = v55;
      v38 = v48;
      v39 = v28;
      v40 = v50;
      v41 = v51;
      v36 = v46;
      v37 = v30;
      sub_1ABD97E18((uint64_t)&v46);
      sub_1ABE622C0(&v36, a2, a3, (uint64_t)v35);
    }
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1ABE64590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD04578(0, &qword_1ED34C938, (uint64_t)&type metadata for StockNewsFeed, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABE645EC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE64650(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABE62890(a1, a2, *(_QWORD **)(v2 + 16), v2 + 24, *(_QWORD *)(v2 + 160), *(_BYTE *)(v2 + 168));
}

uint64_t sub_1ABE64674()
{
  uint64_t v0;

  return sub_1ABE630C4(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 48));
}

uint64_t sub_1ABE64694()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1ABE64728(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABE632A0(a1, *(_QWORD *)(v1 + 16), v1 + 24, *(_QWORD **)(v1 + 160), v1 + 168);
}

uint64_t sub_1ABE6474C()
{
  uint64_t v0;

  return sub_1ABE6396C(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1ABE64764()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEC44060)
  {
    sub_1ABD345C8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEC44060);
  }
}

uint64_t sub_1ABE647C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE64824(uint64_t a1)
{
  return sub_1ABE63A7C(a1);
}

uint64_t sub_1ABE6483C()
{
  uint64_t v0;

  return sub_1ABE63BA4(*(_QWORD *)(v0 + 16));
}

uint64_t NetworkEvent.SDSMetadata.requestedItemCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t NetworkEvent.SDSMetadata.returnedItemCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t NetworkEvent.SDSMetadata.missingItemIDs.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t NetworkEvent.SDSMetadata.invalidItemIDs.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t NetworkEvent.SDSMetadata.dataSource.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t NetworkEvent.underlyingEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = v1;
  v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE64978(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() - 2 <= 4)
  {
    sub_1ABD66FD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = sub_1ABF30F34();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, v6, v7);
}

uint64_t sub_1ABE64978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double NetworkEvent.metadata.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  double result;
  __int128 v16;

  v2 = v1;
  v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE64978(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() - 2 > 4)
  {
    sub_1ABCFC3BC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEvent);
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  else
  {
    sub_1ABD66FD0();
    v8 = &v6[*(int *)(v7 + 48)];
    v9 = *(_QWORD *)v8;
    v10 = *((_QWORD *)v8 + 1);
    v11 = *((_QWORD *)v8 + 4);
    v12 = *((_QWORD *)v8 + 5);
    v13 = sub_1ABF30F34();
    v14 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v16 = *((_OWORD *)v8 + 1);
    v14(v6, v13);
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v10;
    result = *(double *)&v16;
    *(_OWORD *)(a1 + 16) = v16;
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
  }
  return result;
}

uint64_t NetworkEvent.httpStatusCode.getter()
{
  return sub_1ABE64AE8(MEMORY[0x1E0DB4320]);
}

uint64_t NetworkEvent.errorCode.getter()
{
  return sub_1ABE64AE8(MEMORY[0x1E0DB4340]);
}

uint64_t NetworkEvent.metrics.getter()
{
  return sub_1ABE64AE8((uint64_t (*)(uint64_t))MEMORY[0x1E0DB4338]);
}

uint64_t sub_1ABE64AE8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_1ABF30F34();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = NetworkEvent.underlyingEvent.getter((uint64_t)v5);
  v7 = a1(v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t NetworkEvent.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v18;

  v2 = sub_1ABF30760();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1ABF30F34();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v12);
  v13 = (void *)sub_1ABF30F28();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    v14 = objc_msgSend(v13, sel_fetchStartDate);
    if (v14)
    {
      v15 = v14;
      sub_1ABF30724();

      v16 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      v16(v8, v5, v2);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(a1, v8, v2);
    }
    else
    {

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    }
    sub_1ABCFC3BC((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  }
  return sub_1ABF30754();
}

double NetworkEvent.dnsDuration.getter()
{
  return sub_1ABE64D6C((SEL *)&selRef_domainLookupStartDate, (SEL *)&selRef_domainLookupEndDate);
}

double NetworkEvent.connectDuration.getter()
{
  return sub_1ABE64D6C((SEL *)&selRef_connectStartDate, (SEL *)&selRef_connectEndDate);
}

double sub_1ABE64D6C(SEL *a1, SEL *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  double v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  id v28;
  void *v29;
  char *v30;
  char *v31;
  double v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v36;
  char *v37;
  SEL *v38;
  char *v39;

  v38 = a2;
  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - v6;
  v8 = sub_1ABF30760();
  v9 = *(_QWORD **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v36 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  MEMORY[0x1E0C80A78](v14);
  v39 = (char *)&v36 - v15;
  v16 = sub_1ABF30F34();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v19);
  v20 = (void *)sub_1ABF30F28();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v21 = 0.0;
  if (v20)
  {
    v22 = objc_msgSend(v20, *a1);
    if (v22)
    {
      v23 = v22;
      sub_1ABF30724();

      v24 = (void (*)(char *, char *, uint64_t))v9[4];
      v24(v7, v13, v8);
      v25 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v9[7];
      v25(v7, 0, 1, v8);
      v26 = (unsigned int (*)(char *, uint64_t, uint64_t))v9[6];
      if (v26(v7, 1, v8) != 1)
      {
        v27 = v39;
        v24(v39, v7, v8);
        v28 = objc_msgSend(v20, *v38);
        if (v28)
        {
          v29 = v28;
          sub_1ABF30724();

          v30 = v37;
          v24(v37, v13, v8);
          v25(v30, 0, 1, v8);
          if (v26(v30, 1, v8) != 1)
          {
            v31 = v36;
            v24(v36, v30, v8);
            sub_1ABF30670();
            v21 = v32;

            v33 = (void (*)(char *, uint64_t))v9[1];
            v33(v31, v8);
            v33(v27, v8);
            return v21;
          }
        }
        else
        {
          v30 = v37;
          v25(v37, 1, 1, v8);
        }

        ((void (*)(char *, uint64_t))v9[1])(v27, v8);
        v34 = (uint64_t)v30;
LABEL_11:
        sub_1ABCFC3BC(v34, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        return v21;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v9[7])(v7, 1, 1, v8);
    }

    v34 = (uint64_t)v7;
    goto LABEL_11;
  }
  return v21;
}

double NetworkEvent.requestDuration.getter()
{
  return sub_1ABE64D6C((SEL *)&selRef_requestStartDate, (SEL *)&selRef_responseStartDate);
}

double NetworkEvent.responseDuration.getter()
{
  return sub_1ABE64D6C((SEL *)&selRef_responseStartDate, (SEL *)&selRef_responseEndDate);
}

char *NetworkEvent.responseSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  char *v6;
  char *result;
  uint64_t v8;

  v0 = sub_1ABF30F34();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v3);
  v4 = (void *)sub_1ABF30F28();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, sel_countOfResponseBodyBytesReceived);
  v6 = (char *)objc_msgSend(v4, sel_countOfResponseHeaderBytesReceived);

  result = &v6[(_QWORD)v5];
  if (__OFADD__(v5, v6))
  {
    __break(1u);
    return 0;
  }
  return result;
}

uint64_t NetworkEvent.respondingPop.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = sub_1ABF30F34();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v3);
  v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x1E0DB4310])
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    v5 = *(void **)v3;

    goto LABEL_5;
  }
  if (v4 == *MEMORY[0x1E0DB4308])
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    v5 = *(void **)v3;
LABEL_5:
    v6 = (void *)sub_1ABF31780();
    v7 = objc_msgSend(v5, sel_valueForHTTPHeaderField_, v6);

    if (v7)
    {
      v8 = sub_1ABF317A4();

      return v8;
    }
    return 0;
  }
  if (v4 == *MEMORY[0x1E0DB4330])
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  result = sub_1ABF32230();
  __break(1u);
  return result;
}

double NetworkEvent.taskDuration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  double v19;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  id v25;
  void *v26;
  char *v27;
  char *v28;
  double v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v33;
  char *v34;

  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v0);
  v34 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - v3;
  v5 = sub_1ABF30760();
  v6 = *(_QWORD **)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - v12;
  v14 = sub_1ABF30F34();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v17);
  v18 = (void *)sub_1ABF30F28();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v19 = 0.0;
  if (v18)
  {
    v20 = objc_msgSend(v18, sel_responseEndDate);
    if (v20)
    {
      v21 = v20;
      sub_1ABF30724();

      v22 = (void (*)(char *, char *, uint64_t))v6[4];
      v22(v4, v10, v5);
      v23 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v6[7];
      v23(v4, 0, 1, v5);
      v24 = (unsigned int (*)(char *, uint64_t, uint64_t))v6[6];
      if (v24(v4, 1, v5) != 1)
      {
        v22(v13, v4, v5);
        v25 = objc_msgSend(v18, sel_fetchStartDate);
        if (v25)
        {
          v26 = v25;
          sub_1ABF30724();

          v27 = v34;
          v22(v34, v10, v5);
          v23(v27, 0, 1, v5);
          if (v24(v27, 1, v5) != 1)
          {
            v28 = v33;
            v22(v33, v27, v5);
            sub_1ABF30670();
            v19 = v29;

            v30 = (void (*)(char *, uint64_t))v6[1];
            v30(v28, v5);
            v30(v13, v5);
            return v19;
          }
        }
        else
        {
          v27 = v34;
          v23(v34, 1, 1, v5);
        }

        ((void (*)(char *, uint64_t))v6[1])(v13, v5);
        v31 = (uint64_t)v27;
LABEL_11:
        sub_1ABCFC3BC(v31, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        return v19;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v6[7])(v4, 1, 1, v5);
    }

    v31 = (uint64_t)v4;
    goto LABEL_11;
  }
  return v19;
}

id NetworkEvent.isProxyConnection.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  uint64_t v7;

  v0 = sub_1ABF30F34();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  NetworkEvent.underlyingEvent.getter((uint64_t)v3);
  v4 = (void *)sub_1ABF30F28();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (!v4)
    return 0;
  v5 = objc_msgSend(v4, sel_isProxyConnection);

  return v5;
}

uint64_t initializeBufferWithCopyOfBuffer for NetworkEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1ABE65714 + 4 * byte_1ABF45668[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  sub_1ABF2FF68();
  return v7;
}

uint64_t destroy for NetworkEvent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      v3 = sub_1ABF30F34();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      v4 = sub_1ABF30F34();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      sub_1ABD66FD0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for NetworkEvent()
{
  char *v0;

  v0 = (char *)sub_1ABE65BC8 + 4 * byte_1ABF45680[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1ABE65BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1ABF30F34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for NetworkEvent(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1ABCFC3BC(result, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEvent);
    v2 = (char *)&loc_1ABE65CD8 + 4 * byte_1ABF4568C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for NetworkEvent()
{
  char *v0;

  v0 = (char *)sub_1ABE65DE4 + 4 * byte_1ABF45698[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1ABE65DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1ABF30F34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for NetworkEvent(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1ABCFC3BC(result, (uint64_t (*)(_QWORD))type metadata accessor for NetworkEvent);
    v2 = (char *)&loc_1ABE65ED0 + 4 * byte_1ABF456A4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t destroy for NetworkEvent.SDSMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NetworkEvent.SDSMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for NetworkEvent.SDSMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NetworkEvent.SDSMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkEvent.SDSMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkEvent.SDSMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkEvent.SDSMetadata()
{
  return &type metadata for NetworkEvent.SDSMetadata;
}

uint64_t sub_1ABE66164()
{
  id v0;

  if (qword_1ED346670 != -1)
    swift_once();
  v0 = (id)qword_1ED368300;
  sub_1ABF31BF4();
  sub_1ABF31318();

  sub_1ABD03D24();
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABE66234()
{
  if (qword_1ED346CA8 != -1)
    swift_once();
  sub_1ABD3C9F0(&qword_1EEC44068, (uint64_t)&unk_1ABF4577C);
  return sub_1ABF30A60();
}

uint64_t sub_1ABE662CC(uint64_t a1, uint64_t (*a2)(void))
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_defaultStore);
  v5 = (void *)sub_1ABF31780();
  objc_msgSend(v4, sel_removeObjectForKey_, v5);

  v6 = objc_msgSend(v3, sel_defaultStore);
  objc_msgSend(v6, sel_synchronize);

  if (qword_1ED346670 != -1)
    swift_once();
  v7 = (id)qword_1ED368300;
  sub_1ABF31BF4();
  sub_1ABF31318();

  return a2();
}

void sub_1ABE66400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  id v17;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = *(_QWORD *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_appConfigurationManager + 24);
  v12 = *(_QWORD *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_appConfigurationManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_appConfigurationManager), v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 40);
  sub_1ABF2FF68();
  v13(v11, v12);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = sub_1ABE67300;
  v14[3] = v10;
  v14[4] = a5;
  v14[5] = a3;
  v14[6] = a4;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v15 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  sub_1ABF2FF68();
  v17 = (id)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

void sub_1ABE6657C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, void (*a5)(void))
{
  char v7;
  void *v8;
  _BYTE *v9;
  char v10;

  if (*(_BYTE *)(a1 + 250) == 1)
    goto LABEL_8;
  if (qword_1ED34C768 != -1)
    swift_once();
  type metadata accessor for KVSCleanupStartupTask();
  sub_1ABD3C9F0(&qword_1ED346BD0, (uint64_t)&unk_1ABF457BC);
  sub_1ABF30970();
  if (v10 && v10 == 1)
  {
    a1 = swift_bridgeObjectRelease();
LABEL_8:
    a2(a1);
    return;
  }
  v7 = sub_1ABF3223C();
  a1 = swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
    goto LABEL_8;
  sub_1ABD3CA30();
  v8 = (void *)swift_allocError();
  *v9 = 2;
  a5();

}

uint64_t sub_1ABE66704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = sub_1ABE67300;
  v9[3] = v8;
  v9[4] = a3;
  v9[5] = a4;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABE667BC(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v9 = *a1;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_1ABE67180;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1ABE6690C;
  v12[3] = &block_descriptor_45_0;
  v11 = _Block_copy(v12);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v9, sel_checkSyncingEnabledWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1ABE66898(char a1, void (*a2)(void), uint64_t a3, void (*a4)(void))
{
  void *v5;
  _BYTE *v6;

  if ((a1 & 1) != 0)
  {
    a2();
  }
  else
  {
    sub_1ABD3CA30();
    v5 = (void *)swift_allocError();
    *v6 = 3;
    a4();

  }
}

uint64_t sub_1ABE6690C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  sub_1ABF2FF68();
  v3(a2);
  return swift_release();
}

void sub_1ABE66948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (void *)objc_opt_self();
  sub_1ABF2FF68();
  v10 = objc_msgSend(v9, sel_sharedAccount);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = sub_1ABE67300;
  v11[5] = v8;
  v13[4] = sub_1ABE67158;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1ABE36E80;
  v13[3] = &block_descriptor_32;
  v12 = _Block_copy(v13);
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v10, sel_checkAllDevicesRunningMinimumiOSVersion_macOSVersion_orInactiveForTimeInterval_completionHandler_, 12, 0, 10, 14, v12, 7776000.0);
  _Block_release(v12);

}

void sub_1ABE66A90(char a1, id a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void))
{
  id v6;
  id v7;
  uint64_t v8;
  _BYTE *v9;

  if (a2)
  {
    v6 = a2;
    v7 = a2;
    v8 = (uint64_t)v6;
  }
  else
  {
    if ((a1 & 1) != 0)
    {
      a5();
      return;
    }
    sub_1ABD3CA30();
    v8 = swift_allocError();
    v6 = (id)v8;
    *v9 = 4;
  }
  a3(v8);

}

void sub_1ABE66B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  id v17;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = *(_QWORD *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_watchlistService + 24);
  v12 = *(_QWORD *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_watchlistService + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a5 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_watchlistService), v11);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 48);
  sub_1ABF2FF68();
  v13(v11, v12);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a5;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = sub_1ABE67300;
  v14[6] = v10;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v15 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  sub_1ABF2FF68();
  v17 = (id)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABE66C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v10;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = a6;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABE66D34(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v9 = *a1;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_1ABE67148;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1ABD9FF74;
  v12[3] = &block_descriptor_23;
  v11 = _Block_copy(v12);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v9, sel_savePendingChangesToServerWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1ABE66E10(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void))
{
  id v6;

  if (a1)
  {
    v6 = a1;
    a2(a1);

  }
  else
  {
    a4();
  }
}

uint64_t sub_1ABE66E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_group;
  v2 = sub_1ABF30DCC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_appConfigurationManager);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_watchlistService);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE66EE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED346DA0 != -1)
    swift_once();
  v2 = sub_1ABF30DCC();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED346D80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE66F58()
{
  if (qword_1ED346CA8 != -1)
    swift_once();
  return sub_1ABF2FF68();
}

uint64_t sub_1ABE66F98()
{
  return type metadata accessor for KVSCleanupStartupTask();
}

ValueMetadata *_s10KVSCleanupVMa()
{
  return &_s10KVSCleanupVN;
}

uint64_t sub_1ABE66FB0()
{
  return sub_1ABD3C9F0(&qword_1ED346BD0, (uint64_t)&unk_1ABF457BC);
}

uint64_t sub_1ABE66FD4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE66FF8()
{
  return sub_1ABE66164();
}

uint64_t sub_1ABE67024()
{
  return sub_1ABE66164();
}

uint64_t sub_1ABE67050()
{
  return sub_1ABD3CBC8();
}

uint64_t sub_1ABE6707C()
{
  return sub_1ABE66164();
}

uint64_t sub_1ABE670A8()
{
  return sub_1ABE66234();
}

uint64_t sub_1ABE670C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABE662CC(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1ABE670D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABE66B1C(a1, a2, a3, a4, v4);
}

uint64_t sub_1ABE670E0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE67114(uint64_t a1)
{
  uint64_t *v1;

  return sub_1ABE66C98(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_1ABE67138(void **a1)
{
  uint64_t *v1;

  sub_1ABE66D34(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1ABE67148(void *a1)
{
  uint64_t v1;

  sub_1ABE66E10(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void sub_1ABE67158(char a1, void *a2)
{
  uint64_t v2;

  sub_1ABE66A90(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

uint64_t sub_1ABE67164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABE66704(a1, a2, a3, a4);
}

void sub_1ABE67170(void **a1)
{
  uint64_t *v1;

  sub_1ABE667BC(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1ABE67180(char a1)
{
  uint64_t v1;

  sub_1ABE66898(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void sub_1ABE6718C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABE66400(a1, a2, a3, a4, v4);
}

uint64_t sub_1ABE67194()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABE671C8(uint64_t a1)
{
  uint64_t v1;

  sub_1ABE6657C(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

uint64_t storeEnumTagSinglePayload for KVSCleanupStartupTask.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABE67238 + 4 * byte_1ABF45735[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABE6726C + 4 * byte_1ABF45730[v4]))();
}

uint64_t sub_1ABE6726C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE67274(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE6727CLL);
  return result;
}

uint64_t sub_1ABE67288(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE67290);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABE67294(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE6729C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KVSCleanupStartupTask.Errors()
{
  return &type metadata for KVSCleanupStartupTask.Errors;
}

unint64_t sub_1ABE672BC()
{
  unint64_t result;

  result = qword_1EEC44070;
  if (!qword_1EEC44070)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45884, &type metadata for KVSCleanupStartupTask.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEC44070);
  }
  return result;
}

void sub_1ABE67338(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  unsigned __int8 v18;
  id v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;

  v4 = objc_msgSend(a1, sel_name);
  v22 = sub_1ABF317A4();
  v6 = v5;

  v7 = objc_msgSend(a1, sel_symbols);
  v8 = sub_1ABF31A08();

  v9 = objc_msgSend(a1, sel_identifier);
  v10 = sub_1ABF317A4();
  v12 = v11;

  v13 = objc_msgSend(a1, sel_sortState);
  v14 = objc_msgSend(v13, sel_integerValue);

  v15 = objc_msgSend(a1, sel_sortOrderState);
  v16 = v15;
  if (v15)
  {
    v17 = objc_msgSend(v15, sel_integerValue);

  }
  else
  {
    v17 = 0;
  }
  sub_1ABE7CAF0((uint64_t)v14, (uint64_t)v17, v16 == 0, (char *)&v24);
  if (v24 <= 0xFDu)
    v18 = v24;
  else
    v18 = -96;
  v19 = objc_msgSend(a1, sel_displayState, v22);
  v20 = objc_msgSend(v19, sel_integerValue);

  v21 = v20 == (id)1;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v6;
  if (v20 == (id)2)
    v21 = 2;
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v12;
  *(_BYTE *)(a2 + 40) = v18;
  *(_BYTE *)(a2 + 41) = v21;
}

uint64_t sub_1ABE674F4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  char v8;
  char v9;

  v8 = *a6;
  v9 = *a7;
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_BYTE *)(a8 + 40) = v8;
  *(_BYTE *)(a8 + 41) = v9;
  return result;
}

uint64_t sub_1ABE67518()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE67540 + 4 * byte_1ABF458F2[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1ABE67540()
{
  return 0x736C6F626D7973;
}

uint64_t sub_1ABE67558()
{
  return 0x696669746E656469;
}

uint64_t sub_1ABE67574()
{
  return 0x7461745374726F73;
}

uint64_t sub_1ABE67590()
{
  return 0x5379616C70736964;
}

uint64_t sub_1ABE675B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE68078(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE675D4()
{
  sub_1ABE67CC4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE675FC()
{
  sub_1ABE67CC4();
  return sub_1ABF32398();
}

uint64_t sub_1ABE67624(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  sub_1ABE67D90(0, &qword_1EEC44078, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  v16 = v8;
  v14 = *(_QWORD *)(v1 + 32);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 40);
  v12 = *(unsigned __int8 *)(v1 + 41);
  v13 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE67CC4();
  sub_1ABF32368();
  v25 = 0;
  v9 = v17;
  sub_1ABF32194();
  if (!v9)
  {
    v10 = v13;
    v18 = v16;
    v24 = 1;
    sub_1ABD165AC();
    sub_1ABD10510((unint64_t *)&qword_1ED34FCB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1ABF321D0();
    v23 = 2;
    sub_1ABF32194();
    v22 = v10;
    v21 = 3;
    sub_1ABE67D08();
    sub_1ABF321D0();
    v20 = v12;
    v19 = 4;
    sub_1ABE67D4C();
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABE67858@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  sub_1ABE67D90(0, &qword_1EEC44098, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE67CC4();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v31 = 0;
  v10 = sub_1ABF320E0();
  v12 = v11;
  v23 = v10;
  sub_1ABD165AC();
  v30 = 1;
  sub_1ABD10510((unint64_t *)&qword_1ED34FCC8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1ABF2FF5C();
  sub_1ABF32110();
  v13 = v24;
  v29 = 2;
  sub_1ABF2FF5C();
  v22 = 0;
  v19 = sub_1ABF320E0();
  v20 = v13;
  v27 = 3;
  v15 = v14;
  sub_1ABE67DEC();
  sub_1ABF2FF5C();
  sub_1ABF32110();
  v21 = v15;
  LOBYTE(v15) = v28;
  v25 = 4;
  sub_1ABE67E30();
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = v26;
  *(_QWORD *)a2 = v23;
  *(_QWORD *)(a2 + 8) = v12;
  v18 = v19;
  *(_QWORD *)(a2 + 16) = v20;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v21;
  *(_BYTE *)(a2 + 40) = v15;
  *(_BYTE *)(a2 + 41) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE67BD0()
{
  sub_1ABF32308();
  sub_1ABD366B4();
  return sub_1ABF32338();
}

uint64_t sub_1ABE67C34()
{
  sub_1ABF32308();
  sub_1ABD366B4();
  return sub_1ABF32338();
}

uint64_t sub_1ABE67C90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE67858(a1, a2);
}

uint64_t sub_1ABE67CA4(_QWORD *a1)
{
  return sub_1ABE67624(a1);
}

uint64_t sub_1ABE67CB8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = *(_QWORD *)(v1 + 24);
  a1[1] = v2;
  return sub_1ABF2FF5C();
}

unint64_t sub_1ABE67CC4()
{
  unint64_t result;

  result = qword_1EEC44080;
  if (!qword_1EEC44080)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45AE0, &type metadata for Watchlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44080);
  }
  return result;
}

unint64_t sub_1ABE67D08()
{
  unint64_t result;

  result = qword_1EEC44088;
  if (!qword_1EEC44088)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46EA8, &type metadata for WatchlistSortState);
    atomic_store(result, (unint64_t *)&qword_1EEC44088);
  }
  return result;
}

unint64_t sub_1ABE67D4C()
{
  unint64_t result;

  result = qword_1EEC44090;
  if (!qword_1EEC44090)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50244, &type metadata for PriceChangeDisplay);
    atomic_store(result, (unint64_t *)&qword_1EEC44090);
  }
  return result;
}

void sub_1ABE67D90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE67CC4();
    v7 = a3(a1, &type metadata for Watchlist.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1ABE67DEC()
{
  unint64_t result;

  result = qword_1EEC440A0;
  if (!qword_1EEC440A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46E80, &type metadata for WatchlistSortState);
    atomic_store(result, (unint64_t *)&qword_1EEC440A0);
  }
  return result;
}

unint64_t sub_1ABE67E30()
{
  unint64_t result;

  result = qword_1EEC440A8;
  if (!qword_1EEC440A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF5021C, &type metadata for PriceChangeDisplay);
    atomic_store(result, (unint64_t *)&qword_1EEC440A8);
  }
  return result;
}

uint64_t assignWithTake for Watchlist(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t storeEnumTagSinglePayload for Watchlist.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABE67F20 + 4 * byte_1ABF45902[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABE67F54 + 4 * byte_1ABF458FD[v4]))();
}

uint64_t sub_1ABE67F54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE67F5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE67F64);
  return result;
}

uint64_t sub_1ABE67F70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE67F78);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABE67F7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE67F84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Watchlist.CodingKeys()
{
  return &type metadata for Watchlist.CodingKeys;
}

unint64_t sub_1ABE67FA4()
{
  unint64_t result;

  result = qword_1EEC440B0;
  if (!qword_1EEC440B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45AB8, &type metadata for Watchlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC440B0);
  }
  return result;
}

unint64_t sub_1ABE67FEC()
{
  unint64_t result;

  result = qword_1EEC440B8;
  if (!qword_1EEC440B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45A28, &type metadata for Watchlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC440B8);
  }
  return result;
}

unint64_t sub_1ABE68034()
{
  unint64_t result;

  result = qword_1EEC440C0;
  if (!qword_1EEC440C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45A50, &type metadata for Watchlist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC440C0);
  }
  return result;
}

uint64_t sub_1ABE68078(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6F626D7973 && a2 == 0xE700000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461745374726F73 && a2 == 0xE900000000000065 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5379616C70736964 && a2 == 0xEC00000065746174)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

StocksCore::MultiSizeVideo __swiftcall MultiSizeVideo.init(videoSmall:videoLarge:)(Swift::String_optional videoSmall, Swift::String_optional videoLarge)
{
  uint64_t *v2;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v5;
  void *v6;
  StocksCore::MultiSizeVideo result;

  if (videoSmall.value._object)
    countAndFlagsBits = videoSmall.value._countAndFlagsBits;
  else
    countAndFlagsBits = 0;
  if (videoSmall.value._object)
    object = videoSmall.value._object;
  else
    object = (void *)0xE000000000000000;
  if (videoLarge.value._object)
    v5 = videoLarge.value._countAndFlagsBits;
  else
    v5 = 0;
  *v2 = countAndFlagsBits;
  v2[1] = (uint64_t)object;
  if (videoLarge.value._object)
    v6 = videoLarge.value._object;
  else
    v6 = (void *)0xE000000000000000;
  v2[2] = v5;
  v2[3] = (uint64_t)v6;
  result.videoLarge = videoLarge.value;
  result.videoSmall = videoSmall.value;
  return result;
}

uint64_t sub_1ABE682E0(char *a1, char *a2)
{
  return sub_1ABDE3CC4(*a1, *a2);
}

uint64_t sub_1ABE682EC()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE68370()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE683D0()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE68450@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1ABE684AC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x616D536F65646976;
  if (*v1)
    v2 = 0x72614C6F65646976;
  v3 = 0xEA00000000006567;
  if (!*v1)
    v3 = 0xEA00000000006C6CLL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABE684F0()
{
  _BYTE *v0;

  if (*v0)
    return 0x72614C6F65646976;
  else
    return 0x616D536F65646976;
}

uint64_t sub_1ABE68530@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1ABE68590()
{
  sub_1ABE68A40();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE685B8()
{
  sub_1ABE68A40();
  return sub_1ABF32398();
}

uint64_t MultiSizeVideo.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;

  sub_1ABE68BE4(0, &qword_1EEC440C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE68A40();
  sub_1ABF3235C();
  if (!v2)
  {
    v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v37 = 0;
    sub_1ABF320C8();
    v10 = v36;
    v34 = v35;
    if (v36)
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_beginAccess();
      v11 = v38;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v33 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v14 = v11[2];
      v13 = v11[3];
      if (v14 >= v13 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      v11[2] = v14 + 1;
      v15 = &v11[2 * v14];
      v15[4] = 0x616D536F65646976;
      v15[5] = 0xEA00000000006C6CLL;
      v38 = v11;
      swift_endAccess();
      v10 = v33;
    }
    v37 = 1;
    sub_1ABF320C8();
    v17 = v36;
    if (v36)
    {
      v32 = v35;
    }
    else
    {
      swift_beginAccess();
      v11 = v38;
      v18 = swift_isUniquelyReferenced_nonNull_native();
      v33 = v10;
      if ((v18 & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v20 = v11[2];
      v19 = v11[3];
      v21 = v20 + 1;
      if (v20 >= v19 >> 1)
      {
        v32 = v20 + 1;
        v30 = sub_1ABD12054((_QWORD *)(v19 > 1), v20 + 1, 1, v11);
        v21 = v32;
        v11 = v30;
      }
      v11[2] = v21;
      v22 = &v11[2 * v20];
      v22[4] = 0x72614C6F65646976;
      v22[5] = 0xEA00000000006567;
      v38 = v11;
      swift_endAccess();
      v32 = 0;
      v10 = v33;
    }
    if (v10)
      v23 = v34;
    else
      v23 = 0;
    v24 = 0xE000000000000000;
    if (!v10)
      v10 = 0xE000000000000000;
    if (v17)
      v24 = v17;
    v33 = v24;
    v34 = v23;
    if (v11[2])
    {
      sub_1ABD0F55C();
      v25 = swift_allocObject();
      v31 = v10;
      v26 = (_QWORD *)v25;
      *(_OWORD *)(v25 + 16) = xmmword_1ABF366C0;
      sub_1ABD165AC();
      v26[7] = v27;
      v26[8] = sub_1ABD82448();
      v26[4] = v11;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v28 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      v10 = v31;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v28 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    *a2 = v34;
    a2[1] = v10;
    v29 = v33;
    a2[2] = v32;
    a2[3] = v29;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1ABE68A40()
{
  unint64_t result;

  result = qword_1EEC440D0;
  if (!qword_1EEC440D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45CC4, &type metadata for MultiSizeVideo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC440D0);
  }
  return result;
}

uint64_t MultiSizeVideo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1ABE68BE4(0, &qword_1EEC440D8, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE68A40();
  sub_1ABF32368();
  v13 = 0;
  v9 = v11[3];
  sub_1ABF32194();
  if (!v9)
  {
    v12 = 1;
    sub_1ABF32194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABE68BBC@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return MultiSizeVideo.init(from:)(a1, a2);
}

uint64_t sub_1ABE68BD0(_QWORD *a1)
{
  return MultiSizeVideo.encode(to:)(a1);
}

void sub_1ABE68BE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE68A40();
    v7 = a3(a1, &type metadata for MultiSizeVideo.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

ValueMetadata *type metadata accessor for MultiSizeVideo()
{
  return &type metadata for MultiSizeVideo;
}

uint64_t storeEnumTagSinglePayload for MultiSizeVideo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABE68C9C + 4 * byte_1ABF45B35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABE68CD0 + 4 * byte_1ABF45B30[v4]))();
}

uint64_t sub_1ABE68CD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE68CD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE68CE0);
  return result;
}

uint64_t sub_1ABE68CEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE68CF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABE68CF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE68D00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MultiSizeVideo.CodingKeys()
{
  return &type metadata for MultiSizeVideo.CodingKeys;
}

unint64_t sub_1ABE68D20()
{
  unint64_t result;

  result = qword_1EEC440E0;
  if (!qword_1EEC440E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45C9C, &type metadata for MultiSizeVideo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC440E0);
  }
  return result;
}

unint64_t sub_1ABE68D68()
{
  unint64_t result;

  result = qword_1EEC440E8;
  if (!qword_1EEC440E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45BD4, &type metadata for MultiSizeVideo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC440E8);
  }
  return result;
}

unint64_t sub_1ABE68DB0()
{
  unint64_t result;

  result = qword_1EEC440F0;
  if (!qword_1EEC440F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45BFC, &type metadata for MultiSizeVideo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC440F0);
  }
  return result;
}

uint64_t sub_1ABE68DF4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE68E28()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1ABE68E5C()
{
  unint64_t result;

  result = qword_1EEC440F8;
  if (!qword_1EEC440F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45DE0, &type metadata for ForYouConfigRecordService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEC440F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouConfigRecordService.Errors()
{
  return &type metadata for ForYouConfigRecordService.Errors;
}

ValueMetadata *type metadata accessor for YahooSearchResponse()
{
  return &type metadata for YahooSearchResponse;
}

void sub_1ABE68EC0(char *a1)
{
  sub_1ABDE1F8C(*a1);
}

void sub_1ABE68ECC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABE68F24()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABE68F9C()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABE68FE4()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABE69048()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABE6909C()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE69114@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE6964C();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE69140()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABE6917C + 4 * byte_1ABF45E2F[*v0]))();
}

void sub_1ABE6917C(_QWORD *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

void sub_1ABE69190(_QWORD *a1@<X8>)
{
  *a1 = 0x616E5F74726F6873;
  a1[1] = 0xEA0000000000656DLL;
}

void sub_1ABE691B0(_QWORD *a1@<X8>)
{
  *a1 = 1701667182;
  a1[1] = 0xE400000000000000;
}

void sub_1ABE691C4(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6F626D7973;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1ABE691DC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE69218 + 4 * byte_1ABF45E34[*v0]))(0x65676E6168637865, 0xED0000656D616E5FLL);
}

uint64_t sub_1ABE69218()
{
  return 1701869940;
}

uint64_t sub_1ABE69228()
{
  return 0x616E5F74726F6873;
}

uint64_t sub_1ABE69244()
{
  return 1701667182;
}

uint64_t sub_1ABE69254()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1ABE69268@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE6964C();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE6928C()
{
  sub_1ABE6A4CC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE692B4()
{
  sub_1ABE6A4CC();
  return sub_1ABF32398();
}

__n128 sub_1ABE692DC@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[5];

  sub_1ABE69694(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1ABE69324()
{
  return sub_1ABDE6D7C();
}

uint64_t sub_1ABE6933C()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABE69354()
{
  return sub_1ABDE6DE0();
}

uint64_t sub_1ABE6936C@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

void sub_1ABE69378(_QWORD *a1@<X8>)
{
  *a1 = 0x73746C75736572;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1ABE69394()
{
  return 0x73746C75736572;
}

uint64_t sub_1ABE693AC@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABE693B8()
{
  sub_1ABE6A088();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE693E0()
{
  sub_1ABE6A088();
  return sub_1ABF32398();
}

_QWORD *sub_1ABE69408@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABE69A04(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE69430()
{
  return sub_1ABDE6D7C();
}

uint64_t sub_1ABE69444()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABE69458()
{
  return sub_1ABDE6DE0();
}

uint64_t sub_1ABE6946C@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

void sub_1ABE69478(_QWORD *a1@<X8>)
{
  *a1 = 0x746C75736572;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1ABE69490()
{
  return 0x746C75736572;
}

uint64_t sub_1ABE694A4@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABE694B0()
{
  sub_1ABE6A208();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE694D8()
{
  sub_1ABE6A208();
  return sub_1ABF32398();
}

uint64_t sub_1ABE69500@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1ABE69B4C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE69528()
{
  return 0x65636E616E6966;
}

uint64_t sub_1ABE69540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65636E616E6966 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABE695D4()
{
  sub_1ABE69F04();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE695FC()
{
  sub_1ABE69F04();
  return sub_1ABF32398();
}

_QWORD *sub_1ABE69624@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABE69DBC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE6964C()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1ABE69694@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  sub_1ABDE97D0(0, &qword_1EEC441A8, (void (*)(void))sub_1ABE6A4CC);
  v34 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE6A4CC();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v39 = 0;
  v10 = sub_1ABF320E0();
  v12 = v11;
  v38 = 1;
  sub_1ABF2FF5C();
  v13 = sub_1ABF3208C();
  v15 = v14;
  v33 = v13;
  v37 = 2;
  sub_1ABF2FF5C();
  v16 = sub_1ABF3208C();
  v18 = v17;
  v30 = v16;
  v36 = 3;
  sub_1ABF2FF5C();
  v31 = 0;
  v32 = v18;
  v28 = sub_1ABF320E0();
  v29 = v19;
  v35 = 4;
  sub_1ABF2FF5C();
  v20 = sub_1ABF320E0();
  v22 = v21;
  v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v31 = v20;
  v23(v8, v34);
  sub_1ABF2FF5C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = v29;
  result = swift_bridgeObjectRelease();
  *a2 = v28;
  a2[1] = v25;
  a2[2] = v31;
  a2[3] = v22;
  a2[4] = v10;
  a2[5] = v12;
  a2[6] = v33;
  a2[7] = v15;
  a2[8] = v30;
  a2[9] = v24;
  return result;
}

_QWORD *sub_1ABE69A04(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1EEC44130, (void (*)(void))sub_1ABE6A088);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE6A088();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE6A0CC();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1ABE69B4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;

  sub_1ABDE97D0(0, &qword_1EEC44160, (void (*)(void))sub_1ABE6A208);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ABE6A208();
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE6A300(0, &qword_1EEC44170, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    sub_1ABE6A24C();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8 = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

_QWORD *sub_1ABE69DBC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1EEC44100, (void (*)(void))sub_1ABE69F04);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE69F04();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE69F48();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABE69F04()
{
  unint64_t result;

  result = qword_1EEC44108;
  if (!qword_1EEC44108)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45F80, &type metadata for YahooSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44108);
  }
  return result;
}

unint64_t sub_1ABE69F48()
{
  unint64_t result;

  result = qword_1EEC44110;
  if (!qword_1EEC44110)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45F58, &type metadata for YahooSearchResponse.Finance);
    atomic_store(result, (unint64_t *)&qword_1EEC44110);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.CodingKeys()
{
  return &type metadata for YahooSearchResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Finance()
{
  return &type metadata for YahooSearchResponse.Finance;
}

unint64_t sub_1ABE69FB4()
{
  unint64_t result;

  result = qword_1EEC44118;
  if (!qword_1EEC44118)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45F30, &type metadata for YahooSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44118);
  }
  return result;
}

unint64_t sub_1ABE69FFC()
{
  unint64_t result;

  result = qword_1EEC44120;
  if (!qword_1EEC44120)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45EA0, &type metadata for YahooSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44120);
  }
  return result;
}

unint64_t sub_1ABE6A044()
{
  unint64_t result;

  result = qword_1EEC44128;
  if (!qword_1EEC44128)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45EC8, &type metadata for YahooSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44128);
  }
  return result;
}

unint64_t sub_1ABE6A088()
{
  unint64_t result;

  result = qword_1EEC44138;
  if (!qword_1EEC44138)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF460F0, &type metadata for YahooSearchResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44138);
  }
  return result;
}

unint64_t sub_1ABE6A0CC()
{
  unint64_t result;

  result = qword_1EEC44140;
  if (!qword_1EEC44140)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF460C8, &type metadata for YahooSearchResponse.Results);
    atomic_store(result, (unint64_t *)&qword_1EEC44140);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Finance.CodingKeys()
{
  return &type metadata for YahooSearchResponse.Finance.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Results()
{
  return &type metadata for YahooSearchResponse.Results;
}

unint64_t sub_1ABE6A134()
{
  unint64_t result;

  result = qword_1EEC44148;
  if (!qword_1EEC44148)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF460A0, &type metadata for YahooSearchResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44148);
  }
  return result;
}

unint64_t sub_1ABE6A17C()
{
  unint64_t result;

  result = qword_1EEC44150;
  if (!qword_1EEC44150)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45FD8, &type metadata for YahooSearchResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44150);
  }
  return result;
}

unint64_t sub_1ABE6A1C4()
{
  unint64_t result;

  result = qword_1EEC44158;
  if (!qword_1EEC44158)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46000, &type metadata for YahooSearchResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44158);
  }
  return result;
}

unint64_t sub_1ABE6A208()
{
  unint64_t result;

  result = qword_1EEC44168;
  if (!qword_1EEC44168)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46260, &type metadata for YahooSearchResponse.Results.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44168);
  }
  return result;
}

unint64_t sub_1ABE6A24C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC44178;
  if (!qword_1EEC44178)
  {
    sub_1ABE6A300(255, &qword_1EEC44170, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE6A2BC();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC44178);
  }
  return result;
}

unint64_t sub_1ABE6A2BC()
{
  unint64_t result;

  result = qword_1EEC44180;
  if (!qword_1EEC44180)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46238, &type metadata for YahooSearchResponse.Stock);
    atomic_store(result, (unint64_t *)&qword_1EEC44180);
  }
  return result;
}

void sub_1ABE6A300(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for YahooSearchResponse.Stock);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t _s10StocksCore19YahooSearchResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE6A388 + 4 * byte_1ABF45E39[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE6A3A8 + 4 * byte_1ABF45E3E[v4]))();
}

_BYTE *sub_1ABE6A388(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE6A3A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE6A3B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE6A3B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE6A3C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE6A3C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Results.CodingKeys()
{
  return &type metadata for YahooSearchResponse.Results.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Stock()
{
  return &type metadata for YahooSearchResponse.Stock;
}

unint64_t sub_1ABE6A3F8()
{
  unint64_t result;

  result = qword_1EEC44190;
  if (!qword_1EEC44190)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46210, &type metadata for YahooSearchResponse.Results.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44190);
  }
  return result;
}

unint64_t sub_1ABE6A440()
{
  unint64_t result;

  result = qword_1EEC44198;
  if (!qword_1EEC44198)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46148, &type metadata for YahooSearchResponse.Results.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44198);
  }
  return result;
}

unint64_t sub_1ABE6A488()
{
  unint64_t result;

  result = qword_1EEC441A0;
  if (!qword_1EEC441A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46170, &type metadata for YahooSearchResponse.Results.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC441A0);
  }
  return result;
}

unint64_t sub_1ABE6A4CC()
{
  unint64_t result;

  result = qword_1EEC441B0;
  if (!qword_1EEC441B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF463A0, &type metadata for YahooSearchResponse.Stock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC441B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for YahooSearchResponse.Stock.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABE6A55C + 4 * byte_1ABF45E48[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABE6A590 + 4 * byte_1ABF45E43[v4]))();
}

uint64_t sub_1ABE6A590(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE6A598(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE6A5A0);
  return result;
}

uint64_t sub_1ABE6A5AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE6A5B4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABE6A5B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE6A5C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooSearchResponse.Stock.CodingKeys()
{
  return &type metadata for YahooSearchResponse.Stock.CodingKeys;
}

unint64_t sub_1ABE6A5E0()
{
  unint64_t result;

  result = qword_1EEC441B8;
  if (!qword_1EEC441B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46378, &type metadata for YahooSearchResponse.Stock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC441B8);
  }
  return result;
}

unint64_t sub_1ABE6A628()
{
  unint64_t result;

  result = qword_1EEC441C0;
  if (!qword_1EEC441C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF462B0, &type metadata for YahooSearchResponse.Stock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC441C0);
  }
  return result;
}

unint64_t sub_1ABE6A670()
{
  unint64_t result;

  result = qword_1EEC441C8;
  if (!qword_1EEC441C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF462D8, &type metadata for YahooSearchResponse.Stock.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC441C8);
  }
  return result;
}

uint64_t sub_1ABE6A6B4()
{
  return sub_1ABE6A870((SEL *)&selRef_identifier);
}

uint64_t sub_1ABE6A6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  const void *v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[144];
  _BYTE v11[144];

  v3 = v2;
  sub_1ABD6414C(v3, (uint64_t)v10);
  sub_1ABD6414C((uint64_t)v10, (uint64_t)v11);
  if (sub_1ABD24814((uint64_t)v11) == 1)
  {
    sub_1ABD24804((uint64_t)v11);
    v8 = a1;
    sub_1ABD6442C((uint64_t)&v8);
    sub_1ABD6414C((uint64_t)&v8, a2);
  }
  else
  {
    v6 = (const void *)(sub_1ABD24804((uint64_t)v11) + 8);
    v8 = a1;
    memmove(&v9, v6, 0x88uLL);
    sub_1ABD64440((uint64_t)&v8);
    sub_1ABD6414C((uint64_t)&v8, a2);
    sub_1ABD64450((uint64_t)v6);
  }
  return swift_unknownObjectRetain();
}

uint64_t sub_1ABE6A788()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  _BYTE v6[144];
  _BYTE v7[144];

  sub_1ABD6414C(v0, (uint64_t)v6);
  sub_1ABD6414C((uint64_t)v6, (uint64_t)v7);
  sub_1ABD24814((uint64_t)v7);
  v1 = *(void **)sub_1ABD24804((uint64_t)v7);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_stocksFields) & 1) == 0)
    return 0;
  v2 = objc_msgSend(v1, sel_stocksFields);
  v3 = (uint64_t)v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, sel_stocksClusterID);
    swift_unknownObjectRelease();
    if (v4)
    {
      v3 = sub_1ABF317A4();

      return v3;
    }
    return 0;
  }
  return v3;
}

uint64_t sub_1ABE6A864()
{
  return sub_1ABE6A870((SEL *)&selRef_articleID);
}

uint64_t sub_1ABE6A870(SEL *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  _BYTE v6[144];
  _BYTE v7[144];

  sub_1ABD6414C(v1, (uint64_t)v6);
  sub_1ABD6414C((uint64_t)v6, (uint64_t)v7);
  sub_1ABD24814((uint64_t)v7);
  v3 = objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v7), *a1);
  v4 = sub_1ABF317A4();

  return v4;
}

uint64_t sub_1ABE6A8F4()
{
  return sub_1ABE6A90C((SEL *)&selRef_title);
}

uint64_t sub_1ABE6A900()
{
  return sub_1ABE6A90C((SEL *)&selRef_sourceChannelID);
}

uint64_t sub_1ABE6A90C(SEL *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  _BYTE v7[144];
  _BYTE v8[144];

  sub_1ABD6414C(v1, (uint64_t)v7);
  sub_1ABD6414C((uint64_t)v7, (uint64_t)v8);
  sub_1ABD24814((uint64_t)v8);
  v3 = objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v8), *a1);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = sub_1ABF317A4();

  return v5;
}

id sub_1ABE6A9A0()
{
  uint64_t v0;
  void *v1;
  _BYTE v3[144];
  _BYTE v4[144];

  sub_1ABD6414C(v0, (uint64_t)v3);
  sub_1ABD6414C((uint64_t)v3, (uint64_t)v4);
  sub_1ABD24814((uint64_t)v4);
  v1 = *(void **)sub_1ABD24804((uint64_t)v4);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_hasAudioTrack) & 1) != 0)
    return objc_msgSend(v1, sel_hasAudioTrack);
  else
    return 0;
}

id sub_1ABE6AA24()
{
  uint64_t v0;
  _BYTE v2[144];
  _BYTE v3[144];

  sub_1ABD6414C(v0, (uint64_t)v2);
  sub_1ABD6414C((uint64_t)v2, (uint64_t)v3);
  sub_1ABD24814((uint64_t)v3);
  return objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v3), sel_hasThumbnail);
}

uint64_t sub_1ABE6AA7C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  _BYTE v5[144];
  _BYTE v6[144];

  sub_1ABD6414C(v0, (uint64_t)v5);
  sub_1ABD6414C((uint64_t)v5, (uint64_t)v6);
  sub_1ABD24814((uint64_t)v6);
  if ((objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v6), sel_respondsToSelector_, sel_narrativeTrackPreferredUpsellVariantID) & 1) == 0)return 0;
  v1 = objc_msgSend((id)swift_unknownObjectRetain(), sel_narrativeTrackPreferredUpsellVariantID);
  if (!v1)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  v2 = v1;
  v3 = sub_1ABF317A4();

  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_1ABE6AB4C()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD v4[18];
  _BYTE v5[144];

  sub_1ABD6414C(v0, (uint64_t)v4);
  sub_1ABD6414C((uint64_t)v4, (uint64_t)v5);
  sub_1ABD24814((uint64_t)v5);
  v1 = *(void **)sub_1ABD24804((uint64_t)v5);
  sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v2 = objc_msgSend(v1, sel_identifier);
  sub_1ABF317A4();

  sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE6AC10()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD v4[18];
  _BYTE v5[144];

  sub_1ABD6414C(v0, (uint64_t)v4);
  sub_1ABF32308();
  sub_1ABD6414C((uint64_t)v4, (uint64_t)v5);
  sub_1ABD24814((uint64_t)v5);
  v1 = *(void **)sub_1ABD24804((uint64_t)v5);
  sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v2 = objc_msgSend(v1, sel_identifier);
  sub_1ABF317A4();

  sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE6ACDC()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD v4[18];
  _BYTE v5[144];

  sub_1ABD6414C(v0, (uint64_t)v4);
  sub_1ABF32308();
  sub_1ABD6414C((uint64_t)v4, (uint64_t)v5);
  sub_1ABD24814((uint64_t)v5);
  v1 = *(void **)sub_1ABD24804((uint64_t)v5);
  sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v2 = objc_msgSend(v1, sel_identifier);
  sub_1ABF317A4();

  sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE6ADA8()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD v4[18];
  _BYTE v5[144];

  sub_1ABD6414C(v0, (uint64_t)v4);
  sub_1ABD6414C((uint64_t)v4, (uint64_t)v5);
  sub_1ABD24814((uint64_t)v5);
  v1 = *(void **)sub_1ABD24804((uint64_t)v5);
  sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v2 = objc_msgSend(v1, sel_identifier);
  sub_1ABF317A4();

  sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE6AE6C()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD v4[18];
  _BYTE v5[144];

  sub_1ABD6414C(v0, (uint64_t)v4);
  sub_1ABF32308();
  sub_1ABD6414C((uint64_t)v4, (uint64_t)v5);
  sub_1ABD24814((uint64_t)v5);
  v1 = *(void **)sub_1ABD24804((uint64_t)v5);
  sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v2 = objc_msgSend(v1, sel_identifier);
  sub_1ABF317A4();

  sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE6AF3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  BOOL v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[144];
  _QWORD v35[18];
  _BYTE v36[152];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  v2 = a1;
  v3 = a1 + 32;
  sub_1ABF2FF5C();
  sub_1ABD6414C(v3, (uint64_t)v35);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v5 = 1;
  while (2)
  {
    v6 = v3 + 144 * v5;
    while (1)
    {
      sub_1ABD6414C((uint64_t)v35, (uint64_t)v36);
      sub_1ABD24814((uint64_t)v36);
      v7 = *(void **)sub_1ABD24804((uint64_t)v36);
      sub_1ABD64188(v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      v8 = objc_msgSend(v7, sel_scoreProfile);
      if (v8)
        break;
      sub_1ABD64188(v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      if (v1 == v5)
        goto LABEL_23;
      sub_1ABD6414C(v6, (uint64_t)v35);
      v6 += 144;
      v9 = __OFADD__(v5++, 1);
      if (v9)
        goto LABEL_26;
    }
    v10 = v8;
    v30 = v3;
    v31 = v2;
    sub_1ABD6414C((uint64_t)v35, (uint64_t)v34);
    sub_1ABD24814((uint64_t)v34);
    v11 = objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v34), sel_identifier);
    v12 = sub_1ABF317A4();
    v14 = v13;

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v33 = v14;
    v32 = v12;
    v17 = sub_1ABD00F9C(v12, v14);
    v18 = v4[2];
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
      goto LABEL_27;
    v21 = v16;
    if (v4[3] < v20)
    {
      sub_1ABE6BD14(v20, isUniquelyReferenced_nonNull_native);
      v22 = v33;
      v23 = sub_1ABD00F9C(v32, v33);
      if ((v21 & 1) != (v24 & 1))
        goto LABEL_29;
      v17 = v23;
      if ((v21 & 1) == 0)
        goto LABEL_13;
LABEL_18:
      v28 = v4[7];

      *(_QWORD *)(v28 + 8 * v17) = v10;
      goto LABEL_19;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_1ABE6F920();
    v22 = v33;
    if ((v21 & 1) != 0)
      goto LABEL_18;
LABEL_13:
    v4[(v17 >> 6) + 8] |= 1 << v17;
    v25 = (uint64_t *)(v4[6] + 16 * v17);
    *v25 = v32;
    v25[1] = v22;
    *(_QWORD *)(v4[7] + 8 * v17) = v10;
    v26 = v4[2];
    v9 = __OFADD__(v26, 1);
    v27 = v26 + 1;
    if (v9)
      goto LABEL_28;
    v4[2] = v27;
    sub_1ABF2FF5C();
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABD64188(v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
    v3 = v30;
    v2 = v31;
    if (v1 == v5)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      return (uint64_t)v4;
    }
    sub_1ABD6414C(v6, (uint64_t)v35);
    v9 = __OFADD__(v5++, 1);
    if (!v9)
      continue;
    break;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABE6B204(uint64_t a1, uint64_t a2)
{
  return sub_1ABDF344C(a2);
}

uint64_t sub_1ABE6B238(uint64_t a1, int a2)
{
  return sub_1ABE6E120(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail, (unint64_t *)&unk_1ED34E180);
}

uint64_t sub_1ABE6B24C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  sub_1ABDF23F0();
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = sub_1ABF2FF68();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    result = sub_1ABF31D14();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABE6B518(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _BYTE v38[136];
  _BYTE v39[144];

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, &qword_1ED34C900);
  v37 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1ABF2FF68();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      if ((v37 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_22;
          }
        }
        v13 = v24;
      }
    }
LABEL_22:
    v10 = (v23 - 1) & v23;
    v17 = __clz(__rbit64(v23)) + (v13 << 6);
    if ((v37 & 1) != 0)
    {
LABEL_10:
      v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v19 = *v18;
      v20 = v18[1];
      sub_1ABDEA124(*(_QWORD *)(v5 + 56) + 136 * v17, (uint64_t)v38);
      goto LABEL_24;
    }
LABEL_23:
    v25 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v19 = *v25;
    v20 = v25[1];
    sub_1ABDEA124(*(_QWORD *)(v5 + 56) + 136 * v17, (uint64_t)v38);
    sub_1ABF2FF5C();
    sub_1ABD97ECC((uint64_t)v38);
LABEL_24:
    sub_1ABDEA124((uint64_t)v38, (uint64_t)v39);
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v19;
    v15[1] = v20;
    result = sub_1ABDEA124((uint64_t)v39, *(_QWORD *)(v7 + 56) + 136 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABE6B870(uint64_t a1, char a2)
{
  return sub_1ABD238B0(a1, a2, &qword_1ED34E1D0, (unint64_t *)&unk_1ED34CA88, (uint64_t)&type metadata for StockRecord);
}

uint64_t sub_1ABE6B88C(uint64_t a1, int a2)
{
  return sub_1ABE6E120(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel, &qword_1EEC441E0);
}

unint64_t sub_1ABE6B8A0(uint64_t a1, char a2)
{
  return sub_1ABE6B8D8(a1, a2, &qword_1ED347188, (unint64_t *)&qword_1ED34DFB0, (uint64_t)&type metadata for Headline);
}

unint64_t sub_1ABE6B8BC(uint64_t a1, char a2)
{
  return sub_1ABE6B8D8(a1, a2, &qword_1ED346730, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968]);
}

unint64_t sub_1ABE6B8D8(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t result;
  int64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;

  v7 = *v5;
  sub_1ABE7109C(0, a3, a4, a5);
  v43 = a2;
  v44 = (_QWORD *)sub_1ABF31FFC();
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = 1 << *(_BYTE *)(v7 + 32);
    v40 = (_QWORD *)(v7 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v7 + 64);
    v41 = (unint64_t)(v8 + 63) >> 6;
    result = sub_1ABF2FF68();
    v12 = 0;
    v42 = v7;
    while (1)
    {
      if (v10)
      {
        v30 = __clz(__rbit64(v10));
        v31 = (v10 - 1) & v10;
        v32 = v30 | (v12 << 6);
      }
      else
      {
        v33 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
        if (v33 >= v41)
          goto LABEL_24;
        v34 = v40[v33];
        ++v12;
        if (!v34)
        {
          v12 = v33 + 1;
          if (v33 + 1 >= v41)
            goto LABEL_24;
          v34 = v40[v12];
          if (!v34)
          {
            v35 = v33 + 2;
            if (v35 >= v41)
            {
LABEL_24:
              swift_release();
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v40, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v34 = v40[v35];
            if (!v34)
            {
              while (1)
              {
                v12 = v35 + 1;
                if (__OFADD__(v35, 1))
                  goto LABEL_31;
                if (v12 >= v41)
                  goto LABEL_24;
                v34 = v40[v12];
                ++v35;
                if (v34)
                  goto LABEL_21;
              }
            }
            v12 = v35;
          }
        }
LABEL_21:
        v31 = (v34 - 1) & v34;
        v32 = __clz(__rbit64(v34)) + (v12 << 6);
      }
      v50 = v31;
      v51 = v12;
      if ((v43 & 1) != 0)
      {
        v36 = *(_QWORD *)(v7 + 56);
        v37 = *(_QWORD *)(v7 + 48) + 136 * v32;
        v27 = *(_QWORD *)v37;
        v28 = *(_QWORD *)(v37 + 8);
        v26 = *(_QWORD *)(v37 + 16);
        v45 = *(_QWORD *)(v37 + 24);
        v46 = *(_OWORD *)(v37 + 32);
        v25 = *(_QWORD *)(v37 + 48);
        v24 = *(_QWORD *)(v37 + 56);
        v23 = *(_BYTE *)(v37 + 64);
        v22 = *(_QWORD *)(v37 + 72);
        v21 = *(_QWORD *)(v37 + 80);
        v53 = *(_QWORD *)(v37 + 88);
        v52 = *(_QWORD *)(v37 + 96);
        v55 = *(_QWORD *)(v37 + 104);
        v54 = *(_QWORD *)(v37 + 112);
        v47 = *(_QWORD *)(v37 + 128);
        v48 = *(_QWORD *)(v37 + 120);
        v49 = *(_QWORD *)(v36 + 8 * v32);
      }
      else
      {
        v13 = *(_QWORD *)(v7 + 48) + 136 * v32;
        v15 = *(_OWORD *)(v13 + 16);
        v14 = *(_OWORD *)(v13 + 32);
        v16 = *(_OWORD *)(v13 + 48);
        v60 = *(_OWORD *)(v13 + 64);
        v59 = v16;
        v17 = *(_OWORD *)(v13 + 80);
        v18 = *(_OWORD *)(v13 + 96);
        v19 = *(_OWORD *)(v13 + 112);
        v64 = *(_QWORD *)(v13 + 128);
        v62 = v18;
        v63 = v19;
        v61 = v17;
        v56 = *(_OWORD *)v13;
        v57 = v15;
        v58 = v14;
        v20 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v32);
        v47 = v64;
        v48 = *((_QWORD *)&v19 + 1);
        v54 = v19;
        v55 = *((_QWORD *)&v18 + 1);
        v21 = v17;
        v52 = v18;
        v53 = *((_QWORD *)&v17 + 1);
        v22 = *((_QWORD *)&v60 + 1);
        v23 = v60;
        v24 = *((_QWORD *)&v59 + 1);
        v25 = v59;
        v46 = v14;
        v45 = *((_QWORD *)&v15 + 1);
        v26 = v15;
        v28 = *((_QWORD *)&v56 + 1);
        v27 = v56;
        sub_1ABD97ECC((uint64_t)&v56);
        v49 = v20;
        sub_1ABF2FF5C();
      }
      *(_QWORD *)&v56 = v27;
      *((_QWORD *)&v56 + 1) = v28;
      *(_QWORD *)&v57 = v26;
      *((_QWORD *)&v57 + 1) = v45;
      v58 = v46;
      *(_QWORD *)&v59 = v25;
      *((_QWORD *)&v59 + 1) = v24;
      LOBYTE(v60) = v23;
      *((_QWORD *)&v60 + 1) = v22;
      *(_QWORD *)&v61 = v21;
      *((_QWORD *)&v61 + 1) = v53;
      *(_QWORD *)&v62 = v52;
      *((_QWORD *)&v62 + 1) = v55;
      *(_QWORD *)&v63 = v54;
      *((_QWORD *)&v63 + 1) = v48;
      v64 = v47;
      sub_1ABF32308();
      sub_1ABD99914();
      sub_1ABF32338();
      result = sub_1ABF31E1C();
      *(_QWORD *)((char *)v44 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v29 = v44[6] + 136 * result;
      *(_QWORD *)v29 = v27;
      *(_QWORD *)(v29 + 8) = v28;
      *(_QWORD *)(v29 + 16) = v26;
      *(_QWORD *)(v29 + 24) = v45;
      *(_OWORD *)(v29 + 32) = v46;
      *(_QWORD *)(v29 + 48) = v25;
      *(_QWORD *)(v29 + 56) = v24;
      *(_BYTE *)(v29 + 64) = v23;
      *(_QWORD *)(v29 + 72) = v22;
      *(_QWORD *)(v29 + 80) = v21;
      v12 = v51;
      *(_QWORD *)(v29 + 88) = v53;
      *(_QWORD *)(v29 + 96) = v52;
      *(_QWORD *)(v29 + 104) = v55;
      *(_QWORD *)(v29 + 112) = v54;
      *(_QWORD *)(v29 + 120) = v48;
      *(_QWORD *)(v29 + 128) = v47;
      *(_QWORD *)(v44[7] + 8 * result) = v49;
      ++v44[2];
      v7 = v42;
      v10 = v50;
    }
  }
  result = swift_release();
  *v39 = v44;
  return result;
}

uint64_t sub_1ABE6BD14(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  sub_1ABD23BCC(0, (unint64_t *)&qword_1ED347310, (uint64_t)&unk_1ED3472F0, 0x1E0D58B48, (void (*)(uint64_t, uint64_t, uint64_t))sub_1ABCF7BCC);
  v38 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1ABF2FF68();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      sub_1ABF2FF5C();
      v33 = v32;
    }
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABE6C03C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, (unint64_t *)&unk_1ED346F98);
  v40 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = sub_1ABF2FF68();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v35 = *(_BYTE *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      sub_1ABF32308();
      sub_1ABF31840();
      result = sub_1ABF32338();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
      *(_QWORD *)v19 = v33;
      *(_QWORD *)(v19 + 8) = v34;
      *(_BYTE *)(v19 + 16) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABE6C36C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD __src[97];
  _BYTE v66[592];

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, (unint64_t *)&unk_1ED34E1A0);
  v42 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1ABF2FF68();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      if ((v42 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v25 >= v39)
      break;
    v26 = v40;
    v27 = v40[v25];
    ++v13;
    if (!v27)
    {
      v13 = v25 + 1;
      if (v25 + 1 >= v39)
        goto LABEL_33;
      v27 = v40[v13];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v27 = v40[v28];
        if (!v27)
        {
          while (1)
          {
            v13 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v27 = v40[v13];
            ++v28;
            if (v27)
              goto LABEL_22;
          }
        }
        v13 = v28;
      }
    }
LABEL_22:
    v10 = (v27 - 1) & v27;
    v17 = __clz(__rbit64(v27)) + (v13 << 6);
    if ((v42 & 1) != 0)
    {
LABEL_10:
      v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v20 = *v18;
      v19 = v18[1];
      v21 = *(_QWORD *)(v5 + 56) + 776 * v17;
      v45 = *(_QWORD *)(v21 + 8);
      v46 = *(_QWORD *)v21;
      v50 = *(_QWORD *)(v21 + 32);
      v51 = *(_QWORD *)(v21 + 24);
      v48 = *(_QWORD *)(v21 + 48);
      v49 = *(_QWORD *)(v21 + 40);
      v47 = *(_QWORD *)(v21 + 56);
      v22 = *(_BYTE *)(v21 + 64);
      v52 = *(_QWORD *)(v21 + 80);
      v43 = *(_QWORD *)(v21 + 72);
      v44 = *(_QWORD *)(v21 + 88);
      v53 = *(_QWORD *)(v21 + 96);
      v54 = *(_QWORD *)(v21 + 16);
      sub_1ABD843F0(v21 + 104, (uint64_t)__src, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
      v55 = *(_QWORD *)(v21 + 696);
      v56 = *(_QWORD *)(v21 + 712);
      v57 = *(_QWORD *)(v21 + 688);
      v58 = *(_QWORD *)(v21 + 728);
      v59 = *(_QWORD *)(v21 + 704);
      v61 = *(_BYTE *)(v21 + 736);
      v64 = *(_QWORD *)(v21 + 744);
      v60 = *(_QWORD *)(v21 + 752);
      v62 = *(_QWORD *)(v21 + 720);
      v63 = *(_QWORD *)(v21 + 768);
      v23 = __src;
      v24 = *(_QWORD *)(v21 + 760);
      goto LABEL_24;
    }
LABEL_23:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v20 = *v29;
    v19 = v29[1];
    memcpy(__src, (const void *)(*(_QWORD *)(v5 + 56) + 776 * v17), sizeof(__src));
    v24 = __src[95];
    v63 = __src[96];
    v64 = __src[93];
    v61 = __src[92];
    v62 = __src[90];
    v59 = __src[88];
    v60 = __src[94];
    v57 = __src[86];
    v58 = __src[91];
    v55 = __src[87];
    v56 = __src[89];
    v43 = __src[9];
    v44 = __src[11];
    v52 = __src[10];
    v53 = __src[12];
    v45 = __src[1];
    v46 = __src[0];
    v54 = __src[2];
    v50 = __src[4];
    v51 = __src[3];
    v48 = __src[6];
    v49 = __src[5];
    v47 = __src[7];
    v22 = __src[8];
    sub_1ABF2FF5C();
    sub_1ABD74914((uint64_t)__src);
    v23 = &__src[13];
LABEL_24:
    sub_1ABD843F0((uint64_t)v23, (uint64_t)v66, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v30 = -1 << *(_BYTE *)(v7 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v11 + 8 * (v31 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v11 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v11 + 8 * v32);
      }
      while (v36 == -1);
      v14 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    __src[0] = v46;
    __src[1] = v45;
    __src[2] = v54;
    __src[3] = v51;
    __src[4] = v50;
    __src[5] = v49;
    __src[6] = v48;
    __src[7] = v47;
    LOBYTE(__src[8]) = v22;
    __src[9] = v43;
    __src[10] = v52;
    __src[11] = v44;
    __src[12] = v53;
    sub_1ABD843F0((uint64_t)v66, (uint64_t)&__src[13], &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    __src[86] = v57;
    __src[87] = v55;
    __src[88] = v59;
    __src[89] = v56;
    __src[90] = v62;
    __src[91] = v58;
    LOBYTE(__src[92]) = v61;
    __src[93] = v64;
    __src[94] = v60;
    __src[95] = v24;
    __src[96] = v63;
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v19;
    result = (uint64_t)memcpy((void *)(*(_QWORD *)(v7 + 56) + 776 * v14), __src, 0x308uLL);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v26 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABE6C918(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  __int128 v45;

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, &qword_1ED351218);
  v40 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = sub_1ABF2FF68();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 72 * v21;
      v33 = *(_QWORD *)(v32 + 8);
      v34 = *(_QWORD *)(v32 + 24);
      v44 = *(_QWORD *)(v32 + 16);
      v43 = *(_BYTE *)(v32 + 32);
      v41 = *(_QWORD *)v32;
      v42 = *(_QWORD *)(v32 + 40);
      v45 = *(_OWORD *)(v32 + 48);
      v35 = *(_QWORD *)(v32 + 64);
      if ((v40 & 1) == 0)
      {
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      sub_1ABF32308();
      sub_1ABF31840();
      result = sub_1ABF32338();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = *(_QWORD *)(v7 + 56) + 72 * v17;
      *(_QWORD *)v19 = v41;
      *(_QWORD *)(v19 + 8) = v33;
      *(_QWORD *)(v19 + 16) = v44;
      *(_QWORD *)(v19 + 24) = v34;
      *(_BYTE *)(v19 + 32) = v43;
      *(_QWORD *)(v19 + 40) = v42;
      *(_OWORD *)(v19 + 48) = v45;
      *(_QWORD *)(v19 + 64) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABE6CCA8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, &qword_1ED351210);
  v40 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = sub_1ABF2FF68();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v35 = *(_BYTE *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      sub_1ABF32308();
      sub_1ABF31840();
      result = sub_1ABF32338();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
      *(_QWORD *)v19 = v33;
      *(_QWORD *)(v19 + 8) = v34;
      *(_BYTE *)(v19 + 16) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABE6CFD8(uint64_t a1, int a2)
{
  return sub_1ABE6E120(a1, a2, type metadata accessor for YahooMultiQuoteItem, &qword_1ED351208);
}

uint64_t sub_1ABE6CFEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  sub_1ABD24370(0, &qword_1ED346FA8, (void (*)(uint64_t))sub_1ABE71118);
  v36 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1ABF2FF68();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABE6D30C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v3 = v2;
  v5 = type metadata accessor for SDSAuthToken();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v48 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF305D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  sub_1ABE71734();
  v47 = a2;
  v12 = sub_1ABF31FFC();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v44 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v42 = v2;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = sub_1ABF2FF68();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v43)
      break;
    v25 = v44;
    v26 = v44[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v43)
        goto LABEL_34;
      v26 = v44[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v43)
        {
LABEL_34:
          swift_release();
          v3 = v42;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v44[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v43)
              goto LABEL_34;
            v26 = v44[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(_QWORD *)(v11 + 56);
      v31 = *(_QWORD *)(v46 + 72);
      sub_1ABCFE2AC(v30 + v31 * v23, v48, (uint64_t (*)(_QWORD))type metadata accessor for SDSAuthToken);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v32 = *(_QWORD *)(v11 + 56);
      v31 = *(_QWORD *)(v46 + 72);
      sub_1ABCFC790(v32 + v31 * v23, v48, (uint64_t (*)(_QWORD))type metadata accessor for SDSAuthToken);
    }
    sub_1ABE717AC();
    result = sub_1ABF316C0();
    v33 = -1 << *(_BYTE *)(v13 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v18 + 8 * v35);
      }
      while (v39 == -1);
      v21 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    result = sub_1ABCFE2AC(v48, *(_QWORD *)(v13 + 56) + v31 * v21, (uint64_t (*)(_QWORD))type metadata accessor for SDSAuthToken);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v42;
  v25 = v44;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v11 + 32);
  if (v40 >= 64)
    bzero(v25, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v40;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_1ABE6D6FC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  _OWORD v40[2];

  v3 = v2;
  v5 = sub_1ABF31F84();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1ABE7116C();
  v39 = a2;
  v10 = sub_1ABF31FFC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = sub_1ABF2FF68();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_1ABD1F610((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v21), v40);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_1ABD1FEFC(*(_QWORD *)(v9 + 56) + 32 * v21, (uint64_t)v40);
    }
    result = sub_1ABF316C0();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = (uint64_t)sub_1ABD1F610(v40, (_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v19));
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1ABE6DA7C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD __src[99];
  _BYTE v77[520];

  v3 = v2;
  v5 = *v2;
  sub_1ABD032EC(0, &qword_1ED34FE00);
  v43 = a2;
  v6 = sub_1ABF31FFC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v41 = (_QWORD *)(v5 + 64);
  v8 = 1 << *(_BYTE *)(v5 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = sub_1ABF2FF68();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      if ((v43 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v40)
      break;
    v27 = v41;
    v28 = v41[v26];
    ++v13;
    if (!v28)
    {
      v13 = v26 + 1;
      if (v26 + 1 >= v40)
        goto LABEL_33;
      v28 = v41[v13];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v28 = v41[v29];
        if (!v28)
        {
          while (1)
          {
            v13 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v28 = v41[v13];
            ++v29;
            if (v28)
              goto LABEL_22;
          }
        }
        v13 = v29;
      }
    }
LABEL_22:
    v10 = (v28 - 1) & v28;
    v17 = __clz(__rbit64(v28)) + (v13 << 6);
    if ((v43 & 1) != 0)
    {
LABEL_10:
      v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v20 = *v18;
      v19 = v18[1];
      v21 = *(_QWORD *)(v5 + 56) + 792 * v17;
      v48 = *(_QWORD *)(v21 + 8);
      v49 = *(_QWORD *)v21;
      v50 = *(_QWORD *)(v21 + 24);
      v51 = *(_QWORD *)(v21 + 40);
      v52 = *(_QWORD *)(v21 + 16);
      v54 = *(_QWORD *)(v21 + 56);
      v55 = *(_QWORD *)(v21 + 32);
      v22 = *(_QWORD *)(v21 + 80);
      v46 = *(_QWORD *)(v21 + 64);
      v47 = *(_QWORD *)(v21 + 88);
      v44 = *(_QWORD *)(v21 + 48);
      v45 = *(_QWORD *)(v21 + 96);
      v56 = *(_QWORD *)(v21 + 104);
      v57 = *(_QWORD *)(v21 + 72);
      sub_1ABD843F0(v21 + 112, (uint64_t)__src, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
      v73 = *(_QWORD *)(v21 + 624);
      v69 = *(_QWORD *)(v21 + 632);
      v60 = *(_QWORD *)(v21 + 664);
      v61 = *(_QWORD *)(v21 + 656);
      v58 = *(_QWORD *)(v21 + 680);
      v59 = *(_QWORD *)(v21 + 672);
      v53 = *(_BYTE *)(v21 + 688);
      v66 = *(_QWORD *)(v21 + 640);
      v67 = *(_QWORD *)(v21 + 696);
      v63 = *(_QWORD *)(v21 + 648);
      v64 = *(_QWORD *)(v21 + 704);
      v68 = *(_QWORD *)(v21 + 728);
      v65 = *(_QWORD *)(v21 + 736);
      v62 = *(_BYTE *)(v21 + 744);
      v74 = *(_QWORD *)(v21 + 752);
      v75 = *(_QWORD *)(v21 + 712);
      v70 = *(_QWORD *)(v21 + 760);
      v71 = *(_QWORD *)(v21 + 720);
      v72 = *(_QWORD *)(v21 + 776);
      v23 = __src;
      v24 = *(_QWORD *)(v21 + 784);
      v25 = *(_QWORD *)(v21 + 768);
      goto LABEL_24;
    }
LABEL_23:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v20 = *v30;
    v19 = v30[1];
    memcpy(__src, (const void *)(*(_QWORD *)(v5 + 56) + 792 * v17), sizeof(__src));
    v24 = __src[98];
    v25 = __src[96];
    v70 = __src[95];
    v74 = __src[94];
    v75 = __src[89];
    v71 = __src[90];
    v72 = __src[97];
    v62 = __src[93];
    v67 = __src[87];
    v68 = __src[91];
    v64 = __src[88];
    v65 = __src[92];
    v73 = __src[78];
    v69 = __src[79];
    v66 = __src[80];
    v63 = __src[81];
    v60 = __src[83];
    v61 = __src[82];
    v58 = __src[85];
    v59 = __src[84];
    v53 = __src[86];
    v22 = __src[10];
    v56 = __src[13];
    v46 = __src[8];
    v47 = __src[11];
    v57 = __src[9];
    v44 = __src[6];
    v45 = __src[12];
    v54 = __src[7];
    v55 = __src[4];
    v51 = __src[5];
    v52 = __src[2];
    v49 = __src[0];
    v50 = __src[3];
    v48 = __src[1];
    sub_1ABF2FF5C();
    sub_1ABE711D4((uint64_t)__src);
    v23 = &__src[14];
LABEL_24:
    sub_1ABD843F0((uint64_t)v23, (uint64_t)v77, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v31 = -1 << *(_BYTE *)(v7 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    __src[0] = v49;
    __src[1] = v48;
    __src[2] = v52;
    __src[3] = v50;
    __src[4] = v55;
    __src[5] = v51;
    __src[6] = v44;
    __src[7] = v54;
    __src[8] = v46;
    __src[9] = v57;
    __src[10] = v22;
    __src[11] = v47;
    __src[12] = v45;
    __src[13] = v56;
    sub_1ABD843F0((uint64_t)v77, (uint64_t)&__src[14], &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
    __src[78] = v73;
    __src[79] = v69;
    __src[80] = v66;
    __src[81] = v63;
    __src[82] = v61;
    __src[83] = v60;
    __src[84] = v59;
    __src[85] = v58;
    LOBYTE(__src[86]) = v53;
    __src[87] = v67;
    __src[88] = v64;
    __src[89] = v75;
    __src[90] = v71;
    __src[91] = v68;
    __src[92] = v65;
    LOBYTE(__src[93]) = v62;
    __src[94] = v74;
    __src[95] = v70;
    __src[96] = v25;
    __src[97] = v72;
    __src[98] = v24;
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v19;
    result = (uint64_t)memcpy((void *)(*(_QWORD *)(v7 + 56) + 792 * v14), __src, 0x318uLL);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v27 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v27, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1ABE6E10C(uint64_t a1, int a2)
{
  return sub_1ABE6E120(a1, a2, type metadata accessor for YahooQuoteDetailItem, &qword_1ED351200);
}

uint64_t sub_1ABE6E120(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int64_t v47;
  _QWORD *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;

  v7 = v4;
  v9 = a3(0);
  v49 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v51 = (uint64_t)&v45 - v10;
  v11 = *v4;
  v12 = a3;
  sub_1ABD24370(0, a4, (void (*)(uint64_t))a3);
  v50 = a2;
  v13 = sub_1ABF31FFC();
  v14 = v13;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v11 + 32);
  v16 = *(_QWORD *)(v11 + 64);
  v48 = (_QWORD *)(v11 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v46 = v4;
  v47 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = sub_1ABF2FF68();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_22;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v47)
      break;
    v27 = v48;
    v28 = v48[v26];
    ++v21;
    if (!v28)
    {
      v21 = v26 + 1;
      if (v26 + 1 >= v47)
        goto LABEL_34;
      v28 = v48[v21];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v47)
        {
LABEL_34:
          swift_release();
          v7 = v46;
          if ((v50 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v48[v29];
        if (!v28)
        {
          while (1)
          {
            v21 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v21 >= v47)
              goto LABEL_34;
            v28 = v48[v21];
            ++v29;
            if (v28)
              goto LABEL_21;
          }
        }
        v21 = v29;
      }
    }
LABEL_21:
    v18 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_22:
    v30 = *(_QWORD *)(v11 + 56);
    v31 = v11;
    v32 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v25);
    v34 = *v32;
    v33 = v32[1];
    v35 = *(_QWORD *)(v49 + 72);
    v36 = v30 + v35 * v25;
    if ((v50 & 1) != 0)
    {
      sub_1ABCFE2AC(v36, v51, v12);
    }
    else
    {
      sub_1ABCFC790(v36, v51, v12);
      sub_1ABF2FF5C();
    }
    sub_1ABF32308();
    sub_1ABF31840();
    result = sub_1ABF32338();
    v37 = -1 << *(_BYTE *)(v14 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v19 + 8 * v39);
      }
      while (v43 == -1);
      v22 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v22);
    *v23 = v34;
    v23[1] = v33;
    result = sub_1ABCFE2AC(v51, *(_QWORD *)(v14 + 56) + v35 * v22, v12);
    ++*(_QWORD *)(v14 + 16);
    v11 = v31;
  }
  swift_release();
  v7 = v46;
  v27 = v48;
  if ((v50 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v44 = 1 << *(_BYTE *)(v11 + 32);
  if (v44 >= 64)
    bzero(v27, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v44;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v7 = v14;
  return result;
}

void *sub_1ABE6E4AC()
{
  return sub_1ABE6E4E4((unint64_t *)&unk_1ED3472F8, (uint64_t)&unk_1ED3472E0, (uint64_t)&protocolRef_FCHeadlineMetadata);
}

void *sub_1ABE6E4C8()
{
  return sub_1ABE6E4E4(&qword_1ED347308, (uint64_t)&qword_1ED34E0B0, (uint64_t)&protocolRef_FCHeadlineProviding);
}

void *sub_1ABE6E4E4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v26;
  int64_t v27;

  v4 = v3;
  sub_1ABD23BCC(0, a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1ABCF7C04);
  v5 = *v3;
  v6 = sub_1ABF31FF0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_24:
    result = (void *)swift_release();
    *v4 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v12++, 1))
      goto LABEL_26;
    if (v12 >= v16)
      goto LABEL_24;
    v26 = *(_QWORD *)(v9 + 8 * v12);
    if (!v26)
      break;
LABEL_23:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v21 = v20[1];
    v22 = 8 * v18;
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
    v24 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v24 = *v20;
    v24[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v22) = v23;
    sub_1ABF2FF5C();
    result = (void *)swift_unknownObjectRetain();
  }
  v27 = v12 + 1;
  if (v12 + 1 >= v16)
    goto LABEL_24;
  v26 = *(_QWORD *)(v9 + 8 * v27);
  if (v26)
  {
    ++v12;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_24;
    v26 = *(_QWORD *)(v9 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1ABE6E690()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  sub_1ABD032EC(0, (unint64_t *)&qword_1ED34FDF0);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    sub_1ABF2FF5C();
    result = (void *)sub_1ABF2FF5C();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE6E854()
{
  return sub_1ABE70BAC((void (*)(uint64_t))type metadata accessor for QuoteDetail, (unint64_t *)&unk_1ED34E180);
}

void *sub_1ABE6E868()
{
  return sub_1ABE70BAC((void (*)(uint64_t))type metadata accessor for Quote, &qword_1ED34E1B8);
}

void *sub_1ABE6E87C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v1 = v0;
  sub_1ABD032EC(0, &qword_1ED34E1C0);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      v9 = v36 + 1;
      if (v36 + 1 >= v13)
        goto LABEL_26;
      v37 = *(_QWORD *)(v6 + 8 * v9);
      if (!v37)
        break;
    }
LABEL_25:
    v12 = (v37 - 1) & v37;
    v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 136 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v23 = *(_OWORD *)(v21 + 16);
    v22 = *(_OWORD *)(v21 + 32);
    v24 = *(_OWORD *)(v21 + 64);
    v42 = *(_OWORD *)(v21 + 48);
    v43 = v24;
    v26 = *(_OWORD *)(v21 + 96);
    v25 = *(_OWORD *)(v21 + 112);
    v27 = *(_OWORD *)(v21 + 80);
    v47 = *(_QWORD *)(v21 + 128);
    v45 = v26;
    v46 = v25;
    v44 = v27;
    v39 = *(_OWORD *)v21;
    v40 = v23;
    v41 = v22;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v28 = v19;
    v28[1] = v18;
    v29 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v29 = v39;
    v30 = v40;
    v31 = v41;
    v32 = v43;
    *(_OWORD *)(v29 + 48) = v42;
    *(_OWORD *)(v29 + 64) = v32;
    *(_OWORD *)(v29 + 16) = v30;
    *(_OWORD *)(v29 + 32) = v31;
    v33 = v44;
    v34 = v45;
    v35 = v46;
    *(_QWORD *)(v29 + 128) = v47;
    *(_OWORD *)(v29 + 96) = v34;
    *(_OWORD *)(v29 + 112) = v35;
    *(_OWORD *)(v29 + 80) = v33;
    sub_1ABF2FF5C();
    result = (void *)sub_1ABD97ECC((uint64_t)&v39);
  }
  v38 = v36 + 2;
  if (v38 >= v13)
    goto LABEL_26;
  v37 = *(_QWORD *)(v6 + 8 * v38);
  if (v37)
  {
    v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v9);
    ++v38;
    if (v37)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE6EAA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  sub_1ABD032EC(0, &qword_1ED34E1C8);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 48 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v25 = *(_QWORD *)(v21 + 16);
    v24 = *(_QWORD *)(v21 + 24);
    v26 = *(_QWORD *)(v21 + 32);
    LOWORD(v21) = *(_WORD *)(v21 + 40);
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v27 = v19;
    v27[1] = v18;
    v28 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v28 = v22;
    *(_QWORD *)(v28 + 8) = v23;
    *(_QWORD *)(v28 + 16) = v25;
    *(_QWORD *)(v28 + 24) = v24;
    *(_QWORD *)(v28 + 32) = v26;
    *(_WORD *)(v28 + 40) = v21;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    result = (void *)sub_1ABF2FF5C();
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE6ECA4()
{
  return sub_1ABE6F4FC(&qword_1ED34CAB0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968]);
}

id sub_1ABE6ECC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1ABDF23F0();
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE6EE60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _BYTE v26[136];

  v1 = v0;
  sub_1ABD032EC(0, &qword_1ED34C900);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 136 * v15;
    sub_1ABDEA124(*(_QWORD *)(v2 + 56) + 136 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1ABDEA124((uint64_t)v26, *(_QWORD *)(v4 + 56) + v20);
    sub_1ABF2FF5C();
    result = (void *)sub_1ABD97ECC((uint64_t)v26);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ABE6F05C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v1 = v0;
  sub_1ABD032EC(0, &qword_1ED3511D8);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      v9 = v36 + 1;
      if (v36 + 1 >= v13)
        goto LABEL_26;
      v37 = *(_QWORD *)(v6 + 8 * v9);
      if (!v37)
        break;
    }
LABEL_25:
    v12 = (v37 - 1) & v37;
    v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 136 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v23 = *(_OWORD *)(v21 + 16);
    v22 = *(_OWORD *)(v21 + 32);
    v24 = *(_OWORD *)(v21 + 64);
    v42 = *(_OWORD *)(v21 + 48);
    v43 = v24;
    v26 = *(_OWORD *)(v21 + 96);
    v25 = *(_OWORD *)(v21 + 112);
    v27 = *(_OWORD *)(v21 + 80);
    v47 = *(_QWORD *)(v21 + 128);
    v45 = v26;
    v46 = v25;
    v44 = v27;
    v39 = *(_OWORD *)v21;
    v40 = v23;
    v41 = v22;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v28 = v19;
    v28[1] = v18;
    v29 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v29 = v39;
    v30 = v40;
    v31 = v41;
    v32 = v43;
    *(_OWORD *)(v29 + 48) = v42;
    *(_OWORD *)(v29 + 64) = v32;
    *(_OWORD *)(v29 + 16) = v30;
    *(_OWORD *)(v29 + 32) = v31;
    v33 = v44;
    v34 = v45;
    v35 = v46;
    *(_QWORD *)(v29 + 128) = v47;
    *(_OWORD *)(v29 + 96) = v34;
    *(_OWORD *)(v29 + 112) = v35;
    *(_OWORD *)(v29 + 80) = v33;
    sub_1ABF2FF5C();
    result = sub_1ABDA89F4((uint64_t *)&v39);
  }
  v38 = v36 + 2;
  if (v38 >= v13)
    goto LABEL_26;
  v37 = *(_QWORD *)(v6 + 8 * v38);
  if (v37)
  {
    v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v37 = *(_QWORD *)(v6 + 8 * v9);
    ++v38;
    if (v37)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE6F288()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;

  sub_1ABD032EC(0, (unint64_t *)&unk_1ED34E190);
  v35 = v0;
  v1 = *v0;
  v2 = sub_1ABF31FF0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v35 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5)
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  v37 = v1 + 64;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v36 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    v32 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v36)
      goto LABEL_26;
    v33 = *(_QWORD *)(v37 + 8 * v32);
    ++v7;
    if (!v33)
    {
      v7 = v32 + 1;
      if (v32 + 1 >= v36)
        goto LABEL_26;
      v33 = *(_QWORD *)(v37 + 8 * v7);
      if (!v33)
        break;
    }
LABEL_25:
    v10 = (v33 - 1) & v33;
    v12 = __clz(__rbit64(v33)) + (v7 << 6);
LABEL_12:
    v13 = 16 * v12;
    v14 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v12);
    v15 = *v14;
    v16 = v14[1];
    v17 = 104 * v12;
    v18 = *(_QWORD *)(v1 + 56) + v17;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_QWORD *)(v18 + 32);
    v24 = *(_QWORD *)(v18 + 72);
    v25 = *(_BYTE *)(v18 + 80);
    v27 = *(_QWORD *)(v18 + 88);
    v26 = *(_QWORD *)(v18 + 96);
    v28 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v13);
    v29 = *(_OWORD *)(v18 + 40);
    v30 = *(_OWORD *)(v18 + 56);
    *v28 = v15;
    v28[1] = v16;
    v31 = *(_QWORD *)(v3 + 56) + v17;
    *(_QWORD *)v31 = v19;
    *(_QWORD *)(v31 + 8) = v20;
    *(_QWORD *)(v31 + 16) = v21;
    *(_QWORD *)(v31 + 24) = v22;
    *(_QWORD *)(v31 + 32) = v23;
    *(_OWORD *)(v31 + 40) = v29;
    *(_OWORD *)(v31 + 56) = v30;
    *(_QWORD *)(v31 + 72) = v24;
    *(_BYTE *)(v31 + 80) = v25;
    *(_QWORD *)(v31 + 88) = v27;
    *(_QWORD *)(v31 + 96) = v26;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    result = (void *)sub_1ABF2FF5C();
  }
  v34 = v32 + 2;
  if (v34 >= v36)
    goto LABEL_26;
  v33 = *(_QWORD *)(v37 + 8 * v34);
  if (v33)
  {
    v7 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v7 >= v36)
      goto LABEL_26;
    v33 = *(_QWORD *)(v37 + 8 * v7);
    ++v34;
    if (v33)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE6F4E0()
{
  return sub_1ABE6F4FC(&qword_1ED34E1D0, (unint64_t *)&unk_1ED34CA88, (uint64_t)&type metadata for StockRecord);
}

void *sub_1ABE6F4FC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v4 = v3;
  sub_1ABE7102C(0, a1, a2, a3);
  v5 = *v3;
  v6 = sub_1ABF31FF0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v4 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v9 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v21 = v20[1];
    v22 = 8 * v18;
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
    v24 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v24 = *v20;
    v24[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v22) = v23;
    sub_1ABF2FF5C();
    result = (void *)sub_1ABF2FF5C();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
    goto LABEL_26;
  v26 = *(_QWORD *)(v9 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v9 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE6F6B8()
{
  return sub_1ABE70BAC((void (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel, &qword_1EEC441E0);
}

void *sub_1ABE6F6CC()
{
  return sub_1ABE6F718(&qword_1ED347188, (unint64_t *)&qword_1ED34DFB0, (uint64_t)&type metadata for Headline);
}

void *sub_1ABE6F6E8()
{
  return sub_1ABE70BAC((void (*)(uint64_t))type metadata accessor for Chart, &qword_1ED34E1B0);
}

void *sub_1ABE6F6FC()
{
  return sub_1ABE6F718(&qword_1ED346730, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968]);
}

void *sub_1ABE6F718(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  _OWORD v31[8];
  uint64_t v32;

  v4 = v3;
  sub_1ABE7109C(0, a1, a2, a3);
  v5 = *v3;
  v6 = sub_1ABF31FF0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v4 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v28 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v16)
      goto LABEL_26;
    v29 = *(_QWORD *)(v9 + 8 * v28);
    ++v12;
    if (!v29)
    {
      v12 = v28 + 1;
      if (v28 + 1 >= v16)
        goto LABEL_26;
      v29 = *(_QWORD *)(v9 + 8 * v12);
      if (!v29)
        break;
    }
LABEL_25:
    v15 = (v29 - 1) & v29;
    v18 = __clz(__rbit64(v29)) + (v12 << 6);
LABEL_12:
    v19 = (_OWORD *)(*(_QWORD *)(v5 + 48) + 136 * v18);
    v21 = v19[1];
    v20 = v19[2];
    v22 = v19[4];
    v31[3] = v19[3];
    v31[4] = v22;
    v23 = v19[5];
    v24 = v19[6];
    v25 = v19[7];
    v32 = *((_QWORD *)v19 + 16);
    v31[6] = v24;
    v31[7] = v25;
    v31[5] = v23;
    v31[0] = *v19;
    v31[1] = v21;
    v31[2] = v20;
    v26 = 8 * v18;
    v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
    memmove((void *)(*(_QWORD *)(v7 + 48) + 136 * v18), v19, 0x88uLL);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v26) = v27;
    sub_1ABD97ECC((uint64_t)v31);
    result = (void *)sub_1ABF2FF5C();
  }
  v30 = v28 + 2;
  if (v30 >= v16)
    goto LABEL_26;
  v29 = *(_QWORD *)(v9 + 8 * v30);
  if (v29)
  {
    v12 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v29 = *(_QWORD *)(v9 + 8 * v12);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1ABE6F920()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  sub_1ABD23BCC(0, (unint64_t *)&qword_1ED347310, (uint64_t)&unk_1ED3472F0, 0x1E0D58B48, (void (*)(uint64_t, uint64_t, uint64_t))sub_1ABCF7BCC);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v12)
      goto LABEL_23;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v8;
    if (!v22)
    {
      v8 = v21 + 1;
      if (v21 + 1 >= v12)
        goto LABEL_23;
      v22 = *(_QWORD *)(v6 + 8 * v8);
      if (!v22)
        break;
    }
LABEL_22:
    v11 = (v22 - 1) & v22;
    v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_9:
    v15 = 16 * v14;
    v16 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v17 = v16[1];
    v18 = 8 * v14;
    v19 = *(void **)(*(_QWORD *)(v2 + 56) + v18);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v15);
    *v20 = *v16;
    v20[1] = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    sub_1ABF2FF5C();
    result = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v12)
    goto LABEL_23;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v8 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v8 >= v12)
      goto LABEL_23;
    v22 = *(_QWORD *)(v6 + 8 * v8);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1ABE6FAF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_1ABD032EC(0, (unint64_t *)&unk_1ED346F98);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    LOBYTE(v21) = *(_BYTE *)(v21 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = v19;
    v24[1] = v18;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v22;
    *(_QWORD *)(v25 + 8) = v23;
    *(_BYTE *)(v25 + 16) = v21;
    sub_1ABF2FF5C();
    result = (void *)sub_1ABF2FF5C();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE6FCC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _BYTE __dst[784];

  v1 = v0;
  sub_1ABD032EC(0, (unint64_t *)&unk_1ED34E1A0);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 776 * v15;
    memcpy(__dst, (const void *)(*(_QWORD *)(v2 + 56) + 776 * v15), 0x308uLL);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v18;
    v21[1] = v19;
    memcpy((void *)(*(_QWORD *)(v4 + 56) + v20), __dst, 0x308uLL);
    sub_1ABF2FF5C();
    result = (void *)sub_1ABD74914((uint64_t)__dst);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ABE6FEC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;

  sub_1ABD032EC(0, &qword_1ED351218);
  v34 = v0;
  v1 = *v0;
  v2 = sub_1ABF31FF0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v34 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v31 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v12)
      goto LABEL_26;
    v32 = *(_QWORD *)(v5 + 8 * v31);
    ++v8;
    if (!v32)
    {
      v8 = v31 + 1;
      if (v31 + 1 >= v12)
        goto LABEL_26;
      v32 = *(_QWORD *)(v5 + 8 * v8);
      if (!v32)
        break;
    }
LABEL_25:
    v11 = (v32 - 1) & v32;
    v14 = __clz(__rbit64(v32)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    v19 = 72 * v14;
    v20 = *(_QWORD *)(v1 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 24);
    v25 = *(_BYTE *)(v20 + 32);
    v26 = *(_QWORD *)(v20 + 40);
    v27 = *(_QWORD *)(v20 + 64);
    v28 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v15);
    v29 = *(_OWORD *)(v20 + 48);
    *v28 = v17;
    v28[1] = v18;
    v30 = *(_QWORD *)(v3 + 56) + v19;
    *(_QWORD *)v30 = v21;
    *(_QWORD *)(v30 + 8) = v22;
    *(_QWORD *)(v30 + 16) = v23;
    *(_QWORD *)(v30 + 24) = v24;
    *(_BYTE *)(v30 + 32) = v25;
    *(_QWORD *)(v30 + 40) = v26;
    *(_OWORD *)(v30 + 48) = v29;
    *(_QWORD *)(v30 + 64) = v27;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    result = (void *)sub_1ABF2FF5C();
  }
  v33 = v31 + 2;
  if (v33 >= v12)
    goto LABEL_26;
  v32 = *(_QWORD *)(v5 + 8 * v33);
  if (v32)
  {
    v8 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v32 = *(_QWORD *)(v5 + 8 * v8);
    ++v33;
    if (v32)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE700F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_1ABD032EC(0, &qword_1ED351210);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    LOBYTE(v21) = *(_BYTE *)(v21 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = v19;
    v24[1] = v18;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v22;
    *(_QWORD *)(v25 + 8) = v23;
    *(_BYTE *)(v25 + 16) = v21;
    sub_1ABF2FF5C();
    result = (void *)sub_1ABF2FF5C();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE702C4()
{
  return sub_1ABE70BAC((void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem, &qword_1ED351208);
}

void *sub_1ABE702D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_1ABD24370(0, &qword_1ED346FA8, (void (*)(uint64_t))sub_1ABE71118);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    sub_1ABF2FF5C();
    result = (void *)sub_1ABF2FF5C();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1ABE70498()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for SDSAuthToken();
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1ABF305D4();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE71734();
  v30 = v0;
  v5 = *v0;
  v6 = sub_1ABF31FF0();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        result = (void *)sub_1ABCFE2AC(v17, *(_QWORD *)(i + 56) + v23, (uint64_t (*)(_QWORD))type metadata accessor for SDSAuthToken))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_1ABCFC790(*(_QWORD *)(v21 + 56) + v23, v17, (uint64_t (*)(_QWORD))type metadata accessor for SDSAuthToken);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1ABE7075C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD v26[2];

  v1 = v0;
  v2 = sub_1ABF31F84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE7116C();
  v6 = *v0;
  v7 = sub_1ABF31FF0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    sub_1ABD1FEFC(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = sub_1ABD1F610(v26, (_OWORD *)(*(_QWORD *)(v8 + 56) + v20));
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ABE70994()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _BYTE __dst[800];

  v1 = v0;
  sub_1ABD032EC(0, &qword_1ED34FE00);
  v2 = *v0;
  v3 = sub_1ABF31FF0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 792 * v15;
    memcpy(__dst, (const void *)(*(_QWORD *)(v2 + 56) + 792 * v15), 0x318uLL);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v18;
    v21[1] = v19;
    memcpy((void *)(*(_QWORD *)(v4 + 56) + v20), __dst, 0x318uLL);
    sub_1ABF2FF5C();
    result = (void *)sub_1ABE711D4((uint64_t)__dst);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ABE70B98()
{
  return sub_1ABE70BAC((void (*)(uint64_t))type metadata accessor for YahooQuoteDetailItem, &qword_1ED351200);
}

void *sub_1ABE70BAC(void (*a1)(uint64_t), unint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = ((uint64_t (*)(_QWORD))a1)(0);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  sub_1ABD24370(0, a2, a1);
  v29 = v2;
  v8 = *v2;
  v9 = sub_1ABF31FF0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v30 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    v22 = *v21;
    v23 = v21[1];
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_1ABCFC790(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, (uint64_t (*)(_QWORD))a1);
    v25 = (_QWORD *)(*(_QWORD *)(v10 + 48) + v20);
    *v25 = v22;
    v25[1] = v23;
    sub_1ABCFE2AC((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, (uint64_t (*)(_QWORD))a1);
    result = (void *)sub_1ABF2FF5C();
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1ABE70DE8()
{
  unint64_t result;

  result = qword_1EEC441D0;
  if (!qword_1EEC441D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46418, &type metadata for Headline);
    atomic_store(result, (unint64_t *)&qword_1EEC441D0);
  }
  return result;
}

uint64_t assignWithCopy for Headline(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v24 = a2[9];
  v25 = a2[10];
  v26 = a2[11];
  v27 = (void *)a2[12];
  v28 = a2[13];
  v29 = a2[14];
  v30 = a2[15];
  v31 = a2[16];
  v32 = a2[17];
  sub_1ABCFFD28(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v26;
  *(_QWORD *)(a1 + 96) = v27;
  *(_QWORD *)(a1 + 104) = v28;
  *(_QWORD *)(a1 + 112) = v29;
  *(_QWORD *)(a1 + 120) = v30;
  *(_QWORD *)(a1 + 128) = v31;
  *(_QWORD *)(a1 + 136) = v32;
  sub_1ABCFFDBC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), (void *)v22, *((uint64_t *)&v22 + 1));
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for Headline(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 96);
  v14 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v15;
  v16 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v16;
  v17 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v17;
  *(_OWORD *)(a1 + 128) = a2[8];
  sub_1ABCFFDBC(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), (void *)v13, *((uint64_t *)&v13 + 1));
  return a1;
}

uint64_t sub_1ABE71018(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 104) = *(_QWORD *)(result + 104) & 1 | (a2 << 63);
  return result;
}

void sub_1ABE7102C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1ABD04578(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = sub_1ABF32020();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1ABE7109C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1ABD04578(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD97FF4();
    v5 = sub_1ABF32020();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1ABE71118()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346F40)
  {
    type metadata accessor for ChartManagerObserverProxy();
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346F40);
  }
}

void sub_1ABE7116C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FE08)
  {
    sub_1ABF31F84();
    v0 = sub_1ABF32020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FE08);
  }
}

uint64_t sub_1ABE711D4(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 80);
  v32 = *(_QWORD *)(a1 + 120);
  v33 = *(_QWORD *)(a1 + 112);
  v30 = *(_QWORD *)(a1 + 136);
  v31 = *(_QWORD *)(a1 + 128);
  v28 = *(_QWORD *)(a1 + 152);
  v29 = *(_QWORD *)(a1 + 144);
  v26 = *(_QWORD *)(a1 + 168);
  v27 = *(_QWORD *)(a1 + 160);
  v24 = *(_OWORD *)(a1 + 192);
  v25 = *(_OWORD *)(a1 + 176);
  v22 = *(_OWORD *)(a1 + 224);
  v23 = *(_OWORD *)(a1 + 208);
  v21 = *(_OWORD *)(a1 + 240);
  v19 = *(_OWORD *)(a1 + 272);
  v20 = *(_OWORD *)(a1 + 256);
  v18 = *(_OWORD *)(a1 + 288);
  v16 = *(_OWORD *)(a1 + 304);
  v14 = *(_OWORD *)(a1 + 336);
  v15 = *(_OWORD *)(a1 + 320);
  v13 = *(_OWORD *)(a1 + 352);
  v11 = *(_OWORD *)(a1 + 368);
  v9 = *(_OWORD *)(a1 + 400);
  v10 = *(_OWORD *)(a1 + 384);
  v7 = *(_OWORD *)(a1 + 432);
  v8 = *(_OWORD *)(a1 + 416);
  v5 = *(_OWORD *)(a1 + 464);
  v6 = *(_OWORD *)(a1 + 448);
  v4 = *(_OWORD *)(a1 + 480);
  v17 = *(_QWORD *)(a1 + 624);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABE714D4(v12, v2);
  sub_1ABE71504(v33, v32, v31, v30, v29, v28, v27, v26, v25, *((uint64_t *)&v25 + 1), v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v4);
  sub_1ABE71724(v17);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABE714D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABE71504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t result;

  if (a8)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABD1A564(a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45,
      a46,
      a47);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABE71724(uint64_t result)
{
  if (result != 1)
    return sub_1ABF2FF5C();
  return result;
}

void sub_1ABE71734()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E5F0)
  {
    sub_1ABF305D4();
    type metadata accessor for SDSAuthToken();
    sub_1ABE717AC();
    v0 = sub_1ABF32020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E5F0);
  }
}

unint64_t sub_1ABE717AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED350508;
  if (!qword_1ED350508)
  {
    v1 = sub_1ABF305D4();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0CB0018], v1);
    atomic_store(result, (unint64_t *)&qword_1ED350508);
  }
  return result;
}

unint64_t sub_1ABE717F8()
{
  unint64_t result;

  result = qword_1EEC441E8[0];
  if (!qword_1EEC441E8[0])
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46500, &type metadata for SymbolInWatchlistOptionsProvider);
    atomic_store(result, qword_1EEC441E8);
  }
  return result;
}

uint64_t sub_1ABE71840(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[39] = a1;
  v2[40] = a2;
  v2[41] = *(_QWORD *)(type metadata accessor for SymbolEntity() - 8);
  v2[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABE7189C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  if (sub_1ABF30034())
  {
    swift_getKeyPath();
    sub_1ABD67FB8();
    sub_1ABF2FE30();
    swift_release();
    swift_release();
    v1 = *(_QWORD *)(v0 + 280);
    v6 = *(_OWORD *)(v0 + 288);
    *(_OWORD *)(v0 + 344) = v6;
    sub_1ABF2FBF0();
    v2 = *(_QWORD *)(v0 + 224);
    v3 = *(_QWORD *)(v0 + 232);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 200), v2);
    *(_QWORD *)(v0 + 360) = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 144))(v1, v6, v2, v3);
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v4;
    *v4 = v0;
    v4[1] = sub_1ABE719E0;
    return sub_1ABF31150();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
  }
}

uint64_t sub_1ABE719E0()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 200);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE71A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  _QWORD v11[5];
  __int16 v12;

  v1 = *(_QWORD *)(v0 + 160);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 168);
    v3 = *(_QWORD *)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 184);
    v5 = *(_WORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 152);
    sub_1ABF2FBF0();
    v7 = *(_QWORD *)(v0 + 264);
    v6 = *(_QWORD *)(v0 + 272);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 240), v7);
    v11[0] = v10;
    v11[1] = v1;
    v11[2] = v2;
    v11[3] = v3;
    v11[4] = v4;
    v12 = v5;
    *(_QWORD *)(v0 + 376) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v6 + 112))(v11, v7, v6);
    sub_1ABD365D4(v10, v1);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 384) = v8;
    *v8 = v0;
    v8[1] = sub_1ABE71BC0;
    return sub_1ABF31150();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
  }
}

uint64_t sub_1ABE71BC0()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 240);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE71C48()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t i;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  __int128 v23[8];
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 328);
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB50D0(0, v2, 0);
    v4 = v22;
    v5 = v2 - 1;
    for (i = 32; ; i += 136)
    {
      v7 = *(_QWORD *)(v0 + 336);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + i);
      v8 = *(_OWORD *)(v1 + i + 64);
      v10 = *(_OWORD *)(v1 + i + 16);
      v9 = *(_OWORD *)(v1 + i + 32);
      *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + i + 48);
      *(_OWORD *)(v0 + 80) = v8;
      *(_OWORD *)(v0 + 32) = v10;
      *(_OWORD *)(v0 + 48) = v9;
      v12 = *(_OWORD *)(v1 + i + 96);
      v11 = *(_OWORD *)(v1 + i + 112);
      v13 = *(_OWORD *)(v1 + i + 80);
      *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + i + 128);
      *(_OWORD *)(v0 + 112) = v12;
      *(_OWORD *)(v0 + 128) = v11;
      *(_OWORD *)(v0 + 96) = v13;
      v14 = *(_OWORD *)(v1 + i + 112);
      v23[6] = *(_OWORD *)(v1 + i + 96);
      v23[7] = v14;
      v24 = *(_QWORD *)(v1 + i + 128);
      v15 = *(_OWORD *)(v1 + i + 48);
      v23[2] = *(_OWORD *)(v1 + i + 32);
      v23[3] = v15;
      v16 = *(_OWORD *)(v1 + i + 80);
      v23[4] = *(_OWORD *)(v1 + i + 64);
      v23[5] = v16;
      v17 = *(_OWORD *)(v1 + i + 16);
      v23[0] = *(_OWORD *)(v1 + i);
      v23[1] = v17;
      sub_1ABD97ECC(v0 + 16);
      SymbolEntity.init(from:)(v23, v7);
      v19 = *(_QWORD *)(v22 + 16);
      v18 = *(_QWORD *)(v22 + 24);
      if (v19 >= v18 >> 1)
        sub_1ABDB50D0(v18 > 1, v19 + 1, 1);
      v20 = *(_QWORD *)(v0 + 336);
      *(_QWORD *)(v22 + 16) = v19 + 1;
      sub_1ABDAC75C(v20, v22+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v19);
      if (!v5)
        break;
      --v5;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1ABE71DF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1ABE71E50()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 240);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1ABE71EA8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = v1[1];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v5;
  *v5 = v2;
  v5[1] = sub_1ABD8D5B0;
  return sub_1ABE71840(v3, v4);
}

ValueMetadata *type metadata accessor for SymbolInWatchlistOptionsProvider()
{
  return &type metadata for SymbolInWatchlistOptionsProvider;
}

id sub_1ABE71FAC(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  id v14;
  int v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  objc_super v19;
  _OWORD v20[2];
  _BYTE v21[24];
  uint64_t v22;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2;
  v13 = (void *)sub_1ABF31780();
  v14 = objc_msgSend(a1, sel_decodeObjectForKey_, v13);

  if (v14)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_1ABD22B10((uint64_t)v20, (uint64_t)v21);
  if (!v22)
  {
    sub_1ABCFC3BC((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1ABD22B54);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  v15 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v15 ^ 1u, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:

    sub_1ABCFC3BC((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v16(v11, v7, v8);
  v16(&v12[OBJC_IVAR___SCUpdateAppLaunchUpsellLastSeenDateCommand_appLaunchUpsellLastSeenDate], v11, v8);

  v19.receiver = v12;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, sel_init);

  return v17;
}

uint64_t sub_1ABE72298()
{
  return type metadata accessor for UpdateAppLaunchUpsellLastSeenDateCommand();
}

uint64_t sub_1ABE722A0(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8[5];

  v3 = objc_msgSend(a1, sel_encryptedValues);
  swift_getObjectType();
  v4 = a2 + OBJC_IVAR___SCUpdateAppLaunchUpsellLastSeenDateCommand_appLaunchUpsellLastSeenDate;
  v5 = sub_1ABF30760();
  v8[3] = v5;
  v8[4] = MEMORY[0x1E0C94590];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_1, v4, v5);
  sub_1ABF31CD8();
  return swift_unknownObjectRelease();
}

uint64_t sub_1ABE72484()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1ABE724A8(void *a1)
{
  uint64_t v1;

  return sub_1ABE722A0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t AppDependencyManager.addStocksDependencies(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16[2];
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  sub_1ABD07E04(a1, (uint64_t)v16);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  sub_1ABD065C8(v16, v3 + 24);
  v4 = sub_1ABD079D8(0, (unint64_t *)&unk_1ED3506E8);
  sub_1ABF2FF68();
  MEMORY[0x1AF435E4C](&v17, &unk_1EEC44210, v3, v4);
  swift_release();
  sub_1ABE72E7C((uint64_t)&v17);
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  sub_1ABD07E04(a1, (uint64_t)v16);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  sub_1ABD065C8(v16, v5 + 24);
  v6 = sub_1ABD079D8(0, &qword_1ED3508C8);
  sub_1ABF2FF68();
  MEMORY[0x1AF435E4C](&v17, &unk_1EEC44220, v5, v6);
  swift_release();
  sub_1ABE72E7C((uint64_t)&v17);
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  sub_1ABD07E04(a1, (uint64_t)v16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  sub_1ABD065C8(v16, v7 + 24);
  v8 = sub_1ABD079D8(0, (unint64_t *)&qword_1ED350780);
  sub_1ABF2FF68();
  MEMORY[0x1AF435E4C](&v17, &unk_1EEC44230, v7, v8);
  swift_release();
  sub_1ABE72E7C((uint64_t)&v17);
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  sub_1ABD07E04(a1, (uint64_t)v16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v1;
  sub_1ABD065C8(v16, v9 + 24);
  v10 = sub_1ABD079D8(0, (unint64_t *)&qword_1ED34CAF0);
  sub_1ABF2FF68();
  MEMORY[0x1AF435E4C](&v17, &unk_1EEC44240, v9, v10);
  swift_release();
  sub_1ABE72E7C((uint64_t)&v17);
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  sub_1ABD07E04(a1, (uint64_t)v16);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  sub_1ABD065C8(v16, v11 + 24);
  v12 = sub_1ABD079D8(0, &qword_1ED350680);
  sub_1ABF2FF68();
  MEMORY[0x1AF435E4C](&v17, &unk_1EEC44250, v11, v12);
  swift_release();
  sub_1ABE72E7C((uint64_t)&v17);
  v19 = 0;
  v17 = 0u;
  v18 = 0u;
  sub_1ABD07E04(a1, (uint64_t)v16);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v1;
  sub_1ABD065C8(v16, v13 + 24);
  v14 = sub_1ABD079D8(0, (unint64_t *)&unk_1ED350800);
  sub_1ABF2FF68();
  MEMORY[0x1AF435E4C](&v17, &unk_1EEC44260, v13, v14);
  swift_release();
  return sub_1ABE72E7C((uint64_t)&v17);
}

uint64_t sub_1ABE72838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  return swift_task_switch();
}

uint64_t sub_1ABE72850()
{
  uint64_t v0;

  sub_1ABF31AEC();
  *(_QWORD *)(v0 + 72) = sub_1ABF31AE0();
  sub_1ABF31AB0();
  return swift_task_switch();
}

uint64_t sub_1ABE728B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  v1 = *(_QWORD **)(v0 + 64);
  swift_release();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350800);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  result = sub_1ABF30B74();
  if (*(_QWORD *)(v0 + 40))
  {
    sub_1ABD065C8((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE72964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  return swift_task_switch();
}

uint64_t sub_1ABE7297C()
{
  uint64_t v0;

  sub_1ABF31AEC();
  *(_QWORD *)(v0 + 72) = sub_1ABF31AE0();
  sub_1ABF31AB0();
  return swift_task_switch();
}

uint64_t sub_1ABE729E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  v1 = *(_QWORD **)(v0 + 64);
  swift_release();
  sub_1ABD079D8(0, &qword_1ED350680);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  result = sub_1ABF30B74();
  if (*(_QWORD *)(v0 + 40))
  {
    sub_1ABD065C8((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE72A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  return swift_task_switch();
}

uint64_t sub_1ABE72AA8()
{
  uint64_t v0;

  sub_1ABF31AEC();
  *(_QWORD *)(v0 + 72) = sub_1ABF31AE0();
  sub_1ABF31AB0();
  return swift_task_switch();
}

uint64_t sub_1ABE72B10()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  v1 = *(_QWORD **)(v0 + 64);
  swift_release();
  sub_1ABD079D8(0, (unint64_t *)&qword_1ED350780);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  result = sub_1ABF30B74();
  if (*(_QWORD *)(v0 + 40))
  {
    sub_1ABD065C8((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE72BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  return swift_task_switch();
}

uint64_t sub_1ABE72BD4()
{
  uint64_t v0;

  sub_1ABF31AEC();
  *(_QWORD *)(v0 + 72) = sub_1ABF31AE0();
  sub_1ABF31AB0();
  return swift_task_switch();
}

uint64_t sub_1ABE72C3C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  v1 = *(_QWORD **)(v0 + 64);
  swift_release();
  sub_1ABD079D8(0, &qword_1ED3508C8);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  result = sub_1ABF30B74();
  if (*(_QWORD *)(v0 + 40))
  {
    sub_1ABD065C8((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE72CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  return swift_task_switch();
}

uint64_t sub_1ABE72D00()
{
  uint64_t v0;

  sub_1ABF31AEC();
  *(_QWORD *)(v0 + 72) = sub_1ABF31AE0();
  sub_1ABF31AB0();
  return swift_task_switch();
}

uint64_t sub_1ABE72D68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  v1 = *(_QWORD **)(v0 + 64);
  swift_release();
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3506E8);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  result = sub_1ABF30B74();
  if (*(_QWORD *)(v0 + 40))
  {
    sub_1ABD065C8((__int128 *)(v0 + 16), *(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE72E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1ABD7E2B8;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return swift_task_switch();
}

uint64_t sub_1ABE72E7C(uint64_t a1)
{
  uint64_t v2;

  sub_1ABE72EB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1ABE72EB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34CC80)
  {
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34CC80);
  }
}

uint64_t sub_1ABE72F10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1ABD7E2B8;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return swift_task_switch();
}

uint64_t sub_1ABE72F78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1ABD7E2B8;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return swift_task_switch();
}

uint64_t sub_1ABE72FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a3;
  return swift_task_switch();
}

uint64_t sub_1ABE72FF4()
{
  uint64_t v0;

  sub_1ABF31AEC();
  *(_QWORD *)(v0 + 48) = sub_1ABF31AE0();
  sub_1ABF31AB0();
  return swift_task_switch();
}

uint64_t sub_1ABE7305C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD **)(v0 + 40);
  swift_release();
  sub_1ABD079D8(0, (unint64_t *)&qword_1ED34CAF0);
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  result = sub_1ABF30B74();
  v3 = *(_QWORD *)(v0 + 16);
  if (v3)
  {
    v5 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD **)(v0 + 32);
    *v4 = v3;
    v4[1] = v5;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE7310C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1ABD7E2B8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EEC44238 + dword_1EEC44238))(a1, v4, v1 + 24);
}

uint64_t sub_1ABE73184(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1ABD7E2B8;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return swift_task_switch();
}

uint64_t sub_1ABE731EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1ABD37AA0;
  v4[7] = a1;
  v4[8] = v1 + 24;
  return swift_task_switch();
}

uint64_t YahooHeadline.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1ABF305D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t YahooHeadline.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for YahooHeadline() + 20));
  sub_1ABF2FF5C();
  return v1;
}

uint64_t type metadata accessor for YahooHeadline()
{
  uint64_t result;

  result = qword_1EEC44268;
  if (!qword_1EEC44268)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t YahooHeadline.summary.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for YahooHeadline() + 24));
  sub_1ABF2FF5C();
  return v1;
}

uint64_t YahooHeadline.source.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for YahooHeadline() + 28));
  sub_1ABF2FF5C();
  return v1;
}

uint64_t YahooHeadline.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for YahooHeadline() + 32);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t YahooHeadline.relatedSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for YahooHeadline() + 36));
  sub_1ABF2FF5C();
  return v1;
}

uint64_t *initializeBufferWithCopyOfBuffer for YahooHeadline(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = sub_1ABF305D4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (char *)a1 + v17;
    v22 = (char *)a2 + v17;
    v23 = sub_1ABF30760();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v24(v21, v22, v23);
    v25 = a3[9];
    v26 = (uint64_t *)((char *)a1 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    sub_1ABF2FF5C();
  }
  return a1;
}

uint64_t destroy for YahooHeadline(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 32);
  v6 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YahooHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a1 + v16;
  v21 = a2 + v16;
  v22 = sub_1ABF30760();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v23(v20, v21, v22);
  v24 = a3[9];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (_QWORD *)(a2 + v24);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for YahooHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for YahooHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for YahooHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for YahooHeadline()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABE739A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1ABF30760();
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooHeadline()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABE73A5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1ABF305D4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1ABF30760();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1ABE73B04()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1ABF305D4();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF30760();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1ABE73B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1ABE73BB8()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[6] = (*(uint64_t (**)(_QWORD))(v0[4] + 24))(v0[3]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = v1;
  *v1 = v0;
  v1[1] = sub_1ABE73C20;
  return sub_1ABF31150();
}

uint64_t sub_1ABE73C20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABE73C94()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE73CC8()
{
  return swift_allocObject();
}

uint64_t sub_1ABE73CD8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1ABE73CE0()
{
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D589D8]), sel_init);
  sub_1ABD34ED8(0, &qword_1ED34DD08);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE73D5C()
{
  sub_1ABE73DCC();
  swift_allocError();
  sub_1ABCF5A54(0, (unint64_t *)&qword_1EEC43BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311D4();
}

unint64_t sub_1ABE73DCC()
{
  unint64_t result;

  result = qword_1EEC44290;
  if (!qword_1EEC44290)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46934, &type metadata for EmptyNewsUserProfileProvider.Error);
    atomic_store(result, (unint64_t *)&qword_1EEC44290);
  }
  return result;
}

uint64_t sub_1ABE73E10()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1ABE73E18()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE73E28()
{
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D589D8]), sel_init);
  sub_1ABD34ED8(0, &qword_1ED34DD08);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE73EA4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ABD24ACC(&qword_1ED351220, type metadata accessor for EmptyNewsUserProfileProvider, (uint64_t)&unk_1ABF46750);
  result = sub_1ABD24ACC(&qword_1ED351228, type metadata accessor for EmptyNewsUserProfileProvider, (uint64_t)&unk_1ABF466E8);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for EmptyNewsUserProfileProvider()
{
  return objc_opt_self();
}

uint64_t sub_1ABE73F20()
{
  sub_1ABE73DCC();
  swift_allocError();
  sub_1ABCF5A54(0, (unint64_t *)&qword_1EEC43BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311D4();
}

uint64_t sub_1ABE73F90(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1ABE73F98()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABE73FA4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void sub_1ABE73FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v63;

  v7 = *(void **)(a1 + 16);
  v63 = MEMORY[0x1E0DEE9D8];
  v8 = objc_msgSend(v7, sel_subscriptionList);
  if (objc_msgSend(v8, sel_isDirty))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1ABF36EA0;
    v10 = objc_msgSend(v8, sel_subscribedTagIDs);
    if (v10)
    {
      v11 = v10;
      v12 = sub_1ABF31B1C();

      v13 = *(_QWORD *)(v12 + 16);
      swift_bridgeObjectRelease();
      v14 = MEMORY[0x1E0DEB418];
      v15 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v9 + 64) = v15;
      *(_QWORD *)(v9 + 32) = v13;
      v16 = objc_msgSend(v8, sel_autoFavoriteTagIDs);
      if (v16)
      {
        v17 = v16;
        v18 = sub_1ABF31B1C();

        v19 = *(_QWORD *)(v18 + 16);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 96) = v14;
        *(_QWORD *)(v9 + 104) = v15;
        *(_QWORD *)(v9 + 72) = v19;
        v20 = objc_msgSend(v8, sel_mutedTagIDs);
        if (v20)
        {
          v21 = v20;
          v22 = sub_1ABF31B1C();

          v23 = *(_QWORD *)(v22 + 16);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v9 + 136) = v14;
          *(_QWORD *)(v9 + 144) = v15;
          *(_QWORD *)(v9 + 112) = v23;
          sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
          v24 = (void *)sub_1ABF31D44();
          sub_1ABF31BF4();
          sub_1ABF31318();
          swift_bridgeObjectRelease();

          MEMORY[0x1E0C80A78](v25);
          sub_1ABCF5A54(0, &qword_1ED346E20, (uint64_t (*)(uint64_t))type metadata accessor for FCFetchResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
          swift_allocObject();
          sub_1ABF31228();
          *(_QWORD *)(swift_allocObject() + 16) = v8;
          v26 = v8;
          v27 = (void *)sub_1ABF31114();
          sub_1ABF311EC();
          swift_release();
          swift_release();

          MEMORY[0x1AF437C04]();
          if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1ABF31A50();
          sub_1ABF31A8C();
          sub_1ABF31A20();
          goto LABEL_8;
        }
LABEL_37:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_37;
  }
LABEL_8:
  v28 = objc_msgSend(v7, sel_userInfo);
  if (objc_msgSend(v28, sel_isDirty))
  {
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v29 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    MEMORY[0x1E0C80A78](v30);
    sub_1ABCF5A54(0, &qword_1ED346E20, (uint64_t (*)(uint64_t))type metadata accessor for FCFetchResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    sub_1ABF31228();
    v31 = (void *)sub_1ABF31114();
    sub_1ABF311EC();
    swift_release();

    MEMORY[0x1AF437C04]();
    if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1ABF31A50();
    sub_1ABF31A8C();
    sub_1ABF31A20();
  }
  v59 = a4;
  v60 = a5;
  sub_1ABCF5A54(0, &qword_1ED346E20, (uint64_t (*)(uint64_t))type metadata accessor for FCFetchResult, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF31228();
  MEMORY[0x1AF437C04]();
  if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  v32 = objc_msgSend(v7, sel_readingList);
  if (objc_msgSend(v32, sel_isDirty))
  {
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v33 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    MEMORY[0x1E0C80A78](v34);
    swift_allocObject();
    sub_1ABF31228();
    v35 = (void *)sub_1ABF31114();
    sub_1ABF311EC();
    swift_release();

    MEMORY[0x1AF437C04]();
    if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1ABF31A50();
    sub_1ABF31A8C();
    sub_1ABF31A20();
  }
  v36 = objc_msgSend(v7, sel_audioPlaylist);
  if (objc_msgSend(v36, sel_isDirty))
  {
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v37 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    MEMORY[0x1E0C80A78](v38);
    swift_allocObject();
    sub_1ABF31228();
    v39 = (void *)sub_1ABF31114();
    sub_1ABF311EC();
    swift_release();

    MEMORY[0x1AF437C04]();
    if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1ABF31A50();
    sub_1ABF31A8C();
    sub_1ABF31A20();
  }
  v58 = v28;
  v40 = objc_msgSend(v7, sel_readingHistory);
  if (objc_msgSend(v40, sel_isDirty))
  {
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v41 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    MEMORY[0x1E0C80A78](v42);
    swift_allocObject();
    sub_1ABF31228();
    v43 = (void *)sub_1ABF31114();
    sub_1ABF311EC();
    swift_release();

    MEMORY[0x1AF437C04]();
    if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1ABF31A50();
    sub_1ABF31A8C();
    sub_1ABF31A20();
  }
  v44 = objc_msgSend(v7, sel_personalizationData);
  if (objc_msgSend(v44, sel_isDirty))
  {
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v45 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    MEMORY[0x1E0C80A78](v46);
    swift_allocObject();
    sub_1ABF31228();
    v47 = (void *)sub_1ABF31114();
    sub_1ABF311EC();
    swift_release();

    MEMORY[0x1AF437C04]();
    if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1ABF31A50();
    sub_1ABF31A8C();
    sub_1ABF31A20();
  }
  v48 = objc_msgSend(v7, sel_userEventHistory);
  if (objc_msgSend(v48, sel_isDirty))
  {
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v49 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    MEMORY[0x1E0C80A78](v50);
    swift_allocObject();
    sub_1ABF31228();
    v51 = (void *)sub_1ABF31114();
    sub_1ABF311EC();
    swift_release();

    MEMORY[0x1AF437C04]();
    if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1ABF31A50();
    sub_1ABF31A8C();
    sub_1ABF31A20();
  }
  v52 = (void *)sub_1ABF31114();
  type metadata accessor for FCFetchResult(0);
  sub_1ABF3109C();
  swift_bridgeObjectRelease();

  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = a2;
  *(_QWORD *)(v53 + 24) = a3;
  sub_1ABF2FF68();
  v54 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v55 = swift_allocObject();
  *(_QWORD *)(v55 + 16) = v59;
  *(_QWORD *)(v55 + 24) = v60;
  sub_1ABF2FF68();
  v56 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();

  v57 = (void *)sub_1ABF31114();
  sub_1ABF311EC();

  swift_release();
  swift_release();

}

void sub_1ABE74C8C(void *a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ABF36EA0;
  v3 = objc_msgSend(a1, sel_subscribedTagIDs);
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = v3;
  v5 = sub_1ABF31B1C();

  v6 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease();
  v7 = MEMORY[0x1E0DEB418];
  v8 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v2 + 64) = v8;
  *(_QWORD *)(v2 + 32) = v6;
  v9 = objc_msgSend(a1, sel_autoFavoriteTagIDs);
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v10 = v9;
  v11 = sub_1ABF31B1C();

  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = v7;
  *(_QWORD *)(v2 + 104) = v8;
  *(_QWORD *)(v2 + 72) = v12;
  v13 = objc_msgSend(a1, sel_mutedTagIDs);
  if (v13)
  {
    v14 = v13;
    v15 = sub_1ABF31B1C();

    v16 = *(_QWORD *)(v15 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 136) = v7;
    *(_QWORD *)(v2 + 144) = v8;
    *(_QWORD *)(v2 + 112) = v16;
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v17 = (id)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1ABE74E64()
{
  sub_1ABE75054();
}

void sub_1ABE74E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
  sub_1ABF2FF68();
  v9 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();

  v10 = *(void **)(a5 + 32);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1ABD17048;
  *(_QWORD *)(v11 + 24) = v8;
  v13[4] = sub_1ABE75778;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1ABD29B8C;
  v13[3] = &block_descriptor_26;
  v12 = _Block_copy(v13);
  swift_release();
  objc_msgSend(v10, sel_refreshBundleSubscriptionWithCachePolicy_completion_, 2, v12);
  _Block_release(v12);
}

uint64_t sub_1ABE74FB8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  void *v3;

  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
  v3 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();

  return a2(0);
}

void sub_1ABE75044()
{
  sub_1ABE75054();
}

void sub_1ABE75054()
{
  id v0;

  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
  v0 = (id)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();

}

void sub_1ABE750D8()
{
  sub_1ABE75054();
}

void sub_1ABE750E8()
{
  sub_1ABE75054();
}

void sub_1ABE750F8()
{
  sub_1ABE75054();
}

void sub_1ABE75108()
{
  sub_1ABE75054();
}

void sub_1ABE75118()
{
  sub_1ABE75054();
}

uint64_t sub_1ABE75128()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t storeEnumTagSinglePayload for EmptyNewsUserProfileProvider.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE7519C + 4 * byte_1ABF466C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE751BC + 4 * byte_1ABF466C5[v4]))();
}

_BYTE *sub_1ABE7519C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE751BC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE751C4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE751CC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE751D4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE751DC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EmptyNewsUserProfileProvider.Error()
{
  return &type metadata for EmptyNewsUserProfileProvider.Error;
}

unint64_t sub_1ABE751FC()
{
  unint64_t result;

  result = qword_1EEC44298;
  if (!qword_1EEC44298)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46860, &type metadata for EmptyNewsUserProfileProvider.Error);
    atomic_store(result, (unint64_t *)&qword_1EEC44298);
  }
  return result;
}

void sub_1ABE75240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[6];

  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
  v8 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();

  v9 = objc_msgSend(*(id *)(a5 + 16), sel_privatePushNotificationHandler);
  v10 = (void *)sub_1ABF31618();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  v13[4] = sub_1ABE75788;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1ABD9FF74;
  v13[3] = &block_descriptor_32_0;
  v12 = _Block_copy(v13);
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v9, sel_handleRemoteNotification_completionHandler_, v10, v12);
  _Block_release(v12);
  swift_unknownObjectRelease();

}

uint64_t sub_1ABE753B8(void *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  unsigned int *v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  _QWORD v19[2];
  uint64_t v20;
  unint64_t v21;

  v4 = sub_1ABF31030();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && objc_msgSend(a1, sel_wasHandled, v6))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1ABF366C0;
    v20 = 0;
    v21 = 0xE000000000000000;
    v10 = objc_msgSend(a1, sel_recordZoneIDs);
    if (v10)
    {
      v11 = v10;
      sub_1ABCF7BCC(0, &qword_1EEC442B8);
      sub_1ABE75800();
      v12 = sub_1ABF31B1C();

    }
    else
    {
      v12 = 0;
    }
    v19[1] = v12;
    sub_1ABCF5A54(0, &qword_1EEC442A8, (uint64_t (*)(uint64_t))sub_1ABE75790, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABF317F8();
    sub_1ABF31870();
    swift_bridgeObjectRelease();
    v15 = v20;
    v16 = v21;
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v9 + 32) = v15;
    *(_QWORD *)(v9 + 40) = v16;
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v17 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    v14 = (unsigned int *)MEMORY[0x1E0DB4790];
  }
  else
  {
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v13 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    v14 = (unsigned int *)MEMORY[0x1E0DB4788];
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *v14, v4);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1ABE75648()
{
  sub_1ABCF5A54(0, (unint64_t *)&qword_1EEC43BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4798], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABE756AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE756D0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABE75704()
{
  uint64_t *v0;

  sub_1ABE73FAC(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

void sub_1ABE75714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABE74E74(a1, a2, a3, a4, v4);
}

uint64_t sub_1ABE7571C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1ABE75744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABEE40C8(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1ABE7574C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1ABE75770()
{
  uint64_t v0;

  sub_1ABE74C8C(*(void **)(v0 + 16));
}

uint64_t sub_1ABE75778(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABE74FB8(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

void sub_1ABE75780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABE75240(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1ABE75788(void *a1)
{
  uint64_t v1;

  return sub_1ABE753B8(a1, *(void (**)(char *))(v1 + 16));
}

void sub_1ABE75790()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC442B0)
  {
    sub_1ABCF7BCC(255, &qword_1EEC442B8);
    sub_1ABE75800();
    v0 = sub_1ABF31B40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC442B0);
  }
}

unint64_t sub_1ABE75800()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC442C0;
  if (!qword_1EEC442C0)
  {
    v1 = sub_1ABCF7BCC(255, &qword_1EEC442B8);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC442C0);
  }
  return result;
}

uint64_t StocksKitClientConfig.clientBundleID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t StocksKitClientConfig.stocksDataServiceEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t StocksKitClientConfig.stocksDataServiceEndpointVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE758F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE48A0(*a1, *a2);
}

uint64_t sub_1ABE75904()
{
  return sub_1ABF0F95C();
}

uint64_t sub_1ABE7590C()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE75998()
{
  return sub_1ABF0FCD8();
}

uint64_t sub_1ABE759A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE76674();
  *a1 = result;
  return result;
}

void sub_1ABE759CC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE004449656C646ELL;
  v4 = 0x80000001ABF53FC0;
  v5 = 0xD000000000000018;
  if (v2 != 1)
  {
    v5 = 0xD000000000000020;
    v4 = 0x80000001ABF53FE0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7542746E65696C63;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ABE75A3C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000018;
  if (*v0 != 1)
    v1 = 0xD000000000000020;
  if (*v0)
    return v1;
  else
    return 0x7542746E65696C63;
}

uint64_t sub_1ABE75AA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE76674();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE75ACC()
{
  sub_1ABE76098();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE75AF4()
{
  sub_1ABE76098();
  return sub_1ABF32398();
}

uint64_t StocksKitClientConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned __int8 v45;
  _QWORD *v46;

  sub_1ABE76338(0, &qword_1EEC442C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE76098();
  sub_1ABF3235C();
  if (!v2)
  {
    v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v45 = 0;
    sub_1ABF320C8();
    v10 = v44;
    v41 = v43;
    if (v44)
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_beginAccess();
      v11 = v46;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v14 = v11[2];
      v13 = v11[3];
      if (v14 >= v13 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      v11[2] = v14 + 1;
      v15 = (char *)&v11[2 * v14];
      strcpy(v15 + 32, "clientBundleID");
      v15[47] = -18;
      v46 = v11;
      swift_endAccess();
      v10 = v42;
    }
    LOBYTE(v43) = 1;
    sub_1ABF320C8();
    LODWORD(v40) = v45;
    if (v45 == 2)
    {
      swift_beginAccess();
      v11 = v46;
      v16 = swift_isUniquelyReferenced_nonNull_native();
      v42 = v10;
      if ((v16 & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v18 = v11[2];
      v17 = v11[3];
      if (v18 >= v17 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v17 > 1), v18 + 1, 1, v11);
      v11[2] = v18 + 1;
      v19 = &v11[2 * v18];
      v19[4] = 0xD000000000000018;
      v19[5] = 0x80000001ABF53FC0;
      v46 = v11;
      swift_endAccess();
      v10 = v42;
    }
    v45 = 2;
    sub_1ABF320C8();
    v21 = v44;
    if (v44)
    {
      v39 = v43;
    }
    else
    {
      swift_beginAccess();
      v11 = v46;
      v22 = swift_isUniquelyReferenced_nonNull_native();
      v42 = v10;
      if ((v22 & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v24 = v11[2];
      v23 = v11[3];
      v25 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        v39 = v24 + 1;
        v36 = sub_1ABD12054((_QWORD *)(v23 > 1), v24 + 1, 1, v11);
        v25 = v39;
        v11 = v36;
      }
      v11[2] = v25;
      v26 = &v11[2 * v24];
      v26[4] = 0xD000000000000020;
      v26[5] = 0x80000001ABF53FE0;
      v46 = v11;
      swift_endAccess();
      v39 = 12662;
      v10 = v42;
    }
    if (v10)
      v27 = v41;
    else
      v27 = 0;
    v28 = 0xE000000000000000;
    if (v10)
      v28 = v10;
    v41 = v27;
    v42 = v28;
    LODWORD(v29) = v40 & 1;
    v30 = 0xE200000000000000;
    if (v21)
      v30 = v21;
    v40 = v30;
    if (v11[2])
    {
      sub_1ABD0F55C();
      v31 = swift_allocObject();
      v38 = (int)v29;
      v29 = (_QWORD *)v31;
      *(_OWORD *)(v31 + 16) = xmmword_1ABF366C0;
      sub_1ABD165AC();
      v29[7] = v32;
      v29[8] = sub_1ABD82448();
      v29[4] = v11;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v33 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      LOBYTE(v29) = v38;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v33 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    v34 = v42;
    *(_QWORD *)a2 = v41;
    *(_QWORD *)(a2 + 8) = v34;
    *(_BYTE *)(a2 + 16) = (_BYTE)v29;
    v35 = v40;
    *(_QWORD *)(a2 + 24) = v39;
    *(_QWORD *)(a2 + 32) = v35;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1ABE76098()
{
  unint64_t result;

  result = qword_1EEC442D0;
  if (!qword_1EEC442D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46B24, &type metadata for StocksKitClientConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC442D0);
  }
  return result;
}

uint64_t StocksKitClientConfig.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  int v12;
  char v13;
  char v14;
  char v15;

  sub_1ABE76338(0, &qword_1EEC442D8, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v12 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v11[1] = *(_QWORD *)(v1 + 32);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE76098();
  sub_1ABF32368();
  v15 = 0;
  v9 = v11[3];
  sub_1ABF32194();
  if (!v9)
  {
    v14 = 1;
    sub_1ABF321A0();
    v13 = 2;
    sub_1ABF32194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABE7624C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StocksKitClientConfig.init(from:)(a1, a2);
}

uint64_t sub_1ABE76260(_QWORD *a1)
{
  return StocksKitClientConfig.encode(to:)(a1);
}

uint64_t _s10StocksCore0A15KitClientConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v2 != v5)
      return 0;
  }
  else
  {
    v9 = sub_1ABF3223C();
    result = 0;
    if ((v9 & 1) == 0 || ((v2 ^ v5) & 1) != 0)
      return result;
  }
  if (v3 == v6 && v4 == v7)
    return 1;
  else
    return sub_1ABF3223C();
}

void sub_1ABE76338(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE76098();
    v7 = a3(a1, &type metadata for StocksKitClientConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t destroy for StocksKitClientConfig()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StocksKitClientConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for StocksKitClientConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StocksKitClientConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StocksKitClientConfig()
{
  return &type metadata for StocksKitClientConfig;
}

uint64_t storeEnumTagSinglePayload for StocksKitClientConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABE7651C + 4 * byte_1ABF46985[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABE76550 + 4 * byte_1ABF46980[v4]))();
}

uint64_t sub_1ABE76550(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE76558(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE76560);
  return result;
}

uint64_t sub_1ABE7656C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE76574);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABE76578(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE76580(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StocksKitClientConfig.CodingKeys()
{
  return &type metadata for StocksKitClientConfig.CodingKeys;
}

unint64_t sub_1ABE765A0()
{
  unint64_t result;

  result = qword_1EEC442E0;
  if (!qword_1EEC442E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46AFC, &type metadata for StocksKitClientConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC442E0);
  }
  return result;
}

unint64_t sub_1ABE765E8()
{
  unint64_t result;

  result = qword_1EEC442E8;
  if (!qword_1EEC442E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46A34, &type metadata for StocksKitClientConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC442E8);
  }
  return result;
}

unint64_t sub_1ABE76630()
{
  unint64_t result;

  result = qword_1EEC442F0;
  if (!qword_1EEC442F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46A5C, &type metadata for StocksKitClientConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC442F0);
  }
  return result;
}

uint64_t sub_1ABE76674()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1ABE766BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABE766C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ABE766CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1ABE766D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1ABE766DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1ABE766E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1ABE766EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1ABE766F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1ABE766FC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1ABE76704(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_1ABE7670C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t sub_1ABE76714(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_1ABE7671C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t sub_1ABE76724(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t sub_1ABE7672C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1ABE76734(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t sub_1ABE7673C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t sub_1ABE76744(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t sub_1ABE7674C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t sub_1ABE76754(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t sub_1ABE7675C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDSCurrencyService()
{
  return objc_opt_self();
}

uint64_t sub_1ABE767A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[40] = a3;
  v4[41] = v3;
  v4[39] = a1;
  v5 = sub_1ABF31594();
  v4[42] = v5;
  v4[43] = *(_QWORD *)(v5 - 8);
  v4[44] = swift_task_alloc();
  v6 = sub_1ABF315D0();
  v4[45] = v6;
  v4[46] = *(_QWORD *)(v6 - 8);
  v4[47] = swift_task_alloc();
  v7 = sub_1ABF30E8C();
  v4[48] = v7;
  v4[49] = *(_QWORD *)(v7 - 8);
  v4[50] = swift_task_alloc();
  sub_1ABCF4DA8(0, &qword_1ED34C498, (uint64_t (*)(void))sub_1ABE779AC, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  v4[51] = v8;
  v4[52] = swift_task_alloc();
  v9 = sub_1ABF30760();
  v4[53] = v9;
  v4[54] = *(_QWORD *)(v9 - 8);
  v4[55] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABE768C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[54];
  v1 = v0[55];
  v3 = v0[53];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0[41] + 16), *(_QWORD *)(v0[41] + 40));
  sub_1ABD031C0(MEMORY[0x1E0DEE9D8]);
  sub_1ABF30754();
  v4 = (_QWORD *)sub_1ABE77DAC(0);
  v0[56] = v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)((char *)v4 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v4) + 16));
  v6 = *v5;
  *v5 = (uint64_t)sub_1ABE10144;
  v5[1] = 0;
  sub_1ABD12EC4(v6);
  v7 = swift_task_alloc();
  v0[57] = v7;
  *(_QWORD *)(v7 + 16) = v4;
  v8 = (_QWORD *)swift_task_alloc();
  v0[58] = v8;
  *v8 = v0;
  v8[1] = sub_1ABE76A34;
  return sub_1ABF32278();
}

uint64_t sub_1ABE76A34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 472) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1ABE76AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  void *v21;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v23 = (_OWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 328);
  sub_1ABD04578(0, &qword_1ED34C4B0, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB44E8]);
  sub_1ABF30F64();
  v30 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v28 = *(_QWORD *)(v0 + 144);
    v29 = *(_QWORD *)(v0 + 152);
    v26 = *(_QWORD *)(v0 + 160);
    v27 = *(_QWORD *)(v0 + 136);
    v4 = (_QWORD *)(v2 + 32);
    v24 = *(_QWORD *)(v0 + 344);
    v25 = *(_QWORD *)(v0 + 368);
    sub_1ABF2FF5C();
    do
    {
      v5 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
      v6 = *v5;
      if (!*(_BYTE *)(*v5 + 24))
      {
        v7 = *(_QWORD *)(v0 + 352);
        v32 = *(_QWORD *)(v0 + 360);
        v8 = *(_QWORD *)(v0 + 336);
        v31 = *(_QWORD *)(v0 + 376);
        v9 = (_QWORD *)swift_allocObject();
        v9[2] = v6;
        v9[3] = v27;
        v9[4] = v28;
        v9[5] = v29;
        v9[6] = v26;
        v9[7] = v30;
        *(_QWORD *)(v0 + 288) = sub_1ABE77CF8;
        *(_QWORD *)(v0 + 296) = v9;
        *(_QWORD *)(v0 + 256) = MEMORY[0x1E0C809B0];
        *(_QWORD *)(v0 + 264) = 1107296256;
        *(_QWORD *)(v0 + 272) = sub_1ABD127EC;
        *(_QWORD *)(v0 + 280) = &block_descriptor_27;
        v10 = _Block_copy((const void *)(v0 + 256));
        sub_1ABF2FF68();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF315AC();
        *(_QWORD *)(v0 + 304) = MEMORY[0x1E0DEE9D8];
        sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1ABD1339C(0);
        sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCA0, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
        sub_1ABF31E04();
        MEMORY[0x1AF437E50](0, v31, v7, v10);
        _Block_release(v10);
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v7, v8);
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v31, v32);
        swift_release();
      }
      v4 += 5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABF30F64();
  v11 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 64) = v11;
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 240);
  v12 = *(_OWORD *)(v0 + 192);
  *v23 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 32) = v12;
  v13 = (void *)sub_1ABF30F70();
  if (!v13)
    goto LABEL_12;
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {

    v13 = 0;
LABEL_12:
    v18 = 0;
    v20 = 1;
    goto LABEL_13;
  }
  v14 = *(_QWORD *)(v0 + 392);
  v15 = *(_QWORD *)(v0 + 400);
  v16 = *(_QWORD *)(v0 + 384);
  sub_1ABF30E80();
  v13 = (void *)sub_1ABF30E74();
  v18 = v17;
  v20 = v19 & 1;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
LABEL_13:
  sub_1ABE76F84((uint64_t)v23, (uint64_t)v13, v18, v20, *(char **)(v0 + 312));
  v21 = *(void **)(v0 + 448);
  sub_1ABE77C60(*(_QWORD *)(v0 + 416));

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE76F04()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 448);
  swift_task_dealloc();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE76F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, char *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD, double);
  void (*v40)(_QWORD);
  char *v41;
  uint64_t v42;
  void (*v43)(_QWORD);
  uint64_t v44;
  char *v45;
  void (*v46)(_QWORD);
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  char *v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  char *v86;
  char *v87;
  __int128 v88;
  void (*v89)(char *, uint64_t);
  int *v90;
  void (*v91)(char *, char *, uint64_t);
  _QWORD v92[2];
  int v93;
  uint64_t *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  void (*v99)(char *, uint64_t);
  void (*v100)(char *, uint64_t);
  unsigned int v101;
  void (*v102)(char *, _QWORD, uint64_t);
  unsigned int v103;
  void (*v104)(char *, _QWORD, uint64_t);
  unsigned int v105;
  void (*v106)(char *, _QWORD, uint64_t);
  unsigned int v107;
  void (*v108)(char *, _QWORD, uint64_t);
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _OWORD v131[2];
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  char v136[8];
  uint64_t v137;
  __int128 v138;
  uint64_t v139;

  v93 = a4;
  v92[1] = a3;
  v92[0] = a2;
  v95 = (char *)a5;
  v6 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1E0C80A78](v6);
  v94 = (_QWORD *)((char *)v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v126 = sub_1ABF306AC();
  v120 = *(char **)(v126 - 8);
  MEMORY[0x1E0C80A78](v126);
  v125 = (char *)v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_1ABF30694();
  v9 = *(_QWORD *)(v124 - 8);
  MEMORY[0x1E0C80A78](v124);
  v11 = (char *)v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1ABF3067C();
  v13 = *(_QWORD *)(v12 - 8);
  v114 = v12;
  v115 = v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1ABF30688();
  v17 = *(_QWORD *)(v16 - 8);
  v122 = v16;
  v116 = v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_1ABF306B8();
  v119 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v110 = (char *)v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v109 = (char *)v92 - v22;
  MEMORY[0x1E0C80A78](v23);
  v118 = (char *)v92 - v24;
  MEMORY[0x1E0C80A78](v25);
  v117 = (char *)v92 - v26;
  v112 = sub_1ABF30760();
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v98 = (char *)v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v97 = (char *)v92 - v29;
  MEMORY[0x1E0C80A78](v30);
  v96 = (char *)v92 - v31;
  MEMORY[0x1E0C80A78](v32);
  v113 = (char *)v92 - v33;
  v35 = MEMORY[0x1E0C80A78](v34);
  v127 = (char *)v92 - v36;
  v128 = a1;
  v37 = *(_QWORD *)(a1 + 24);
  v38 = *(_QWORD *)(a1 + 32);
  v129 = v37;
  v130 = v38;
  v39 = *(void (**)(_QWORD, double))(v17 + 104);
  v107 = *MEMORY[0x1E0CB05F0];
  v108 = (void (*)(char *, _QWORD, uint64_t))v39;
  v39(v19, v35);
  v40 = *(void (**)(_QWORD))(v13 + 104);
  v41 = v15;
  v105 = *MEMORY[0x1E0CB05E0];
  v106 = (void (*)(char *, _QWORD, uint64_t))v40;
  v40(v15);
  v42 = v9;
  v43 = *(void (**)(_QWORD))(v9 + 104);
  v103 = *MEMORY[0x1E0CB0600];
  v44 = v124;
  v104 = (void (*)(char *, _QWORD, uint64_t))v43;
  v43(v11);
  v45 = v120;
  v46 = (void (*)(_QWORD))*((_QWORD *)v120 + 13);
  v47 = v125;
  v101 = *MEMORY[0x1E0CB0628];
  v48 = v126;
  v102 = (void (*)(char *, _QWORD, uint64_t))v46;
  v46(v125);
  sub_1ABF2FF5C();
  v49 = v117;
  sub_1ABF3130C();
  v100 = (void (*)(char *, uint64_t))*((_QWORD *)v45 + 1);
  v100(v47, v48);
  v50 = *(void (**)(char *, uint64_t))(v42 + 8);
  v120 = v11;
  v99 = v50;
  v50(v11, v44);
  v51 = v41;
  v52 = v114;
  v115 = *(_QWORD *)(v115 + 8);
  ((void (*)(char *))v115)(v41);
  v53 = v19;
  v54 = v122;
  v116 = *(_QWORD *)(v116 + 8);
  ((void (*)(char *))v116)(v19);
  sub_1ABF306A0();
  v119 = *(_QWORD *)(v119 + 8);
  ((void (*)(char *, uint64_t))v119)(v49, v123);
  sub_1ABCFE1EC(qword_1ED3501E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0670], MEMORY[0x1E0CB0668]);
  v55 = v121;
  sub_1ABF3076C();
  if (v55)
    return sub_1ABE77D04(v128);
  v121 = 0;
  v57 = *(_QWORD *)(v128 + 16);
  v129 = *(_QWORD *)(v128 + 8);
  v130 = v57;
  v108(v19, v107, v54);
  v58 = v51;
  v106(v51, v105, v52);
  v59 = v120;
  v60 = v124;
  v104(v120, v103, v124);
  v61 = v125;
  v62 = v126;
  v102(v125, v101, v126);
  sub_1ABF2FF5C();
  v63 = v109;
  sub_1ABF3130C();
  v100(v61, v62);
  v99(v59, v60);
  ((void (*)(char *, uint64_t))v115)(v58, v52);
  ((void (*)(char *, uint64_t))v116)(v53, v122);
  sub_1ABF306A0();
  ((void (*)(char *, uint64_t))v119)(v63, v123);
  v64 = v121;
  sub_1ABF3076C();
  v65 = v128;
  if (v64)
  {
    sub_1ABE77D04(v128);
    return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v127, v112);
  }
  else
  {
    v66 = v112;
    v67 = (_QWORD *)v111;
    if ((v93 & 1) == 0)
      sub_1ABF32380();
    v68 = v95;
    v69 = v98;
    v121 = 0;
    sub_1ABF306C4();
    v139 = *(_QWORD *)v65;
    v70 = v139;
    v71 = *(_QWORD *)(v139 + 16);
    v72 = MEMORY[0x1E0DEE9D8];
    if (v71)
    {
      v129 = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABDB516C(0, v71, 0);
      v72 = v129;
      v73 = (uint64_t *)(v70 + 64);
      do
      {
        v75 = *(v73 - 4);
        v74 = *(v73 - 3);
        v77 = *(v73 - 2);
        v76 = *(v73 - 1);
        v78 = *v73;
        v129 = v72;
        v80 = *(_QWORD *)(v72 + 16);
        v79 = *(_QWORD *)(v72 + 24);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        if (v80 >= v79 >> 1)
        {
          sub_1ABDB516C(v79 > 1, v80 + 1, 1);
          v72 = v129;
        }
        *(_QWORD *)(v72 + 16) = v80 + 1;
        v81 = (_QWORD *)(v72 + 40 * v80);
        v81[4] = v75;
        v81[5] = v74;
        v81[6] = v77;
        v81[7] = v76;
        v81[8] = v78;
        v73 += 7;
        --v71;
      }
      while (v71);
      sub_1ABD66AA0((uint64_t)&v139);
      v68 = v95;
      v82 = v94;
      v65 = v128;
      v66 = v112;
      v67 = (_QWORD *)v111;
      v83 = v98;
    }
    else
    {
      v82 = v94;
      v83 = v69;
    }
    v84 = (void (*)(char *, char *, uint64_t))v67[2];
    v85 = v127;
    v84(v97, v127, v66);
    v86 = v83;
    v87 = v96;
    v84(v86, v96, v66);
    v88 = *(_OWORD *)(v65 + 56);
    v131[0] = *(_OWORD *)(v65 + 40);
    v131[1] = v88;
    v132 = *(_QWORD *)(v65 + 72);
    v133 = v131[0];
    v134 = v88;
    v135 = v132;
    v138 = v131[0];
    v137 = v88;
    sub_1ABE788B0((uint64_t)&v134 + 8, (uint64_t)v136);
    sub_1ABD03ADC((uint64_t)&v138);
    sub_1ABD0B24C((uint64_t)&v137);
    sub_1ABD03ADC((uint64_t)v136);
    sub_1ABDE4D1C((uint64_t *)v131, v82);
    sub_1ABE77D04(v65);
    v89 = (void (*)(char *, uint64_t))v67[1];
    v89(v87, v66);
    v89(v113, v66);
    v89(v85, v66);
    *(_QWORD *)v68 = v72;
    v90 = (int *)type metadata accessor for CurrencyResponse();
    v91 = (void (*)(char *, char *, uint64_t))v67[4];
    v91(&v68[v90[5]], v97, v66);
    v91(&v68[v90[6]], v98, v66);
    return sub_1ABD76140((uint64_t)v82, (uint64_t)&v68[v90[7]]);
  }
}

uint64_t sub_1ABE77948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1ABD37AA0;
  return sub_1ABE767A8(a1, v7, a3);
}

unint64_t sub_1ABE779AC()
{
  unint64_t result;

  result = qword_1ED34C3E0;
  if (!qword_1ED34C3E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF45064, &type metadata for SDSCurrencyResponse);
    atomic_store(result, (unint64_t *)&qword_1ED34C3E0);
  }
  return result;
}

uint64_t sub_1ABE779F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1ABE7890C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v6);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_1ABF30BF8();
  sub_1ABF30BE0();
  sub_1ABF30BA4();
  sub_1ABF30BC8();
  return swift_release();
}

uint64_t sub_1ABE77AE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v12[2];

  sub_1ABCF4DA8(0, &qword_1ED34C498, (uint64_t (*)(void))sub_1ABE779AC, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v12 - v6;
  sub_1ABE78A34();
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABE78AA8(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12[1] = *v10;
    sub_1ABE7890C();
    return sub_1ABF31ABC();
  }
  else
  {
    sub_1ABE78AEC((uint64_t)v10, (uint64_t)v7);
    sub_1ABE78B50((uint64_t)v7, (uint64_t)v4);
    sub_1ABE7890C();
    sub_1ABF31AC8();
    return sub_1ABE77C60((uint64_t)v7);
  }
}

uint64_t sub_1ABE77C3C(uint64_t a1)
{
  return sub_1ABE77DAC(a1);
}

uint64_t sub_1ABE77C58(uint64_t a1)
{
  return sub_1ABE779F0(a1);
}

uint64_t sub_1ABE77C60(uint64_t a1)
{
  uint64_t v2;

  sub_1ABCF4DA8(0, &qword_1ED34C498, (uint64_t (*)(void))sub_1ABE779AC, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABE77CBC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE77CF8()
{
  uint64_t v0;

  return sub_1ABDE5110(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24));
}

uint64_t sub_1ABE77D04(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABE77D74(uint64_t a1)
{
  return sub_1ABE77DAC(a1);
}

uint64_t sub_1ABE77D90(uint64_t a1)
{
  return sub_1ABE77DAC(a1);
}

uint64_t sub_1ABE77DAC(uint64_t a1)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t (*v5)(void);
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  id v45;
  void *v46;
  Class v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  char *v61;
  Class v62;
  id v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  unint64_t *v77;
  uint64_t (*v78)(void);
  int v79;
  uint64_t v80;
  _BYTE v81[40];
  _BYTE v82[40];
  _QWORD v83[390];
  _QWORD v84[149];
  uint64_t v85;

  v2 = MEMORY[0x1E0C80A78](a1);
  v69 = v3;
  v77 = v4;
  v78 = v5;
  v6 = v1;
  v8 = v7;
  v74 = v9;
  v11 = v10;
  v79 = v2;
  v75 = sub_1ABF30B38();
  v73 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v68 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1ABF30760();
  v70 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v76 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1ABF305D4();
  v15 = MEMORY[0x1E0C80A78](v14);
  v80 = (uint64_t)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v67 = (uint64_t)&v66 - v17;
  v18 = v1[16];
  v19 = v1[17];
  __swift_project_boxed_opaque_existential_1(v1 + 13, v18);
  v20 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v19 + 8);
  sub_1ABF2FF5C();
  v20(v83, v18, v19);
  v21 = v83[380];
  sub_1ABF2FF5C();
  sub_1ABD7DDF4((uint64_t)v83);
  v84[0] = v21;
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD16600();
  v22 = sub_1ABF316E4();
  v24 = v23;
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v84[0] = v11;
  sub_1ABDF0CDC(v22, v24, 0x6E656D7461657274, 0xEC00000073444974, isUniquelyReferenced_nonNull_native);
  v71 = v84[0];
  swift_bridgeObjectRelease();
  v26 = v1[16];
  v27 = v1[17];
  __swift_project_boxed_opaque_existential_1(v1 + 13, v26);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v27 + 8))(v84, v26, v27);
  v28 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v29 = objc_msgSend(v28, sel_bundleIdentifier);

  if (v29)
  {
    v30 = sub_1ABF317A4();
    v32 = v31;

    v33 = *(_QWORD *)(v85 + 16);
    if (v33)
    {
      v34 = (uint64_t *)(v85 + 64);
      while (1)
      {
        v35 = *(v34 - 1);
        v36 = *v34;
        v37 = *(v34 - 4) == v30 && *(v34 - 3) == v32;
        if (v37 || (sub_1ABF3223C() & 1) != 0)
          break;
        v34 += 5;
        if (!--v33)
          goto LABEL_10;
      }
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      sub_1ABD7DDF4((uint64_t)v84);
      sub_1ABF31294();
      v51 = (void *)objc_opt_self();
      sub_1ABF2FF5C();
      v52 = objc_msgSend(v51, sel_sharedPreferences);
      v53 = v52;
      v66 = v8;
      if (v52)
      {
        v54 = objc_msgSend(v52, sel_stocksLanguageCode);
        if (v54)
        {
          v55 = v54;
          sub_1ABF317A4();
          v80 = v56;

        }
        else
        {
          v80 = 0xE500000000000000;
        }
        v57 = v70;
        v58 = objc_msgSend(v53, sel_stocksCountryCode, v66);
        if (v58)
        {
          v59 = v58;
          v70 = sub_1ABF317A4();

LABEL_29:
          v61 = v68;
          v60 = v69;
          sub_1ABD07E04((uint64_t)(v6 + 3), (uint64_t)v82);
          sub_1ABD07E04((uint64_t)(v6 + 8), (uint64_t)v81);
          (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v76, v74, v72);
          (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v61, v66, v75);
          sub_1ABCF4DA8(0, v77, v78, v60, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperation);
          v63 = objc_allocWithZone(v62);
          sub_1ABE78434(v79, v67, v35, v36);
          v50 = v64;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v50;
        }
      }
      else
      {
        v80 = 0xE500000000000000;
        v57 = v70;
      }

      v70 = 21333;
      goto LABEL_29;
    }
LABEL_10:
    swift_bridgeObjectRelease();
  }
  sub_1ABD7DDF4((uint64_t)v84);
  sub_1ABF31294();
  v38 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  v39 = v38;
  if (!v38)
  {
    v43 = v8;
    v67 = 0xE500000000000000;
    v44 = v79;
LABEL_19:

    goto LABEL_20;
  }
  v40 = objc_msgSend(v38, sel_stocksLanguageCode);
  if (v40)
  {
    v41 = v40;
    sub_1ABF317A4();
    v67 = v42;

  }
  else
  {
    v67 = 0xE500000000000000;
  }
  v44 = v79;
  v45 = objc_msgSend(v39, sel_stocksCountryCode);
  if (!v45)
  {
    v43 = v8;
    goto LABEL_19;
  }
  v46 = v45;
  v43 = v8;
  sub_1ABF317A4();

LABEL_20:
  sub_1ABD07E04((uint64_t)(v6 + 3), (uint64_t)v82);
  sub_1ABD07E04((uint64_t)(v6 + 8), (uint64_t)v81);
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v76, v74, v72);
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v68, v43, v75);
  sub_1ABCF4DA8(0, v77, v78, v69, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperation);
  v48 = objc_allocWithZone(v47);
  sub_1ABE78434(v44, v80, 0, 0);
  return v49;
}

void sub_1ABE78434(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  swift_getObjectType();
  v12 = sub_1ABF305D4();
  v7 = MEMORY[0x1E0C80A78](v12);
  v8 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v9 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v10 = (_QWORD *)((char *)v4 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v4) + 16));
  *v10 = 0;
  v10[1] = 0;
  *(_QWORD *)((char *)v4 + *(_QWORD *)(qword_1ED368430 + (*v9 & *v4) + 88)) = MEMORY[0x1E0DEE9D8];
  *((_BYTE *)v4 + *(_QWORD *)(qword_1ED368430 + (*v9 & *v4) + 24)) = a1;
  if (a4)
  {
    v11 = v4;
    sub_1ABF30568();
    swift_bridgeObjectRelease();
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void sub_1ABE78610()
{
  void *v0;
  id v1;

  v1 = v0;
  sub_1ABF30568();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1ABE786C8);
}

void sub_1ABE78624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1ABF30568(0x65746F75712FLL, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 112));
  JUMPOUT(0x1ABE786C8);
}

void sub_1ABE78638()
{
  JUMPOUT(0x1ABE7864CLL);
}

void sub_1ABE78680()
{
  void *v0;
  id v1;

  v1 = v0;
  sub_1ABF30568(0x65746F75712FLL, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  JUMPOUT(0x1ABE786C8);
}

void sub_1ABE78694()
{
  JUMPOUT(0x1ABE786A8);
}

uint64_t sub_1ABE788B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FB80, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABE7890C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C518)
  {
    sub_1ABCF4DA8(255, &qword_1ED34C498, (uint64_t (*)(void))sub_1ABE779AC, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
    sub_1ABE5E018();
    v0 = sub_1ABF31AD4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C518);
  }
}

uint64_t sub_1ABE78998()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABE7890C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1ABE789F8(uint64_t a1)
{
  sub_1ABE7890C();
  return sub_1ABE77AE8(a1);
}

void sub_1ABE78A34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C4B8)
  {
    sub_1ABCF4DA8(255, &qword_1ED34C498, (uint64_t (*)(void))sub_1ABE779AC, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
    v0 = sub_1ABF31120();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C4B8);
  }
}

uint64_t sub_1ABE78AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABE78A34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABE78AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF4DA8(0, &qword_1ED34C498, (uint64_t (*)(void))sub_1ABE779AC, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABE78B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF4DA8(0, &qword_1ED34C498, (uint64_t (*)(void))sub_1ABE779AC, (uint64_t)&type metadata for SDSCurrencyResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ABE78BB4()
{
  unint64_t result;

  result = qword_1EEC44310;
  if (!qword_1EEC44310)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF50D34, &type metadata for SDSSearchResponse);
    atomic_store(result, (unint64_t *)&qword_1EEC44310);
  }
  return result;
}

unint64_t sub_1ABE78BF8()
{
  unint64_t result;

  result = qword_1EEC44320;
  if (!qword_1EEC44320)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF38358, &type metadata for SDSNewsResponse);
    atomic_store(result, (unint64_t *)&qword_1EEC44320);
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributionProviderName()
{
  return &type metadata for AttributionProviderName;
}

uint64_t sub_1ABE78C4C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[5];
  _BYTE v7[24];
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350938);
  result = sub_1ABF30B74();
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, &qword_1ED350DB0);
    result = sub_1ABF30B74();
    if (v6[3])
    {
      v5 = type metadata accessor for AppConfigurationManager();
      swift_allocObject();
      result = (uint64_t)sub_1ABE9E8F8((uint64_t)v7, (uint64_t)v6);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_1E5AEBB90;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1ABE78D58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id result;

  v2 = type metadata accessor for AppConfigurationStore();
  v3 = swift_allocObject();
  result = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  *(_QWORD *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E5AEAD98;
  *a1 = v3;
  return result;
}

uint64_t sub_1ABE78DCC(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v5)
  {
    sub_1ABD065C8(&v4, (uint64_t)v6);
    v2 = v7;
    v3 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE78E80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, qword_1ED350688);
  sub_1ABF30B74();
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
    v4 = sub_1ABF30B50();
    if (v4)
    {
      v5 = v4;
      v6 = type metadata accessor for QuoteManager();
      swift_allocObject();
      result = (uint64_t)sub_1ABD896DC((uint64_t)v8, v5);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1E5AE15C8;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1ABE78FC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  _BYTE v6[24];
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350770);
  sub_1ABF30B74();
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
    if (sub_1ABF30B50())
    {
      v4 = type metadata accessor for SparklineManager();
      swift_allocObject();
      result = sub_1ABEA3228((uint64_t)v6);
      a2[3] = v4;
      a2[4] = (uint64_t)&off_1E5AE5BF8;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1ABE79110@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v4 = sub_1ABF30AE4();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350680);
  result = sub_1ABF30B74();
  if (!v14)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350768);
  result = sub_1ABF30B74();
  if (!v12)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v10)
  {
    v6 = type metadata accessor for StockPriceDataManager();
    v7 = (_QWORD *)swift_allocObject();
    v8 = MEMORY[0x1E0DEE9D8];
    v7[17] = MEMORY[0x1E0DEE9D8];
    v7[18] = v8;
    sub_1ABF30AD8();
    sub_1ABF30AFC();
    swift_allocObject();
    v7[19] = sub_1ABF30AF0();
    sub_1ABD065C8(&v13, (uint64_t)(v7 + 2));
    sub_1ABD065C8(&v11, (uint64_t)(v7 + 7));
    result = sub_1ABD065C8(&v9, (uint64_t)(v7 + 12));
    a2[3] = v6;
    a2[4] = &off_1E5AEB4A8;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1ABE792F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  _BYTE v6[24];
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350810);
  sub_1ABF30B74();
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
    if (sub_1ABF30B50())
    {
      v4 = type metadata accessor for QuoteDetailManager();
      swift_allocObject();
      result = sub_1ABEE8A74((uint64_t)v6);
      a2[3] = v4;
      a2[4] = (uint64_t)&off_1E5AE8090;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1ABE7943C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3508D0);
  sub_1ABF30B74();
  if (v9)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
    v4 = sub_1ABF30B50();
    if (v4)
    {
      v5 = v4;
      v6 = type metadata accessor for StockMetadataManager();
      swift_allocObject();
      result = (uint64_t)sub_1ABE104F0((uint64_t)v8, v5);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1E5AEA798;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1ABE79584@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF30B5C();
  if (v7[0] == 2)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v7[0] & 1) == 0)
  {
    sub_1ABD079D8(0, &qword_1ED350678);
    sub_1ABF30B74();
    if (v8)
    {
      type metadata accessor for ChartManager();
      swift_allocObject();
      result = (uint64_t)sub_1ABEDDDDC((uint64_t)v7);
LABEL_8:
      *a2 = result;
      a2[1] = (uint64_t)&off_1E5AE1180;
      return result;
    }
    goto LABEL_10;
  }
  sub_1ABD079D8(0, &qword_1ED350678);
  sub_1ABF30B74();
  if (!v8)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  v5 = sub_1ABF30B50();
  if (v5)
  {
    v6 = v5;
    type metadata accessor for ChartManager();
    swift_allocObject();
    result = (uint64_t)sub_1ABEDD978((uint64_t)v7, v6);
    goto LABEL_8;
  }
LABEL_12:
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1ABE79768@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[5];
  _BYTE v19[24];
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350490);
  result = sub_1ABF30B74();
  if (v22)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, &qword_1ED350DA8);
    result = sub_1ABF30B74();
    if (v20)
    {
      v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
      MEMORY[0x1E0C80A78](v5);
      v7 = (_QWORD *)((char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v8 + 16))(v7);
      v9 = *v7;
      v18[3] = &type metadata for CurrencyManagerCache;
      v18[4] = &off_1E5AEA060;
      v18[0] = v9;
      v10 = type metadata accessor for CurrencyManager();
      v11 = (_QWORD *)swift_allocObject();
      v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, (uint64_t)&type metadata for CurrencyManagerCache);
      MEMORY[0x1E0C80A78](v12);
      v14 = (_QWORD *)((char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v15 + 16))(v14);
      v16 = sub_1ABE7B7C4(&v21, *v14, (uint64_t)sub_1ABE79964, 0, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      a2[3] = v10;
      a2[4] = &off_1E5AE3060;
      *a2 = v16;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE79968@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED347360, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF2258], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - v5;
  v7 = sub_1ABF305D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5968();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF30B5C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    v15 = sub_1ABF3133C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
    sub_1ABE7BF3C();
    swift_allocObject();
    v16 = sub_1ABF30D9C();
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    a2[3] = (uint64_t)&type metadata for CurrencyManagerCache;
    a2[4] = (uint64_t)&off_1E5AEA060;
    *a2 = v16;
  }
  return result;
}

uint64_t sub_1ABE79B6C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[5];
  _BYTE v9[24];
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350888);
  sub_1ABF30B74();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
    v4 = sub_1ABF30B50();
    if (v4)
    {
      v5 = v4;
      v8[3] = type metadata accessor for Clock();
      v8[4] = &off_1E5AF0760;
      v8[0] = swift_allocObject();
      v6 = type metadata accessor for SDSAuthTokenManager();
      swift_allocObject();
      result = sub_1ABEA53A4((uint64_t)v9, v5, (uint64_t)v8);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1E5AE9888;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1ABE79CE0()
{
  sub_1ABF30FF4();
  swift_allocObject();
  return sub_1ABF30FE8();
}

uint64_t sub_1ABE79D14@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  if (sub_1ABF30B50())
  {
    type metadata accessor for EarningsCalendarEventManager();
    swift_allocObject();
    v3 = sub_1ABD37DE4();
    swift_release();
    result = sub_1ABCFE1EC(&qword_1ED346C70, (uint64_t (*)(uint64_t))type metadata accessor for EarningsCalendarEventManager, (uint64_t)&unk_1ABF42348);
    *a2 = v3;
    a2[1] = result;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE79E14@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[5];
  _QWORD v7[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350788);
  result = sub_1ABF30B74();
  if (v7[3])
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, &qword_1ED3508C8);
    result = sub_1ABF30B74();
    if (v6[3])
    {
      v5 = type metadata accessor for WatchlistManager();
      swift_allocObject();
      result = sub_1ABF15474(v7, (uint64_t)v6);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_1E5AE5D08;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE79F20@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  v3 = sub_1ABF30B50();
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for HeadlineViewingHistory();
    swift_allocObject();
    result = sub_1ABD13ABC(v4);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1E5AEB950;
    *a2 = result;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE7A00C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350620);
  result = sub_1ABF30B74();
  if (v6)
  {
    type metadata accessor for UserLaunchHistory();
    swift_allocObject();
    v4 = sub_1ABD40380((uint64_t)v5);
    result = sub_1ABCFE1EC(&qword_1ED346A88, (uint64_t (*)(uint64_t))type metadata accessor for UserLaunchHistory, (uint64_t)&unk_1ABF373F0);
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE7A0CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for NetworkMonitor();
  v3 = swift_allocObject();
  sub_1ABD34A7C();
  swift_allocObject();
  result = sub_1ABF31510();
  *(_QWORD *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E5AE2CB0;
  *a1 = v3;
  return result;
}

uint64_t sub_1ABE7A13C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  result = sub_1ABF30B50();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, &qword_1ED350330);
    result = sub_1ABF30B74();
    if (v21)
    {
      v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
      MEMORY[0x1E0C80A78](v6);
      v8 = (_QWORD *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      v10 = *v8;
      v11 = type metadata accessor for AttributionSourceAssetService();
      v19[3] = v11;
      v19[4] = &off_1E5AEF970;
      v19[0] = v10;
      v12 = type metadata accessor for AttributionSourceAssetManager();
      v13 = swift_allocObject();
      v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v11);
      MEMORY[0x1E0C80A78](v14);
      v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      v18 = sub_1ABE7B984(v5, *v16, v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      a2[3] = v12;
      a2[4] = (uint64_t)&off_1E5AEF960;
      *a2 = v18;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE7A344@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t result;
  _UNKNOWN **v7;
  _QWORD v8[5];

  sub_1ABD07E04((uint64_t)a1, (uint64_t)v8);
  v4 = sub_1ABD30B84(v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v4 & 1) != 0)
  {
    v5 = type metadata accessor for SDSAttributionProvider();
    result = sub_1ABF30B50();
    if (result)
    {
      v7 = &off_1E5AEBA10;
      goto LABEL_6;
    }
  }
  else
  {
    v5 = type metadata accessor for YahooAttributionProvider();
    result = sub_1ABF30B68();
    if (result)
    {
      v7 = &off_1E5AEE178;
LABEL_6:
      a2[3] = v5;
      a2[4] = (uint64_t)v7;
      *a2 = result;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE7A418@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _UNKNOWN **v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350860);
  result = sub_1ABF30B74();
  if (!v11)
  {
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1ABD065C8(&v10, (uint64_t)v12);
  v5 = v13;
  v6 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6) & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v7 = type metadata accessor for AppleAttributionProvider();
    result = sub_1ABF30B68();
    if (result)
    {
      v8 = &off_1E5AED820;
LABEL_10:
      a2[3] = v7;
      a2[4] = (uint64_t)v8;
      *a2 = result;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    }
    goto LABEL_12;
  }
  sub_1ABD07E04((uint64_t)a1, (uint64_t)&v10);
  v9 = sub_1ABD30B84(&v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v9 & 1) == 0)
  {
    v7 = type metadata accessor for YahooAttributionProvider();
    result = sub_1ABF30B68();
    if (result)
    {
      v8 = &off_1E5AEE178;
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  v7 = type metadata accessor for SDSAttributionProvider();
  result = sub_1ABF30B50();
  if (result)
  {
    v8 = &off_1E5AEBA10;
    goto LABEL_10;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1ABE7A5B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  sub_1ABD33EE4(0, &qword_1ED34FFB8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF366E0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = type metadata accessor for SDSAttributionProvider();
  result = sub_1ABF30B50();
  if (result)
  {
    *(_QWORD *)(v4 + 56) = v5;
    *(_QWORD *)(v4 + 64) = &off_1E5AEBA20;
    *(_QWORD *)(v4 + 32) = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    result = sub_1ABF30B50();
    if (result)
    {
      *(_QWORD *)(v4 + 96) = v5;
      *(_QWORD *)(v4 + 104) = &off_1E5AEBA20;
      *(_QWORD *)(v4 + 72) = result;
      *a2 = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE7A6C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for UnnecessaryWordRemover();
  swift_allocObject();
  result = sub_1ABEC8A3C();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E5AEBB80;
  *a1 = result;
  return result;
}

uint64_t sub_1ABE7A718(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350880);
  result = sub_1ABF30B74();
  if (v6)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4EA0]);
    result = sub_1ABF30B50();
    if (result)
    {
      v3 = result;
      type metadata accessor for SDSAuthTokenRefresher();
      v4 = swift_allocObject();
      sub_1ABD065C8(&v5, v4 + 16);
      *(_QWORD *)(v4 + 56) = v3;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE7A828(_QWORD *a1)
{
  return sub_1ABE7A898(a1, 0x746C7561666544, 0xE700000000000000, (uint64_t)&unk_1E5AF9D58, (uint64_t)sub_1ABE7BCD8);
}

uint64_t sub_1ABE7A850(_QWORD *a1)
{
  return sub_1ABE7A898(a1, 0x646572616853, 0xE600000000000000, (uint64_t)&unk_1E5AF9D30, (uint64_t)sub_1ABE7BCD8);
}

uint64_t sub_1ABE7A874(_QWORD *a1)
{
  return sub_1ABE7A898(a1, 0x737472616843, 0xE600000000000000, (uint64_t)&unk_1E5AF9D08, (uint64_t)sub_1ABE7BCD8);
}

uint64_t sub_1ABE7A898(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a5;
  v20[1] = a4;
  v21 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v21);
  v22 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF314E0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  sub_1ABCF5A54(0, &qword_1EEC44328, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v20 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1ABF30B5C();
  v15 = v26;
  if (v26)
  {
    v20[0] = v25;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABF30B74();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
    if ((_DWORD)result != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v13, v7);
      v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v20[0];
      *(_QWORD *)(v17 + 24) = v15;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v16, (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      v24 = MEMORY[0x1E0DEE9D8];
      v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
      sub_1ABCFE1EC((unint64_t *)&unk_1ED350AE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
      sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B50, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD0223C((unint64_t *)&qword_1ED350B60, (unint64_t *)&unk_1ED350B50, v18);
      sub_1ABF2FF5C();
      sub_1ABF31E04();
      sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
      swift_allocObject();
      v19 = sub_1ABF31078();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      return v19;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE7AB88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t result;

  v2 = sub_1ABF30B2C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  MEMORY[0x1E0C80A78](v2);
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350AE0, v3, MEMORY[0x1E0DB33D8]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B50, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B60, (unint64_t *)&unk_1ED350B50, v3);
  sub_1ABF31E04();
  sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  result = sub_1ABF31078();
  *a1 = result;
  return result;
}

void sub_1ABE7ACC8(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1ABE7ACD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC410E8 != -1)
    swift_once();
  v2 = sub_1ABF314E0();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC44DC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE7AD40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  __int128 v6;
  uint64_t v7;

  v2 = sub_1ABF30EE0();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350A10);
  result = sub_1ABF30B74();
  if (v7)
  {
    type metadata accessor for WatchlistDeprecationMonitor();
    v4 = swift_allocObject();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
    sub_1ABCFE1EC((unint64_t *)&unk_1ED350B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], MEMORY[0x1E0DB41A8]);
    sub_1ABCF5A54(0, &qword_1ED350B80, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD0223C((unint64_t *)&qword_1ED350B88, &qword_1ED350B80, v5);
    sub_1ABF31E04();
    sub_1ABE7BC6C();
    swift_allocObject();
    *(_QWORD *)(v4 + 56) = sub_1ABF30C34();
    sub_1ABD065C8(&v6, v4 + 16);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE7AED8(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  _BYTE v5[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for WatchlistDeprecationMonitor();
  result = sub_1ABF30B68();
  if (result)
  {
    sub_1ABCFE1EC(&qword_1ED346C50, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistDeprecationMonitor, (uint64_t)&unk_1ABF465DC);
    sub_1ABF30F58();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1ABD079D8(0, (unint64_t *)&unk_1ED350A18);
    result = sub_1ABF30B74();
    if (v4)
    {
      sub_1ABF30F58();
      swift_unknownObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE7B024(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  _BYTE v5[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1ABD079D8(0, &qword_1ED3507F8);
  result = sub_1ABF30B74();
  if (v4)
  {
    sub_1ABF31018();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE7B0E8(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t ObjectType;
  uint64_t v16;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (!ObjectType)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1ABD079D8(0, &qword_1ED350788);
  result = sub_1ABF30B74();
  if (!v13)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1ABD34F1C();
  result = sub_1ABF30B68();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v4 = result;
  v5 = type metadata accessor for KVSCleanupStartupTask();
  v6 = swift_allocObject();
  v7 = v6 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_group;
  if (qword_1ED346DA0 != -1)
    swift_once();
  v8 = sub_1ABF30DCC();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED346D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v9, v8);
  sub_1ABD065C8(&v14, v6 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_appConfigurationManager);
  sub_1ABD065C8(&v12, v6 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_watchlistService);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC10StocksCore21KVSCleanupStartupTask_lazyDatabase) = v4;
  ObjectType = v5;
  v16 = sub_1ABCFE1EC(&qword_1ED346BD8, (uint64_t (*)(uint64_t))type metadata accessor for KVSCleanupStartupTask, (uint64_t)&unk_1ABF457FC);
  *(_QWORD *)&v14 = v6;
  sub_1ABF30EC8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350A18);
  result = sub_1ABF30B74();
  v10 = v12;
  if ((_QWORD)v12)
  {
    v11 = *((_QWORD *)&v12 + 1);
    ObjectType = swift_getObjectType();
    v16 = *(_QWORD *)(v11 + 16);
    *(_QWORD *)&v14 = v10;
    sub_1ABF30EC8();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1ABE7B374(_QWORD *a1)
{
  return sub_1ABE7B384(a1, 1);
}

uint64_t sub_1ABE7B37C(_QWORD *a1)
{
  return sub_1ABE7B384(a1, 2);
}

uint64_t sub_1ABE7B384(_QWORD *a1, int a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for YahooAttributionProvider();
  result = sub_1ABF30B68();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v6 = type metadata accessor for SDSMetadataCache();
    result = sub_1ABF30B68();
    if (result)
    {
      v15[3] = v6;
      v15[4] = &off_1E5AE4340;
      v15[0] = result;
      type metadata accessor for SDSAttributionProvider();
      v7 = swift_allocObject();
      v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v6);
      MEMORY[0x1E0C80A78](v8);
      v10 = (_QWORD *)((char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v11 + 16))(v10);
      v12 = *v10;
      sub_1ABF2FF68();
      v13 = sub_1ABD180A0(a2, v5, v12, v7);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      swift_release();
      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE7B4F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  v2 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF5A54(0, &qword_1ED350338, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB2E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  result = sub_1ABF30B50();
  if (result)
  {
    type metadata accessor for SDSMetadataCache();
    v4 = swift_allocObject();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
    sub_1ABCF5A54(0, &qword_1ED350340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF366C0;
    sub_1ABF30B20();
    sub_1ABCFE1EC((unint64_t *)&unk_1ED350AE0, v5, MEMORY[0x1E0DB33D8]);
    sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B50, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD0223C((unint64_t *)&qword_1ED350B60, (unint64_t *)&unk_1ED350B50, v5);
    sub_1ABF31E04();
    sub_1ABCF5A54(0, &qword_1ED34EA60, (uint64_t (*)(uint64_t))sub_1ABD34BC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
    swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_1ABF31078();
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE7B6FC()
{
  type metadata accessor for AppleAttributionProvider();
  swift_allocObject();
  return sub_1ABF26904();
}

uint64_t sub_1ABE7B730(_QWORD *a1)
{
  uint64_t result;
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v3)
  {
    type metadata accessor for YahooAttributionProvider();
    swift_allocObject();
    return sub_1ABD399D4((uint64_t)v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1ABE7B7C4(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  char *v12;
  uint64_t v13;
  __int128 v15;
  ValueMetadata *v16;
  _UNKNOWN **v17;

  v10 = sub_1ABF30EE0();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
  MEMORY[0x1E0C80A78](v10);
  v16 = &type metadata for CurrencyManagerCache;
  v17 = &off_1E5AEA060;
  *(_QWORD *)&v15 = a2;
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350B00, v11, MEMORY[0x1E0DB41A8]);
  sub_1ABCF5A54(0, &qword_1ED350B80, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B88, &qword_1ED350B80, v11);
  sub_1ABF31E04();
  sub_1ABE7BFE0(0, &qword_1ED34C4A0, (void (*)(uint64_t))sub_1ABE7C060, (void (*)(uint64_t))sub_1ABE7C0B8, (void (*)(void))sub_1ABE7C120);
  swift_allocObject();
  a5[12] = sub_1ABF30C34();
  v12 = (char *)a5 + OBJC_IVAR____TtC10StocksCore15CurrencyManager_inMemory;
  v13 = type metadata accessor for CurrencyResponse();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_1ABD065C8(a1, (uint64_t)(a5 + 2));
  sub_1ABD065C8(&v15, (uint64_t)(a5 + 7));
  a5[13] = a3;
  a5[14] = a4;
  return a5;
}

uint64_t sub_1ABE7B984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;

  v5 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF30EE0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
  MEMORY[0x1E0C80A78](v6);
  v11 = type metadata accessor for AttributionSourceAssetService();
  v12 = &off_1E5AEF970;
  *(_QWORD *)&v10 = a2;
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350B00, v7, MEMORY[0x1E0DB41A8]);
  sub_1ABCF5A54(0, &qword_1ED350B80, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B88, &qword_1ED350B80, v7);
  sub_1ABF31E04();
  sub_1ABE7BFE0(0, &qword_1ED34CC38, (void (*)(uint64_t))sub_1ABD33AE8, (void (*)(uint64_t))sub_1ABE7BD24, (void (*)(void))sub_1ABE7BDA4);
  swift_allocObject();
  *(_QWORD *)(a3 + 64) = sub_1ABF30C34();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCF5A54(0, &qword_1ED350340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF366C0;
  sub_1ABF30B20();
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350AE0, v8, MEMORY[0x1E0DB33D8]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B50, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B60, (unint64_t *)&unk_1ED350B50, v8);
  sub_1ABF31E04();
  sub_1ABCF5A54(0, &qword_1ED34CC58, (uint64_t (*)(uint64_t))sub_1ABE7BDC8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  *(_QWORD *)(a3 + 16) = sub_1ABF31078();
  sub_1ABD065C8(&v10, a3 + 24);
  return a3;
}

void sub_1ABE7BC50(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED34EA48, type metadata accessor for RawAttributionSourceLogo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1ABE7BC6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346D78)
  {
    v0 = sub_1ABF30C4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346D78);
  }
}

uint64_t sub_1ABE7BCE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF314E0() - 8) + 80);
  return sub_1ABEDC5BC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3), a1);
}

void sub_1ABE7BD24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34CC78)
  {
    sub_1ABF305D4();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34CC78);
  }
}

uint64_t sub_1ABE7BDA4()
{
  return sub_1ABCFE1EC((unint64_t *)&unk_1ED350BA0, (uint64_t (*)(uint64_t))sub_1ABD33AE8, MEMORY[0x1E0DEB3C0]);
}

uint64_t sub_1ABE7BDC0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABF28E58(a1);
}

void sub_1ABE7BDC8(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED34CC70, (uint64_t (*)(uint64_t))sub_1ABE7BDE4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1ABE7BDE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34CC68)
  {
    sub_1ABE7BE70();
    sub_1ABE7BEB4();
    sub_1ABE7BEF8();
    v0 = sub_1ABF313FC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34CC68);
  }
}

unint64_t sub_1ABE7BE70()
{
  unint64_t result;

  result = qword_1ED34CC18;
  if (!qword_1ED34CC18)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF51208, &type metadata for AttributionSourceAssetManager.ImageStoreDescriptor);
    atomic_store(result, (unint64_t *)&qword_1ED34CC18);
  }
  return result;
}

unint64_t sub_1ABE7BEB4()
{
  unint64_t result;

  result = qword_1ED34CB68;
  if (!qword_1ED34CB68)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39500, &type metadata for DownloadedImage);
    atomic_store(result, (unint64_t *)&qword_1ED34CB68);
  }
  return result;
}

unint64_t sub_1ABE7BEF8()
{
  unint64_t result;

  result = qword_1ED34CB60;
  if (!qword_1ED34CB60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF394D8, &type metadata for DownloadedImage);
    atomic_store(result, (unint64_t *)&qword_1ED34CB60);
  }
  return result;
}

void sub_1ABE7BF3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C4A8)
  {
    type metadata accessor for CurrencyResponse();
    sub_1ABCFE1EC(&qword_1ED34C360, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, (uint64_t)&unk_1ABF37C18);
    sub_1ABCFE1EC(&qword_1ED34C358, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, (uint64_t)&unk_1ABF37C40);
    v0 = sub_1ABF30DB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C4A8);
  }
}

void sub_1ABE7BFE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    v8 = sub_1ABF30C4C();
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1ABE7C060()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C520)
  {
    sub_1ABDF1DF0();
    v0 = sub_1ABF31B40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C520);
  }
}

void sub_1ABE7C0B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C4F0)
  {
    type metadata accessor for CurrencyResponse();
    sub_1ABDF1DF0();
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C4F0);
  }
}

uint64_t sub_1ABE7C120()
{
  return sub_1ABCFE1EC((unint64_t *)&unk_1ED34C528, (uint64_t (*)(uint64_t))sub_1ABE7C060, MEMORY[0x1E0DEB3C0]);
}

double sub_1ABE7C13C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[29] = 0u;
  a1[30] = 0u;
  a1[27] = 0u;
  a1[28] = 0u;
  a1[25] = 0u;
  a1[26] = 0u;
  a1[23] = 0u;
  a1[24] = 0u;
  a1[21] = 0u;
  a1[22] = 0u;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  *(_OWORD *)((char *)a1 + 489) = 0u;
  return result;
}

double sub_1ABE7C18C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 160) = 1;
  return result;
}

void sub_1ABE7C1B0(_BYTE *a1)
{
  bzero(a1, 0x45BuLL);
  a1[1115] = 1;
}

uint64_t sub_1ABE7C1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  BOOL v4;
  uint64_t result;
  char v8;
  char v9;

  v4 = a1 == 0x6C61756E616DLL && a2 == 0xE600000000000000;
  if (v4 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = -96;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ABF5FFC0 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF5FFE0 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001ABF60000 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 32;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001ABF60020 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 33;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001ABF60040 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 64;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF60060 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 65;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001ABF60080 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 96;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ABF600A0 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 97;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001ABF600C0 || (sub_1ABF3223C() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 0x80;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001ABF600E0)
  {
    result = swift_bridgeObjectRelease();
    v8 = -127;
  }
  else
  {
    v9 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      v8 = -127;
    else
      v8 = -2;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_1ABE7C5E4(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))((char *)sub_1ABE7C610 + 4 * byte_1ABF46C80[*v2 >> 5]))(0, a2, 1);
}

uint64_t sub_1ABE7C610()
{
  return 1;
}

uint64_t sub_1ABE7C624()
{
  return 2;
}

uint64_t sub_1ABE7C638()
{
  return 3;
}

uint64_t sub_1ABE7C64C()
{
  return 4;
}

uint64_t sub_1ABE7C660()
{
  return 5;
}

void sub_1ABE7C674()
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1ABE7C710()
{
  id v0;

  sub_1ABF31738();
  if (qword_1ED34FD78 != -1)
    swift_once();
  v0 = (id)qword_1ED368428;
  sub_1ABF30844();
  return sub_1ABF317E0();
}

uint64_t sub_1ABE7CA54(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1ABE7CA78 + 4 * byte_1ABF46C8C[*a1 >> 5]))();
}

BOOL sub_1ABE7CA78@<W0>(unsigned int a1@<W8>)
{
  return a1 < 0x20;
}

uint64_t sub_1ABE7CAF0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X8>)
{
  char v5;

  v5 = (a3 & 1) == 0 && a2 == 1;
  switch(result)
  {
    case 0:
      v5 = -96;
      goto LABEL_9;
    case 1:
LABEL_9:
      *a4 = v5;
      break;
    case 2:
      *a4 = v5 | 0x20;
      break;
    case 3:
      *a4 = v5 | 0x40;
      break;
    case 4:
      *a4 = v5 | 0x60;
      break;
    case 5:
      *a4 = v5 | 0x80;
      break;
    default:
      *a4 = -2;
      break;
  }
  return result;
}

void sub_1ABE7CB64()
{
  qword_1EEC44330 = (uint64_t)&unk_1E5AE8598;
}

uint64_t sub_1ABE7CB78()
{
  return sub_1ABE7CF60(&qword_1EEC41080);
}

uint64_t sub_1ABE7CB94(uint64_t a1)
{
  return sub_1ABE7CFD4(a1, &qword_1EEC41080, &qword_1EEC44330);
}

uint64_t (*sub_1ABE7CBB0())()
{
  if (qword_1EEC41080 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1ABE7CC1C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  uint64_t v10;
  _BYTE v12[16];

  v1 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1ABF31774();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v12[-v7];
  if ((*v0 & 1) != 0)
  {
    sub_1ABF31738();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
    if (qword_1ED34FD78 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  sub_1ABF31738();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
  if (qword_1ED34FD78 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  v9 = (id)qword_1ED368428;
  sub_1ABF30844();
  v10 = sub_1ABF317EC();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
  return v10;
}

uint64_t sub_1ABE7CE28@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_1ABE7CE44()
{
  unsigned __int8 *v0;

  return *v0;
}

_QWORD *sub_1ABE7CE4C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_1ABE7CE6C()
{
  sub_1ABE7F3C8();
  return sub_1ABF319D8();
}

uint64_t sub_1ABE7CEC8()
{
  sub_1ABE7F3C8();
  return sub_1ABF3199C();
}

uint64_t sub_1ABE7CF14@<X0>(_QWORD *a1@<X8>)
{
  return sub_1ABE7E48C(&qword_1EEC41080, &qword_1EEC44330, a1);
}

void sub_1ABE7CF30()
{
  qword_1ED34C730 = (uint64_t)&unk_1E5AE8650;
}

uint64_t sub_1ABE7CF44()
{
  return sub_1ABE7CF60(&qword_1ED34C728);
}

uint64_t sub_1ABE7CF60(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE7CFB8(uint64_t a1)
{
  return sub_1ABE7CFD4(a1, &qword_1ED34C728, &qword_1ED34C730);
}

uint64_t sub_1ABE7CFD4(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1ABE7D038())()
{
  if (qword_1ED34C728 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ABE7D0A4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABE7D0C8 + 4 * byte_1ABF46C98[*v0 >> 5]))();
}

void sub_1ABE7D0C8(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1 & 1;
}

void sub_1ABE7D0D4()
{
  __asm { BR              X11 }
}

uint64_t sub_1ABE7D114()
{
  sub_1ABF32314();
  return sub_1ABF32314();
}

uint64_t sub_1ABE7D14C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE7D178 + 4 * byte_1ABF46CA4[*v0]))(0x6C61756E616DLL, 0xE600000000000000);
}

uint64_t sub_1ABE7D178()
{
  return 0x6168436563697270;
}

uint64_t sub_1ABE7D198()
{
  return 0x43746E6563726570;
}

uint64_t sub_1ABE7D1BC()
{
  return 0x614374656B72616DLL;
}

uint64_t sub_1ABE7D1D8()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1ABE7D1E8()
{
  return 1701667182;
}

uint64_t sub_1ABE7D1F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE7F120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE7D21C()
{
  sub_1ABE7E6C4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE7D244()
{
  sub_1ABE7E6C4();
  return sub_1ABF32398();
}

uint64_t sub_1ABE7D26C()
{
  return 0;
}

uint64_t sub_1ABE7D278@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1ABE7D2A4()
{
  sub_1ABE7E680();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE7D2CC()
{
  sub_1ABE7E680();
  return sub_1ABF32398();
}

uint64_t sub_1ABE7D2F4()
{
  sub_1ABE7E5B4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE7D31C()
{
  sub_1ABE7E5B4();
  return sub_1ABF32398();
}

uint64_t sub_1ABE7D344()
{
  sub_1ABE7E52C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE7D36C()
{
  sub_1ABE7E52C();
  return sub_1ABF32398();
}

uint64_t sub_1ABE7D394()
{
  sub_1ABE7E5F8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE7D3BC()
{
  sub_1ABE7E5F8();
  return sub_1ABF32398();
}

uint64_t sub_1ABE7D3E4()
{
  sub_1ABE7E63C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE7D40C()
{
  sub_1ABE7E63C();
  return sub_1ABF32398();
}

uint64_t sub_1ABE7D434()
{
  sub_1ABE7E570();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE7D45C()
{
  sub_1ABE7E570();
  return sub_1ABF32398();
}

void sub_1ABE7D484(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  _QWORD v19[19];

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1ABCF4DA8(0, &qword_1EEC44338, (uint64_t (*)(void))sub_1ABE7E52C, (uint64_t)&type metadata for WatchlistSortState.NameCodingKeys, MEMORY[0x1E0DED170]);
  v19[14] = *(_QWORD *)(v4 - 8);
  v19[15] = v4;
  MEMORY[0x1E0C80A78](v4);
  v19[13] = (char *)v19 - v5;
  sub_1ABCF4DA8(0, &qword_1EEC44348, (uint64_t (*)(void))sub_1ABE7E570, (uint64_t)&type metadata for WatchlistSortState.SymbolCodingKeys, v3);
  v19[11] = *(_QWORD *)(v6 - 8);
  v19[12] = v6;
  MEMORY[0x1E0C80A78](v6);
  v19[10] = (char *)v19 - v7;
  sub_1ABCF4DA8(0, &qword_1EEC44358, (uint64_t (*)(void))sub_1ABE7E5B4, (uint64_t)&type metadata for WatchlistSortState.MarketCapCodingKeys, v3);
  v19[8] = *(_QWORD *)(v8 - 8);
  v19[9] = v8;
  MEMORY[0x1E0C80A78](v8);
  v19[7] = (char *)v19 - v9;
  sub_1ABCF4DA8(0, &qword_1EEC44368, (uint64_t (*)(void))sub_1ABE7E5F8, (uint64_t)&type metadata for WatchlistSortState.PercentChangeCodingKeys, v3);
  v19[5] = *(_QWORD *)(v10 - 8);
  v19[6] = v10;
  MEMORY[0x1E0C80A78](v10);
  v19[4] = (char *)v19 - v11;
  sub_1ABCF4DA8(0, &qword_1EEC44378, (uint64_t (*)(void))sub_1ABE7E63C, (uint64_t)&type metadata for WatchlistSortState.PriceChangeCodingKeys, v3);
  v19[2] = *(_QWORD *)(v12 - 8);
  v19[3] = v12;
  MEMORY[0x1E0C80A78](v12);
  v19[1] = (char *)v19 - v13;
  sub_1ABCF4DA8(0, &qword_1EEC44388, (uint64_t (*)(void))sub_1ABE7E680, (uint64_t)&type metadata for WatchlistSortState.ManualCodingKeys, v3);
  MEMORY[0x1E0C80A78](v14);
  sub_1ABCF4DA8(0, &qword_1EEC44398, (uint64_t (*)(void))sub_1ABE7E6C4, (uint64_t)&type metadata for WatchlistSortState.CodingKeys, v3);
  v19[18] = v15;
  v19[16] = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v19 - v16;
  v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE7E6C4();
  v19[17] = v17;
  sub_1ABF32368();
  __asm { BR              X10 }
}

uint64_t sub_1ABE7D758()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0 & 1;
  *(_BYTE *)(v1 - 89) = 1;
  sub_1ABE7E63C();
  v3 = *(_QWORD *)(v1 - 248);
  v5 = *(_QWORD *)(v1 - 120);
  v4 = *(_QWORD *)(v1 - 112);
  sub_1ABF32134();
  *(_BYTE *)(v1 - 90) = v2;
  sub_1ABE7E708();
  v6 = *(_QWORD *)(v1 - 232);
  sub_1ABF321D0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 240) + 8))(v3, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 128) + 8))(v5, v4);
}

void sub_1ABE7D9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 91) = 0;
  sub_1ABE7E680();
  v4 = *(_QWORD *)(v3 - 120);
  v5 = *(_QWORD *)(v3 - 112);
  sub_1ABF32134();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8))(v4, v5);
  JUMPOUT(0x1ABE7D9BCLL);
}

void sub_1ABE7DA38()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABE7DA80()
{
  sub_1ABF32314();
  sub_1ABF32314();
  return sub_1ABF32338();
}

uint64_t sub_1ABE7DACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char *v34;
  _QWORD v36[19];
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v36[18] = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1ABCF4DA8(0, &qword_1EEC443B0, (uint64_t (*)(void))sub_1ABE7E52C, (uint64_t)&type metadata for WatchlistSortState.NameCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = *(_QWORD *)(v4 - 8);
  v36[11] = v4;
  v36[12] = v5;
  MEMORY[0x1E0C80A78](v4);
  v36[17] = (char *)v36 - v6;
  sub_1ABCF4DA8(0, &qword_1EEC443B8, (uint64_t (*)(void))sub_1ABE7E570, (uint64_t)&type metadata for WatchlistSortState.SymbolCodingKeys, v3);
  v8 = *(_QWORD *)(v7 - 8);
  v36[9] = v7;
  v36[10] = v8;
  MEMORY[0x1E0C80A78](v7);
  v36[16] = (char *)v36 - v9;
  sub_1ABCF4DA8(0, &qword_1EEC443C0, (uint64_t (*)(void))sub_1ABE7E5B4, (uint64_t)&type metadata for WatchlistSortState.MarketCapCodingKeys, v3);
  v36[7] = *(_QWORD *)(v10 - 8);
  v36[8] = v10;
  MEMORY[0x1E0C80A78](v10);
  v36[15] = (char *)v36 - v11;
  sub_1ABCF4DA8(0, &qword_1EEC443C8, (uint64_t (*)(void))sub_1ABE7E5F8, (uint64_t)&type metadata for WatchlistSortState.PercentChangeCodingKeys, v3);
  v13 = *(_QWORD *)(v12 - 8);
  v36[5] = v12;
  v36[6] = v13;
  MEMORY[0x1E0C80A78](v12);
  v36[13] = (char *)v36 - v14;
  sub_1ABCF4DA8(0, &qword_1EEC443D0, (uint64_t (*)(void))sub_1ABE7E63C, (uint64_t)&type metadata for WatchlistSortState.PriceChangeCodingKeys, v3);
  v16 = *(_QWORD *)(v15 - 8);
  v36[3] = v15;
  v36[4] = v16;
  MEMORY[0x1E0C80A78](v15);
  v36[14] = (char *)v36 - v17;
  sub_1ABCF4DA8(0, &qword_1EEC443D8, (uint64_t (*)(void))sub_1ABE7E680, (uint64_t)&type metadata for WatchlistSortState.ManualCodingKeys, v3);
  v36[2] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v36 - v20;
  sub_1ABCF4DA8(0, &qword_1EEC443E0, (uint64_t (*)(void))sub_1ABE7E6C4, (uint64_t)&type metadata for WatchlistSortState.CodingKeys, v3);
  v23 = v22;
  v24 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = *(_QWORD *)(a1 + 24);
  v38 = a1;
  v26 = (_QWORD *)a1;
  v28 = (char *)v36 - v27;
  __swift_project_boxed_opaque_existential_1(v26, v25);
  sub_1ABE7E6C4();
  v37 = v28;
  v29 = v39;
  sub_1ABF3235C();
  if (!v29)
  {
    v36[1] = v21;
    v36[0] = v19;
    v39 = v24;
    v30 = sub_1ABF3211C();
    if (*(_QWORD *)(v30 + 16) == 1)
      __asm { BR              X10 }
    v31 = sub_1ABF31EDC();
    swift_allocError();
    v33 = v32;
    sub_1ABDD7D74();
    v34 = v37;
    *v33 = &type metadata for WatchlistSortState;
    sub_1ABF32080();
    sub_1ABF31EC4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC450], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v23);
  }
  return __swift_destroy_boxed_opaque_existential_1(v38);
}

void sub_1ABE7E334()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X10 }
}

uint64_t sub_1ABE7E378()
{
  sub_1ABF32314();
  sub_1ABF32314();
  return sub_1ABF32338();
}

uint64_t sub_1ABE7E3C4(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1ABE7E3E8 + 4 * byte_1ABF46CC2[*a1 >> 5]))();
}

BOOL sub_1ABE7E3E8@<W0>(unsigned int a1@<W8>)
{
  return a1 < 0x20;
}

uint64_t sub_1ABE7E448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE7DACC(a1, a2);
}

void sub_1ABE7E45C(_QWORD *a1)
{
  sub_1ABE7D484(a1);
}

uint64_t sub_1ABE7E470@<X0>(_QWORD *a1@<X8>)
{
  return sub_1ABE7E48C(&qword_1ED34C728, &qword_1ED34C730, a1);
}

uint64_t sub_1ABE7E48C@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = *a2;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE7E4F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1ABE7CAF0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), a2);
}

uint64_t sub_1ABE7E500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1ABE7C5E4(a1, a2);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = v6 & 1;
  return result;
}

unint64_t sub_1ABE7E52C()
{
  unint64_t result;

  result = qword_1EEC44340;
  if (!qword_1EEC44340)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF476C0, &type metadata for WatchlistSortState.NameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44340);
  }
  return result;
}

unint64_t sub_1ABE7E570()
{
  unint64_t result;

  result = qword_1EEC44350;
  if (!qword_1EEC44350)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47670, &type metadata for WatchlistSortState.SymbolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44350);
  }
  return result;
}

unint64_t sub_1ABE7E5B4()
{
  unint64_t result;

  result = qword_1EEC44360;
  if (!qword_1EEC44360)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47620, &type metadata for WatchlistSortState.MarketCapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44360);
  }
  return result;
}

unint64_t sub_1ABE7E5F8()
{
  unint64_t result;

  result = qword_1EEC44370;
  if (!qword_1EEC44370)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF475D0, &type metadata for WatchlistSortState.PercentChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44370);
  }
  return result;
}

unint64_t sub_1ABE7E63C()
{
  unint64_t result;

  result = qword_1EEC44380;
  if (!qword_1EEC44380)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47580, &type metadata for WatchlistSortState.PriceChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44380);
  }
  return result;
}

unint64_t sub_1ABE7E680()
{
  unint64_t result;

  result = qword_1EEC44390;
  if (!qword_1EEC44390)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47530, &type metadata for WatchlistSortState.ManualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44390);
  }
  return result;
}

unint64_t sub_1ABE7E6C4()
{
  unint64_t result;

  result = qword_1EEC443A0;
  if (!qword_1EEC443A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF474E0, &type metadata for WatchlistSortState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC443A0);
  }
  return result;
}

unint64_t sub_1ABE7E708()
{
  unint64_t result;

  result = qword_1EEC443A8;
  if (!qword_1EEC443A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46DB8, &type metadata for WatchlistSortState.Order);
    atomic_store(result, (unint64_t *)&qword_1EEC443A8);
  }
  return result;
}

unint64_t sub_1ABE7E74C()
{
  unint64_t result;

  result = qword_1EEC443E8;
  if (!qword_1EEC443E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46D90, &type metadata for WatchlistSortState.Order);
    atomic_store(result, (unint64_t *)&qword_1EEC443E8);
  }
  return result;
}

unint64_t sub_1ABE7E794()
{
  unint64_t result;

  result = qword_1EEC443F0;
  if (!qword_1EEC443F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46CF0, &type metadata for WatchlistSortState.Order);
    atomic_store(result, (unint64_t *)&qword_1EEC443F0);
  }
  return result;
}

uint64_t sub_1ABE7E7D8()
{
  return sub_1ABE7E878(&qword_1EEC443F8, &qword_1EEC44400);
}

unint64_t sub_1ABE7E808()
{
  unint64_t result;

  result = qword_1EEC44408;
  if (!qword_1EEC44408)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46E58, &type metadata for WatchlistSortState);
    atomic_store(result, (unint64_t *)&qword_1EEC44408);
  }
  return result;
}

uint64_t sub_1ABE7E84C()
{
  return sub_1ABE7E878(&qword_1EEC44410, &qword_1EEC44418);
}

uint64_t sub_1ABE7E878(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_1ABD12448(255, a2);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

_BYTE *sub_1ABE7E8B8(_BYTE *result)
{
  *result &= 0x1Fu;
  return result;
}

_BYTE *sub_1ABE7E8C8(_BYTE *result, unsigned int a2)
{
  if (a2 < 5)
    *result = *result & 1 | (32 * a2);
  else
    *result = a2 & 1 ^ 0xA1;
  return result;
}

uint64_t storeEnumTagSinglePayload for WatchlistSortState.Order(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABE7E944 + 4 * byte_1ABF46CD7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABE7E978 + 4 * byte_1ABF46CD2[v4]))();
}

uint64_t sub_1ABE7E978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE7E980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE7E988);
  return result;
}

uint64_t sub_1ABE7E994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE7E99CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABE7E9A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE7E9A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSortState.Order()
{
  return &type metadata for WatchlistSortState.Order;
}

uint64_t storeEnumTagSinglePayload for WatchlistSortState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1ABE7EA10 + 4 * byte_1ABF46CE1[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1ABE7EA44 + 4 * byte_1ABF46CDC[v4]))();
}

uint64_t sub_1ABE7EA44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE7EA4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE7EA54);
  return result;
}

uint64_t sub_1ABE7EA60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE7EA68);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1ABE7EA6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE7EA74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSortState.CodingKeys()
{
  return &type metadata for WatchlistSortState.CodingKeys;
}

ValueMetadata *type metadata accessor for WatchlistSortState.ManualCodingKeys()
{
  return &type metadata for WatchlistSortState.ManualCodingKeys;
}

ValueMetadata *type metadata accessor for WatchlistSortState.PriceChangeCodingKeys()
{
  return &type metadata for WatchlistSortState.PriceChangeCodingKeys;
}

ValueMetadata *type metadata accessor for WatchlistSortState.PercentChangeCodingKeys()
{
  return &type metadata for WatchlistSortState.PercentChangeCodingKeys;
}

ValueMetadata *type metadata accessor for WatchlistSortState.MarketCapCodingKeys()
{
  return &type metadata for WatchlistSortState.MarketCapCodingKeys;
}

ValueMetadata *type metadata accessor for WatchlistSortState.SymbolCodingKeys()
{
  return &type metadata for WatchlistSortState.SymbolCodingKeys;
}

uint64_t _s10StocksCore18WatchlistSortStateO21PriceChangeCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE7EB24 + 4 * byte_1ABF46CE6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE7EB44 + 4 * byte_1ABF46CEB[v4]))();
}

_BYTE *sub_1ABE7EB24(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE7EB44(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE7EB4C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE7EB54(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE7EB5C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE7EB64(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSortState.NameCodingKeys()
{
  return &type metadata for WatchlistSortState.NameCodingKeys;
}

unint64_t sub_1ABE7EB84()
{
  unint64_t result;

  result = qword_1EEC44420;
  if (!qword_1EEC44420)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF470D0, &type metadata for WatchlistSortState.NameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44420);
  }
  return result;
}

unint64_t sub_1ABE7EBCC()
{
  unint64_t result;

  result = qword_1EEC44428;
  if (!qword_1EEC44428)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47188, &type metadata for WatchlistSortState.SymbolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44428);
  }
  return result;
}

unint64_t sub_1ABE7EC14()
{
  unint64_t result;

  result = qword_1EEC44430;
  if (!qword_1EEC44430)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47240, &type metadata for WatchlistSortState.MarketCapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44430);
  }
  return result;
}

unint64_t sub_1ABE7EC5C()
{
  unint64_t result;

  result = qword_1EEC44438;
  if (!qword_1EEC44438)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF472F8, &type metadata for WatchlistSortState.PercentChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44438);
  }
  return result;
}

unint64_t sub_1ABE7ECA4()
{
  unint64_t result;

  result = qword_1EEC44440;
  if (!qword_1EEC44440)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF473B0, &type metadata for WatchlistSortState.PriceChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44440);
  }
  return result;
}

unint64_t sub_1ABE7ECEC()
{
  unint64_t result;

  result = qword_1EEC44448;
  if (!qword_1EEC44448)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF474B8, &type metadata for WatchlistSortState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44448);
  }
  return result;
}

unint64_t sub_1ABE7ED34()
{
  unint64_t result;

  result = qword_1EEC44450;
  if (!qword_1EEC44450)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47428, &type metadata for WatchlistSortState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44450);
  }
  return result;
}

unint64_t sub_1ABE7ED7C()
{
  unint64_t result;

  result = qword_1EEC44458;
  if (!qword_1EEC44458)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47450, &type metadata for WatchlistSortState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44458);
  }
  return result;
}

unint64_t sub_1ABE7EDC4()
{
  unint64_t result;

  result = qword_1EEC44460;
  if (!qword_1EEC44460)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF473D8, &type metadata for WatchlistSortState.ManualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44460);
  }
  return result;
}

unint64_t sub_1ABE7EE0C()
{
  unint64_t result;

  result = qword_1EEC44468;
  if (!qword_1EEC44468)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47400, &type metadata for WatchlistSortState.ManualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44468);
  }
  return result;
}

unint64_t sub_1ABE7EE54()
{
  unint64_t result;

  result = qword_1EEC44470;
  if (!qword_1EEC44470)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47320, &type metadata for WatchlistSortState.PriceChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44470);
  }
  return result;
}

unint64_t sub_1ABE7EE9C()
{
  unint64_t result;

  result = qword_1EEC44478;
  if (!qword_1EEC44478)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47348, &type metadata for WatchlistSortState.PriceChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44478);
  }
  return result;
}

unint64_t sub_1ABE7EEE4()
{
  unint64_t result;

  result = qword_1EEC44480;
  if (!qword_1EEC44480)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47268, &type metadata for WatchlistSortState.PercentChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44480);
  }
  return result;
}

unint64_t sub_1ABE7EF2C()
{
  unint64_t result;

  result = qword_1EEC44488;
  if (!qword_1EEC44488)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47290, &type metadata for WatchlistSortState.PercentChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44488);
  }
  return result;
}

unint64_t sub_1ABE7EF74()
{
  unint64_t result;

  result = qword_1EEC44490;
  if (!qword_1EEC44490)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF471B0, &type metadata for WatchlistSortState.MarketCapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44490);
  }
  return result;
}

unint64_t sub_1ABE7EFBC()
{
  unint64_t result;

  result = qword_1EEC44498;
  if (!qword_1EEC44498)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF471D8, &type metadata for WatchlistSortState.MarketCapCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44498);
  }
  return result;
}

unint64_t sub_1ABE7F004()
{
  unint64_t result;

  result = qword_1EEC444A0;
  if (!qword_1EEC444A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF470F8, &type metadata for WatchlistSortState.SymbolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC444A0);
  }
  return result;
}

unint64_t sub_1ABE7F04C()
{
  unint64_t result;

  result = qword_1EEC444A8;
  if (!qword_1EEC444A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47120, &type metadata for WatchlistSortState.SymbolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC444A8);
  }
  return result;
}

unint64_t sub_1ABE7F094()
{
  unint64_t result;

  result = qword_1EEC444B0;
  if (!qword_1EEC444B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47040, &type metadata for WatchlistSortState.NameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC444B0);
  }
  return result;
}

unint64_t sub_1ABE7F0DC()
{
  unint64_t result;

  result = qword_1EEC444B8;
  if (!qword_1EEC444B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47068, &type metadata for WatchlistSortState.NameCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC444B8);
  }
  return result;
}

uint64_t sub_1ABE7F120(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C61756E616DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x43746E6563726570 && a2 == 0xED000065676E6168 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614374656B72616DLL && a2 == 0xE900000000000070 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_1ABE7F3C8()
{
  unint64_t result;

  result = qword_1EEC444C0;
  if (!qword_1EEC444C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF46D58, &type metadata for WatchlistSortState.Order);
    atomic_store(result, (unint64_t *)&qword_1EEC444C0);
  }
  return result;
}

uint64_t sub_1ABE7F40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1ABE7F414(_QWORD *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = a1[3];
  v5 = a1[4];
  v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  return sub_1ABE7F454((uint64_t)v6, a2, v2, v4, v5);
}

uint64_t sub_1ABE7F454(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t ObjectType;
  __int128 v13;
  __int128 v14;
  uint64_t v15[5];

  v15[3] = a4;
  v15[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  v13 = *a2;
  if (MEMORY[0x1AF4390D4](a3 + 16))
  {
    v10 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    v14 = v13;
    (*(void (**)(uint64_t *, __int128 *, uint64_t, uint64_t))(v10 + 8))(v15, &v14, ObjectType, v10);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse()
{
  return &type metadata for YahooQuoteDetailResponse;
}

uint64_t sub_1ABE7F520(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE7F55C + 4 * byte_1ABF47780[a1]))(0x6F626D79735F6469, 0xE90000000000006CLL);
}

uint64_t sub_1ABE7F55C()
{
  return 1701667182;
}

uint64_t sub_1ABE7F56C()
{
  return 0x65676E6168637865;
}

uint64_t sub_1ABE7F584()
{
  return 0x6563697270;
}

uint64_t sub_1ABE7F598()
{
  return 0x65676E616863;
}

uint64_t sub_1ABE7F5AC()
{
  return 1852141679;
}

uint64_t sub_1ABE7F5BC()
{
  return 0x776F6C5F796164;
}

uint64_t sub_1ABE7F5D4()
{
  return 0x686769685F796164;
}

uint64_t sub_1ABE7F5EC()
{
  return 0x776F6C5F72616579;
}

uint64_t sub_1ABE7F604()
{
  return 0x6769685F72616579;
}

uint64_t sub_1ABE7F61C()
{
  return 0x646E656469766964;
}

uint64_t sub_1ABE7F640()
{
  return 0x635F74656B72616DLL;
}

uint64_t sub_1ABE7F660()
{
  return 0x656D756C6F76;
}

uint64_t sub_1ABE7F674()
{
  return 0x765F6D335F677661;
}

uint64_t sub_1ABE7F698()
{
  return 0x6F697461725F6570;
}

unint64_t sub_1ABE7F6B0()
{
  return 0xD000000000000010;
}

uint64_t sub_1ABE7F6CC()
{
  return 7565413;
}

uint64_t sub_1ABE7F6DC()
{
  return 0x79636E6572727563;
}

uint64_t sub_1ABE7F6F4()
{
  return 0x5F736C6961746564;
}

uint64_t sub_1ABE7F714()
{
  return 0x616E5F74726F6873;
}

uint64_t sub_1ABE7F730()
{
  return 0x7079745F61746164;
}

unint64_t sub_1ABE7F74C()
{
  return 0xD000000000000012;
}

uint64_t sub_1ABE7F79C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1ABE7F520(*a1);
  v5 = v4;
  if (v3 == sub_1ABE7F520(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABE7F824()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABE7F520(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE7F884()
{
  unsigned __int8 *v0;

  sub_1ABE7F520(*v0);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE7F8C4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABE7F520(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE7F920@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE804E0();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE7F94C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABE7F520(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE7F974()
{
  unsigned __int8 *v0;

  return sub_1ABE7F520(*v0);
}

uint64_t sub_1ABE7F97C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE804E0();
  *a1 = result;
  return result;
}

void sub_1ABE7F9A0(_BYTE *a1@<X8>)
{
  *a1 = 24;
}

uint64_t sub_1ABE7F9AC()
{
  sub_1ABE84CA4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE7F9D4()
{
  sub_1ABE84CA4();
  return sub_1ABF32398();
}

uint64_t sub_1ABE7F9FC()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1ABE7FA48(char a1)
{
  if (!a1)
    return 7823730;
  if (a1 == 1)
    return 0x6E69727453776172;
  return 7630182;
}

void *sub_1ABE7FA94@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _BYTE v5[720];

  result = sub_1ABE80530(a1, v5);
  if (!v2)
    return memcpy(a2, v5, 0x2D0uLL);
  return result;
}

uint64_t sub_1ABE7FAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1AF438F30](&unk_1ABF47F40, a3);
  return sub_1ABF32260();
}

uint64_t sub_1ABE7FB38(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF47F40, a1);
  return sub_1ABF319A8();
}

uint64_t sub_1ABE7FB84()
{
  MEMORY[0x1AF438F30](&unk_1ABF47F40);
  return sub_1ABF319C0();
}

uint64_t sub_1ABE7FBD4()
{
  MEMORY[0x1AF438F30](&unk_1ABF47F40);
  return sub_1ABF319B4();
}

uint64_t sub_1ABE7FC24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE7F9FC();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE7FC50@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABE7FA48(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE7FC78()
{
  char *v0;

  return sub_1ABE7FA48(*v0);
}

uint64_t sub_1ABE7FC80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE7FA44();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE7FCA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE81ADC();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE7FCCC(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF48088, a1);
  return sub_1ABF3238C();
}

uint64_t sub_1ABE7FD00(uint64_t a1)
{
  MEMORY[0x1AF438F30](&unk_1ABF48088, a1);
  return sub_1ABF32398();
}

uint64_t sub_1ABE7FD34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  char v57;
  char v58;

  v48 = a4;
  v7 = sub_1ABF31D5C();
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  MEMORY[0x1E0C80A78](v7);
  v52 = (char *)&v41 - v8;
  v49 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v9);
  v45 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for YahooQuoteDetailResponse.Value.CodingKeys(255, a2, a3, v11);
  MEMORY[0x1AF438F30](&unk_1ABF48088, v12);
  v53 = sub_1ABF32128();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v14 = (char *)&v41 - v13;
  v50 = a3;
  v54 = type metadata accessor for YahooQuoteDetailResponse.Value(0, a2, a3, v15);
  v16 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v18 = (char *)&v41 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v55 = v14;
  v19 = (uint64_t)v56;
  sub_1ABF3235C();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v44 = v16;
  v20 = v51;
  v21 = v52;
  v56 = a1;
  v22 = v54;
  v58 = 0;
  v23 = sub_1ABF320E0();
  v25 = (uint64_t *)&v18[*(int *)(v22 + 36)];
  v43 = v23;
  *v25 = v23;
  v25[1] = v26;
  v57 = 2;
  sub_1ABF2FF5C();
  v27 = sub_1ABF320E0();
  v29 = *(int *)(v54 + 40);
  v42 = v18;
  v30 = (uint64_t *)&v18[v29];
  *v30 = v27;
  v30[1] = v28;
  v31 = a2;
  v32 = v50;
  sub_1ABF32218();
  v33 = v49;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v21, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v47);
    v35 = type metadata accessor for YahooQuoteDetailResponse.Value.ValueError(0, a2, v32, v34);
    MEMORY[0x1AF438F30](&unk_1ABF48048, v35);
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v55, v53);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v55, v53);
    v36 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v37 = v45;
    v36(v45, v21, a2);
    v38 = v42;
    v36(v42, v37, v31);
    v39 = v44;
    v40 = v54;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 16))(v48, v38, v54);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v38, v40);
  }
}

uint64_t sub_1ABE80108@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ABE7FD34(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1ABE80124()
{
  return sub_1ABDE6D7C();
}

uint64_t sub_1ABE80148()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABE8016C()
{
  return sub_1ABDE6DE0();
}

uint64_t sub_1ABE80190@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

void sub_1ABE8019C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "quote_service");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1ABE801C4()
{
  return 0x65735F65746F7571;
}

uint64_t sub_1ABE801E8@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABE801F4()
{
  sub_1ABE82244();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE8021C()
{
  sub_1ABE82244();
  return sub_1ABF32398();
}

_QWORD *sub_1ABE80244@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABE81AE4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE8026C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7365746F7571 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABE802F8()
{
  sub_1ABE82504();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE80320()
{
  sub_1ABE82504();
  return sub_1ABF32398();
}

_QWORD *sub_1ABE80348@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABE81C2C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE80370()
{
  return sub_1ABDE6D7C();
}

uint64_t sub_1ABE80384()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABE80398()
{
  return sub_1ABDE6DE0();
}

uint64_t sub_1ABE803AC@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

void sub_1ABE803B8(_QWORD *a1@<X8>)
{
  *a1 = 0x65746F7571;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1ABE803D0()
{
  return 0x65746F7571;
}

uint64_t sub_1ABE803E4@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABE803F0()
{
  sub_1ABE82684();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE80418()
{
  sub_1ABE82684();
  return sub_1ABF32398();
}

uint64_t sub_1ABE80440@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1ABE81D74(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE80468()
{
  sub_1ABE820C0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE80490()
{
  sub_1ABE820C0();
  return sub_1ABF32398();
}

_QWORD *sub_1ABE804B8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABE81F78(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE804E0()
{
  unint64_t v0;

  v0 = sub_1ABF3226C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x18)
    return 24;
  else
    return v0;
}

void *sub_1ABE80530@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  _QWORD v204[90];
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  _QWORD *v295;

  v203 = a2;
  sub_1ABDE97D0(0, &qword_1ED351378, (void (*)(void))sub_1ABE84CA4);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v115 - v7;
  v9 = a1[3];
  v295 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1ABE84CA4();
  sub_1ABF3235C();
  if (v2)
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v295);
  LOBYTE(v205) = 0;
  v11 = sub_1ABF320E0();
  v13 = v12;
  LOBYTE(v205) = 1;
  sub_1ABF2FF5C();
  v14 = sub_1ABF3208C();
  v16 = v15;
  v201 = v14;
  v202 = v11;
  LOBYTE(v205) = 2;
  sub_1ABF2FF5C();
  v17 = sub_1ABF3208C();
  v19 = v18;
  v199 = v17;
  LOBYTE(v205) = 17;
  sub_1ABF2FF5C();
  v197 = sub_1ABF3208C();
  LOBYTE(v205) = 18;
  v200 = v20;
  sub_1ABF2FF5C();
  v21 = sub_1ABF3208C();
  v198 = v22;
  v194 = v21;
  LOBYTE(v205) = 19;
  sub_1ABF2FF5C();
  v195 = 0;
  v191 = sub_1ABF3208C();
  LOBYTE(v205) = 20;
  v196 = v23;
  sub_1ABF2FF5C();
  v188 = sub_1ABF3208C();
  LOBYTE(v205) = 21;
  v190 = v24;
  sub_1ABF2FF5C();
  v123 = sub_1ABF3208C();
  v124 = v19;
  v26 = v25;
  sub_1ABE83C68(0, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  v28 = v27;
  LOBYTE(v204[0]) = 3;
  v29 = sub_1ABE84CE8(&qword_1ED351388, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  v122 = v26;
  sub_1ABF2FF5C();
  v195 = v5;
  v193 = v28;
  v192 = v29;
  sub_1ABF320C8();
  v115 = v6;
  if (v207)
  {
    v30 = v205;
    v31 = v206;
    v32 = v208;
    v33 = v209;
    v34 = v207;
  }
  else
  {
    v30 = 0;
    v31 = 0;
    v34 = 0;
    v32 = 0;
    v33 = 0;
  }
  LOBYTE(v204[0]) = 4;
  v120 = v32;
  v121 = v31;
  v151 = v34;
  v119 = v33;
  sub_1ABE84D28(v30, v31, v34);
  sub_1ABF320C8();
  if (v207)
    v35 = v205;
  else
    v35 = 0;
  if (v207)
    v36 = v206;
  else
    v36 = 0;
  if (v207)
    v37 = v207;
  else
    v37 = 0;
  if (v207)
    v38 = v208;
  else
    v38 = 0;
  if (v207)
    v39 = v209;
  else
    v39 = 0;
  LOBYTE(v204[0]) = 5;
  v186 = v36;
  v185 = v37;
  v184 = v38;
  v183 = v39;
  sub_1ABE84D28(v35, v36, v37);
  sub_1ABF320C8();
  if (v207)
    v40 = v205;
  else
    v40 = 0;
  if (v207)
    v41 = v206;
  else
    v41 = 0;
  if (v207)
    v42 = v207;
  else
    v42 = 0;
  if (v207)
    v43 = v208;
  else
    v43 = 0;
  if (v207)
    v44 = v209;
  else
    v44 = 0;
  LOBYTE(v204[0]) = 6;
  v182 = v40;
  v181 = v41;
  v180 = v42;
  v178 = v44;
  v179 = v43;
  sub_1ABE84D28(v40, v41, v42);
  sub_1ABF320C8();
  if (v207)
    v45 = v205;
  else
    v45 = 0;
  if (v207)
    v46 = v206;
  else
    v46 = 0;
  if (v207)
    v47 = v207;
  else
    v47 = 0;
  if (v207)
    v48 = v208;
  else
    v48 = 0;
  if (v207)
    v49 = v209;
  else
    v49 = 0;
  LOBYTE(v204[0]) = 7;
  v176 = v46;
  v177 = v45;
  v174 = v48;
  v175 = v47;
  v173 = v49;
  sub_1ABE84D28(v45, v46, v47);
  sub_1ABF320C8();
  if (v207)
    v50 = v205;
  else
    v50 = 0;
  if (v207)
    v51 = v206;
  else
    v51 = 0;
  if (v207)
    v52 = v207;
  else
    v52 = 0;
  if (v207)
    v53 = v208;
  else
    v53 = 0;
  if (v207)
    v54 = v209;
  else
    v54 = 0;
  LOBYTE(v204[0]) = 8;
  v171 = v51;
  v172 = v50;
  v169 = v53;
  v170 = v52;
  v168 = v54;
  sub_1ABE84D28(v50, v51, v52);
  sub_1ABF320C8();
  if (v207)
    v55 = v205;
  else
    v55 = 0;
  if (v207)
    v56 = v206;
  else
    v56 = 0;
  if (v207)
    v57 = v207;
  else
    v57 = 0;
  if (v207)
    v58 = v208;
  else
    v58 = 0;
  if (v207)
    v59 = v209;
  else
    v59 = 0;
  LOBYTE(v204[0]) = 9;
  v166 = v56;
  v167 = v55;
  v164 = v58;
  v165 = v57;
  v163 = v59;
  sub_1ABE84D28(v55, v56, v57);
  sub_1ABF320C8();
  if (v207)
    v60 = v205;
  else
    v60 = 0;
  if (v207)
    v61 = v206;
  else
    v61 = 0;
  if (v207)
    v62 = v207;
  else
    v62 = 0;
  if (v207)
    v63 = v208;
  else
    v63 = 0;
  if (v207)
    v64 = v209;
  else
    v64 = 0;
  LOBYTE(v204[0]) = 10;
  v161 = v61;
  v162 = v60;
  v159 = v63;
  v160 = v62;
  v158 = v64;
  sub_1ABE84D28(v60, v61, v62);
  sub_1ABF320C8();
  if (v207)
    v65 = v205;
  else
    v65 = 0;
  if (v207)
    v66 = v206;
  else
    v66 = 0;
  if (v207)
    v67 = v207;
  else
    v67 = 0;
  if (v207)
    v68 = v208;
  else
    v68 = 0;
  if (v207)
    v69 = v209;
  else
    v69 = 0;
  v187 = v35;
  LOBYTE(v204[0]) = 11;
  v156 = v66;
  v157 = v65;
  v154 = v68;
  v155 = v67;
  v153 = v69;
  sub_1ABE84D28(v65, v66, v67);
  sub_1ABF320C8();
  v118 = v30;
  if (v207)
    v70 = v205;
  else
    v70 = 0;
  if (v207)
    v71 = v206;
  else
    v71 = 0;
  if (v207)
    v72 = v207;
  else
    v72 = 0;
  v189 = v72;
  if (v207)
    v73 = v208;
  else
    v73 = 0;
  if (v207)
    v74 = v209;
  else
    v74 = 0;
  v147 = 0;
  v150 = v71;
  sub_1ABE83C68(0, qword_1ED3512E0, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBF0]);
  LOBYTE(v204[0]) = 12;
  v152 = v70;
  v148 = v74;
  sub_1ABE84D28(v70, v71, v189);
  v142 = sub_1ABE84CE8(qword_1ED351390, qword_1ED3512E0, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBF0]);
  v75 = v147;
  sub_1ABF320C8();
  if (v75)
  {

    v76 = 0;
    v77 = 0;
    v78 = 0;
    v79 = 0;
    v80 = 0;
  }
  else
  {
    if (v207)
      v76 = v205;
    else
      v76 = 0;
    if (v207)
      v77 = v206;
    else
      v77 = 0;
    if (v207)
      v78 = v207;
    else
      v78 = 0;
    if (v207)
      v79 = v208;
    else
      v79 = 0;
    if (v207)
      v80 = v209;
    else
      v80 = 0;
  }
  LOBYTE(v204[0]) = 13;
  v146 = v77;
  v147 = (void *)v76;
  v144 = v79;
  v145 = v78;
  v143 = v80;
  sub_1ABE84D28(v76, v77, v78);
  sub_1ABF320C8();
  if (v207)
    v81 = v205;
  else
    v81 = 0;
  if (v207)
    v82 = v206;
  else
    v82 = 0;
  if (v207)
    v83 = v207;
  else
    v83 = 0;
  if (v207)
    v84 = v208;
  else
    v84 = 0;
  if (v207)
    v85 = v209;
  else
    v85 = 0;
  LOBYTE(v204[0]) = 14;
  v141 = v82;
  v142 = v81;
  v139 = v84;
  v140 = v83;
  v138 = v85;
  sub_1ABE84D28(v81, v82, v83);
  sub_1ABF320C8();
  if (v207)
    v86 = v205;
  else
    v86 = 0;
  if (v207)
    v87 = v206;
  else
    v87 = 0;
  if (v207)
    v88 = v207;
  else
    v88 = 0;
  if (v207)
    v89 = v208;
  else
    v89 = 0;
  if (v207)
    v90 = v209;
  else
    v90 = 0;
  LOBYTE(v204[0]) = 15;
  v136 = v87;
  v137 = v86;
  v134 = v89;
  v135 = v88;
  v133 = v90;
  sub_1ABE84D28(v86, v87, v88);
  sub_1ABF320C8();
  if (v207)
    v91 = v205;
  else
    v91 = 0;
  if (v207)
    v92 = v206;
  else
    v92 = 0;
  if (v207)
    v93 = v207;
  else
    v93 = 0;
  if (v207)
    v94 = v208;
  else
    v94 = 0;
  if (v207)
    v95 = v209;
  else
    v95 = 0;
  LOBYTE(v204[0]) = 16;
  v131 = v92;
  v132 = v91;
  v129 = v94;
  v130 = v93;
  v128 = v95;
  sub_1ABE84D28(v91, v92, v93);
  sub_1ABF320C8();
  if (v207)
    v96 = v205;
  else
    v96 = 0;
  if (v207)
    v97 = v206;
  else
    v97 = 0;
  if (v207)
    v98 = v207;
  else
    v98 = 0;
  if (v207)
    v99 = v208;
  else
    v99 = 0;
  if (v207)
    v100 = v209;
  else
    v100 = 0;
  LOBYTE(v205) = 22;
  v193 = v96;
  v192 = v97;
  v126 = v99;
  v127 = v98;
  v125 = v100;
  sub_1ABE84D28(v96, v97, v98);
  v101 = sub_1ABF3208C();
  v149 = v73;
  v103 = v151;
  if (v102)
    v104 = v101;
  else
    v104 = 0;
  v116 = v104;
  LOBYTE(v205) = 23;
  v117 = v102;
  sub_1ABF2FF5C();
  v105 = v195;
  v106 = sub_1ABF3208C();
  v108 = v107;
  (*(void (**)(char *, uint64_t))(v115 + 8))(v8, v105);
  if (v108)
    v109 = v106;
  else
    v109 = 0;
  v115 = v109;
  v195 = v108;
  v204[0] = v202;
  v204[1] = v13;
  v204[2] = v201;
  v204[3] = v16;
  v204[4] = v199;
  v204[5] = v124;
  v204[6] = v118;
  v204[7] = v121;
  v204[8] = v103;
  v204[9] = v120;
  v204[10] = v119;
  v204[11] = v187;
  v204[12] = v186;
  v204[13] = v185;
  v204[14] = v184;
  v204[15] = v183;
  v204[16] = v182;
  v204[17] = v181;
  v204[18] = v180;
  v204[19] = v179;
  v204[20] = v178;
  v204[21] = v177;
  v204[22] = v176;
  v204[23] = v175;
  v204[24] = v174;
  v204[25] = v173;
  v204[26] = v172;
  v204[27] = v171;
  v204[28] = v170;
  v204[29] = v169;
  v204[30] = v168;
  v204[31] = v167;
  v204[32] = v166;
  v204[33] = v165;
  v204[34] = v164;
  v204[35] = v163;
  v204[36] = v162;
  v204[37] = v161;
  v204[38] = v160;
  v204[39] = v159;
  v204[40] = v158;
  v204[41] = v157;
  v204[42] = v156;
  v204[43] = v155;
  v204[44] = v154;
  v204[45] = v153;
  v204[46] = v152;
  v204[47] = v150;
  v204[48] = v189;
  v204[49] = v149;
  v204[50] = v148;
  v204[51] = v147;
  v204[52] = v146;
  v204[53] = v145;
  v204[54] = v144;
  v204[55] = v143;
  v204[56] = v142;
  v204[57] = v141;
  v204[58] = v140;
  v204[59] = v139;
  v204[60] = v138;
  v204[61] = v137;
  v204[62] = v136;
  v204[63] = v135;
  v204[64] = v134;
  v204[65] = v133;
  v204[66] = v132;
  v204[67] = v131;
  v204[68] = v130;
  v204[69] = v129;
  v204[70] = v128;
  v204[71] = v193;
  v204[72] = v192;
  v204[73] = v127;
  v204[74] = v126;
  v204[75] = v125;
  v204[76] = v197;
  v204[77] = v200;
  v204[78] = v194;
  v204[79] = v198;
  v204[80] = v191;
  v204[81] = v196;
  v204[82] = v188;
  v204[83] = v190;
  v204[84] = v123;
  v204[85] = v122;
  v204[86] = v116;
  v204[87] = v117;
  v204[88] = v109;
  v204[89] = v108;
  sub_1ABE84D58(v204);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABE850AC(v193, v192, v127);
  sub_1ABE850AC(v132, v131, v130);
  sub_1ABE850AC(v137, v136, v135);
  sub_1ABE850AC(v142, v141, v140);
  sub_1ABE850AC((uint64_t)v147, v146, v145);
  sub_1ABE850AC(v152, v150, v189);
  sub_1ABE850AC(v157, v156, v155);
  sub_1ABE850AC(v162, v161, v160);
  sub_1ABE850AC(v167, v166, v165);
  sub_1ABE850AC(v172, v171, v170);
  sub_1ABE850AC(v177, v176, v175);
  sub_1ABE850AC(v182, v181, v180);
  sub_1ABE850AC(v187, v186, v185);
  v110 = v118;
  v111 = v119;
  v113 = v120;
  v112 = v121;
  sub_1ABE850AC(v118, v121, v151);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v114 = v124;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v295);
  v205 = v202;
  v206 = v13;
  v207 = v201;
  v208 = v16;
  v209 = v199;
  v210 = v114;
  v211 = v110;
  v212 = v112;
  v213 = v151;
  v214 = v113;
  v215 = v111;
  v216 = v187;
  v217 = v186;
  v218 = v185;
  v219 = v184;
  v220 = v183;
  v221 = v182;
  v222 = v181;
  v223 = v180;
  v224 = v179;
  v225 = v178;
  v226 = v177;
  v227 = v176;
  v228 = v175;
  v229 = v174;
  v230 = v173;
  v231 = v172;
  v232 = v171;
  v233 = v170;
  v234 = v169;
  v235 = v168;
  v236 = v167;
  v237 = v166;
  v238 = v165;
  v239 = v164;
  v240 = v163;
  v241 = v162;
  v242 = v161;
  v243 = v160;
  v244 = v159;
  v245 = v158;
  v246 = v157;
  v247 = v156;
  v248 = v155;
  v249 = v154;
  v250 = v153;
  v251 = v152;
  v252 = v150;
  v253 = v189;
  v254 = v149;
  v255 = v148;
  v256 = (uint64_t)v147;
  v257 = v146;
  v258 = v145;
  v259 = v144;
  v260 = v143;
  v261 = v142;
  v262 = v141;
  v263 = v140;
  v264 = v139;
  v265 = v138;
  v266 = v137;
  v267 = v136;
  v268 = v135;
  v269 = v134;
  v270 = v133;
  v271 = v132;
  v272 = v131;
  v273 = v130;
  v274 = v129;
  v275 = v128;
  v276 = v193;
  v277 = v192;
  v278 = v127;
  v279 = v126;
  v280 = v125;
  v281 = v197;
  v282 = v200;
  v283 = v194;
  v284 = v198;
  v285 = v191;
  v286 = v196;
  v287 = v188;
  v288 = v190;
  v289 = v123;
  v290 = v122;
  v291 = v116;
  v292 = v117;
  v293 = v115;
  v294 = v195;
  sub_1ABE850DC(&v205);
  return memcpy(v203, v204, 0x2D0uLL);
}

uint64_t sub_1ABE81ADC()
{
  return 3;
}

_QWORD *sub_1ABE81AE4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1ED351258, (void (*)(void))sub_1ABE82244);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE82244();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE82288();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

_QWORD *sub_1ABE81C2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1ED351280, (void (*)(void))sub_1ABE82504);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE82504();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE82548();
    sub_1ABF320C8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1ABE81D74(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1ABDE97D0(0, &qword_1ED3512A8, (void (*)(void))sub_1ABE82684);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ABE82684();
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE8277C(0, &qword_1ED3512B8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    sub_1ABE826C8();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8 = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

_QWORD *sub_1ABE81F78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1ED351230, (void (*)(void))sub_1ABE820C0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE820C0();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABE82104();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABE820C0()
{
  unint64_t result;

  result = qword_1ED351238;
  if (!qword_1ED351238)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47908, &type metadata for YahooQuoteDetailResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351238);
  }
  return result;
}

unint64_t sub_1ABE82104()
{
  unint64_t result;

  result = qword_1ED351240;
  if (!qword_1ED351240)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF478E0, &type metadata for YahooQuoteDetailResponse.Finance);
    atomic_store(result, (unint64_t *)&qword_1ED351240);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.CodingKeys()
{
  return &type metadata for YahooQuoteDetailResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Finance()
{
  return &type metadata for YahooQuoteDetailResponse.Finance;
}

unint64_t sub_1ABE82170()
{
  unint64_t result;

  result = qword_1EEC444C8;
  if (!qword_1EEC444C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF478B8, &type metadata for YahooQuoteDetailResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC444C8);
  }
  return result;
}

unint64_t sub_1ABE821B8()
{
  unint64_t result;

  result = qword_1ED351248;
  if (!qword_1ED351248)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47828, &type metadata for YahooQuoteDetailResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351248);
  }
  return result;
}

unint64_t sub_1ABE82200()
{
  unint64_t result;

  result = qword_1ED351250;
  if (!qword_1ED351250)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47850, &type metadata for YahooQuoteDetailResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351250);
  }
  return result;
}

unint64_t sub_1ABE82244()
{
  unint64_t result;

  result = qword_1ED351260;
  if (!qword_1ED351260)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47A80, &type metadata for YahooQuoteDetailResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351260);
  }
  return result;
}

unint64_t sub_1ABE82288()
{
  unint64_t result;

  result = qword_1ED351268;
  if (!qword_1ED351268)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47A58, &type metadata for YahooQuoteDetailResponse.QuoteService);
    atomic_store(result, (unint64_t *)&qword_1ED351268);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Finance.CodingKeys()
{
  return &type metadata for YahooQuoteDetailResponse.Finance.CodingKeys;
}

_QWORD *initializeBufferWithCopyOfBuffer for YahooQuoteDetailResponse.QuoteService(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for YahooQuoteDetailResponse.QuoteService(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for YahooQuoteDetailResponse.QuoteService(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10StocksCore24YahooQuoteDetailResponseV12QuoteServiceVwet_0(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s10StocksCore24YahooQuoteDetailResponseV12QuoteServiceVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.QuoteService()
{
  return &type metadata for YahooQuoteDetailResponse.QuoteService;
}

unint64_t sub_1ABE82430()
{
  unint64_t result;

  result = qword_1EEC444D0;
  if (!qword_1EEC444D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47A30, &type metadata for YahooQuoteDetailResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC444D0);
  }
  return result;
}

unint64_t sub_1ABE82478()
{
  unint64_t result;

  result = qword_1ED351270;
  if (!qword_1ED351270)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47968, &type metadata for YahooQuoteDetailResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351270);
  }
  return result;
}

unint64_t sub_1ABE824C0()
{
  unint64_t result;

  result = qword_1ED351278;
  if (!qword_1ED351278)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47990, &type metadata for YahooQuoteDetailResponse.Finance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351278);
  }
  return result;
}

unint64_t sub_1ABE82504()
{
  unint64_t result;

  result = qword_1ED351288;
  if (!qword_1ED351288)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47BB8, &type metadata for YahooQuoteDetailResponse.QuoteService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351288);
  }
  return result;
}

unint64_t sub_1ABE82548()
{
  unint64_t result;

  result = qword_1ED351290;
  if (!qword_1ED351290)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47B90, &type metadata for YahooQuoteDetailResponse.Quotes);
    atomic_store(result, (unint64_t *)&qword_1ED351290);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.QuoteService.CodingKeys()
{
  return &type metadata for YahooQuoteDetailResponse.QuoteService.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Quotes()
{
  return &type metadata for YahooQuoteDetailResponse.Quotes;
}

unint64_t sub_1ABE825B0()
{
  unint64_t result;

  result = qword_1EEC444D8;
  if (!qword_1EEC444D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47B68, &type metadata for YahooQuoteDetailResponse.QuoteService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC444D8);
  }
  return result;
}

unint64_t sub_1ABE825F8()
{
  unint64_t result;

  result = qword_1ED351298;
  if (!qword_1ED351298)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47AD8, &type metadata for YahooQuoteDetailResponse.QuoteService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351298);
  }
  return result;
}

unint64_t sub_1ABE82640()
{
  unint64_t result;

  result = qword_1ED3512A0;
  if (!qword_1ED3512A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47B00, &type metadata for YahooQuoteDetailResponse.QuoteService.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3512A0);
  }
  return result;
}

unint64_t sub_1ABE82684()
{
  unint64_t result;

  result = qword_1ED3512B0;
  if (!qword_1ED3512B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47D80, &type metadata for YahooQuoteDetailResponse.Quotes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3512B0);
  }
  return result;
}

unint64_t sub_1ABE826C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3512C0;
  if (!qword_1ED3512C0)
  {
    sub_1ABE8277C(255, &qword_1ED3512B8, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE82738();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3512C0);
  }
  return result;
}

unint64_t sub_1ABE82738()
{
  unint64_t result;

  result = qword_1ED3512C8;
  if (!qword_1ED3512C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47D58, &type metadata for YahooQuoteDetailResponse.Quote);
    atomic_store(result, (unint64_t *)&qword_1ED3512C8);
  }
  return result;
}

void sub_1ABE8277C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for YahooQuoteDetailResponse.Quote);
    if (!v5)
      atomic_store(v4, a2);
  }
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Quotes.CodingKeys()
{
  return &type metadata for YahooQuoteDetailResponse.Quotes.CodingKeys;
}

uint64_t destroy for YahooQuoteDetailResponse.Quote(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[8])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[13])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[18])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[23])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[28])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[33])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[38])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[43])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[48])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[53])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[58])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[63])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[68])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[73])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YahooQuoteDetailResponse.Quote(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v7)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    v8 = *(_QWORD *)(a2 + 72);
    v9 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v8;
    *(_QWORD *)(a1 + 80) = v9;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v10 = *(_QWORD *)(a2 + 104);
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v47 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v47;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v10 = *(_QWORD *)(a2 + 104);
    if (v10)
    {
LABEL_3:
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      v11 = *(_QWORD *)(a2 + 112);
      v12 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 104) = v10;
      *(_QWORD *)(a1 + 112) = v11;
      *(_QWORD *)(a1 + 120) = v12;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v13 = *(_QWORD *)(a2 + 144);
      if (v13)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  v48 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v48;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v13 = *(_QWORD *)(a2 + 144);
  if (v13)
  {
LABEL_4:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    v14 = *(_QWORD *)(a2 + 152);
    v15 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 144) = v13;
    *(_QWORD *)(a1 + 152) = v14;
    *(_QWORD *)(a1 + 160) = v15;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v16 = *(_QWORD *)(a2 + 184);
    if (v16)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  v49 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v49;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v16 = *(_QWORD *)(a2 + 184);
  if (v16)
  {
LABEL_5:
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    v17 = *(_QWORD *)(a2 + 192);
    v18 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 184) = v16;
    *(_QWORD *)(a1 + 192) = v17;
    *(_QWORD *)(a1 + 200) = v18;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v19 = *(_QWORD *)(a2 + 224);
    if (v19)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  v50 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v50;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v19 = *(_QWORD *)(a2 + 224);
  if (v19)
  {
LABEL_6:
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    v20 = *(_QWORD *)(a2 + 232);
    v21 = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 224) = v19;
    *(_QWORD *)(a1 + 232) = v20;
    *(_QWORD *)(a1 + 240) = v21;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v22 = *(_QWORD *)(a2 + 264);
    if (v22)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  v51 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v51;
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v22 = *(_QWORD *)(a2 + 264);
  if (v22)
  {
LABEL_7:
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    v23 = *(_QWORD *)(a2 + 272);
    v24 = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 264) = v22;
    *(_QWORD *)(a1 + 272) = v23;
    *(_QWORD *)(a1 + 280) = v24;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v25 = *(_QWORD *)(a2 + 304);
    if (v25)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  v52 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v52;
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v25 = *(_QWORD *)(a2 + 304);
  if (v25)
  {
LABEL_8:
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    v26 = *(_QWORD *)(a2 + 312);
    v27 = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 304) = v25;
    *(_QWORD *)(a1 + 312) = v26;
    *(_QWORD *)(a1 + 320) = v27;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v28 = *(_QWORD *)(a2 + 344);
    if (v28)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  v53 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v53;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  v28 = *(_QWORD *)(a2 + 344);
  if (v28)
  {
LABEL_9:
    v29 = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = v29;
    v30 = *(_QWORD *)(a2 + 352);
    v31 = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 344) = v28;
    *(_QWORD *)(a1 + 352) = v30;
    *(_QWORD *)(a1 + 360) = v31;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v32 = *(_QWORD *)(a2 + 384);
    if (v32)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  v54 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v54;
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v32 = *(_QWORD *)(a2 + 384);
  if (v32)
  {
LABEL_10:
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    v33 = *(_QWORD *)(a2 + 392);
    v34 = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 384) = v32;
    *(_QWORD *)(a1 + 392) = v33;
    *(_QWORD *)(a1 + 400) = v34;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v35 = *(_QWORD *)(a2 + 424);
    if (v35)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  v55 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v55;
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  v35 = *(_QWORD *)(a2 + 424);
  if (v35)
  {
LABEL_11:
    v36 = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 416) = v36;
    v37 = *(_QWORD *)(a2 + 432);
    v38 = *(_QWORD *)(a2 + 440);
    *(_QWORD *)(a1 + 424) = v35;
    *(_QWORD *)(a1 + 432) = v37;
    *(_QWORD *)(a1 + 440) = v38;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v39 = *(_QWORD *)(a2 + 464);
    if (v39)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  v56 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v56;
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  v39 = *(_QWORD *)(a2 + 464);
  if (v39)
  {
LABEL_12:
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    v40 = *(_QWORD *)(a2 + 472);
    v41 = *(_QWORD *)(a2 + 480);
    *(_QWORD *)(a1 + 464) = v39;
    *(_QWORD *)(a1 + 472) = v40;
    *(_QWORD *)(a1 + 480) = v41;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v42 = *(_QWORD *)(a2 + 504);
    if (v42)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  v57 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v57;
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  v42 = *(_QWORD *)(a2 + 504);
  if (v42)
  {
LABEL_13:
    v43 = *(_QWORD *)(a2 + 496);
    *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
    *(_QWORD *)(a1 + 496) = v43;
    v44 = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 504) = v42;
    *(_QWORD *)(a1 + 512) = v44;
    *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v45 = *(_QWORD *)(a2 + 544);
    if (v45)
      goto LABEL_14;
LABEL_28:
    v59 = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 544) = v59;
    *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
    v46 = *(_QWORD *)(a2 + 584);
    if (v46)
      goto LABEL_15;
LABEL_29:
    v60 = *(_OWORD *)(a2 + 584);
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(_OWORD *)(a1 + 584) = v60;
    *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
    goto LABEL_30;
  }
LABEL_27:
  v58 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 504) = v58;
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  v45 = *(_QWORD *)(a2 + 544);
  if (!v45)
    goto LABEL_28;
LABEL_14:
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 544) = v45;
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v46 = *(_QWORD *)(a2 + 584);
  if (!v46)
    goto LABEL_29;
LABEL_15:
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = v46;
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
LABEL_30:
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for YahooQuoteDetailResponse.Quote(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD *v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD *v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _OWORD *v67;
  _OWORD *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _OWORD *v74;
  _OWORD *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _OWORD *v81;
  _OWORD *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  _OWORD *v88;
  _OWORD *v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _OWORD *v95;
  _OWORD *v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v4 = a1 + 6;
  v5 = a2 + 6;
  v6 = a2[8];
  if (a1[8])
  {
    if (v6)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[9] = a2[9];
      a1[10] = a2[10];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 6), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v7 = a2[10];
      v8 = *((_OWORD *)a2 + 4);
      *v4 = *v5;
      *((_OWORD *)a1 + 4) = v8;
      a1[10] = v7;
    }
  }
  else if (v6)
  {
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v9 = *v5;
    v10 = *((_OWORD *)a2 + 4);
    a1[10] = a2[10];
    *v4 = v9;
    *((_OWORD *)a1 + 4) = v10;
  }
  v11 = a1 + 11;
  v12 = a2 + 11;
  v13 = a2[13];
  if (a1[13])
  {
    if (v13)
    {
      a1[11] = a2[11];
      a1[12] = a2[12];
      a1[13] = a2[13];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[14] = a2[14];
      a1[15] = a2[15];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 11), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v14 = a2[15];
      v15 = *(_OWORD *)(a2 + 13);
      *v11 = *v12;
      *(_OWORD *)(a1 + 13) = v15;
      a1[15] = v14;
    }
  }
  else if (v13)
  {
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    a1[15] = a2[15];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v16 = *v12;
    v17 = *(_OWORD *)(a2 + 13);
    a1[15] = a2[15];
    *v11 = v16;
    *(_OWORD *)(a1 + 13) = v17;
  }
  v18 = a1 + 16;
  v19 = a2 + 16;
  v20 = a2[18];
  if (a1[18])
  {
    if (v20)
    {
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[19] = a2[19];
      a1[20] = a2[20];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 16), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v21 = a2[20];
      v22 = *((_OWORD *)a2 + 9);
      *v18 = *v19;
      *((_OWORD *)a1 + 9) = v22;
      a1[20] = v21;
    }
  }
  else if (v20)
  {
    a1[16] = a2[16];
    a1[17] = a2[17];
    a1[18] = a2[18];
    a1[19] = a2[19];
    a1[20] = a2[20];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v23 = *v19;
    v24 = *((_OWORD *)a2 + 9);
    a1[20] = a2[20];
    *v18 = v23;
    *((_OWORD *)a1 + 9) = v24;
  }
  v25 = a1 + 21;
  v26 = a2 + 21;
  v27 = a2[23];
  if (a1[23])
  {
    if (v27)
    {
      a1[21] = a2[21];
      a1[22] = a2[22];
      a1[23] = a2[23];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[24] = a2[24];
      a1[25] = a2[25];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 21), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v28 = a2[25];
      v29 = *(_OWORD *)(a2 + 23);
      *v25 = *v26;
      *(_OWORD *)(a1 + 23) = v29;
      a1[25] = v28;
    }
  }
  else if (v27)
  {
    a1[21] = a2[21];
    a1[22] = a2[22];
    a1[23] = a2[23];
    a1[24] = a2[24];
    a1[25] = a2[25];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v30 = *v26;
    v31 = *(_OWORD *)(a2 + 23);
    a1[25] = a2[25];
    *v25 = v30;
    *(_OWORD *)(a1 + 23) = v31;
  }
  v32 = a1 + 26;
  v33 = a2 + 26;
  v34 = a2[28];
  if (a1[28])
  {
    if (v34)
    {
      a1[26] = a2[26];
      a1[27] = a2[27];
      a1[28] = a2[28];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[29] = a2[29];
      a1[30] = a2[30];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 26), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v35 = a2[30];
      v36 = *((_OWORD *)a2 + 14);
      *v32 = *v33;
      *((_OWORD *)a1 + 14) = v36;
      a1[30] = v35;
    }
  }
  else if (v34)
  {
    a1[26] = a2[26];
    a1[27] = a2[27];
    a1[28] = a2[28];
    a1[29] = a2[29];
    a1[30] = a2[30];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v37 = *v33;
    v38 = *((_OWORD *)a2 + 14);
    a1[30] = a2[30];
    *v32 = v37;
    *((_OWORD *)a1 + 14) = v38;
  }
  v39 = a1 + 31;
  v40 = a2 + 31;
  v41 = a2[33];
  if (a1[33])
  {
    if (v41)
    {
      a1[31] = a2[31];
      a1[32] = a2[32];
      a1[33] = a2[33];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[34] = a2[34];
      a1[35] = a2[35];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 31), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v42 = a2[35];
      v43 = *(_OWORD *)(a2 + 33);
      *v39 = *v40;
      *(_OWORD *)(a1 + 33) = v43;
      a1[35] = v42;
    }
  }
  else if (v41)
  {
    a1[31] = a2[31];
    a1[32] = a2[32];
    a1[33] = a2[33];
    a1[34] = a2[34];
    a1[35] = a2[35];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v44 = *v40;
    v45 = *(_OWORD *)(a2 + 33);
    a1[35] = a2[35];
    *v39 = v44;
    *(_OWORD *)(a1 + 33) = v45;
  }
  v46 = a1 + 36;
  v47 = a2 + 36;
  v48 = a2[38];
  if (a1[38])
  {
    if (v48)
    {
      a1[36] = a2[36];
      a1[37] = a2[37];
      a1[38] = a2[38];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[39] = a2[39];
      a1[40] = a2[40];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 36), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v49 = a2[40];
      v50 = *((_OWORD *)a2 + 19);
      *v46 = *v47;
      *((_OWORD *)a1 + 19) = v50;
      a1[40] = v49;
    }
  }
  else if (v48)
  {
    a1[36] = a2[36];
    a1[37] = a2[37];
    a1[38] = a2[38];
    a1[39] = a2[39];
    a1[40] = a2[40];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v51 = *v47;
    v52 = *((_OWORD *)a2 + 19);
    a1[40] = a2[40];
    *v46 = v51;
    *((_OWORD *)a1 + 19) = v52;
  }
  v53 = a1 + 41;
  v54 = a2 + 41;
  v55 = a2[43];
  if (a1[43])
  {
    if (v55)
    {
      a1[41] = a2[41];
      a1[42] = a2[42];
      a1[43] = a2[43];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[44] = a2[44];
      a1[45] = a2[45];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 41), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v56 = a2[45];
      v57 = *(_OWORD *)(a2 + 43);
      *v53 = *v54;
      *(_OWORD *)(a1 + 43) = v57;
      a1[45] = v56;
    }
  }
  else if (v55)
  {
    a1[41] = a2[41];
    a1[42] = a2[42];
    a1[43] = a2[43];
    a1[44] = a2[44];
    a1[45] = a2[45];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v58 = *v54;
    v59 = *(_OWORD *)(a2 + 43);
    a1[45] = a2[45];
    *v53 = v58;
    *(_OWORD *)(a1 + 43) = v59;
  }
  v60 = a1 + 46;
  v61 = a2 + 46;
  v62 = a2[48];
  if (a1[48])
  {
    if (v62)
    {
      a1[46] = a2[46];
      a1[47] = a2[47];
      a1[48] = a2[48];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[49] = a2[49];
      a1[50] = a2[50];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 46), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v63 = a2[50];
      v64 = *((_OWORD *)a2 + 24);
      *v60 = *v61;
      *((_OWORD *)a1 + 24) = v64;
      a1[50] = v63;
    }
  }
  else if (v62)
  {
    a1[46] = a2[46];
    a1[47] = a2[47];
    a1[48] = a2[48];
    a1[49] = a2[49];
    a1[50] = a2[50];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v65 = *v61;
    v66 = *((_OWORD *)a2 + 24);
    a1[50] = a2[50];
    *v60 = v65;
    *((_OWORD *)a1 + 24) = v66;
  }
  v67 = a1 + 51;
  v68 = a2 + 51;
  v69 = a2[53];
  if (a1[53])
  {
    if (v69)
    {
      a1[51] = a2[51];
      a1[52] = a2[52];
      a1[53] = a2[53];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[54] = a2[54];
      a1[55] = a2[55];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 51), qword_1ED3512E0, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBF0]);
      v70 = a2[55];
      v71 = *(_OWORD *)(a2 + 53);
      *v67 = *v68;
      *(_OWORD *)(a1 + 53) = v71;
      a1[55] = v70;
    }
  }
  else if (v69)
  {
    a1[51] = a2[51];
    a1[52] = a2[52];
    a1[53] = a2[53];
    a1[54] = a2[54];
    a1[55] = a2[55];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v72 = *v68;
    v73 = *(_OWORD *)(a2 + 53);
    a1[55] = a2[55];
    *v67 = v72;
    *(_OWORD *)(a1 + 53) = v73;
  }
  v74 = a1 + 56;
  v75 = a2 + 56;
  v76 = a2[58];
  if (a1[58])
  {
    if (v76)
    {
      a1[56] = a2[56];
      a1[57] = a2[57];
      a1[58] = a2[58];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[59] = a2[59];
      a1[60] = a2[60];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 56), qword_1ED3512E0, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBF0]);
      v77 = a2[60];
      v78 = *((_OWORD *)a2 + 29);
      *v74 = *v75;
      *((_OWORD *)a1 + 29) = v78;
      a1[60] = v77;
    }
  }
  else if (v76)
  {
    a1[56] = a2[56];
    a1[57] = a2[57];
    a1[58] = a2[58];
    a1[59] = a2[59];
    a1[60] = a2[60];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v79 = *v75;
    v80 = *((_OWORD *)a2 + 29);
    a1[60] = a2[60];
    *v74 = v79;
    *((_OWORD *)a1 + 29) = v80;
  }
  v81 = a1 + 61;
  v82 = a2 + 61;
  v83 = a2[63];
  if (a1[63])
  {
    if (v83)
    {
      a1[61] = a2[61];
      a1[62] = a2[62];
      a1[63] = a2[63];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[64] = a2[64];
      a1[65] = a2[65];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 61), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v84 = a2[65];
      v85 = *(_OWORD *)(a2 + 63);
      *v81 = *v82;
      *(_OWORD *)(a1 + 63) = v85;
      a1[65] = v84;
    }
  }
  else if (v83)
  {
    a1[61] = a2[61];
    a1[62] = a2[62];
    a1[63] = a2[63];
    a1[64] = a2[64];
    a1[65] = a2[65];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v86 = *v82;
    v87 = *(_OWORD *)(a2 + 63);
    a1[65] = a2[65];
    *v81 = v86;
    *(_OWORD *)(a1 + 63) = v87;
  }
  v88 = a1 + 66;
  v89 = a2 + 66;
  v90 = a2[68];
  if (a1[68])
  {
    if (v90)
    {
      a1[66] = a2[66];
      a1[67] = a2[67];
      a1[68] = a2[68];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[69] = a2[69];
      a1[70] = a2[70];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 66), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v91 = a2[70];
      v92 = *((_OWORD *)a2 + 34);
      *v88 = *v89;
      *((_OWORD *)a1 + 34) = v92;
      a1[70] = v91;
    }
  }
  else if (v90)
  {
    a1[66] = a2[66];
    a1[67] = a2[67];
    a1[68] = a2[68];
    a1[69] = a2[69];
    a1[70] = a2[70];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v93 = *v89;
    v94 = *((_OWORD *)a2 + 34);
    a1[70] = a2[70];
    *v88 = v93;
    *((_OWORD *)a1 + 34) = v94;
  }
  v95 = a1 + 71;
  v96 = a2 + 71;
  v97 = a2[73];
  if (a1[73])
  {
    if (v97)
    {
      a1[71] = a2[71];
      a1[72] = a2[72];
      a1[73] = a2[73];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[74] = a2[74];
      a1[75] = a2[75];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE83C2C((uint64_t)(a1 + 71), &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
      v98 = a2[75];
      v99 = *(_OWORD *)(a2 + 73);
      *v95 = *v96;
      *(_OWORD *)(a1 + 73) = v99;
      a1[75] = v98;
    }
  }
  else if (v97)
  {
    a1[71] = a2[71];
    a1[72] = a2[72];
    a1[73] = a2[73];
    a1[74] = a2[74];
    a1[75] = a2[75];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v100 = *v96;
    v101 = *(_OWORD *)(a2 + 73);
    a1[75] = a2[75];
    *v95 = v100;
    *(_OWORD *)(a1 + 73) = v101;
  }
  a1[76] = a2[76];
  a1[77] = a2[77];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[78] = a2[78];
  a1[79] = a2[79];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[80] = a2[80];
  a1[81] = a2[81];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[82] = a2[82];
  a1[83] = a2[83];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[84] = a2[84];
  a1[85] = a2[85];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[86] = a2[86];
  a1[87] = a2[87];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[88] = a2[88];
  a1[89] = a2[89];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for YahooQuoteDetailResponse.Value(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooQuoteDetailResponse.Value);
}

uint64_t sub_1ABE83C2C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  sub_1ABE83C68(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1ABE83C68(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = type metadata accessor for YahooQuoteDetailResponse.Value(0, a3, a4, a4);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void *__swift_memcpy720_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x2D0uLL);
}

uint64_t assignWithTake for YahooQuoteDetailResponse.Quote(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64))
  {
    v7 = *(_QWORD *)(a2 + 64);
    if (v7)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1ABE83C2C(a1 + 48, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
LABEL_6:
  if (*(_QWORD *)(a1 + 104))
  {
    v10 = *(_QWORD *)(a2 + 104);
    if (v10)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1ABE83C2C(a1 + 88, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v12 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v12;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
LABEL_11:
  if (*(_QWORD *)(a1 + 144))
  {
    v13 = *(_QWORD *)(a2 + 144);
    if (v13)
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v13;
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1ABE83C2C(a1 + 128, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
LABEL_16:
  if (*(_QWORD *)(a1 + 184))
  {
    v16 = *(_QWORD *)(a2 + 184);
    if (v16)
    {
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1ABE83C2C(a1 + 168, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v18 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v18;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
LABEL_21:
  if (*(_QWORD *)(a1 + 224))
  {
    v19 = *(_QWORD *)(a2 + 224);
    if (v19)
    {
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = v19;
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1ABE83C2C(a1 + 208, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v21 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v21;
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
LABEL_26:
  if (*(_QWORD *)(a1 + 264))
  {
    v22 = *(_QWORD *)(a2 + 264);
    if (v22)
    {
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = v22;
      swift_bridgeObjectRelease();
      v23 = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = v23;
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_1ABE83C2C(a1 + 248, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v24 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v24;
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
LABEL_31:
  if (*(_QWORD *)(a1 + 304))
  {
    v25 = *(_QWORD *)(a2 + 304);
    if (v25)
    {
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 304) = v25;
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      *(_QWORD *)(a1 + 320) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_1ABE83C2C(a1 + 288, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v27 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v27;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
LABEL_36:
  if (*(_QWORD *)(a1 + 344))
  {
    v28 = *(_QWORD *)(a2 + 344);
    if (v28)
    {
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = v28;
      swift_bridgeObjectRelease();
      v29 = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = v29;
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    sub_1ABE83C2C(a1 + 328, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v30 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v30;
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
LABEL_41:
  if (*(_QWORD *)(a1 + 384))
  {
    v31 = *(_QWORD *)(a2 + 384);
    if (v31)
    {
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = v31;
      swift_bridgeObjectRelease();
      v32 = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_1ABE83C2C(a1 + 368, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v33 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v33;
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
LABEL_46:
  if (*(_QWORD *)(a1 + 424))
  {
    v34 = *(_QWORD *)(a2 + 424);
    if (v34)
    {
      v35 = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = v35;
      *(_QWORD *)(a1 + 424) = v34;
      swift_bridgeObjectRelease();
      v36 = *(_QWORD *)(a2 + 440);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = v36;
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    sub_1ABE83C2C(a1 + 408, qword_1ED3512E0, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBF0]);
  }
  v37 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v37;
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
LABEL_51:
  if (*(_QWORD *)(a1 + 464))
  {
    v38 = *(_QWORD *)(a2 + 464);
    if (v38)
    {
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      *(_QWORD *)(a1 + 464) = v38;
      swift_bridgeObjectRelease();
      v39 = *(_QWORD *)(a2 + 480);
      *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
      *(_QWORD *)(a1 + 480) = v39;
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
    sub_1ABE83C2C(a1 + 448, qword_1ED3512E0, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBF0]);
  }
  v40 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v40;
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
LABEL_56:
  if (*(_QWORD *)(a1 + 504))
  {
    v41 = *(_QWORD *)(a2 + 504);
    if (v41)
    {
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
      *(_QWORD *)(a1 + 504) = v41;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
      *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
    sub_1ABE83C2C(a1 + 488, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v42 = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  *(_OWORD *)(a1 + 504) = v42;
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
LABEL_61:
  if (*(_QWORD *)(a1 + 544))
  {
    v43 = *(_QWORD *)(a2 + 544);
    if (v43)
    {
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      *(_QWORD *)(a1 + 544) = v43;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
      *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
      swift_bridgeObjectRelease();
      goto LABEL_66;
    }
    sub_1ABE83C2C(a1 + 528, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
  }
  v44 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v44;
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
LABEL_66:
  if (!*(_QWORD *)(a1 + 584))
  {
LABEL_70:
    v46 = *(_OWORD *)(a2 + 584);
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(_OWORD *)(a1 + 584) = v46;
    *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
    goto LABEL_71;
  }
  v45 = *(_QWORD *)(a2 + 584);
  if (!v45)
  {
    sub_1ABE83C2C(a1 + 568, &qword_1ED3512D8, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0E8]);
    goto LABEL_70;
  }
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = v45;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRelease();
LABEL_71:
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for YahooQuoteDetailResponse.Quote(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 720))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooQuoteDetailResponse.Quote(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 712) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 720) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 720) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Quote()
{
  return &type metadata for YahooQuoteDetailResponse.Quote;
}

uint64_t sub_1ABE84548()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1ABE84550()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1ABE845C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    sub_1ABF2FF68();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  return v4;
}

uint64_t sub_1ABE846B4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE84704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABE84794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABE84838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1ABE848A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABE84938(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1ABE849BC + 4 * byte_1ABF47798[v10]))();
  }
}

void sub_1ABE84A40(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1ABE84B3C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1ABE84BB4);
}

void sub_1ABE84B44(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1ABE84B4CLL);
  JUMPOUT(0x1ABE84BB4);
}

void sub_1ABE84B90()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1ABE84BB4);
}

void sub_1ABE84B98()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1ABE84BB4);
}

uint64_t sub_1ABE84BA0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1ABE84BACLL);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1ABE84BB4);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

unint64_t sub_1ABE84BD0()
{
  unint64_t result;

  result = qword_1EEC444E0[0];
  if (!qword_1EEC444E0[0])
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47D30, &type metadata for YahooQuoteDetailResponse.Quotes.CodingKeys);
    atomic_store(result, qword_1EEC444E0);
  }
  return result;
}

unint64_t sub_1ABE84C18()
{
  unint64_t result;

  result = qword_1ED351368;
  if (!qword_1ED351368)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47C68, &type metadata for YahooQuoteDetailResponse.Quotes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351368);
  }
  return result;
}

unint64_t sub_1ABE84C60()
{
  unint64_t result;

  result = qword_1ED351370;
  if (!qword_1ED351370)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47C90, &type metadata for YahooQuoteDetailResponse.Quotes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351370);
  }
  return result;
}

unint64_t sub_1ABE84CA4()
{
  unint64_t result;

  result = qword_1ED351380;
  if (!qword_1ED351380)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF480D8, &type metadata for YahooQuoteDetailResponse.Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351380);
  }
  return result;
}

uint64_t sub_1ABE84CE8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1ABE83C68(255, a2, a3, a4);
    result = MEMORY[0x1AF438F30](&unk_1ABF47C40, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABE84D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

_QWORD *sub_1ABE84D58(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  v5 = a1[13];
  v7 = a1[12];
  v8 = a1[11];
  v10 = a1[17];
  v11 = a1[16];
  v9 = a1[18];
  v13 = a1[22];
  v14 = a1[21];
  v12 = a1[23];
  v16 = a1[27];
  v17 = a1[26];
  v15 = a1[28];
  v19 = a1[32];
  v20 = a1[31];
  v18 = a1[33];
  v22 = a1[37];
  v23 = a1[36];
  v21 = a1[38];
  v25 = a1[42];
  v26 = a1[41];
  v24 = a1[43];
  v28 = a1[47];
  v29 = a1[46];
  v27 = a1[48];
  v31 = a1[52];
  v32 = a1[51];
  v30 = a1[53];
  v34 = a1[57];
  v35 = a1[56];
  v33 = a1[58];
  v37 = a1[62];
  v38 = a1[61];
  v36 = a1[63];
  v40 = a1[67];
  v41 = a1[66];
  v39 = a1[68];
  v43 = a1[72];
  v44 = a1[71];
  v42 = a1[73];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABE84D28(v2, v3, v4);
  sub_1ABE84D28(v8, v7, v5);
  sub_1ABE84D28(v11, v10, v9);
  sub_1ABE84D28(v14, v13, v12);
  sub_1ABE84D28(v17, v16, v15);
  sub_1ABE84D28(v20, v19, v18);
  sub_1ABE84D28(v23, v22, v21);
  sub_1ABE84D28(v26, v25, v24);
  sub_1ABE84D28(v29, v28, v27);
  sub_1ABE84D28(v32, v31, v30);
  sub_1ABE84D28(v35, v34, v33);
  sub_1ABE84D28(v38, v37, v36);
  sub_1ABE84D28(v41, v40, v39);
  sub_1ABE84D28(v44, v43, v42);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABE850AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1ABE850DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  v5 = a1[13];
  v7 = a1[12];
  v8 = a1[11];
  v10 = a1[17];
  v11 = a1[16];
  v9 = a1[18];
  v13 = a1[22];
  v14 = a1[21];
  v12 = a1[23];
  v16 = a1[27];
  v17 = a1[26];
  v15 = a1[28];
  v19 = a1[32];
  v20 = a1[31];
  v18 = a1[33];
  v22 = a1[37];
  v23 = a1[36];
  v21 = a1[38];
  v25 = a1[42];
  v26 = a1[41];
  v24 = a1[43];
  v28 = a1[47];
  v29 = a1[46];
  v27 = a1[48];
  v31 = a1[52];
  v32 = a1[51];
  v30 = a1[53];
  v34 = a1[57];
  v35 = a1[56];
  v33 = a1[58];
  v37 = a1[62];
  v38 = a1[61];
  v36 = a1[63];
  v40 = a1[67];
  v41 = a1[66];
  v39 = a1[68];
  v43 = a1[72];
  v44 = a1[71];
  v42 = a1[73];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABE850AC(v2, v3, v4);
  sub_1ABE850AC(v8, v7, v5);
  sub_1ABE850AC(v11, v10, v9);
  sub_1ABE850AC(v14, v13, v12);
  sub_1ABE850AC(v17, v16, v15);
  sub_1ABE850AC(v20, v19, v18);
  sub_1ABE850AC(v23, v22, v21);
  sub_1ABE850AC(v26, v25, v24);
  sub_1ABE850AC(v29, v28, v27);
  sub_1ABE850AC(v32, v31, v30);
  sub_1ABE850AC(v35, v34, v33);
  sub_1ABE850AC(v38, v37, v36);
  sub_1ABE850AC(v41, v40, v39);
  sub_1ABE850AC(v44, v43, v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for YahooQuoteDetailResponse.Value.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooQuoteDetailResponse.Value.CodingKeys);
}

uint64_t type metadata accessor for YahooQuoteDetailResponse.Value.ValueError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooQuoteDetailResponse.Value.ValueError);
}

uint64_t _s10StocksCore24YahooQuoteDetailResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE85488 + 4 * byte_1ABF477A7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE854A8 + 4 * byte_1ABF477AC[v4]))();
}

_BYTE *sub_1ABE85488(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE854A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE854B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE854B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE854C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE854C8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1ABE854D4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABE85520 + 4 * byte_1ABF477B6[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABE85554 + 4 * byte_1ABF477B1[v4]))();
}

uint64_t sub_1ABE85554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE8555C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE85564);
  return result;
}

uint64_t sub_1ABE85570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE85578);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABE8557C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE85584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for YahooQuoteDetailResponse.Quote.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE9)
    goto LABEL_17;
  if (a2 + 23 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 23) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 23;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 23;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 23;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x18;
  v8 = v6 - 24;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for YahooQuoteDetailResponse.Quote.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_1ABE8566C + 4 * byte_1ABF477C0[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_1ABE856A0 + 4 * byte_1ABF477BB[v4]))();
}

uint64_t sub_1ABE856A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE856A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE856B0);
  return result;
}

uint64_t sub_1ABE856BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE856C4);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_1ABE856C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE856D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooQuoteDetailResponse.Quote.CodingKeys()
{
  return &type metadata for YahooQuoteDetailResponse.Quote.CodingKeys;
}

unint64_t sub_1ABE856F0()
{
  unint64_t result;

  result = qword_1EEC44568;
  if (!qword_1EEC44568)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47EC8, &type metadata for YahooQuoteDetailResponse.Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44568);
  }
  return result;
}

void sub_1ABE85734()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABE85744()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABE85754()
{
  JUMPOUT(0x1AF438F30);
}

void sub_1ABE85764()
{
  JUMPOUT(0x1AF438F30);
}

unint64_t sub_1ABE85778()
{
  unint64_t result;

  result = qword_1ED351418;
  if (!qword_1ED351418)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47E00, &type metadata for YahooQuoteDetailResponse.Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351418);
  }
  return result;
}

unint64_t sub_1ABE857C0()
{
  unint64_t result;

  result = qword_1ED351420;
  if (!qword_1ED351420)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF47E28, &type metadata for YahooQuoteDetailResponse.Quote.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED351420);
  }
  return result;
}

uint64_t sub_1ABE85814@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ABD07E04(v1 + 16, a1);
}

uint64_t sub_1ABE85830()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return v0;
}

uint64_t sub_1ABE8586C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE858B0()
{
  uint64_t v0;
  unsigned __int8 v2;

  if ((sub_1ABD19038() & 1) == 0)
    return 0;
  if ((objc_msgSend(*(id *)(v0 + 56), sel_isPrivateDataSyncingAllowed) & 1) != 0)
    return 1;
  if (qword_1ED3466A8 != -1)
    swift_once();
  sub_1ABD1951C();
  sub_1ABF30970();
  return v2;
}

uint64_t sub_1ABE85958()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[373];
  char v7;

  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1EEC40FA0 != -1)
    swift_once();
  v2 = v0[11];
  v1 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v1 + 8))(v6, v2, v1);
  sub_1ABD7DDF4((uint64_t)v6);
  if (v7)
    v3 = 0;
  else
    v3 = v6[372];
  objc_msgSend((id)objc_opt_self(), sel_enabledForCurrentLevel_, v3);
  v4 = sub_1ABF309D0();
  swift_release();
  return v4 & 1;
}

uint64_t sub_1ABE85A5C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[390];

  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1EEC40FA8 != -1)
    swift_once();
  v1 = (void *)objc_opt_self();
  v3 = v0[11];
  v2 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v6, v3, v2);
  sub_1ABD7DDF4((uint64_t)v6);
  objc_msgSend(v1, sel_enabledForCurrentLevel_, v6[381]);
  v4 = sub_1ABF309D0();
  swift_release();
  return v4 & 1;
}

uint64_t sub_1ABE85B50()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[390];

  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED346D40 != -1)
    swift_once();
  v1 = (void *)objc_opt_self();
  v3 = v0[11];
  v2 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v6, v3, v2);
  sub_1ABD7DDF4((uint64_t)v6);
  objc_msgSend(v1, sel_enabledForCurrentLevel_, v6[384]);
  v4 = sub_1ABF309D0();
  swift_release();
  return v4 & 1;
}

uint64_t sub_1ABE85C44()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[390];

  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED34DBF8 != -1)
    swift_once();
  v1 = (void *)objc_opt_self();
  v3 = v0[11];
  v2 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v6, v3, v2);
  sub_1ABD7DDF4((uint64_t)v6);
  objc_msgSend(v1, sel_enabledForCurrentLevel_, v6[379]);
  v4 = sub_1ABF309D0();
  swift_release();
  return v4 & 1;
}

uint64_t sub_1ABE85D38()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[390];

  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED346710 != -1)
    swift_once();
  v1 = (void *)objc_opt_self();
  v3 = v0[11];
  v2 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v6, v3, v2);
  sub_1ABD7DDF4((uint64_t)v6);
  objc_msgSend(v1, sel_enabledForCurrentLevel_, v6[171]);
  v4 = sub_1ABF309D0();
  swift_release();
  return v4 & 1;
}

uint64_t sub_1ABE85E2C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[390];

  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED34C708 != -1)
    swift_once();
  v1 = (void *)objc_opt_self();
  v3 = v0[11];
  v2 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v6, v3, v2);
  sub_1ABD7DDF4((uint64_t)v6);
  objc_msgSend(v1, sel_enabledForCurrentLevel_, v6[172]);
  v4 = sub_1ABF309D0();
  swift_release();
  return v4 & 1;
}

uint64_t sub_1ABE85F20()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD v6[390];

  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED346650 != -1)
    swift_once();
  v1 = (void *)objc_opt_self();
  v3 = v0[11];
  v2 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v6, v3, v2);
  sub_1ABD7DDF4((uint64_t)v6);
  objc_msgSend(v1, sel_enabledForCurrentLevel_, v6[388]);
  v4 = sub_1ABF309D0();
  swift_release();
  return v4 & 1;
}

uint64_t sub_1ABE86014()
{
  return sub_1ABE85958() & 1;
}

uint64_t sub_1ABE86038()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD v8[390];

  v1 = (_QWORD *)*v0;
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1EEC40FA8 != -1)
    swift_once();
  v2 = (void *)objc_opt_self();
  v3 = v1 + 8;
  v4 = v1[11];
  v5 = v1[12];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v8, v4, v5);
  sub_1ABD7DDF4((uint64_t)v8);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v8[381]);
  v6 = sub_1ABF309D0();
  swift_release();
  return v6 & 1;
}

uint64_t sub_1ABE8612C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD v8[390];

  v1 = (_QWORD *)*v0;
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED346D40 != -1)
    swift_once();
  v2 = (void *)objc_opt_self();
  v3 = v1 + 8;
  v4 = v1[11];
  v5 = v1[12];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v8, v4, v5);
  sub_1ABD7DDF4((uint64_t)v8);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v8[384]);
  v6 = sub_1ABF309D0();
  swift_release();
  return v6 & 1;
}

uint64_t sub_1ABE86220()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD v8[390];

  v1 = (_QWORD *)*v0;
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED34DBF8 != -1)
    swift_once();
  v2 = (void *)objc_opt_self();
  v3 = v1 + 8;
  v4 = v1[11];
  v5 = v1[12];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v8, v4, v5);
  sub_1ABD7DDF4((uint64_t)v8);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v8[379]);
  v6 = sub_1ABF309D0();
  swift_release();
  return v6 & 1;
}

uint64_t sub_1ABE86314()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD v8[390];

  v1 = (_QWORD *)*v0;
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED346710 != -1)
    swift_once();
  v2 = (void *)objc_opt_self();
  v3 = v1 + 8;
  v4 = v1[11];
  v5 = v1[12];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v8, v4, v5);
  sub_1ABD7DDF4((uint64_t)v8);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v8[171]);
  v6 = sub_1ABF309D0();
  swift_release();
  return v6 & 1;
}

uint64_t sub_1ABE86408()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD v8[390];

  v1 = (_QWORD *)*v0;
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED34C708 != -1)
    swift_once();
  v2 = (void *)objc_opt_self();
  v3 = v1 + 8;
  v4 = v1[11];
  v5 = v1[12];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v8, v4, v5);
  sub_1ABD7DDF4((uint64_t)v8);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v8[172]);
  v6 = sub_1ABF309D0();
  swift_release();
  return v6 & 1;
}

uint64_t sub_1ABE864FC()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD v8[390];

  v1 = (_QWORD *)*v0;
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED346650 != -1)
    swift_once();
  v2 = (void *)objc_opt_self();
  v3 = v1 + 8;
  v4 = v1[11];
  v5 = v1[12];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v8, v4, v5);
  sub_1ABD7DDF4((uint64_t)v8);
  objc_msgSend(v2, sel_enabledForCurrentLevel_, v8[388]);
  v6 = sub_1ABF309D0();
  swift_release();
  return v6 & 1;
}

uint64_t sub_1ABE865F0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1ABD07E04(*v1 + 16, a1);
}

uint64_t sub_1ABE86644(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1ABE8664C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1ABE86654(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1ABE8665C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1ABE86664(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_1ABE8666C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t sub_1ABE86674(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_1ABE8667C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t sub_1ABE86684(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t sub_1ABE8668C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1ABE86694()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1ABE866A0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t result;

  v0 = MEMORY[0x1E0DEE9D8];
  v1 = sub_1ABDEA390(MEMORY[0x1E0DEE9D8]);
  result = sub_1ABDEA374(v0);
  qword_1ED347150 = v1;
  *(_QWORD *)algn_1ED347158 = result;
  return result;
}

uint64_t static StockPriceData.empty.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1ED347160 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1ED347158;
  *a1 = qword_1ED347150;
  a1[1] = v2;
  sub_1ABF2FF5C();
  return sub_1ABF2FF5C();
}

unint64_t StockPriceData.description.getter()
{
  sub_1ABF31E94();
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  sub_1ABF31630();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABE86884();
  sub_1ABE868E8();
  sub_1ABD0E288();
  sub_1ABF2FF5C();
  sub_1ABF31954();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  return 0xD000000000000017;
}

void sub_1ABE86884()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC44570)
  {
    type metadata accessor for Chart(255);
    v0 = sub_1ABF3166C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC44570);
  }
}

unint64_t sub_1ABE868E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC44578;
  if (!qword_1EEC44578)
  {
    sub_1ABE86884();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DE9ED0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC44578);
  }
  return result;
}

StocksCore::StockPriceData __swiftcall StockPriceData.merge(other:)(StocksCore::StockPriceData other)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  StocksCore::StockPriceData result;

  v3 = v1;
  v5 = *v2;
  v4 = v2[1];
  sub_1ABF2FF5C();
  v6 = sub_1ABF2FF5C();
  v7 = sub_1ABE869CC(v6, v5, (uint64_t)sub_1ABE86A70, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1ABE86EA8);
  sub_1ABF2FF5C();
  v8 = sub_1ABF2FF5C();
  v9 = (void *)sub_1ABE869CC(v8, v4, (uint64_t)sub_1ABE86A54, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1ABE86B04);
  *v3 = v7;
  v3[1] = (uint64_t)v9;
  result.sparklines._rawValue = v10;
  result.quotes._rawValue = v9;
  return result;
}

uint64_t sub_1ABE869CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  v10 = v12;
  swift_bridgeObjectRelease();
  if (v4)
    swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1ABE86A54@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABE86A8C(a1, &qword_1ED34DEB8, (void (*)(uint64_t))type metadata accessor for Chart, (unint64_t *)&qword_1ED34DED8, a2);
}

uint64_t sub_1ABE86A70@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABE86A8C(a1, (unint64_t *)&qword_1ED34DEC0, (void (*)(uint64_t))type metadata accessor for Quote, (unint64_t *)&qword_1ED347180, a2);
}

uint64_t sub_1ABE86A8C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, unint64_t *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1ABCFC7E8(0, a2, a3);
  v10 = (uint64_t)a1 + *(int *)(v9 + 48);
  sub_1ABE87328(0, a4, a3);
  v13 = *a1;
  v12 = a1[1];
  sub_1ABCFC790(v10, (uint64_t)a5 + *(int *)(v11 + 48), (uint64_t (*)(_QWORD))a3);
  *a5 = v13;
  a5[1] = v12;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE86B04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  unsigned int (*v44)(uint64_t *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;

  v54 = a5;
  v9 = type metadata accessor for Chart(0);
  v45 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v43 = (uint64_t)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v46 = (uint64_t)v42 - v12;
  sub_1ABE8724C(0, &qword_1ED351428, (uint64_t)&qword_1ED34DED8, (uint64_t)type metadata accessor for Chart, (void (*)(uint64_t, uint64_t, uint64_t))sub_1ABE87328);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v42 - v14);
  v16 = -1 << *(_BYTE *)(a1 + 32);
  v17 = ~v16;
  v18 = *(_QWORD *)(a1 + 64);
  v19 = -v16;
  v47 = a1;
  v48 = a1 + 64;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v49 = v17;
  v50 = 0;
  v51 = v20 & v18;
  v52 = a2;
  v53 = a3;
  v42[1] = a1;
  sub_1ABF2FF5C();
  v42[0] = a3;
  sub_1ABF2FF68();
  sub_1ABE87384(&qword_1ED34DEB8, (void (*)(uint64_t))type metadata accessor for Chart, &qword_1ED34CA80, (unint64_t *)&qword_1ED34DED8, (uint64_t)v15);
  sub_1ABE87328(0, (unint64_t *)&qword_1ED34DED8, (void (*)(uint64_t))type metadata accessor for Chart);
  v22 = v21;
  v44 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
  if (v44(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1ABD97E10();
    return swift_release();
  }
  while (1)
  {
    v27 = *v15;
    v26 = v15[1];
    sub_1ABCFE2AC((uint64_t)v15 + *(int *)(v22 + 48), v46, type metadata accessor for Chart);
    v28 = *v54;
    v30 = sub_1ABD00F9C(v27, v26);
    v31 = *(_QWORD *)(v28 + 16);
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
      break;
    v34 = v29;
    if (*(_QWORD *)(v28 + 24) >= v33)
    {
      if ((a4 & 1) != 0)
      {
        if ((v29 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1ABE6F6E8();
        if ((v34 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1ABD24348(v33, a4 & 1);
      v35 = sub_1ABD00F9C(v27, v26);
      if ((v34 & 1) != (v36 & 1))
        goto LABEL_22;
      v30 = v35;
      if ((v34 & 1) != 0)
      {
LABEL_7:
        v24 = v46;
        v25 = v43;
        sub_1ABCFC790(v46, v43, type metadata accessor for Chart);
        sub_1ABCFC3BC(v24, type metadata accessor for Chart);
        swift_bridgeObjectRelease();
        sub_1ABDF221C(v25, *(_QWORD *)(*v54 + 56) + *(_QWORD *)(v45 + 72) * v30, type metadata accessor for Chart);
        goto LABEL_8;
      }
    }
    v37 = (_QWORD *)*v54;
    *(_QWORD *)(*v54 + 8 * (v30 >> 6) + 64) |= 1 << v30;
    v38 = (uint64_t *)(v37[6] + 16 * v30);
    *v38 = v27;
    v38[1] = v26;
    sub_1ABCFE2AC(v46, v37[7] + *(_QWORD *)(v45 + 72) * v30, type metadata accessor for Chart);
    v39 = v37[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_21;
    v37[2] = v41;
LABEL_8:
    sub_1ABE87384(&qword_1ED34DEB8, (void (*)(uint64_t))type metadata accessor for Chart, &qword_1ED34CA80, (unint64_t *)&qword_1ED34DED8, (uint64_t)v15);
    a4 = 1;
    if (v44(v15, 1, v22) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABE86EA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  unsigned int (*v44)(uint64_t *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;

  v54 = a5;
  v9 = type metadata accessor for Quote();
  v45 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v43 = (uint64_t)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v46 = (uint64_t)v42 - v12;
  sub_1ABE8724C(0, &qword_1EEC44580, (uint64_t)&qword_1ED347180, (uint64_t)type metadata accessor for Quote, (void (*)(uint64_t, uint64_t, uint64_t))sub_1ABE87328);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v42 - v14);
  v16 = -1 << *(_BYTE *)(a1 + 32);
  v17 = ~v16;
  v18 = *(_QWORD *)(a1 + 64);
  v19 = -v16;
  v47 = a1;
  v48 = a1 + 64;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v49 = v17;
  v50 = 0;
  v51 = v20 & v18;
  v52 = a2;
  v53 = a3;
  v42[1] = a1;
  sub_1ABF2FF5C();
  v42[0] = a3;
  sub_1ABF2FF68();
  sub_1ABE87384((unint64_t *)&qword_1ED34DEC0, (void (*)(uint64_t))type metadata accessor for Quote, &qword_1ED34DEC8, (unint64_t *)&qword_1ED347180, (uint64_t)v15);
  sub_1ABE87328(0, (unint64_t *)&qword_1ED347180, (void (*)(uint64_t))type metadata accessor for Quote);
  v22 = v21;
  v44 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
  if (v44(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1ABD97E10();
    return swift_release();
  }
  while (1)
  {
    v27 = *v15;
    v26 = v15[1];
    sub_1ABCFE2AC((uint64_t)v15 + *(int *)(v22 + 48), v46, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v28 = *v54;
    v30 = sub_1ABD00F9C(v27, v26);
    v31 = *(_QWORD *)(v28 + 16);
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
      break;
    v34 = v29;
    if (*(_QWORD *)(v28 + 24) >= v33)
    {
      if ((a4 & 1) != 0)
      {
        if ((v29 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1ABE6E868();
        if ((v34 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1ABD2435C(v33, a4 & 1);
      v35 = sub_1ABD00F9C(v27, v26);
      if ((v34 & 1) != (v36 & 1))
        goto LABEL_22;
      v30 = v35;
      if ((v34 & 1) != 0)
      {
LABEL_7:
        v24 = v46;
        v25 = v43;
        sub_1ABCFC790(v46, v43, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
        sub_1ABCFC3BC(v24, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
        swift_bridgeObjectRelease();
        sub_1ABDF221C(v25, *(_QWORD *)(*v54 + 56) + *(_QWORD *)(v45 + 72) * v30, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
        goto LABEL_8;
      }
    }
    v37 = (_QWORD *)*v54;
    *(_QWORD *)(*v54 + 8 * (v30 >> 6) + 64) |= 1 << v30;
    v38 = (uint64_t *)(v37[6] + 16 * v30);
    *v38 = v27;
    v38[1] = v26;
    sub_1ABCFE2AC(v46, v37[7] + *(_QWORD *)(v45 + 72) * v30, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v39 = v37[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_21;
    v37[2] = v41;
LABEL_8:
    sub_1ABE87384((unint64_t *)&qword_1ED34DEC0, (void (*)(uint64_t))type metadata accessor for Quote, &qword_1ED34DEC8, (unint64_t *)&qword_1ED347180, (uint64_t)v15);
    a4 = 1;
    if (v44(v15, 1, v22) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

void sub_1ABE8724C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1ABF31D5C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1ABE872A0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1ABCFC7E8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1ABE872EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1ABCFC7E8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1ABE87328(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1ABE87384@<X0>(unint64_t *a1@<X0>, void (*a2)(uint64_t)@<X1>, unint64_t *a3@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  unint64_t *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  __n128 v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t *v55;
  unint64_t *v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v9 = a1;
  sub_1ABCFC7E8(0, a1, a2);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v51 - v14;
  sub_1ABE8724C(0, a3, (uint64_t)v9, (uint64_t)a2, v16);
  MEMORY[0x1E0C80A78](v17);
  v60 = (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21.n128_f64[0] = MEMORY[0x1E0C80A78](v19);
  v22 = (char **)((char *)&v51 - v20);
  v23 = *v5;
  v24 = v5[1];
  v26 = v5[2];
  v25 = v5[3];
  v27 = v25;
  v28 = v5[4];
  v51 = v15;
  v58 = v26;
  v59 = v24;
  if (v28)
  {
    v56 = a4;
    v57 = v25;
    v54 = a3;
    v55 = v9;
    v52 = (v28 - 1) & v28;
    v53 = a5;
    v29 = __clz(__rbit64(v28)) | (v25 << 6);
LABEL_3:
    v30 = *(_QWORD *)(v23 + 56);
    v31 = (uint64_t *)(*(_QWORD *)(v23 + 48) + 16 * v29);
    v33 = *v31;
    v32 = v31[1];
    v34 = v23;
    v35 = ((uint64_t (*)(_QWORD, __n128))a2)(0, v21);
    sub_1ABCFC790(v30 + *(_QWORD *)(*(_QWORD *)(v35 - 8) + 72) * v29, (uint64_t)v22 + *(int *)(v12 + 48), (uint64_t (*)(_QWORD))a2);
    *v22 = v33;
    v22[1] = v32;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v22, 0, 1, v12);
    sub_1ABF2FF5C();
    a5 = v53;
    a3 = v54;
    v9 = v55;
    a4 = v56;
    v36 = v52;
    goto LABEL_25;
  }
  v37 = v25 + 1;
  if (__OFADD__(v25, 1))
  {
    __break(1u);
LABEL_23:
    v27 = v20;
    goto LABEL_24;
  }
  v38 = (unint64_t)(v26 + 64) >> 6;
  if (v37 < v38)
  {
    v39 = *(_QWORD *)(v24 + 8 * v37);
    if (v39)
    {
LABEL_7:
      v54 = a3;
      v55 = v9;
      v56 = a4;
      v57 = v37;
      v52 = (v39 - 1) & v39;
      v53 = a5;
      v29 = __clz(__rbit64(v39)) + (v37 << 6);
      goto LABEL_3;
    }
    v40 = v25 + 2;
    v27 = v25 + 1;
    if (v25 + 2 < v38)
    {
      v39 = *(_QWORD *)(v24 + 8 * v40);
      if (v39)
      {
LABEL_10:
        v37 = v40;
        goto LABEL_7;
      }
      v27 = v25 + 2;
      if (v25 + 3 < v38)
      {
        v39 = *(_QWORD *)(v24 + 8 * (v25 + 3));
        if (v39)
        {
          v37 = v25 + 3;
          goto LABEL_7;
        }
        v40 = v25 + 4;
        v27 = v25 + 3;
        if (v25 + 4 < v38)
        {
          v39 = *(_QWORD *)(v24 + 8 * v40);
          if (v39)
            goto LABEL_10;
          v37 = v25 + 5;
          v27 = v25 + 4;
          if (v25 + 5 < v38)
          {
            v39 = *(_QWORD *)(v24 + 8 * v37);
            if (v39)
              goto LABEL_7;
            v20 = v38 - 1;
            v41 = v25 + 6;
            while (v38 != v41)
            {
              v39 = *(_QWORD *)(v24 + 8 * v41++);
              if (v39)
              {
                v37 = v41 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v57 = v27;
  v34 = v23;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(v22, 1, 1, v12, v21);
  v36 = 0;
LABEL_25:
  v42 = v59;
  *v5 = v34;
  v5[1] = v42;
  v43 = v57;
  v5[2] = v58;
  v5[3] = v43;
  v5[4] = v36;
  v44 = (void (*)(uint64_t))v5[5];
  v45 = (uint64_t)v22;
  v46 = v60;
  sub_1ABE87700(v45, v60, a3, (uint64_t)v9, (uint64_t)a2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v46, 1, v12) == 1)
  {
    sub_1ABE87328(0, a4, a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(a5, 1, 1, v47);
  }
  else
  {
    v49 = (uint64_t)v51;
    sub_1ABE872A0(v46, (uint64_t)v51, v9, a2);
    v44(v49);
    sub_1ABE872EC(v49, v9, a2);
    sub_1ABE87328(0, a4, a2);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(a5, 0, 1, v50);
  }
}

uint64_t sub_1ABE87700(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;

  sub_1ABE8724C(0, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_1ABCFC7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1ABE8775C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ABE87764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1ABE8776C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABF31060();
  sub_1ABD34B3C();
  swift_allocObject();
  result = sub_1ABF31474();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE877F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for HeadlineHistoryEntity()
{
  return &type metadata for HeadlineHistoryEntity;
}

uint64_t sub_1ABE87840(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for SDSMetadata.SourceLogo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for SDSMetadata.SourceLogo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSMetadata.SourceLogo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSMetadata.SourceLogo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineHistoryModel()
{
  return &type metadata for HeadlineHistoryModel;
}

uint64_t sub_1ABE8799C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];
  _QWORD v18[19];

  v2 = v1;
  v4 = sub_1ABF31594();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v15 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1ABF315D0();
  v8 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD6414C(a1, (uint64_t)v18);
  v11 = swift_allocObject();
  sub_1ABD6414C((uint64_t)v18, v11 + 16);
  *(_QWORD *)(v11 + 160) = v2;
  aBlock[4] = sub_1ABE892FC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_9;
  v12 = _Block_copy(aBlock);
  sub_1ABD64188(v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  sub_1ABF2FF68();
  sub_1ABF315AC();
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v5, MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, v5);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v10, v7, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v14);
  return swift_release();
}

uint64_t sub_1ABE87BEC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[144];
  _BYTE v35[144];

  sub_1ABD0F55C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF366E0;
  sub_1ABD6414C((uint64_t)a1, (uint64_t)v35);
  sub_1ABD24814((uint64_t)v35);
  v5 = *(void **)sub_1ABD24804((uint64_t)v35);
  sub_1ABD64188(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v6 = objc_msgSend(v5, sel_articleID);
  v7 = sub_1ABF317A4();
  v9 = v8;

  sub_1ABD64188(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  v10 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v11 = sub_1ABD0F5C0();
  *(_QWORD *)(v4 + 64) = v11;
  *(_QWORD *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 40) = v9;
  sub_1ABD6414C((uint64_t)a1, (uint64_t)v34);
  sub_1ABD24814((uint64_t)v34);
  v12 = *(void **)sub_1ABD24804((uint64_t)v34);
  sub_1ABD64188(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v13 = objc_msgSend(v12, sel_title);
  if (v13)
  {
    v14 = v13;
    v15 = sub_1ABF317A4();
    v17 = v16;

    sub_1ABD64188(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
    v18 = (uint64_t *)(v4 + 72);
    *(_QWORD *)(v4 + 96) = v10;
    *(_QWORD *)(v4 + 104) = v11;
    if (v17)
    {
      *v18 = v15;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1ABD64188(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
    v18 = (uint64_t *)(v4 + 72);
    *(_QWORD *)(v4 + 96) = v10;
    *(_QWORD *)(v4 + 104) = v11;
  }
  *v18 = 0;
  v17 = 0xE000000000000000;
LABEL_6:
  *(_QWORD *)(v4 + 80) = v17;
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
  v19 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  v20 = sub_1ABE88010(a2, a1);
  v22 = v21;
  if ((v23 & 1) != 0)
    return swift_bridgeObjectRelease();
  v25 = v20;
  sub_1ABF2FF5C();
  sub_1ABF31060();
  sub_1ABF3145C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABD6414C((uint64_t)a1, (uint64_t)&v33);
  sub_1ABD24814((uint64_t)&v33);
  v26 = *(void **)sub_1ABD24804((uint64_t)&v33);
  sub_1ABD64188(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v27 = objc_msgSend(v26, sel_identifier);
  v28 = sub_1ABF317A4();
  v30 = v29;

  sub_1ABD64188(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = 0x8000000000000000;
  sub_1ABDF1524(v25, v22, 1, v28, v30, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a2 + 16) = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1ABE88010(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD v26[8];
  _BYTE v27[144];
  _BYTE v28[144];
  _BYTE v29[152];
  uint64_t v30;

  v4 = sub_1ABF31390();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD6414C((uint64_t)a2, (uint64_t)v29);
  sub_1ABD24814((uint64_t)v29);
  v8 = *(void **)sub_1ABD24804((uint64_t)v29);
  sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v9 = objc_msgSend(v8, sel_identifier);
  v10 = sub_1ABF317A4();
  v12 = v11;

  sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_1ABD00F9C(v10, v12), (v15 & 1) != 0))
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 24 * v14);
    swift_endAccess();
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1ABF31060();
    sub_1ABD6414C((uint64_t)a2, (uint64_t)v28);
    sub_1ABD24814((uint64_t)v28);
    v16 = *(void **)sub_1ABD24804((uint64_t)v28);
    sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    v17 = objc_msgSend(v16, sel_identifier);
    v18 = sub_1ABF317A4();
    v20 = v19;

    sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
    v26[3] = MEMORY[0x1E0DEA968];
    v26[4] = MEMORY[0x1E0DB2EC8];
    v26[0] = v18;
    v26[1] = v20;
    sub_1ABF31450();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    v21 = v30;
    sub_1ABF31468();
    if (v21)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
      if (v26[6])
      {
        return v26[5];
      }
      else
      {
        sub_1ABD6414C((uint64_t)a2, (uint64_t)v27);
        sub_1ABD24814((uint64_t)v27);
        v22 = *(void **)sub_1ABD24804((uint64_t)v27);
        sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        v23 = objc_msgSend(v22, sel_identifier);
        v4 = sub_1ABF317A4();

        sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      }
    }
  }
  return v4;
}

uint64_t sub_1ABE8830C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  uint64_t v8;
  _QWORD aBlock[6];
  unsigned __int8 v10;
  _QWORD v11[18];

  v2 = v1;
  sub_1ABD6414C(a1, (uint64_t)v11);
  v10 = 0;
  v3 = *(NSObject **)(v1 + 24);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  sub_1ABD6414C((uint64_t)v11, v4 + 24);
  *(_QWORD *)(v4 + 168) = &v10;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1ABE89284;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_1ABD12950;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABE888C4;
  aBlock[3] = &block_descriptor_28;
  v6 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABD64188(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  sub_1ABF2FF68();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_1ABE88474(uint64_t a1, _QWORD *a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t result;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[18];
  _BYTE v41[144];
  _BYTE v42[152];

  v35 = a3;
  v5 = sub_1ABF31390();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD6414C((uint64_t)a2, (uint64_t)v42);
  sub_1ABD24814((uint64_t)v42);
  v9 = *(void **)sub_1ABD24804((uint64_t)v42);
  sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  v10 = objc_msgSend(v9, sel_identifier);
  v11 = sub_1ABF317A4();
  v13 = v12;

  sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  v14 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_1ABD00F9C(v11, v13), (v17 & 1) != 0))
  {
    v18 = *(_BYTE *)(*(_QWORD *)(v15 + 56) + 24 * v16 + 16);
    swift_endAccess();
    result = swift_bridgeObjectRelease();
    *v35 = v18;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1ABF31060();
    sub_1ABD6414C((uint64_t)a2, (uint64_t)v41);
    sub_1ABD24814((uint64_t)v41);
    v20 = *(void **)sub_1ABD24804((uint64_t)v41);
    sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    v21 = objc_msgSend(v20, sel_identifier);
    v22 = sub_1ABF317A4();
    v24 = v23;

    sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
    v40[3] = MEMORY[0x1E0DEA968];
    v40[4] = MEMORY[0x1E0DB2EC8];
    v40[0] = v22;
    v40[1] = v24;
    sub_1ABF31450();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    sub_1ABF31468();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    result = swift_release();
    v25 = v38;
    if (v38)
    {
      v26 = v37;
      v27 = v39 & 1;
      sub_1ABD6414C((uint64_t)a2, (uint64_t)v40);
      sub_1ABD24814((uint64_t)v40);
      v28 = *(void **)sub_1ABD24804((uint64_t)v40);
      sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      v29 = objc_msgSend(v28, sel_identifier);
      v30 = sub_1ABF317A4();
      v32 = v31;

      sub_1ABD64188(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      swift_beginAccess();
      sub_1ABF2FF5C();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v36 = *v14;
      *v14 = 0x8000000000000000;
      sub_1ABDF1524(v26, v25, v27, v30, v32, isUniquelyReferenced_nonNull_native);
      *v14 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      result = swift_bridgeObjectRelease();
      *v35 = v27;
    }
  }
  return result;
}

uint64_t sub_1ABE888C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1ABE888E4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];
  int v13;
  char v14;
  char v15;

  v13 = a4;
  sub_1ABCF4DA8(0, &qword_1ED347030, (uint64_t (*)(void))sub_1ABE89BB4, (uint64_t)&type metadata for HeadlineHistoryModel.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE89BB4();
  sub_1ABF32368();
  v15 = 0;
  v10 = v12[1];
  sub_1ABF32194();
  if (!v10)
  {
    v14 = 1;
    sub_1ABF321A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ABE88A28(uint64_t a1)
{
  return sub_1ABE8799C(a1);
}

uint64_t sub_1ABE88A48(uint64_t a1)
{
  return sub_1ABE8830C(a1) & 1;
}

uint64_t sub_1ABE88A6C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6465736F707865;
  else
    return 25705;
}

uint64_t sub_1ABE88A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE89564(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE88AC0()
{
  sub_1ABE89BB4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE88AE8()
{
  sub_1ABE89BB4();
  return sub_1ABF32398();
}

uint64_t sub_1ABE88B10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1ABE893B4(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1ABE88B40(_QWORD *a1)
{
  uint64_t v1;

  return sub_1ABE888E4(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1ABE88B5C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v12 = a3;
  sub_1ABCF4DA8(0, &qword_1ED347038, (uint64_t (*)(void))sub_1ABE89AB0, (uint64_t)&type metadata for HeadlineHistoryEntity.CodingKeys, MEMORY[0x1E0DED170]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE89AB0();
  sub_1ABF32368();
  v14 = a2;
  v13 = 0;
  sub_1ABE8936C(0, &qword_1ED346E98, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0], MEMORY[0x1E0DB2CA8]);
  sub_1ABE89B54(&qword_1ED346E88, MEMORY[0x1E0DB2CB8]);
  sub_1ABF321D0();
  if (!v3)
  {
    v14 = v12;
    v13 = 1;
    sub_1ABE8936C(0, (unint64_t *)&unk_1ED346EB0, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0], MEMORY[0x1E0DB2CA8]);
    sub_1ABE89AF4(&qword_1ED346EA0, MEMORY[0x1E0DB2CB8]);
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1ABE88D30()
{
  sub_1ABE89AB0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE88D58()
{
  sub_1ABE89AB0();
  return sub_1ABF32398();
}

uint64_t sub_1ABE88D80()
{
  return sub_1ABF2FF68();
}

unint64_t sub_1ABE88D88()
{
  return 0xD000000000000018;
}

uint64_t sub_1ABE88DA4()
{
  uint64_t v0;

  v0 = *(_QWORD *)a100;
  sub_1ABF2FF5C();
  return v0;
}

uint64_t sub_1ABE88DD8()
{
  sub_1ABD3D434();
  return sub_1ABF31348();
}

uint64_t sub_1ABE88E10()
{
  sub_1ABD3D434();
  return sub_1ABF31360();
}

uint64_t sub_1ABE88E48()
{
  sub_1ABD3D434();
  return sub_1ABF31354();
}

uint64_t sub_1ABE88E98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v20)(_QWORD, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v28;

  sub_1ABE89308(0, &qword_1ED346E80, &qword_1ED346E78, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - v6;
  v8 = MEMORY[0x1E0DEA968];
  v9 = MEMORY[0x1E0DB2EC0];
  sub_1ABE89308(0, &qword_1ED346E70, &qword_1ED346E68, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  v16 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88];
  sub_1ABE8936C(0, &qword_1ED346E68, v8, v9, MEMORY[0x1E0DB2C88]);
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v19(v15, 1, 1, v17);
  v19(v12, 1, 1, v18);
  v20 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8];
  sub_1ABE8936C(0, &qword_1ED346E98, v8, v9, MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  v21 = sub_1ABF3148C();
  v22 = MEMORY[0x1E0DEAFA0];
  v23 = MEMORY[0x1E0DB2ED0];
  sub_1ABE8936C(0, &qword_1ED346E78, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0], v16);
  v25 = v24;
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v26(v7, 1, 1, v24);
  v26(v4, 1, 1, v25);
  sub_1ABE8936C(0, (unint64_t *)&unk_1ED346EB0, v22, v23, v20);
  swift_allocObject();
  result = sub_1ABF3148C();
  *a1 = v21;
  a1[1] = result;
  return result;
}

uint64_t sub_1ABE89114@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1ABE8963C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1ABE8913C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABE88B5C(a1, *v1, v1[1]);
}

uint64_t sub_1ABE89154()
{
  sub_1ABD3D434();
  return sub_1ABF31384();
}

uint64_t sub_1ABE8918C()
{
  sub_1ABD3D434();
  return sub_1ABF31378();
}

uint64_t sub_1ABE891CC()
{
  sub_1ABD3D434();
  return sub_1ABF3136C();
}

uint64_t sub_1ABE8921C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABE8776C(a1);
}

uint64_t sub_1ABE89224()
{
  uint64_t v0;

  swift_release();
  sub_1ABCFFDBC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(void **)(v0 + 120), *(_QWORD *)(v0 + 128));
  return swift_deallocObject();
}

uint64_t sub_1ABE89284()
{
  uint64_t v0;

  return sub_1ABE88474(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(char **)(v0 + 168));
}

uint64_t sub_1ABE89294()
{
  return swift_deallocObject();
}

uint64_t sub_1ABE892A4()
{
  uint64_t v0;

  sub_1ABCFFDBC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(void **)(v0 + 112), *(_QWORD *)(v0 + 120));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE892FC()
{
  uint64_t v0;

  return sub_1ABE87BEC((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 160));
}

void sub_1ABE89308(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1ABE8936C(255, a3, a4, a5, MEMORY[0x1E0DB2C88]);
    v6 = sub_1ABF31D5C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1ABE8936C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1ABE893B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1ABCF4DA8(0, &qword_1ED347020, (uint64_t (*)(void))sub_1ABE89BB4, (uint64_t)&type metadata for HeadlineHistoryModel.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE89BB4();
  sub_1ABF3235C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_1ABF320E0();
    v11 = 1;
    sub_1ABF2FF5C();
    sub_1ABF320EC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1ABE89564(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465736F707865 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1ABE8963C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v21)(_QWORD, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;

  v39 = a1;
  sub_1ABCF4DA8(0, &qword_1ED347028, (uint64_t (*)(void))sub_1ABE89AB0, (uint64_t)&type metadata for HeadlineHistoryEntity.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v36 = *(_QWORD *)(v1 - 8);
  v37 = v1;
  MEMORY[0x1E0C80A78](v1);
  v40 = (char *)&v35 - v2;
  sub_1ABE89308(0, &qword_1ED346E80, &qword_1ED346E78, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - v7;
  v9 = MEMORY[0x1E0DEA968];
  v10 = MEMORY[0x1E0DB2EC0];
  sub_1ABE89308(0, &qword_1ED346E70, &qword_1ED346E68, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v35 - v15;
  v17 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2C88];
  sub_1ABE8936C(0, &qword_1ED346E68, v9, v10, MEMORY[0x1E0DB2C88]);
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v20(v16, 1, 1, v18);
  v20(v13, 1, 1, v19);
  v21 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DB2CA8];
  sub_1ABE8936C(0, &qword_1ED346E98, v9, v10, MEMORY[0x1E0DB2CA8]);
  swift_allocObject();
  v38 = sub_1ABF3148C();
  v22 = MEMORY[0x1E0DEAFA0];
  v23 = MEMORY[0x1E0DB2ED0];
  sub_1ABE8936C(0, &qword_1ED346E78, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0], v17);
  v25 = v24;
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v26(v8, 1, 1, v24);
  v26(v5, 1, 1, v25);
  v27 = v39;
  sub_1ABE8936C(0, (unint64_t *)&unk_1ED346EB0, v22, v23, v21);
  swift_allocObject();
  sub_1ABF3148C();
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  sub_1ABE89AB0();
  v28 = v41;
  v29 = v40;
  sub_1ABF3235C();
  if (v28)
  {
    v30 = v38;
  }
  else
  {
    v42 = 0;
    sub_1ABE89B54(&qword_1ED346E90, MEMORY[0x1E0DB2CC0]);
    v31 = v37;
    v32 = v29;
    sub_1ABF32110();
    swift_release();
    v30 = v43;
    v42 = 1;
    sub_1ABE89AF4(&qword_1ED346EA8, MEMORY[0x1E0DB2CC0]);
    sub_1ABF2FF68();
    sub_1ABF32110();
    v33 = v36;
    swift_release();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v31);
    sub_1ABF2FF68();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  swift_release();
  swift_release();
  return v30;
}

unint64_t sub_1ABE89AB0()
{
  unint64_t result;

  result = qword_1ED346B68;
  if (!qword_1ED346B68)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF486C4, &type metadata for HeadlineHistoryEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346B68);
  }
  return result;
}

uint64_t sub_1ABE89AF4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1ABE8936C(255, (unint64_t *)&unk_1ED346EB0, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0DB2ED0], MEMORY[0x1E0DB2CA8]);
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABE89B54(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1ABE8936C(255, &qword_1ED346E98, MEMORY[0x1E0DEA968], MEMORY[0x1E0DB2EC0], MEMORY[0x1E0DB2CA8]);
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABE89BB4()
{
  unint64_t result;

  result = qword_1ED346B48;
  if (!qword_1ED346B48)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48674, &type metadata for HeadlineHistoryModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346B48);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineHistoryModel.CodingKeys()
{
  return &type metadata for HeadlineHistoryModel.CodingKeys;
}

uint64_t _s10StocksCore20HeadlineHistoryModelV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABE89C58 + 4 * byte_1ABF48275[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABE89C8C + 4 * asc_1ABF48270[v4]))();
}

uint64_t sub_1ABE89C8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE89C94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE89C9CLL);
  return result;
}

uint64_t sub_1ABE89CA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE89CB0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABE89CB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE89CBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineHistoryEntity.CodingKeys()
{
  return &type metadata for HeadlineHistoryEntity.CodingKeys;
}

unint64_t sub_1ABE89CDC()
{
  unint64_t result;

  result = qword_1EEC44598;
  if (!qword_1EEC44598)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48594, &type metadata for HeadlineHistoryEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44598);
  }
  return result;
}

unint64_t sub_1ABE89D24()
{
  unint64_t result;

  result = qword_1EEC445A0;
  if (!qword_1EEC445A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4864C, &type metadata for HeadlineHistoryModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC445A0);
  }
  return result;
}

unint64_t sub_1ABE89D6C()
{
  unint64_t result;

  result = qword_1ED346688;
  if (!qword_1ED346688)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF485BC, &type metadata for HeadlineHistoryModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346688);
  }
  return result;
}

unint64_t sub_1ABE89DB4()
{
  unint64_t result;

  result = qword_1ED346B50;
  if (!qword_1ED346B50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF485E4, &type metadata for HeadlineHistoryModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346B50);
  }
  return result;
}

unint64_t sub_1ABE89DFC()
{
  unint64_t result;

  result = qword_1ED346690;
  if (!qword_1ED346690)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48504, &type metadata for HeadlineHistoryEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346690);
  }
  return result;
}

unint64_t sub_1ABE89E44()
{
  unint64_t result;

  result = qword_1ED346B70;
  if (!qword_1ED346B70)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4852C, &type metadata for HeadlineHistoryEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346B70);
  }
  return result;
}

uint64_t sub_1ABE89E9C()
{
  sub_1ABD03D24();
  swift_allocObject();
  return sub_1ABF311E0();
}

unint64_t sub_1ABE89ED0()
{
  return sub_1ABDEAACC(MEMORY[0x1E0DEE9D8]);
}

unint64_t sub_1ABE89EDC()
{
  return sub_1ABDEAACC(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1ABE89EE8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABE89EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for NoopFeedPersonalizerHeadlineScorer()
{
  return &type metadata for NoopFeedPersonalizerHeadlineScorer;
}

uint64_t sub_1ABE89F08()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE89F2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE89F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1ABE89F5C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t sub_1ABE89F80()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE89FAC()
{
  sub_1ABE8A09C();
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABE89FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;

  sub_1ABF30BE0();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a5;
  v10[3] = a1;
  v10[4] = a2;
  v10[5] = a3;
  v10[6] = a4;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF30BD4();
  return swift_release();
}

uint64_t sub_1ABE8A094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABE89FF0(a1, a2, a3, a4, v4);
}

void sub_1ABE8A09C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3472C0)
  {
    sub_1ABF30EF8();
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3472C0);
  }
}

void sub_1ABE8A0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;

  sub_1ABF2FF68();
  sub_1ABE8A534((uint64_t)&unk_1E5AEB470);
  swift_release();
  sub_1ABE8A79C();
  sub_1ABF3127C();
  swift_bridgeObjectRelease();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  sub_1ABF2FF68();
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  sub_1ABF2FF68();
  v12 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABE8A240(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  char v14;
  uint64_t v16;

  v2 = type metadata accessor for SDSAuthToken();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF30760();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - v11;
  sub_1ABF30754();
  sub_1ABCFE1EC((unint64_t *)&qword_1ED34CCB0, v6, MEMORY[0x1E0CB08B0]);
  LOBYTE(v6) = sub_1ABF316F0();
  v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v12, v5);
  sub_1ABE3C30C(a1, (uint64_t)v4);
  if ((v6 & 1) != 0)
  {
    sub_1ABF30670();
    sub_1ABF306C4();
    sub_1ABF30754();
    v14 = sub_1ABF306E8();
    v13(v9, v5);
    v13(v12, v5);
  }
  else
  {
    v14 = 1;
  }
  sub_1ABE3C350((uint64_t)v4);
  return v14 & 1;
}

uint64_t sub_1ABE8A3E0(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v3 = sub_1ABF30EF8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E0DB42B0], v3, v5);
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1ABE8A488()
{
  return sub_1ABF30F10();
}

uint64_t sub_1ABE8A490()
{
  return sub_1ABF30F04();
}

uint64_t sub_1ABE8A498()
{
  sub_1ABE8A09C();
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABE8A4DC()
{
  return sub_1ABF30F1C();
}

uint64_t sub_1ABE8A4E4()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABE8A4F0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABE8A524()
{
  uint64_t *v0;

  sub_1ABE8A0F0(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1ABE8A534(uint64_t a1)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = sub_1ABF305D4();
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v2);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_1ABDB5208(0, v3, 0);
    v4 = *(unsigned __int8 *)(a1 + 32);
    sub_1ABF31294();
    __asm { BR              X8 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1ABE8A738()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), _QWORD, uint64_t, uint64_t))(v4 + 16))(v2, sub_1ABE8A240, 0, v3, v4);
}

void sub_1ABE8A79C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED34FB38)
  {
    sub_1ABF305D4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    type metadata accessor for SDSAuthToken();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, v0, MEMORY[0x1E0CB0018]);
    v1 = sub_1ABF31690();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED34FB38);
  }
}

uint64_t sub_1ABE8A830()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE8A854(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABE8A3E0(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_1ABE8A870()
{
  type metadata accessor for BlankAllowListProvider();
  return swift_allocObject();
}

id sub_1ABE8A890(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_personalizationData);
}

id sub_1ABE8A89C()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58CC0]), sel_initForLoggingOnly);
}

id sub_1ABE8A8C0()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedNetworkReachability);
  if (!result)
    __break(1u);
  return result;
}

id sub_1ABE8A8F8(_QWORD *a1)
{
  id result;
  id v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350BF8);
  result = (id)sub_1ABF30B68();
  if (result)
  {
    v2 = objc_msgSend(result, sel_news_core_ConfigurationManager);
    swift_unknownObjectRelease();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1ABE8A980(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_issueReadingHistory);
}

id sub_1ABE8A98C(_QWORD *a1, SEL *a2)
{
  id result;
  void *v4;
  id v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED3503A0);
  result = (id)sub_1ABF30B68();
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(result, *a2);

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1ABE8AA10(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_readingHistory);
}

id sub_1ABE8AA1C(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_readingList);
}

void sub_1ABE8AA28(_QWORD *a1)
{
  sub_1ABE8AA40(a1, (SEL *)&selRef_subscriptionController);
}

void sub_1ABE8AA34(_QWORD *a1)
{
  sub_1ABE8AA40(a1, (SEL *)&selRef_notificationController);
}

void sub_1ABE8AA40(_QWORD *a1, SEL *a2)
{
  void *v3;
  void *v4;
  id v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED3503A0);
  v3 = (void *)sub_1ABF30B68();
  if (!v3)
  {
    __break(1u);
    goto LABEL_5;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, *a2);

  if (!v5)
LABEL_5:
    __break(1u);
}

void sub_1ABE8AACC(_QWORD *a1)
{
  sub_1ABE8AA40(a1, (SEL *)&selRef_sportsEventController);
}

id sub_1ABE8AAD8(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_puzzleController);
}

id sub_1ABE8AAE4(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_puzzleTypeController);
}

id sub_1ABE8AAF0(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_flintResourceManager);
}

id sub_1ABE8AAFC(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_userInfo);
}

void sub_1ABE8AB08(_QWORD *a1)
{
  sub_1ABE8AA40(a1, (SEL *)&selRef_paidAccessChecker);
}

id sub_1ABE8AB14(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_assetManager);
}

id sub_1ABE8AB20(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_avAssetFactory);
}

id sub_1ABE8AB2C(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_avAssetPrewarmer);
}

uint64_t sub_1ABE8AB38(_QWORD *a1)
{
  return sub_1ABE8AB54(a1);
}

uint64_t sub_1ABE8AB54(_QWORD *a1)
{
  uint64_t result;
  void *v3;
  void *v4;
  id v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350BF8);
  result = sub_1ABF30B68();
  if (result)
  {
    v3 = (void *)result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABCF7BCC(0, &qword_1ED350D18);
    result = sub_1ABF30B50();
    if (result)
    {
      v4 = (void *)result;
      v5 = objc_msgSend(v3, sel_recordSourceWithSchema_, result);
      swift_unknownObjectRelease();

      return (uint64_t)v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABE8AC54(_QWORD *a1)
{
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350BF8);
  result = sub_1ABF30B68();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v3 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350CB0);
  result = sub_1ABF30B50();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1ABF30B50();
  if (result)
  {
    v5 = result;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1ABF3EC20;
    *(_QWORD *)(v6 + 32) = v4;
    *(_QWORD *)(v6 + 40) = v5;
    sub_1ABF31A20();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v7 = (void *)sub_1ABF319FC();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v3, sel_recordTreeSourceWithRecordSources_, v7);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    return (uint64_t)v8;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1ABE8AE34(_QWORD *a1)
{
  uint64_t result;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD33B60();
  result = sub_1ABF30B74();
  if (v5)
  {
    v2 = objc_allocWithZone(MEMORY[0x1E0D58DA8]);
    sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350D58);
    v3 = (void *)sub_1ABF319FC();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v2, sel_initWithConditions_, v3);

    return (uint64_t)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE8AEF4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  objc_class *v6;
  char *v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  objc_super v20;
  _BYTE v21[3120];
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1ABF30AE4();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v23)
  {
    v6 = (objc_class *)type metadata accessor for NewsConfigurationManager();
    v7 = (char *)objc_allocWithZone(v6);
    v8 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers;
    v9 = objc_allocWithZone(MEMORY[0x1E0CB3690]);
    v10 = v7;
    *(_QWORD *)&v7[v8] = objc_msgSend(v9, sel_initWithOptions_capacity_, 517, 0);
    v11 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers;
    *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3690]), sel_initWithOptions_capacity_, 517, 0);
    v12 = (uint64_t)&v10[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig];
    sub_1ABDC4280(v21);
    sub_1ABDC4288((uint64_t)v21, v12);
    *(_QWORD *)&v10[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownNewsConfig] = 0;
    v13 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_configLock;
    sub_1ABF30AD8();
    sub_1ABF30AFC();
    swift_allocObject();
    *(_QWORD *)&v10[v13] = sub_1ABF30AF0();
    sub_1ABD07E04((uint64_t)v22, (uint64_t)&v10[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager]);

    v20.receiver = v10;
    v20.super_class = v6;
    v14 = objc_msgSendSuper2(&v20, sel_init);
    v15 = v23;
    v16 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    v17 = *(void (**)(uint64_t, uint64_t))(v16 + 16);
    v18 = v14;
    v17(v15, v16);
    swift_allocObject();
    swift_unknownObjectUnownedInit();
    sub_1ABF30C94();
    swift_release();
    swift_release();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    *a2 = v18;
    a2[1] = &off_1E5AED990;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1ABE8B168()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58E98]), sel_init);
}

uint64_t sub_1ABE8B18C(_QWORD *a1)
{
  uint64_t result;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350980);
  sub_1ABF30B74();
  result = v2;
  if (!v2)
    __break(1u);
  return result;
}

void sub_1ABE8B200(_QWORD *a1)
{
  sub_1ABE8AA40(a1, (SEL *)&selRef_entitlementService);
}

void sub_1ABE8B20C(_QWORD *a1)
{
  sub_1ABE8AA40(a1, (SEL *)&selRef_purchaseController);
}

void sub_1ABE8B21C(_QWORD *a1)
{
  sub_1ABE8AA40(a1, (SEL *)&selRef_purchaseManager);
}

void sub_1ABE8B228(_QWORD *a1)
{
  sub_1ABE8AA40(a1, (SEL *)&selRef_bundleSubscriptionManager);
}

uint64_t sub_1ABE8B234(void **a1, _QWORD *a2)
{
  void *v2;

  v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED34E120);
  objc_msgSend(v2, sel_setEntitlementsOverrideProvider_, sub_1ABF30B68());
  return swift_unknownObjectRelease();
}

id sub_1ABE8B2B0(_QWORD *a1)
{
  return sub_1ABE8A98C(a1, (SEL *)&selRef_tagSettings);
}

id sub_1ABE8B2BC()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  v0 = objc_allocWithZone(MEMORY[0x1E0D58C50]);
  v1 = (void *)sub_1ABF31780();
  v2 = (void *)sub_1ABF31780();
  v3 = (void *)sub_1ABF319FC();
  v4 = (void *)sub_1ABF319FC();
  v5 = objc_msgSend(v0, sel_initWithRecordType_recordIDPrefix_keys_localizableKeys_, v1, v2, v3, v4);

  return v5;
}

uint64_t sub_1ABE8B390@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF48870;
  *(_QWORD *)(v4 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58DC0]), sel_init);
  *(_QWORD *)(v4 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58DB0]), sel_init);
  *(_QWORD *)(v4 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58DC8]), sel_init);
  *(_QWORD *)(v4 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58DB8]), sel_init);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v8)
  {
    type metadata accessor for NewsRegionCheck();
    v6 = swift_allocObject();
    sub_1ABD065C8(&v7, v6 + 16);
    *(_QWORD *)(v4 + 64) = v6;
    *(_QWORD *)&v7 = v4;
    result = sub_1ABF31A20();
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE8B4F8()
{
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABF309B8();
  return swift_release();
}

void sub_1ABE8B564(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF30B74();
  __asm { BR              X10 }
}

void sub_1ABE8B5C4()
{
  _QWORD *v0;

  *v0 = 1;
}

uint64_t sub_1ABE8B638()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABE8B65C(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;

  v5 = sub_1ABF302A4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[5];
  v10 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v9);
  v11 = (*(uint64_t (**)(uint64_t, unint64_t, _QWORD, uint64_t, uint64_t))(v10 + 8))(a1, a2, 0, v9, v10);
  if (v12)
    v13 = v11;
  else
    v13 = 0;
  if (v12)
    v14 = v12;
  else
    v14 = 0xE000000000000000;
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = v13 & 0xFFFFFFFFFFFFLL;
  if (v15)
  {
    a1 = v13;
    a2 = v14;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1ABF2FF5C();
  }
  v22 = a1;
  v23 = a2;
  sub_1ABF30274();
  sub_1ABD0E288();
  v16 = sub_1ABF31DA4();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  swift_bridgeObjectRelease();
  v22 = v16;
  v23 = v18;
  sub_1ABF3028C();
  sub_1ABF31DA4();
  v19(v8, v5);
  swift_bridgeObjectRelease();
  v20 = sub_1ABF31810();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1ABE8B7F0(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t a5, char a6)
{
  uint64_t v6;
  char *v7;
  char *v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;
  char *v31;
  BOOL v32;
  char *v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;
  char v50;
  char *v51;
  char *v52;
  BOOL v53;
  uint64_t result;
  char *v55;
  int v56;
  _BYTE v57[136];
  _BYTE __dsta[136];
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  char *v77;
  const void *v78;
  char *v79;

  v7 = __dst;
  v9 = a2;
  v10 = __src;
  v56 = a6 & 1;
  v11 = a2 - __src;
  v12 = (a2 - __src) / 136;
  v13 = a3 - (_QWORD)a2;
  v14 = (uint64_t)(a3 - (_QWORD)a2) / 136;
  v79 = __src;
  v78 = __dst;
  if (v12 >= v14)
  {
    if (v13 < -135)
      goto LABEL_51;
    if (__dst != a2 || &a2[136 * v14] <= __dst)
      memmove(__dst, a2, 136 * v14);
    v34 = &v7[136 * v14];
    v77 = v34;
    v79 = v9;
    if (v10 >= v9 || v13 < 136)
      goto LABEL_50;
    v35 = (char *)(a3 - 136);
    v55 = v10;
    while (1)
    {
      v59 = *(_OWORD *)(v34 - 136);
      v36 = *(_OWORD *)(v34 - 120);
      v37 = *(_OWORD *)(v34 - 104);
      v38 = *(_OWORD *)(v34 - 72);
      v62 = *(_OWORD *)(v34 - 88);
      v63 = v38;
      v60 = v36;
      v61 = v37;
      v39 = *(_OWORD *)(v34 - 56);
      v40 = *(_OWORD *)(v34 - 40);
      v41 = *(_OWORD *)(v34 - 24);
      v67 = *((_QWORD *)v34 - 1);
      v65 = v40;
      v66 = v41;
      v64 = v39;
      memmove(__dsta, v34 - 136, 0x88uLL);
      v42 = v9 - 136;
      v68 = *(_OWORD *)(v9 - 136);
      v43 = *(_OWORD *)(v9 - 120);
      v44 = *(_OWORD *)(v9 - 104);
      v45 = *(_OWORD *)(v9 - 72);
      v71 = *(_OWORD *)(v9 - 88);
      v72 = v45;
      v69 = v43;
      v70 = v44;
      v46 = *(_OWORD *)(v9 - 56);
      v47 = *(_OWORD *)(v9 - 40);
      v48 = *(_OWORD *)(v9 - 24);
      v76 = *((_QWORD *)v9 - 1);
      v74 = v47;
      v75 = v48;
      v73 = v46;
      memmove(v57, v9 - 136, 0x88uLL);
      sub_1ABD97ECC((uint64_t)&v59);
      sub_1ABD97ECC((uint64_t)&v68);
      v49 = sub_1ABE8FC8C((uint64_t)__dsta, (uint64_t)v57, v56);
      if (v6)
      {
        v77 = v34;
        v79 = v9;
LABEL_46:
        sub_1ABD97F60((uint64_t)&v68);
        sub_1ABD97F60((uint64_t)&v59);
        goto LABEL_50;
      }
      v50 = v49;
      v51 = v7;
      v52 = v35 + 136;
      sub_1ABD97F60((uint64_t)&v68);
      sub_1ABD97F60((uint64_t)&v59);
      if ((v50 & 1) != 0)
      {
        if (v52 == v9)
        {
          v53 = v35 >= v9;
          v9 -= 136;
          v7 = v51;
          if (!v53)
            goto LABEL_40;
          goto LABEL_39;
        }
        v9 -= 136;
      }
      else
      {
        v42 = v34 - 136;
        if (v52 == v34)
        {
          v53 = v35 >= v34;
          v34 -= 136;
          v7 = v51;
          if (!v53)
            goto LABEL_40;
          goto LABEL_39;
        }
        v34 -= 136;
      }
      v7 = v51;
LABEL_39:
      memmove(v35, v42, 0x88uLL);
LABEL_40:
      if (v34 <= v7 || v9 <= v55)
      {
        v77 = v34;
        v79 = v9;
        goto LABEL_50;
      }
      v35 -= 136;
    }
  }
  if (v11 < -135)
  {
LABEL_51:
    swift_release();
    result = sub_1ABF3202C();
    __break(1u);
    return result;
  }
  if (__dst != __src || &__src[136 * v12] <= __dst)
    memmove(__dst, __src, 136 * v12);
  v15 = &v7[136 * v12];
  v77 = v15;
  if ((unint64_t)v9 >= a3 || v11 < 136)
    goto LABEL_50;
  v16 = v7;
  while (1)
  {
    v59 = *(_OWORD *)v9;
    v17 = *((_OWORD *)v9 + 1);
    v18 = *((_OWORD *)v9 + 2);
    v19 = *((_OWORD *)v9 + 4);
    v62 = *((_OWORD *)v9 + 3);
    v63 = v19;
    v60 = v17;
    v61 = v18;
    v20 = *((_OWORD *)v9 + 5);
    v21 = *((_OWORD *)v9 + 6);
    v22 = *((_OWORD *)v9 + 7);
    v67 = *((_QWORD *)v9 + 16);
    v65 = v21;
    v66 = v22;
    v64 = v20;
    memmove(__dsta, v9, 0x88uLL);
    v68 = *(_OWORD *)v16;
    v23 = *((_OWORD *)v16 + 1);
    v24 = *((_OWORD *)v16 + 2);
    v25 = *((_OWORD *)v16 + 4);
    v71 = *((_OWORD *)v16 + 3);
    v72 = v25;
    v69 = v23;
    v70 = v24;
    v26 = *((_OWORD *)v16 + 5);
    v27 = *((_OWORD *)v16 + 6);
    v28 = *((_OWORD *)v16 + 7);
    v76 = *((_QWORD *)v16 + 16);
    v74 = v27;
    v75 = v28;
    v73 = v26;
    memmove(v57, v16, 0x88uLL);
    sub_1ABD97ECC((uint64_t)&v59);
    sub_1ABD97ECC((uint64_t)&v68);
    v29 = sub_1ABE8FC8C((uint64_t)__dsta, (uint64_t)v57, v56);
    if (v6)
    {
      v78 = v7;
      v79 = v10;
      goto LABEL_46;
    }
    v30 = v29;
    sub_1ABD97F60((uint64_t)&v68);
    sub_1ABD97F60((uint64_t)&v59);
    if ((v30 & 1) == 0)
    {
      v7 = v16 + 136;
      v31 = v16;
      v32 = v10 == v16;
      v16 += 136;
      if (v32)
        goto LABEL_16;
LABEL_15:
      memmove(v10, v31, 0x88uLL);
      goto LABEL_16;
    }
    v31 = v9;
    v32 = v10 == v9;
    v9 += 136;
    if (!v32)
      goto LABEL_15;
LABEL_16:
    v33 = v10 + 136;
    if (v16 >= v15)
    {
      v78 = v7;
      goto LABEL_49;
    }
    if ((unint64_t)v9 >= a3)
      break;
    v10 += 136;
  }
  v78 = v7;
  v33 = v10 + 136;
LABEL_49:
  v79 = v33;
LABEL_50:
  sub_1ABE8BF98((void **)&v79, &v78, &v77);
  swift_release();
  return 1;
}

char *sub_1ABE8BC6C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABCF5A54(0, (unint64_t *)&unk_1ED347060, (uint64_t (*)(uint64_t))sub_1ABE92C14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1ABE8BD78(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1ABF3202C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1ABE8BE20(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -48)
  {
    result = (char *)sub_1ABF3202C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = 48 * (v4 / 48);
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1ABE8BED8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -144)
  {
    result = (char *)sub_1ABF3202C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 144;
    if (result != v3 || result >= &v3[144 * v6])
      return (char *)memmove(result, v3, 144 * v6);
  }
  return result;
}

char *sub_1ABE8BF98(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -136)
  {
    result = (char *)sub_1ABF3202C();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 136;
    if (result != v3 || result >= &v3[136 * v6])
      return (char *)memmove(result, v3, 136 * v6);
  }
  return result;
}

char *sub_1ABE8C050(uint64_t a1)
{
  return sub_1ABE8BC6C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ABE8C064(uint64_t a1)
{
  return sub_1ABD16430(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ABE8C078(uint64_t a1)
{
  return sub_1ABDB55F4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ABE8C08C(uint64_t a1)
{
  return sub_1ABD15178(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1ABE8C0A0(uint64_t a1)
{
  return sub_1ABD080D4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

BOOL sub_1ABE8C0B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  double v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  double v36;
  char v37;
  int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;

  LODWORD(v4) = a4;
  v8 = a4 & 1;
  sub_1ABCF5A54(0, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v39 - v13;
  v41 = *(_QWORD *)(a2 + 16);
  v42 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a3 + 16))
  {
    v23 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v14, 1, 1, v23);
    goto LABEL_7;
  }
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  sub_1ABF2FF5C();
  v17 = sub_1ABD00F9C(v15, v16);
  if ((v18 & 1) != 0)
  {
    v19 = v17;
    v39 = v4;
    v4 = *(_QWORD *)(a3 + 56);
    v20 = type metadata accessor for Quote();
    v40 = v8;
    v21 = *(_QWORD *)(v20 - 8);
    v22 = v4 + *(_QWORD *)(v21 + 72) * v19;
    LOBYTE(v4) = v39;
    sub_1ABE92BD0(v22, (uint64_t)v14);
    v8 = v40;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v14, 0, 1, v20);
  }
  else
  {
    v20 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v14, 1, v20) == 1)
  {
LABEL_7:
    sub_1ABE5DBB8((uint64_t)v14);
    v24 = 1;
    v25 = 0.0;
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_8;
LABEL_11:
    v34 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v12, 1, 1, v34);
    goto LABEL_14;
  }
  v25 = *((double *)v14 + 2);
  v24 = v14[24];
  sub_1ABE92B94((uint64_t)v14);
  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_11;
LABEL_8:
  v26 = v42;
  sub_1ABF2FF5C();
  v27 = sub_1ABD00F9C(v41, v26);
  if ((v28 & 1) != 0)
  {
    v29 = v27;
    v30 = *(_QWORD *)(a3 + 56);
    v31 = type metadata accessor for Quote();
    v32 = v4;
    v4 = *(_QWORD *)(v31 - 8);
    sub_1ABE92BD0(v30 + *(_QWORD *)(v4 + 72) * v29, (uint64_t)v12);
    v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56);
    LOBYTE(v4) = v32;
    v33(v12, 0, 1, v31);
  }
  else
  {
    v31 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v12, 1, v31) == 1)
  {
LABEL_14:
    sub_1ABE5DBB8((uint64_t)v12);
    if ((v24 & 1) != 0)
      return 0;
    return v8;
  }
  v36 = *((double *)v12 + 2);
  v37 = v12[24];
  sub_1ABE92B94((uint64_t)v12);
  if ((v24 & 1) != 0)
  {
    v8 = (v4 & 1) == 0;
    if ((v37 & 1) == 0)
      return v8;
    return 0;
  }
  if ((v37 & 1) == 0)
  {
    if ((v4 & 1) != 0)
      return v36 < v25;
    else
      return v25 < v36;
  }
  return v8;
}

uint64_t sub_1ABE8C3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  int v44;
  double v45;
  __int128 v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  double v71;
  char v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;

  sub_1ABCF5A54(0, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v13);
  v81 = a3;
  v76 = a2;
  if (a3 != a2)
  {
    v18 = (char *)&v74 - v17;
    v19 = *a4;
    v79 = v15;
    v80 = v19;
    v20 = (__int128 *)(v19 + 136 * v81);
    v75 = a1 + 1;
    v78 = (char *)&v74 - v17;
LABEL_6:
    v21 = v75;
    v77 = v20;
    while (1)
    {
      v110 = v21;
      v92 = *v20;
      v22 = v20[1];
      v23 = v20[2];
      v24 = v20[4];
      v95 = v20[3];
      v96 = v24;
      v93 = v22;
      v94 = v23;
      v25 = v20[5];
      v26 = v20[6];
      v27 = v20[7];
      v100 = *((_QWORD *)v20 + 16);
      v98 = v26;
      v99 = v27;
      v97 = v25;
      v101 = *(__int128 *)((char *)v20 - 136);
      v28 = *(__int128 *)((char *)v20 - 120);
      v29 = *(__int128 *)((char *)v20 - 104);
      v30 = *(__int128 *)((char *)v20 - 72);
      v104 = *(__int128 *)((char *)v20 - 88);
      v105 = v30;
      v102 = v28;
      v103 = v29;
      v31 = *(__int128 *)((char *)v20 - 56);
      v32 = *(__int128 *)((char *)v20 - 40);
      v33 = *(__int128 *)((char *)v20 - 24);
      v109 = *((_QWORD *)v20 - 1);
      v107 = v32;
      v108 = v33;
      v106 = v31;
      if (!*(_QWORD *)(a5 + 16))
        break;
      v34 = v93;
      sub_1ABD97ECC((uint64_t)&v92);
      sub_1ABD97ECC((uint64_t)&v101);
      sub_1ABF2FF5C();
      v35 = sub_1ABD00F9C(v34, *((uint64_t *)&v34 + 1));
      if ((v36 & 1) != 0)
      {
        v37 = v35;
        v38 = *(_QWORD *)(a5 + 56);
        v39 = type metadata accessor for Quote();
        v40 = *(_QWORD *)(v39 - 8);
        v41 = v38 + *(_QWORD *)(v40 + 72) * v37;
        v18 = v78;
        sub_1ABE92BD0(v41, (uint64_t)v78);
        v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
        v15 = v79;
        v42(v18, 0, 1, v39);
      }
      else
      {
        v39 = type metadata accessor for Quote();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v18, 1, 1, v39);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for Quote();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v18, 1, v39) == 1)
        goto LABEL_13;
      v45 = *((double *)v18 + 2);
      v44 = v18[24];
      sub_1ABE92B94((uint64_t)v18);
      if (!*(_QWORD *)(a5 + 16))
      {
LABEL_17:
        v56 = type metadata accessor for Quote();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v15, 1, 1, v56);
LABEL_20:
        sub_1ABE5DBB8((uint64_t)v15);
        if ((v44 & 1) != 0)
          goto LABEL_4;
LABEL_21:
        sub_1ABD97F60((uint64_t)&v101);
        result = sub_1ABD97F60((uint64_t)&v92);
        v57 = v110;
        if ((a6 & 1) == 0)
          goto LABEL_5;
        goto LABEL_22;
      }
LABEL_14:
      v82 = v44;
      v46 = v102;
      sub_1ABF2FF5C();
      v47 = sub_1ABD00F9C(v46, *((uint64_t *)&v46 + 1));
      if ((v48 & 1) != 0)
      {
        v49 = v47;
        v50 = *(_QWORD *)(a5 + 56);
        v51 = type metadata accessor for Quote();
        v52 = a6;
        v53 = *(_QWORD *)(v51 - 8);
        v54 = v50 + *(_QWORD *)(v53 + 72) * v49;
        v15 = v79;
        sub_1ABE92BD0(v54, (uint64_t)v79);
        v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56);
        a6 = v52;
        v18 = v78;
        v55(v15, 0, 1, v51);
      }
      else
      {
        v51 = type metadata accessor for Quote();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v15, 1, 1, v51);
      }
      LOBYTE(v44) = v82;
      swift_bridgeObjectRelease();
      type metadata accessor for Quote();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v15, 1, v51) == 1)
        goto LABEL_20;
      v71 = *((double *)v15 + 2);
      v72 = v15[24];
      sub_1ABE92B94((uint64_t)v15);
      if ((v44 & 1) != 0)
      {
        if ((v72 & 1) != 0)
        {
LABEL_4:
          sub_1ABD97F60((uint64_t)&v101);
          result = sub_1ABD97F60((uint64_t)&v92);
LABEL_5:
          v20 = (__int128 *)((char *)v77 + 136);
          if (++v81 == v76)
            return result;
          goto LABEL_6;
        }
        sub_1ABD97F60((uint64_t)&v101);
        result = sub_1ABD97F60((uint64_t)&v92);
        v57 = v110;
        if ((a6 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        if ((v72 & 1) != 0)
          goto LABEL_21;
        sub_1ABD97F60((uint64_t)&v101);
        result = sub_1ABD97F60((uint64_t)&v92);
        if ((a6 & 1) != 0)
          v73 = v71 < v45;
        else
          v73 = v45 < v71;
        v57 = v110;
        if (!v73)
          goto LABEL_5;
      }
LABEL_22:
      if (!v80)
      {
        __break(1u);
        return result;
      }
      v58 = (uint64_t)v20 - 136;
      v59 = v20[7];
      v89 = v20[6];
      v90 = v59;
      v91 = *((_QWORD *)v20 + 16);
      v60 = v20[3];
      v85 = v20[2];
      v86 = v60;
      v61 = v20[5];
      v87 = v20[4];
      v88 = v61;
      v62 = v20[1];
      v83 = *v20;
      v84 = v62;
      v63 = *(__int128 *)((char *)v20 - 56);
      v20[4] = *(__int128 *)((char *)v20 - 72);
      v20[5] = v63;
      v64 = *(__int128 *)((char *)v20 - 24);
      v20[6] = *(__int128 *)((char *)v20 - 40);
      v20[7] = v64;
      *((_QWORD *)v20 + 16) = *((_QWORD *)v20 - 1);
      v65 = *(__int128 *)((char *)v20 - 88);
      v20[2] = *(__int128 *)((char *)v20 - 104);
      v20[3] = v65;
      v66 = *(__int128 *)((char *)v20 - 120);
      *v20 = *(__int128 *)((char *)v20 - 136);
      v20[1] = v66;
      v67 = v88;
      *(_OWORD *)(v58 + 64) = v87;
      *(_OWORD *)(v58 + 80) = v67;
      v68 = v90;
      *(_OWORD *)(v58 + 96) = v89;
      *(_OWORD *)(v58 + 112) = v68;
      *(_QWORD *)(v58 + 128) = v91;
      v69 = v86;
      *(_OWORD *)(v58 + 32) = v85;
      *(_OWORD *)(v58 + 48) = v69;
      v70 = v84;
      *(_OWORD *)v58 = v83;
      *(_OWORD *)(v58 + 16) = v70;
      if (v81 == v57)
        goto LABEL_5;
      v21 = v57 + 1;
      v20 = (__int128 *)((char *)v20 - 136);
    }
    v43 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v18, 1, 1, v43);
    sub_1ABD97ECC((uint64_t)&v92);
    sub_1ABD97ECC((uint64_t)&v101);
LABEL_13:
    sub_1ABE5DBB8((uint64_t)v18);
    v44 = 1;
    v45 = 0.0;
    if (!*(_QWORD *)(a5 + 16))
      goto LABEL_17;
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1ABE8C8E0(uint64_t *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  unint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  double v70;
  uint64_t v71;
  __int128 v72;
  unint64_t v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  double v84;
  uint64_t v85;
  char v86;
  unsigned int v87;
  BOOL v88;
  _OWORD *v89;
  char *v90;
  char *v91;
  _OWORD *v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  unint64_t v110;
  char v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v117;
  char v118;
  double v119;
  __int128 v120;
  unint64_t v121;
  char v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  char *v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  double v135;
  char v136;
  BOOL v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  char *v141;
  char *v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  unint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  BOOL v164;
  uint64_t v165;
  char v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  BOOL v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  char *v183;
  uint64_t v184;
  unint64_t v185;
  char *v186;
  uint64_t v187;
  char *v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  unint64_t v195;
  char *v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char *v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t result;
  uint64_t v210;
  unint64_t v211;
  uint64_t *v212;
  _BOOL4 v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  char *v229;
  unsigned int v230;
  uint64_t v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  uint64_t v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  uint64_t v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  uint64_t v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  uint64_t v267;
  char *v268;

  v230 = a4 & 1;
  sub_1ABCF5A54(0, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v210 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v210 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v218 = (uint64_t)&v210 - v15;
  MEMORY[0x1E0C80A78](v14);
  v217 = (uint64_t)&v210 - v16;
  v17 = a1[1];
  swift_bridgeObjectRetain_n();
  v223 = a3;
  swift_retain_n();
  v18 = sub_1ABF321E8();
  if (v18 >= v17)
  {
    if (v17 < 0)
      goto LABEL_196;
    if (v17)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF68();
      v22 = v226;
      sub_1ABE8C3E8(0, v17, 1, a1, a2, v230);
      swift_bridgeObjectRelease_n();
      swift_release_n();
      v226 = v22;
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_172;
  }
  if (v17 >= 0)
    v19 = v17;
  else
    v19 = v17 + 1;
  if (v17 < -1)
    goto LABEL_204;
  v228 = a2;
  v219 = (char *)v17;
  v215 = v18;
  v212 = a1;
  if (v17 < 2)
  {
    v23 = (char *)MEMORY[0x1E0DEE9D8];
    v221 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v214 = MEMORY[0x1E0DEE9D8];
    if (v17 != 1)
    {
      v140 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_158:
      if (v140 >= 2)
      {
        v197 = *v212;
        v229 = (char *)*v212;
        do
        {
          v198 = v140 - 2;
          if (v140 < 2)
            goto LABEL_190;
          if (!v197)
            goto LABEL_203;
          v199 = *(_QWORD *)&v23[16 * v198 + 32];
          v200 = *(_QWORD *)&v23[16 * v140 + 24];
          v201 = (char *)(v197 + 136 * v199);
          v268 = (char *)(v197 + 136 * *(_QWORD *)&v23[16 * v140 + 16]);
          v231 = v197 + 136 * v200;
          v202 = v228;
          sub_1ABF2FF5C();
          v203 = v223;
          sub_1ABF2FF68();
          v204 = v201;
          v205 = v226;
          sub_1ABE8E6F4(v204, v268, v231, v221, v202, v203, v230, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1ABE8C0B4);
          v226 = v205;
          if (v205)
            goto LABEL_155;
          swift_release();
          if (v200 < v199)
            goto LABEL_192;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v23 = sub_1ABE8C050((uint64_t)v23);
          if (v198 >= *((_QWORD *)v23 + 2))
            goto LABEL_193;
          v206 = &v23[16 * v198 + 32];
          *(_QWORD *)v206 = v199;
          *((_QWORD *)v206 + 1) = v200;
          v207 = *((_QWORD *)v23 + 2);
          if (v140 > v207)
            goto LABEL_194;
          memmove(&v23[16 * v140 + 16], &v23[16 * v140 + 32], 16 * (v207 - v140));
          *((_QWORD *)v23 + 2) = v207 - 1;
          v140 = v207 - 1;
          v197 = (uint64_t)v229;
        }
        while (v207 > 2);
      }
      swift_bridgeObjectRelease();
LABEL_170:
      v208 = v214;
      goto LABEL_171;
    }
  }
  else
  {
    v20 = v19 >> 1;
    v21 = sub_1ABF31A74();
    *(_QWORD *)(v21 + 16) = v20;
    v214 = v21;
    v221 = (char *)(v21 + 32);
  }
  v24 = 0;
  v25 = *a1;
  v213 = v230 == 0;
  v231 = v25;
  v211 = v25 - 136;
  v23 = (char *)MEMORY[0x1E0DEE9D8];
  v229 = v10;
  v26 = (uint64_t)v219;
  v227 = v13;
  while (1)
  {
    v27 = (char *)(v24 + 1);
    v222 = v23;
    v216 = v24;
    if (v24 + 1 >= v26)
    {
      v83 = (char *)(v24 + 1);
      goto LABEL_63;
    }
    v28 = v24;
    v29 = v231 + 136 * (_QWORD)v27;
    v250 = *(_OWORD *)v29;
    v30 = *(_OWORD *)(v29 + 16);
    v31 = *(_OWORD *)(v29 + 32);
    v32 = *(_OWORD *)(v29 + 64);
    v253 = *(_OWORD *)(v29 + 48);
    v254 = v32;
    v251 = v30;
    v252 = v31;
    v33 = *(_OWORD *)(v29 + 80);
    v34 = *(_OWORD *)(v29 + 96);
    v35 = *(_OWORD *)(v29 + 112);
    v258 = *(_QWORD *)(v29 + 128);
    v256 = v34;
    v257 = v35;
    v255 = v33;
    v246 = *(_OWORD *)(v29 + 80);
    v247 = *(_OWORD *)(v29 + 96);
    v248 = *(_OWORD *)(v29 + 112);
    v249 = *(_QWORD *)(v29 + 128);
    v242 = *(_OWORD *)(v29 + 16);
    v243 = *(_OWORD *)(v29 + 32);
    v244 = *(_OWORD *)(v29 + 48);
    v245 = *(_OWORD *)(v29 + 64);
    v241 = *(_OWORD *)v29;
    v36 = v231 + 136 * v24;
    v259 = *(_OWORD *)v36;
    v37 = *(_OWORD *)(v36 + 16);
    v38 = *(_OWORD *)(v36 + 32);
    v39 = *(_OWORD *)(v36 + 64);
    v262 = *(_OWORD *)(v36 + 48);
    v263 = v39;
    v260 = v37;
    v261 = v38;
    v40 = *(_OWORD *)(v36 + 80);
    v41 = *(_OWORD *)(v36 + 96);
    v42 = *(_OWORD *)(v36 + 112);
    v267 = *(_QWORD *)(v36 + 128);
    v265 = v41;
    v266 = v42;
    v264 = v40;
    v237 = *(_OWORD *)(v36 + 80);
    v238 = *(_OWORD *)(v36 + 96);
    v239 = *(_OWORD *)(v36 + 112);
    v240 = *(_QWORD *)(v36 + 128);
    v233 = *(_OWORD *)(v36 + 16);
    v234 = *(_OWORD *)(v36 + 32);
    v235 = *(_OWORD *)(v36 + 48);
    v236 = *(_OWORD *)(v36 + 64);
    v232 = *(_OWORD *)v36;
    sub_1ABD97ECC((uint64_t)&v250);
    sub_1ABD97ECC((uint64_t)&v259);
    v43 = v226;
    LODWORD(v268) = sub_1ABE8C0B4((uint64_t)&v241, (uint64_t)&v232, a2, v230);
    v226 = v43;
    if (v43)
    {
      sub_1ABD97F60((uint64_t)&v259);
      sub_1ABD97F60((uint64_t)&v250);
      swift_bridgeObjectRelease();
      v208 = v214;
LABEL_171:
      *(_QWORD *)(v208 + 16) = 0;
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
LABEL_172:
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    sub_1ABD97F60((uint64_t)&v259);
    sub_1ABD97F60((uint64_t)&v250);
    v44 = (char *)(v28 + 2);
    if (v28 + 2 >= (uint64_t)v219)
    {
LABEL_51:
      if ((v268 & 1) != 0)
        goto LABEL_54;
LABEL_61:
      v83 = v44;
      goto LABEL_63;
    }
    while (1)
    {
      v45 = v231 + 136 * (_QWORD)v44;
      v232 = *(_OWORD *)v45;
      v46 = *(_OWORD *)(v45 + 16);
      v47 = *(_OWORD *)(v45 + 32);
      v48 = *(_OWORD *)(v45 + 64);
      v235 = *(_OWORD *)(v45 + 48);
      v236 = v48;
      v233 = v46;
      v234 = v47;
      v49 = *(_OWORD *)(v45 + 80);
      v50 = *(_OWORD *)(v45 + 96);
      v51 = *(_OWORD *)(v45 + 112);
      v240 = *(_QWORD *)(v45 + 128);
      v238 = v50;
      v239 = v51;
      v237 = v49;
      v52 = v231 + 136 * (_QWORD)v27;
      v241 = *(_OWORD *)v52;
      v53 = *(_OWORD *)(v52 + 16);
      v54 = *(_OWORD *)(v52 + 32);
      v55 = *(_OWORD *)(v52 + 64);
      v244 = *(_OWORD *)(v52 + 48);
      v245 = v55;
      v242 = v53;
      v243 = v54;
      v56 = *(_OWORD *)(v52 + 80);
      v57 = *(_OWORD *)(v52 + 96);
      v58 = *(_OWORD *)(v52 + 112);
      v249 = *(_QWORD *)(v52 + 128);
      v247 = v57;
      v248 = v58;
      v246 = v56;
      if (!*(_QWORD *)(a2 + 16))
      {
        v68 = type metadata accessor for Quote();
        v67 = v217;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v217, 1, 1, v68);
        sub_1ABD97ECC((uint64_t)&v232);
        sub_1ABD97ECC((uint64_t)&v241);
LABEL_24:
        sub_1ABE5DBB8(v67);
        v69 = 1;
        v70 = 0.0;
        goto LABEL_26;
      }
      v59 = v233;
      sub_1ABD97ECC((uint64_t)&v232);
      sub_1ABD97ECC((uint64_t)&v241);
      sub_1ABF2FF5C();
      v60 = sub_1ABD00F9C(v59, *((uint64_t *)&v59 + 1));
      if ((v61 & 1) != 0)
      {
        v62 = v60;
        v63 = *(_QWORD *)(a2 + 56);
        v64 = type metadata accessor for Quote();
        v65 = *(_QWORD *)(v64 - 8);
        v66 = v63 + *(_QWORD *)(v65 + 72) * v62;
        v67 = v217;
        sub_1ABE92BD0(v66, v217);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v67, 0, 1, v64);
      }
      else
      {
        v64 = type metadata accessor for Quote();
        v67 = v217;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v217, 1, 1, v64);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for Quote();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v67, 1, v64) == 1)
        goto LABEL_24;
      v70 = *(double *)(v67 + 16);
      v69 = *(_BYTE *)(v67 + 24);
      sub_1ABE92B94(v67);
LABEL_26:
      v71 = v228;
      if (!*(_QWORD *)(v228 + 16))
      {
        v82 = type metadata accessor for Quote();
        v80 = v218;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v218, 1, 1, v82);
LABEL_32:
        sub_1ABE5DBB8(v80);
        if ((v69 & 1) != 0)
          goto LABEL_33;
LABEL_40:
        sub_1ABD97F60((uint64_t)&v241);
        sub_1ABD97F60((uint64_t)&v232);
        v87 = v230;
        goto LABEL_41;
      }
      v72 = v242;
      sub_1ABF2FF5C();
      v73 = sub_1ABD00F9C(v72, *((uint64_t *)&v72 + 1));
      if ((v74 & 1) != 0)
      {
        v75 = v73;
        v76 = *(_QWORD *)(v71 + 56);
        v77 = type metadata accessor for Quote();
        v78 = *(_QWORD *)(v77 - 8);
        v79 = v76 + *(_QWORD *)(v78 + 72) * v75;
        v80 = v218;
        sub_1ABE92BD0(v79, v218);
        v81 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v78 + 56);
        v23 = v222;
        v81(v80, 0, 1, v77);
      }
      else
      {
        v77 = type metadata accessor for Quote();
        v80 = v218;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v218, 1, 1, v77);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for Quote();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v80, 1, v77) == 1)
        goto LABEL_32;
      v84 = *(double *)(v80 + 16);
      v85 = v80;
      v86 = *(_BYTE *)(v80 + 24);
      sub_1ABE92B94(v85);
      if ((v69 & 1) != 0)
        break;
      if ((v86 & 1) != 0)
        goto LABEL_40;
      sub_1ABD97F60((uint64_t)&v241);
      sub_1ABD97F60((uint64_t)&v232);
      if (v230)
        v88 = v84 < v70;
      else
        v88 = v70 < v84;
      v87 = v88;
LABEL_41:
      a2 = v228;
      v10 = v229;
      if (((v268 ^ v87) & 1) != 0)
        goto LABEL_51;
      v83 = v44 + 1;
      if ((uint64_t)(v44 + 1) >= (uint64_t)v219)
      {
        ++v44;
        goto LABEL_51;
      }
LABEL_17:
      v27 = v44;
      v44 = v83;
    }
    if ((v86 & 1) == 0)
    {
      sub_1ABD97F60((uint64_t)&v241);
      sub_1ABD97F60((uint64_t)&v232);
      v87 = v213;
      goto LABEL_41;
    }
LABEL_33:
    sub_1ABD97F60((uint64_t)&v241);
    sub_1ABD97F60((uint64_t)&v232);
    if ((v268 & 1) == 0)
    {
      v83 = v44 + 1;
      a2 = v228;
      v10 = v229;
      if ((uint64_t)(v44 + 1) >= (uint64_t)v219)
        goto LABEL_63;
      goto LABEL_17;
    }
    a2 = v228;
    v10 = v229;
LABEL_54:
    if ((uint64_t)v44 < v216)
      goto LABEL_199;
    if (v216 >= (uint64_t)v44)
      goto LABEL_61;
    v89 = (_OWORD *)(v211 + 136 * (_QWORD)v44);
    v90 = v44;
    v91 = (char *)v216;
    v92 = (_OWORD *)(v231 + 136 * v216);
    do
    {
      if (v91 != --v44)
      {
        if (!v231)
          goto LABEL_202;
        v246 = v92[5];
        v247 = v92[6];
        v248 = v92[7];
        v249 = *((_QWORD *)v92 + 16);
        v242 = v92[1];
        v243 = v92[2];
        v244 = v92[3];
        v245 = v92[4];
        v241 = *v92;
        memmove(v92, v89, 0x88uLL);
        v89[5] = v246;
        v89[6] = v247;
        v89[7] = v248;
        *((_QWORD *)v89 + 16) = v249;
        v89[1] = v242;
        v89[2] = v243;
        v89[3] = v244;
        v89[4] = v245;
        *v89 = v241;
      }
      ++v91;
      v89 = (_OWORD *)((char *)v89 - 136);
      v92 = (_OWORD *)((char *)v92 + 136);
    }
    while ((uint64_t)v91 < (uint64_t)v44);
    v83 = v90;
    a2 = v228;
    v10 = v229;
LABEL_63:
    if ((uint64_t)v83 >= (uint64_t)v219)
      goto LABEL_104;
    if (__OFSUB__(v83, v216))
      goto LABEL_195;
    if ((uint64_t)&v83[-v216] >= v215)
      goto LABEL_104;
    v93 = (char *)(v216 + v215);
    if (__OFADD__(v216, v215))
      goto LABEL_197;
    if ((uint64_t)v93 >= (uint64_t)v219)
      v93 = v219;
    if ((uint64_t)v93 < v216)
      break;
    if (v83 == v93)
      goto LABEL_104;
    v224 = v93;
    v94 = (char *)(v231 + 136 * (_QWORD)v83);
    v220 = (char *)(v216 + 1);
    while (2)
    {
      v96 = v220;
      v225 = v94;
      v268 = v83;
      while (2)
      {
        v250 = *(_OWORD *)v94;
        v97 = *((_OWORD *)v94 + 1);
        v98 = *((_OWORD *)v94 + 2);
        v99 = *((_OWORD *)v94 + 4);
        v253 = *((_OWORD *)v94 + 3);
        v254 = v99;
        v251 = v97;
        v252 = v98;
        v100 = *((_OWORD *)v94 + 5);
        v101 = *((_OWORD *)v94 + 6);
        v102 = *((_OWORD *)v94 + 7);
        v258 = *((_QWORD *)v94 + 16);
        v256 = v101;
        v257 = v102;
        v255 = v100;
        v259 = *(_OWORD *)(v94 - 136);
        v103 = *(_OWORD *)(v94 - 120);
        v104 = *(_OWORD *)(v94 - 104);
        v105 = *(_OWORD *)(v94 - 72);
        v262 = *(_OWORD *)(v94 - 88);
        v263 = v105;
        v260 = v103;
        v261 = v104;
        v106 = *(_OWORD *)(v94 - 56);
        v107 = *(_OWORD *)(v94 - 40);
        v108 = *(_OWORD *)(v94 - 24);
        v267 = *((_QWORD *)v94 - 1);
        v265 = v107;
        v266 = v108;
        v264 = v106;
        if (!*(_QWORD *)(a2 + 16))
        {
          v117 = type metadata accessor for Quote();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v13, 1, 1, v117);
          sub_1ABD97ECC((uint64_t)&v250);
          sub_1ABD97ECC((uint64_t)&v259);
          goto LABEL_81;
        }
        v109 = v251;
        sub_1ABD97ECC((uint64_t)&v250);
        sub_1ABD97ECC((uint64_t)&v259);
        sub_1ABF2FF5C();
        v110 = sub_1ABD00F9C(v109, *((uint64_t *)&v109 + 1));
        if ((v111 & 1) != 0)
        {
          v112 = v110;
          v113 = *(_QWORD *)(a2 + 56);
          v114 = type metadata accessor for Quote();
          v115 = *(_QWORD *)(v114 - 8);
          sub_1ABE92BD0(v113 + *(_QWORD *)(v115 + 72) * v112, (uint64_t)v13);
          v116 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56);
          a2 = v228;
          v10 = v229;
          v116(v13, 0, 1, v114);
        }
        else
        {
          v114 = type metadata accessor for Quote();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v13, 1, 1, v114);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for Quote();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 48))(v13, 1, v114) == 1)
        {
LABEL_81:
          sub_1ABE5DBB8((uint64_t)v13);
          v118 = 1;
          v119 = 0.0;
          if (*(_QWORD *)(a2 + 16))
            goto LABEL_82;
LABEL_85:
          v129 = type metadata accessor for Quote();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v10, 1, 1, v129);
          goto LABEL_88;
        }
        v119 = *((double *)v13 + 2);
        v128 = (uint64_t)v13;
        v118 = v13[24];
        sub_1ABE92B94(v128);
        if (!*(_QWORD *)(a2 + 16))
          goto LABEL_85;
LABEL_82:
        v120 = v260;
        sub_1ABF2FF5C();
        v121 = sub_1ABD00F9C(v120, *((uint64_t *)&v120 + 1));
        if ((v122 & 1) != 0)
        {
          v123 = v121;
          v124 = *(_QWORD *)(a2 + 56);
          v125 = type metadata accessor for Quote();
          v126 = *(_QWORD *)(v125 - 8);
          sub_1ABE92BD0(v124 + *(_QWORD *)(v126 + 72) * v123, (uint64_t)v229);
          v127 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56);
          a2 = v228;
          v10 = v229;
          v127(v229, 0, 1, v125);
        }
        else
        {
          v125 = type metadata accessor for Quote();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v10, 1, 1, v125);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for Quote();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 48))(v10, 1, v125) == 1)
        {
LABEL_88:
          sub_1ABE5DBB8((uint64_t)v10);
          if ((v118 & 1) != 0)
            goto LABEL_72;
          goto LABEL_89;
        }
        v135 = *((double *)v10 + 2);
        v136 = v10[24];
        sub_1ABE92B94((uint64_t)v10);
        if ((v118 & 1) == 0)
        {
          if ((v136 & 1) != 0)
          {
LABEL_89:
            sub_1ABD97F60((uint64_t)&v259);
            sub_1ABD97F60((uint64_t)&v250);
            v13 = v227;
            v95 = v268;
            if (!v230)
              goto LABEL_73;
          }
          else
          {
            sub_1ABD97F60((uint64_t)&v259);
            sub_1ABD97F60((uint64_t)&v250);
            if (v230)
              v137 = v135 < v119;
            else
              v137 = v119 < v135;
            v13 = v227;
            v95 = v268;
            if (!v137)
              goto LABEL_73;
          }
LABEL_90:
          if (!v231)
            goto LABEL_200;
          v130 = v94 - 136;
          v246 = *((_OWORD *)v94 + 5);
          v247 = *((_OWORD *)v94 + 6);
          v248 = *((_OWORD *)v94 + 7);
          v249 = *((_QWORD *)v94 + 16);
          v242 = *((_OWORD *)v94 + 1);
          v243 = *((_OWORD *)v94 + 2);
          v244 = *((_OWORD *)v94 + 3);
          v245 = *((_OWORD *)v94 + 4);
          v241 = *(_OWORD *)v94;
          v131 = *(_OWORD *)(v94 - 56);
          *((_OWORD *)v94 + 4) = *(_OWORD *)(v94 - 72);
          *((_OWORD *)v94 + 5) = v131;
          v132 = *(_OWORD *)(v94 - 24);
          *((_OWORD *)v94 + 6) = *(_OWORD *)(v94 - 40);
          *((_OWORD *)v94 + 7) = v132;
          *((_QWORD *)v94 + 16) = *((_QWORD *)v94 - 1);
          v133 = *(_OWORD *)(v94 - 88);
          *((_OWORD *)v94 + 2) = *(_OWORD *)(v94 - 104);
          *((_OWORD *)v94 + 3) = v133;
          v134 = *(_OWORD *)(v94 - 120);
          *(_OWORD *)v94 = *(_OWORD *)(v94 - 136);
          *((_OWORD *)v94 + 1) = v134;
          *((_OWORD *)v130 + 4) = v245;
          *((_OWORD *)v130 + 5) = v246;
          *((_OWORD *)v130 + 6) = v247;
          *((_OWORD *)v130 + 7) = v248;
          *((_QWORD *)v130 + 16) = v249;
          *((_OWORD *)v130 + 1) = v242;
          *((_OWORD *)v130 + 2) = v243;
          *((_OWORD *)v130 + 3) = v244;
          *(_OWORD *)v130 = v241;
          if (v95 == v96)
            goto LABEL_73;
          ++v96;
          v94 -= 136;
          continue;
        }
        break;
      }
      if ((v136 & 1) == 0)
      {
        sub_1ABD97F60((uint64_t)&v259);
        sub_1ABD97F60((uint64_t)&v250);
        v13 = v227;
        v95 = v268;
        if (v230)
          goto LABEL_73;
        goto LABEL_90;
      }
LABEL_72:
      sub_1ABD97F60((uint64_t)&v259);
      sub_1ABD97F60((uint64_t)&v250);
      v13 = v227;
      v95 = v268;
LABEL_73:
      v83 = v95 + 1;
      v94 = v225 + 136;
      if (v83 != v224)
        continue;
      break;
    }
    v83 = v224;
    v23 = v222;
LABEL_104:
    if ((uint64_t)v83 < v216)
      goto LABEL_191;
    v268 = v83;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_1ABE8BC6C(0, *((_QWORD *)v23 + 2) + 1, 1, v23);
    v139 = *((_QWORD *)v23 + 2);
    v138 = *((_QWORD *)v23 + 3);
    v140 = v139 + 1;
    v24 = (uint64_t)v268;
    if (v139 >= v138 >> 1)
    {
      v196 = sub_1ABE8BC6C((char *)(v138 > 1), v139 + 1, 1, v23);
      v24 = (uint64_t)v268;
      v23 = v196;
    }
    *((_QWORD *)v23 + 2) = v140;
    v141 = v23 + 32;
    v142 = &v23[16 * v139 + 32];
    *(_QWORD *)v142 = v216;
    *((_QWORD *)v142 + 1) = v24;
    if (v139)
    {
      v222 = v23;
      v220 = v23 + 32;
      while (1)
      {
        v143 = v140 - 1;
        if (v140 >= 4)
        {
          v148 = &v141[16 * v140];
          v149 = *((_QWORD *)v148 - 8);
          v150 = *((_QWORD *)v148 - 7);
          v154 = __OFSUB__(v150, v149);
          v151 = v150 - v149;
          if (v154)
            goto LABEL_179;
          v153 = *((_QWORD *)v148 - 6);
          v152 = *((_QWORD *)v148 - 5);
          v154 = __OFSUB__(v152, v153);
          v146 = v152 - v153;
          v147 = v154;
          if (v154)
            goto LABEL_180;
          v155 = v140 - 2;
          v156 = &v141[16 * v140 - 32];
          v158 = *(_QWORD *)v156;
          v157 = *((_QWORD *)v156 + 1);
          v154 = __OFSUB__(v157, v158);
          v159 = v157 - v158;
          if (v154)
            goto LABEL_182;
          v154 = __OFADD__(v146, v159);
          v160 = v146 + v159;
          if (v154)
            goto LABEL_185;
          if (v160 >= v151)
          {
            v178 = &v141[16 * v143];
            v180 = *(_QWORD *)v178;
            v179 = *((_QWORD *)v178 + 1);
            v154 = __OFSUB__(v179, v180);
            v181 = v179 - v180;
            if (v154)
              goto LABEL_189;
            v171 = v146 < v181;
            goto LABEL_142;
          }
        }
        else
        {
          if (v140 != 3)
          {
            v172 = *((_QWORD *)v23 + 4);
            v173 = *((_QWORD *)v23 + 5);
            v154 = __OFSUB__(v173, v172);
            v165 = v173 - v172;
            v166 = v154;
            goto LABEL_136;
          }
          v145 = *((_QWORD *)v23 + 4);
          v144 = *((_QWORD *)v23 + 5);
          v154 = __OFSUB__(v144, v145);
          v146 = v144 - v145;
          v147 = v154;
        }
        if ((v147 & 1) != 0)
          goto LABEL_181;
        v155 = v140 - 2;
        v161 = &v141[16 * v140 - 32];
        v163 = *(_QWORD *)v161;
        v162 = *((_QWORD *)v161 + 1);
        v164 = __OFSUB__(v162, v163);
        v165 = v162 - v163;
        v166 = v164;
        if (v164)
          goto LABEL_184;
        v167 = &v141[16 * v143];
        v169 = *(_QWORD *)v167;
        v168 = *((_QWORD *)v167 + 1);
        v154 = __OFSUB__(v168, v169);
        v170 = v168 - v169;
        if (v154)
          goto LABEL_187;
        if (__OFADD__(v165, v170))
          goto LABEL_188;
        if (v165 + v170 >= v146)
        {
          v171 = v146 < v170;
LABEL_142:
          if (v171)
            v143 = v155;
          goto LABEL_144;
        }
LABEL_136:
        if ((v166 & 1) != 0)
          goto LABEL_183;
        v174 = &v141[16 * v143];
        v176 = *(_QWORD *)v174;
        v175 = *((_QWORD *)v174 + 1);
        v154 = __OFSUB__(v175, v176);
        v177 = v175 - v176;
        if (v154)
          goto LABEL_186;
        if (v177 < v165)
          goto LABEL_153;
LABEL_144:
        v182 = v143 - 1;
        if (v143 - 1 >= v140)
        {
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
          goto LABEL_198;
        }
        if (!v231)
          goto LABEL_201;
        v183 = &v141[16 * v182];
        v184 = *(_QWORD *)v183;
        v185 = v143;
        v186 = &v141[16 * v143];
        v187 = *((_QWORD *)v186 + 1);
        v188 = (char *)(v231 + 136 * *(_QWORD *)v183);
        v224 = (char *)(v231 + 136 * *(_QWORD *)v186);
        v225 = v188;
        v189 = v231 + 136 * v187;
        v190 = v228;
        sub_1ABF2FF5C();
        v191 = v223;
        sub_1ABF2FF68();
        v192 = v190;
        v193 = v226;
        sub_1ABE8E6F4(v225, v224, v189, v221, v192, v191, v230, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1ABE8C0B4);
        v226 = v193;
        if (v193)
        {
LABEL_155:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_170;
        }
        swift_release();
        if (v187 < v184)
          goto LABEL_176;
        v194 = v222;
        if (v185 > *((_QWORD *)v222 + 2))
          goto LABEL_177;
        *(_QWORD *)v183 = v184;
        v141 = v220;
        *(_QWORD *)&v220[16 * v182 + 8] = v187;
        v195 = *((_QWORD *)v194 + 2);
        if (v185 >= v195)
          goto LABEL_178;
        v23 = v194;
        v140 = v195 - 1;
        memmove(v186, v186 + 16, 16 * (v195 - 1 - v185));
        *((_QWORD *)v23 + 2) = v195 - 1;
        v171 = v195 > 2;
        a2 = v228;
        v10 = v229;
        v13 = v227;
        v24 = (uint64_t)v268;
        if (!v171)
          goto LABEL_153;
      }
    }
    v140 = 1;
LABEL_153:
    v26 = (uint64_t)v219;
    if (v24 >= (uint64_t)v219)
      goto LABEL_158;
  }
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_201:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_202:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_203:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_204:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

uint64_t sub_1ABE8DB5C(_QWORD **a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11[2];

  v7 = a4 & 1;
  v8 = *a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_1ABF20B9C(v8);
  v9 = v8[2];
  v11[0] = (uint64_t)(v8 + 4);
  v11[1] = v9;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABE8C8E0(v11, a2, a3, v7);
  swift_bridgeObjectRelease();
  swift_release();
  *a1 = v8;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

BOOL sub_1ABE8DC40(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  int v30;
  double v31;
  double v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  double v48;
  char v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  double v53;
  char v54;
  double v55;
  char v56;
  double v57;
  uint64_t v59;
  char *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;

  v61 = a4;
  sub_1ABCF5A54(0, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v60 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v59 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v59 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v59 - v16;
  v18 = *(_QWORD *)(a2 + 24);
  v62 = *(_QWORD *)(a2 + 16);
  v63 = v18;
  if (!*(_QWORD *)(a3 + 16))
  {
    v27 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 1, 1, v27);
LABEL_7:
    sub_1ABE5DBB8((uint64_t)v17);
    v30 = 1;
    v31 = 0.0;
    goto LABEL_17;
  }
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 24);
  sub_1ABF2FF5C();
  v21 = sub_1ABD00F9C(v19, v20);
  v59 = v19;
  if ((v22 & 1) != 0)
  {
    v23 = v21;
    v24 = *(_QWORD *)(a3 + 56);
    v25 = type metadata accessor for Quote();
    v26 = *(_QWORD *)(v25 - 8);
    sub_1ABE92BD0(v24 + *(_QWORD *)(v26 + 72) * v23, (uint64_t)v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v17, 0, 1, v25);
  }
  else
  {
    v25 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v17, 1, 1, v25);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  v28 = *(_QWORD *)(v25 - 8);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v29(v17, 1, v25) == 1)
    goto LABEL_7;
  v32 = *(double *)v17;
  v33 = v17[8];
  sub_1ABE92B94((uint64_t)v17);
  v31 = 0.0;
  if ((v33 & 1) != 0)
    goto LABEL_16;
  if (!*(_QWORD *)(a3 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v15, 1, 1, v25);
LABEL_15:
    sub_1ABE5DBB8((uint64_t)v15);
LABEL_16:
    v30 = 1;
    goto LABEL_17;
  }
  sub_1ABF2FF5C();
  v34 = sub_1ABD00F9C(v59, v20);
  if ((v35 & 1) != 0)
  {
    sub_1ABE92BD0(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v28 + 72) * v34, (uint64_t)v15);
    v36 = 0;
  }
  else
  {
    v36 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v15, v36, 1, v25);
  swift_bridgeObjectRelease();
  if (v29(v15, 1, v25) == 1)
    goto LABEL_15;
  v53 = *((double *)v15 + 2);
  v54 = v15[24];
  sub_1ABE92B94((uint64_t)v15);
  if ((v54 & 1) != 0)
    goto LABEL_16;
  v30 = 0;
  if (v32 - v53 <= 0.0)
    v31 = 0.0;
  else
    v31 = v53 / (v32 - v53);
LABEL_17:
  v37 = v63;
  if (!*(_QWORD *)(a3 + 16))
  {
    v44 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v12, 1, 1, v44);
LABEL_23:
    sub_1ABE5DBB8((uint64_t)v12);
    goto LABEL_24;
  }
  sub_1ABF2FF5C();
  v38 = sub_1ABD00F9C(v62, v37);
  if ((v39 & 1) != 0)
  {
    v40 = v38;
    v41 = *(_QWORD *)(a3 + 56);
    v42 = type metadata accessor for Quote();
    v43 = *(_QWORD *)(v42 - 8);
    sub_1ABE92BD0(v41 + *(_QWORD *)(v43 + 72) * v40, (uint64_t)v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v12, 0, 1, v42);
  }
  else
  {
    v42 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v12, 1, 1, v42);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  v45 = *(_QWORD *)(v42 - 8);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  if (v46(v12, 1, v42) == 1)
    goto LABEL_23;
  v48 = *(double *)v12;
  v49 = v12[8];
  sub_1ABE92B94((uint64_t)v12);
  if ((v49 & 1) != 0)
  {
LABEL_24:
    if ((v30 & 1) != 0)
      return 0;
    else
      return v61 & 1;
  }
  if (!*(_QWORD *)(a3 + 16))
  {
    v12 = v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v60, 1, 1, v42);
    goto LABEL_23;
  }
  sub_1ABF2FF5C();
  v50 = sub_1ABD00F9C(v62, v37);
  v12 = v60;
  if ((v51 & 1) != 0)
  {
    sub_1ABE92BD0(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v45 + 72) * v50, (uint64_t)v60);
    v52 = 0;
  }
  else
  {
    v52 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v12, v52, 1, v42);
  swift_bridgeObjectRelease();
  if (v46(v12, 1, v42) == 1)
    goto LABEL_23;
  v55 = *((double *)v12 + 2);
  v56 = v12[24];
  sub_1ABE92B94((uint64_t)v12);
  if ((v56 & 1) != 0)
    goto LABEL_24;
  v57 = 0.0;
  if (v48 - v55 > 0.0)
    v57 = v55 / (v48 - v55);
  if (v30)
    return (v61 & 1) == 0;
  if ((v61 & 1) != 0)
    return v57 < v31;
  else
    return v31 < v57;
}

BOOL sub_1ABE8E130(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  double v42;
  char v43;
  uint64_t v44;
  char *v45;
  double v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  char v66;
  int v67;
  double v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;

  v5 = v4;
  v79 = a4;
  sub_1ABCF5A54(0, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v78 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v74 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v74 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v74 - v18;
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 24);
  v22 = *(_QWORD *)(a2 + 16);
  v80 = *(_QWORD *)(a2 + 24);
  v23 = *(_QWORD *)(a3 + 16);
  v77 = v20;
  if (!v23)
  {
    v32 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v19, 1, 1, v32);
LABEL_7:
    sub_1ABE5DBB8((uint64_t)v19);
    goto LABEL_8;
  }
  v76 = v5;
  sub_1ABF2FF5C();
  v24 = sub_1ABD00F9C(v20, v21);
  if ((v25 & 1) != 0)
  {
    v26 = v24;
    v75 = v14;
    v27 = v22;
    v28 = *(_QWORD *)(a3 + 56);
    v29 = type metadata accessor for Quote();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = v28 + *(_QWORD *)(v30 + 72) * v26;
    v22 = v27;
    v14 = v75;
    sub_1ABE92BD0(v31, (uint64_t)v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v19, 0, 1, v29);
  }
  else
  {
    v29 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v19, 1, 1, v29);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v19, 1, v29) == 1)
    goto LABEL_7;
  v42 = *((double *)v19 + 4);
  v43 = v19[40];
  sub_1ABE92B94((uint64_t)v19);
  if ((v43 & 1) == 0 && v42 == 0.0)
    goto LABEL_18;
LABEL_8:
  if (!*(_QWORD *)(a3 + 16))
  {
    v44 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v17, 1, 1, v44);
LABEL_17:
    sub_1ABE5DBB8((uint64_t)v17);
LABEL_18:
    LODWORD(v45) = 1;
    v46 = 0.0;
    goto LABEL_20;
  }
  sub_1ABF2FF5C();
  v33 = sub_1ABD00F9C(v77, v21);
  if ((v34 & 1) != 0)
  {
    v35 = v33;
    v36 = *(_QWORD *)(a3 + 56);
    v37 = type metadata accessor for Quote();
    v77 = a3;
    v38 = v14;
    v39 = v22;
    v40 = *(_QWORD *)(v37 - 8);
    sub_1ABE92BD0(v36 + *(_QWORD *)(v40 + 72) * v35, (uint64_t)v17);
    v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
    v22 = v39;
    v14 = v38;
    a3 = v77;
    v41(v17, 0, 1, v37);
  }
  else
  {
    v37 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v17, 1, 1, v37);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v17, 1, v37) == 1)
    goto LABEL_17;
  v46 = *((double *)v17 + 4);
  LODWORD(v45) = v17[40];
  sub_1ABE92B94((uint64_t)v17);
LABEL_20:
  v47 = v80;
  if (!*(_QWORD *)(a3 + 16))
  {
    v56 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v14, 1, 1, v56);
LABEL_26:
    sub_1ABE5DBB8((uint64_t)v14);
    goto LABEL_27;
  }
  sub_1ABF2FF5C();
  v48 = sub_1ABD00F9C(v22, v47);
  if ((v49 & 1) != 0)
  {
    v50 = v48;
    LODWORD(v80) = (_DWORD)v45;
    v45 = v14;
    v51 = v22;
    v52 = *(_QWORD *)(a3 + 56);
    v53 = type metadata accessor for Quote();
    v54 = *(_QWORD *)(v53 - 8);
    v55 = v52 + *(_QWORD *)(v54 + 72) * v50;
    v22 = v51;
    v14 = v45;
    LOBYTE(v45) = v80;
    sub_1ABE92BD0(v55, (uint64_t)v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v14, 0, 1, v53);
  }
  else
  {
    v53 = type metadata accessor for Quote();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v14, 1, 1, v53);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Quote();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v14, 1, v53) == 1)
    goto LABEL_26;
  v65 = *((double *)v14 + 4);
  v66 = v14[40];
  sub_1ABE92B94((uint64_t)v14);
  if ((v66 & 1) == 0 && v65 == 0.0)
  {
    v67 = 1;
    v68 = 0.0;
    v69 = v79;
    v70 = v79;
    if ((v45 & 1) != 0)
      return ((v70 & 1) == 0) & ~v67;
    goto LABEL_40;
  }
LABEL_27:
  if (*(_QWORD *)(a3 + 16))
  {
    sub_1ABF2FF5C();
    v57 = sub_1ABD00F9C(v22, v47);
    if ((v58 & 1) != 0)
    {
      v59 = v57;
      v60 = *(_QWORD *)(a3 + 56);
      v61 = type metadata accessor for Quote();
      v62 = *(_QWORD *)(v61 - 8);
      v63 = v60 + *(_QWORD *)(v62 + 72) * v59;
      v64 = v78;
      sub_1ABE92BD0(v63, v78);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v64, 0, 1, v61);
    }
    else
    {
      v61 = type metadata accessor for Quote();
      v64 = v78;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v78, 1, 1, v61);
    }
    v69 = v79;
    swift_bridgeObjectRelease();
    type metadata accessor for Quote();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48))(v64, 1, v61) != 1)
    {
      v68 = *(double *)(v64 + 32);
      v67 = *(unsigned __int8 *)(v64 + 40);
      sub_1ABE92B94(v64);
      v70 = v69;
      if ((v45 & 1) != 0)
        return ((v70 & 1) == 0) & ~v67;
      goto LABEL_40;
    }
  }
  else
  {
    v71 = type metadata accessor for Quote();
    v64 = v78;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v78, 1, 1, v71);
    v69 = v79;
  }
  sub_1ABE5DBB8(v64);
  v67 = 1;
  v68 = 0.0;
  v70 = v69;
  if ((v45 & 1) != 0)
    return ((v70 & 1) == 0) & ~v67;
LABEL_40:
  if ((v67 & 1) != 0)
    return v69 & 1;
  if ((v70 & 1) != 0)
    return v68 < v46;
  else
    return v46 < v68;
}

uint64_t sub_1ABE8E6F4(char *a1, char *__src, unint64_t a3, char *a4, uint64_t a5, uint64_t a6, char a7, uint64_t (*a8)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v8;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  char v33;
  char *v34;
  char *v35;
  BOOL v36;
  char *v37;
  char *v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  char v53;
  char v54;
  uint64_t v55;
  char *v56;
  BOOL v57;
  char *v58;
  uint64_t result;
  uint64_t (*v60)(_QWORD, _QWORD, _QWORD, _QWORD);
  unsigned int v62;
  char *__srca;
  _BYTE v64[136];
  _BYTE v65[136];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;

  v12 = __src;
  v62 = a7 & 1;
  v13 = __src - a1;
  v14 = (__src - a1) / 136;
  v15 = a3 - (_QWORD)__src;
  v16 = (uint64_t)(a3 - (_QWORD)__src) / 136;
  __srca = a1;
  v86 = a1;
  v85 = a4;
  if (v14 >= v16)
  {
    if (v15 < -135)
      goto LABEL_50;
    if (a4 != __src || &__src[136 * v16] <= a4)
      memmove(a4, __src, 136 * v16);
    v38 = &a4[136 * v16];
    v84 = v38;
    v86 = v12;
    if (__srca >= v12 || v15 < 136)
      goto LABEL_49;
    v39 = (char *)(a3 - 136);
    v60 = a8;
    while (1)
    {
      v66 = *(_OWORD *)(v38 - 136);
      v40 = *(_OWORD *)(v38 - 120);
      v41 = *(_OWORD *)(v38 - 104);
      v42 = *(_OWORD *)(v38 - 72);
      v69 = *(_OWORD *)(v38 - 88);
      v70 = v42;
      v67 = v40;
      v68 = v41;
      v43 = *(_OWORD *)(v38 - 56);
      v44 = *(_OWORD *)(v38 - 40);
      v45 = *(_OWORD *)(v38 - 24);
      v74 = *((_QWORD *)v38 - 1);
      v72 = v44;
      v73 = v45;
      v71 = v43;
      memmove(v65, v38 - 136, 0x88uLL);
      v46 = v12 - 136;
      v75 = *(_OWORD *)(v12 - 136);
      v47 = *(_OWORD *)(v12 - 120);
      v48 = *(_OWORD *)(v12 - 104);
      v49 = *(_OWORD *)(v12 - 72);
      v78 = *(_OWORD *)(v12 - 88);
      v79 = v49;
      v76 = v47;
      v77 = v48;
      v50 = *(_OWORD *)(v12 - 56);
      v51 = *(_OWORD *)(v12 - 40);
      v52 = *(_OWORD *)(v12 - 24);
      v83 = *((_QWORD *)v12 - 1);
      v81 = v51;
      v82 = v52;
      v80 = v50;
      memmove(v64, v12 - 136, 0x88uLL);
      sub_1ABD97ECC((uint64_t)&v66);
      sub_1ABD97ECC((uint64_t)&v75);
      v53 = a8(v65, v64, a5, v62);
      if (v8)
      {
        v84 = v38;
        v86 = v12;
LABEL_45:
        sub_1ABD97F60((uint64_t)&v75);
        sub_1ABD97F60((uint64_t)&v66);
        goto LABEL_49;
      }
      v54 = v53;
      v55 = a5;
      v56 = v39 + 136;
      sub_1ABD97F60((uint64_t)&v75);
      sub_1ABD97F60((uint64_t)&v66);
      if ((v54 & 1) != 0)
      {
        if (v56 == v12)
        {
          v57 = v39 >= v12;
          v12 -= 136;
          goto LABEL_32;
        }
        v12 -= 136;
      }
      else
      {
        v46 = v38 - 136;
        if (v56 == v38)
        {
          v57 = v39 >= v38;
          v38 -= 136;
LABEL_32:
          a5 = v55;
          v58 = __srca;
          if (!v57)
            goto LABEL_39;
          goto LABEL_38;
        }
        v38 -= 136;
      }
      a5 = v55;
      v58 = __srca;
LABEL_38:
      memmove(v39, v46, 0x88uLL);
LABEL_39:
      a8 = v60;
      if (v38 <= a4 || v12 <= v58)
      {
        v84 = v38;
        v86 = v12;
        goto LABEL_49;
      }
      v39 -= 136;
    }
  }
  if (v13 < -135)
  {
LABEL_50:
    swift_release();
    swift_bridgeObjectRelease();
    result = sub_1ABF3202C();
    __break(1u);
    return result;
  }
  v17 = a4;
  if (a4 != a1 || &a1[136 * v14] <= a4)
    memmove(a4, a1, 136 * v14);
  v18 = &a4[136 * v14];
  v84 = v18;
  if ((unint64_t)v12 >= a3 || v13 < 136)
    goto LABEL_49;
  v19 = a4;
  while (1)
  {
    v66 = *(_OWORD *)v12;
    v20 = *((_OWORD *)v12 + 1);
    v21 = *((_OWORD *)v12 + 2);
    v22 = *((_OWORD *)v12 + 4);
    v69 = *((_OWORD *)v12 + 3);
    v70 = v22;
    v67 = v20;
    v68 = v21;
    v23 = *((_OWORD *)v12 + 5);
    v24 = *((_OWORD *)v12 + 6);
    v25 = *((_OWORD *)v12 + 7);
    v74 = *((_QWORD *)v12 + 16);
    v72 = v24;
    v73 = v25;
    v71 = v23;
    memmove(v65, v12, 0x88uLL);
    v75 = *(_OWORD *)v17;
    v26 = *((_OWORD *)v17 + 1);
    v27 = *((_OWORD *)v17 + 2);
    v28 = *((_OWORD *)v17 + 4);
    v78 = *((_OWORD *)v17 + 3);
    v79 = v28;
    v76 = v26;
    v77 = v27;
    v29 = *((_OWORD *)v17 + 5);
    v30 = *((_OWORD *)v17 + 6);
    v31 = *((_OWORD *)v17 + 7);
    v83 = *((_QWORD *)v17 + 16);
    v81 = v30;
    v82 = v31;
    v80 = v29;
    memmove(v64, v17, 0x88uLL);
    sub_1ABD97ECC((uint64_t)&v66);
    sub_1ABD97ECC((uint64_t)&v75);
    v32 = a8(v65, v64, a5, v62);
    if (v8)
    {
      v85 = v19;
      v86 = __srca;
      goto LABEL_45;
    }
    v33 = v32;
    sub_1ABD97F60((uint64_t)&v75);
    sub_1ABD97F60((uint64_t)&v66);
    if ((v33 & 1) == 0)
    {
      v19 = v17 + 136;
      v34 = v17;
      v35 = __srca;
      v36 = __srca == v17;
      v17 += 136;
      if (v36)
        goto LABEL_16;
LABEL_15:
      memmove(v35, v34, 0x88uLL);
      goto LABEL_16;
    }
    v34 = v12;
    v35 = __srca;
    v36 = __srca == v12;
    v12 += 136;
    if (!v36)
      goto LABEL_15;
LABEL_16:
    v37 = v35 + 136;
    if (v17 >= v18)
    {
      v85 = v19;
      goto LABEL_48;
    }
    if ((unint64_t)v12 >= a3)
      break;
    __srca = v35 + 136;
  }
  v85 = v19;
  v37 = v35 + 136;
LABEL_48:
  v86 = v37;
LABEL_49:
  sub_1ABE8BF98((void **)&v86, (const void **)&v85, &v84);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1ABE8EB9C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6, uint64_t (*a7)(__int128 *, _OWORD *, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _OWORD v51[8];
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  _OWORD v62[8];
  uint64_t v63;
  _OWORD v64[8];
  uint64_t v65;
  uint64_t v66;

  if (a3 != a2)
  {
    v10 = a3;
    v11 = a6 & 1;
    v12 = *a4;
    v13 = *a4 + 136 * a3;
    v14 = result + 1;
    v49 = result + 1;
LABEL_5:
    v66 = v13;
    while (1)
    {
      v62[0] = *(_OWORD *)v13;
      v15 = *(_OWORD *)(v13 + 16);
      v16 = *(_OWORD *)(v13 + 32);
      v17 = *(_OWORD *)(v13 + 64);
      v62[3] = *(_OWORD *)(v13 + 48);
      v62[4] = v17;
      v62[1] = v15;
      v62[2] = v16;
      v18 = *(_OWORD *)(v13 + 80);
      v19 = *(_OWORD *)(v13 + 96);
      v20 = *(_OWORD *)(v13 + 112);
      v63 = *(_QWORD *)(v13 + 128);
      v62[6] = v19;
      v62[7] = v20;
      v62[5] = v18;
      v21 = *(_OWORD *)(v13 + 112);
      v59 = *(_OWORD *)(v13 + 96);
      v60 = v21;
      v61 = *(_QWORD *)(v13 + 128);
      v22 = *(_OWORD *)(v13 + 48);
      v55 = *(_OWORD *)(v13 + 32);
      v56 = v22;
      v23 = *(_OWORD *)(v13 + 80);
      v57 = *(_OWORD *)(v13 + 64);
      v58 = v23;
      v24 = *(_OWORD *)(v13 + 16);
      v53 = *(_OWORD *)v13;
      v54 = v24;
      v64[0] = *(_OWORD *)(v13 - 136);
      v25 = *(_OWORD *)(v13 - 120);
      v26 = *(_OWORD *)(v13 - 104);
      v27 = *(_OWORD *)(v13 - 72);
      v64[3] = *(_OWORD *)(v13 - 88);
      v64[4] = v27;
      v64[1] = v25;
      v64[2] = v26;
      v28 = *(_OWORD *)(v13 - 56);
      v29 = *(_OWORD *)(v13 - 40);
      v30 = *(_OWORD *)(v13 - 24);
      v65 = *(_QWORD *)(v13 - 8);
      v64[6] = v29;
      v64[7] = v30;
      v64[5] = v28;
      v31 = *(_OWORD *)(v13 - 56);
      v32 = *(_OWORD *)(v13 - 24);
      v51[6] = *(_OWORD *)(v13 - 40);
      v51[7] = v32;
      v52 = *(_QWORD *)(v13 - 8);
      v33 = *(_OWORD *)(v13 - 120);
      v34 = *(_OWORD *)(v13 - 88);
      v51[2] = *(_OWORD *)(v13 - 104);
      v51[3] = v34;
      v51[4] = *(_OWORD *)(v13 - 72);
      v51[5] = v31;
      v51[0] = *(_OWORD *)(v13 - 136);
      v51[1] = v33;
      sub_1ABD97ECC((uint64_t)v62);
      sub_1ABD97ECC((uint64_t)v64);
      v35 = a7(&v53, v51, a5, v11);
      sub_1ABD97F60((uint64_t)v64);
      result = sub_1ABD97F60((uint64_t)v62);
      if (v7)
        break;
      if ((v35 & 1) == 0)
        goto LABEL_4;
      if (!v12)
      {
        __break(1u);
        return result;
      }
      v36 = v13 - 136;
      v37 = *(_OWORD *)(v13 + 112);
      v59 = *(_OWORD *)(v13 + 96);
      v60 = v37;
      v61 = *(_QWORD *)(v13 + 128);
      v38 = *(_OWORD *)(v13 + 48);
      v55 = *(_OWORD *)(v13 + 32);
      v56 = v38;
      v39 = *(_OWORD *)(v13 + 80);
      v57 = *(_OWORD *)(v13 + 64);
      v58 = v39;
      v40 = *(_OWORD *)(v13 + 16);
      v53 = *(_OWORD *)v13;
      v54 = v40;
      v41 = *(_OWORD *)(v13 - 56);
      *(_OWORD *)(v13 + 64) = *(_OWORD *)(v13 - 72);
      *(_OWORD *)(v13 + 80) = v41;
      v42 = *(_OWORD *)(v13 - 24);
      *(_OWORD *)(v13 + 96) = *(_OWORD *)(v13 - 40);
      *(_OWORD *)(v13 + 112) = v42;
      *(_QWORD *)(v13 + 128) = *(_QWORD *)(v13 - 8);
      v43 = *(_OWORD *)(v13 - 88);
      *(_OWORD *)(v13 + 32) = *(_OWORD *)(v13 - 104);
      *(_OWORD *)(v13 + 48) = v43;
      v44 = *(_OWORD *)(v13 - 120);
      *(_OWORD *)v13 = *(_OWORD *)(v13 - 136);
      *(_OWORD *)(v13 + 16) = v44;
      v45 = v58;
      *(_OWORD *)(v36 + 64) = v57;
      *(_OWORD *)(v36 + 80) = v45;
      v46 = v60;
      *(_OWORD *)(v36 + 96) = v59;
      *(_OWORD *)(v36 + 112) = v46;
      *(_QWORD *)(v36 + 128) = v61;
      v47 = v56;
      *(_OWORD *)(v36 + 32) = v55;
      *(_OWORD *)(v36 + 48) = v47;
      v48 = v54;
      *(_OWORD *)v36 = v53;
      *(_OWORD *)(v36 + 16) = v48;
      if (v10 == v14)
      {
LABEL_4:
        ++v10;
        v13 = v66 + 136;
        v14 = v49;
        if (v10 == a2)
          return result;
        goto LABEL_5;
      }
      ++v14;
      v13 -= 136;
    }
  }
  return result;
}

uint64_t sub_1ABE8EDE0(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(__int128 *, _OWORD *, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t i;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  int v58;
  _OWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t j;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  char v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char *v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t result;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  unsigned int v172;
  _OWORD v173[8];
  uint64_t v174;
  _OWORD v175[8];
  uint64_t v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  uint64_t v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  uint64_t v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  uint64_t v212;
  uint64_t (*v213)(__int128 *, _OWORD *, uint64_t, uint64_t);

  v213 = a5;
  v6 = v5;
  v172 = a4 & 1;
  v10 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v11 = sub_1ABF321E8();
  if (v11 >= v10)
  {
    if (v10 < 0)
      goto LABEL_145;
    if (v10)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF68();
      sub_1ABE8EB9C(0, v10, 1, a1, a2, v172, v213);
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_124;
  }
  if (v10 >= 0)
    v12 = v10;
  else
    v12 = v10 + 1;
  if (v10 < -1)
    goto LABEL_154;
  v171 = a2;
  v161 = a3;
  v156 = v10;
  v154 = v11;
  v152 = a1;
  if (v10 < 2)
  {
    v15 = (char *)MEMORY[0x1E0DEE9D8];
    v160 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v155 = MEMORY[0x1E0DEE9D8];
    if (v10 != 1)
    {
      v67 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_107:
      if (v67 >= 2)
      {
        v139 = *v152;
        v163 = *v152;
        while (1)
        {
          v140 = v67 - 2;
          if (v67 < 2)
            goto LABEL_140;
          if (!v139)
            goto LABEL_153;
          v141 = v6;
          v142 = v15;
          v143 = v15 + 32;
          v144 = *(_QWORD *)&v15[16 * v140 + 32];
          v145 = *(_QWORD *)&v15[16 * v67 + 24];
          v165 = (char *)(v139 + 136 * *(_QWORD *)&v143[16 * v67 - 16]);
          v170 = (char *)(v139 + 136 * v144);
          v146 = v139 + 136 * v145;
          sub_1ABF2FF5C();
          sub_1ABF2FF68();
          sub_1ABE8E6F4(v170, v165, v146, v160, a2, v161, v172, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v213);
          if (v141)
          {
            swift_bridgeObjectRelease();
            swift_release();
            v149 = v155;
            goto LABEL_123;
          }
          swift_release();
          if (v145 < v144)
            goto LABEL_141;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v142 = sub_1ABE8C050((uint64_t)v142);
          if (v140 >= *((_QWORD *)v142 + 2))
            goto LABEL_142;
          v147 = &v142[16 * v140 + 32];
          *(_QWORD *)v147 = v144;
          *((_QWORD *)v147 + 1) = v145;
          v148 = *((_QWORD *)v142 + 2);
          if (v67 > v148)
            goto LABEL_143;
          v15 = v142;
          memmove(&v142[16 * v67 + 16], &v142[16 * v67 + 32], 16 * (v148 - v67));
          *((_QWORD *)v142 + 2) = v148 - 1;
          v67 = v148 - 1;
          v6 = 0;
          a2 = v171;
          v139 = v163;
          if (v148 <= 2)
            goto LABEL_121;
        }
      }
      goto LABEL_121;
    }
  }
  else
  {
    v13 = v12 >> 1;
    v14 = sub_1ABF31A74();
    *(_QWORD *)(v14 + 16) = v13;
    v155 = v14;
    v160 = (char *)(v14 + 32);
  }
  v16 = 0;
  v153 = *a1 + 272;
  v162 = *a1;
  v151 = *a1 - 136;
  v15 = (char *)MEMORY[0x1E0DEE9D8];
  v17 = v156;
  while (1)
  {
    v18 = v16;
    v19 = v16 + 1;
    if (v16 + 1 >= v17)
    {
      ++v16;
LABEL_44:
      if (v16 < v18)
        goto LABEL_144;
      goto LABEL_45;
    }
    v20 = v162 + 136 * v19;
    v195 = *(_OWORD *)v20;
    v21 = *(_OWORD *)(v20 + 16);
    v22 = *(_OWORD *)(v20 + 32);
    v23 = *(_OWORD *)(v20 + 64);
    v198 = *(_OWORD *)(v20 + 48);
    v199 = v23;
    v196 = v21;
    v197 = v22;
    v24 = *(_OWORD *)(v20 + 80);
    v25 = *(_OWORD *)(v20 + 96);
    v26 = *(_OWORD *)(v20 + 112);
    v203 = *(_QWORD *)(v20 + 128);
    v201 = v25;
    v202 = v26;
    v200 = v24;
    v191 = *(_OWORD *)(v20 + 80);
    v192 = *(_OWORD *)(v20 + 96);
    v193 = *(_OWORD *)(v20 + 112);
    v194 = *(_QWORD *)(v20 + 128);
    v187 = *(_OWORD *)(v20 + 16);
    v188 = *(_OWORD *)(v20 + 32);
    v189 = *(_OWORD *)(v20 + 48);
    v190 = *(_OWORD *)(v20 + 64);
    v186 = *(_OWORD *)v20;
    v27 = v162 + 136 * v16;
    v204 = *(_OWORD *)v27;
    v28 = *(_OWORD *)(v27 + 16);
    v29 = *(_OWORD *)(v27 + 32);
    v30 = *(_OWORD *)(v27 + 64);
    v207 = *(_OWORD *)(v27 + 48);
    v208 = v30;
    v205 = v28;
    v206 = v29;
    v31 = *(_OWORD *)(v27 + 80);
    v32 = *(_OWORD *)(v27 + 96);
    v33 = *(_OWORD *)(v27 + 112);
    v212 = *(_QWORD *)(v27 + 128);
    v210 = v32;
    v211 = v33;
    v209 = v31;
    v182 = *(_OWORD *)(v27 + 80);
    v183 = *(_OWORD *)(v27 + 96);
    v184 = *(_OWORD *)(v27 + 112);
    v185 = *(_QWORD *)(v27 + 128);
    v178 = *(_OWORD *)(v27 + 16);
    v179 = *(_OWORD *)(v27 + 32);
    v180 = *(_OWORD *)(v27 + 48);
    v181 = *(_OWORD *)(v27 + 64);
    v177 = *(_OWORD *)v27;
    sub_1ABD97ECC((uint64_t)&v195);
    sub_1ABD97ECC((uint64_t)&v204);
    v34 = v213(&v186, &v177, a2, v172);
    if (v6)
    {
      sub_1ABD97F60((uint64_t)&v204);
      sub_1ABD97F60((uint64_t)&v195);
LABEL_121:
      swift_bridgeObjectRelease();
LABEL_122:
      v149 = v155;
LABEL_123:
      *(_QWORD *)(v149 + 16) = 0;
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
LABEL_124:
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    v35 = v34;
    sub_1ABD97F60((uint64_t)&v204);
    sub_1ABD97F60((uint64_t)&v195);
    v16 += 2;
    if (v18 + 2 < v156)
    {
      v166 = v19;
      v36 = v18 + 3;
      for (i = v153 + 136 * v18; ; i += 136)
      {
        v177 = *(_OWORD *)i;
        v38 = *(_OWORD *)(i + 16);
        v39 = *(_OWORD *)(i + 32);
        v40 = *(_OWORD *)(i + 64);
        v180 = *(_OWORD *)(i + 48);
        v181 = v40;
        v178 = v38;
        v179 = v39;
        v41 = *(_OWORD *)(i + 80);
        v42 = *(_OWORD *)(i + 96);
        v43 = *(_OWORD *)(i + 112);
        v185 = *(_QWORD *)(i + 128);
        v183 = v42;
        v184 = v43;
        v182 = v41;
        v44 = *(_OWORD *)(i + 112);
        v175[6] = *(_OWORD *)(i + 96);
        v175[7] = v44;
        v176 = *(_QWORD *)(i + 128);
        v45 = *(_OWORD *)(i + 48);
        v175[2] = *(_OWORD *)(i + 32);
        v175[3] = v45;
        v46 = *(_OWORD *)(i + 80);
        v175[4] = *(_OWORD *)(i + 64);
        v175[5] = v46;
        v47 = *(_OWORD *)(i + 16);
        v175[0] = *(_OWORD *)i;
        v175[1] = v47;
        v186 = *(_OWORD *)(i - 136);
        v48 = *(_OWORD *)(i - 120);
        v49 = *(_OWORD *)(i - 104);
        v50 = *(_OWORD *)(i - 72);
        v189 = *(_OWORD *)(i - 88);
        v190 = v50;
        v187 = v48;
        v188 = v49;
        v51 = *(_OWORD *)(i - 56);
        v52 = *(_OWORD *)(i - 40);
        v53 = *(_OWORD *)(i - 24);
        v194 = *(_QWORD *)(i - 8);
        v192 = v52;
        v193 = v53;
        v191 = v51;
        v54 = *(_OWORD *)(i - 56);
        v55 = *(_OWORD *)(i - 24);
        v173[6] = *(_OWORD *)(i - 40);
        v173[7] = v55;
        v174 = *(_QWORD *)(i - 8);
        v56 = *(_OWORD *)(i - 120);
        v57 = *(_OWORD *)(i - 88);
        v173[2] = *(_OWORD *)(i - 104);
        v173[3] = v57;
        v173[4] = *(_OWORD *)(i - 72);
        v173[5] = v54;
        v173[0] = *(_OWORD *)(i - 136);
        v173[1] = v56;
        sub_1ABD97ECC((uint64_t)&v177);
        sub_1ABD97ECC((uint64_t)&v186);
        v58 = v213(v175, v173, a2, v172);
        sub_1ABD97F60((uint64_t)&v186);
        sub_1ABD97F60((uint64_t)&v177);
        if (((v35 ^ v58) & 1) != 0)
        {
          v16 = v36 - 1;
          goto LABEL_23;
        }
        if (v156 == v36)
          break;
        ++v36;
      }
      v16 = v156;
LABEL_23:
      v19 = v166;
    }
    if ((v35 & 1) == 0)
      goto LABEL_33;
    if (v16 < v18)
      goto LABEL_149;
    if (v18 < v16)
    {
      v167 = v19;
      v59 = (_OWORD *)(v151 + 136 * v16);
      v60 = v16;
      v61 = v18;
      v62 = (_OWORD *)(v162 + 136 * v18);
      do
      {
        if (v61 != --v60)
        {
          if (!v162)
            goto LABEL_152;
          v191 = v62[5];
          v192 = v62[6];
          v193 = v62[7];
          v194 = *((_QWORD *)v62 + 16);
          v187 = v62[1];
          v188 = v62[2];
          v189 = v62[3];
          v190 = v62[4];
          v186 = *v62;
          memmove(v62, v59, 0x88uLL);
          v59[5] = v191;
          v59[6] = v192;
          v59[7] = v193;
          *((_QWORD *)v59 + 16) = v194;
          v59[1] = v187;
          v59[2] = v188;
          v59[3] = v189;
          v59[4] = v190;
          *v59 = v186;
        }
        ++v61;
        v59 = (_OWORD *)((char *)v59 - 136);
        v62 = (_OWORD *)((char *)v62 + 136);
      }
      while (v61 < v60);
      v63 = v156;
      v19 = v167;
      if (v16 >= v156)
        goto LABEL_44;
    }
    else
    {
LABEL_33:
      v63 = v156;
      if (v16 >= v156)
        goto LABEL_44;
    }
    if (__OFSUB__(v16, v18))
      goto LABEL_146;
    if (v16 - v18 >= v154)
      goto LABEL_44;
    if (__OFADD__(v18, v154))
      goto LABEL_147;
    v64 = v18 + v154 >= v63 ? v63 : v18 + v154;
    if (v64 < v18)
      break;
    if (v16 == v64)
      goto LABEL_44;
    v118 = v162 + 136 * v16;
    v164 = v64;
    v169 = v19;
    do
    {
      v119 = v19;
      for (j = v118; ; j -= 136)
      {
        v195 = *(_OWORD *)j;
        v121 = *(_OWORD *)(j + 16);
        v122 = *(_OWORD *)(j + 32);
        v123 = *(_OWORD *)(j + 64);
        v198 = *(_OWORD *)(j + 48);
        v199 = v123;
        v196 = v121;
        v197 = v122;
        v124 = *(_OWORD *)(j + 80);
        v125 = *(_OWORD *)(j + 96);
        v126 = *(_OWORD *)(j + 112);
        v203 = *(_QWORD *)(j + 128);
        v201 = v125;
        v202 = v126;
        v200 = v124;
        v191 = *(_OWORD *)(j + 80);
        v192 = *(_OWORD *)(j + 96);
        v193 = *(_OWORD *)(j + 112);
        v194 = *(_QWORD *)(j + 128);
        v187 = *(_OWORD *)(j + 16);
        v188 = *(_OWORD *)(j + 32);
        v189 = *(_OWORD *)(j + 48);
        v190 = *(_OWORD *)(j + 64);
        v186 = *(_OWORD *)j;
        v204 = *(_OWORD *)(j - 136);
        v127 = *(_OWORD *)(j - 120);
        v128 = *(_OWORD *)(j - 104);
        v129 = *(_OWORD *)(j - 72);
        v207 = *(_OWORD *)(j - 88);
        v208 = v129;
        v205 = v127;
        v206 = v128;
        v130 = *(_OWORD *)(j - 56);
        v131 = *(_OWORD *)(j - 40);
        v132 = *(_OWORD *)(j - 24);
        v212 = *(_QWORD *)(j - 8);
        v210 = v131;
        v211 = v132;
        v209 = v130;
        v182 = *(_OWORD *)(j - 56);
        v183 = *(_OWORD *)(j - 40);
        v184 = *(_OWORD *)(j - 24);
        v185 = *(_QWORD *)(j - 8);
        v178 = *(_OWORD *)(j - 120);
        v179 = *(_OWORD *)(j - 104);
        v180 = *(_OWORD *)(j - 88);
        v181 = *(_OWORD *)(j - 72);
        v177 = *(_OWORD *)(j - 136);
        sub_1ABD97ECC((uint64_t)&v195);
        sub_1ABD97ECC((uint64_t)&v204);
        v133 = v213(&v186, &v177, a2, v172);
        sub_1ABD97F60((uint64_t)&v204);
        sub_1ABD97F60((uint64_t)&v195);
        if ((v133 & 1) == 0)
          break;
        if (!v162)
          goto LABEL_151;
        v134 = j - 136;
        v191 = *(_OWORD *)(j + 80);
        v192 = *(_OWORD *)(j + 96);
        v193 = *(_OWORD *)(j + 112);
        v194 = *(_QWORD *)(j + 128);
        v187 = *(_OWORD *)(j + 16);
        v188 = *(_OWORD *)(j + 32);
        v189 = *(_OWORD *)(j + 48);
        v190 = *(_OWORD *)(j + 64);
        v186 = *(_OWORD *)j;
        v135 = *(_OWORD *)(j - 56);
        *(_OWORD *)(j + 64) = *(_OWORD *)(j - 72);
        *(_OWORD *)(j + 80) = v135;
        v136 = *(_OWORD *)(j - 24);
        *(_OWORD *)(j + 96) = *(_OWORD *)(j - 40);
        *(_OWORD *)(j + 112) = v136;
        *(_QWORD *)(j + 128) = *(_QWORD *)(j - 8);
        v137 = *(_OWORD *)(j - 88);
        *(_OWORD *)(j + 32) = *(_OWORD *)(j - 104);
        *(_OWORD *)(j + 48) = v137;
        v138 = *(_OWORD *)(j - 120);
        *(_OWORD *)j = *(_OWORD *)(j - 136);
        *(_OWORD *)(j + 16) = v138;
        *(_OWORD *)(v134 + 64) = v190;
        *(_OWORD *)(v134 + 80) = v191;
        *(_OWORD *)(v134 + 96) = v192;
        *(_OWORD *)(v134 + 112) = v193;
        *(_QWORD *)(v134 + 128) = v194;
        *(_OWORD *)(v134 + 16) = v187;
        *(_OWORD *)(v134 + 32) = v188;
        *(_OWORD *)(v134 + 48) = v189;
        *(_OWORD *)v134 = v186;
        if (v16 == v119)
          break;
        ++v119;
      }
      ++v16;
      v118 += 136;
      v19 = v169;
    }
    while (v16 != v164);
    v16 = v164;
    if (v164 < v18)
      goto LABEL_144;
LABEL_45:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_1ABE8BC6C(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
    v66 = *((_QWORD *)v15 + 2);
    v65 = *((_QWORD *)v15 + 3);
    v67 = v66 + 1;
    if (v66 >= v65 >> 1)
      v15 = sub_1ABE8BC6C((char *)(v65 > 1), v66 + 1, 1, v15);
    *((_QWORD *)v15 + 2) = v67;
    v159 = v15 + 32;
    v68 = &v15[16 * v66 + 32];
    *(_QWORD *)v68 = v18;
    *((_QWORD *)v68 + 1) = v16;
    if (v66)
    {
      v69 = v15 + 32;
      v157 = v16;
      v158 = v15;
      while (1)
      {
        v70 = v67 - 1;
        if (v67 >= 4)
        {
          v75 = &v69[16 * v67];
          v76 = *((_QWORD *)v75 - 8);
          v77 = *((_QWORD *)v75 - 7);
          v81 = __OFSUB__(v77, v76);
          v78 = v77 - v76;
          if (v81)
            goto LABEL_129;
          v80 = *((_QWORD *)v75 - 6);
          v79 = *((_QWORD *)v75 - 5);
          v81 = __OFSUB__(v79, v80);
          v73 = v79 - v80;
          v74 = v81;
          if (v81)
            goto LABEL_130;
          v82 = v67 - 2;
          v83 = &v69[16 * v67 - 32];
          v85 = *(_QWORD *)v83;
          v84 = *((_QWORD *)v83 + 1);
          v81 = __OFSUB__(v84, v85);
          v86 = v84 - v85;
          if (v81)
            goto LABEL_132;
          v81 = __OFADD__(v73, v86);
          v87 = v73 + v86;
          if (v81)
            goto LABEL_135;
          if (v87 >= v78)
          {
            v105 = &v69[16 * v70];
            v107 = *(_QWORD *)v105;
            v106 = *((_QWORD *)v105 + 1);
            v81 = __OFSUB__(v106, v107);
            v108 = v106 - v107;
            if (v81)
              goto LABEL_139;
            v98 = v73 < v108;
            goto LABEL_82;
          }
        }
        else
        {
          if (v67 != 3)
          {
            v99 = *((_QWORD *)v15 + 4);
            v100 = *((_QWORD *)v15 + 5);
            v81 = __OFSUB__(v100, v99);
            v92 = v100 - v99;
            v93 = v81;
            goto LABEL_76;
          }
          v72 = *((_QWORD *)v15 + 4);
          v71 = *((_QWORD *)v15 + 5);
          v81 = __OFSUB__(v71, v72);
          v73 = v71 - v72;
          v74 = v81;
        }
        if ((v74 & 1) != 0)
          goto LABEL_131;
        v82 = v67 - 2;
        v88 = &v69[16 * v67 - 32];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v91 = __OFSUB__(v89, v90);
        v92 = v89 - v90;
        v93 = v91;
        if (v91)
          goto LABEL_134;
        v94 = &v69[16 * v70];
        v96 = *(_QWORD *)v94;
        v95 = *((_QWORD *)v94 + 1);
        v81 = __OFSUB__(v95, v96);
        v97 = v95 - v96;
        if (v81)
          goto LABEL_137;
        if (__OFADD__(v92, v97))
          goto LABEL_138;
        if (v92 + v97 >= v73)
        {
          v98 = v73 < v97;
LABEL_82:
          if (v98)
            v70 = v82;
          goto LABEL_84;
        }
LABEL_76:
        if ((v93 & 1) != 0)
          goto LABEL_133;
        v101 = &v69[16 * v70];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v81 = __OFSUB__(v102, v103);
        v104 = v102 - v103;
        if (v81)
          goto LABEL_136;
        if (v104 < v92)
          goto LABEL_93;
LABEL_84:
        v109 = v70 - 1;
        if (v70 - 1 >= v67)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (!v162)
          goto LABEL_150;
        v110 = v6;
        v111 = &v69[16 * v109];
        v112 = *(_QWORD *)v111;
        v113 = v70;
        v114 = &v69[16 * v70];
        v115 = *((_QWORD *)v114 + 1);
        v116 = (char *)(v162 + 136 * *(_QWORD *)v114);
        v168 = (char *)(v162 + 136 * *(_QWORD *)v111);
        sub_1ABF2FF5C();
        sub_1ABF2FF68();
        sub_1ABE8E6F4(v168, v116, v162 + 136 * v115, v160, v171, v161, v172, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v213);
        if (v110)
        {
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_122;
        }
        swift_release();
        if (v115 < v112)
          goto LABEL_126;
        if (v113 > *((_QWORD *)v158 + 2))
          goto LABEL_127;
        *(_QWORD *)v111 = v112;
        v69 = v159;
        *(_QWORD *)&v159[16 * v109 + 8] = v115;
        v117 = *((_QWORD *)v158 + 2);
        if (v113 >= v117)
          goto LABEL_128;
        v15 = v158;
        v67 = v117 - 1;
        memmove(v114, v114 + 16, 16 * (v117 - 1 - v113));
        *((_QWORD *)v158 + 2) = v117 - 1;
        v98 = v117 > 2;
        a2 = v171;
        v6 = 0;
        v16 = v157;
        if (!v98)
          goto LABEL_93;
      }
    }
    v67 = 1;
LABEL_93:
    v17 = v156;
    if (v16 >= v156)
      goto LABEL_107;
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_151:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_152:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_153:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_154:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

uint64_t sub_1ABE8FB98(_QWORD **a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(__int128 *, _OWORD *, uint64_t, uint64_t))
{
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13[2];

  v9 = a4 & 1;
  v10 = *a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_1ABF20B9C(v10);
  v11 = v10[2];
  v13[0] = (uint64_t)(v10 + 4);
  v13[1] = v11;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABE8EDE0(v13, a2, a3, v9, a5);
  swift_bridgeObjectRelease();
  swift_release();
  *a1 = v10;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1ABE8FC8C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;

  v32 = a3;
  v5 = sub_1ABF302A4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v11 = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 80);
  v29 = v11;
  v30 = v10;
  v31 = v9;
  sub_1ABF2FF5C();
  sub_1ABF30274();
  sub_1ABD0E288();
  v13 = sub_1ABF31DA4();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v8, v5);
  swift_bridgeObjectRelease();
  v30 = v13;
  v31 = v15;
  sub_1ABF3028C();
  sub_1ABF31DA4();
  v16(v8, v5);
  swift_bridgeObjectRelease();
  v17 = sub_1ABF31810();
  v19 = v18;
  swift_bridgeObjectRelease();
  v30 = v29;
  v31 = v12;
  sub_1ABF2FF5C();
  sub_1ABF30274();
  v20 = sub_1ABF31DA4();
  v22 = v21;
  v16(v8, v5);
  swift_bridgeObjectRelease();
  v30 = v20;
  v31 = v22;
  sub_1ABF3028C();
  sub_1ABF31DA4();
  v16(v8, v5);
  swift_bridgeObjectRelease();
  v23 = sub_1ABF31810();
  v25 = v24;
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
  {
    if (v23 != v17 || v25 != v19)
      goto LABEL_8;
  }
  else if (v17 != v23 || v19 != v25)
  {
LABEL_8:
    v26 = sub_1ABF3223C();
    goto LABEL_9;
  }
  v26 = 0;
LABEL_9:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v26 & 1;
}

uint64_t sub_1ABE8FEF4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[8];
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _OWORD v58[8];
  uint64_t v59;
  _OWORD v60[8];
  uint64_t v61;
  uint64_t v62;

  if (a3 != a2)
  {
    v6 = a3;
    v8 = a5 & 1;
    v9 = *a4;
    v10 = *a4 + 136 * a3;
    v11 = result + 1;
    v62 = result + 1;
LABEL_5:
    for (i = v10; ; i -= 136)
    {
      v58[0] = *(_OWORD *)i;
      v13 = *(_OWORD *)(i + 16);
      v14 = *(_OWORD *)(i + 32);
      v15 = *(_OWORD *)(i + 64);
      v58[3] = *(_OWORD *)(i + 48);
      v58[4] = v15;
      v58[1] = v13;
      v58[2] = v14;
      v16 = *(_OWORD *)(i + 80);
      v17 = *(_OWORD *)(i + 96);
      v18 = *(_OWORD *)(i + 112);
      v59 = *(_QWORD *)(i + 128);
      v58[6] = v17;
      v58[7] = v18;
      v58[5] = v16;
      v19 = *(_OWORD *)(i + 112);
      v55 = *(_OWORD *)(i + 96);
      v56 = v19;
      v57 = *(_QWORD *)(i + 128);
      v20 = *(_OWORD *)(i + 48);
      v51 = *(_OWORD *)(i + 32);
      v52 = v20;
      v21 = *(_OWORD *)(i + 80);
      v53 = *(_OWORD *)(i + 64);
      v54 = v21;
      v22 = *(_OWORD *)(i + 16);
      v49 = *(_OWORD *)i;
      v50 = v22;
      v60[0] = *(_OWORD *)(i - 136);
      v23 = *(_OWORD *)(i - 120);
      v24 = *(_OWORD *)(i - 104);
      v25 = *(_OWORD *)(i - 72);
      v60[3] = *(_OWORD *)(i - 88);
      v60[4] = v25;
      v60[1] = v23;
      v60[2] = v24;
      v26 = *(_OWORD *)(i - 56);
      v27 = *(_OWORD *)(i - 40);
      v28 = *(_OWORD *)(i - 24);
      v61 = *(_QWORD *)(i - 8);
      v60[6] = v27;
      v60[7] = v28;
      v60[5] = v26;
      v29 = *(_OWORD *)(i - 56);
      v30 = *(_OWORD *)(i - 24);
      v47[6] = *(_OWORD *)(i - 40);
      v47[7] = v30;
      v48 = *(_QWORD *)(i - 8);
      v31 = *(_OWORD *)(i - 120);
      v32 = *(_OWORD *)(i - 88);
      v47[2] = *(_OWORD *)(i - 104);
      v47[3] = v32;
      v47[4] = *(_OWORD *)(i - 72);
      v47[5] = v29;
      v47[0] = *(_OWORD *)(i - 136);
      v47[1] = v31;
      sub_1ABD97ECC((uint64_t)v58);
      sub_1ABD97ECC((uint64_t)v60);
      v33 = sub_1ABE8FC8C((uint64_t)&v49, (uint64_t)v47, v8);
      sub_1ABD97F60((uint64_t)v60);
      result = sub_1ABD97F60((uint64_t)v58);
      if (v5)
        break;
      if ((v33 & 1) == 0)
        goto LABEL_4;
      if (!v9)
      {
        __break(1u);
        return result;
      }
      v34 = i - 136;
      v35 = *(_OWORD *)(i + 112);
      v55 = *(_OWORD *)(i + 96);
      v56 = v35;
      v57 = *(_QWORD *)(i + 128);
      v36 = *(_OWORD *)(i + 48);
      v51 = *(_OWORD *)(i + 32);
      v52 = v36;
      v37 = *(_OWORD *)(i + 80);
      v53 = *(_OWORD *)(i + 64);
      v54 = v37;
      v38 = *(_OWORD *)(i + 16);
      v49 = *(_OWORD *)i;
      v50 = v38;
      v39 = *(_OWORD *)(i - 56);
      *(_OWORD *)(i + 64) = *(_OWORD *)(i - 72);
      *(_OWORD *)(i + 80) = v39;
      v40 = *(_OWORD *)(i - 24);
      *(_OWORD *)(i + 96) = *(_OWORD *)(i - 40);
      *(_OWORD *)(i + 112) = v40;
      *(_QWORD *)(i + 128) = *(_QWORD *)(i - 8);
      v41 = *(_OWORD *)(i - 88);
      *(_OWORD *)(i + 32) = *(_OWORD *)(i - 104);
      *(_OWORD *)(i + 48) = v41;
      v42 = *(_OWORD *)(i - 120);
      *(_OWORD *)i = *(_OWORD *)(i - 136);
      *(_OWORD *)(i + 16) = v42;
      v43 = v54;
      *(_OWORD *)(v34 + 64) = v53;
      *(_OWORD *)(v34 + 80) = v43;
      v44 = v56;
      *(_OWORD *)(v34 + 96) = v55;
      *(_OWORD *)(v34 + 112) = v44;
      *(_QWORD *)(v34 + 128) = v57;
      v45 = v52;
      *(_OWORD *)(v34 + 32) = v51;
      *(_OWORD *)(v34 + 48) = v45;
      v46 = v50;
      *(_OWORD *)v34 = v49;
      *(_OWORD *)(v34 + 16) = v46;
      if (v6 == v11)
      {
LABEL_4:
        ++v6;
        v10 += 136;
        v11 = v62;
        if (v6 == a2)
          return result;
        goto LABEL_5;
      }
      ++v11;
    }
  }
  return result;
}

uint64_t sub_1ABE90128(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t i;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  int v55;
  char *v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  unint64_t v118;
  __int128 *v119;
  uint64_t v120;
  __int128 *j;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  char v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  char *v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  unint64_t v149;
  char *v150;
  unint64_t v151;
  uint64_t result;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *__dst;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  _OWORD v167[8];
  uint64_t v168;
  _OWORD v169[8];
  uint64_t v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  uint64_t v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  uint64_t v206;
  int v207;

  v4 = v3;
  v207 = a3 & 1;
  v7 = a1[1];
  swift_retain_n();
  v8 = sub_1ABF321E8();
  if (v8 >= v7)
  {
    if (v7 < 0)
      goto LABEL_145;
    if (v7)
      sub_1ABE8FEF4(0, v7, 1, a1, v207);
    swift_release_n();
    return swift_release();
  }
  v156 = a1;
  if (v7 >= 0)
    v9 = v7;
  else
    v9 = v7 + 1;
  if (v7 < -1)
    goto LABEL_154;
  v155 = v8;
  v161 = a2;
  v158 = v7;
  if (v7 < 2)
  {
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v157 = MEMORY[0x1E0DEE9D8];
    if (v7 != 1)
    {
      v140 = (char *)MEMORY[0x1E0DEE9D8];
      v66 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v66 < 2)
        goto LABEL_121;
      goto LABEL_106;
    }
  }
  else
  {
    v10 = v9 >> 1;
    v11 = sub_1ABF31A74();
    *(_QWORD *)(v11 + 16) = v10;
    v157 = v11;
    __dst = (char *)(v11 + 32);
  }
  v12 = 0;
  v13 = *v156;
  v153 = *v156 - 136;
  v154 = *v156 + 272;
  v162 = (char *)MEMORY[0x1E0DEE9D8];
  v163 = *v156;
  v14 = v158;
  while (1)
  {
    v15 = v12;
    v16 = v12 + 1;
    if (v12 + 1 >= v14)
    {
      ++v12;
      v56 = v162;
      goto LABEL_44;
    }
    v17 = (__int128 *)(v13 + 136 * v16);
    v189 = *v17;
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[4];
    v192 = v17[3];
    v193 = v20;
    v190 = v18;
    v191 = v19;
    v21 = v17[5];
    v22 = v17[6];
    v23 = v17[7];
    v197 = *((_QWORD *)v17 + 16);
    v195 = v22;
    v196 = v23;
    v194 = v21;
    v185 = v17[5];
    v186 = v17[6];
    v187 = v17[7];
    v188 = *((_QWORD *)v17 + 16);
    v181 = v17[1];
    v182 = v17[2];
    v183 = v17[3];
    v184 = v17[4];
    v180 = *v17;
    v24 = (__int128 *)(v13 + 136 * v12);
    v198 = *v24;
    v25 = v24[1];
    v26 = v24[2];
    v27 = v24[4];
    v201 = v24[3];
    v202 = v27;
    v199 = v25;
    v200 = v26;
    v28 = v24[5];
    v29 = v24[6];
    v30 = v24[7];
    v206 = *((_QWORD *)v24 + 16);
    v204 = v29;
    v205 = v30;
    v203 = v28;
    v176 = v24[5];
    v177 = v24[6];
    v178 = v24[7];
    v179 = *((_QWORD *)v24 + 16);
    v172 = v24[1];
    v173 = v24[2];
    v174 = v24[3];
    v175 = v24[4];
    v171 = *v24;
    sub_1ABD97ECC((uint64_t)&v189);
    sub_1ABD97ECC((uint64_t)&v198);
    v31 = sub_1ABE8FC8C((uint64_t)&v180, (uint64_t)&v171, v207);
    if (v4)
    {
      sub_1ABD97F60((uint64_t)&v198);
      sub_1ABD97F60((uint64_t)&v189);
      swift_bridgeObjectRelease();
LABEL_118:
      *(_QWORD *)(v157 + 16) = 0;
LABEL_122:
      swift_release_n();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    v32 = v31;
    sub_1ABD97F60((uint64_t)&v198);
    sub_1ABD97F60((uint64_t)&v189);
    v12 += 2;
    if (v15 + 2 < v158)
    {
      v33 = v15 + 3;
      for (i = v154 + 136 * v15; ; i += 136)
      {
        v171 = *(_OWORD *)i;
        v35 = *(_OWORD *)(i + 16);
        v36 = *(_OWORD *)(i + 32);
        v37 = *(_OWORD *)(i + 64);
        v174 = *(_OWORD *)(i + 48);
        v175 = v37;
        v172 = v35;
        v173 = v36;
        v38 = *(_OWORD *)(i + 80);
        v39 = *(_OWORD *)(i + 96);
        v40 = *(_OWORD *)(i + 112);
        v179 = *(_QWORD *)(i + 128);
        v177 = v39;
        v178 = v40;
        v176 = v38;
        v41 = *(_OWORD *)(i + 112);
        v169[6] = *(_OWORD *)(i + 96);
        v169[7] = v41;
        v170 = *(_QWORD *)(i + 128);
        v42 = *(_OWORD *)(i + 48);
        v169[2] = *(_OWORD *)(i + 32);
        v169[3] = v42;
        v43 = *(_OWORD *)(i + 80);
        v169[4] = *(_OWORD *)(i + 64);
        v169[5] = v43;
        v44 = *(_OWORD *)(i + 16);
        v169[0] = *(_OWORD *)i;
        v169[1] = v44;
        v180 = *(_OWORD *)(i - 136);
        v45 = *(_OWORD *)(i - 120);
        v46 = *(_OWORD *)(i - 104);
        v47 = *(_OWORD *)(i - 72);
        v183 = *(_OWORD *)(i - 88);
        v184 = v47;
        v181 = v45;
        v182 = v46;
        v48 = *(_OWORD *)(i - 56);
        v49 = *(_OWORD *)(i - 40);
        v50 = *(_OWORD *)(i - 24);
        v188 = *(_QWORD *)(i - 8);
        v186 = v49;
        v187 = v50;
        v185 = v48;
        v51 = *(_OWORD *)(i - 56);
        v52 = *(_OWORD *)(i - 24);
        v167[6] = *(_OWORD *)(i - 40);
        v167[7] = v52;
        v168 = *(_QWORD *)(i - 8);
        v53 = *(_OWORD *)(i - 120);
        v54 = *(_OWORD *)(i - 88);
        v167[2] = *(_OWORD *)(i - 104);
        v167[3] = v54;
        v167[4] = *(_OWORD *)(i - 72);
        v167[5] = v51;
        v167[0] = *(_OWORD *)(i - 136);
        v167[1] = v53;
        sub_1ABD97ECC((uint64_t)&v171);
        sub_1ABD97ECC((uint64_t)&v180);
        v55 = sub_1ABE8FC8C((uint64_t)v169, (uint64_t)v167, v207);
        sub_1ABD97F60((uint64_t)&v180);
        sub_1ABD97F60((uint64_t)&v171);
        if (((v32 ^ v55) & 1) != 0)
        {
          v12 = v33 - 1;
          goto LABEL_24;
        }
        if (v158 == v33)
          break;
        ++v33;
      }
      v12 = v158;
LABEL_24:
      v13 = v163;
    }
    v56 = v162;
    if ((v32 & 1) != 0)
    {
      if (v12 < v15)
        goto LABEL_149;
      if (v15 < v12)
      {
        v57 = (_OWORD *)(v153 + 136 * v12);
        v58 = v12;
        v59 = v13;
        v60 = v15;
        v61 = (_OWORD *)(v59 + 136 * v15);
        do
        {
          if (v60 != --v58)
          {
            if (!v163)
              goto LABEL_152;
            v185 = v61[5];
            v186 = v61[6];
            v187 = v61[7];
            v188 = *((_QWORD *)v61 + 16);
            v181 = v61[1];
            v182 = v61[2];
            v183 = v61[3];
            v184 = v61[4];
            v180 = *v61;
            memmove(v61, v57, 0x88uLL);
            v57[5] = v185;
            v57[6] = v186;
            v57[7] = v187;
            *((_QWORD *)v57 + 16) = v188;
            v57[1] = v181;
            v57[2] = v182;
            v57[3] = v183;
            v57[4] = v184;
            *v57 = v180;
          }
          ++v60;
          v57 = (_OWORD *)((char *)v57 - 136);
          v61 = (_OWORD *)((char *)v61 + 136);
        }
        while (v60 < v58);
        v56 = v162;
        v13 = v163;
      }
    }
    if (v12 >= v158)
      goto LABEL_44;
    if (__OFSUB__(v12, v15))
      goto LABEL_146;
    if (v12 - v15 >= v155)
      goto LABEL_44;
    if (__OFADD__(v15, v155))
      goto LABEL_147;
    v62 = v15 + v155 >= v158 ? v158 : v15 + v155;
    if (v62 < v15)
      break;
    if (v12 != v62)
    {
      v119 = (__int128 *)(v13 + 136 * v12);
      do
      {
        v120 = v16;
        for (j = v119; ; j = (__int128 *)((char *)j - 136))
        {
          v189 = *j;
          v122 = j[1];
          v123 = j[2];
          v124 = j[4];
          v192 = j[3];
          v193 = v124;
          v190 = v122;
          v191 = v123;
          v125 = j[5];
          v126 = j[6];
          v127 = j[7];
          v197 = *((_QWORD *)j + 16);
          v195 = v126;
          v196 = v127;
          v194 = v125;
          v185 = j[5];
          v186 = j[6];
          v187 = j[7];
          v188 = *((_QWORD *)j + 16);
          v181 = j[1];
          v182 = j[2];
          v183 = j[3];
          v184 = j[4];
          v180 = *j;
          v198 = *(__int128 *)((char *)j - 136);
          v128 = *(__int128 *)((char *)j - 120);
          v129 = *(__int128 *)((char *)j - 104);
          v130 = *(__int128 *)((char *)j - 72);
          v201 = *(__int128 *)((char *)j - 88);
          v202 = v130;
          v199 = v128;
          v200 = v129;
          v131 = *(__int128 *)((char *)j - 56);
          v132 = *(__int128 *)((char *)j - 40);
          v133 = *(__int128 *)((char *)j - 24);
          v206 = *((_QWORD *)j - 1);
          v204 = v132;
          v205 = v133;
          v203 = v131;
          v176 = *(__int128 *)((char *)j - 56);
          v177 = *(__int128 *)((char *)j - 40);
          v178 = *(__int128 *)((char *)j - 24);
          v179 = *((_QWORD *)j - 1);
          v172 = *(__int128 *)((char *)j - 120);
          v173 = *(__int128 *)((char *)j - 104);
          v174 = *(__int128 *)((char *)j - 88);
          v175 = *(__int128 *)((char *)j - 72);
          v171 = *(__int128 *)((char *)j - 136);
          sub_1ABD97ECC((uint64_t)&v189);
          sub_1ABD97ECC((uint64_t)&v198);
          v134 = sub_1ABE8FC8C((uint64_t)&v180, (uint64_t)&v171, v207);
          sub_1ABD97F60((uint64_t)&v198);
          sub_1ABD97F60((uint64_t)&v189);
          if ((v134 & 1) == 0)
            break;
          if (!v163)
            goto LABEL_151;
          v135 = (uint64_t)j - 136;
          v185 = j[5];
          v186 = j[6];
          v187 = j[7];
          v188 = *((_QWORD *)j + 16);
          v181 = j[1];
          v182 = j[2];
          v183 = j[3];
          v184 = j[4];
          v180 = *j;
          v136 = *(__int128 *)((char *)j - 56);
          j[4] = *(__int128 *)((char *)j - 72);
          j[5] = v136;
          v137 = *(__int128 *)((char *)j - 24);
          j[6] = *(__int128 *)((char *)j - 40);
          j[7] = v137;
          *((_QWORD *)j + 16) = *((_QWORD *)j - 1);
          v138 = *(__int128 *)((char *)j - 88);
          j[2] = *(__int128 *)((char *)j - 104);
          j[3] = v138;
          v139 = *(__int128 *)((char *)j - 120);
          *j = *(__int128 *)((char *)j - 136);
          j[1] = v139;
          *(_OWORD *)(v135 + 64) = v184;
          *(_OWORD *)(v135 + 80) = v185;
          *(_OWORD *)(v135 + 96) = v186;
          *(_OWORD *)(v135 + 112) = v187;
          *(_QWORD *)(v135 + 128) = v188;
          *(_OWORD *)(v135 + 16) = v181;
          *(_OWORD *)(v135 + 32) = v182;
          *(_OWORD *)(v135 + 48) = v183;
          *(_OWORD *)v135 = v180;
          if (v12 == v120)
            break;
          ++v120;
        }
        ++v12;
        v119 = (__int128 *)((char *)v119 + 136);
      }
      while (v12 != v62);
      v12 = v62;
      v56 = v162;
      v13 = v163;
      if (v62 < v15)
        goto LABEL_144;
      goto LABEL_45;
    }
LABEL_44:
    if (v12 < v15)
      goto LABEL_144;
LABEL_45:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v56 = sub_1ABE8BC6C(0, *((_QWORD *)v56 + 2) + 1, 1, v56);
    v63 = v56;
    v64 = *((_QWORD *)v56 + 2);
    v162 = v63;
    v65 = *((_QWORD *)v63 + 3);
    v66 = v64 + 1;
    if (v64 >= v65 >> 1)
      v162 = sub_1ABE8BC6C((char *)(v65 > 1), v64 + 1, 1, v162);
    *((_QWORD *)v162 + 2) = v66;
    v67 = &v162[16 * v64 + 32];
    *(_QWORD *)v67 = v15;
    *((_QWORD *)v67 + 1) = v12;
    if (v64)
    {
      v68 = v162;
      v69 = v162 + 32;
      v159 = v12;
      while (1)
      {
        v70 = v66 - 1;
        if (v66 >= 4)
        {
          v75 = &v69[16 * v66];
          v76 = *((_QWORD *)v75 - 8);
          v77 = *((_QWORD *)v75 - 7);
          v81 = __OFSUB__(v77, v76);
          v78 = v77 - v76;
          if (v81)
            goto LABEL_129;
          v80 = *((_QWORD *)v75 - 6);
          v79 = *((_QWORD *)v75 - 5);
          v81 = __OFSUB__(v79, v80);
          v73 = v79 - v80;
          v74 = v81;
          if (v81)
            goto LABEL_130;
          v82 = v66 - 2;
          v83 = &v69[16 * v66 - 32];
          v85 = *(_QWORD *)v83;
          v84 = *((_QWORD *)v83 + 1);
          v81 = __OFSUB__(v84, v85);
          v86 = v84 - v85;
          if (v81)
            goto LABEL_132;
          v81 = __OFADD__(v73, v86);
          v87 = v73 + v86;
          if (v81)
            goto LABEL_135;
          if (v87 >= v78)
          {
            v105 = &v69[16 * v70];
            v107 = *(_QWORD *)v105;
            v106 = *((_QWORD *)v105 + 1);
            v81 = __OFSUB__(v106, v107);
            v108 = v106 - v107;
            if (v81)
              goto LABEL_139;
            v98 = v73 < v108;
            goto LABEL_82;
          }
        }
        else
        {
          if (v66 != 3)
          {
            v99 = *((_QWORD *)v68 + 4);
            v100 = *((_QWORD *)v68 + 5);
            v81 = __OFSUB__(v100, v99);
            v92 = v100 - v99;
            v93 = v81;
            goto LABEL_76;
          }
          v72 = *((_QWORD *)v68 + 4);
          v71 = *((_QWORD *)v68 + 5);
          v81 = __OFSUB__(v71, v72);
          v73 = v71 - v72;
          v74 = v81;
        }
        if ((v74 & 1) != 0)
          goto LABEL_131;
        v82 = v66 - 2;
        v88 = &v69[16 * v66 - 32];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v91 = __OFSUB__(v89, v90);
        v92 = v89 - v90;
        v93 = v91;
        if (v91)
          goto LABEL_134;
        v94 = &v69[16 * v70];
        v96 = *(_QWORD *)v94;
        v95 = *((_QWORD *)v94 + 1);
        v81 = __OFSUB__(v95, v96);
        v97 = v95 - v96;
        if (v81)
          goto LABEL_137;
        if (__OFADD__(v92, v97))
          goto LABEL_138;
        if (v92 + v97 >= v73)
        {
          v98 = v73 < v97;
LABEL_82:
          if (v98)
            v70 = v82;
          goto LABEL_84;
        }
LABEL_76:
        if ((v93 & 1) != 0)
          goto LABEL_133;
        v101 = &v69[16 * v70];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v81 = __OFSUB__(v102, v103);
        v104 = v102 - v103;
        if (v81)
          goto LABEL_136;
        if (v104 < v92)
          goto LABEL_93;
LABEL_84:
        v109 = v70 - 1;
        if (v70 - 1 >= v66)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
        if (!v13)
          goto LABEL_150;
        v110 = v4;
        v111 = &v69[16 * v109];
        v112 = *(_QWORD *)v111;
        v113 = v70;
        v114 = &v69[16 * v70];
        v115 = *((_QWORD *)v114 + 1);
        v116 = (char *)(v13 + 136 * *(_QWORD *)v111);
        v165 = (char *)(v13 + 136 * *(_QWORD *)v114);
        sub_1ABF2FF68();
        sub_1ABE8B7F0(v116, v165, v13 + 136 * v115, __dst, v161, v207);
        if (v110)
        {
LABEL_117:
          swift_bridgeObjectRelease();
          goto LABEL_118;
        }
        v68 = v162;
        if (v115 < v112)
          goto LABEL_126;
        if (v113 > *((_QWORD *)v162 + 2))
          goto LABEL_127;
        v117 = v113;
        *(_QWORD *)v111 = v112;
        v69 = v162 + 32;
        *(_QWORD *)&v162[16 * v109 + 40] = v115;
        v118 = *((_QWORD *)v162 + 2);
        if (v113 >= v118)
          goto LABEL_128;
        v66 = v118 - 1;
        memmove(v114, v114 + 16, 16 * (v118 - 1 - v117));
        *((_QWORD *)v162 + 2) = v118 - 1;
        v98 = v118 > 2;
        v4 = 0;
        v13 = v163;
        v12 = v159;
        if (!v98)
          goto LABEL_93;
      }
    }
    v66 = 1;
LABEL_93:
    v14 = v158;
    if (v12 >= v158)
    {
      v140 = v162;
      if (v66 < 2)
      {
LABEL_121:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v157 + 16) = 0;
        goto LABEL_122;
      }
LABEL_106:
      v141 = *v156;
      v164 = *v156;
      while (1)
      {
        v142 = v66 - 2;
        if (v66 < 2)
          goto LABEL_140;
        if (!v141)
          goto LABEL_153;
        v143 = v4;
        v144 = (uint64_t)v140;
        v145 = *(_QWORD *)&v140[16 * v142 + 32];
        v146 = *(_QWORD *)&v140[16 * v66 + 24];
        v147 = *(_QWORD *)&v140[16 * v66 + 16];
        v148 = (char *)(v141 + 136 * v145);
        v166 = (char *)(v141 + 136 * v147);
        v149 = v141 + 136 * v146;
        sub_1ABF2FF68();
        sub_1ABE8B7F0(v148, v166, v149, __dst, v161, v207);
        v4 = v143;
        if (v143)
          goto LABEL_117;
        if (v146 < v145)
          goto LABEL_141;
        v140 = (char *)v144;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v140 = sub_1ABE8C050(v144);
        if (v142 >= *((_QWORD *)v140 + 2))
          goto LABEL_142;
        v150 = &v140[16 * v142 + 32];
        *(_QWORD *)v150 = v145;
        *((_QWORD *)v150 + 1) = v146;
        v151 = *((_QWORD *)v140 + 2);
        if (v66 > v151)
          goto LABEL_143;
        memmove(&v140[16 * v66 + 16], &v140[16 * v66 + 32], 16 * (v151 - v66));
        *((_QWORD *)v140 + 2) = v151 - 1;
        v66 = v151 - 1;
        v141 = v164;
        if (v151 <= 2)
          goto LABEL_121;
      }
    }
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  swift_release_n();
  __break(1u);
LABEL_151:
  swift_release_n();
  __break(1u);
LABEL_152:
  swift_release_n();
  __break(1u);
LABEL_153:
  swift_release_n();
  __break(1u);
LABEL_154:
  swift_release_n();
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

uint64_t sub_1ABE90DEC(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t a5, char a6)
{
  char *v7;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  BOOL v36;
  char *v37;
  char *v38;
  char *v39;
  char *i;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  char *v62;
  BOOL v63;
  uint64_t result;
  char *v65;
  char *v66;
  char *v69;
  char *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;

  v7 = a2;
  v9 = a2 - __src;
  v10 = (a2 - __src) / 136;
  v70 = __dst;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 136;
  v91 = __src;
  v90 = __dst;
  if (v10 >= v12)
  {
    if (v11 < -135)
      goto LABEL_75;
    if (__dst != a2 || &a2[136 * v12] <= __dst)
      memmove(__dst, a2, 136 * v12);
    v39 = &__dst[136 * v12];
    v89 = v39;
    v91 = v7;
    if (__src >= v7 || v11 < 136)
      goto LABEL_74;
    v66 = __src;
    for (i = (char *)(a3 - 136); ; i -= 136)
    {
      v69 = i + 136;
      v71 = *(_OWORD *)(v39 - 136);
      v41 = *(_OWORD *)(v39 - 120);
      v42 = *(_OWORD *)(v39 - 104);
      v43 = *(_OWORD *)(v39 - 72);
      v74 = *(_OWORD *)(v39 - 88);
      v75 = v43;
      v72 = v41;
      v73 = v42;
      v44 = *(_OWORD *)(v39 - 56);
      v45 = *(_OWORD *)(v39 - 40);
      v46 = *(_OWORD *)(v39 - 24);
      v79 = *((_QWORD *)v39 - 1);
      v77 = v45;
      v78 = v46;
      v76 = v44;
      v80 = *(_OWORD *)(v7 - 136);
      v47 = *(_OWORD *)(v7 - 120);
      v48 = *(_OWORD *)(v7 - 104);
      v49 = *(_OWORD *)(v7 - 72);
      v83 = *(_OWORD *)(v7 - 88);
      v84 = v49;
      v81 = v47;
      v82 = v48;
      v50 = *(_OWORD *)(v7 - 56);
      v51 = *(_OWORD *)(v7 - 40);
      v52 = *(_OWORD *)(v7 - 24);
      v88 = *((_QWORD *)v7 - 1);
      v86 = v51;
      v87 = v52;
      v85 = v50;
      v53 = v73;
      v54 = v82;
      sub_1ABD97ECC((uint64_t)&v71);
      sub_1ABD97ECC((uint64_t)&v80);
      v55 = sub_1ABE8B65C(v53, *((unint64_t *)&v53 + 1));
      v57 = v56;
      v58 = sub_1ABE8B65C(v54, *((unint64_t *)&v54 + 1));
      if (v57)
      {
        if (v59)
        {
          if ((a6 & 1) != 0)
          {
            if (v58 == v55 && v59 == v57)
            {
LABEL_53:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_54:
              sub_1ABD97F60((uint64_t)&v80);
              sub_1ABD97F60((uint64_t)&v71);
LABEL_60:
              v61 = v39 - 136;
              v62 = v70;
              if (v69 == v39)
              {
                v63 = i >= v39;
                v39 -= 136;
                if (!v63)
                  goto LABEL_67;
              }
              else
              {
                v39 -= 136;
              }
              goto LABEL_66;
            }
          }
          else if (v55 == v58 && v57 == v59)
          {
            goto LABEL_53;
          }
          v60 = sub_1ABF3223C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1ABD97F60((uint64_t)&v80);
          sub_1ABD97F60((uint64_t)&v71);
          if ((v60 & 1) == 0)
            goto LABEL_60;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1ABD97F60((uint64_t)&v80);
          sub_1ABD97F60((uint64_t)&v71);
          if ((a6 & 1) == 0)
            goto LABEL_60;
        }
      }
      else
      {
        if (!v59)
          goto LABEL_54;
        swift_bridgeObjectRelease();
        sub_1ABD97F60((uint64_t)&v80);
        sub_1ABD97F60((uint64_t)&v71);
        if ((a6 & 1) != 0)
          goto LABEL_60;
      }
      v61 = v7 - 136;
      v62 = v70;
      if (v69 == v7)
      {
        v63 = i >= v7;
        v7 -= 136;
        if (!v63)
          goto LABEL_67;
      }
      else
      {
        v7 -= 136;
      }
LABEL_66:
      memmove(i, v61, 0x88uLL);
LABEL_67:
      if (v39 <= v62 || v7 <= v66)
      {
        v91 = v7;
        v89 = v39;
        goto LABEL_74;
      }
    }
  }
  if (v9 < -135)
  {
LABEL_75:
    swift_release();
    result = sub_1ABF3202C();
    __break(1u);
    return result;
  }
  if (__dst != __src || &__src[136 * v10] <= __dst)
    memmove(__dst, __src, 136 * v10);
  v65 = &__dst[136 * v10];
  v89 = v65;
  if ((unint64_t)v7 >= a3 || v9 < 136)
    goto LABEL_74;
  v13 = __src;
  v14 = __dst;
  while (1)
  {
    v71 = *(_OWORD *)v7;
    v15 = *((_OWORD *)v7 + 1);
    v16 = *((_OWORD *)v7 + 2);
    v17 = *((_OWORD *)v7 + 4);
    v74 = *((_OWORD *)v7 + 3);
    v75 = v17;
    v72 = v15;
    v73 = v16;
    v18 = *((_OWORD *)v7 + 5);
    v19 = *((_OWORD *)v7 + 6);
    v20 = *((_OWORD *)v7 + 7);
    v79 = *((_QWORD *)v7 + 16);
    v77 = v19;
    v78 = v20;
    v76 = v18;
    v80 = *(_OWORD *)v14;
    v21 = *((_OWORD *)v14 + 1);
    v22 = *((_OWORD *)v14 + 2);
    v23 = *((_OWORD *)v14 + 4);
    v83 = *((_OWORD *)v14 + 3);
    v84 = v23;
    v81 = v21;
    v82 = v22;
    v24 = *((_OWORD *)v14 + 5);
    v25 = *((_OWORD *)v14 + 6);
    v26 = *((_OWORD *)v14 + 7);
    v88 = *((_QWORD *)v14 + 16);
    v86 = v25;
    v87 = v26;
    v85 = v24;
    v27 = v73;
    v28 = v82;
    sub_1ABD97ECC((uint64_t)&v71);
    sub_1ABD97ECC((uint64_t)&v80);
    v29 = sub_1ABE8B65C(v27, *((unint64_t *)&v27 + 1));
    v31 = v30;
    v32 = sub_1ABE8B65C(v28, *((unint64_t *)&v28 + 1));
    if (v31)
    {
      if (v33)
      {
        if ((a6 & 1) != 0)
        {
          if (v32 == v29 && v33 == v31)
          {
LABEL_22:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_23:
            sub_1ABD97F60((uint64_t)&v80);
            sub_1ABD97F60((uint64_t)&v71);
LABEL_28:
            v37 = v14 + 136;
            v35 = v14;
            v36 = v13 == v14;
            v14 += 136;
            if (v36)
              goto LABEL_30;
LABEL_29:
            memmove(v13, v35, 0x88uLL);
            goto LABEL_30;
          }
        }
        else if (v29 == v32 && v31 == v33)
        {
          goto LABEL_22;
        }
        v34 = sub_1ABF3223C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1ABD97F60((uint64_t)&v80);
        sub_1ABD97F60((uint64_t)&v71);
        if ((v34 & 1) == 0)
          goto LABEL_28;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1ABD97F60((uint64_t)&v80);
        sub_1ABD97F60((uint64_t)&v71);
        if ((a6 & 1) == 0)
          goto LABEL_28;
      }
    }
    else
    {
      if (!v33)
        goto LABEL_23;
      swift_bridgeObjectRelease();
      sub_1ABD97F60((uint64_t)&v80);
      sub_1ABD97F60((uint64_t)&v71);
      if ((a6 & 1) != 0)
        goto LABEL_28;
    }
    v35 = v7;
    v36 = v13 == v7;
    v7 += 136;
    v37 = v70;
    if (!v36)
      goto LABEL_29;
LABEL_30:
    v38 = v13 + 136;
    if (v14 >= v65)
    {
      v90 = v37;
      goto LABEL_73;
    }
    if ((unint64_t)v7 >= a3)
      break;
    v70 = v37;
    v13 += 136;
  }
  v90 = v37;
  v38 = v13 + 136;
LABEL_73:
  v91 = v38;
LABEL_74:
  sub_1ABE8BF98((void **)&v91, (const void **)&v90, &v89);
  return 1;
}

uint64_t sub_1ABE913E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *a5, int a6)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 *v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  _OWORD v93[2];
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  _OWORD v101[2];
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  _QWORD *v109;

  v74 = a6;
  v109 = a5;
  v83 = sub_1ABF302A4();
  v73 = *(_QWORD *)(v83 - 8);
  result = MEMORY[0x1E0C80A78](v83);
  v82 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = a3;
  v70 = a2;
  if (a3 != a2)
  {
    v12 = *a4;
    v81 = v109 + 2;
    v72 = v12;
    v13 = (__int128 *)(v12 + 136 * v75);
    v69 = a1 + 1;
LABEL_6:
    v76 = v69;
    v71 = v13;
    while (1)
    {
      v93[0] = *v13;
      v14 = v13[1];
      v15 = v13[2];
      v16 = v13[4];
      v95 = v13[3];
      v96 = v16;
      v93[1] = v14;
      v94 = v15;
      v17 = v13[5];
      v18 = v13[6];
      v19 = v13[7];
      v100 = *((_QWORD *)v13 + 16);
      v98 = v18;
      v99 = v19;
      v97 = v17;
      v101[0] = *(__int128 *)((char *)v13 - 136);
      v20 = *(__int128 *)((char *)v13 - 120);
      v21 = *(__int128 *)((char *)v13 - 104);
      v22 = *(__int128 *)((char *)v13 - 72);
      v103 = *(__int128 *)((char *)v13 - 88);
      v104 = v22;
      v101[1] = v20;
      v102 = v21;
      v23 = *(__int128 *)((char *)v13 - 56);
      v24 = *(__int128 *)((char *)v13 - 40);
      v25 = *(__int128 *)((char *)v13 - 24);
      v108 = *((_QWORD *)v13 - 1);
      v106 = v24;
      v107 = v25;
      v105 = v23;
      v26 = v94;
      v27 = v109[5];
      v28 = v109[6];
      __swift_project_boxed_opaque_existential_1(v81, v27);
      v29 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v28 + 8);
      sub_1ABD97ECC((uint64_t)v93);
      sub_1ABD97ECC((uint64_t)v101);
      v30 = v29(v26, *((_QWORD *)&v26 + 1), 0, v27, v28);
      if (v31)
        v32 = v30;
      else
        v32 = 0;
      if (v31)
        v33 = v31;
      else
        v33 = 0xE000000000000000;
      v34 = HIBYTE(v33) & 0xF;
      if ((v33 & 0x2000000000000000) == 0)
        v34 = v32 & 0xFFFFFFFFFFFFLL;
      if (!v34)
      {
        swift_bridgeObjectRelease();
        v33 = sub_1ABF2FF5C();
        v32 = v26;
      }
      v77 = *((_QWORD *)&v102 + 1);
      v78 = v102;
      *(_QWORD *)&v84 = v32;
      *((_QWORD *)&v84 + 1) = v33;
      v35 = v82;
      sub_1ABF30274();
      sub_1ABD0E288();
      v36 = sub_1ABF31DA4();
      v38 = v37;
      v39 = *(void (**)(char *, uint64_t))(v73 + 8);
      v40 = v83;
      v39(v35, v83);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v84 = v36;
      *((_QWORD *)&v84 + 1) = v38;
      sub_1ABF3028C();
      sub_1ABF31DA4();
      v41 = v35;
      v42 = v40;
      v44 = v77;
      v43 = v78;
      v39(v41, v42);
      swift_bridgeObjectRelease();
      v79 = sub_1ABF31810();
      v80 = v45;
      swift_bridgeObjectRelease();
      v47 = v109[5];
      v46 = v109[6];
      __swift_project_boxed_opaque_existential_1(v81, v47);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 8))(v43, v44, 0, v47, v46);
      if (v49)
        v50 = v48;
      else
        v50 = 0;
      if (v49)
        v51 = v49;
      else
        v51 = 0xE000000000000000;
      v52 = HIBYTE(v51) & 0xF;
      if ((v51 & 0x2000000000000000) == 0)
        v52 = v50 & 0xFFFFFFFFFFFFLL;
      if (!v52)
      {
        swift_bridgeObjectRelease();
        v51 = sub_1ABF2FF5C();
        v50 = v43;
      }
      *(_QWORD *)&v84 = v50;
      *((_QWORD *)&v84 + 1) = v51;
      v53 = v82;
      sub_1ABF30274();
      v54 = sub_1ABF31DA4();
      v56 = v55;
      v57 = v83;
      v39(v53, v83);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v84 = v54;
      *((_QWORD *)&v84 + 1) = v56;
      sub_1ABF3028C();
      sub_1ABF31DA4();
      v39(v53, v57);
      swift_bridgeObjectRelease();
      v58 = sub_1ABF31810();
      v60 = v59;
      swift_bridgeObjectRelease();
      if ((v74 & 1) != 0)
      {
        if (v58 == v79 && v60 == v80)
        {
LABEL_4:
          swift_bridgeObjectRelease_n();
          sub_1ABD97F60((uint64_t)v101);
          result = sub_1ABD97F60((uint64_t)v93);
LABEL_5:
          v13 = (__int128 *)((char *)v71 + 136);
          if (++v75 == v70)
            return result;
          goto LABEL_6;
        }
      }
      else if (v79 == v58 && v80 == v60)
      {
        goto LABEL_4;
      }
      v61 = sub_1ABF3223C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ABD97F60((uint64_t)v101);
      result = sub_1ABD97F60((uint64_t)v93);
      v62 = v76;
      if ((v61 & 1) == 0)
        goto LABEL_5;
      if (!v72)
        break;
      v63 = (uint64_t)v13 - 136;
      v89 = v13[5];
      v90 = v13[6];
      v91 = v13[7];
      v92 = *((_QWORD *)v13 + 16);
      v85 = v13[1];
      v86 = v13[2];
      v87 = v13[3];
      v88 = v13[4];
      v84 = *v13;
      v64 = *(__int128 *)((char *)v13 - 56);
      v13[4] = *(__int128 *)((char *)v13 - 72);
      v13[5] = v64;
      v65 = *(__int128 *)((char *)v13 - 24);
      v13[6] = *(__int128 *)((char *)v13 - 40);
      v13[7] = v65;
      *((_QWORD *)v13 + 16) = *((_QWORD *)v13 - 1);
      v66 = *(__int128 *)((char *)v13 - 88);
      v13[2] = *(__int128 *)((char *)v13 - 104);
      v13[3] = v66;
      v67 = *(__int128 *)((char *)v13 - 120);
      *v13 = *(__int128 *)((char *)v13 - 136);
      v13[1] = v67;
      *(_OWORD *)(v63 + 64) = v88;
      *(_OWORD *)(v63 + 80) = v89;
      *(_OWORD *)(v63 + 96) = v90;
      *(_OWORD *)(v63 + 112) = v91;
      *(_QWORD *)(v63 + 128) = v92;
      *(_OWORD *)(v63 + 16) = v85;
      *(_OWORD *)(v63 + 32) = v86;
      *(_OWORD *)(v63 + 48) = v87;
      *(_OWORD *)v63 = v84;
      if (v75 == v62)
        goto LABEL_5;
      v76 = v62 + 1;
      v13 = (__int128 *)((char *)v13 - 136);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABE9191C(uint64_t *a1, _QWORD *a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t i;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  _OWORD *v89;
  uint64_t v90;
  uint64_t v91;
  _OWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v96;
  unint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  char v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  BOOL v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t (*v171)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  char *v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(char *, uint64_t);
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  char v203;
  uint64_t v204;
  uint64_t v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  unint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  unint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  char *v220;
  char *v221;
  unint64_t v222;
  char *v223;
  uint64_t result;
  uint64_t v225;
  _BOOL4 v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  int v243;
  uint64_t v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t v247;
  char *v248;
  _QWORD *v249;
  char *v250;
  uint64_t v251;
  unint64_t v252;
  unint64_t v253;
  unint64_t v254;
  _OWORD v255[2];
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  uint64_t v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  uint64_t v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  uint64_t v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  uint64_t v289;
  _QWORD *v290;

  v243 = a3 & 1;
  v251 = sub_1ABF302A4();
  v240 = *(_QWORD *)(v251 - 8);
  MEMORY[0x1E0C80A78](v251);
  v250 = (char *)&v225 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = a1;
  v6 = a1[1];
  swift_retain_n();
  v7 = sub_1ABF321E8();
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_210;
    if (v6)
    {
      sub_1ABF2FF68();
      v11 = v238;
      sub_1ABE913E0(0, v6, 1, v231, a2, v243);
      swift_release_n();
      v238 = v11;
    }
    else
    {
      swift_release_n();
    }
    return swift_release();
  }
  v290 = a2;
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_218;
  v235 = v6;
  v230 = v7;
  if (v6 < 2)
  {
    v237 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v229 = MEMORY[0x1E0DEE9D8];
    if (v6 == 1)
      goto LABEL_12;
    v16 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v14 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_172:
    if (v16 >= 2)
    {
      v210 = *v231;
      v252 = *v231;
      do
      {
        v211 = v16 - 2;
        if (v16 < 2)
          goto LABEL_205;
        if (!v210)
          goto LABEL_217;
        v239 = v14;
        v212 = *(_QWORD *)&v14[16 * v211 + 32];
        v213 = *(_QWORD *)&v14[16 * v16 + 24];
        v214 = (char *)(v210 + 136 * v212);
        v215 = (char *)(v210 + 136 * *(_QWORD *)&v14[16 * v16 + 16]);
        v216 = v210 + 136 * v213;
        v217 = (uint64_t)v290;
        sub_1ABF2FF68();
        v218 = v214;
        v219 = v238;
        sub_1ABE90DEC(v218, v215, v216, v237, v217, v243);
        v238 = v219;
        if (v219)
          goto LABEL_186;
        swift_release();
        if (v213 < v212)
          goto LABEL_206;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v220 = v239;
        else
          v220 = sub_1ABE8C050((uint64_t)v239);
        if (v211 >= *((_QWORD *)v220 + 2))
          goto LABEL_207;
        v221 = &v220[16 * v211 + 32];
        *(_QWORD *)v221 = v212;
        *((_QWORD *)v221 + 1) = v213;
        v222 = *((_QWORD *)v220 + 2);
        if (v16 > v222)
          goto LABEL_208;
        v223 = v220;
        memmove(&v220[16 * v16 + 16], &v220[16 * v16 + 32], 16 * (v222 - v16));
        v14 = v223;
        *((_QWORD *)v223 + 2) = v222 - 1;
        v16 = v222 - 1;
        v210 = v252;
      }
      while (v222 > 2);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v229 + 16) = 0;
LABEL_187:
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v9 = v8 >> 1;
  v10 = sub_1ABF31A74();
  *(_QWORD *)(v10 + 16) = v9;
  v229 = v10;
  v237 = (char *)(v10 + 32);
LABEL_12:
  v12 = 0;
  v13 = *v231;
  v249 = v290 + 2;
  v226 = v243 == 0;
  v242 = v13;
  v227 = v13 - 136;
  v228 = v13 + 272;
  v14 = (char *)MEMORY[0x1E0DEE9D8];
  v15 = v235;
  while (2)
  {
    v239 = v14;
    v233 = v12 + 1;
    v234 = v12;
    if (v12 + 1 >= v15)
    {
      v38 = v12 + 1;
      goto LABEL_76;
    }
    v17 = v242 + 136 * (v12 + 1);
    v272 = *(_OWORD *)v17;
    v18 = *(_OWORD *)(v17 + 16);
    v19 = *(_OWORD *)(v17 + 32);
    v20 = *(_OWORD *)(v17 + 64);
    v275 = *(_OWORD *)(v17 + 48);
    v276 = v20;
    v273 = v18;
    v274 = v19;
    v21 = *(_OWORD *)(v17 + 80);
    v22 = *(_OWORD *)(v17 + 96);
    v23 = *(_OWORD *)(v17 + 112);
    v280 = *(_QWORD *)(v17 + 128);
    v278 = v22;
    v279 = v23;
    v277 = v21;
    v24 = v242 + 136 * v12;
    v281 = *(_OWORD *)v24;
    v25 = *(_OWORD *)(v24 + 16);
    v26 = *(_OWORD *)(v24 + 32);
    v27 = *(_OWORD *)(v24 + 64);
    v284 = *(_OWORD *)(v24 + 48);
    v285 = v27;
    v282 = v25;
    v283 = v26;
    v28 = *(_OWORD *)(v24 + 80);
    v29 = *(_OWORD *)(v24 + 96);
    v30 = *(_OWORD *)(v24 + 112);
    v289 = *(_QWORD *)(v24 + 128);
    v287 = v29;
    v288 = v30;
    v286 = v28;
    v31 = v274;
    v32 = v283;
    sub_1ABD97ECC((uint64_t)&v272);
    sub_1ABD97ECC((uint64_t)&v281);
    v33 = sub_1ABE8B65C(v31, *((unint64_t *)&v31 + 1));
    v35 = v34;
    v36 = sub_1ABE8B65C(v32, *((unint64_t *)&v32 + 1));
    if (v35)
    {
      if (v37)
      {
        if (v243)
        {
          if (v36 != v33 || v37 != v35)
          {
LABEL_30:
            LODWORD(v241) = sub_1ABF3223C();
            swift_bridgeObjectRelease();
            goto LABEL_31;
          }
        }
        else if (v33 != v36 || v35 != v37)
        {
          goto LABEL_30;
        }
        swift_bridgeObjectRelease();
        LODWORD(v241) = 0;
      }
      else
      {
        LODWORD(v241) = v243;
      }
LABEL_31:
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
    if (v37)
    {
      LODWORD(v241) = v226;
      goto LABEL_31;
    }
    LODWORD(v241) = 0;
LABEL_32:
    sub_1ABD97F60((uint64_t)&v281);
    sub_1ABD97F60((uint64_t)&v272);
    v38 = v12 + 2;
    v39 = v290;
    if (v12 + 2 >= v235)
      goto LABEL_67;
    v248 = (char *)(v12 + 3);
    for (i = v228 + 136 * v12; ; i += 136)
    {
      v255[0] = *(_OWORD *)i;
      v41 = *(_OWORD *)(i + 16);
      v42 = *(_OWORD *)(i + 32);
      v43 = *(_OWORD *)(i + 64);
      v257 = *(_OWORD *)(i + 48);
      v258 = v43;
      v255[1] = v41;
      v256 = v42;
      v44 = *(_OWORD *)(i + 80);
      v45 = *(_OWORD *)(i + 96);
      v46 = *(_OWORD *)(i + 112);
      v262 = *(_QWORD *)(i + 128);
      v260 = v45;
      v261 = v46;
      v259 = v44;
      v263 = *(_OWORD *)(i - 136);
      v47 = *(_OWORD *)(i - 120);
      v48 = *(_OWORD *)(i - 104);
      v49 = *(_OWORD *)(i - 72);
      v266 = *(_OWORD *)(i - 88);
      v267 = v49;
      v264 = v47;
      v265 = v48;
      v50 = *(_OWORD *)(i - 56);
      v51 = *(_OWORD *)(i - 40);
      v52 = *(_OWORD *)(i - 24);
      v271 = *(_QWORD *)(i - 8);
      v269 = v51;
      v270 = v52;
      v268 = v50;
      v53 = v256;
      v54 = v39[5];
      v55 = v39[6];
      __swift_project_boxed_opaque_existential_1(v249, v54);
      v56 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v55 + 8);
      sub_1ABD97ECC((uint64_t)v255);
      sub_1ABD97ECC((uint64_t)&v263);
      v57 = v56(v53, *((_QWORD *)&v53 + 1), 0, v54, v55);
      if (v58)
        v59 = v57;
      else
        v59 = 0;
      if (v58)
        v60 = v58;
      else
        v60 = 0xE000000000000000;
      v61 = HIBYTE(v60) & 0xF;
      if ((v60 & 0x2000000000000000) == 0)
        v61 = v59 & 0xFFFFFFFFFFFFLL;
      if (!v61)
      {
        swift_bridgeObjectRelease();
        v60 = sub_1ABF2FF5C();
        v59 = v53;
      }
      v252 = v265;
      v253 = v59;
      v244 = *((_QWORD *)&v265 + 1);
      v254 = v60;
      v62 = v250;
      sub_1ABF30274();
      v63 = sub_1ABD0E288();
      v64 = sub_1ABF31DA4();
      v66 = v65;
      v67 = *(void (**)(char *, uint64_t))(v240 + 8);
      v68 = v251;
      v67(v62, v251);
      swift_bridgeObjectRelease();
      v253 = v64;
      v254 = v66;
      sub_1ABF3028C();
      v245 = v63;
      v69 = v244;
      sub_1ABF31DA4();
      v67(v62, v68);
      swift_bridgeObjectRelease();
      v70 = sub_1ABF31810();
      v72 = v71;
      swift_bridgeObjectRelease();
      v73 = v290[5];
      v74 = v290[6];
      __swift_project_boxed_opaque_existential_1(v249, v73);
      v75 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 8))(v252, v69, 0, v73, v74);
      if (v76)
        v77 = v75;
      else
        v77 = 0;
      if (v76)
        v78 = v76;
      else
        v78 = 0xE000000000000000;
      v79 = HIBYTE(v78) & 0xF;
      if ((v78 & 0x2000000000000000) == 0)
        v79 = v77 & 0xFFFFFFFFFFFFLL;
      v246 = v70;
      v247 = v72;
      if (!v79)
      {
        swift_bridgeObjectRelease();
        v78 = sub_1ABF2FF5C();
        v77 = v252;
      }
      v253 = v77;
      v254 = v78;
      v80 = v250;
      sub_1ABF30274();
      v81 = sub_1ABF31DA4();
      v83 = v82;
      v84 = v251;
      v67(v80, v251);
      swift_bridgeObjectRelease();
      v253 = v81;
      v254 = v83;
      sub_1ABF3028C();
      sub_1ABF31DA4();
      v67(v80, v84);
      swift_bridgeObjectRelease();
      v85 = sub_1ABF31810();
      v87 = v86;
      swift_bridgeObjectRelease();
      if (v243)
      {
        v12 = v234;
        if (v85 == v246 && v87 == v247)
          goto LABEL_60;
      }
      else
      {
        v12 = v234;
        if (v246 == v85 && v247 == v87)
        {
LABEL_60:
          v88 = 0;
          goto LABEL_62;
        }
      }
      v88 = sub_1ABF3223C();
LABEL_62:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ABD97F60((uint64_t)&v263);
      sub_1ABD97F60((uint64_t)v255);
      if (((v241 ^ v88) & 1) != 0)
      {
        v38 = (uint64_t)(v248 - 1);
        goto LABEL_67;
      }
      v39 = v290;
      if ((char *)v235 == v248)
        break;
      ++v248;
    }
    v38 = v235;
LABEL_67:
    if ((v241 & 1) != 0)
    {
      if (v38 < v12)
        goto LABEL_211;
      if (v12 < v38)
      {
        v89 = (_OWORD *)(v227 + 136 * v38);
        v90 = v38;
        v91 = v12;
        v92 = (_OWORD *)(v242 + 136 * v12);
        do
        {
          if (v91 != --v38)
          {
            if (!v242)
              goto LABEL_216;
            v268 = v92[5];
            v269 = v92[6];
            v270 = v92[7];
            v271 = *((_QWORD *)v92 + 16);
            v264 = v92[1];
            v265 = v92[2];
            v266 = v92[3];
            v267 = v92[4];
            v263 = *v92;
            memmove(v92, v89, 0x88uLL);
            v89[5] = v268;
            v89[6] = v269;
            v89[7] = v270;
            *((_QWORD *)v89 + 16) = v271;
            v89[1] = v264;
            v89[2] = v265;
            v89[3] = v266;
            v89[4] = v267;
            *v89 = v263;
          }
          ++v91;
          v89 = (_OWORD *)((char *)v89 - 136);
          v92 = (_OWORD *)((char *)v92 + 136);
        }
        while (v91 < v38);
        v38 = v90;
      }
    }
LABEL_76:
    if (v38 >= v235)
      goto LABEL_85;
    if (__OFSUB__(v38, v12))
      goto LABEL_209;
    v93 = v290;
    if (v38 - v12 >= v230)
    {
LABEL_85:
      if (v38 < v12)
        goto LABEL_204;
      goto LABEL_86;
    }
    if (__OFADD__(v12, v230))
      goto LABEL_212;
    if (v12 + v230 >= v235)
      v94 = v235;
    else
      v94 = v12 + v230;
    if (v94 >= v12)
    {
      if (v38 == v94)
        goto LABEL_85;
      v154 = v242 + 136 * v38;
      v232 = v94;
      while (2)
      {
        v241 = v38;
        v244 = v233;
        v236 = v154;
        while (2)
        {
          v272 = *(_OWORD *)v154;
          v156 = *(_OWORD *)(v154 + 16);
          v157 = *(_OWORD *)(v154 + 32);
          v158 = *(_OWORD *)(v154 + 64);
          v275 = *(_OWORD *)(v154 + 48);
          v276 = v158;
          v273 = v156;
          v274 = v157;
          v159 = *(_OWORD *)(v154 + 80);
          v160 = *(_OWORD *)(v154 + 96);
          v161 = *(_OWORD *)(v154 + 112);
          v280 = *(_QWORD *)(v154 + 128);
          v278 = v160;
          v279 = v161;
          v277 = v159;
          v281 = *(_OWORD *)(v154 - 136);
          v162 = *(_OWORD *)(v154 - 120);
          v163 = *(_OWORD *)(v154 - 104);
          v164 = *(_OWORD *)(v154 - 72);
          v284 = *(_OWORD *)(v154 - 88);
          v285 = v164;
          v282 = v162;
          v283 = v163;
          v165 = *(_OWORD *)(v154 - 56);
          v166 = *(_OWORD *)(v154 - 40);
          v167 = *(_OWORD *)(v154 - 24);
          v289 = *(_QWORD *)(v154 - 8);
          v287 = v166;
          v288 = v167;
          v286 = v165;
          v168 = v274;
          v169 = v93[5];
          v170 = v93[6];
          __swift_project_boxed_opaque_existential_1(v249, v169);
          v171 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v170 + 8);
          sub_1ABD97ECC((uint64_t)&v272);
          sub_1ABD97ECC((uint64_t)&v281);
          v172 = v171(v168, *((_QWORD *)&v168 + 1), 0, v169, v170);
          if (v173)
            v174 = v172;
          else
            v174 = 0;
          if (v173)
            v175 = v173;
          else
            v175 = 0xE000000000000000;
          v176 = HIBYTE(v175) & 0xF;
          if ((v175 & 0x2000000000000000) == 0)
            v176 = v174 & 0xFFFFFFFFFFFFLL;
          if (!v176)
          {
            swift_bridgeObjectRelease();
            v175 = sub_1ABF2FF5C();
            v174 = v168;
          }
          v245 = *((_QWORD *)&v283 + 1);
          v252 = v283;
          *(_QWORD *)&v263 = v174;
          *((_QWORD *)&v263 + 1) = v175;
          v177 = v250;
          sub_1ABF30274();
          v178 = sub_1ABD0E288();
          v179 = sub_1ABF31DA4();
          v181 = v180;
          v182 = *(void (**)(char *, uint64_t))(v240 + 8);
          v183 = v251;
          v182(v177, v251);
          swift_bridgeObjectRelease();
          *(_QWORD *)&v263 = v179;
          *((_QWORD *)&v263 + 1) = v181;
          sub_1ABF3028C();
          v246 = v178;
          v184 = v245;
          sub_1ABF31DA4();
          v182(v177, v183);
          swift_bridgeObjectRelease();
          v185 = sub_1ABF31810();
          v187 = v186;
          swift_bridgeObjectRelease();
          v189 = v290[5];
          v188 = v290[6];
          __swift_project_boxed_opaque_existential_1(v249, v189);
          v190 = (*(uint64_t (**)(unint64_t, unint64_t, _QWORD, uint64_t, uint64_t))(v188 + 8))(v252, v184, 0, v189, v188);
          if (v191)
            v192 = v190;
          else
            v192 = 0;
          if (v191)
            v193 = v191;
          else
            v193 = 0xE000000000000000;
          v194 = HIBYTE(v193) & 0xF;
          if ((v193 & 0x2000000000000000) == 0)
            v194 = v192 & 0xFFFFFFFFFFFFLL;
          v247 = v185;
          v248 = v187;
          if (!v194)
          {
            swift_bridgeObjectRelease();
            v193 = sub_1ABF2FF5C();
            v192 = v252;
          }
          *(_QWORD *)&v263 = v192;
          *((_QWORD *)&v263 + 1) = v193;
          v195 = v250;
          sub_1ABF30274();
          v196 = sub_1ABF31DA4();
          v198 = v197;
          v199 = v251;
          v182(v195, v251);
          swift_bridgeObjectRelease();
          *(_QWORD *)&v263 = v196;
          *((_QWORD *)&v263 + 1) = v198;
          sub_1ABF3028C();
          sub_1ABF31DA4();
          v182(v195, v199);
          swift_bridgeObjectRelease();
          v200 = sub_1ABF31810();
          v202 = v201;
          swift_bridgeObjectRelease();
          if (v243)
          {
            if (v200 == v247 && v202 == v248)
              break;
            goto LABEL_163;
          }
          if (v247 != v200 || v248 != v202)
          {
LABEL_163:
            v203 = sub_1ABF3223C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1ABD97F60((uint64_t)&v281);
            sub_1ABD97F60((uint64_t)&v272);
            v93 = v290;
            v155 = v241;
            v204 = v244;
            if ((v203 & 1) == 0)
              goto LABEL_135;
            if (!v242)
              goto LABEL_214;
            v205 = v154 - 136;
            v268 = *(_OWORD *)(v154 + 80);
            v269 = *(_OWORD *)(v154 + 96);
            v270 = *(_OWORD *)(v154 + 112);
            v271 = *(_QWORD *)(v154 + 128);
            v264 = *(_OWORD *)(v154 + 16);
            v265 = *(_OWORD *)(v154 + 32);
            v266 = *(_OWORD *)(v154 + 48);
            v267 = *(_OWORD *)(v154 + 64);
            v263 = *(_OWORD *)v154;
            v206 = *(_OWORD *)(v154 - 56);
            *(_OWORD *)(v154 + 64) = *(_OWORD *)(v154 - 72);
            *(_OWORD *)(v154 + 80) = v206;
            v207 = *(_OWORD *)(v154 - 24);
            *(_OWORD *)(v154 + 96) = *(_OWORD *)(v154 - 40);
            *(_OWORD *)(v154 + 112) = v207;
            *(_QWORD *)(v154 + 128) = *(_QWORD *)(v154 - 8);
            v208 = *(_OWORD *)(v154 - 88);
            *(_OWORD *)(v154 + 32) = *(_OWORD *)(v154 - 104);
            *(_OWORD *)(v154 + 48) = v208;
            v209 = *(_OWORD *)(v154 - 120);
            *(_OWORD *)v154 = *(_OWORD *)(v154 - 136);
            *(_OWORD *)(v154 + 16) = v209;
            *(_OWORD *)(v205 + 64) = v267;
            *(_OWORD *)(v205 + 80) = v268;
            *(_OWORD *)(v205 + 96) = v269;
            *(_OWORD *)(v205 + 112) = v270;
            *(_QWORD *)(v205 + 128) = v271;
            *(_OWORD *)(v205 + 16) = v264;
            *(_OWORD *)(v205 + 32) = v265;
            *(_OWORD *)(v205 + 48) = v266;
            *(_OWORD *)v205 = v263;
            if (v155 == v204)
              goto LABEL_135;
            v244 = v204 + 1;
            v154 -= 136;
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease_n();
        sub_1ABD97F60((uint64_t)&v281);
        sub_1ABD97F60((uint64_t)&v272);
        v93 = v290;
        v155 = v241;
LABEL_135:
        v38 = v155 + 1;
        v154 = v236 + 136;
        if (v38 != v232)
          continue;
        break;
      }
      v38 = v232;
      v12 = v234;
      if (v232 < v234)
        goto LABEL_204;
LABEL_86:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v241 = v38;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        v14 = v239;
      else
        v14 = sub_1ABE8BC6C(0, *((_QWORD *)v239 + 2) + 1, 1, v239);
      v97 = *((_QWORD *)v14 + 2);
      v96 = *((_QWORD *)v14 + 3);
      v16 = v97 + 1;
      if (v97 >= v96 >> 1)
        v14 = sub_1ABE8BC6C((char *)(v96 > 1), v97 + 1, 1, v14);
      *((_QWORD *)v14 + 2) = v16;
      v98 = v14 + 32;
      v99 = &v14[16 * v97 + 32];
      v100 = v241;
      *(_QWORD *)v99 = v12;
      *((_QWORD *)v99 + 1) = v100;
      if (!v97)
      {
        v16 = 1;
LABEL_14:
        v15 = v235;
        v12 = v241;
        if (v241 >= v235)
          goto LABEL_172;
        continue;
      }
      v239 = v14;
      v248 = v14 + 32;
LABEL_92:
      v101 = v16 - 1;
      if (v16 >= 4)
      {
        v106 = &v98[16 * v16];
        v107 = *((_QWORD *)v106 - 8);
        v108 = *((_QWORD *)v106 - 7);
        v112 = __OFSUB__(v108, v107);
        v109 = v108 - v107;
        if (v112)
          goto LABEL_193;
        v111 = *((_QWORD *)v106 - 6);
        v110 = *((_QWORD *)v106 - 5);
        v112 = __OFSUB__(v110, v111);
        v104 = v110 - v111;
        v105 = v112;
        if (v112)
          goto LABEL_194;
        v113 = v16 - 2;
        v114 = &v98[16 * v16 - 32];
        v116 = *(_QWORD *)v114;
        v115 = *((_QWORD *)v114 + 1);
        v112 = __OFSUB__(v115, v116);
        v117 = v115 - v116;
        if (v112)
          goto LABEL_196;
        v112 = __OFADD__(v104, v117);
        v118 = v104 + v117;
        if (v112)
          goto LABEL_199;
        if (v118 >= v109)
        {
          v136 = &v98[16 * v101];
          v138 = *(_QWORD *)v136;
          v137 = *((_QWORD *)v136 + 1);
          v112 = __OFSUB__(v137, v138);
          v139 = v137 - v138;
          if (v112)
            goto LABEL_203;
          v129 = v104 < v139;
        }
        else
        {
LABEL_105:
          if ((v105 & 1) != 0)
            goto LABEL_195;
          v113 = v16 - 2;
          v119 = &v98[16 * v16 - 32];
          v121 = *(_QWORD *)v119;
          v120 = *((_QWORD *)v119 + 1);
          v122 = __OFSUB__(v120, v121);
          v123 = v120 - v121;
          v124 = v122;
          if (v122)
            goto LABEL_198;
          v125 = &v98[16 * v101];
          v127 = *(_QWORD *)v125;
          v126 = *((_QWORD *)v125 + 1);
          v112 = __OFSUB__(v126, v127);
          v128 = v126 - v127;
          if (v112)
            goto LABEL_201;
          if (__OFADD__(v123, v128))
            goto LABEL_202;
          if (v123 + v128 < v104)
            goto LABEL_117;
          v129 = v104 < v128;
        }
        if (v129)
          v101 = v113;
      }
      else
      {
        if (v16 == 3)
        {
          v103 = *((_QWORD *)v14 + 4);
          v102 = *((_QWORD *)v14 + 5);
          v112 = __OFSUB__(v102, v103);
          v104 = v102 - v103;
          v105 = v112;
          goto LABEL_105;
        }
        v130 = *((_QWORD *)v14 + 4);
        v131 = *((_QWORD *)v14 + 5);
        v112 = __OFSUB__(v131, v130);
        v123 = v131 - v130;
        v124 = v112;
LABEL_117:
        if ((v124 & 1) != 0)
          goto LABEL_197;
        v132 = &v98[16 * v101];
        v134 = *(_QWORD *)v132;
        v133 = *((_QWORD *)v132 + 1);
        v112 = __OFSUB__(v133, v134);
        v135 = v133 - v134;
        if (v112)
          goto LABEL_200;
        if (v135 < v123)
          goto LABEL_14;
      }
      v140 = v101 - 1;
      if (v101 - 1 >= v16)
      {
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        __break(1u);
LABEL_198:
        __break(1u);
LABEL_199:
        __break(1u);
LABEL_200:
        __break(1u);
LABEL_201:
        __break(1u);
LABEL_202:
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
LABEL_205:
        __break(1u);
LABEL_206:
        __break(1u);
LABEL_207:
        __break(1u);
LABEL_208:
        __break(1u);
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
LABEL_211:
        __break(1u);
LABEL_212:
        __break(1u);
        break;
      }
      if (!v242)
        goto LABEL_215;
      v141 = &v98[16 * v140];
      v142 = *(_QWORD *)v141;
      v143 = v101;
      v144 = &v98[16 * v101];
      v145 = *((_QWORD *)v144 + 1);
      v146 = (char *)(v242 + 136 * *(_QWORD *)v141);
      v147 = (char *)(v242 + 136 * *(_QWORD *)v144);
      v252 = v242 + 136 * v145;
      v148 = (uint64_t)v290;
      sub_1ABF2FF68();
      v149 = v146;
      v150 = v238;
      sub_1ABE90DEC(v149, v147, v252, v237, v148, v243);
      v238 = v150;
      if (v150)
      {
LABEL_186:
        swift_bridgeObjectRelease();
        swift_release();
        *(_QWORD *)(v229 + 16) = 0;
        goto LABEL_187;
      }
      swift_release();
      if (v145 < v142)
        goto LABEL_190;
      v151 = v239;
      if (v143 > *((_QWORD *)v239 + 2))
        goto LABEL_191;
      v152 = v143;
      *(_QWORD *)v141 = v142;
      v98 = v248;
      *(_QWORD *)&v248[16 * v140 + 8] = v145;
      v153 = *((_QWORD *)v151 + 2);
      if (v152 >= v153)
        goto LABEL_192;
      v16 = v153 - 1;
      memmove(v144, v144 + 16, 16 * (v153 - 1 - v152));
      v14 = v239;
      *((_QWORD *)v239 + 2) = v153 - 1;
      if (v153 <= 2)
        goto LABEL_14;
      goto LABEL_92;
    }
    break;
  }
  __break(1u);
LABEL_214:
  swift_release_n();
  __break(1u);
LABEL_215:
  swift_release_n();
  __break(1u);
LABEL_216:
  swift_release_n();
  __break(1u);
LABEL_217:
  swift_release_n();
  __break(1u);
LABEL_218:
  swift_release_n();
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

uint64_t sub_1ABE92ADC(_QWORD **a1, uint64_t a2, char a3, void (*a4)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD v11[2];

  v7 = a3 & 1;
  v8 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_1ABF20B9C(v8);
  v9 = v8[2];
  v11[0] = v8 + 4;
  v11[1] = v9;
  sub_1ABF2FF68();
  a4(v11, a2, v7);
  swift_release();
  *a1 = v8;
  return swift_release_n();
}

uint64_t sub_1ABE92B94(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABE92BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1ABE92C14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346F68)
  {
    v0 = sub_1ABF31BB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346F68);
  }
}

uint64_t sub_1ABE92C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t, uint64_t);
  void (*v132)(char *, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(char *, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int *v149;
  unsigned int (*v150)(uint64_t, uint64_t, int *);
  uint64_t v151;
  char *v152;
  uint64_t v153;
  double v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t (*v163)(uint64_t);
  uint64_t v164;
  unint64_t *v165;
  uint64_t (*v166)();
  uint64_t v167;
  double v168;
  char v169;
  unsigned int (*v170)(uint64_t, uint64_t, int *);
  uint64_t v171;
  uint64_t v172;
  uint64_t (*v173)(uint64_t);
  uint64_t v174;
  unsigned int (*v175)(uint64_t, uint64_t, int *);
  uint64_t v176;
  double v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t (*v188)(uint64_t);
  uint64_t v189;
  uint64_t v190;
  double v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t (*v202)(uint64_t);
  uint64_t v203;
  unint64_t *v204;
  uint64_t (*v205)();
  uint64_t v206;
  double v207;
  char v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t (*v211)(uint64_t);
  uint64_t v212;
  uint64_t v213;
  uint64_t (*v214)(uint64_t);
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int *v222;
  unsigned int (*v223)(uint64_t, uint64_t, int *);
  double v224;
  char v225;
  uint64_t v226;
  uint64_t (*v227)(uint64_t);
  uint64_t v228;
  uint64_t v229;
  double v230;
  char v231;
  uint64_t v232;
  uint64_t (*v233)(uint64_t);
  uint64_t v234;
  double v235;
  char v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t (*v240)(uint64_t);
  uint64_t v241;
  uint64_t v242;
  double v243;
  char v244;
  uint64_t v245;
  uint64_t (*v246)(uint64_t);
  uint64_t v247;
  double v248;
  char v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t (*v252)(uint64_t);
  uint64_t v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char v259;
  uint64_t result;
  char v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  char v282;
  uint64_t v283;
  uint64_t v284;
  char v285;
  uint64_t v286;
  char v287;
  uint64_t v288;
  double v289;
  char v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t (*v293)(uint64_t);
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t (*v304)(uint64_t);
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  void (*v311)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v312;
  uint64_t v313;
  unsigned int (*v314)(uint64_t, uint64_t, uint64_t);
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  __int128 v322;
  _OWORD *v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  _OWORD *v357;
  uint64_t v358;
  char *v359;
  char *v360;
  char *v361;
  char *v362;
  char *v363;
  char *v364;
  char *v365;
  unsigned int v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  char *v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  char *v391;
  char *v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;

  v419 = a3;
  v417 = a2;
  v396 = a1;
  v357 = a4;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v355 = (char *)&v334 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v356 = (uint64_t)&v334 - v8;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v4);
  MEMORY[0x1E0C80A78](v9);
  v365 = (char *)&v334 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v393 = (char *)&v334 - v12;
  MEMORY[0x1E0C80A78](v13);
  v383 = (char *)&v334 - v14;
  MEMORY[0x1E0C80A78](v15);
  v382 = (uint64_t)&v334 - v16;
  MEMORY[0x1E0C80A78](v17);
  v395 = (uint64_t)&v334 - v18;
  MEMORY[0x1E0C80A78](v19);
  v379 = (char *)&v334 - v20;
  sub_1ABCF5A54(0, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, v4);
  MEMORY[0x1E0C80A78](v21);
  v347 = (uint64_t)&v334 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v354 = (uint64_t)&v334 - v24;
  MEMORY[0x1E0C80A78](v25);
  v346 = (uint64_t)&v334 - v26;
  MEMORY[0x1E0C80A78](v27);
  v353 = (uint64_t)&v334 - v28;
  MEMORY[0x1E0C80A78](v29);
  v335 = (uint64_t)&v334 - v30;
  MEMORY[0x1E0C80A78](v31);
  v350 = (uint64_t)&v334 - v32;
  MEMORY[0x1E0C80A78](v33);
  v392 = (char *)&v334 - v34;
  MEMORY[0x1E0C80A78](v35);
  v349 = (uint64_t)&v334 - v36;
  MEMORY[0x1E0C80A78](v37);
  v358 = (uint64_t)&v334 - v38;
  MEMORY[0x1E0C80A78](v39);
  v391 = (char *)&v334 - v40;
  MEMORY[0x1E0C80A78](v41);
  v390 = (uint64_t)&v334 - v42;
  MEMORY[0x1E0C80A78](v43);
  v345 = (uint64_t)&v334 - v44;
  MEMORY[0x1E0C80A78](v45);
  v389 = (uint64_t)&v334 - v46;
  MEMORY[0x1E0C80A78](v47);
  v344 = (uint64_t)&v334 - v48;
  MEMORY[0x1E0C80A78](v49);
  v388 = (uint64_t)&v334 - v50;
  MEMORY[0x1E0C80A78](v51);
  v343 = (uint64_t)&v334 - v52;
  MEMORY[0x1E0C80A78](v53);
  v386 = (uint64_t)&v334 - v54;
  MEMORY[0x1E0C80A78](v55);
  v342 = (uint64_t)&v334 - v56;
  MEMORY[0x1E0C80A78](v57);
  v385 = (uint64_t)&v334 - v58;
  MEMORY[0x1E0C80A78](v59);
  v341 = (uint64_t)&v334 - v60;
  MEMORY[0x1E0C80A78](v61);
  v381 = (uint64_t)&v334 - v62;
  MEMORY[0x1E0C80A78](v63);
  v340 = (uint64_t)&v334 - v64;
  MEMORY[0x1E0C80A78](v65);
  v339 = (uint64_t)&v334 - v66;
  MEMORY[0x1E0C80A78](v67);
  v338 = (uint64_t)&v334 - v68;
  MEMORY[0x1E0C80A78](v69);
  v337 = (uint64_t)&v334 - v70;
  MEMORY[0x1E0C80A78](v71);
  v336 = (uint64_t)&v334 - v72;
  sub_1ABCF5A54(0, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote, v4);
  MEMORY[0x1E0C80A78](v73);
  v352 = (uint64_t)&v334 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v75);
  v351 = (uint64_t)&v334 - v76;
  MEMORY[0x1E0C80A78](v77);
  v378 = (uint64_t)&v334 - v78;
  MEMORY[0x1E0C80A78](v79);
  v377 = (uint64_t)&v334 - v80;
  MEMORY[0x1E0C80A78](v81);
  v376 = (uint64_t)&v334 - v82;
  MEMORY[0x1E0C80A78](v83);
  v375 = (uint64_t)&v334 - v84;
  MEMORY[0x1E0C80A78](v85);
  v373 = (uint64_t)&v334 - v86;
  MEMORY[0x1E0C80A78](v87);
  v372 = (uint64_t)&v334 - v88;
  MEMORY[0x1E0C80A78](v89);
  v371 = (uint64_t)&v334 - v90;
  MEMORY[0x1E0C80A78](v91);
  v370 = (char *)&v334 - v92;
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], v4);
  MEMORY[0x1E0C80A78](v93);
  v348 = (char *)&v334 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v95);
  v364 = (char *)&v334 - v96;
  MEMORY[0x1E0C80A78](v97);
  v387 = (char *)&v334 - v98;
  MEMORY[0x1E0C80A78](v99);
  v363 = (char *)&v334 - v100;
  MEMORY[0x1E0C80A78](v101);
  v384 = (char *)&v334 - v102;
  MEMORY[0x1E0C80A78](v103);
  v380 = (char *)&v334 - v104;
  MEMORY[0x1E0C80A78](v105);
  v362 = (char *)&v334 - v106;
  MEMORY[0x1E0C80A78](v107);
  v374 = (char *)&v334 - v108;
  MEMORY[0x1E0C80A78](v109);
  v361 = (char *)&v334 - v110;
  MEMORY[0x1E0C80A78](v111);
  v360 = (char *)&v334 - v112;
  MEMORY[0x1E0C80A78](v113);
  v418 = (uint64_t)&v334 - v114;
  MEMORY[0x1E0C80A78](v115);
  v359 = (char *)&v334 - v116;
  sub_1ABCF5A54(0, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, v4);
  MEMORY[0x1E0C80A78](v117);
  v369 = (uint64_t)&v334 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v119);
  v368 = (uint64_t)&v334 - v120;
  v121 = sub_1ABF30484();
  v122 = *(_QWORD *)(v121 - 8);
  v367 = v121;
  MEMORY[0x1E0C80A78](v121);
  v124 = (char *)&v334 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v125);
  v126 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v126);
  v127 = sub_1ABF3049C();
  MEMORY[0x1E0C80A78](v127);
  v129 = (char *)&v334 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE99928(0, &qword_1ED346740, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (void (*)(void))sub_1ABE99808);
  sub_1ABF31738();
  sub_1ABF30844();
  v130 = *MEMORY[0x1E0CAF9B8];
  v131 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 104);
  v131(v124, v130, v121);
  v132 = v131;
  sub_1ABF304A8();
  v133 = sub_1ABCFE1EC(&qword_1ED3467A8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  v394 = MEMORY[0x1AF435F60](v129, v133);
  sub_1ABE99928(0, &qword_1ED346748, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (void (*)(void))sub_1ABE99898);
  v135 = v134;
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v136 = v367;
  v132(v124, v130, v367);
  sub_1ABF304A8();
  v404 = MEMORY[0x1AF435F6C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v130, v136);
  sub_1ABF304A8();
  v403 = MEMORY[0x1AF435F6C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v130, v136);
  sub_1ABF304A8();
  v402 = MEMORY[0x1AF435F6C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v130, v136);
  sub_1ABF304A8();
  v405 = v135;
  v401 = MEMORY[0x1AF435F6C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v366 = v130;
  v132(v124, v130, v136);
  sub_1ABF304A8();
  v400 = MEMORY[0x1AF435F6C](v129);
  sub_1ABE99928(0, &qword_1ED346738, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (void (*)(void))sub_1ABE999A0);
  v138 = v137;
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v139 = v130;
  v140 = v136;
  v132(v124, v139, v136);
  sub_1ABF304A8();
  v399 = MEMORY[0x1AF435F78](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v141 = v366;
  v132(v124, v366, v140);
  sub_1ABF304A8();
  v397 = v138;
  v398 = MEMORY[0x1AF435F78](v129);
  sub_1ABF2FF68();
  v407 = 0xD000000000000017;
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  v142 = v132;
  sub_1ABF304A8();
  v416 = MEMORY[0x1AF435F78](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v415 = MEMORY[0x1AF435F6C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v414 = MEMORY[0x1AF435F6C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v413 = MEMORY[0x1AF435F6C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v412 = MEMORY[0x1AF435F6C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v411 = MEMORY[0x1AF435F6C](v129);
  sub_1ABE99A30();
  v406 = v143;
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v410 = MEMORY[0x1AF435F90](v129);
  sub_1ABE99B70();
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v409 = MEMORY[0x1AF435F9C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v408 = MEMORY[0x1AF435F9C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v407 = MEMORY[0x1AF435F90](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v406 = MEMORY[0x1AF435F90](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v405 = MEMORY[0x1AF435F6C](v129);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v132(v124, v141, v140);
  sub_1ABF304A8();
  v144 = MEMORY[0x1AF435F78](v129);
  sub_1ABE99C4C();
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v142(v124, v141, v140);
  v145 = (uint64_t)v370;
  sub_1ABF304A8();
  v146 = MEMORY[0x1AF435F84](v129);
  *(_QWORD *)&v442 = v394;
  *((_QWORD *)&v442 + 1) = v404;
  *(_QWORD *)&v443 = v403;
  *((_QWORD *)&v443 + 1) = v402;
  *(_QWORD *)&v444 = v401;
  *((_QWORD *)&v444 + 1) = v400;
  *(_QWORD *)&v445 = v399;
  *((_QWORD *)&v445 + 1) = v398;
  *(_QWORD *)&v446 = v416;
  *((_QWORD *)&v446 + 1) = v415;
  *(_QWORD *)&v447 = v414;
  *((_QWORD *)&v447 + 1) = v413;
  *(_QWORD *)&v448 = v412;
  *((_QWORD *)&v448 + 1) = v411;
  *(_QWORD *)&v449 = v410;
  *((_QWORD *)&v449 + 1) = v409;
  *(_QWORD *)&v450 = v408;
  *((_QWORD *)&v450 + 1) = v407;
  *(_QWORD *)&v451 = v406;
  *((_QWORD *)&v451 + 1) = v405;
  v397 = v144;
  *(_QWORD *)&v452 = v144;
  *((_QWORD *)&v452 + 1) = v146;
  v147 = v368;
  sub_1ABDBAE80(v396, v368);
  v148 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v147, 0, 1, v148);
  sub_1ABE99CE4(v147, v369, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  v367 = v146;
  sub_1ABF2FF68();
  sub_1ABE99D3C((uint64_t)&v442);
  sub_1ABF2FD28();
  sub_1ABD184CC(v147, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  sub_1ABE3EB10((uint64_t)&v442);
  sub_1ABE99CE4(v417, v145, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  v149 = (int *)type metadata accessor for Quote();
  v150 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v149 - 1) + 48);
  if (v150(v145, 1, v149) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v145, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    v151 = v395;
    v152 = v379;
    v153 = (uint64_t)v374;
  }
  else
  {
    v154 = *(double *)v145;
    v155 = *(_BYTE *)(v145 + 8);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v145, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v151 = v395;
    v152 = v379;
    v153 = (uint64_t)v374;
    if ((v155 & 1) == 0)
    {
      v156 = v336;
      sub_1ABE99CE4(v419, v336, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      v157 = type metadata accessor for QuoteDetail();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 48))(v156, 1, v157) == 1)
      {
        sub_1ABD184CC(v156, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      }
      else
      {
        v158 = *(_QWORD *)(v156 + *(int *)(v157 + 68) + 8);
        sub_1ABF2FF5C();
        v159 = sub_1ABCFC3BC(v156, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
        if (v158)
        {
          MEMORY[0x1AF437F58](v159, v154);
          v160 = (uint64_t)v359;
          sub_1ABF2FECC();
          v161 = sub_1ABF2FED8();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56))(v160, 0, 1, v161);
          goto LABEL_9;
        }
      }
    }
  }
  v162 = sub_1ABF2FED8();
  v160 = (uint64_t)v359;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 56))(v359, 1, 1, v162);
LABEL_9:
  v163 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v160, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v160, &qword_1ED346778, v163);
  sub_1ABE3EB10((uint64_t)&v442);
  v164 = v371;
  sub_1ABE99CE4(v417, v371, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (v150(v164, 1, v149) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    v165 = &qword_1ED34DA80;
    v166 = type metadata accessor for Quote;
    v167 = v164;
LABEL_11:
    sub_1ABD184CC(v167, v165, (uint64_t (*)(uint64_t))v166);
LABEL_13:
    v170 = v150;
    v171 = sub_1ABF2FED8();
    v172 = (uint64_t)v360;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v360, 1, 1, v171);
    goto LABEL_14;
  }
  v168 = *(double *)(v164 + 16);
  v169 = *(_BYTE *)(v164 + 24);
  sub_1ABE99D3C((uint64_t)&v442);
  sub_1ABCFC3BC(v164, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  if ((v169 & 1) != 0)
    goto LABEL_13;
  v181 = v337;
  sub_1ABE99CE4(v419, v337, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  v182 = type metadata accessor for QuoteDetail();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 48))(v181, 1, v182) == 1)
  {
    v165 = &qword_1ED34CD90;
    v166 = type metadata accessor for QuoteDetail;
    v167 = v181;
    goto LABEL_11;
  }
  v195 = *(_QWORD *)(v181 + *(int *)(v182 + 68) + 8);
  sub_1ABF2FF5C();
  v196 = sub_1ABCFC3BC(v181, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if (!v195)
    goto LABEL_13;
  v170 = v150;
  MEMORY[0x1AF437F58](v196, v168);
  v172 = (uint64_t)v360;
  sub_1ABF2FECC();
  v197 = sub_1ABF2FED8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v197 - 8) + 56))(v172, 0, 1, v197);
LABEL_14:
  v173 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v172, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v172, &qword_1ED346778, v173);
  sub_1ABE3EB10((uint64_t)&v442);
  v174 = v372;
  sub_1ABE99CE4(v417, v372, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  v175 = v170;
  if (v170(v174, 1, v149) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v174, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    v176 = (uint64_t)v152;
  }
  else
  {
    v177 = *(double *)(v174 + 32);
    v178 = *(_BYTE *)(v174 + 40);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v174, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v176 = (uint64_t)v152;
    if ((v178 & 1) == 0)
    {
      v179 = v338;
      sub_1ABE99CE4(v419, v338, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      v180 = type metadata accessor for QuoteDetail();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v180 - 8) + 48))(v179, 1, v180) == 1)
      {
        sub_1ABD184CC(v179, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      }
      else
      {
        v183 = *(_QWORD *)(v179 + *(int *)(v180 + 68) + 8);
        sub_1ABF2FF5C();
        v184 = sub_1ABCFC3BC(v179, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
        if (v183)
        {
          MEMORY[0x1AF437F58](v184, v177);
          v185 = (uint64_t)v361;
          sub_1ABF2FECC();
          v186 = sub_1ABF2FED8();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v186 - 8) + 56))(v185, 0, 1, v186);
          goto LABEL_24;
        }
      }
    }
  }
  v187 = sub_1ABF2FED8();
  v185 = (uint64_t)v361;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v187 - 8) + 56))(v361, 1, 1, v187);
LABEL_24:
  v188 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v185, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v185, &qword_1ED346778, v188);
  sub_1ABE3EB10((uint64_t)&v442);
  v189 = v373;
  sub_1ABE99CE4(v417, v373, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (v175(v189, 1, v149) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v189, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    v190 = (uint64_t)v383;
  }
  else
  {
    v191 = *(double *)(v189 + 48);
    v192 = *(_BYTE *)(v189 + 56);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v189, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v190 = (uint64_t)v383;
    if ((v192 & 1) == 0)
    {
      v193 = v339;
      sub_1ABE99CE4(v419, v339, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      v194 = type metadata accessor for QuoteDetail();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v194 - 8) + 48))(v193, 1, v194) == 1)
      {
        sub_1ABD184CC(v193, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      }
      else
      {
        v198 = *(_QWORD *)(v193 + *(int *)(v194 + 68) + 8);
        sub_1ABF2FF5C();
        v199 = sub_1ABCFC3BC(v193, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
        if (v198)
        {
          MEMORY[0x1AF437F58](v199, v191);
          sub_1ABF2FECC();
          v200 = sub_1ABF2FED8();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v200 - 8) + 56))(v153, 0, 1, v200);
          goto LABEL_34;
        }
      }
    }
  }
  v201 = sub_1ABF2FED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v201 - 8) + 56))(v153, 1, 1, v201);
LABEL_34:
  v202 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v153, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v153, &qword_1ED346778, v202);
  sub_1ABE3EB10((uint64_t)&v442);
  v203 = v375;
  sub_1ABE99CE4(v417, v375, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (v175(v203, 1, v149) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    v204 = &qword_1ED34DA80;
    v205 = type metadata accessor for Quote;
    v206 = v203;
LABEL_36:
    sub_1ABD184CC(v206, v204, (uint64_t (*)(uint64_t))v205);
LABEL_38:
    v209 = sub_1ABF2FED8();
    v210 = (uint64_t)v362;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 56))(v362, 1, 1, v209);
    goto LABEL_39;
  }
  v207 = *(double *)(v203 + 64);
  v208 = *(_BYTE *)(v203 + 72);
  sub_1ABE99D3C((uint64_t)&v442);
  sub_1ABCFC3BC(v203, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  if ((v208 & 1) != 0)
    goto LABEL_38;
  v262 = v340;
  sub_1ABE99CE4(v419, v340, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  v263 = type metadata accessor for QuoteDetail();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v263 - 8) + 48))(v262, 1, v263) == 1)
  {
    v204 = &qword_1ED34CD90;
    v205 = type metadata accessor for QuoteDetail;
    v206 = v262;
    goto LABEL_36;
  }
  v328 = *(_QWORD *)(v262 + *(int *)(v263 + 68) + 8);
  sub_1ABF2FF5C();
  v329 = sub_1ABCFC3BC(v262, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if (!v328)
    goto LABEL_38;
  MEMORY[0x1AF437F58](v329, v207);
  v210 = (uint64_t)v362;
  sub_1ABF2FECC();
  v330 = sub_1ABF2FED8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v330 - 8) + 56))(v210, 0, 1, v330);
LABEL_39:
  v211 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v210, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v210, &qword_1ED346778, v211);
  sub_1ABE3EB10((uint64_t)&v442);
  v212 = v376;
  sub_1ABE99CE4(v417, v376, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (v175(v212, 1, v149) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v212, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    v213 = sub_1ABF30760();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v213 - 8) + 56))(v176, 1, 1, v213);
  }
  else
  {
    sub_1ABE99CE4(v212 + v149[13], v176, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v212, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  }
  v214 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABE99CE4(v176, v151, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v176, (unint64_t *)&qword_1ED34EAB0, v214);
  sub_1ABE3EB10((uint64_t)&v442);
  v215 = v377;
  sub_1ABE99CE4(v417, v377, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (v175(v215, 1, v149) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v215, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    v216 = sub_1ABF30760();
    v217 = v382;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v216 - 8) + 56))(v382, 1, 1, v216);
  }
  else
  {
    v217 = v382;
    sub_1ABE99CE4(v215 + v149[14], v382, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v215, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  }
  sub_1ABE99CE4(v217, v151, (unint64_t *)&qword_1ED34EAB0, v214);
  sub_1ABF2FD28();
  sub_1ABD184CC(v217, (unint64_t *)&qword_1ED34EAB0, v214);
  sub_1ABE3EB10((uint64_t)&v442);
  v218 = v378;
  sub_1ABE99CE4(v417, v378, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (v175(v218, 1, v149) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v218, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    v219 = sub_1ABF30760();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v219 - 8) + 56))(v190, 1, 1, v219);
  }
  else
  {
    sub_1ABE99CE4(v218 + v149[15], v190, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v218, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  }
  v220 = (uint64_t)v380;
  sub_1ABE99CE4(v190, v151, (unint64_t *)&qword_1ED34EAB0, v214);
  sub_1ABF2FD28();
  sub_1ABD184CC(v190, (unint64_t *)&qword_1ED34EAB0, v214);
  sub_1ABE3EB10((uint64_t)&v442);
  v221 = v381;
  sub_1ABE99CE4(v419, v381, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  v222 = (int *)type metadata accessor for QuoteDetail();
  v223 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v222 - 1) + 48);
  if (v223(v221, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    goto LABEL_50;
  }
  v224 = *(double *)v221;
  v225 = *(_BYTE *)(v221 + 8);
  sub_1ABE99D3C((uint64_t)&v442);
  sub_1ABCFC3BC(v221, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if ((v225 & 1) != 0)
    goto LABEL_52;
  v221 = v341;
  sub_1ABE99CE4(v419, v341, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v221, 1, v222) == 1)
  {
LABEL_50:
    sub_1ABD184CC(v221, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_52:
    v226 = sub_1ABF2FED8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v226 - 8) + 56))(v220, 1, 1, v226);
    goto LABEL_53;
  }
  v264 = *(_QWORD *)(v221 + v222[17] + 8);
  sub_1ABF2FF5C();
  v265 = sub_1ABCFC3BC(v221, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if (!v264)
    goto LABEL_52;
  MEMORY[0x1AF437F58](v265, v224);
  sub_1ABF2FECC();
  v266 = sub_1ABF2FED8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v266 - 8) + 56))(v220, 0, 1, v266);
LABEL_53:
  v227 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v220, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v220, &qword_1ED346778, v227);
  sub_1ABE3EB10((uint64_t)&v442);
  v228 = v385;
  sub_1ABE99CE4(v419, v385, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v228, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    v229 = (uint64_t)v384;
    goto LABEL_55;
  }
  v230 = *(double *)(v228 + 16);
  v231 = *(_BYTE *)(v228 + 24);
  sub_1ABE99D3C((uint64_t)&v442);
  sub_1ABCFC3BC(v228, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  v229 = (uint64_t)v384;
  if ((v231 & 1) != 0)
    goto LABEL_57;
  v228 = v342;
  sub_1ABE99CE4(v419, v342, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v228, 1, v222) == 1)
  {
LABEL_55:
    sub_1ABD184CC(v228, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_57:
    v232 = sub_1ABF2FED8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v232 - 8) + 56))(v229, 1, 1, v232);
    goto LABEL_58;
  }
  v267 = *(_QWORD *)(v228 + v222[17] + 8);
  sub_1ABF2FF5C();
  v268 = sub_1ABCFC3BC(v228, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if (!v267)
    goto LABEL_57;
  MEMORY[0x1AF437F58](v268, v230);
  sub_1ABF2FECC();
  v269 = sub_1ABF2FED8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v269 - 8) + 56))(v229, 0, 1, v269);
LABEL_58:
  v233 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v229, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v229, &qword_1ED346778, v233);
  sub_1ABE3EB10((uint64_t)&v442);
  v234 = v386;
  sub_1ABE99CE4(v419, v386, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v234, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    goto LABEL_60;
  }
  v235 = *(double *)(v234 + 32);
  v236 = *(_BYTE *)(v234 + 40);
  sub_1ABE99D3C((uint64_t)&v442);
  sub_1ABCFC3BC(v234, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if ((v236 & 1) != 0)
    goto LABEL_62;
  v234 = v343;
  sub_1ABE99CE4(v419, v343, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v234, 1, v222) == 1)
  {
LABEL_60:
    sub_1ABD184CC(v234, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_62:
    v237 = (uint64_t)v365;
    v238 = sub_1ABF2FED8();
    v239 = (uint64_t)v363;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v238 - 8) + 56))(v363, 1, 1, v238);
    goto LABEL_63;
  }
  v270 = *(_QWORD *)(v234 + v222[17] + 8);
  sub_1ABF2FF5C();
  v271 = sub_1ABCFC3BC(v234, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if (!v270)
    goto LABEL_62;
  v237 = (uint64_t)v365;
  MEMORY[0x1AF437F58](v271, v235);
  v239 = (uint64_t)v363;
  sub_1ABF2FECC();
  v272 = sub_1ABF2FED8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v272 - 8) + 56))(v239, 0, 1, v272);
LABEL_63:
  v240 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v239, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v239, &qword_1ED346778, v240);
  sub_1ABE3EB10((uint64_t)&v442);
  v241 = v388;
  sub_1ABE99CE4(v419, v388, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v241, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    v242 = (uint64_t)v387;
    goto LABEL_65;
  }
  v243 = *(double *)(v241 + 48);
  v244 = *(_BYTE *)(v241 + 56);
  sub_1ABE99D3C((uint64_t)&v442);
  sub_1ABCFC3BC(v241, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  v242 = (uint64_t)v387;
  if ((v244 & 1) != 0)
    goto LABEL_67;
  v241 = v344;
  sub_1ABE99CE4(v419, v344, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v241, 1, v222) == 1)
  {
LABEL_65:
    sub_1ABD184CC(v241, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_67:
    v245 = sub_1ABF2FED8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v245 - 8) + 56))(v242, 1, 1, v245);
    goto LABEL_68;
  }
  v273 = *(_QWORD *)(v241 + v222[17] + 8);
  sub_1ABF2FF5C();
  v274 = sub_1ABCFC3BC(v241, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if (!v273)
    goto LABEL_67;
  MEMORY[0x1AF437F58](v274, v243);
  sub_1ABF2FECC();
  v275 = sub_1ABF2FED8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v275 - 8) + 56))(v242, 0, 1, v275);
LABEL_68:
  v246 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v242, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v242, &qword_1ED346778, v246);
  sub_1ABE3EB10((uint64_t)&v442);
  v247 = v389;
  sub_1ABE99CE4(v419, v389, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v247, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    goto LABEL_70;
  }
  v248 = *(double *)(v247 + 64);
  v249 = *(_BYTE *)(v247 + 72);
  sub_1ABE99D3C((uint64_t)&v442);
  sub_1ABCFC3BC(v247, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if ((v249 & 1) != 0)
    goto LABEL_72;
  v247 = v345;
  sub_1ABE99CE4(v419, v345, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v247, 1, v222) == 1)
  {
LABEL_70:
    sub_1ABD184CC(v247, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_72:
    v250 = sub_1ABF2FED8();
    v251 = (uint64_t)v364;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v250 - 8) + 56))(v364, 1, 1, v250);
    goto LABEL_73;
  }
  v276 = *(_QWORD *)(v247 + v222[17] + 8);
  sub_1ABF2FF5C();
  v277 = sub_1ABCFC3BC(v247, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if (!v276)
    goto LABEL_72;
  MEMORY[0x1AF437F58](v277, v248);
  v251 = (uint64_t)v364;
  sub_1ABF2FECC();
  v278 = sub_1ABF2FED8();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v278 - 8) + 56))(v251, 0, 1, v278);
LABEL_73:
  v252 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v251, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v251, &qword_1ED346778, v252);
  sub_1ABE3EB10((uint64_t)&v442);
  v253 = v390;
  sub_1ABE99CE4(v419, v390, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v253, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v253, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    v254 = 0;
    v255 = 1;
  }
  else
  {
    v254 = *(_QWORD *)(v253 + 80);
    v255 = *(_BYTE *)(v253 + 88);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v253, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  }
  v257 = (uint64_t)v391;
  v256 = (uint64_t)v392;
  v420 = v254;
  LOBYTE(v421) = v255;
  sub_1ABF2FD28();
  sub_1ABE3EB10((uint64_t)&v442);
  sub_1ABE99CE4(v419, v257, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v257, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v257, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_79:
    v258 = 0;
    v261 = 1;
    goto LABEL_99;
  }
  v258 = *(_QWORD *)(v257 + 96);
  v259 = *(_BYTE *)(v257 + 104);
  sub_1ABE99D3C((uint64_t)&v442);
  result = sub_1ABCFC3BC(v257, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if ((v259 & 1) != 0)
    goto LABEL_79;
  if (v258 < 0)
  {
    __break(1u);
    goto LABEL_144;
  }
  v261 = 0;
LABEL_99:
  v420 = v258;
  LOBYTE(v421) = v261;
  sub_1ABF2FD28();
  sub_1ABE3EB10((uint64_t)&v442);
  v279 = v358;
  sub_1ABE99CE4(v419, v358, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v279, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v279, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
LABEL_102:
    v280 = 0;
    v282 = 1;
    goto LABEL_105;
  }
  v280 = *(_QWORD *)(v279 + 112);
  v281 = *(_BYTE *)(v279 + 120);
  sub_1ABE99D3C((uint64_t)&v442);
  result = sub_1ABCFC3BC(v279, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if ((v281 & 1) != 0)
    goto LABEL_102;
  if (v280 < 0)
  {
LABEL_144:
    __break(1u);
    return result;
  }
  v282 = 0;
LABEL_105:
  v420 = v280;
  LOBYTE(v421) = v282;
  sub_1ABF2FD28();
  sub_1ABE3EB10((uint64_t)&v442);
  v283 = v349;
  sub_1ABE99CE4(v419, v349, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v283, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v283, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    v284 = 0;
    v285 = 1;
  }
  else
  {
    v284 = *(_QWORD *)(v283 + 128);
    v285 = *(_BYTE *)(v283 + 136);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v283, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  }
  v420 = v284;
  LOBYTE(v421) = v285;
  sub_1ABF2FD28();
  sub_1ABE3EB10((uint64_t)&v442);
  sub_1ABE99CE4(v419, v256, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v256, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v256, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    v286 = 0;
    v287 = 1;
  }
  else
  {
    v286 = *(_QWORD *)(v256 + 144);
    v287 = *(_BYTE *)(v256 + 152);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v256, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  }
  v420 = v286;
  LOBYTE(v421) = v287;
  sub_1ABF2FD28();
  sub_1ABE3EB10((uint64_t)&v442);
  v288 = v350;
  sub_1ABE99CE4(v419, v350, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  if (v223(v288, 1, v222) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
LABEL_115:
    sub_1ABD184CC(v288, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    goto LABEL_116;
  }
  v289 = *(double *)(v288 + 160);
  v290 = *(_BYTE *)(v288 + 168);
  sub_1ABE99D3C((uint64_t)&v442);
  sub_1ABCFC3BC(v288, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
  if ((v290 & 1) == 0)
  {
    v288 = v335;
    sub_1ABE99CE4(v419, v335, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    if (v223(v288, 1, v222) == 1)
      goto LABEL_115;
    v331 = *(_QWORD *)(v288 + v222[17] + 8);
    sub_1ABF2FF5C();
    v332 = sub_1ABCFC3BC(v288, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
    if (v331)
    {
      MEMORY[0x1AF437F58](v332, v289);
      v292 = (uint64_t)v348;
      sub_1ABF2FECC();
      v333 = sub_1ABF2FED8();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v333 - 8) + 56))(v292, 0, 1, v333);
      goto LABEL_117;
    }
  }
LABEL_116:
  v291 = sub_1ABF2FED8();
  v292 = (uint64_t)v348;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v291 - 8) + 56))(v348, 1, 1, v291);
LABEL_117:
  v293 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABE99CE4(v292, v418, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v292, &qword_1ED346778, v293);
  sub_1ABE3EB10((uint64_t)&v442);
  v294 = v351;
  sub_1ABE99CE4(v417, v351, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (v175(v294, 1, v149) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v294, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    v295 = sub_1ABF30760();
    v296 = v237;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v295 - 8) + 56))(v237, 1, 1, v295);
  }
  else
  {
    v296 = v237;
    sub_1ABE99CE4(v294 + v149[20], v237, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v294, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
  }
  v297 = (uint64_t)v393;
  v298 = v353;
  sub_1ABE99CE4(v419, v353, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  v299 = sub_1ABF30760();
  v300 = *(_QWORD *)(v299 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v300 + 48))(v296, 1, v299) == 1)
  {
    v301 = v298;
    v302 = v296;
    v303 = v346;
    sub_1ABE99E8C(v301, v346);
    if (v223(v303, 1, v222) == 1)
    {
      sub_1ABD184CC(v303, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v300 + 56))(v297, 1, 1, v299);
    }
    else
    {
      sub_1ABE99CE4(v303 + v222[15], v297, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      sub_1ABCFC3BC(v303, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
    }
    sub_1ABD184CC(v302, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v297 = (uint64_t)v393;
  }
  else
  {
    sub_1ABD184CC(v298, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v300 + 32))(v297, v296, v299);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v300 + 56))(v297, 0, 1, v299);
  }
  v304 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABE99CE4(v297, v395, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1ABF2FD28();
  sub_1ABD184CC(v297, (unint64_t *)&qword_1ED34EAB0, v304);
  sub_1ABE3EB10((uint64_t)&v442);
  v305 = v352;
  sub_1ABE99CE4(v417, v352, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  if (v175(v305, 1, v149) == 1)
  {
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABD184CC(v305, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    v306 = sub_1ABF3094C();
    v307 = (uint64_t)v355;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v306 - 8) + 56))(v355, 1, 1, v306);
  }
  else
  {
    v308 = v305 + v149[24];
    v306 = sub_1ABF3094C();
    v309 = *(_QWORD *)(v306 - 8);
    v310 = v355;
    (*(void (**)(char *, uint64_t, uint64_t))(v309 + 16))(v355, v308, v306);
    sub_1ABE99D3C((uint64_t)&v442);
    sub_1ABCFC3BC(v305, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v311 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v309 + 56);
    v307 = (uint64_t)v310;
    v311(v310, 0, 1, v306);
  }
  v312 = v354;
  sub_1ABE99CE4(v419, v354, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  sub_1ABF3094C();
  v313 = *(_QWORD *)(v306 - 8);
  v314 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v313 + 48);
  if (v314(v307, 1, v306) == 1)
  {
    v315 = v347;
    sub_1ABE99E8C(v312, v347);
    if (v223(v315, 1, v222) == 1)
    {
      sub_1ABD184CC(v315, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
      v316 = v356;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v313 + 56))(v356, 1, 1, v306);
    }
    else
    {
      v317 = v315 + v222[20];
      v316 = v356;
      sub_1ABE99CE4(v317, v356, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470]);
      sub_1ABCFC3BC(v315, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail);
    }
    sub_1ABD184CC(v307, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470]);
  }
  else
  {
    sub_1ABD184CC(v312, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
    v316 = v356;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v313 + 32))(v356, v307, v306);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v313 + 56))(v316, 0, 1, v306);
  }
  if (v314(v316, 1, v306) == 1)
  {
    sub_1ABD184CC(v316, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470]);
    v318 = 0;
    v319 = 0;
  }
  else
  {
    v318 = sub_1ABF30910();
    v319 = v320;
    (*(void (**)(uint64_t, uint64_t))(v313 + 8))(v316, v306);
  }
  v420 = v318;
  v421 = v319;
  v321 = v367;
  sub_1ABF2FD28();
  sub_1ABD184CC(v419, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail);
  sub_1ABD184CC(v417, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
  sub_1ABCFC3BC(v396, (uint64_t (*)(_QWORD))type metadata accessor for SymbolEntity);
  v420 = v394;
  v421 = v404;
  v422 = v403;
  v423 = v402;
  v424 = v401;
  v425 = v400;
  v426 = v399;
  v427 = v398;
  v428 = v416;
  v429 = v415;
  v430 = v414;
  v431 = v413;
  v432 = v412;
  v433 = v411;
  v434 = v410;
  v435 = v409;
  v436 = v408;
  v437 = v407;
  v438 = v406;
  v439 = v405;
  v440 = v397;
  v441 = v321;
  sub_1ABE3EB10((uint64_t)&v420);
  sub_1ABE3EB10((uint64_t)&v442);
  sub_1ABE99D3C((uint64_t)&v442);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  v322 = v451;
  v323 = v357;
  v357[8] = v450;
  v323[9] = v322;
  v323[10] = v452;
  v324 = v447;
  v323[4] = v446;
  v323[5] = v324;
  v325 = v449;
  v323[6] = v448;
  v323[7] = v325;
  v326 = v443;
  *v323 = v442;
  v323[1] = v326;
  v327 = v445;
  v323[2] = v444;
  v323[3] = v327;
  return result;
}

uint64_t sub_1ABE96220()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE96240(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE962B0(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[11];

  sub_1ABCF5A54(0, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v16 - v8;
  sub_1ABE99CE4(a1, (uint64_t)v16 - v8, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  v10 = a2[9];
  v16[8] = a2[8];
  v16[9] = v10;
  v16[10] = a2[10];
  v11 = a2[5];
  v16[4] = a2[4];
  v16[5] = v11;
  v12 = a2[7];
  v16[6] = a2[6];
  v16[7] = v12;
  v13 = a2[1];
  v16[0] = *a2;
  v16[1] = v13;
  v14 = a2[3];
  v16[2] = a2[2];
  v16[3] = v14;
  sub_1ABE99CE4((uint64_t)v9, (uint64_t)v6, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  sub_1ABE99D3C((uint64_t)v16);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v9, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  return sub_1ABE3EB10((uint64_t)v16);
}

uint64_t sub_1ABE963DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1ABCF5A54(0, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  sub_1ABE99CE4(a1, (uint64_t)&v5 - v3, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
}

uint64_t (*sub_1ABE9648C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE964D4()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE964F4()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE96514(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE96584(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE966B0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE96760(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE967A8()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE967C8()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE967E8(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE96858(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE96984(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE96A34(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE96A7C()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE96A9C()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE96ABC(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE96B2C(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE96C58(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE96D08(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE96D50()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE96D70()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE96D90(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE96E00(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE96F2C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE96FDC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE97024()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE97044()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE97064(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE970D4(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE97200(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE972B0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE972F8()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE97318()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE97338(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE973A8(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, (unint64_t *)&qword_1ED34EAB0, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, (unint64_t *)&qword_1ED34EAB0, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, (unint64_t *)&qword_1ED34EAB0, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE974D4(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, (unint64_t *)&qword_1ED34EAB0, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, (unint64_t *)&qword_1ED34EAB0, v2);
}

uint64_t (*sub_1ABE97584(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE975CC()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE975EC()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE9760C(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE9767C(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, (unint64_t *)&qword_1ED34EAB0, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, (unint64_t *)&qword_1ED34EAB0, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, (unint64_t *)&qword_1ED34EAB0, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE977A8(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, (unint64_t *)&qword_1ED34EAB0, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, (unint64_t *)&qword_1ED34EAB0, v2);
}

uint64_t (*sub_1ABE97858(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE978A0()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE978C0()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE978E0(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE97950(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, (unint64_t *)&qword_1ED34EAB0, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, (unint64_t *)&qword_1ED34EAB0, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, (unint64_t *)&qword_1ED34EAB0, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE97A7C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, (unint64_t *)&qword_1ED34EAB0, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, (unint64_t *)&qword_1ED34EAB0, v2);
}

uint64_t (*sub_1ABE97B2C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE97B74()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE97B94()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE97BB4(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE97C24(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE97D50(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE97E00(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE97E48()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE97E68()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE97E88(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE97EF8(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE98024(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE980D4(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE9811C()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE9813C()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE9815C(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE981CC(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE982F8(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE983A8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE983F0()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE98410()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE98430(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE984A0(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE985CC(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE9867C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE986C4()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE986E4()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE98704(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE98774(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE988A0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE98950(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE98998()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE989B8()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE989EC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  _OWORD v11[11];

  v3 = a1[9];
  v11[8] = a1[8];
  v11[9] = v3;
  v11[10] = a1[10];
  v4 = a1[5];
  v11[4] = a1[4];
  v11[5] = v4;
  v5 = a1[7];
  v11[6] = a1[6];
  v11[7] = v5;
  v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  v7 = a1[3];
  v11[2] = a1[2];
  v11[3] = v7;
  sub_1ABE99D3C((uint64_t)v11);
  sub_1ABF2FD1C();
  result = sub_1ABE3EB10((uint64_t)v11);
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1ABE98A6C(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[11];

  v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  v3 = a2[5];
  v8[4] = a2[4];
  v8[5] = v3;
  v4 = a2[7];
  v8[6] = a2[6];
  v8[7] = v4;
  v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  v6 = a2[3];
  v8[2] = a2[2];
  v8[3] = v6;
  sub_1ABE99D3C((uint64_t)v8);
  sub_1ABF2FD28();
  return sub_1ABE3EB10((uint64_t)v8);
}

uint64_t sub_1ABE98AE8()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE98B20(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE98B68()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE98B88()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE98BBC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  _OWORD v11[11];

  v3 = a1[9];
  v11[8] = a1[8];
  v11[9] = v3;
  v11[10] = a1[10];
  v4 = a1[5];
  v11[4] = a1[4];
  v11[5] = v4;
  v5 = a1[7];
  v11[6] = a1[6];
  v11[7] = v5;
  v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  v7 = a1[3];
  v11[2] = a1[2];
  v11[3] = v7;
  sub_1ABE99D3C((uint64_t)v11);
  sub_1ABF2FD1C();
  result = sub_1ABE3EB10((uint64_t)v11);
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1ABE98C3C(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[11];

  v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  v3 = a2[5];
  v8[4] = a2[4];
  v8[5] = v3;
  v4 = a2[7];
  v8[6] = a2[6];
  v8[7] = v4;
  v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  v6 = a2[3];
  v8[2] = a2[2];
  v8[3] = v6;
  sub_1ABE99D3C((uint64_t)v8);
  sub_1ABF2FD28();
  return sub_1ABE3EB10((uint64_t)v8);
}

uint64_t sub_1ABE98CB8()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE98CF0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE98D38()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE98D58()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE98D8C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  _OWORD v11[11];

  v3 = a1[9];
  v11[8] = a1[8];
  v11[9] = v3;
  v11[10] = a1[10];
  v4 = a1[5];
  v11[4] = a1[4];
  v11[5] = v4;
  v5 = a1[7];
  v11[6] = a1[6];
  v11[7] = v5;
  v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  v7 = a1[3];
  v11[2] = a1[2];
  v11[3] = v7;
  sub_1ABE99D3C((uint64_t)v11);
  sub_1ABF2FD1C();
  result = sub_1ABE3EB10((uint64_t)v11);
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1ABE98E0C(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[11];

  v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  v3 = a2[5];
  v8[4] = a2[4];
  v8[5] = v3;
  v4 = a2[7];
  v8[6] = a2[6];
  v8[7] = v4;
  v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  v6 = a2[3];
  v8[2] = a2[2];
  v8[3] = v6;
  sub_1ABE99D3C((uint64_t)v8);
  sub_1ABF2FD28();
  return sub_1ABE3EB10((uint64_t)v8);
}

uint64_t sub_1ABE98E88()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE98EC0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE98F08()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE98F28()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE98F5C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  _OWORD v11[11];

  v3 = a1[9];
  v11[8] = a1[8];
  v11[9] = v3;
  v11[10] = a1[10];
  v4 = a1[5];
  v11[4] = a1[4];
  v11[5] = v4;
  v5 = a1[7];
  v11[6] = a1[6];
  v11[7] = v5;
  v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  v7 = a1[3];
  v11[2] = a1[2];
  v11[3] = v7;
  sub_1ABE99D3C((uint64_t)v11);
  sub_1ABF2FD1C();
  result = sub_1ABE3EB10((uint64_t)v11);
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1ABE98FDC(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[11];

  v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  v3 = a2[5];
  v8[4] = a2[4];
  v8[5] = v3;
  v4 = a2[7];
  v8[6] = a2[6];
  v8[7] = v4;
  v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  v6 = a2[3];
  v8[2] = a2[2];
  v8[3] = v6;
  sub_1ABE99D3C((uint64_t)v8);
  sub_1ABF2FD28();
  return sub_1ABE3EB10((uint64_t)v8);
}

uint64_t sub_1ABE99058()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE99090(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE990D8()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE990F8()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE9912C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t result;
  uint64_t v9;
  char v10;
  _OWORD v11[11];

  v3 = a1[9];
  v11[8] = a1[8];
  v11[9] = v3;
  v11[10] = a1[10];
  v4 = a1[5];
  v11[4] = a1[4];
  v11[5] = v4;
  v5 = a1[7];
  v11[6] = a1[6];
  v11[7] = v5;
  v6 = a1[1];
  v11[0] = *a1;
  v11[1] = v6;
  v7 = a1[3];
  v11[2] = a1[2];
  v11[3] = v7;
  sub_1ABE99D3C((uint64_t)v11);
  sub_1ABF2FD1C();
  result = sub_1ABE3EB10((uint64_t)v11);
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v10;
  return result;
}

uint64_t sub_1ABE991AC(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[11];

  v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  v3 = a2[5];
  v8[4] = a2[4];
  v8[5] = v3;
  v4 = a2[7];
  v8[6] = a2[6];
  v8[7] = v4;
  v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  v6 = a2[3];
  v8[2] = a2[2];
  v8[3] = v6;
  sub_1ABE99D3C((uint64_t)v8);
  sub_1ABF2FD28();
  return sub_1ABE3EB10((uint64_t)v8);
}

uint64_t sub_1ABE99228()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE99260(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE992A8()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE992C8()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE992E8(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE99358(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, &qword_1ED346778, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, &qword_1ED346778, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, &qword_1ED346778, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE99484(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
  sub_1ABCF5A54(0, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, &qword_1ED346778, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, &qword_1ED346778, v2);
}

uint64_t (*sub_1ABE99534(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE9957C()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE9959C()
{
  return sub_1ABF2FD1C();
}

uint64_t sub_1ABE995BC(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[11];

  v1 = a1[9];
  v7[8] = a1[8];
  v7[9] = v1;
  v7[10] = a1[10];
  v2 = a1[5];
  v7[4] = a1[4];
  v7[5] = v2;
  v3 = a1[7];
  v7[6] = a1[6];
  v7[7] = v3;
  v4 = a1[1];
  v7[0] = *a1;
  v7[1] = v4;
  v5 = a1[3];
  v7[2] = a1[2];
  v7[3] = v5;
  sub_1ABE99D3C((uint64_t)v7);
  sub_1ABF2FD1C();
  return sub_1ABE3EB10((uint64_t)v7);
}

uint64_t sub_1ABE9962C(uint64_t a1, _OWORD *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[11];

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - v9;
  sub_1ABE99CE4(a1, (uint64_t)v17 - v9, (unint64_t *)&qword_1ED34EAB0, v4);
  v11 = a2[9];
  v17[8] = a2[8];
  v17[9] = v11;
  v17[10] = a2[10];
  v12 = a2[5];
  v17[4] = a2[4];
  v17[5] = v12;
  v13 = a2[7];
  v17[6] = a2[6];
  v17[7] = v13;
  v14 = a2[1];
  v17[0] = *a2;
  v17[1] = v14;
  v15 = a2[3];
  v17[2] = a2[2];
  v17[3] = v15;
  sub_1ABE99CE4((uint64_t)v10, (uint64_t)v7, (unint64_t *)&qword_1ED34EAB0, v4);
  sub_1ABE99D3C((uint64_t)v17);
  sub_1ABF2FD28();
  sub_1ABD184CC((uint64_t)v10, (unint64_t *)&qword_1ED34EAB0, v4);
  return sub_1ABE3EB10((uint64_t)v17);
}

uint64_t sub_1ABE99758(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  sub_1ABE99CE4(a1, (uint64_t)&v6 - v4, (unint64_t *)&qword_1ED34EAB0, v2);
  sub_1ABF2FD28();
  return sub_1ABD184CC(a1, (unint64_t *)&qword_1ED34EAB0, v2);
}

unint64_t sub_1ABE99808()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3467B8;
  if (!qword_1ED3467B8)
  {
    sub_1ABCF5A54(255, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1ABCFE1EC((unint64_t *)&qword_1ED34CB18, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91D78], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3467B8);
  }
  return result;
}

unint64_t sub_1ABE99898()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = qword_1ED346780;
  if (!qword_1ED346780)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350];
    sub_1ABCF5A54(255, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v3 = v2;
    v4 = sub_1ABCFE1EC(&qword_1ED346770, v1, MEMORY[0x1E0C91340]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91D78], v3, &v4);
    atomic_store(result, (unint64_t *)&qword_1ED346780);
  }
  return result;
}

void sub_1ABE99928(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1ABCF5A54(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    a5();
    v7 = sub_1ABF2FD88();
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1ABE999A0()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = qword_1ED346798;
  if (!qword_1ED346798)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1ABCF5A54(255, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v3 = v2;
    v4 = sub_1ABCFE1EC(&qword_1ED346790, v1, MEMORY[0x1E0C91C40]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91D78], v3, &v4);
    atomic_store(result, (unint64_t *)&qword_1ED346798);
  }
  return result;
}

void sub_1ABE99A30()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED346758)
  {
    v0 = MEMORY[0x1E0DEB070];
    sub_1ABD463F8(255, &qword_1ED34DFF0);
    sub_1ABE99AC8(&qword_1ED346818, &qword_1ED34DFF0, v0, (uint64_t (*)(void))sub_1ABE99B2C);
    v1 = sub_1ABF2FD88();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED346758);
  }
}

uint64_t sub_1ABE99AC8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD463F8(255, a2);
    v8 = v7;
    v9 = a4();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91D78], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABE99B2C()
{
  unint64_t result;

  result = qword_1ED346800;
  if (!qword_1ED346800)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91D18], MEMORY[0x1E0DEB070]);
    atomic_store(result, (unint64_t *)&qword_1ED346800);
  }
  return result;
}

void sub_1ABE99B70()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED346760)
  {
    v0 = MEMORY[0x1E0DEB418];
    sub_1ABD463F8(255, &qword_1ED34E000);
    sub_1ABE99AC8(&qword_1ED346820, &qword_1ED34E000, v0, (uint64_t (*)(void))sub_1ABE99C08);
    v1 = sub_1ABF2FD88();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED346760);
  }
}

unint64_t sub_1ABE99C08()
{
  unint64_t result;

  result = qword_1ED346808;
  if (!qword_1ED346808)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91D20], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED346808);
  }
  return result;
}

void sub_1ABE99C4C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED346750)
  {
    v0 = MEMORY[0x1E0DEA968];
    sub_1ABD463F8(255, (unint64_t *)&qword_1ED34FB80);
    sub_1ABE99AC8(&qword_1ED346810, (unint64_t *)&qword_1ED34FB80, v0, (uint64_t (*)(void))sub_1ABD94F2C);
    v1 = sub_1ABF2FD88();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED346750);
  }
}

uint64_t sub_1ABE99CE4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1ABCF5A54(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1ABE99D3C(uint64_t a1)
{
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  return a1;
}

uint64_t sub_1ABE99E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5A54(0, &qword_1ED34CD90, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1ABE99EE8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE99F30()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE99F50()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

double sub_1ABE99F80@<D0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  double result;
  __int128 v9;
  _OWORD v10[11];

  v3 = a1[9];
  v10[8] = a1[8];
  v10[9] = v3;
  v10[10] = a1[10];
  v4 = a1[5];
  v10[4] = a1[4];
  v10[5] = v4;
  v5 = a1[7];
  v10[6] = a1[6];
  v10[7] = v5;
  v6 = a1[1];
  v10[0] = *a1;
  v10[1] = v6;
  v7 = a1[3];
  v10[2] = a1[2];
  v10[3] = v7;
  sub_1ABE99D3C((uint64_t)v10);
  sub_1ABF2FD1C();
  sub_1ABE3EB10((uint64_t)v10);
  result = *(double *)&v9;
  *a2 = v9;
  return result;
}

uint64_t sub_1ABE99FF8(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v8[11];

  v2 = a2[9];
  v8[8] = a2[8];
  v8[9] = v2;
  v8[10] = a2[10];
  v3 = a2[5];
  v8[4] = a2[4];
  v8[5] = v3;
  v4 = a2[7];
  v8[6] = a2[6];
  v8[7] = v4;
  v5 = a2[1];
  v8[0] = *a2;
  v8[1] = v5;
  v6 = a2[3];
  v8[2] = a2[2];
  v8[3] = v6;
  sub_1ABF2FF5C();
  sub_1ABE99D3C((uint64_t)v8);
  sub_1ABF2FD28();
  return sub_1ABE3EB10((uint64_t)v8);
}

uint64_t sub_1ABE9A070()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE9A0A0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE9A0E8()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE9A10C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = sub_1ABF30484();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE99928(0, &qword_1ED346740, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (void (*)(void))sub_1ABE99808);
  sub_1ABF31738();
  sub_1ABF30844();
  v11 = *MEMORY[0x1E0CAF9B8];
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v13 = sub_1ABCFE1EC(&qword_1ED3467A8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  v50 = MEMORY[0x1AF435F60](v10, v13);
  sub_1ABE99928(0, &qword_1ED346748, &qword_1ED346778, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91350], (void (*)(void))sub_1ABE99898);
  v15 = v14;
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v49 = MEMORY[0x1AF435F6C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v48 = MEMORY[0x1AF435F6C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v47 = MEMORY[0x1AF435F6C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v51 = v15;
  v46 = MEMORY[0x1AF435F6C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v45 = MEMORY[0x1AF435F6C](v10);
  sub_1ABE99928(0, &qword_1ED346738, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (void (*)(void))sub_1ABE999A0);
  v17 = v16;
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v44 = MEMORY[0x1AF435F78](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v40 = v17;
  v43 = MEMORY[0x1AF435F78](v10);
  v36 = 0xD000000000000017;
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v42 = MEMORY[0x1AF435F78](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v41 = MEMORY[0x1AF435F6C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v39 = MEMORY[0x1AF435F6C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v38 = MEMORY[0x1AF435F6C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v37 = MEMORY[0x1AF435F6C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v35 = MEMORY[0x1AF435F6C](v10);
  sub_1ABE99A30();
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v34 = MEMORY[0x1AF435F90](v10);
  sub_1ABE99B70();
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v33 = MEMORY[0x1AF435F9C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v32 = MEMORY[0x1AF435F9C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v36 = MEMORY[0x1AF435F90](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v31 = MEMORY[0x1AF435F90](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v51 = MEMORY[0x1AF435F6C](v10);
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  v18 = MEMORY[0x1AF435F78](v10);
  sub_1ABE99C4C();
  sub_1ABF31738();
  sub_1ABF30844();
  v12(v5, v11, v2);
  sub_1ABF304A8();
  result = MEMORY[0x1AF435F84](v10);
  v20 = v49;
  *a1 = v50;
  a1[1] = v20;
  v21 = v47;
  a1[2] = v48;
  a1[3] = v21;
  v22 = v45;
  a1[4] = v46;
  a1[5] = v22;
  v23 = v43;
  a1[6] = v44;
  a1[7] = v23;
  v24 = v41;
  a1[8] = v42;
  a1[9] = v24;
  v25 = v38;
  a1[10] = v39;
  a1[11] = v25;
  v26 = v35;
  a1[12] = v37;
  a1[13] = v26;
  v27 = v33;
  a1[14] = v34;
  a1[15] = v27;
  v28 = v36;
  a1[16] = v32;
  a1[17] = v28;
  v29 = v51;
  a1[18] = v31;
  a1[19] = v29;
  a1[20] = v18;
  a1[21] = result;
  return result;
}

uint64_t sub_1ABE9AD90()
{
  sub_1ABE9B7EC();
  return sub_1ABF2FBD8();
}

uint64_t sub_1ABE9ADC8()
{
  sub_1ABE9B7EC();
  return sub_1ABF2FBCC();
}

uint64_t sub_1ABE9AE00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41088 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC446D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE9AE70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41088 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC446D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE9AEE0()
{
  sub_1ABE9B640();
  return sub_1ABF2FC5C();
}

uint64_t sub_1ABE9AF1C@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD v26[2];
  _OWORD v27[12];

  v26[1] = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED346788, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91480], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v26 - v4;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v26 - v7;
  v26[0] = sub_1ABF3049C();
  v9 = *(_QWORD *)(v26[0] - 8);
  MEMORY[0x1E0C80A78](v26[0]);
  v10 = type metadata accessor for SymbolEntity();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, &qword_1ED3467B0, v14, v2);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v26 - v16;
  v18 = sub_1ABF31768();
  MEMORY[0x1E0C80A78](v18);
  v19 = v1[9];
  v27[8] = v1[8];
  v27[9] = v19;
  v27[10] = v1[10];
  v20 = v1[5];
  v27[4] = v1[4];
  v27[5] = v20;
  v21 = v1[7];
  v27[6] = v1[6];
  v27[7] = v21;
  v22 = v1[1];
  v27[0] = *v1;
  v23 = v1[2];
  v27[3] = v1[3];
  v27[1] = v22;
  v27[2] = v23;
  sub_1ABF3175C();
  sub_1ABF31750();
  sub_1ABE99D3C((uint64_t)v27);
  sub_1ABF2FD1C();
  sub_1ABE3EB10((uint64_t)v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10))
  {
    sub_1ABD184CC((uint64_t)v17, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  }
  else
  {
    sub_1ABDBAE80((uint64_t)v17, (uint64_t)v13);
    sub_1ABD184CC((uint64_t)v17, &qword_1ED3467B0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
    sub_1ABF2FD1C();
    sub_1ABCFC3BC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SymbolEntity);
  }
  sub_1ABF31744();
  swift_bridgeObjectRelease();
  sub_1ABF31750();
  sub_1ABF30490();
  sub_1ABF30478();
  (*(void (**)(char *, _QWORD, uint64_t, _QWORD))(v9 + 56))(v8, 0, 1, v26[0]);
  v24 = sub_1ABF2FEFC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 1, 1, v24);
  return sub_1ABF2FF08();
}

uint64_t sub_1ABE9B27C()
{
  sub_1ABE9B8D4();
  return sub_1ABF300B8();
}

uint64_t sub_1ABE9B2B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v12[0] = (char *)v12 - v1;
  v2 = sub_1ABF30484();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF30070();
  __swift_allocate_value_buffer(v10, qword_1EEC446D0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC446D0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v2);
  sub_1ABF304A8();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v9 + 56))(v12[0], 1, 1, v8);
  sub_1ABCF5A54(0, &qword_1EEC421D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF3B7C0;
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  return sub_1ABF30058();
}

unint64_t sub_1ABE9B640()
{
  unint64_t result;

  result = qword_1ED3467C8;
  if (!qword_1ED3467C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48A08, &type metadata for SymbolQuoteEntity);
    atomic_store(result, (unint64_t *)&qword_1ED3467C8);
  }
  return result;
}

uint64_t sub_1ABE9B684()
{
  return sub_1ABCFE1EC(&qword_1EEC446E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

unint64_t sub_1ABE9B6B4()
{
  unint64_t result;

  result = qword_1ED34CB80;
  if (!qword_1ED34CB80)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48A60, &type metadata for SymbolQuoteEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34CB80);
  }
  return result;
}

unint64_t sub_1ABE9B6FC()
{
  unint64_t result;

  result = qword_1ED34CB90;
  if (!qword_1ED34CB90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48A98, &type metadata for SymbolQuoteEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34CB90);
  }
  return result;
}

unint64_t sub_1ABE9B744()
{
  unint64_t result;

  result = qword_1ED34CBB0;
  if (!qword_1ED34CBB0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF489D0, &type metadata for SymbolQuoteEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34CBB0);
  }
  return result;
}

unint64_t sub_1ABE9B78C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC446F0;
  if (!qword_1EEC446F0)
  {
    sub_1ABE9B97C(255, &qword_1EEC446F8, (uint64_t (*)(void))sub_1ABE9B7EC, MEMORY[0x1E0C902D8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C902F8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC446F0);
  }
  return result;
}

unint64_t sub_1ABE9B7EC()
{
  unint64_t result;

  result = qword_1ED3467C0;
  if (!qword_1ED3467C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF489A0, &type metadata for SymbolQuoteEntity);
    atomic_store(result, (unint64_t *)&qword_1ED3467C0);
  }
  return result;
}

uint64_t sub_1ABE9B830()
{
  return MEMORY[0x1E0C91C48];
}

unint64_t sub_1ABE9B840()
{
  unint64_t result;

  result = qword_1ED34C7E0;
  if (!qword_1ED34C7E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48AC8, &type metadata for SymbolQuoteEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C7E0);
  }
  return result;
}

unint64_t sub_1ABE9B888()
{
  unint64_t result;

  result = qword_1ED34CB98;
  if (!qword_1ED34CB98)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48AF0, &type metadata for SymbolQuoteEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34CB98);
  }
  return result;
}

unint64_t sub_1ABE9B8D4()
{
  unint64_t result;

  result = qword_1ED34CBA0;
  if (!qword_1ED34CBA0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48B70, &type metadata for SymbolQuoteEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34CBA0);
  }
  return result;
}

unint64_t sub_1ABE9B91C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC44700;
  if (!qword_1EEC44700)
  {
    sub_1ABE9B97C(255, &qword_1EEC44708, (uint64_t (*)(void))sub_1ABE3EACC, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t))MEMORY[0x1E0C91980]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91998], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC44700);
  }
  return result;
}

void sub_1ABE9B97C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, ValueMetadata *, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3();
    v8 = a4(a1, &type metadata for SymbolQuoteEntity, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_1ABE9B9DC()
{
  unint64_t result;

  result = qword_1ED34CBA8;
  if (!qword_1ED34CBA8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF48BA0, &type metadata for SymbolQuoteEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34CBA8);
  }
  return result;
}

uint64_t destroy for SymbolQuoteEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for SymbolQuoteEntity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  return a1;
}

_QWORD *assignWithCopy for SymbolQuoteEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF68();
  swift_release();
  a1[1] = a2[1];
  sub_1ABF2FF68();
  swift_release();
  a1[2] = a2[2];
  sub_1ABF2FF68();
  swift_release();
  a1[3] = a2[3];
  sub_1ABF2FF68();
  swift_release();
  a1[4] = a2[4];
  sub_1ABF2FF68();
  swift_release();
  a1[5] = a2[5];
  sub_1ABF2FF68();
  swift_release();
  a1[6] = a2[6];
  sub_1ABF2FF68();
  swift_release();
  a1[7] = a2[7];
  sub_1ABF2FF68();
  swift_release();
  a1[8] = a2[8];
  sub_1ABF2FF68();
  swift_release();
  a1[9] = a2[9];
  sub_1ABF2FF68();
  swift_release();
  a1[10] = a2[10];
  sub_1ABF2FF68();
  swift_release();
  a1[11] = a2[11];
  sub_1ABF2FF68();
  swift_release();
  a1[12] = a2[12];
  sub_1ABF2FF68();
  swift_release();
  a1[13] = a2[13];
  sub_1ABF2FF68();
  swift_release();
  a1[14] = a2[14];
  sub_1ABF2FF68();
  swift_release();
  a1[15] = a2[15];
  sub_1ABF2FF68();
  swift_release();
  a1[16] = a2[16];
  sub_1ABF2FF68();
  swift_release();
  a1[17] = a2[17];
  sub_1ABF2FF68();
  swift_release();
  a1[18] = a2[18];
  sub_1ABF2FF68();
  swift_release();
  a1[19] = a2[19];
  sub_1ABF2FF68();
  swift_release();
  a1[20] = a2[20];
  sub_1ABF2FF68();
  swift_release();
  a1[21] = a2[21];
  sub_1ABF2FF68();
  swift_release();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

_OWORD *assignWithTake for SymbolQuoteEntity(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  swift_release();
  a1[6] = a2[6];
  swift_release();
  swift_release();
  a1[7] = a2[7];
  swift_release();
  swift_release();
  a1[8] = a2[8];
  swift_release();
  swift_release();
  a1[9] = a2[9];
  swift_release();
  swift_release();
  a1[10] = a2[10];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolQuoteEntity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 176))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolQuoteEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolQuoteEntity()
{
  return &type metadata for SymbolQuoteEntity;
}

uint64_t type metadata accessor for YahooStockFeedService()
{
  return objc_opt_self();
}

uint64_t sub_1ABE9C17C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = v2;
  sub_1ABE9D2DC(0);
  sub_1ABE9D334();
  v5 = sub_1ABF31900();
  v12 = MEMORY[0x1E0DEE9E0];
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)(type metadata accessor for YahooHeadline() - 8);
    v8 = v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v9 = *(_QWORD *)(v7 + 72);
    sub_1ABF2FF5C();
    while (1)
    {
      sub_1ABE9C31C(&v12, v8, a2);
      if (v3)
        break;
      v3 = 0;
      v8 += v9;
      if (!--v6)
      {
        swift_bridgeObjectRelease_n();
        v10 = v12;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x1E0DEE9E0];
LABEL_7:
    v12 = v10;
    sub_1ABCF5A54(0, &qword_1ED347170, (uint64_t (*)(uint64_t))sub_1ABE41D34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311E0();
  }
  return result;
}

uint64_t sub_1ABE9C2E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1ABF3052C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1ABE9C31C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  _QWORD *v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  _QWORD v62[19];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;

  v72 = a2;
  v61 = a1;
  v4 = sub_1ABF30760();
  v57 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  MEMORY[0x1E0C80A78](v4);
  v60 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1ABF305D4();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v59 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a3 + 16);
  if (v8)
  {
    v9 = a3 + 32;
    v10 = (int *)type metadata accessor for YahooHeadline();
    v11 = (uint64_t *)(v72 + v10[9]);
    v12 = *v11;
    v13 = v11[1];
    while (1)
    {
      v14 = *(_OWORD *)(v9 + 112);
      v69 = *(_OWORD *)(v9 + 96);
      v70 = v14;
      v71 = *(_QWORD *)(v9 + 128);
      v15 = *(_OWORD *)(v9 + 48);
      v65 = *(_OWORD *)(v9 + 32);
      v66 = v15;
      v16 = *(_OWORD *)(v9 + 80);
      v67 = *(_OWORD *)(v9 + 64);
      v68 = v16;
      v17 = *(_OWORD *)(v9 + 16);
      v63 = *(_OWORD *)v9;
      v64 = v17;
      if (v13)
      {
        if ((_QWORD)v64 == v12 && v13 == *((_QWORD *)&v64 + 1) || (sub_1ABF3223C() & 1) != 0)
          break;
      }
      v9 += 136;
      if (!--v8)
        goto LABEL_12;
    }
    sub_1ABD97ECC((uint64_t)&v63);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v19 = (uint64_t)v59;
    v20 = v72;
    v18(v59, v72, v56);
    v21 = (uint64_t *)(v20 + v10[5]);
    v22 = *v21;
    v23 = v21[1];
    v24 = (uint64_t *)(v20 + v10[6]);
    v25 = v24[1];
    v56 = *v24;
    v26 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v60, v20 + v10[8], v58);
    objc_allocWithZone((Class)SCWebHeadline);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v27 = sub_1ABE9CCBC(v19, v22, v23, v56, v25, v26);
    v28 = v61;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v62[0] = *v28;
    v30 = (_QWORD *)v62[0];
    *v28 = 0x8000000000000000;
    v32 = sub_1ABD9A4D0((unint64_t *)&v63);
    v33 = v30[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
    }
    else
    {
      v36 = v31;
      if (v30[3] >= v35)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1ABE6F6CC();
          v30 = (_QWORD *)v62[0];
        }
      }
      else
      {
        sub_1ABE6B8A0(v35, isUniquelyReferenced_nonNull_native);
        v30 = (_QWORD *)v62[0];
        v37 = sub_1ABD9A4D0((unint64_t *)&v63);
        if ((v36 & 1) != (v38 & 1))
        {
          sub_1ABF3229C();
          __break(1u);
          return;
        }
        v32 = v37;
      }
      *v28 = v30;
      swift_bridgeObjectRelease();
      v51 = (_QWORD *)*v28;
      sub_1ABF2FF5C();
      if ((v36 & 1) == 0)
      {
        sub_1ABF205B4(v32, (uint64_t)&v63, MEMORY[0x1E0DEE9D8], v51);
        sub_1ABD97ECC((uint64_t)&v63);
      }
      isUniquelyReferenced_nonNull_native = v51[7];
      swift_bridgeObjectRelease();
      v30 = *(_QWORD **)(isUniquelyReferenced_nonNull_native + 8 * v32);
      v52 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v32) = v30;
      if ((v52 & 1) != 0)
        goto LABEL_22;
    }
    v30 = sub_1ABD831E0(0, v30[2] + 1, 1, v30);
    *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v32) = v30;
LABEL_22:
    v54 = v30[2];
    v53 = v30[3];
    if (v54 >= v53 >> 1)
      *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v32) = sub_1ABD831E0((_QWORD *)(v53 > 1), v54 + 1, 1, v30);
    v62[0] = v27;
    sub_1ABD6442C((uint64_t)v62);
    v55 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v32);
    *(_QWORD *)(v55 + 16) = v54 + 1;
    sub_1ABD6414C((uint64_t)v62, v55 + 144 * v54 + 32);

    sub_1ABD97F60((uint64_t)&v63);
    return;
  }
LABEL_12:
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1ABF366E0;
  v62[0] = sub_1ABE61510(a3);
  v40 = MEMORY[0x1E0DEA968];
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD16600();
  v41 = sub_1ABF316E4();
  v43 = v42;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 56) = v40;
  v44 = sub_1ABD0F5C0();
  *(_QWORD *)(v39 + 64) = v44;
  *(_QWORD *)(v39 + 32) = v41;
  *(_QWORD *)(v39 + 40) = v43;
  v45 = (uint64_t *)(v72 + *(int *)(type metadata accessor for YahooHeadline() + 36));
  v46 = *v45;
  v47 = v45[1];
  *(_QWORD *)(v39 + 96) = v40;
  *(_QWORD *)(v39 + 104) = v44;
  v48 = 7104878;
  if (v47)
    v48 = v46;
  v49 = 0xE300000000000000;
  if (v47)
    v49 = v47;
  *(_QWORD *)(v39 + 72) = v48;
  *(_QWORD *)(v39 + 80) = v49;
  sub_1ABD19560();
  sub_1ABF2FF5C();
  v50 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

}

uint64_t sub_1ABE9C820(void *a1)
{
  id v2;
  uint64_t v3;

  sub_1ABCF5A54(0, &qword_1EEC44720, (uint64_t (*)(uint64_t))sub_1ABE9D2DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  sub_1ABF30BE0();
  sub_1ABF30BA4();
  v2 = a1;
  v3 = sub_1ABF31258();
  swift_release();
  return v3;
}

uint64_t sub_1ABE9C8B4(id *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char v34;
  unint64_t *v35;

  v3 = sub_1ABF30760();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for YahooHeadline();
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *a1;
  sub_1ABE9D2DC(0);
  sub_1ABE9D334();
  v8 = sub_1ABF31900();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v25[1] = v1;
    v35 = (unint64_t *)MEMORY[0x1E0DEE9D8];
    sub_1ABD1515C(0, v9, 0);
    v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v25[0] = v8;
    v11 = v8 + v10;
    v26 = *(_QWORD *)(v5 + 72);
    v29 = v9 - 1;
    while (1)
    {
      v28 = v11;
      sub_1ABE9D3A0(v11, (uint64_t)v7);
      v12 = *(_QWORD *)&v7[*(int *)(v27 + 24) + 8];
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v30, &v7[*(int *)(v27 + 32)], v32);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v13 = (void *)sub_1ABF30550();
      v14 = (void *)sub_1ABF31780();
      swift_bridgeObjectRelease();
      if (v12)
      {
        v15 = (void *)sub_1ABF31780();
        swift_bridgeObjectRelease();
      }
      else
      {
        v15 = 0;
      }
      v16 = objc_allocWithZone((Class)SCWebHeadline);
      v17 = v30;
      v18 = (void *)sub_1ABF306D0();
      v19 = (void *)sub_1ABF31780();
      swift_bridgeObjectRelease();
      v20 = objc_msgSend(v16, sel_initWithURL_title_shortExcerpt_publishDate_sourceName_, v13, v14, v15, v18, v19, v25[0]);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v32);
      sub_1ABE9D3E4((uint64_t)v7);
      v21 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ABD1515C(0, v21[2] + 1, 1);
        v21 = v35;
      }
      v23 = v21[2];
      v22 = v21[3];
      if (v23 >= v22 >> 1)
      {
        sub_1ABD1515C(v22 > 1, v23 + 1, 1);
        v21 = v35;
      }
      v33 = v20;
      sub_1ABD6442C((uint64_t)&v33);
      v21[2] = v23 + 1;
      sub_1ABD6414C((uint64_t)&v33, (uint64_t)&v21[18 * v23 + 4]);
      if (!v29)
        break;
      --v29;
      v11 = v28 + v26;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = (unint64_t *)MEMORY[0x1E0DEE9D8];
  }
  v33 = v21;
  v34 = 0;
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34DD40, (uint64_t (*)(uint64_t))sub_1ABD33E04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE9CC7C(uint64_t a1, uint64_t a2)
{
  return sub_1ABE9CF5C(a1, a2);
}

uint64_t sub_1ABE9CC9C(uint64_t a1, uint64_t a2)
{
  return sub_1ABE9D114(a1, a2);
}

id sub_1ABE9CCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v18;

  v9 = (void *)sub_1ABF30550();
  v10 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  if (a5)
  {
    v11 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v12 = (void *)sub_1ABF306D0();
  v13 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v18, sel_initWithURL_title_shortExcerpt_publishDate_sourceName_, v9, v10, v11, v12, v13);

  v15 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a6, v15);
  v16 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
  return v14;
}

id sub_1ABE9CE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_super v20;
  _QWORD v21[5];
  _QWORD v22[5];

  v6 = type metadata accessor for YahooBaseOperationFactory();
  v22[3] = v6;
  v22[4] = &off_1E5AEEE20;
  v22[0] = a2;
  v7 = (objc_class *)type metadata accessor for YahooNewsOperation();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v6);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
  v14 = *v12;
  v21[3] = v6;
  v21[4] = &off_1E5AEEE20;
  v21[0] = v14;
  *(_QWORD *)&v8[qword_1EEC41E98] = a1;
  sub_1ABD07E04((uint64_t)v21, (uint64_t)&v8[qword_1EEC41EA0]);
  v15 = &v8[qword_1EEC41EA8];
  v16 = sub_1ABF30B38();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a3, v16);
  v20.receiver = v8;
  v20.super_class = v7;
  v18 = objc_msgSendSuper2(&v20, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a3, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v18;
}

uint64_t sub_1ABE9CF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  _BYTE v22[16];
  id v23;
  _BYTE v24[24];
  uint64_t v25;

  v5 = sub_1ABF30B38();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v11 + 32) = v10;
  *(_QWORD *)(v11 + 40) = v9;
  sub_1ABD07E04(v2 + 16, (uint64_t)v24);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)&v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
  v17 = *v15;
  sub_1ABF2FF5C();
  v18 = sub_1ABE9CE04(v11, v17, (uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  v23 = v18;
  sub_1ABE9D2DC(0);
  sub_1ABF3127C();
  v19 = (void *)sub_1ABF31114();
  sub_1ABD33E04();
  v20 = sub_1ABF31174();

  swift_release();
  return v20;
}

uint64_t sub_1ABE9D114(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  _BYTE v19[16];
  id v20;
  _BYTE v21[24];
  uint64_t v22;

  v5 = sub_1ABF30B38();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1ABE61510(a1);
  sub_1ABD07E04(v2 + 16, (uint64_t)v21);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)&v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
  v15 = sub_1ABE9CE04(v9, *v13, (uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  v20 = v15;
  sub_1ABE9D2DC(0);
  sub_1ABF3127C();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1ABF2FF5C();
  v16 = (void *)sub_1ABF31114();
  sub_1ABE41D34();
  v17 = sub_1ABF31174();

  swift_release();
  swift_release();

  return v17;
}

uint64_t sub_1ABE9D2BC()
{
  uint64_t v0;

  return sub_1ABE9C820(*(void **)(v0 + 16));
}

void sub_1ABE9D2DC(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1EEC44710, (uint64_t (*)(uint64_t))type metadata accessor for YahooHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1ABE9D2F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE9D31C(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABE9C17C(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1ABE9D334()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC44718;
  if (!qword_1EEC44718)
  {
    sub_1ABE9D2DC(255);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC44718);
  }
  return result;
}

uint64_t sub_1ABE9D380()
{
  uint64_t v0;

  return sub_1ABE9C820(*(void **)(v0 + 16));
}

uint64_t sub_1ABE9D3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YahooHeadline();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABE9D3E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for YahooHeadline();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABE9D424@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABE9C2E4(a1);
}

uint64_t type metadata accessor for SDSStockMetadataOperation()
{
  uint64_t result;

  result = qword_1ED351440;
  if (!qword_1ED351440)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABE9D474()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF30B38();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_1ABE9D51C(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = v2;
  v13 = *(_QWORD *)&v2[qword_1ED351430];
  swift_bridgeObjectRetain_n();
  sub_1ABF231D4(&v13);
  swift_bridgeObjectRelease();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD747CC((unint64_t *)&qword_1ED34DFE8, MEMORY[0x1E0DEAF50]);
  v6 = sub_1ABF31B64();
  swift_release();
  v7 = v3;
  sub_1ABE9E3F8(v6);
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1ABF31114();
  sub_1ABD3463C();
  sub_1ABF3109C();
  swift_bridgeObjectRelease();

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  sub_1ABF2FF68();
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  sub_1ABF2FF68();
  v12 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABE9D710(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = MEMORY[0x1E0DEE9E0];
  v7 = MEMORY[0x1E0DEE9E0];
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v4)
  {
    sub_1ABF2FF5C();
    v5 = 0;
    do
    {
      ++v5;
      sub_1ABF2FF5C();
      sub_1ABF3103C();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

void sub_1ABE9D800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  char *v21;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  __swift_project_boxed_opaque_existential_1(&a5[qword_1ED351438], *(_QWORD *)&a5[qword_1ED351438 + 24]);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF366E0;
  *(_QWORD *)(inited + 32) = 0x6C6F626D7973;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD747CC((unint64_t *)&qword_1ED34FCC0, MEMORY[0x1E0DEAF20]);
  sub_1ABF2FF68();
  *(_QWORD *)(inited + 48) = sub_1ABF316E4();
  *(_QWORD *)(inited + 56) = v14;
  *(_QWORD *)(inited + 64) = 0x74655361746164;
  *(_QWORD *)(inited + 72) = 0xE700000000000000;
  *(_QWORD *)(inited + 80) = 0x65746F7571;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  sub_1ABD031C0(inited);
  v15 = (_QWORD *)sub_1ABE77C3C(2);
  swift_bridgeObjectRelease();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a6;
  v17 = (_QWORD *)((char *)v15 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v15) + 16));
  v18 = *v17;
  *v17 = (uint64_t)sub_1ABE9E574;
  v17[1] = v16;
  sub_1ABF2FF5C();
  sub_1ABD12EC4(v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a3;
  v19[3] = a4;
  v19[4] = a5;
  v19[5] = sub_1ABD17048;
  v19[6] = v12;
  v20 = v15;
  sub_1ABF2FF68();
  v21 = a5;
  sub_1ABF30BF8();

  objc_msgSend(v20, sel_start);
}

uint64_t sub_1ABE9DA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1ABD669A8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34E4C8, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (id *)((char *)&v29 - v13);
  sub_1ABD66A44(a2, (uint64_t)&v29 - v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    sub_1ABD66FD0();
    v16 = (_QWORD *)(a4 + *(int *)(v15 + 48));
    v17 = sub_1ABF30F34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a4, a1, v17);
    *v16 = *(_QWORD *)(a3 + 16);
    v16[1] = 0;
    v18 = MEMORY[0x1E0DEE9D8];
    v16[2] = MEMORY[0x1E0DEE9D8];
    v16[3] = v18;
    type metadata accessor for NetworkEvent();
    v16[4] = 0;
    v16[5] = 0;
  }
  else
  {
    sub_1ABD748D0((uint64_t)v14, (uint64_t)v10);
    v19 = sub_1ABF30F34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a4, a1, v19);
    v20 = *(_QWORD *)(a3 + 16);
    sub_1ABD04578(0, &qword_1ED34E4C0, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB44E8]);
    sub_1ABF30F64();
    v21 = v29;
    sub_1ABD365D4(v30, v31);
    v22 = *(_QWORD *)(v21 + 16);
    swift_bridgeObjectRelease();
    sub_1ABF30F64();
    swift_bridgeObjectRelease();
    v23 = v31;
    if (v31)
    {
      v24 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = 0;
    }
    sub_1ABD66FD0();
    v26 = (_QWORD *)(a4 + *(int *)(v25 + 48));
    sub_1ABD75174((uint64_t)v10);
    *v26 = v20;
    v26[1] = v22;
    v27 = MEMORY[0x1E0DEE9D8];
    v26[2] = MEMORY[0x1E0DEE9D8];
    v26[3] = v27;
    v26[4] = v24;
    v26[5] = v23;
    type metadata accessor for NetworkEvent();
  }
  return swift_storeEnumTagMultiPayload();
}

void sub_1ABE9DCC0(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, void (*a5)(_QWORD *), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  void **v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD *);
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD v85[8];
  uint64_t v86;
  _QWORD *v87;
  char v88;
  _QWORD v89[73];
  _QWORD v90[99];

  sub_1ABD669A8(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34E4C8, v13, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (void **)((char *)v57 - v15);
  sub_1ABD66A44(a1, (uint64_t)v57 - v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = *v16;
    a2(v17);

    return;
  }
  v60 = a6;
  v61 = a5;
  sub_1ABD748D0((uint64_t)v16, (uint64_t)v12);
  sub_1ABD04578(0, &qword_1ED34E4C0, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB44E8]);
  sub_1ABF30F64();
  v18 = v90[0];
  v58 = v90[2];
  v59 = v90[1];
  v57[1] = v90[4];
  v57[2] = v90[3];
  v57[0] = v90[5];
  v19 = *(_QWORD *)(v90[0] + 16);
  if (!v19)
  {
    sub_1ABF2FF5C();
    v21 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_28:
    swift_bridgeObjectRelease_n();
    sub_1ABD365D4(v59, v58);
    v61(v21);
    swift_bridgeObjectRelease();
    sub_1ABD75174((uint64_t)v12);
    return;
  }
  v20 = &v90[13];
  swift_bridgeObjectRetain_n();
  v21 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v22 = v19 - 1;
  v23 = 32;
  v63 = v18;
  v64 = v12;
  v62 = &v90[13];
  while (1)
  {
    memcpy(v90, (const void *)(v18 + v23), 0x308uLL);
    v24 = v90[10];
    if (!v90[10])
      goto LABEL_24;
    v66 = v22;
    v72 = v90[9];
    v25 = v90[90];
    v26 = v90[91];
    if (v90[12])
    {
      v67 = v90[12];
      v68 = v90[11];
    }
    else
    {
      sub_1ABF2FF5C();
      v67 = v26;
      v68 = v25;
    }
    v65 = v23;
    v88 = byte_1ABF48CA2[SLOBYTE(v90[92])];
    sub_1ABD751B0((uint64_t)v20, (uint64_t)v89);
    v27 = sub_1ABD7520C((uint64_t)v89);
    v73 = v25;
    v28 = v26;
    if (v27 == 1)
    {
      v70 = 0;
      v71 = 0;
      v29 = 0;
      v30 = 0;
    }
    else
    {
      v71 = v89[69];
      v30 = v89[70];
      sub_1ABD751B0((uint64_t)v20, (uint64_t)&v74);
      v70 = v83;
      v29 = v84;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v69 = v90[86];
    v31 = v90[87];
    v32 = v90[88];
    v33 = v90[89];
    swift_bridgeObjectRetain_n();
    sub_1ABD74914((uint64_t)v90);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v56 = v33;
    v34 = v73;
    sub_1ABD15B80(v73, v28, v68, v67, v72, v24, &v88, v69, (uint64_t)&v74, v31, v32, v56, v71, v30, v70, v29);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v87 = v21;
    v37 = sub_1ABD00F9C(v34, v28);
    v38 = v21[2];
    v39 = (v36 & 1) == 0;
    v40 = v38 + v39;
    if (__OFADD__(v38, v39))
      break;
    v41 = v36;
    if (v21[3] >= v40)
    {
      v12 = v64;
      v23 = v65;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v22 = v66;
        if ((v36 & 1) == 0)
          goto LABEL_21;
      }
      else
      {
        sub_1ABE6E87C();
        v22 = v66;
        if ((v41 & 1) == 0)
          goto LABEL_21;
      }
    }
    else
    {
      sub_1ABD0E4A4(v40, isUniquelyReferenced_nonNull_native);
      v42 = sub_1ABD00F9C(v34, v28);
      v12 = v64;
      v23 = v65;
      if ((v41 & 1) != (v43 & 1))
        goto LABEL_32;
      v37 = v42;
      v22 = v66;
      if ((v41 & 1) == 0)
      {
LABEL_21:
        v21 = v87;
        v87[(v37 >> 6) + 8] |= 1 << v37;
        v51 = (uint64_t *)(v21[6] + 16 * v37);
        *v51 = v34;
        v51[1] = v28;
        v52 = v21[7] + 136 * v37;
        *(_OWORD *)v52 = v74;
        *(_OWORD *)(v52 + 64) = v78;
        *(_OWORD *)(v52 + 48) = v77;
        *(_OWORD *)(v52 + 32) = v76;
        *(_OWORD *)(v52 + 16) = v75;
        *(_QWORD *)(v52 + 128) = v82;
        *(_OWORD *)(v52 + 112) = v81;
        *(_OWORD *)(v52 + 96) = v80;
        *(_OWORD *)(v52 + 80) = v79;
        v53 = v21[2];
        v54 = __OFADD__(v53, 1);
        v55 = v53 + 1;
        if (v54)
          goto LABEL_31;
        v21[2] = v55;
        sub_1ABF2FF5C();
        goto LABEL_23;
      }
    }
    v21 = v87;
    v44 = v87[7] + 136 * v37;
    v85[0] = *(_OWORD *)v44;
    v45 = *(_OWORD *)(v44 + 64);
    v47 = *(_OWORD *)(v44 + 16);
    v46 = *(_OWORD *)(v44 + 32);
    v85[3] = *(_OWORD *)(v44 + 48);
    v85[4] = v45;
    v85[1] = v47;
    v85[2] = v46;
    v49 = *(_OWORD *)(v44 + 96);
    v48 = *(_OWORD *)(v44 + 112);
    v50 = *(_OWORD *)(v44 + 80);
    v86 = *(_QWORD *)(v44 + 128);
    v85[6] = v49;
    v85[7] = v48;
    v85[5] = v50;
    sub_1ABD97F60((uint64_t)v85);
    *(_OWORD *)(v44 + 80) = v79;
    *(_OWORD *)(v44 + 96) = v80;
    *(_OWORD *)(v44 + 112) = v81;
    *(_QWORD *)(v44 + 128) = v82;
    *(_OWORD *)(v44 + 16) = v75;
    *(_OWORD *)(v44 + 32) = v76;
    *(_OWORD *)(v44 + 48) = v77;
    *(_OWORD *)(v44 + 64) = v78;
    *(_OWORD *)v44 = v74;
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABD74D6C((uint64_t)v90);
    v20 = v62;
    v18 = v63;
LABEL_24:
    if (!v22)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    --v22;
    v23 += 776;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  sub_1ABF3229C();
  __break(1u);
}

void sub_1ABE9E234()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABE9E260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED351438);
  v1 = v0 + qword_1EEC44728;
  v2 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_1EEC44730;
  v4 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t sub_1ABE9E2E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED351438);
  v2 = a1 + qword_1EEC44728;
  v3 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = a1 + qword_1EEC44730;
  v5 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1ABE9E36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABE9D51C((uint64_t)sub_1ABD6B260, v4);
  return swift_release();
}

uint64_t sub_1ABE9E3CC()
{
  return type metadata accessor for SDSStockMetadataOperation();
}

uint64_t sub_1ABE9E3D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE9E3F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    v4 = a1 + 32;
    sub_1ABCF5A54(0, &qword_1EEC423D0, (uint64_t (*)(uint64_t))sub_1ABD3463C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    do
    {
      v4 += 8;
      MEMORY[0x1E0C80A78](v5);
      swift_allocObject();
      sub_1ABF2FF5C();
      sub_1ABF31228();
      swift_bridgeObjectRelease();
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      v5 = sub_1ABF31F00();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_1ABE9E530(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABE9D710(a1, *(void (**)(uint64_t, _QWORD))(v1 + 16));
}

void sub_1ABE9E548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABE9D800(a1, a2, a3, a4, *(char **)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABE9E550()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE9E574(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  v3 = *(_QWORD *)(v2 + 16);
  v5[2] = a1;
  v5[3] = v3;
  return sub_1ABF12034((void (*)(uint64_t))sub_1ABE9E5FC, (uint64_t)v5, a2);
}

uint64_t sub_1ABE9E5B8()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_1ABE9E5EC(uint64_t a1)
{
  uint64_t v1;

  sub_1ABE9DCC0(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(_QWORD *))(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1ABE9E5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1ABE9DA78(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1ABE9E624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1ABE9E8F8(a1, a2);
  return v4;
}

uint64_t sub_1ABE9E670()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE9E6DC(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[3120];
  _QWORD __src[390];

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(_QWORD *__return_ptr))(*(_QWORD *)(v1 + 32) + 8))(__src);
  memcpy(v3, __src, sizeof(v3));
  swift_getAtKeyPath();
  return sub_1ABD7DDF4((uint64_t)__src);
}

uint64_t sub_1ABE9E788()
{
  sub_1ABF31060();
  swift_release();
  sub_1ABF30C88();
  return swift_release();
}

uint64_t sub_1ABE9E7D0()
{
  uint64_t v1;

  sub_1ABF31060();
  swift_release();
  return v1;
}

uint64_t sub_1ABE9E808()
{
  uint64_t v1;

  sub_1ABF31060();
  swift_release();
  return v1;
}

uint64_t sub_1ABE9E840()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED34F9D8 != -1)
    swift_once();
  sub_1ABF309B8();
  swift_release();
  if ((v5 & 1) != 0)
  {
    v1 = 0;
  }
  else
  {
    v3 = v0[11];
    v2 = v0[12];
    __swift_project_boxed_opaque_existential_1(v0 + 8, v3);
    v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v3, v2);
  }
  return v1 & 1;
}

_QWORD *sub_1ABE9E8F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v13;
  __int128 v14[2];

  v3 = v2;
  v13 = *v2;
  v5 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF30EE0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)&v14[0] = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350B00, v7, MEMORY[0x1E0DB41A8]);
  sub_1ABCF5A54(0, &qword_1ED350B80, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B88, &qword_1ED350B80, v7);
  sub_1ABF31E04();
  sub_1ABE9EB9C();
  swift_allocObject();
  v2[7] = sub_1ABF30C34();
  sub_1ABD07E04(a1, (uint64_t)(v2 + 2));
  sub_1ABD07E04(a2, (uint64_t)(v2 + 8));
  sub_1ABD07E04(a2, (uint64_t)v14);
  v8 = swift_allocObject();
  sub_1ABD065C8(v14, v8 + 16);
  *(_QWORD *)(v8 + 56) = v13;
  *(_QWORD *)&v14[0] = MEMORY[0x1E0DEE9D8];
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350AE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], MEMORY[0x1E0DB33D8]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B50, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B60, (unint64_t *)&unk_1ED350B50, v9);
  sub_1ABF31E04();
  sub_1ABCF5A54(0, &qword_1ED34FAA8, (uint64_t (*)(uint64_t))sub_1ABE9ED1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v10 = sub_1ABF31078();
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  v3[13] = v10;
  return v3;
}

void sub_1ABE9EB9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FA70)
  {
    v0 = sub_1ABF30C4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FA70);
  }
}

uint64_t sub_1ABE9EC00(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t result;
  _BYTE v5[3120];
  _BYTE __src[3120];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  sub_1ABE9EDC4(v1);
  memcpy(v5, __src, sizeof(v5));
  sub_1ABD04578(0, &qword_1ED34FA88, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E0DB3938]);
  swift_allocObject();
  sub_1ABDC1FEC((uint64_t)__src);
  *v3 = sub_1ABF30C7C();
  memcpy(v5, __src, sizeof(v5));
  sub_1ABD04578(0, &qword_1ED34FA90, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E0DB39E0]);
  swift_allocObject();
  result = sub_1ABF30CD0();
  v3[1] = result;
  return result;
}

uint64_t sub_1ABE9ECEC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1ABE9ED10()
{
  uint64_t v0;

  return sub_1ABE9EC00(v0 + 16);
}

void sub_1ABE9ED1C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34FA80)
  {
    sub_1ABD04578(255, &qword_1ED34FA88, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E0DB3938]);
    sub_1ABD04578(255, &qword_1ED34FA90, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E0DB39E0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34FA80);
  }
}

void sub_1ABE9EDC4(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  _BYTE v15[168];
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[25];
  _BYTE v20[265];
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[168];
  _OWORD v31[195];
  _BYTE v32[3120];
  _BYTE v33[3120];

  v1 = (_QWORD *)MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED34F9D8 != -1)
    swift_once();
  sub_1ABF309B8();
  swift_release();
  if ((v33[0] & 1) != 0)
  {
    sub_1ABD19560();
    v4 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
LABEL_6:
    sub_1ABF31318();

    v29 = 0u;
    v28 = 0u;
    v27 = 0;
    v26 = 0u;
    v25 = 0u;
    v24 = 0u;
    v23 = 0u;
    v21 = 2;
    v22 = 0u;
    sub_1ABE7C13C(v31);
    sub_1ABD843F0((uint64_t)v31, (uint64_t)v20, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
    v16 = 1;
    v17 = 0u;
    v18 = 0u;
    memset(v19, 0, sizeof(v19));
    sub_1ABE7C18C((uint64_t)v30);
    sub_1ABD843F0((uint64_t)v30, (uint64_t)v15, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
    sub_1ABE7C1B0(v33);
    sub_1ABD843F0((uint64_t)v33, (uint64_t)v32, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
    sub_1ABEF3EC4(2, 0, 0, 0, 1, 0, 1, 0, 0.0, v8, v9, v10, v11, v12, v13, v14, 1, 0.0, 1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      2,
      2,
      0.0,
      1,
      2,
      2,
      0,
      1,
      0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0,
      0,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0,
      1,
      0.0);
    return;
  }
  v5 = v1[3];
  v6 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v5);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v6 + 16))(v31, v5, v6);
  sub_1ABD843F0((uint64_t)v31, (uint64_t)v32, (unint64_t *)&qword_1ED34EF18, (uint64_t)&type metadata for AppConfiguration);
  sub_1ABD843F0((uint64_t)v32, (uint64_t)v33, (unint64_t *)&qword_1ED34EF18, (uint64_t)&type metadata for AppConfiguration);
  v7 = sub_1ABD75518((uint64_t)v33);
  sub_1ABD19560();
  v4 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  if (v7 == 1)
    goto LABEL_6;
  sub_1ABF31318();

  memcpy(v3, v33, 0xC30uLL);
}

uint64_t sub_1ABE9F3F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  _BYTE v8[3120];
  _QWORD __src[390];

  MEMORY[0x1E0C80A78](a1);
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED34F9D8 != -1)
    swift_once();
  sub_1ABF309B8();
  swift_release();
  if ((__src[0] & 1) != 0
    || (v2 = v1[11],
        v3 = v1[12],
        __swift_project_boxed_opaque_existential_1(v1 + 8, v2),
        ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) == 0))
  {
    sub_1ABD19560();
    v6 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    __src[0] = 0x68736572666572;
    __src[1] = 0xE700000000000000;
    v5 = sub_1ABF30C40();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ABD19560();
    v4 = (void *)sub_1ABF31D44();
    sub_1ABF31BF4();
    sub_1ABF31318();

    sub_1ABF31060();
    swift_release();
    sub_1ABF30C88();
    swift_release();
    memcpy(v8, __src, sizeof(v8));
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FAC0, (uint64_t)&type metadata for AppConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311E0();
  }
  return v5;
}

uint64_t sub_1ABE9F610()
{
  uint64_t v0;

  v0 = sub_1ABF30C40();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1ABE9F670()
{
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FAC0, (uint64_t)&type metadata for AppConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  sub_1ABF2FF68();
  return sub_1ABF31168();
}

uint64_t sub_1ABE9F6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 12560) = a2;
  *(_QWORD *)(v2 + 12552) = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE9F6E4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)v0[1570];
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v0[1571] = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[1572] = v4;
  *v4 = v0;
  v4[1] = sub_1ABE9F770;
  return sub_1ABF31150();
}

uint64_t sub_1ABE9F770()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 12584) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABE9F7DC()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE __dst[3120];

  v1 = (_QWORD *)v0[1570];
  memcpy(v0 + 1172, v0 + 2, 0xC30uLL);
  v2 = v1 + 8;
  v3 = v1[11];
  v4 = v1[12];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  memcpy(__dst, v0 + 1172, sizeof(__dst));
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 24))(__dst, v3, v4);
  sub_1ABF31AEC();
  v0[1574] = sub_1ABF31AE0();
  sub_1ABF31AB0();
  return swift_task_switch();
}

uint64_t sub_1ABE9F8B4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[1570];
  swift_release();
  v0[1575] = *(_QWORD *)(v1 + 104);
  sub_1ABF31060();
  swift_release();
  memcpy(v0 + 392, v0 + 1172, 0xC30uLL);
  v0[1576] = sub_1ABEA13C0();
  sub_1ABF30CA0();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1ABE9F95C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 12552);
  sub_1ABF31060();
  swift_release();
  memcpy((void *)(v0 + 6256), (const void *)(v0 + 9376), 0xC30uLL);
  sub_1ABF30CF4();
  swift_release();
  sub_1ABD19560();
  v2 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();

  memcpy(v1, (const void *)(v0 + 9376), 0xC30uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE9FA4C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 12584);
  swift_release();
  sub_1ABD19560();
  v2 = (void *)sub_1ABF31D44();
  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v0 + 12496) = 0;
  *(_QWORD *)(v0 + 12504) = 0xE000000000000000;
  *(_QWORD *)(v0 + 12544) = v1;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  v4 = *(_QWORD *)(v0 + 12496);
  v5 = *(_QWORD *)(v0 + 12504);
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE9FB8C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  return v0;
}

uint64_t sub_1ABE9FBC0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE9FBFC()
{
  sub_1ABF31060();
  swift_release();
  sub_1ABF30C88();
  return swift_release();
}

uint64_t sub_1ABE9FC48()
{
  uint64_t v1;

  sub_1ABF31060();
  swift_release();
  return v1;
}

uint64_t sub_1ABE9FC84()
{
  uint64_t v1;

  sub_1ABF31060();
  swift_release();
  return v1;
}

uint64_t sub_1ABE9FCC0()
{
  _QWORD *v0;
  _QWORD *v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v1 = (_QWORD *)*v0;
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED34F9D8 != -1)
    swift_once();
  sub_1ABF309B8();
  swift_release();
  if ((v7 & 1) != 0)
  {
    v2 = 0;
  }
  else
  {
    v3 = v1 + 8;
    v4 = v1[11];
    v5 = v1[12];
    __swift_project_boxed_opaque_existential_1(v3, v4);
    v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  }
  return v2 & 1;
}

uint64_t sub_1ABE9FD78(uint64_t a1)
{
  return sub_1ABE9F3F4(a1);
}

uint64_t sub_1ABE9FD98()
{
  uint64_t v0;

  v0 = sub_1ABF30C40();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_1ABE9FDF8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1ABF31780();
  v3 = objc_msgSend(v1, sel_dataForKey_, v2);

  if (v3)
  {
    v4 = sub_1ABF30658();
    v6 = v5;

    sub_1ABD0F430(v4, v6);
  }
  return v3 != 0;
}

uint64_t sub_1ABE9FE94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BYTE *v10;
  _QWORD __dst[391];
  _BYTE __src[3120];

  MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = *(void **)(v1 + 16);
  v5 = (void *)sub_1ABF31780();
  v6 = objc_msgSend(v4, sel_dataForKey_, v5);

  if (v6)
  {
    v7 = sub_1ABF30658();
    v9 = v8;

    sub_1ABF301E4();
    swift_allocObject();
    sub_1ABF301D8();
    sub_1ABEA1218();
    sub_1ABF301C0();
    sub_1ABD0F430(v7, v9);
    swift_release();
    memcpy(__dst, __src, 0xC30uLL);
    nullsub_2(__dst);
    v10 = __dst;
  }
  else
  {
    sub_1ABDC4280(__src);
    v10 = __src;
  }
  return sub_1ABD843F0((uint64_t)v10, v3, (unint64_t *)&qword_1ED34EF18, (uint64_t)&type metadata for AppConfiguration);
}

uint64_t sub_1ABEA0108(const void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD __dst[390];

  v2 = v1;
  sub_1ABF30220();
  swift_allocObject();
  sub_1ABF30214();
  memcpy(__dst, a1, sizeof(__dst));
  sub_1ABEA125C();
  v4 = sub_1ABF30208();
  v6 = v5;
  swift_release();
  v7 = *(void **)(v2 + 16);
  v8 = (void *)sub_1ABF30640();
  v9 = (void *)sub_1ABF31780();
  objc_msgSend(v7, sel_setObject_forKey_, v8, v9);

  return sub_1ABD0F430(v4, v6);
}

uint64_t sub_1ABEA02F4()
{
  return 0x72756769666E6F63;
}

uint64_t sub_1ABEA0318()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1ABEA0334()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

BOOL sub_1ABEA0358()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_1ABF31780();
  v3 = objc_msgSend(v1, sel_dataForKey_, v2);

  if (v3)
  {
    v4 = sub_1ABF30658();
    v6 = v5;

    sub_1ABD0F430(v4, v6);
  }
  return v3 != 0;
}

uint64_t sub_1ABEA03F8(uint64_t a1)
{
  return sub_1ABE9FE94(a1);
}

uint64_t sub_1ABEA0418(const void *a1)
{
  return sub_1ABEA0108(a1);
}

uint64_t sub_1ABEA0438()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1ABEA046C(v0);
  return v0;
}

uint64_t sub_1ABEA046C(uint64_t a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  _BYTE v17[1120];
  _BYTE v18[168];
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[25];
  _BYTE v23[512];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[32];
  _BYTE v34[168];
  _BYTE v35[1136];

  MEMORY[0x1E0C80A78](a1);
  v32 = 0u;
  v31 = 0u;
  v30 = 0;
  v29 = 0u;
  v28 = 0u;
  v27 = 0u;
  v26 = 0u;
  v24 = 2;
  v25 = 0u;
  sub_1ABE7C13C(v33);
  sub_1ABD843F0((uint64_t)v33, (uint64_t)v23, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  v19 = 1;
  v20 = 0u;
  v21 = 0u;
  memset(v22, 0, sizeof(v22));
  sub_1ABE7C18C((uint64_t)v34);
  sub_1ABD843F0((uint64_t)v34, (uint64_t)v18, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1ABE7C1B0(v35);
  sub_1ABD843F0((uint64_t)v35, (uint64_t)v17, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  sub_1ABEF3EC4(2, 0, 0, 0, 1, 0, 1, 0, 0.0, v2, v3, v4, v5, v6, v7, v8, 1, 0.0, 1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    2,
    2,
    0.0,
    1,
    2,
    2,
    0,
    1,
    0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0,
    0,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0);
  sub_1ABD04578(0, &qword_1ED34FA88, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E0DB3938]);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1ABF30C7C();
  v32 = 0u;
  v31 = 0u;
  v30 = 0;
  v29 = 0u;
  v28 = 0u;
  v27 = 0u;
  v26 = 0u;
  v24 = 2;
  v25 = 0u;
  sub_1ABD843F0((uint64_t)v33, (uint64_t)v23, &qword_1ED34F518, (uint64_t)&type metadata for PaidBundleConfiguration);
  v19 = 1;
  v20 = 0u;
  v21 = 0u;
  memset(v22, 0, sizeof(v22));
  sub_1ABD843F0((uint64_t)v34, (uint64_t)v18, &qword_1ED34F6B8, (uint64_t)&type metadata for ArticleScoringConfiguration);
  sub_1ABD843F0((uint64_t)v35, (uint64_t)v17, &qword_1ED34F738, (uint64_t)&type metadata for NewsPersonalizationTreatment);
  sub_1ABEF3EC4(2, 0, 0, 0, 1, 0, 1, 0, 0.0, v9, v10, v11, v12, v13, v14, v15, 1, 0.0, 1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    2,
    2,
    0.0,
    1,
    2,
    2,
    0,
    1,
    0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0,
    0,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0);
  sub_1ABD04578(0, &qword_1ED34FA90, (uint64_t)&type metadata for AppConfiguration, MEMORY[0x1E0DB39E0]);
  swift_allocObject();
  *(_QWORD *)(v1 + 24) = sub_1ABF30CD0();
  *(_BYTE *)(v1 + 32) = 1;
  return v1;
}

uint64_t sub_1ABEA0DAC()
{
  swift_beginAccess();
  sub_1ABF2FF68();
  sub_1ABF30C88();
  return swift_release();
}

uint64_t sub_1ABEA0E00()
{
  swift_beginAccess();
  return sub_1ABF2FF68();
}

uint64_t sub_1ABEA0E34(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_1ABEA0E78())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1ABEA0EB4()
{
  swift_beginAccess();
  return sub_1ABF2FF68();
}

uint64_t sub_1ABEA0EE8(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t (*sub_1ABEA0F2C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ABEA0F68()
{
  return 1;
}

uint64_t sub_1ABEA0F78(uint64_t a1)
{
  _BYTE __dst[3120];
  _BYTE __src[3120];

  MEMORY[0x1E0C80A78](a1);
  swift_beginAccess();
  sub_1ABF2FF68();
  sub_1ABF30C88();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FAC0, (uint64_t)&type metadata for AppConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABEA1028()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1ABEA104C()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABEA1078()
{
  swift_beginAccess();
  sub_1ABF2FF68();
  sub_1ABF30C88();
  return swift_release();
}

uint64_t sub_1ABEA10D0()
{
  swift_beginAccess();
  return sub_1ABF2FF68();
}

uint64_t sub_1ABEA1110()
{
  swift_beginAccess();
  return sub_1ABF2FF68();
}

uint64_t sub_1ABEA1154(uint64_t a1)
{
  _BYTE __dst[3120];
  _BYTE __src[3120];

  MEMORY[0x1E0C80A78](a1);
  swift_beginAccess();
  sub_1ABF2FF68();
  sub_1ABF30C88();
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FAC0, (uint64_t)&type metadata for AppConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABEA1210()
{
  return sub_1ABE9F670();
}

unint64_t sub_1ABEA1218()
{
  unint64_t result;

  result = qword_1ED34E870;
  if (!qword_1ED34E870)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F21C, &type metadata for AppConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34E870);
  }
  return result;
}

unint64_t sub_1ABEA125C()
{
  unint64_t result;

  result = qword_1ED34EF08;
  if (!qword_1ED34EF08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F244, &type metadata for AppConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34EF08);
  }
  return result;
}

uint64_t sub_1ABEA12A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1ABEA12A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t type metadata accessor for AppConfigurationManager()
{
  return objc_opt_self();
}

uint64_t sub_1ABEA12D0()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABEA12DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1ABEA12E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABEA12EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ABEA12F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for AppConfigurationStore()
{
  return objc_opt_self();
}

uint64_t sub_1ABEA131C()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for StaticAppConfigurationManager()
{
  return objc_opt_self();
}

uint64_t sub_1ABEA1348()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABEA1354()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1ABEA135C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1ABD37AA0;
  v4[1570] = v1;
  v4[1569] = a1;
  return swift_task_switch();
}

unint64_t sub_1ABEA13C0()
{
  unint64_t result;

  result = qword_1ED34E868;
  if (!qword_1ED34E868)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4F26C, &type metadata for AppConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34E868);
  }
  return result;
}

double HeadlineScores.globalCohort.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(double *)(a1 + 16) = result;
  return result;
}

double HeadlineScores.sourceChannelCohort.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(double *)(a1 + 16) = result;
  return result;
}

uint64_t HeadlineScores.stockEntityCohorts.getter()
{
  return sub_1ABF2FF5C();
}

StocksCore::HeadlineScores::Cohort __swiftcall HeadlineScores.Cohort.init(clicks:impressions:timestamp:)(Swift::Double clicks, Swift::Double impressions, Swift::Double timestamp)
{
  Swift::Double *v3;
  StocksCore::HeadlineScores::Cohort result;

  *v3 = clicks;
  v3[1] = impressions;
  v3[2] = timestamp;
  result.timestamp = timestamp;
  result.impressions = impressions;
  result.clicks = clicks;
  return result;
}

void __swiftcall HeadlineScores.init(globalCohort:sourceChannelCohort:stockEntityCohorts:)(StocksCore::HeadlineScores *__return_ptr retstr, StocksCore::HeadlineScores::Cohort globalCohort, StocksCore::HeadlineScores::Cohort sourceChannelCohort, Swift::OpaquePointer stockEntityCohorts)
{
  uint64_t v4;
  void *v5;
  Swift::Double v6;
  Swift::Double v7;

  v6 = *((double *)stockEntityCohorts._rawValue + 2);
  v7 = *(double *)(v4 + 16);
  *(_OWORD *)&retstr->globalCohort.clicks = *(_OWORD *)stockEntityCohorts._rawValue;
  retstr->globalCohort.timestamp = v6;
  *(_OWORD *)&retstr->sourceChannelCohort.clicks = *(_OWORD *)v4;
  retstr->sourceChannelCohort.timestamp = v7;
  retstr->stockEntityCohorts._rawValue = v5;
}

double HeadlineScores.Cohort.clicks.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double HeadlineScores.Cohort.impressions.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t HeadlineScores.Cohort.tag.getter()
{
  return 42;
}

uint64_t HeadlineScores.Cohort.updatedDate.getter()
{
  return sub_1ABF30700();
}

uint64_t sub_1ABEA148C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABEA26FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABEA14B0()
{
  sub_1ABCF8528();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEA14D8()
{
  sub_1ABCF8528();
  return sub_1ABF32398();
}

uint64_t HeadlineScores.Cohort.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1ABCF4DA8(0, &qword_1EEC44748, (uint64_t (*)(void))sub_1ABCF8528, (uint64_t)&type metadata for HeadlineScores.Cohort.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF8528();
  sub_1ABF32368();
  v9[15] = 0;
  sub_1ABF321AC();
  if (!v1)
  {
    v9[14] = 1;
    sub_1ABF321AC();
    v9[13] = 2;
    sub_1ABF321AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t HeadlineScores.Cohort.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  char v19;
  char v20;

  v17 = a2;
  sub_1ABCF4DA8(0, &qword_1ED346FC8, (uint64_t (*)(void))sub_1ABCF8528, (uint64_t)&type metadata for HeadlineScores.Cohort.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF8528();
  sub_1ABF3235C();
  if (!v2)
  {
    v9 = v17;
    v20 = 0;
    sub_1ABF320F8();
    v11 = v10;
    v19 = 1;
    sub_1ABF320F8();
    v13 = v12;
    v18 = 2;
    sub_1ABF320F8();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v11;
    v9[1] = v13;
    v9[2] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ABEA1818(_QWORD *a1)
{
  return HeadlineScores.Cohort.encode(to:)(a1);
}

uint64_t sub_1ABEA182C()
{
  return 42;
}

uint64_t sub_1ABEA1838()
{
  return sub_1ABF30700();
}

uint64_t HeadlineScores.StockEntityCohort.stockEntityID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

double HeadlineScores.StockEntityCohort.clicks.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double HeadlineScores.StockEntityCohort.impressions.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t HeadlineScores.StockEntityCohort.updatedDate.getter()
{
  return sub_1ABF30700();
}

uint64_t sub_1ABEA1884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABEA286C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABEA18A8()
{
  sub_1ABCF8580();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEA18D0()
{
  sub_1ABCF8580();
  return sub_1ABF32398();
}

uint64_t HeadlineScores.StockEntityCohort.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  sub_1ABCF4DA8(0, &qword_1EEC44750, (uint64_t (*)(void))sub_1ABCF8580, (uint64_t)&type metadata for HeadlineScores.StockEntityCohort.CodingKeys, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF8580();
  sub_1ABF32368();
  v13 = 0;
  v7 = v9;
  sub_1ABF32194();
  if (!v7)
  {
    v12 = 1;
    sub_1ABF321AC();
    v11 = 2;
    sub_1ABF321AC();
    v10 = 3;
    sub_1ABF321AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HeadlineScores.StockEntityCohort.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v21 = a2;
  sub_1ABCF4DA8(0, &qword_1ED346FC0, (uint64_t (*)(void))sub_1ABCF8580, (uint64_t)&type metadata for HeadlineScores.StockEntityCohort.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF8580();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v21;
  v25 = 0;
  v11 = sub_1ABF320E0();
  v13 = v12;
  v24 = 1;
  sub_1ABF2FF5C();
  sub_1ABF320F8();
  v15 = v14;
  v23 = 2;
  sub_1ABF320F8();
  v17 = v16;
  v22 = 3;
  sub_1ABF320F8();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  *v10 = v11;
  v10[1] = v13;
  v10[2] = v15;
  v10[3] = v17;
  v10[4] = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEA1CA8(_QWORD *a1)
{
  return HeadlineScores.StockEntityCohort.encode(to:)(a1);
}

uint64_t sub_1ABEA1CBC()
{
  return sub_1ABF30700();
}

uint64_t sub_1ABEA1CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABEA2A64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABEA1CE8()
{
  sub_1ABCF84D0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEA1D10()
{
  sub_1ABCF84D0();
  return sub_1ABF32398();
}

uint64_t HeadlineScores.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  sub_1ABCF4DA8(0, &qword_1EEC44758, (uint64_t (*)(void))sub_1ABCF84D0, (uint64_t)&type metadata for HeadlineScores.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v17 = *v1;
  v10 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  v11 = *((_QWORD *)v1 + 4);
  v12 = *((_QWORD *)v1 + 5);
  v16 = *((_QWORD *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF84D0();
  sub_1ABF32368();
  v18 = v17;
  v19 = v10;
  v20 = 0;
  sub_1ABEA1F24();
  sub_1ABF321D0();
  if (!v2)
  {
    v13 = v16;
    *(_QWORD *)&v18 = v9;
    *((_QWORD *)&v18 + 1) = v11;
    v19 = v12;
    v20 = 1;
    sub_1ABF321D0();
    *(_QWORD *)&v18 = v13;
    v20 = 2;
    sub_1ABCF8438();
    sub_1ABEA21D8(&qword_1EEC44768, (uint64_t (*)(void))sub_1ABEA1F68, MEMORY[0x1E0DEAF10]);
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1ABEA1F24()
{
  unint64_t result;

  result = qword_1EEC44760;
  if (!qword_1EEC44760)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for HeadlineScores.Cohort, &type metadata for HeadlineScores.Cohort);
    atomic_store(result, (unint64_t *)&qword_1EEC44760);
  }
  return result;
}

unint64_t sub_1ABEA1F68()
{
  unint64_t result;

  result = qword_1EEC44770;
  if (!qword_1EEC44770)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for HeadlineScores.StockEntityCohort, &type metadata for HeadlineScores.StockEntityCohort);
    atomic_store(result, (unint64_t *)&qword_1EEC44770);
  }
  return result;
}

uint64_t HeadlineScores.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  sub_1ABCF4DA8(0, &qword_1ED346FB8, (uint64_t (*)(void))sub_1ABCF84D0, (uint64_t)&type metadata for HeadlineScores.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v19 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF84D0();
  sub_1ABF3235C();
  if (!v2)
  {
    v9 = v6;
    v23 = 0;
    sub_1ABCF848C();
    v10 = v19;
    sub_1ABF32110();
    v11 = v20;
    v12 = v21;
    v13 = v22;
    v23 = 1;
    sub_1ABF32110();
    v14 = v20;
    v15 = v21;
    v16 = v22;
    sub_1ABCF8438();
    v23 = 2;
    sub_1ABEA21D8(&qword_1ED346F00, (uint64_t (*)(void))sub_1ABD446A8, MEMORY[0x1E0DEAF40]);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
    v18 = v20;
    *a2 = v11;
    a2[1] = v12;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v15;
    a2[5] = v16;
    a2[6] = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ABEA21D8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABCF8438();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1ABEA223C(_QWORD *a1)
{
  return HeadlineScores.encode(to:)(a1);
}

uint64_t destroy for HeadlineScores()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeadlineScores(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for HeadlineScores(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HeadlineScores(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineScores(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineScores(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScores()
{
  return &type metadata for HeadlineScores;
}

uint64_t getEnumTagSinglePayload for HeadlineScores.Cohort(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HeadlineScores.Cohort(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScores.Cohort()
{
  return &type metadata for HeadlineScores.Cohort;
}

uint64_t initializeWithCopy for HeadlineScores.StockEntityCohort(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for HeadlineScores.StockEntityCohort(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for HeadlineScores.StockEntityCohort(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for HeadlineScores.StockEntityCohort()
{
  return &type metadata for HeadlineScores.StockEntityCohort;
}

ValueMetadata *type metadata accessor for HeadlineScores.CodingKeys()
{
  return &type metadata for HeadlineScores.CodingKeys;
}

ValueMetadata *type metadata accessor for HeadlineScores.StockEntityCohort.CodingKeys()
{
  return &type metadata for HeadlineScores.StockEntityCohort.CodingKeys;
}

uint64_t _s10StocksCore14HeadlineScoresV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABEA25A4 + 4 * byte_1ABF48E13[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABEA25D8 + 4 * byte_1ABF48E0E[v4]))();
}

uint64_t sub_1ABEA25D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEA25E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABEA25E8);
  return result;
}

uint64_t sub_1ABEA25F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABEA25FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABEA2600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABEA2608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineScores.Cohort.CodingKeys()
{
  return &type metadata for HeadlineScores.Cohort.CodingKeys;
}

unint64_t sub_1ABEA2628()
{
  unint64_t result;

  result = qword_1EEC44778;
  if (!qword_1EEC44778)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49020, &type metadata for HeadlineScores.Cohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44778);
  }
  return result;
}

unint64_t sub_1ABEA2670()
{
  unint64_t result;

  result = qword_1EEC44780;
  if (!qword_1EEC44780)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF490D8, &type metadata for HeadlineScores.StockEntityCohort.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44780);
  }
  return result;
}

unint64_t sub_1ABEA26B8()
{
  unint64_t result;

  result = qword_1EEC44788;
  if (!qword_1EEC44788)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49190, &type metadata for HeadlineScores.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44788);
  }
  return result;
}

uint64_t sub_1ABEA26FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736B63696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1ABEA286C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E456B636F7473 && a2 == 0xED00004449797469;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736B63696C63 && a2 == 0xE600000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1ABEA2A64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F436C61626F6C67 && a2 == 0xEC00000074726F68;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001ABF61700 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001ABF61720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t destroy for HeadlineOrigin(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for HeadlineOrigin(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    v5 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v5;
    v6 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v6;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v7 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v7;
    v8 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v8;
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v9;
    v10 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v10;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  return a1;
}

uint64_t assignWithCopy for HeadlineOrigin(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(_OWORD *)(a2 + 16);
    v6 = *(_OWORD *)(a2 + 32);
    v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v7;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    v8 = *(_OWORD *)(a2 + 80);
    v9 = *(_OWORD *)(a2 + 96);
    v10 = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v9;
    *(_OWORD *)(a1 + 112) = v10;
    *(_OWORD *)(a1 + 80) = v8;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HeadlineOrigin(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineOrigin(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 136))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HeadlineOrigin(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 128) = 0;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 136) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

double sub_1ABEA31CC(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineOrigin()
{
  return &type metadata for HeadlineOrigin;
}

uint64_t sub_1ABEA3220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1ABEA3228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  v3 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1ABF30EE0();
  MEMORY[0x1E0C80A78](v4);
  sub_1ABCFE22C((unint64_t *)&unk_1ED350B00, 255, v5, MEMORY[0x1E0DB41A8]);
  sub_1ABD33D6C(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED350B88, 255, (uint64_t (*)(uint64_t))sub_1ABD33D6C, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  sub_1ABD3515C();
  swift_allocObject();
  *(_QWORD *)(v1 + 56) = sub_1ABF30C34();
  sub_1ABD07E04(a1, v1 + 16);
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCF5A54(0, &qword_1ED350340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF366C0;
  sub_1ABF30B20();
  sub_1ABCFE22C((unint64_t *)&unk_1ED350AE0, 255, v6, MEMORY[0x1E0DB33D8]);
  sub_1ABD0B230(0);
  sub_1ABCFE22C((unint64_t *)&qword_1ED350B60, 255, (uint64_t (*)(uint64_t))sub_1ABD0B230, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  sub_1ABD1EA60(0, &qword_1ED34CC48, &qword_1ED34DDC0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v7 = sub_1ABF31078();
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(_QWORD *)(v1 + 64) = v7;
  return v1;
}

uint64_t sub_1ABEA34B8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for SparklineManager.StoreDescriptor()
{
  return &type metadata for SparklineManager.StoreDescriptor;
}

uint64_t sub_1ABEA34FC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1ABEA3528(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1ABCF4DA8(0, &qword_1EEC447C0, (uint64_t (*)(void))sub_1ABEA3FEC, (uint64_t)&type metadata for TestTopStoriesService.TestData.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEA3FEC();
  sub_1ABF32368();
  v10[1] = a2;
  sub_1ABD12448(0, &qword_1EEC447A8);
  sub_1ABEA4074(&qword_1EEC447C8, (uint64_t (*)(void))sub_1ABEA40E8, MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABEA366C()
{
  return 0x49656C6369747261;
}

uint64_t sub_1ABEA3688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x49656C6369747261 && a2 == 0xE900000000000064)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABEA3728()
{
  sub_1ABEA4228();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEA3750()
{
  sub_1ABEA4228();
  return sub_1ABF32398();
}

uint64_t sub_1ABEA3778@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_1ABCF4DA8(0, &qword_1EEC447F0, (uint64_t (*)(void))sub_1ABEA4228, (uint64_t)&type metadata for TestTopStoriesService.TestData.Article.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEA4228();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1ABF320E0();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1ABEA38BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1ABCF4DA8(0, &qword_1EEC44800, (uint64_t (*)(void))sub_1ABEA4228, (uint64_t)&type metadata for TestTopStoriesService.TestData.Article.CodingKeys, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEA4228();
  sub_1ABF32368();
  sub_1ABF32194();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1ABEA39C0()
{
  return 0x73656C6369747261;
}

uint64_t sub_1ABEA39D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73656C6369747261 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABEA3A6C()
{
  sub_1ABEA3FEC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEA3A94()
{
  sub_1ABEA3FEC();
  return sub_1ABF32398();
}

_QWORD *sub_1ABEA3ABC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABEA3E6C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABEA3AE4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABEA3528(a1, *v1);
}

uint64_t sub_1ABEA3AFC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v16;
  _BYTE v17[136];
  _QWORD v18[20];

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v16 = a2;
    v18[19] = v2;
    v18[0] = MEMORY[0x1E0DEE9D8];
    sub_1ABF2FF5C();
    sub_1ABD16414(0, v4, 0);
    v5 = v18[0];
    v6 = (uint64_t *)(v3 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      v18[0] = v5;
      v10 = *(_QWORD *)(v5 + 16);
      v9 = *(_QWORD *)(v5 + 24);
      sub_1ABF2FF5C();
      if (v10 >= v9 >> 1)
      {
        sub_1ABD16414(v9 > 1, v10 + 1, 1);
        v5 = v18[0];
      }
      v6 += 2;
      *(_QWORD *)(v5 + 16) = v10 + 1;
      v11 = v5 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    a2 = v16;
  }
  v13 = a2[6];
  v12 = a2[7];
  __swift_project_boxed_opaque_existential_1(a2 + 3, v13);
  sub_1ABD64550((uint64_t)v18);
  sub_1ABD261A4((uint64_t)v18, (uint64_t)v17);
  v14 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(v12 + 8))(v5, v17, v13, v12);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1ABEA3C44()
{
  sub_1ABD34DA8();
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABEA3CA0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TestTopStoriesService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEA3CEC()
{
  void *v0;
  void *v1;
  uint64_t v2;

  sub_1ABF3127C();
  sub_1ABF2FF68();
  v0 = (void *)sub_1ABF31114();
  sub_1ABD33E04();
  sub_1ABF31174();
  swift_release();
  swift_release();

  v1 = (void *)sub_1ABF31114();
  sub_1ABD12448(0, (unint64_t *)&qword_1ED34DFB0);
  v2 = sub_1ABF31174();
  swift_release();

  return v2;
}

uint64_t sub_1ABEA3DC4()
{
  sub_1ABEA3E18();
  return sub_1ABF30CAC();
}

uint64_t sub_1ABEA3E00(uint64_t *a1)
{
  _QWORD *v1;

  return sub_1ABEA3AFC(a1, v1);
}

unint64_t sub_1ABEA3E18()
{
  unint64_t result;

  result = qword_1EEC44790;
  if (!qword_1EEC44790)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4942C, &type metadata for TestTopStoriesService.TestData);
    atomic_store(result, (unint64_t *)&qword_1EEC44790);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestTopStoriesService.TestData()
{
  return &type metadata for TestTopStoriesService.TestData;
}

_QWORD *sub_1ABEA3E6C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABCF4DA8(0, &qword_1EEC44798, (uint64_t (*)(void))sub_1ABEA3FEC, (uint64_t)&type metadata for TestTopStoriesService.TestData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEA3FEC();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABD12448(0, &qword_1EEC447A8);
    sub_1ABEA4074(&qword_1EEC447B0, (uint64_t (*)(void))sub_1ABEA4030, MEMORY[0x1E0DEAF40]);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABEA3FEC()
{
  unint64_t result;

  result = qword_1EEC447A0;
  if (!qword_1EEC447A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49570, &type metadata for TestTopStoriesService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC447A0);
  }
  return result;
}

unint64_t sub_1ABEA4030()
{
  unint64_t result;

  result = qword_1EEC447B8;
  if (!qword_1EEC447B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49548, &type metadata for TestTopStoriesService.TestData.Article);
    atomic_store(result, (unint64_t *)&qword_1EEC447B8);
  }
  return result;
}

uint64_t sub_1ABEA4074(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD12448(255, &qword_1EEC447A8);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABEA40E8()
{
  unint64_t result;

  result = qword_1EEC447D0;
  if (!qword_1EEC447D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49520, &type metadata for TestTopStoriesService.TestData.Article);
    atomic_store(result, (unint64_t *)&qword_1EEC447D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestTopStoriesService.TestData.CodingKeys()
{
  return &type metadata for TestTopStoriesService.TestData.CodingKeys;
}

ValueMetadata *type metadata accessor for TestTopStoriesService.TestData.Article()
{
  return &type metadata for TestTopStoriesService.TestData.Article;
}

unint64_t sub_1ABEA4154()
{
  unint64_t result;

  result = qword_1EEC447D8;
  if (!qword_1EEC447D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF494F8, &type metadata for TestTopStoriesService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC447D8);
  }
  return result;
}

unint64_t sub_1ABEA419C()
{
  unint64_t result;

  result = qword_1EEC447E0;
  if (!qword_1EEC447E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49468, &type metadata for TestTopStoriesService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC447E0);
  }
  return result;
}

unint64_t sub_1ABEA41E4()
{
  unint64_t result;

  result = qword_1EEC447E8;
  if (!qword_1EEC447E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49490, &type metadata for TestTopStoriesService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC447E8);
  }
  return result;
}

unint64_t sub_1ABEA4228()
{
  unint64_t result;

  result = qword_1EEC447F8;
  if (!qword_1EEC447F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49678, &type metadata for TestTopStoriesService.TestData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC447F8);
  }
  return result;
}

uint64_t _s10StocksCore21TestTopStoriesServiceC8TestDataV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABEA42AC + 4 * byte_1ABF493B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABEA42CC + 4 * byte_1ABF493B5[v4]))();
}

_BYTE *sub_1ABEA42AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABEA42CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEA42D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEA42DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEA42E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEA42EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TestTopStoriesService.TestData.Article.CodingKeys()
{
  return &type metadata for TestTopStoriesService.TestData.Article.CodingKeys;
}

unint64_t sub_1ABEA430C()
{
  unint64_t result;

  result = qword_1EEC44808;
  if (!qword_1EEC44808)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49650, &type metadata for TestTopStoriesService.TestData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44808);
  }
  return result;
}

unint64_t sub_1ABEA4354()
{
  unint64_t result;

  result = qword_1EEC44810;
  if (!qword_1EEC44810)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF495C0, &type metadata for TestTopStoriesService.TestData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44810);
  }
  return result;
}

unint64_t sub_1ABEA439C()
{
  unint64_t result;

  result = qword_1EEC44818;
  if (!qword_1EEC44818)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF495E8, &type metadata for TestTopStoriesService.TestData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44818);
  }
  return result;
}

uint64_t type metadata accessor for NewsStockMetadataService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEA4400(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v5 = v4;
  sub_1ABD09088();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a2;
  v13 = *((_QWORD *)a2 + 2);
  v14 = *((_QWORD *)a2 + 3);
  swift_getObjectType();
  v15 = sub_1ABF30B14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
  sub_1ABD0E930(a1);
  sub_1ABD0903C((uint64_t)v12);
  v16 = v5 + 3;
  v18 = v5[6];
  v17 = v5[7];
  __swift_project_boxed_opaque_existential_1(v16, v18);
  v24 = v23;
  v25 = v13;
  v26 = v14;
  (*(void (**)(uint64_t, __int128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8))(a1, &v24, a3, a4, v18, v17);
  v19 = (void *)sub_1ABF31114();
  sub_1ABF31108();
  swift_release();
  swift_release();

  v20 = (void *)sub_1ABF31114();
  sub_1ABEA4BE4(0, (unint64_t *)&qword_1ED34DE58, (uint64_t (*)(_QWORD, _QWORD, ValueMetadata *, _QWORD))MEMORY[0x1E0DEA048]);
  v21 = sub_1ABF31180();
  swift_release();

  return v21;
}

uint64_t sub_1ABEA45A4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char v39;

  v5 = a1[7];
  v36 = a1[6];
  v37 = v5;
  v38 = *((_QWORD *)a1 + 16);
  v6 = a1[3];
  v32 = a1[2];
  v33 = v6;
  v7 = a1[5];
  v34 = a1[4];
  v35 = v7;
  v8 = a1[1];
  v30 = *a1;
  v31 = v8;
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_33;
  sub_1ABF2FF5C();
  v10 = sub_1ABD00F9C(v31, *((uint64_t *)&v31 + 1));
  if ((v11 & 1) == 0)
  {
LABEL_32:
    swift_bridgeObjectRelease();
LABEL_33:
    v22 = a1[7];
    *(_OWORD *)(a3 + 96) = a1[6];
    *(_OWORD *)(a3 + 112) = v22;
    *(_QWORD *)(a3 + 128) = *((_QWORD *)a1 + 16);
    v23 = a1[3];
    *(_OWORD *)(a3 + 32) = a1[2];
    *(_OWORD *)(a3 + 48) = v23;
    v24 = a1[5];
    *(_OWORD *)(a3 + 64) = a1[4];
    *(_OWORD *)(a3 + 80) = v24;
    v25 = a1[1];
    *(_OWORD *)a3 = *a1;
    *(_OWORD *)(a3 + 16) = v25;
    return sub_1ABD97ECC((uint64_t)&v30);
  }
  v12 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 104 * v10);
  v13 = v12[4];
  v14 = v12[5];
  v29 = v12[6];
  v15 = v12[7];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v27 = v13;
  if (v14)
  {
    v16 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0)
      v16 = v13 & 0xFFFFFFFFFFFFLL;
    if (v16)
    {
      sub_1ABF2FF5C();
      v28 = v14;
    }
    else
    {
      v27 = 0;
      v28 = 0;
    }
  }
  else
  {
    v28 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = HIBYTE(v15) & 0xF;
    v18 = v28;
    if ((v15 & 0x2000000000000000) == 0)
      v17 = v29 & 0xFFFFFFFFFFFFLL;
    if (!v17)
    {
      swift_bridgeObjectRelease();
      v29 = 0;
      v15 = 0;
    }
    v19 = v27;
    if (!v28)
      goto LABEL_24;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = v27;
    v18 = v28;
    if (!v28)
      goto LABEL_24;
  }
  v20 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0)
    v20 = v19 & 0xFFFFFFFFFFFFLL;
  if (v20)
  {
    v39 = v34;
    if (!v15)
    {
      v15 = v35;
      v29 = *((_QWORD *)&v34 + 1);
      sub_1ABF2FF5C();
    }
    goto LABEL_34;
  }
LABEL_24:
  if (!v15)
    goto LABEL_32;
  v21 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0)
    v21 = v29 & 0xFFFFFFFFFFFFLL;
  if (!v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  if (!v18)
  {
    v28 = *((_QWORD *)&v32 + 1);
    v19 = v32;
    sub_1ABF2FF5C();
  }
  v39 = v34;
LABEL_34:
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return sub_1ABD15B80(v31, *((uint64_t *)&v31 + 1), v19, v28, v33, *((uint64_t *)&v33 + 1), &v39, v29, a3, v15, *((uint64_t *)&v35 + 1), v36, 0, 0, 0, 0);
}

uint64_t sub_1ABEA488C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  sub_1ABF2FF5C();
  v5 = sub_1ABEA4900(v4, v3);
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_1ABEA48E0(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABEA4400(a1, a2, a3, a4);
}

uint64_t sub_1ABEA4900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[8];
  uint64_t v43;
  __int128 v44[8];
  uint64_t v45;
  _OWORD v46[8];
  uint64_t v47;
  uint64_t v48;

  v48 = a2;
  sub_1ABEA4BE4(0, &qword_1ED34E1C0, (uint64_t (*)(_QWORD, _QWORD, ValueMetadata *, _QWORD))MEMORY[0x1E0DECD58]);
  result = sub_1ABF31FF0();
  v5 = (_QWORD *)result;
  v6 = 0;
  v41 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v38 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v40 = result + 64;
  if ((v9 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v6 << 6); ; i = __clz(__rbit64(v14)) + (v6 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(v41 + 56) + 136 * i;
    v46[0] = *(_OWORD *)v19;
    v20 = *(_OWORD *)(v19 + 64);
    v22 = *(_OWORD *)(v19 + 16);
    v21 = *(_OWORD *)(v19 + 32);
    v46[3] = *(_OWORD *)(v19 + 48);
    v46[4] = v20;
    v46[1] = v22;
    v46[2] = v21;
    v24 = *(_OWORD *)(v19 + 96);
    v23 = *(_OWORD *)(v19 + 112);
    v25 = *(_OWORD *)(v19 + 80);
    v47 = *(_QWORD *)(v19 + 128);
    v46[6] = v24;
    v46[7] = v23;
    v46[5] = v25;
    v26 = *(_OWORD *)(v19 + 112);
    v44[6] = *(_OWORD *)(v19 + 96);
    v44[7] = v26;
    v45 = *(_QWORD *)(v19 + 128);
    v27 = *(_OWORD *)(v19 + 48);
    v44[2] = *(_OWORD *)(v19 + 32);
    v44[3] = v27;
    v28 = *(_OWORD *)(v19 + 80);
    v44[4] = *(_OWORD *)(v19 + 64);
    v44[5] = v28;
    v29 = *(_OWORD *)(v19 + 16);
    v44[0] = *(_OWORD *)v19;
    v44[1] = v29;
    sub_1ABF2FF5C();
    sub_1ABD97ECC((uint64_t)v46);
    sub_1ABEA45A4(v44, v48, (uint64_t)v42);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1ABD97F60((uint64_t)v46);
      return (uint64_t)v5;
    }
    result = sub_1ABD97F60((uint64_t)v46);
    *(_QWORD *)(v40 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v30 = (_QWORD *)(v5[6] + 16 * i);
    *v30 = v17;
    v30[1] = v18;
    v31 = v5[7] + 136 * i;
    v32 = v42[3];
    *(_OWORD *)(v31 + 32) = v42[2];
    *(_OWORD *)(v31 + 48) = v32;
    v33 = v42[1];
    *(_OWORD *)v31 = v42[0];
    *(_OWORD *)(v31 + 16) = v33;
    *(_QWORD *)(v31 + 128) = v43;
    v34 = v42[7];
    *(_OWORD *)(v31 + 96) = v42[6];
    *(_OWORD *)(v31 + 112) = v34;
    v35 = v42[5];
    *(_OWORD *)(v31 + 64) = v42[4];
    *(_OWORD *)(v31 + 80) = v35;
    v36 = v5[2];
    v13 = __OFADD__(v36, 1);
    v37 = v36 + 1;
    if (v13)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v5[2] = v37;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = __OFADD__(v6++, 1);
    if (v13)
      goto LABEL_27;
    if (v6 >= v39)
      return (uint64_t)v5;
    v14 = *(_QWORD *)(v38 + 8 * v6);
    if (!v14)
      break;
LABEL_15:
    v10 = (v14 - 1) & v14;
  }
  v15 = v6 + 1;
  if (v6 + 1 >= v39)
    return (uint64_t)v5;
  v14 = *(_QWORD *)(v38 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v6 + 2;
  if (v6 + 2 >= v39)
    return (uint64_t)v5;
  v14 = *(_QWORD *)(v38 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v6 + 3;
  if (v6 + 3 >= v39)
    return (uint64_t)v5;
  v14 = *(_QWORD *)(v38 + 8 * v15);
  if (v14)
  {
LABEL_14:
    v6 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    v6 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v6 >= v39)
      return (uint64_t)v5;
    v14 = *(_QWORD *)(v38 + 8 * v6);
    ++v15;
    if (v14)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1ABEA4BE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD, ValueMetadata *, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEA968], &type metadata for Stock, MEMORY[0x1E0DEA978]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

id sub_1ABEA4CDC(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  objc_class *v5;
  char *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  __int128 v13;
  __int128 v14;
  objc_super v15;

  v4 = *((_QWORD *)a1 + 4);
  v5 = (objc_class *)type metadata accessor for NewsUserProfileShim();
  v13 = a1[1];
  v14 = *a1;
  v6 = (char *)objc_allocWithZone(v5);
  v7 = &v6[OBJC_IVAR____TtC10StocksCoreP33_6F15235305946077A82EB95D8E9A724719NewsUserProfileShim_userProfile];
  *(_OWORD *)v7 = v14;
  *((_OWORD *)v7 + 1) = v13;
  *((_QWORD *)v7 + 4) = v4;
  v15.receiver = v6;
  v15.super_class = v5;
  v8 = objc_msgSendSuper2(&v15, sel_init);
  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v10 = v8;
  v11 = objc_msgSend(v9, sel_initWithPurchaseProvider_bundleSubscriptionProvider_configurationManager_, v10, v10, a2);

  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_1ABEA4DC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABF31060();
  sub_1ABD34BE4();
  swift_allocObject();
  result = sub_1ABF313E4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEA4E38(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v4;

  result = sub_1ABF31060();
  if (v4)
    __asm { BR              X10 }
  return result;
}

ValueMetadata *type metadata accessor for SDSMetadataCache.MetadataStoreDescriptor()
{
  return &type metadata for SDSMetadataCache.MetadataStoreDescriptor;
}

uint64_t sub_1ABEA4F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ABEA4F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1ABEA4F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1ABEA4FA4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1ABD16414(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(sub_1ABF305D4() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_1ABF3052C();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1ABD16414(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1ABEA50A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  sub_1ABCF5A54(0, &qword_1ED350D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1ABF366C0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 8))(v9, a2, a3);
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1ABF31114();
  type metadata accessor for SDSAuthToken();
  v11 = sub_1ABF31174();
  swift_release();

  return v11;
}

uint64_t sub_1ABEA51B0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  sub_1ABEA75A4(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SDSAuthToken();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v14 - v10;
  sub_1ABE0E83C(*a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1ABCFC3BC((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1ABEA75A4);
    sub_1ABEA75C0();
    swift_allocError();
    sub_1ABCF5A54(0, &qword_1ED34FAB8, (uint64_t (*)(uint64_t))type metadata accessor for SDSAuthToken, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311D4();
  }
  else
  {
    sub_1ABEA7560((uint64_t)v4, (uint64_t)v11);
    sub_1ABE3C30C((uint64_t)v11, (uint64_t)v8);
    sub_1ABCF5A54(0, &qword_1ED34FAB8, (uint64_t (*)(uint64_t))type metadata accessor for SDSAuthToken, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v12 = sub_1ABF311E0();
    sub_1ABCFC3BC((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SDSAuthToken);
  }
  return v12;
}

uint64_t sub_1ABEA5380()
{
  return 0x687475615F736473;
}

uint64_t sub_1ABEA53A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t v9;

  v5 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF30EE0();
  MEMORY[0x1E0C80A78](v6);
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350B00, v7, MEMORY[0x1E0DB41A8]);
  sub_1ABD33D6C(0);
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350B88, (uint64_t (*)(uint64_t))sub_1ABD33D6C, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  sub_1ABD35358();
  swift_allocObject();
  *(_QWORD *)(v3 + 96) = sub_1ABF30C34();
  sub_1ABD07E04(a1, v3 + 16);
  sub_1ABD07E04(a3, v3 + 56);
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCF5A54(0, &qword_1ED350340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF366C0;
  sub_1ABF30B20();
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350AE0, v8, MEMORY[0x1E0DB33D8]);
  sub_1ABD0B230(0);
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350B60, (uint64_t (*)(uint64_t))sub_1ABD0B230, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  sub_1ABD34FF4(0, &qword_1ED34EA68, &qword_1ED34FAF8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v9 = sub_1ABF31078();
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(_QWORD *)(v3 + 104) = v9;
  return v3;
}

uint64_t sub_1ABEA5644@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1ABF31060();
  sub_1ABD0611C(0, &qword_1ED34FAF8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2AB0]);
  swift_allocObject();
  result = sub_1ABF313E4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEA56E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19[2];

  v17 = a1;
  v4 = sub_1ABF30C28();
  v18 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF30B14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF309DC();
  swift_retain_n();
  sub_1ABF309C4();
  if (qword_1ED350278[0] != -1)
    swift_once();
  sub_1ABF309B8();
  swift_release();
  v15 = v8;
  v16 = v7;
  if (LOBYTE(v19[0]) == 1)
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB32A0], v7);
  else
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_1ABD34894(0, &qword_1ED34FAB0, MEMORY[0x1E0DB4B98]);
  sub_1ABD07E04(v2 + 16, (uint64_t)v19);
  v11 = swift_allocObject();
  sub_1ABD065C8(v19, v11 + 16);
  *(_QWORD *)&v19[0] = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350AF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868], MEMORY[0x1E0DB3870]);
  sub_1ABD20158(0);
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350B70, (uint64_t (*)(uint64_t))sub_1ABD20158, MEMORY[0x1E0DEAF38]);
  swift_retain_n();
  sub_1ABF31E04();
  v12 = sub_1ABF3112C();
  swift_release();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v16);
  return v12;
}

uint64_t sub_1ABEA599C()
{
  void *v0;
  uint64_t v1;

  sub_1ABEA6CF4();
  sub_1ABF3127C();
  sub_1ABF2FF68();
  v0 = (void *)sub_1ABF31114();
  sub_1ABD34894(0, (unint64_t *)&qword_1ED34FB38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
  v1 = sub_1ABF31180();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1ABEA5A48(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, _QWORD *);
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[8];

  v3 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2A80];
  sub_1ABD34FF4(0, &qword_1ED34FAE8, &qword_1ED34FAE0, MEMORY[0x1E0DB2A80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v12[-v5];
  sub_1ABF31060();
  sub_1ABF313F0();
  swift_release();
  sub_1ABD0611C(0, &qword_1ED34FAE0, v3);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1ABEA4FA4(a2);
    v11 = sub_1ABF313B4();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v6, v8);
    return v11;
  }
  return result;
}

uint64_t sub_1ABEA5B84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SDSAuthToken();
  sub_1ABF305D4();
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  result = sub_1ABF31648();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEA5C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v15;

  v6 = sub_1ABF30760();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF305BC();
  v11 = type metadata accessor for SDSAuthToken();
  sub_1ABF30754();
  sub_1ABCFE1EC((unint64_t *)&qword_1ED34CCB0, v7, MEMORY[0x1E0CB08B0]);
  v12 = sub_1ABF316F0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  if ((v12 & 1) != 0)
  {
    sub_1ABE3C30C(a4, a2);
    v13 = 0;
  }
  else
  {
    v13 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, v13, 1, v11);
}

uint64_t sub_1ABEA5D6C()
{
  void *v0;
  uint64_t v1;

  sub_1ABEA6CF4();
  sub_1ABF3127C();
  v0 = (void *)sub_1ABF31114();
  sub_1ABD34894(0, (unint64_t *)&qword_1ED34FB38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
  v1 = sub_1ABF31180();
  swift_release();

  return v1;
}

uint64_t sub_1ABEA5E04()
{
  uint64_t (*v0)(uint64_t, _QWORD *);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;

  v0 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2A80];
  sub_1ABD34FF4(0, &qword_1ED34FAE8, &qword_1ED34FAE0, MEMORY[0x1E0DB2A80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - v2;
  sub_1ABF31060();
  sub_1ABF313F0();
  swift_release();
  sub_1ABD0611C(0, &qword_1ED34FAE0, v0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1ABF305D4();
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    type metadata accessor for SDSAuthToken();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, v8, MEMORY[0x1E0CB0018]);
    sub_1ABF3163C();
    v9 = sub_1ABF313C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    return v9;
  }
  return result;
}

uint64_t sub_1ABEA5FA8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  *a1 = sub_1ABF3052C();
  a1[1] = v7;
  return sub_1ABE3C30C(a4, a2);
}

uint64_t sub_1ABEA5FFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SDSAuthToken();
  sub_1ABF305D4();
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  result = sub_1ABF31648();
  *a1 = result;
  return result;
}

uint64_t sub_1ABEA60AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  sub_1ABF305BC();
  sub_1ABE3C30C(a4, a2);
  v6 = type metadata accessor for SDSAuthToken();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 0, 1, v6);
}

uint64_t sub_1ABEA611C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for SDSAuthTokenManager.StoreDescriptor()
{
  return &type metadata for SDSAuthTokenManager.StoreDescriptor;
}

uint64_t sub_1ABEA6168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  sub_1ABD19560();
  swift_bridgeObjectRetain_n();
  v5 = sub_1ABF31D44();
  v6 = sub_1ABF31BF4();
  if (os_log_type_enabled(v5, v6))
  {
    v21 = a2;
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v22 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = sub_1ABF305D4();
    v10 = sub_1ABF2FF5C();
    v11 = MEMORY[0x1AF437C34](v10, v9);
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_1ABD1FE2C(v11, v13, &v22);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v5, v6, "SDSAuthTokenManager will refresh auth tokens for URLs: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    v14 = v7;
    a2 = v21;
    MEMORY[0x1AF438FFC](v14, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  MEMORY[0x1E0C80A78](v15);
  sub_1ABD34894(0, (unint64_t *)&qword_1ED34FB38, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
  sub_1ABF3127C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  sub_1ABF2FF68();
  v17 = (void *)sub_1ABF31114();
  sub_1ABCF5A54(0, &qword_1ED34E5A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF31180();
  swift_release();
  swift_release();

  sub_1ABF2FF68();
  v18 = (void *)sub_1ABF31114();
  v19 = sub_1ABF31174();
  swift_release();
  swift_release();

  return v19;
}

uint64_t sub_1ABEA6430(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_1ABF30B14();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v4 + 104))(v7, *MEMORY[0x1E0DB32A8], v3, v5);
  v8 = sub_1ABEA56E0(a2, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v8;
}

uint64_t sub_1ABEA64E8@<X0>(uint64_t (*a1)(char *)@<X1>, size_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  uint64_t result;

  sub_1ABF2FF68();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABEA73A0(v4, a1);
  swift_bridgeObjectRelease();
  swift_release();
  v6 = sub_1ABD914FC(v5);
  result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_1ABEA6570(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_1ABF30B14();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E0DB32A0], v2, v4);
  v8 = sub_1ABEA56E0(v7, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

uint64_t sub_1ABEA6628(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t, double);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_1ABF305D4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v24 - v8;
  v27 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v27((char *)v24 - v8, a1, v2, v7);
  sub_1ABD19560();
  v10 = sub_1ABF31D44();
  v11 = sub_1ABF31BF4();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v25 = a1;
    v14 = v13;
    v30 = v13;
    v26 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    *(_DWORD *)v12 = 136315138;
    v24[1] = v12 + 4;
    sub_1ABCFE1EC(&qword_1ED34C2C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v15 = sub_1ABF321F4();
    v29 = sub_1ABD1FE2C(v15, v16, &v30);
    v5 = v26;
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
    _os_log_impl(&dword_1ABCEF000, v10, v11, "SDSAuthTokenManager will discard auth token for URL: %s", v12, 0xCu);
    swift_arrayDestroy();
    v17 = v14;
    a1 = v25;
    MEMORY[0x1AF438FFC](v17, -1, -1);
    MEMORY[0x1AF438FFC](v12, -1, -1);

  }
  else
  {

    v18 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  MEMORY[0x1E0C80A78](v18);
  v24[-2] = v28;
  v24[-1] = a1;
  sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FCB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  ((void (*)(char *, uint64_t, uint64_t))v27)(v5, a1, v2);
  v19 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v20 + v19, v5, v2);
  v21 = (void *)sub_1ABF31114();
  v22 = sub_1ABF31180();
  swift_release();
  swift_release();

  return v22;
}

uint64_t sub_1ABEA691C()
{
  uint64_t (*v0)(uint64_t, _QWORD *);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2A80];
  sub_1ABD34FF4(0, &qword_1ED34FAE8, &qword_1ED34FAE0, MEMORY[0x1E0DB2A80], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - v2;
  sub_1ABF31060();
  sub_1ABF313F0();
  swift_release();
  sub_1ABD0611C(0, &qword_1ED34FAE0, v0);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FFD0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v8 + 32) = sub_1ABF3052C();
    *(_QWORD *)(v8 + 40) = v9;
    v10 = sub_1ABF313CC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    return v10;
  }
  return result;
}

uint64_t sub_1ABEA6A80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_1ABF30B14();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x1E0DB32A8], v2, v4);
  v7 = sub_1ABEA56E0(a1, (uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7;
}

uint64_t sub_1ABEA6B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABEA6168(a1, a2, a3);
}

uint64_t sub_1ABEA6B4C(uint64_t a1)
{
  return sub_1ABEA6628(a1);
}

uint64_t sub_1ABEA6B6C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABEA5644(a1);
}

uint64_t sub_1ABEA6B74()
{
  return sub_1ABEA691C();
}

uint64_t sub_1ABEA6B8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1ABF305D4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1ABEA6BEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1ABF305D4();
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

uint64_t sub_1ABEA6C3C()
{
  uint64_t v0;

  return sub_1ABEA6430(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1ABEA6C54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEA6C78@<X0>(size_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1ABEA64E8(*(uint64_t (**)(char *))(v1 + 16), a1);
}

uint64_t sub_1ABEA6C90(uint64_t *a1)
{
  return sub_1ABEA6570(a1);
}

uint64_t sub_1ABEA6CA8()
{
  return sub_1ABEA599C();
}

uint64_t sub_1ABEA6CB0()
{
  return sub_1ABEA5D6C();
}

uint64_t sub_1ABEA6CB8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1ABEA6CDC()
{
  return sub_1ABEA5E04();
}

void sub_1ABEA6CF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34FB40)
  {
    type metadata accessor for SDSAuthToken();
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34FB40);
  }
}

uint64_t sub_1ABEA6D58()
{
  uint64_t v0;

  return sub_1ABEA5A48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1ABEA6D70@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABEA5B84(a1);
}

uint64_t sub_1ABEA6D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABEA5C38(a1, a2, a3, a4);
}

uint64_t sub_1ABEA6DA0(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v8 = type metadata accessor for SDSAuthToken();
  v50 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v54 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v49 = (uint64_t)&v43 - v11;
  v12 = sub_1ABF305D4();
  v48 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v53 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v47 = (char *)&v43 - v15;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    sub_1ABF2FF68();
    return (uint64_t)a4;
  }
  sub_1ABD34894(0, (unint64_t *)&qword_1ED34E5F0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
  result = sub_1ABF32014();
  v17 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = result + 64;
  v46 = a4;
  v21 = v47;
  while (1)
  {
    if (v18)
    {
      v51 = (v18 - 1) & v18;
      v52 = v19;
      v22 = __clz(__rbit64(v18)) | (v19 << 6);
    }
    else
    {
      v23 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_40;
      if (v23 >= v45)
        return v17;
      v24 = v44[v23];
      v25 = v19 + 1;
      if (!v24)
      {
        v25 = v19 + 2;
        if (v19 + 2 >= v45)
          return v17;
        v24 = v44[v25];
        if (!v24)
        {
          v25 = v19 + 3;
          if (v19 + 3 >= v45)
            return v17;
          v24 = v44[v25];
          if (!v24)
          {
            v26 = v19 + 4;
            if (v19 + 4 >= v45)
              return v17;
            v24 = v44[v26];
            if (!v24)
            {
              while (1)
              {
                v25 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v25 >= v45)
                  return v17;
                v24 = v44[v25];
                ++v26;
                if (v24)
                  goto LABEL_24;
              }
            }
            v25 = v19 + 4;
          }
        }
      }
LABEL_24:
      v51 = (v24 - 1) & v24;
      v52 = v25;
      v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    v27 = v48;
    v28 = *(_QWORD *)(v48 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v21, a4[6] + v28 * v22, v12);
    v29 = a4[7];
    v30 = *(_QWORD *)(v50 + 72);
    v31 = v29 + v30 * v22;
    v32 = v49;
    sub_1ABE3C30C(v31, v49);
    v33 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v33(v53, v21, v12);
    sub_1ABEA7560(v32, v54);
    sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    result = sub_1ABF316C0();
    v34 = -1 << *(_BYTE *)(v17 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v20 + 8 * (v35 >> 6))) != 0)
    {
      v37 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v20 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v40 = v36 == v39;
        if (v36 == v39)
          v36 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v20 + 8 * v36);
      }
      while (v41 == -1);
      v37 = __clz(__rbit64(~v41)) + (v36 << 6);
    }
    *(_QWORD *)(v20 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
    v33((char *)(*(_QWORD *)(v17 + 48) + v37 * v28), v53, v12);
    result = sub_1ABEA7560(v54, *(_QWORD *)(v17 + 56) + v37 * v30);
    ++*(_QWORD *)(v17 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v46;
    v18 = v51;
    v19 = v52;
    if (!a3)
      return v17;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1ABEA7180(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;

  v23 = a2;
  v24 = a1;
  v6 = type metadata accessor for SDSAuthToken();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = *(_QWORD *)(a3 + 64);
  v25 = 0;
  v26 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v27 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_5;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v27)
      goto LABEL_24;
    v19 = *(_QWORD *)(v26 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v27)
        goto LABEL_24;
      v19 = *(_QWORD *)(v26 + 8 * v10);
      if (!v19)
      {
        v10 = v18 + 2;
        if (v18 + 2 >= v27)
          goto LABEL_24;
        v19 = *(_QWORD *)(v26 + 8 * v10);
        if (!v19)
          break;
      }
    }
LABEL_20:
    v14 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_5:
    sub_1ABE3C30C(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v7 + 72) * v16, (uint64_t)v9);
    v17 = a4(v9);
    sub_1ABCFC3BC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SDSAuthToken);
    if ((v17 & 1) != 0)
    {
      *(unint64_t *)((char *)v24 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1ABEA6DA0(v24, v23, v25, (_QWORD *)a3);
        return;
      }
    }
  }
  v20 = v18 + 3;
  if (v20 >= v27)
    goto LABEL_24;
  v19 = *(_QWORD *)(v26 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v27)
      goto LABEL_24;
    v19 = *(_QWORD *)(v26 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1ABEA73A0(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v16 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_1ABF2FF68();
    sub_1ABEA7180((_QWORD *)((char *)v16 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    v12 = v11;
    swift_release();
    if (v3)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v9);
    sub_1ABF2FF68();
    sub_1ABEA7180((unint64_t *)v13, v8, a1, a2);
    v12 = v14;
    swift_release();
    MEMORY[0x1AF438FFC](v13, -1, -1);
    swift_release_n();
  }
  return v12;
}

uint64_t sub_1ABEA7560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SDSAuthToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABEA75A4(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED34ECA8, (uint64_t (*)(uint64_t))type metadata accessor for SDSAuthToken, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1ABEA75C0()
{
  unint64_t result;

  result = qword_1EEC44828;
  if (!qword_1EEC44828)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49944, &type metadata for SDSAuthTokenManagerError);
    atomic_store(result, (unint64_t *)&qword_1EEC44828);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SDSAuthTokenManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABEA7644 + 4 * byte_1ABF49800[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABEA7664 + 4 * byte_1ABF49805[v4]))();
}

_BYTE *sub_1ABEA7644(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABEA7664(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEA766C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEA7674(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEA767C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEA7684(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDSAuthTokenManagerError()
{
  return &type metadata for SDSAuthTokenManagerError;
}

unint64_t sub_1ABEA76A4()
{
  unint64_t result;

  result = qword_1EEC44830;
  if (!qword_1EEC44830)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4991C, &type metadata for SDSAuthTokenManagerError);
    atomic_store(result, (unint64_t *)&qword_1EEC44830);
  }
  return result;
}

uint64_t type metadata accessor for SDSQuoteOperation()
{
  uint64_t result;

  result = qword_1ED34C948;
  if (!qword_1ED34C948)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABEA7724()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF30B38();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_1ABEA77D8(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = v2;
  v13 = *(_QWORD *)&v2[qword_1ED34C940];
  swift_bridgeObjectRetain_n();
  sub_1ABF231D4(&v13);
  swift_bridgeObjectRelease();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD747CC((unint64_t *)&qword_1ED34DFE8, MEMORY[0x1E0DEAF50]);
  v6 = sub_1ABF31B64();
  swift_release();
  v7 = v3;
  sub_1ABEAA5A4(v6);
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1ABF31114();
  sub_1ABEAA6DC();
  sub_1ABF3109C();
  swift_bridgeObjectRelease();

  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakDestroy();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  sub_1ABF2FF68();
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  sub_1ABF2FF68();
  v12 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABEA79E0(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = MEMORY[0x1E0DEE9E0];
  v7 = MEMORY[0x1E0DEE9E0];
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v4)
  {
    sub_1ABF2FF5C();
    type metadata accessor for Quote();
    v5 = 0;
    do
    {
      ++v5;
      sub_1ABF2FF5C();
      sub_1ABF3103C();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

void sub_1ABEA7AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a5 + qword_1ED34D028), *(_QWORD *)(a5 + qword_1ED34D028 + 24));
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF366E0;
  *(_QWORD *)(inited + 32) = 0x6C6F626D7973;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v32 = a6;
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD747CC((unint64_t *)&qword_1ED34FCC0, MEMORY[0x1E0DEAF20]);
  sub_1ABF2FF68();
  *(_QWORD *)(inited + 48) = sub_1ABF316E4();
  *(_QWORD *)(inited + 56) = v14;
  *(_QWORD *)(inited + 64) = 0x74655361746164;
  *(_QWORD *)(inited + 72) = 0xE700000000000000;
  *(_QWORD *)(inited + 80) = 0x65746F7571;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  sub_1ABD031C0(inited);
  v15 = (void *)sub_1ABE77C3C(2);
  swift_bridgeObjectRelease();
  v16 = sub_1ABF30C04();
  v18 = v17;
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v19;
  v21[3] = v16;
  v21[4] = v18;
  v21[5] = a3;
  v21[6] = a4;
  v21[7] = v20;
  v21[8] = sub_1ABD17048;
  v21[9] = v12;
  v21[10] = a6;
  v22 = v15;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF30BF8();

  if (qword_1ED34FAD8 != -1)
    swift_once();
  v23 = sub_1ABF3133C();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED34E920);
  v24 = v22;
  sub_1ABF2FF5C();
  v25 = sub_1ABF31324();
  v26 = sub_1ABF31BF4();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v32 = v28;
    *(_DWORD *)v27 = 136315394;
    sub_1ABF2FF5C();
    sub_1ABD1FE2C(v16, v18, &v32);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    v29 = sub_1ABF30C04();
    v31 = sub_1ABD1FE2C(v29, v30, &v32);
    sub_1ABF31D80();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v25, v26, "SDSQuoteOperation %s will start base operation %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v28, -1, -1);
    MEMORY[0x1AF438FFC](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  objc_msgSend(v24, sel_start, v31, v32);

}

void sub_1ABEA7F04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t), uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  int EnumCaseMultiPayload;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t (*v54)(uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  char v69;
  unint64_t v70;
  uint64_t v71;
  _BOOL8 v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  char v76;
  void *v77;
  uint64_t *v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _BOOL8 v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  id v103;
  _QWORD v104[2];
  uint64_t v105;
  void (*v106)(uint64_t);
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[98];
  _QWORD *v122;
  uint64_t v123[97];

  v106 = a8;
  v107 = a3;
  v115 = a6;
  v109 = a4;
  v117 = sub_1ABF31594();
  v120 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v116 = (char *)v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1ABF315D0();
  v118 = *(_QWORD *)(v14 - 8);
  v119 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34E4B8, (uint64_t (*)(void))sub_1ABD66A00, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
  MEMORY[0x1E0C80A78](v17);
  v108 = (uint64_t)v104 - v18;
  sub_1ABEAA804();
  MEMORY[0x1E0C80A78](v19);
  v21 = (void **)((char *)v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v112 = (char *)MEMORY[0x1AF4390D4](a2 + 16);
  if (!v112)
  {
    if (qword_1ED34FAD8 != -1)
LABEL_50:
      swift_once();
    v36 = sub_1ABF3133C();
    __swift_project_value_buffer(v36, (uint64_t)qword_1ED34E920);
    v37 = v109;
    swift_bridgeObjectRetain_n();
    v38 = sub_1ABF31324();
    v39 = sub_1ABF31BF4();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v123[0] = v41;
      *(_DWORD *)v40 = 136315138;
      sub_1ABF2FF5C();
      v121[0] = sub_1ABD1FE2C(v107, v37, v123);
      sub_1ABF31D80();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ABCEF000, v38, v39, "SDSQuoteOperation %s was freed before base operation completion", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v41, -1, -1);
      MEMORY[0x1AF438FFC](v40, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v57 = sub_1ABF30B44();
    sub_1ABCFE1EC((unint64_t *)&qword_1EEC43290, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], MEMORY[0x1E0DB35A8]);
    v23 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v58, *MEMORY[0x1E0DB3590], v57);
    ((void (*)(void *))a5)(v23);
    goto LABEL_48;
  }
  sub_1ABCFC790(a1, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1ABEAA804);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v105 = a7 + 16;
  if (EnumCaseMultiPayload == 1)
  {
    v23 = *v21;
    if (qword_1ED34FAD8 != -1)
      swift_once();
    v24 = sub_1ABF3133C();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED34E920);
    v25 = v109;
    sub_1ABF2FF5C();
    v26 = v23;
    sub_1ABF2FF5C();
    v27 = v23;
    v28 = sub_1ABF31324();
    v29 = sub_1ABF31BF4();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = (_QWORD *)swift_slowAlloc();
      v120 = swift_slowAlloc();
      v123[0] = v120;
      *(_DWORD *)v30 = 136315394;
      sub_1ABF2FF5C();
      v121[0] = sub_1ABD1FE2C(v107, v25, v123);
      v32 = a5;
      sub_1ABF31D80();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2112;
      v33 = v23;
      v34 = _swift_stdlib_bridgeErrorToNSError();
      v121[0] = v34;
      sub_1ABF31D80();
      *v31 = v34;
      a5 = v32;

      _os_log_impl(&dword_1ABCEF000, v28, v29, "SDSQuoteOperation %s failed with error: %@", (uint8_t *)v30, 0x16u);
      sub_1ABEAAD0C();
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v31, -1, -1);
      v35 = v120;
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v35, -1, -1);
      MEMORY[0x1AF438FFC](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    ((void (*)(void *))a5)(v23);
    v59 = v105;
    swift_beginAccess();
    v60 = MEMORY[0x1AF4390D4](v59);
    if (v60)
    {
      v61 = (_QWORD *)v60;
      v62 = v112;
      sub_1ABEE7408(v61, (uint64_t)v62);

    }
    else
    {

    }
LABEL_48:

    return;
  }
  sub_1ABD748D0((uint64_t)v21, v108);
  sub_1ABD04578(0, &qword_1ED34E4C0, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB44E8]);
  v43 = v42;
  sub_1ABF30F64();
  swift_bridgeObjectRelease();
  v115 = v123[2];
  if (v123[2])
  {
    v113 = v123[5];
    v114 = v123[3];
    v44 = *(_QWORD *)&v112[qword_1ED34D040];
    v45 = *(_QWORD *)(v44 + 16);
    if (v45)
    {
      v104[0] = *(_QWORD *)&v112[qword_1ED34D040];
      v104[1] = v43;
      v110 = v123[4];
      v111 = v123[1];
      v46 = (_QWORD *)(v44 + 32);
      sub_1ABF2FF5C();
      do
      {
        v47 = __swift_project_boxed_opaque_existential_1(v46, v46[3]);
        v48 = *v47;
        if (*(_BYTE *)(*v47 + 24) == 2)
        {
          v49 = (_QWORD *)swift_allocObject();
          v50 = v111;
          v49[2] = v48;
          v49[3] = v50;
          v51 = v114;
          v49[4] = v115;
          v49[5] = v51;
          v52 = v113;
          v49[6] = v110;
          v49[7] = v52;
          v123[4] = (uint64_t)sub_1ABE77CF8;
          v123[5] = (uint64_t)v49;
          v123[0] = MEMORY[0x1E0C809B0];
          v123[1] = 1107296256;
          v123[2] = (uint64_t)sub_1ABD127EC;
          v123[3] = (uint64_t)&block_descriptor_31;
          v53 = _Block_copy(v123);
          sub_1ABF2FF68();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF315AC();
          v121[0] = MEMORY[0x1E0DEE9D8];
          v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
          sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
          sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1ABD33CAC();
          v55 = v116;
          v56 = v117;
          sub_1ABF31E04();
          MEMORY[0x1AF437E50](0, v16, v55, v53);
          _Block_release(v53);
          (*(void (**)(char *, uint64_t))(v120 + 8))(v55, v56);
          (*(void (**)(char *, uint64_t))(v118 + 8))(v16, v119);
          swift_release();
        }
        v46 += 5;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1ABF30F64();
  v63 = v123[0];
  sub_1ABD365D4(v123[1], v123[2]);
  v64 = *(_QWORD *)(v63 + 16);
  v65 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (v64)
  {
    v120 = v63;
    sub_1ABF2FF5C();
    memcpy(v123, (const void *)(v63 + 32), sizeof(v123));
    v66 = v123[90];
    v67 = v123[91];
    sub_1ABD74914((uint64_t)v123);
    sub_1ABF2FF5C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v122 = v65;
    v70 = sub_1ABD00F9C(v66, v67);
    v71 = v65[2];
    v72 = (v69 & 1) == 0;
    v73 = v71 + v72;
    if (!__OFADD__(v71, v72))
    {
      LOBYTE(v65) = v69;
      v74 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      a5 = 808;
      do
      {
        if (v74[3] >= v73)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v65 & 1) != 0)
              goto LABEL_32;
          }
          else
          {
            sub_1ABE6FCC4();
            if ((v65 & 1) != 0)
              goto LABEL_32;
          }
        }
        else
        {
          sub_1ABE6C36C(v73, isUniquelyReferenced_nonNull_native & 1);
          v75 = sub_1ABD00F9C(v66, v67);
          if ((v65 & 1) != (v76 & 1))
          {
            sub_1ABF3229C();
            __break(1u);
            return;
          }
          v70 = v75;
          if ((v65 & 1) != 0)
          {
LABEL_32:
            v65 = v122;
            v77 = (void *)(v122[7] + 776 * v70);
            memcpy(v121, v77, 0x308uLL);
            sub_1ABD74D6C((uint64_t)v121);
            memcpy(v77, v123, 0x308uLL);
            goto LABEL_36;
          }
        }
        v65 = v122;
        v122[(v70 >> 6) + 8] |= 1 << v70;
        v78 = (uint64_t *)(v65[6] + 16 * v70);
        *v78 = v66;
        v78[1] = v67;
        memcpy((void *)(v65[7] + 776 * v70), v123, 0x308uLL);
        v79 = v65[2];
        v80 = __OFADD__(v79, 1);
        v81 = v79 + 1;
        if (v80)
        {
          __break(1u);
          goto LABEL_50;
        }
        v65[2] = v81;
        sub_1ABF2FF5C();
LABEL_36:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!--v64)
          goto LABEL_40;
        memcpy(v123, (const void *)(v120 + a5), sizeof(v123));
        v66 = v123[90];
        v67 = v123[91];
        sub_1ABD74914((uint64_t)v123);
        sub_1ABF2FF5C();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v122 = v65;
        v70 = sub_1ABD00F9C(v66, v67);
        v74 = v65;
        v65 = v82;
        v83 = v74[2];
        v84 = (v82 & 1) == 0;
        a5 += 776;
        v73 = v83 + v84;
      }
      while (!__OFADD__(v83, v84));
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRelease();
  }
  v85 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v85);
  type metadata accessor for Quote();
  v120 = (uint64_t)v65;
  v86 = sub_1ABF31648();
  v87 = v109;
  if (qword_1ED34FAD8 != -1)
    swift_once();
  v88 = sub_1ABF3133C();
  __swift_project_value_buffer(v88, (uint64_t)qword_1ED34E920);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v89 = sub_1ABF31324();
  v90 = sub_1ABF31BF4();
  if (os_log_type_enabled(v89, v90))
  {
    v91 = swift_slowAlloc();
    v92 = swift_slowAlloc();
    v118 = 0;
    v93 = v92;
    v123[0] = v92;
    *(_DWORD *)v91 = 136315394;
    v119 = a9;
    sub_1ABF2FF5C();
    v121[0] = sub_1ABD1FE2C(v107, v87, v123);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v91 + 12) = 2048;
    v94 = *(_QWORD *)(v86 + 16);
    swift_bridgeObjectRelease();
    v121[0] = v94;
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ABCEF000, v89, v90, "SDSQuoteOperation %s succeeded with %ld quotes", (uint8_t *)v91, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v93, -1, -1);
    MEMORY[0x1AF438FFC](v91, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v106(v86);
  v95 = v120;
  sub_1ABF2FF5C();
  v96 = sub_1ABF2FF5C();
  v97 = sub_1ABE51CC0(v96, v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v98 = sub_1ABF2FF5C();
  sub_1ABEAA890(v98, v95, v86);
  v100 = v99;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABEAABB4(v97);
  v101 = v105;
  swift_beginAccess();
  v102 = (_QWORD *)MEMORY[0x1AF4390D4](v101);
  v103 = v112;
  sub_1ABEA9B98(v102, v97, v100);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1ABD75174(v108);
}

uint64_t sub_1ABEA8CD8(_QWORD *a1, uint64_t a2, uint64_t *a3, void *__src)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD v11[73];
  _BYTE __dst[776];
  _BYTE v13[584];
  _BYTE __srca[584];

  v7 = *a3;
  v6 = a3[1];
  memcpy(__dst, __src, sizeof(__dst));
  sub_1ABD843F0((uint64_t)&__dst[104], (uint64_t)v13, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
  sub_1ABD843F0((uint64_t)v13, (uint64_t)__srca, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
  if (sub_1ABD7520C((uint64_t)__srca) == 1)
  {
    v8 = type metadata accessor for Quote();
    *a1 = 0;
    a1[1] = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
  else
  {
    memcpy(v11, __srca, sizeof(v11));
    *a1 = v7;
    a1[1] = v6;
    sub_1ABF2FF5C();
    sub_1ABEA8E00(v11);
    v10 = type metadata accessor for Quote();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 0, 1, v10);
  }
}

void sub_1ABEA8E00(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD v31[10];
  char *v32;
  char *v33;
  char *v34;
  __int128 v35;
  char v36;
  _BYTE v37[16];
  _BYTE v38[22];
  char v39;
  unsigned __int8 v40;
  __int128 v41;
  char v42[59];

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v31[0] = (char *)v31 - v4;
  v5 = sub_1ABF3094C();
  v31[2] = *(_QWORD *)(v5 - 8);
  v31[3] = v5;
  MEMORY[0x1E0C80A78](v5);
  v31[1] = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v2);
  MEMORY[0x1E0C80A78](v7);
  v31[9] = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v34 = (char *)v31 - v12;
  MEMORY[0x1E0C80A78](v13);
  v33 = (char *)v31 - v14;
  MEMORY[0x1E0C80A78](v15);
  v32 = (char *)v31 - v16;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v31 - v18;
  sub_1ABD843F0((uint64_t)(a1 + 32), (uint64_t)&v39, &qword_1ED34CF78, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
  sub_1ABD843F0((uint64_t)&v39, (uint64_t)&v40, &qword_1ED34CF78, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
  v31[6] = v40;
  v20 = MEMORY[0x1E0DEA968];
  sub_1ABD843F0((uint64_t)(a1 + 12), (uint64_t)v38, (unint64_t *)&qword_1ED34FB80, MEMORY[0x1E0DEA968]);
  sub_1ABD843F0((uint64_t)(a1 + 26), (uint64_t)v37, (unint64_t *)&qword_1ED34FB80, v20);
  sub_1ABD843F0((uint64_t)v37, (uint64_t)&v41, (unint64_t *)&qword_1ED34FB80, v20);
  v31[7] = v19;
  if (*((_QWORD *)&v41 + 1))
  {
    v35 = v41;
    sub_1ABD03ADC((uint64_t)v38);
    sub_1ABD03ADC((uint64_t)v37);
    sub_1ABEAAD70();
    sub_1ABF3076C();
    v22 = sub_1ABF30760();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 0, 1, v22);
  }
  else
  {
    v21 = sub_1ABF30760();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v19, 1, 1, v21);
    sub_1ABD03ADC((uint64_t)v38);
  }
  v23 = a1[29];
  if (v23)
  {
    *(_QWORD *)&v35 = a1[28];
    *((_QWORD *)&v35 + 1) = v23;
    sub_1ABEAAD70();
    sub_1ABF2FF5C();
    v24 = v32;
    sub_1ABF3076C();
    v27 = sub_1ABF30760();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v24, 0, 1, v27);
  }
  else
  {
    v26 = sub_1ABF30760();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v32, 1, 1, v26);
  }
  v28 = a1[31];
  if (v28)
  {
    *(_QWORD *)&v35 = a1[30];
    *((_QWORD *)&v35 + 1) = v28;
    sub_1ABEAAD70();
    sub_1ABF2FF5C();
    v29 = v33;
    sub_1ABF3076C();
    v30 = sub_1ABF30760();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
  }
  else
  {
    v25 = sub_1ABF30760();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v33, 1, 1, v25);
  }
  sub_1ABD843F0((uint64_t)a1 + 353, (uint64_t)&v36, &qword_1ED34CF30, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
  sub_1ABD843F0((uint64_t)&v36, (uint64_t)v42, &qword_1ED34CF30, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
  v31[5] = v42[0];
  __asm { BR              X9 }
}

uint64_t sub_1ABEA92E8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int *v39;

  sub_1ABD843F0((uint64_t)v4 + 25, v9 - 202, v7, v8);
  sub_1ABD843F0(v9 - 202, v9 - 138, v7, v8);
  if (*(_BYTE *)(v9 - 138) != 6)
    __asm { BR              X10 }
  sub_1ABD843F0((uint64_t)v4 + 57, v9 - 203, v7, v8);
  sub_1ABD843F0(v9 - 203, v9 - 137, v7, v8);
  v10 = *(unsigned __int8 *)(v9 - 137);
  v11 = 6;
  *(_DWORD *)(v0 + 36) = 6;
  if (v10 != 6)
    v11 = v10;
  *(_DWORD *)(v0 + 32) = v11;
  v12 = v4[52];
  if (!v12)
  {
    v17 = sub_1ABF30760();
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(*(_QWORD *)(v0 + 96), 1, 1, v17);
    goto LABEL_11;
  }
  *(_QWORD *)(v0 + 112) = v4[51];
  *(_QWORD *)(v0 + 120) = v12;
  sub_1ABEAAD70();
  sub_1ABF2FF5C();
  v13 = *(_QWORD *)(v0 + 96);
  sub_1ABF3076C();
  if (!v2)
  {
    v18 = sub_1ABF30760();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 0, 1, v18);
LABEL_11:
    v15 = v4[54];
    if (!v15)
      goto LABEL_8;
    goto LABEL_12;
  }

  v14 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v2 = 0;
  v15 = v4[54];
  if (!v15)
  {
LABEL_8:
    v16 = sub_1ABF30760();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
    goto LABEL_15;
  }
LABEL_12:
  *(_QWORD *)(v0 + 112) = v4[53];
  *(_QWORD *)(v0 + 120) = v15;
  sub_1ABEAAD70();
  sub_1ABF2FF5C();
  sub_1ABF3076C();
  if (v2)
  {

    v19 = sub_1ABF30760();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 1, 1, v19);
    v2 = 0;
  }
  else
  {
    v20 = sub_1ABF30760();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v5, 0, 1, v20);
  }
LABEL_15:
  v21 = v6[96];
  *(_QWORD *)(v0 + 64) = v5;
  if (!v21)
  {
LABEL_18:
    v23 = sub_1ABF30760();
    v22 = *(_QWORD *)(v0 + 72);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    goto LABEL_19;
  }
  *(_QWORD *)(v0 + 112) = v6[95];
  *(_QWORD *)(v0 + 120) = v21;
  sub_1ABEAAD70();
  sub_1ABF2FF5C();
  v22 = *(_QWORD *)(v0 + 72);
  sub_1ABF3076C();
  if (v2)
  {

    v2 = 0;
    goto LABEL_18;
  }
  v30 = sub_1ABF30760();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56);
  v32(v22, 0, 1, v30);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v22, 1, v30) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v3, v22, v30);
    v32(v3, 0, 1, v30);
    v29 = *(_QWORD *)(v0 + 8);
    v28 = *(_QWORD *)(v0 + 16);
    v25 = *(_QWORD *)(v0 + 24);
    goto LABEL_28;
  }
LABEL_19:
  v24 = v6[94];
  if (v24)
  {
    *(_QWORD *)(v0 + 112) = v6[93];
    *(_QWORD *)(v0 + 120) = v24;
    sub_1ABEAAD70();
    sub_1ABF2FF5C();
    sub_1ABF3076C();
    v25 = *(_QWORD *)(v0 + 24);
    if (v2)
    {

      v26 = sub_1ABF30760();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v3, 1, 1, v26);
    }
    else
    {
      v33 = sub_1ABF30760();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v3, 0, 1, v33);
    }
    v29 = *(_QWORD *)(v0 + 8);
    v28 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v27 = sub_1ABF30760();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v3, 1, 1, v27);
    v29 = *(_QWORD *)(v0 + 8);
    v28 = *(_QWORD *)(v0 + 16);
    v25 = *(_QWORD *)(v0 + 24);
  }
  sub_1ABD184CC(v22, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
LABEL_28:
  sub_1ABD843F0((uint64_t)(v4 + 55), v9 - 216, &qword_1ED34CFB8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
  sub_1ABD843F0(v9 - 216, v0 + 112, &qword_1ED34CFB8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
  if ((*(_BYTE *)(v0 + 121) & 1) == 0)
  {
    *(_QWORD *)(v9 - 136) = *(_QWORD *)(v0 + 112);
    *(_BYTE *)(v9 - 128) = *(_BYTE *)(v0 + 120);
    v34 = MEMORY[0x1E0DEB418];
    sub_1ABD843F0(v9 - 136, v9 - 120, &qword_1ED34E000, MEMORY[0x1E0DEB418]);
    sub_1ABD843F0(v9 - 120, v9 - 104, &qword_1ED34E000, v34);
    if ((*(_BYTE *)(v9 - 96) & 1) == 0)
    {
      v35 = *(_QWORD *)v0;
      sub_1ABF30928();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v35, 1, v25) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v29, v35, v25);
        goto LABEL_35;
      }
      sub_1ABD184CC(v35, &qword_1ED34CD08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470]);
    }
  }
  if (qword_1ED34E4A8 != -1)
    swift_once();
  v36 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED368408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v29, v36, v25);
LABEL_35:
  v37 = 0x4030201uLL >> (8 * *(_QWORD *)(v0 + 48));
  v38 = MEMORY[0x1E0DEB070];
  sub_1ABD843F0((uint64_t)(v4 + 39), v9 - 232, &qword_1ED34DFF0, MEMORY[0x1E0DEB070]);
  sub_1ABD843F0((uint64_t)(v4 + 41), v0 + 232, &qword_1ED34DFF0, v38);
  sub_1ABD843F0((uint64_t)(v4 + 37), v0 + 216, &qword_1ED34DFF0, v38);
  sub_1ABD843F0((uint64_t)v4, v0 + 200, &qword_1ED34DFF0, v38);
  sub_1ABD843F0((uint64_t)(v4 + 2), v0 + 184, &qword_1ED34DFF0, v38);
  sub_1ABD843F0((uint64_t)(v4 + 4), v0 + 168, &qword_1ED34DFF0, v38);
  sub_1ABD843F0((uint64_t)(v4 + 6), v0 + 152, &qword_1ED34DFF0, v38);
  sub_1ABD843F0((uint64_t)(v4 + 33), v0 + 136, &qword_1ED34DFF0, v38);
  v39 = (int *)type metadata accessor for Quote();
  sub_1ABF30754();
  sub_1ABD843F0(v9 - 232, v1, &qword_1ED34DFF0, v38);
  sub_1ABD843F0(v0 + 232, v1 + 16, &qword_1ED34DFF0, v38);
  sub_1ABD843F0(v0 + 216, v1 + 32, &qword_1ED34DFF0, v38);
  sub_1ABD843F0(v0 + 200, v1 + 48, &qword_1ED34DFF0, v38);
  sub_1ABD843F0(v0 + 184, v1 + 64, &qword_1ED34DFF0, v38);
  sub_1ABD843F0(v0 + 168, v1 + 80, &qword_1ED34DFF0, v38);
  sub_1ABD843F0(v0 + 152, v1 + 96, &qword_1ED34DFF0, v38);
  sub_1ABD843F0(v9 - 184, v1 + 112, (unint64_t *)&qword_1ED34FB80, MEMORY[0x1E0DEA968]);
  *(_BYTE *)(v1 + 128) = v37;
  sub_1ABD241F8(*(_QWORD *)(v0 + 56), v1 + v39[13]);
  sub_1ABD241F8(*(_QWORD *)(v0 + 80), v1 + v39[14]);
  sub_1ABD241F8(*(_QWORD *)(v0 + 88), v1 + v39[15]);
  *(_BYTE *)(v1 + v39[16]) = *(_QWORD *)(v0 + 40);
  *(_BYTE *)(v1 + v39[17]) = *(_DWORD *)(v0 + 36);
  *(_BYTE *)(v1 + v39[18]) = *(_DWORD *)(v0 + 32);
  sub_1ABD843F0(v0 + 136, v1 + v39[19], &qword_1ED34DFF0, v38);
  sub_1ABD241F8(*(_QWORD *)(v0 + 96), v1 + v39[20]);
  sub_1ABD241F8(*(_QWORD *)(v0 + 64), v1 + v39[21]);
  sub_1ABD241F8(v3, v1 + v39[23]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v1 + v39[24], v29, v25);
}

uint64_t sub_1ABEA9B98(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(*(_QWORD *)(v3 + qword_1ED34C940) + 16) - *(_QWORD *)(a2 + 16);
  *(_QWORD *)&v7 = *(_QWORD *)(*(_QWORD *)(v3 + qword_1ED34C940) + 16);
  *((_QWORD *)&v7 + 1) = v4;
  v8 = a2;
  v9 = a3;
  v10 = 0;
  v11 = 0;
  if (!a1)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1ABEE7638(a1, &v7);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease_n();
}

void sub_1ABEA9C50(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  void (*v19)(_QWORD, double);
  void (*v20)(_QWORD);
  char *v21;
  void (*v22)(_QWORD);
  char *v23;
  void (*v24)(_QWORD);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  unsigned int v46;
  void (*v47)(char *, _QWORD, uint64_t);
  unsigned int v48;
  void (*v49)(char *, _QWORD, uint64_t);
  unsigned int v50;
  void (*v51)(char *, _QWORD, uint64_t);
  unsigned int v52;
  void (*v53)(char *, _QWORD, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v68 = a2;
  v62 = a1;
  v64 = a3;
  v63 = sub_1ABF306AC();
  v59 = *(char **)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1ABF30694();
  v58 = *(char **)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF3067C();
  v8 = *(_QWORD *)(v7 - 8);
  v55 = v7;
  v56 = v8;
  v9 = v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1ABF30688();
  v57 = *(void (**)(char *, uint64_t))(v12 - 8);
  v13 = v57;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1ABF306B8();
  MEMORY[0x1E0C80A78](v61);
  v54 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v66 = v62;
  v67 = v68;
  v19 = (void (*)(_QWORD, double))*((_QWORD *)v13 + 13);
  v52 = *MEMORY[0x1E0CB05F0];
  v53 = (void (*)(char *, _QWORD, uint64_t))v19;
  v19(v15, v18);
  v20 = *(void (**)(_QWORD))(v9 + 104);
  v50 = *MEMORY[0x1E0CB05E0];
  v51 = (void (*)(char *, _QWORD, uint64_t))v20;
  v20(v11);
  v21 = v58;
  v22 = (void (*)(_QWORD))*((_QWORD *)v58 + 13);
  v48 = *MEMORY[0x1E0CB0600];
  v49 = (void (*)(char *, _QWORD, uint64_t))v22;
  v22(v6);
  v23 = v59;
  v24 = (void (*)(_QWORD))*((_QWORD *)v59 + 13);
  v46 = *MEMORY[0x1E0CB0628];
  v25 = v63;
  v47 = (void (*)(char *, _QWORD, uint64_t))v24;
  v24(v4);
  sub_1ABF2FF5C();
  sub_1ABF3130C();
  v26 = (void (*)(char *, uint64_t))*((_QWORD *)v23 + 1);
  v59 = v4;
  v26(v4, v25);
  v27 = (void (*)(char *, uint64_t))*((_QWORD *)v21 + 1);
  v58 = v6;
  v45 = v27;
  v27(v6, v65);
  v28 = v11;
  v29 = v55;
  v56 = *(_QWORD *)(v56 + 8);
  ((void (*)(char *))v56)(v11);
  v30 = (void (*)(char *, uint64_t))*((_QWORD *)v57 + 1);
  v31 = v15;
  v32 = v15;
  v33 = v12;
  v30(v32, v12);
  v34 = sub_1ABCFE1EC(qword_1ED3501E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0670], MEMORY[0x1E0CB0668]);
  v35 = v60;
  sub_1ABF3076C();
  if (v35)
  {
    v60 = v30;
    v66 = v62;
    v67 = v68;
    v62 = v34;
    v36 = v31;
    v44 = v33;
    v53(v31, v52, v33);
    v37 = v28;
    v38 = v29;
    v51(v28, v50, v29);
    v39 = v58;
    v40 = v65;
    v49(v58, v48, v65);
    v41 = v59;
    v57 = v26;
    v42 = v63;
    v47(v59, v46, v63);
    sub_1ABF2FF5C();
    sub_1ABF3130C();
    v57(v41, v42);
    v45(v39, v40);
    ((void (*)(char *, uint64_t))v56)(v37, v38);
    v60(v36, v44);
    sub_1ABF3076C();

  }
}

uint64_t sub_1ABEAA090()
{
  sub_1ABEAAEE4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEAA0B8()
{
  sub_1ABEAAEE4();
  return sub_1ABF32398();
}

void sub_1ABEAA0E0(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ABEA9C50(*a1, a1[1], a2);
}

uint64_t sub_1ABEAA0FC(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1ABEAA120(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1ABCF4DA8(0, &qword_1EEC44838, (uint64_t (*)(void))sub_1ABEAAEE4, (uint64_t)&type metadata for SDSQuoteOperation.SDSTimestampParseStrategy.CodingKeys, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEAAEE4();
  sub_1ABF32368();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1ABEAA1FC()
{
  sub_1ABF32308();
  return sub_1ABF32338();
}

uint64_t sub_1ABEAA230()
{
  sub_1ABF32308();
  return sub_1ABF32338();
}

void sub_1ABEAA260()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABEAA28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED34D028);
  v1 = v0 + qword_1ED34D038;
  v2 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_1ED34D030;
  v4 = sub_1ABF30B38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEAA320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED34D028);
  v2 = a1 + qword_1ED34D038;
  v3 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = a1 + qword_1ED34D030;
  v5 = sub_1ABF30B38();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABEAA3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABEA77D8((uint64_t)sub_1ABD6B260, v4);
  return swift_release();
}

uint64_t sub_1ABEAA418()
{
  return type metadata accessor for SDSQuoteOperation();
}

uint64_t sub_1ABEAA420()
{
  swift_getObjectType();
  return sub_1ABF30970();
}

uint64_t sub_1ABEAA464()
{
  swift_getObjectType();
  return sub_1ABF30964();
}

uint64_t sub_1ABEAA4B8()
{
  swift_getObjectType();
  return sub_1ABF3097C();
}

uint64_t sub_1ABEAA514()
{
  swift_getObjectType();
  return sub_1ABF30958();
}

uint64_t sub_1ABEAA580()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEAA5A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    v4 = a1 + 32;
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34DD28, (uint64_t (*)(uint64_t))sub_1ABEAA6DC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    do
    {
      v4 += 8;
      MEMORY[0x1E0C80A78](v5);
      swift_allocObject();
      sub_1ABF2FF5C();
      sub_1ABF31228();
      swift_bridgeObjectRelease();
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      v5 = sub_1ABF31F00();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

void sub_1ABEAA6DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE48)
  {
    type metadata accessor for Quote();
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE48);
  }
}

uint64_t sub_1ABEAA740(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABEA79E0(a1, *(void (**)(uint64_t, _QWORD))(v1 + 16));
}

void sub_1ABEAA758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABEA7AD4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABEAA760()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABEAA784()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABEAA7D0(uint64_t a1)
{
  uint64_t v1;

  sub_1ABEA7F04(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void (**)(uint64_t))(v1 + 64), *(_QWORD *)(v1 + 72));
}

void sub_1ABEAA804()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E4C8)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34E4B8, (uint64_t (*)(void))sub_1ABD66A00, (uint64_t)&type metadata for SDSQuoteResponse, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SDSBaseOperationResponse);
    v0 = sub_1ABF31120();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E4C8);
  }
}

uint64_t sub_1ABEAA878(_QWORD *a1, uint64_t a2, uint64_t *a3, void *a4)
{
  return sub_1ABEA8CD8(a1, a2, a3, a4);
}

void sub_1ABEAA890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *i;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  sub_1ABCF5A54(0, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v40 = (uint64_t)&v36 - v8;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    return;
  }
  v10 = 0;
  v11 = a1 + 40;
  v12 = -(uint64_t)v9;
  v38 = v3;
  v39 = MEMORY[0x1E0DEE9D8];
  v13 = v40;
  v36 = v11;
  v37 = v9;
  v41 = -(uint64_t)v9;
  do
  {
    if (v10 <= v9)
      v14 = v9;
    else
      v14 = v10;
    v43 = -(uint64_t)v14;
    for (i = (uint64_t *)(v11 + 16 * v10++); ; i += 2)
    {
      if (v43 + v10 == 1)
      {
        __break(1u);
        return;
      }
      if (*(_QWORD *)(a2 + 16))
        break;
LABEL_8:
      ++v10;
      if (v12 + v10 == 1)
        return;
    }
    v16 = *(i - 1);
    v17 = *i;
    swift_bridgeObjectRetain_n();
    v42 = v16;
    sub_1ABD00F9C(v16, v17);
    LOBYTE(v16) = v18;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_7;
    if (*(_QWORD *)(a3 + 16))
    {
      sub_1ABF2FF5C();
      v19 = sub_1ABD00F9C(v42, v17);
      if ((v20 & 1) != 0)
      {
        v21 = v19;
        v22 = a2;
        v23 = *(_QWORD *)(a3 + 56);
        v24 = type metadata accessor for Quote();
        v25 = a3;
        v26 = *(_QWORD *)(v24 - 8);
        v27 = v23 + *(_QWORD *)(v26 + 72) * v21;
        a2 = v22;
        v13 = v40;
        sub_1ABCFC790(v27, v40, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
        v28 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56);
        a3 = v25;
        v28(v13, 0, 1, v24);
      }
      else
      {
        v24 = type metadata accessor for Quote();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v13, 1, 1, v24);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for Quote();
      v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v13, 1, v24);
      v12 = v41;
      if (v29 == 1)
        goto LABEL_19;
      sub_1ABD184CC(v13, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
LABEL_7:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    v30 = type metadata accessor for Quote();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v13, 1, 1, v30);
LABEL_19:
    sub_1ABD184CC(v13, &qword_1ED34DA80, (uint64_t (*)(uint64_t))type metadata accessor for Quote);
    v31 = v39;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ABD16414(0, *(_QWORD *)(v31 + 16) + 1, 1);
      v31 = v44;
    }
    v9 = v37;
    v34 = *(_QWORD *)(v31 + 16);
    v33 = *(_QWORD *)(v31 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_1ABD16414(v33 > 1, v34 + 1, 1);
      v31 = v44;
    }
    *(_QWORD *)(v31 + 16) = v34 + 1;
    v39 = v31;
    v35 = v31 + 16 * v34;
    v12 = v41;
    *(_QWORD *)(v35 + 32) = v42;
    *(_QWORD *)(v35 + 40) = v17;
    v11 = v36;
  }
  while (v12 + v10);
}

void sub_1ABEAABB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1ABF31BE8();
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1ABF366C0;
    v3 = MEMORY[0x1E0DEA968];
    v4 = MEMORY[0x1AF437C34](a1, MEMORY[0x1E0DEA968]);
    v6 = v5;
    *(_QWORD *)(v2 + 56) = v3;
    *(_QWORD *)(v2 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v2 + 32) = v4;
    *(_QWORD *)(v2 + 40) = v6;
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v7 = (id)sub_1ABF31D44();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_1ABEAACD0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABEAAD0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E160)
  {
    sub_1ABCF7BCC(255, (unint64_t *)&qword_1ED34E158);
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E160);
  }
}

unint64_t sub_1ABEAAD70()
{
  unint64_t result;

  result = qword_1ED34E788;
  if (!qword_1ED34E788)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49B04, &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy);
    atomic_store(result, (unint64_t *)&qword_1ED34E788);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteOperation.SDSTimestampParseStrategy()
{
  return &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy;
}

unint64_t sub_1ABEAADC8()
{
  unint64_t result;

  result = qword_1ED34E7A0;
  if (!qword_1ED34E7A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49A4C, &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy);
    atomic_store(result, (unint64_t *)&qword_1ED34E7A0);
  }
  return result;
}

unint64_t sub_1ABEAAE10()
{
  unint64_t result;

  result = qword_1ED34E6F0;
  if (!qword_1ED34E6F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49ADC, &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy);
    atomic_store(result, (unint64_t *)&qword_1ED34E6F0);
  }
  return result;
}

unint64_t sub_1ABEAAE58()
{
  unint64_t result;

  result = qword_1ED34E790;
  if (!qword_1ED34E790)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49AB4, &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy);
    atomic_store(result, (unint64_t *)&qword_1ED34E790);
  }
  return result;
}

unint64_t sub_1ABEAAEA0()
{
  unint64_t result;

  result = qword_1ED34E798;
  if (!qword_1ED34E798)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49A74, &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy);
    atomic_store(result, (unint64_t *)&qword_1ED34E798);
  }
  return result;
}

unint64_t sub_1ABEAAEE4()
{
  unint64_t result;

  result = qword_1EEC44840;
  if (!qword_1EEC44840)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49BB0, &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44840);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteOperation.SDSTimestampParseStrategy.CodingKeys()
{
  return &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy.CodingKeys;
}

unint64_t sub_1ABEAAF3C()
{
  unint64_t result;

  result = qword_1EEC44848;
  if (!qword_1EEC44848)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49B60, &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44848);
  }
  return result;
}

unint64_t sub_1ABEAAF84()
{
  unint64_t result;

  result = qword_1EEC44850;
  if (!qword_1EEC44850)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49B88, &type metadata for SDSQuoteOperation.SDSTimestampParseStrategy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44850);
  }
  return result;
}

uint64_t sub_1ABEAAFD8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1ABCF4DA8(0, &qword_1EEC44898, (uint64_t (*)(void))sub_1ABEABB64, (uint64_t)&type metadata for TestStockFeedService.TestData.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEABB64();
  sub_1ABF32368();
  v10[1] = a2;
  sub_1ABEABBA8(0, &qword_1EEC44870, &qword_1EEC44878, (uint64_t)&type metadata for TestStockFeedService.TestData.Article);
  sub_1ABEABCF4();
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABEAB10C()
{
  sub_1ABEABF48();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEAB134()
{
  sub_1ABEABF48();
  return sub_1ABF32398();
}

uint64_t sub_1ABEAB15C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;

  v15 = a2;
  sub_1ABCF4DA8(0, &qword_1EEC448D0, (uint64_t (*)(void))sub_1ABEABF48, (uint64_t)&type metadata for TestStockFeedService.TestData.Article.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEABF48();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1ABF320E0();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1ABEAB2A0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1ABCF4DA8(0, &qword_1EEC448E0, (uint64_t (*)(void))sub_1ABEABF48, (uint64_t)&type metadata for TestStockFeedService.TestData.Article.CodingKeys, MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEABF48();
  sub_1ABF32368();
  sub_1ABF32194();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1ABEAB3A4()
{
  sub_1ABEABB64();
  return sub_1ABF3238C();
}

uint64_t sub_1ABEAB3CC()
{
  sub_1ABEABB64();
  return sub_1ABF32398();
}

_QWORD *sub_1ABEAB3F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABEAB9F4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABEAB41C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABEAAFD8(a1, *v1);
}

uint64_t sub_1ABEAB434(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  sub_1ABEAB900();
  sub_1ABF30CAC();
  v4 = a1 + 8;
  v5 = a1[11];
  v6 = a1[12];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ABF366C0;
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(v7 + 40) = v8;
  sub_1ABF2FF5C();
  sub_1ABD3D490(v7, v5, v6);
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1ABF31114();
  v10 = sub_1ABF31108();
  swift_release();
  swift_release();

  return v10;
}

_QWORD *sub_1ABEAB540(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _QWORD *result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, _BYTE *, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _BYTE v31[136];
  _OWORD v32[8];
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v7 = *(_OWORD *)(a4 + 112);
  v40 = *(_OWORD *)(a4 + 96);
  v41 = v7;
  v42 = *(_QWORD *)(a4 + 128);
  v8 = *(_OWORD *)(a4 + 48);
  v36 = *(_OWORD *)(a4 + 32);
  v37 = v8;
  v9 = *(_OWORD *)(a4 + 80);
  v38 = *(_OWORD *)(a4 + 64);
  v39 = v9;
  v10 = *(_OWORD *)(a4 + 16);
  v34 = *(_OWORD *)a4;
  v35 = v10;
  result = (_QWORD *)sub_1ABE0E848(a2);
  if (!result)
    goto LABEL_15;
  if (!result[2])
  {
    __break(1u);
LABEL_14:
    result = (_QWORD *)swift_bridgeObjectRelease();
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  v13 = result[4];
  v12 = result[5];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_14;
  v14 = sub_1ABD00F9C(v13, v12);
  if ((v15 & 1) == 0)
    goto LABEL_14;
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v14);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v30 = a3;
    *(_QWORD *)&v32[0] = MEMORY[0x1E0DEE9D8];
    sub_1ABD16414(0, v17, 0);
    v18 = *(_QWORD *)&v32[0];
    v19 = (uint64_t *)(v16 + 40);
    do
    {
      v20 = *(v19 - 1);
      v21 = *v19;
      *(_QWORD *)&v32[0] = v18;
      v23 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      sub_1ABF2FF5C();
      if (v23 >= v22 >> 1)
      {
        sub_1ABD16414(v22 > 1, v23 + 1, 1);
        v18 = *(_QWORD *)&v32[0];
      }
      v19 += 2;
      *(_QWORD *)(v18 + 16) = v23 + 1;
      v24 = v18 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v20;
      *(_QWORD *)(v24 + 40) = v21;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a3 = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v25 = a3 + 3;
  v27 = a3[6];
  v26 = a3[7];
  __swift_project_boxed_opaque_existential_1(v25, v27);
  v32[6] = v40;
  v32[7] = v41;
  v33 = v42;
  v32[2] = v36;
  v32[3] = v37;
  v32[4] = v38;
  v32[5] = v39;
  v32[0] = v34;
  v32[1] = v35;
  nullsub_2(v32);
  sub_1ABD261A4((uint64_t)v32, (uint64_t)v31);
  v28 = *(uint64_t (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(v26 + 8);
  sub_1ABD97ECC(a4);
  v29 = v28(v18, v31, v27, v26);
  swift_bridgeObjectRelease();
  sub_1ABD97F60(a4);
  return (_QWORD *)v29;
}

uint64_t sub_1ABEAB764()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TestStockFeedService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEAB7B8(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v2 = *v1;
  v3 = a1[7];
  v22 = a1[6];
  v23 = v3;
  v24 = *((_QWORD *)a1 + 16);
  v4 = a1[3];
  v18 = a1[2];
  v19 = v4;
  v5 = a1[5];
  v20 = a1[4];
  v21 = v5;
  v6 = a1[1];
  v16 = *a1;
  v17 = v6;
  sub_1ABE43C9C();
  sub_1ABF3127C();
  v7 = swift_allocObject();
  v8 = v20;
  *(_OWORD *)(v7 + 104) = v21;
  v9 = v23;
  *(_OWORD *)(v7 + 120) = v22;
  *(_OWORD *)(v7 + 136) = v9;
  v10 = v16;
  *(_OWORD *)(v7 + 40) = v17;
  v11 = v19;
  *(_OWORD *)(v7 + 56) = v18;
  *(_OWORD *)(v7 + 72) = v11;
  *(_OWORD *)(v7 + 88) = v8;
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 152) = v24;
  *(_OWORD *)(v7 + 24) = v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1ABE43D64;
  *(_QWORD *)(v12 + 24) = v7;
  sub_1ABF2FF68();
  sub_1ABD97ECC((uint64_t)&v16);
  v13 = (void *)sub_1ABF31114();
  sub_1ABD33E04();
  v14 = sub_1ABF31174();
  swift_release();
  swift_release();

  return v14;
}

unint64_t sub_1ABEAB900()
{
  unint64_t result;

  result = qword_1EEC44858;
  if (!qword_1EEC44858)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49C8C, &type metadata for TestStockFeedService.TestData);
    atomic_store(result, (unint64_t *)&qword_1EEC44858);
  }
  return result;
}

uint64_t sub_1ABEAB944()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABEAB9A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEAB9CC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1ABE43790(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16));
}

ValueMetadata *type metadata accessor for TestStockFeedService.TestData()
{
  return &type metadata for TestStockFeedService.TestData;
}

_QWORD *sub_1ABEAB9F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABCF4DA8(0, &qword_1EEC44860, (uint64_t (*)(void))sub_1ABEABB64, (uint64_t)&type metadata for TestStockFeedService.TestData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABEABB64();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABEABBA8(0, &qword_1EEC44870, &qword_1EEC44878, (uint64_t)&type metadata for TestStockFeedService.TestData.Article);
    sub_1ABEABC18();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABEABB64()
{
  unint64_t result;

  result = qword_1EEC44868;
  if (!qword_1EEC44868)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49DD0, &type metadata for TestStockFeedService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC44868);
  }
  return result;
}

void sub_1ABEABBA8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1ABD04578(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = sub_1ABF31690();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1ABEABC18()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEC44880;
  if (!qword_1EEC44880)
  {
    sub_1ABEABBA8(255, &qword_1EEC44870, &qword_1EEC44878, (uint64_t)&type metadata for TestStockFeedService.TestData.Article);
    v2 = v1;
    v3 = sub_1ABEABD8C(&qword_1EEC44888, (uint64_t (*)(void))sub_1ABEABCB0, MEMORY[0x1E0DEAF40]);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEC44880);
  }
  return result;
}

unint64_t sub_1ABEABCB0()
{
  unint64_t result;

  result = qword_1EEC44890;
  if (!qword_1EEC44890)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49DA8, &type metadata for TestStockFeedService.TestData.Article);
    atomic_store(result, (unint64_t *)&qword_1EEC44890);
  }
  return result;
}

unint64_t sub_1ABEABCF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEC448A0;
  if (!qword_1EEC448A0)
  {
    sub_1ABEABBA8(255, &qword_1EEC44870, &qword_1EEC44878, (uint64_t)&type metadata for TestStockFeedService.TestData.Article);
    v2 = v1;
    v3 = sub_1ABEABD8C(&qword_1EEC448A8, (uint64_t (*)(void))sub_1ABEABE08, MEMORY[0x1E0DEAF10]);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EEC448A0);
  }
  return result;
}

uint64_t sub_1ABEABD8C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, &qword_1EEC44878, (uint64_t)&type metadata for TestStockFeedService.TestData.Article, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABEABE08()
{
  unint64_t result;

  result = qword_1EEC448B0;
  if (!qword_1EEC448B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49D80, &type metadata for TestStockFeedService.TestData.Article);
    atomic_store(result, (unint64_t *)&qword_1EEC448B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestStockFeedService.TestData.CodingKeys()
{
  return &type metadata for TestStockFeedService.TestData.CodingKeys;
}

ValueMetadata *type metadata accessor for TestStockFeedService.TestData.Article()
{
  return &type metadata for TestStockFeedService.TestData.Article;
}

unint64_t sub_1ABEABE74()
{
  unint64_t result;

  result = qword_1EEC448B8;
  if (!qword_1EEC448B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49D58, &type metadata for TestStockFeedService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC448B8);
  }
  return result;
}

unint64_t sub_1ABEABEBC()
{
  unint64_t result;

  result = qword_1EEC448C0;
  if (!qword_1EEC448C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49CC8, &type metadata for TestStockFeedService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC448C0);
  }
  return result;
}

unint64_t sub_1ABEABF04()
{
  unint64_t result;

  result = qword_1EEC448C8;
  if (!qword_1EEC448C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49CF0, &type metadata for TestStockFeedService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC448C8);
  }
  return result;
}

unint64_t sub_1ABEABF48()
{
  unint64_t result;

  result = qword_1EEC448D8;
  if (!qword_1EEC448D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49ED8, &type metadata for TestStockFeedService.TestData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC448D8);
  }
  return result;
}

uint64_t _s10StocksCore20TestStockFeedServiceC8TestDataV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABEABFCC + 4 * byte_1ABF49C00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABEABFEC + 4 * byte_1ABF49C05[v4]))();
}

_BYTE *sub_1ABEABFCC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABEABFEC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEABFF4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEABFFC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABEAC004(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABEAC00C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TestStockFeedService.TestData.Article.CodingKeys()
{
  return &type metadata for TestStockFeedService.TestData.Article.CodingKeys;
}

unint64_t sub_1ABEAC02C()
{
  unint64_t result;

  result = qword_1EEC448E8;
  if (!qword_1EEC448E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49EB0, &type metadata for TestStockFeedService.TestData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC448E8);
  }
  return result;
}

unint64_t sub_1ABEAC074()
{
  unint64_t result;

  result = qword_1EEC448F0;
  if (!qword_1EEC448F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49E20, &type metadata for TestStockFeedService.TestData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC448F0);
  }
  return result;
}

unint64_t sub_1ABEAC0BC()
{
  unint64_t result;

  result = qword_1EEC448F8;
  if (!qword_1EEC448F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF49E48, &type metadata for TestStockFeedService.TestData.Article.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC448F8);
  }
  return result;
}

uint64_t type metadata accessor for YahooQuoteService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEAC120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  _BYTE v39[24];
  uint64_t v40;

  v7 = sub_1ABF30B38();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_1ABF30760();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1ABD07E04(v3 + 16, (uint64_t)v39);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  v15 = (void *)objc_opt_self();
  sub_1ABF2FF5C();
  v16 = objc_msgSend(v15, sel_sharedPreferences);
  v17 = v16;
  if (!v16)
  {
    v22 = 0xE500000000000000;
    v20 = 0x73752D6E65;
LABEL_8:

    v27 = 0xE200000000000000;
    v25 = 21333;
    goto LABEL_9;
  }
  v18 = objc_msgSend(v16, sel_stocksLanguageCode);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1ABF317A4();
    v22 = v21;

  }
  else
  {
    v22 = 0xE500000000000000;
    v20 = 0x73752D6E65;
  }
  v23 = objc_msgSend(v17, sel_stocksCountryCode);
  if (!v23)
    goto LABEL_8;
  v24 = v23;
  v25 = sub_1ABF317A4();
  v27 = v26;

LABEL_9:
  v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (uint64_t *)&v39[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v32 + 16))(v31, v29);
  v33 = sub_1ABDFEBB8(a1, *v31, v20, v22, v25, v27, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  sub_1ABEACB50();
  sub_1ABF30BE0();
  v34 = v33;
  sub_1ABF30BA4();
  sub_1ABF31258();
  swift_release();
  v35 = (void *)sub_1ABF31114();
  sub_1ABDF1B70(0, (unint64_t *)&qword_1ED34DE48, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  v36 = sub_1ABF31180();

  swift_release();
  return v36;
}

uint64_t sub_1ABEAC410@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1ABEAC868(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ABEAC438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;

  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v4);
  v52 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v69 = (char *)&v49 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v49 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v49 - v18;
  v20 = (int *)type metadata accessor for YahooMultiQuoteItem(0);
  v21 = a1 + v20[5];
  v22 = *(_QWORD *)v21;
  v23 = *(unsigned __int8 *)(v21 + 8);
  v24 = a1 + v20[6];
  v25 = *(_QWORD *)v24;
  v61 = v22;
  v62 = v25;
  LODWORD(v24) = *(unsigned __int8 *)(v24 + 8);
  v63 = v23;
  v64 = v24;
  v26 = a1 + v20[7];
  v27 = *(_QWORD *)v26;
  LODWORD(v22) = *(unsigned __int8 *)(v26 + 8);
  v28 = a1 + v20[8];
  v58 = *(_QWORD *)v28;
  LODWORD(v28) = *(unsigned __int8 *)(v28 + 8);
  v59 = v22;
  v60 = v28;
  v29 = v20[10];
  v30 = a1 + v20[9];
  v53 = *(_QWORD *)v30;
  LODWORD(v22) = *(unsigned __int8 *)(v30 + 8);
  v31 = a1 + v29;
  v33 = *(_QWORD *)(a1 + v29);
  v32 = *(_QWORD *)(v31 + 8);
  v56 = v27;
  v57 = v33;
  v49 = v32;
  LODWORD(v32) = *(unsigned __int8 *)(a1 + v20[11]);
  v54 = v22;
  v55 = v32;
  v34 = sub_1ABF30760();
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v65 = v19;
  v35(v19, 1, 1, v34);
  v66 = v16;
  v35(v16, 1, 1, v34);
  v36 = a1 + v20[12];
  v67 = v13;
  sub_1ABCFC790(v36, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  v37 = *(_BYTE *)(a1 + v20[15]);
  v38 = *(_BYTE *)(a1 + v20[16]);
  v39 = a1 + v20[17];
  v51 = *(_QWORD *)v39;
  v50 = *(unsigned __int8 *)(v39 + 8);
  v68 = v10;
  v40 = v10;
  v41 = v49;
  v35(v40, 1, 1, v34);
  v35(v69, 1, 1, v34);
  v42 = v52;
  sub_1ABCFC790(a1, v52, (uint64_t (*)(_QWORD))sub_1ABD226F0);
  v43 = qword_1ED34E4A8;
  sub_1ABF2FF5C();
  if (v43 != -1)
    swift_once();
  v44 = sub_1ABF3094C();
  v45 = __swift_project_value_buffer(v44, (uint64_t)qword_1ED368408);
  v46 = (int *)type metadata accessor for Quote();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(a2 + v46[24], v45, v44);
  sub_1ABF30754();
  *(_QWORD *)a2 = v61;
  *(_BYTE *)(a2 + 8) = v63;
  *(_QWORD *)(a2 + 16) = v62;
  *(_BYTE *)(a2 + 24) = v64;
  *(_QWORD *)(a2 + 32) = v56;
  *(_BYTE *)(a2 + 40) = v59;
  *(_QWORD *)(a2 + 48) = v58;
  *(_BYTE *)(a2 + 56) = v60;
  *(_QWORD *)(a2 + 64) = v53;
  *(_BYTE *)(a2 + 72) = v54;
  *(_QWORD *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 88) = 1;
  *(_QWORD *)(a2 + 96) = 0;
  *(_BYTE *)(a2 + 104) = 1;
  *(_QWORD *)(a2 + 112) = v57;
  *(_QWORD *)(a2 + 120) = v41;
  *(_BYTE *)(a2 + 128) = v55;
  sub_1ABCFE2AC((uint64_t)v65, a2 + v46[13], (uint64_t (*)(_QWORD))sub_1ABD226F0);
  sub_1ABCFE2AC((uint64_t)v66, a2 + v46[14], (uint64_t (*)(_QWORD))sub_1ABD226F0);
  sub_1ABCFE2AC((uint64_t)v67, a2 + v46[15], (uint64_t (*)(_QWORD))sub_1ABD226F0);
  *(_BYTE *)(a2 + v46[16]) = v37;
  *(_BYTE *)(a2 + v46[17]) = v38;
  *(_BYTE *)(a2 + v46[18]) = 7;
  v47 = a2 + v46[19];
  *(_QWORD *)v47 = v51;
  *(_BYTE *)(v47 + 8) = v50;
  sub_1ABCFE2AC((uint64_t)v68, a2 + v46[20], (uint64_t (*)(_QWORD))sub_1ABD226F0);
  sub_1ABCFE2AC((uint64_t)v69, a2 + v46[21], (uint64_t (*)(_QWORD))sub_1ABD226F0);
  return sub_1ABCFE2AC(v42, a2 + v46[23], (uint64_t (*)(_QWORD))sub_1ABD226F0);
}

uint64_t sub_1ABEAC848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABEAC120(a1, a2, a3);
}

uint64_t sub_1ABEAC868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  BOOL v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v3 = type metadata accessor for Quote();
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for YahooMultiQuoteItem(0);
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABDF1B70(0, &qword_1ED34E1B8, (uint64_t (*)(uint64_t))type metadata accessor for Quote, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  result = sub_1ABF31FF0();
  v9 = (_QWORD *)result;
  v10 = 0;
  v35 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v12 = a1 + 64;
  v11 = v13;
  v14 = 1 << *(_BYTE *)(v12 - 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v11;
  v29 = v12;
  v30 = (unint64_t)(v14 + 63) >> 6;
  v31 = result + 64;
  v17 = (uint64_t)v34;
  if ((v15 & v11) == 0)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v18 | (v10 << 6); ; i = __clz(__rbit64(v21)) + (v10 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * i);
    v24 = *v23;
    v25 = v23[1];
    sub_1ABCFC790(*(_QWORD *)(v35 + 56) + *(_QWORD *)(v33 + 72) * i, (uint64_t)v7, type metadata accessor for YahooMultiQuoteItem);
    sub_1ABF2FF5C();
    sub_1ABEAC438((uint64_t)v7, v17);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1ABEACBBC((uint64_t)v7);
      return (uint64_t)v9;
    }
    sub_1ABEACBBC((uint64_t)v7);
    *(_QWORD *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = (_QWORD *)(v9[6] + 16 * i);
    *v26 = v24;
    v26[1] = v25;
    result = sub_1ABCFE2AC(v17, v9[7] + *(_QWORD *)(v32 + 72) * i, (uint64_t (*)(_QWORD))type metadata accessor for Quote);
    v27 = v9[2];
    v20 = __OFADD__(v27, 1);
    v28 = v27 + 1;
    if (v20)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v9[2] = v28;
    if (v16)
      goto LABEL_4;
LABEL_5:
    v20 = __OFADD__(v10++, 1);
    if (v20)
      goto LABEL_27;
    if (v10 >= v30)
      return (uint64_t)v9;
    v21 = *(_QWORD *)(v29 + 8 * v10);
    if (!v21)
      break;
LABEL_15:
    v16 = (v21 - 1) & v21;
  }
  v22 = v10 + 1;
  if (v10 + 1 >= v30)
    return (uint64_t)v9;
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
    goto LABEL_14;
  v22 = v10 + 2;
  if (v10 + 2 >= v30)
    return (uint64_t)v9;
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
    goto LABEL_14;
  v22 = v10 + 3;
  if (v10 + 3 >= v30)
    return (uint64_t)v9;
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
  {
LABEL_14:
    v10 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v30)
      return (uint64_t)v9;
    v21 = *(_QWORD *)(v29 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1ABEACB50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED351450)
  {
    sub_1ABDF1B70(255, (unint64_t *)&qword_1ED351458, type metadata accessor for YahooMultiQuoteItem, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED351450);
  }
}

uint64_t sub_1ABEACBBC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for YahooMultiQuoteItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABEACBF8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1ABD830A4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[13 * v9 + 4];
  if (a1 + 32 < v10 + 104 * v8 && v10 < a1 + 32 + 104 * v8)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABEACD54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1ABD831E0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[18 * v8 + 4];
  if (a1 + 32 < v9 + 144 * v2 && v9 < a1 + 32 + 144 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABEACEAC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1ABD83358(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_1ABF302BC();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

unint64_t sub_1ABEAD014()
{
  return 0xD000000000000018;
}

uint64_t sub_1ABEAD030(char a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  _BYTE v10[40];

  v4 = sub_1ABF31000();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((a1 & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_1ABF30FF4();
    result = sub_1ABF30B68();
    if (result)
    {
      sub_1ABD3392C();
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E0DB4690], v4);
      sub_1ABF30FDC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1ABEAD140(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED34CD10, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyStocksAssembly, (uint64_t)&unk_1ABF49F98);
}

uint64_t sub_1ABEAD16C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEAD190()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1ABEAD1B4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_1ABEAD1E0()
{
  uint64_t v0;

  return sub_1ABEAD030(*(_BYTE *)(v0 + 16), (_QWORD *)(v0 + 24));
}

StocksCore::ChartRange_optional __swiftcall ChartRange.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  StocksCore::ChartRange_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1ABF32068();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1ABEAD248(char *a1)
{
  sub_1ABDE44C8(*a1);
}

uint64_t sub_1ABEAD254()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABD99754((uint64_t)v3, v1);
  return sub_1ABF32338();
}

void sub_1ABEAD298(uint64_t a1)
{
  char *v1;

  sub_1ABD99754(a1, *v1);
}

uint64_t sub_1ABEAD2A0()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABD99754((uint64_t)v3, v1);
  return sub_1ABF32338();
}

StocksCore::ChartRange_optional sub_1ABEAD2E0(Swift::String *a1)
{
  return ChartRange.init(rawValue:)(*a1);
}

uint64_t sub_1ABEAD2EC()
{
  sub_1ABD46614();
  return sub_1ABF31978();
}

uint64_t sub_1ABEAD32C()
{
  sub_1ABD46614();
  return sub_1ABF3196C();
}

uint64_t type metadata accessor for SDSNewsOperation()
{
  uint64_t result;

  result = qword_1EEC44940;
  if (!qword_1EEC44940)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABEAD3B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30B38();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1ABEAD448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t inited;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _BYTE v17[64];

  v5 = sub_1ABF30760();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + qword_1EEC44928), *(_QWORD *)(v2 + qword_1EEC44928 + 24));
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(inited + 32) = 0x6C6F626D7973;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v10 = *(_QWORD *)(v2 + qword_1EEC44920 + 8);
  *(_QWORD *)(inited + 48) = *(_QWORD *)(v2 + qword_1EEC44920);
  *(_QWORD *)(inited + 56) = v10;
  sub_1ABF2FF5C();
  sub_1ABD031C0(inited);
  sub_1ABF30754();
  v11 = (_QWORD *)sub_1ABE77D74(1);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)((char *)v11 + *(_QWORD *)(qword_1ED368430 + (*MEMORY[0x1E0DEEDD8] & *v11) + 16));
  v13 = *v12;
  *v12 = (uint64_t)sub_1ABEAD658;
  v12[1] = 0;
  sub_1ABD12EC4(v13);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  v16 = v11;
  sub_1ABF2FF68();
  sub_1ABF30BF8();

  objc_msgSend(v16, sel_start);
}

uint64_t sub_1ABEAD658(uint64_t a1, uint64_t a2)
{
  _QWORD v3[4];

  v3[2] = a1;
  return sub_1ABF12034((void (*)(uint64_t))sub_1ABEAE958, (uint64_t)v3, a2);
}

uint64_t sub_1ABEAD698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1ABEAE78C(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, &qword_1EEC44958, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (id *)((char *)&v26 - v11);
  sub_1ABEAE7E4(a2, (uint64_t)&v26 - v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    sub_1ABD66FD0();
    v14 = a3 + *(int *)(v13 + 48);
    v15 = sub_1ABF30F34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a3, a1, v15);
    *(_OWORD *)v14 = xmmword_1ABF36EB0;
    v16 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v14 + 16) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v14 + 24) = v16;
    type metadata accessor for NetworkEvent();
    *(_QWORD *)(v14 + 32) = 0;
    *(_QWORD *)(v14 + 40) = 0;
  }
  else
  {
    sub_1ABEAE840((uint64_t)v12, (uint64_t)v8);
    v17 = sub_1ABF30F34();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a3, a1, v17);
    sub_1ABD04578(0, (unint64_t *)&unk_1EEC44960, (uint64_t)&type metadata for SDSNewsResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB44E8]);
    sub_1ABF30F64();
    v18 = v26;
    sub_1ABD365D4(v27, v28);
    v19 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRelease();
    sub_1ABF30F64();
    swift_bridgeObjectRelease();
    v20 = v28;
    if (v28)
    {
      v21 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = 0;
    }
    sub_1ABD66FD0();
    v23 = (_QWORD *)(a3 + *(int *)(v22 + 48));
    sub_1ABEAE8E0((uint64_t)v8);
    *v23 = 1;
    v23[1] = v19;
    v24 = MEMORY[0x1E0DEE9D8];
    v23[2] = MEMORY[0x1E0DEE9D8];
    v23[3] = v24;
    v23[4] = v21;
    v23[5] = v20;
    type metadata accessor for NetworkEvent();
  }
  return swift_storeEnumTagMultiPayload();
}

void sub_1ABEAD8E0(uint64_t a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  id *v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD v46[3];
  char *v47;
  uint64_t v48;
  void (*v49)(id, uint64_t);
  uint64_t v50;
  uint64_t (*v51)();
  uint64_t v52;
  _QWORD *v53;
  void *v54;
  uint64_t (*v55)(uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE v61[144];
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[18];
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  void *v73;
  uint64_t (*v74)();
  _QWORD *v75;

  v48 = a4;
  v49 = a3;
  v57 = sub_1ABF31594();
  v60 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v56 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF315D0();
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABEAE78C(0);
  MEMORY[0x1E0C80A78](v10);
  v50 = (uint64_t)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, &qword_1EEC44958, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (id *)((char *)v46 - v14);
  swift_beginAccess();
  v16 = (char *)MEMORY[0x1AF4390D4](a2 + 16);
  if (v16)
  {
    v47 = v16;
    sub_1ABEAE7E4(a1, (uint64_t)v15);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = *v15;
      v18 = *v15;
      v49(v17, 1);

    }
    else
    {
      sub_1ABEAE840((uint64_t)v15, v50);
      sub_1ABD04578(0, (unint64_t *)&unk_1EEC44960, (uint64_t)&type metadata for SDSNewsResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB44E8]);
      v20 = v19;
      sub_1ABF30F64();
      swift_bridgeObjectRelease();
      v55 = v72;
      if (v72)
      {
        v53 = v75;
        v54 = v73;
        v21 = *(_QWORD *)&v47[qword_1EEC44930];
        v22 = *(_QWORD *)(v21 + 16);
        if (v22)
        {
          v46[1] = *(_QWORD *)&v47[qword_1EEC44930];
          v46[2] = v20;
          v51 = v74;
          v52 = v71;
          v23 = (_QWORD *)(v21 + 32);
          sub_1ABF2FF5C();
          do
          {
            v24 = __swift_project_boxed_opaque_existential_1(v23, v23[3]);
            v25 = *v24;
            if (*(_BYTE *)(*v24 + 24) == 1)
            {
              v26 = (_QWORD *)swift_allocObject();
              v27 = v52;
              v28 = v53;
              v26[2] = v25;
              v26[3] = v27;
              v29 = v54;
              v26[4] = v55;
              v26[5] = v29;
              v26[6] = v51;
              v26[7] = v28;
              v74 = sub_1ABE77CF8;
              v75 = v26;
              v70 = MEMORY[0x1E0C809B0];
              v71 = 1107296256;
              v72 = sub_1ABD127EC;
              v73 = &block_descriptor_32;
              v30 = _Block_copy(&v70);
              sub_1ABF2FF68();
              sub_1ABF2FF5C();
              sub_1ABF2FF5C();
              sub_1ABF2FF5C();
              sub_1ABF315AC();
              v69[0] = MEMORY[0x1E0DEE9D8];
              v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
              sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
              sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v31, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
              sub_1ABD33CAC();
              v33 = v56;
              v32 = v57;
              sub_1ABF31E04();
              MEMORY[0x1AF437E50](0, v9, v33, v30);
              _Block_release(v30);
              (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v32);
              (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v59);
              swift_release();
            }
            v23 += 5;
            --v22;
          }
          while (v22);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1ABF30F64();
      v34 = v70;
      sub_1ABD365D4(v71, (uint64_t)v72);
      v35 = *(_QWORD *)(v34 + 16);
      if (v35)
      {
        sub_1ABF2FF5C();
        v36 = 0;
        v37 = v35 - 1;
        v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        while (1)
        {
          v39 = *(_QWORD *)(v34 + v36 + 48);
          v40 = *(_QWORD *)(v34 + v36 + 56);
          v41 = *(_QWORD *)(v34 + v36 + 96);
          v42 = *(_QWORD *)(v34 + v36 + 104);
          v62 = *(_OWORD *)(v34 + v36 + 32);
          v63 = v39;
          v64 = v40;
          v43 = *(_OWORD *)(v34 + v36 + 80);
          v65 = *(_OWORD *)(v34 + v36 + 64);
          v66 = v43;
          v67 = v41;
          v68 = v42;
          sub_1ABEADE80((uint64_t *)&v62, (uint64_t)v61);
          sub_1ABEAE884((uint64_t)v61, (uint64_t)v69);
          sub_1ABEAE884((uint64_t)v69, (uint64_t)&v70);
          if (sub_1ABDFCCE8((uint64_t)&v70) != 1)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v38 = sub_1ABD831E0(0, v38[2] + 1, 1, v38);
            v45 = v38[2];
            v44 = v38[3];
            if (v45 >= v44 >> 1)
              v38 = sub_1ABD831E0((_QWORD *)(v44 > 1), v45 + 1, 1, v38);
            sub_1ABEAE884((uint64_t)v69, (uint64_t)v61);
            v38[2] = v45 + 1;
            sub_1ABD6414C((uint64_t)v61, (uint64_t)&v38[18 * v45 + 4]);
          }
          if (!v37)
            break;
          --v37;
          v36 += 80;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v49(v38, 0);

      swift_bridgeObjectRelease();
      sub_1ABEAE8E0(v50);
    }
  }
}

uint64_t sub_1ABEADE80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[18];
  uint64_t v69;
  uint64_t v70;
  id v71;

  v67 = a2;
  v61 = sub_1ABF306B8();
  MEMORY[0x1E0C80A78](v61);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v62 = (char *)&v49 - v5;
  v6 = sub_1ABF30760();
  v59 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v58 = (char *)&v49 - v9;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v3);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v49 - v11;
  v13 = sub_1ABF305D4();
  v66 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v57 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v63 = (char *)&v49 - v16;
  v17 = *a1;
  v54 = a1[1];
  v55 = v17;
  v18 = a1[3];
  v64 = a1[2];
  v65 = v18;
  v19 = a1[4];
  v52 = a1[5];
  v53 = v19;
  v20 = a1[6];
  v21 = a1[8];
  v50 = a1[7];
  v51 = v20;
  v22 = a1[9];
  v69 = v21;
  v70 = v22;
  v23 = qword_1EEC41090;
  sub_1ABF2FF5C();
  if (v23 != -1)
    swift_once();
  v24 = sub_1ABF302A4();
  __swift_project_value_buffer(v24, (uint64_t)qword_1EEC44908);
  sub_1ABD0E288();
  v25 = MEMORY[0x1E0DEA968];
  sub_1ABF31DB0();
  v27 = v26;
  swift_bridgeObjectRelease();
  if (!v27)
  {
    sub_1ABF31BE8();
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v32 + 56) = v25;
    *(_QWORD *)(v32 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v32 + 32) = v21;
    *(_QWORD *)(v32 + 40) = v22;
    sub_1ABD19560();
    sub_1ABF2FF5C();
    v31 = (void *)sub_1ABF31D44();
    goto LABEL_7;
  }
  sub_1ABF305BC();
  swift_bridgeObjectRelease();
  v28 = v66;
  v29 = v13;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v12, 1, v13) == 1)
  {
    sub_1ABD184CC((uint64_t)v12, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1ABF31BE8();
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)(v30 + 56) = v25;
    *(_QWORD *)(v30 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v30 + 32) = v21;
    *(_QWORD *)(v30 + 40) = v22;
    sub_1ABD19560();
    sub_1ABF2FF5C();
    v31 = (void *)sub_1ABF31D44();
LABEL_7:
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    sub_1ABDFDD08((uint64_t)&v69);
    return sub_1ABEAE884((uint64_t)&v69, v67);
  }
  v34 = v63;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v63, v12, v13);
  v69 = v64;
  v70 = v65;
  v35 = sub_1ABF2FF5C();
  MEMORY[0x1AF4364E8](v35);
  sub_1ABCFE1EC(qword_1ED3501E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0670], MEMORY[0x1E0CB0668]);
  v36 = (uint64_t)v62;
  v37 = v71;
  sub_1ABF3076C();
  if (v37)
  {

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v36, 1, 1, v60);
  }
  else
  {
    v39 = v59;
    v38 = v60;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v36, 0, 1, v60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v36, 1, v38) != 1)
    {
      v43 = v36;
      v44 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v58, v43, v38);
      (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v57, v34, v29);
      v45 = (uint64_t)v56;
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v56, v44, v38);
      v71 = objc_allocWithZone((Class)SCWebHeadline);
      v46 = v52;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v47 = v50;
      sub_1ABF2FF5C();
      v48 = sub_1ABE9CCBC(v57, v51, v47, v53, v46, v45);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v58, v38);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v34, v29);
      v68[0] = v48;
      sub_1ABD6442C((uint64_t)v68);
      sub_1ABD6414C((uint64_t)v68, (uint64_t)&v69);
      nullsub_2(&v69);
      return sub_1ABEAE884((uint64_t)&v69, v67);
    }
  }
  sub_1ABD184CC(v36, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1ABF31BE8();
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v40 + 56) = v25;
  *(_QWORD *)(v40 + 64) = sub_1ABD0F5C0();
  v41 = v65;
  *(_QWORD *)(v40 + 32) = v64;
  *(_QWORD *)(v40 + 40) = v41;
  sub_1ABD19560();
  sub_1ABF2FF5C();
  v42 = (void *)sub_1ABF31D44();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v66 + 8))(v34, v29);
  sub_1ABDFDD08((uint64_t)&v69);
  return sub_1ABEAE884((uint64_t)&v69, v67);
}

uint64_t sub_1ABEAE54C()
{
  uint64_t v0;

  v0 = sub_1ABF302A4();
  __swift_allocate_value_buffer(v0, qword_1EEC44908);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC44908);
  return sub_1ABD6AF54();
}

void sub_1ABEAE594()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABEAE5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1EEC44928);
  swift_bridgeObjectRelease();
  v1 = v0 + qword_1EEC44938;
  v2 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_1ABEAE630(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1EEC44928);
  swift_bridgeObjectRelease();
  v2 = a1 + qword_1EEC44938;
  v3 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_1ABEAE6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABEAD448((uint64_t)sub_1ABD6B260, v4);
  return swift_release();
}

uint64_t sub_1ABEAE704()
{
  return type metadata accessor for SDSNewsOperation();
}

uint64_t sub_1ABEAE70C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABEAE730()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABEAE754()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABEAE780(uint64_t a1)
{
  uint64_t v1;

  sub_1ABEAD8E0(a1, *(_QWORD *)(v1 + 16), *(void (**)(id, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1ABEAE78C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EEC44950)
  {
    v2 = sub_1ABE78BF8();
    v4 = type metadata accessor for SDSBaseOperationResponse(a1, (uint64_t)&type metadata for SDSNewsResponse, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EEC44950);
  }
}

uint64_t sub_1ABEAE7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5A54(0, &qword_1EEC44958, (uint64_t (*)(uint64_t))sub_1ABEAE78C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4B70]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABEAE840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABEAE78C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABEAE884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD04578(0, &qword_1EEC43288, (uint64_t)&type metadata for Headline, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABEAE8E0(uint64_t a1)
{
  uint64_t v2;

  sub_1ABEAE78C(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABEAE91C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABEAE958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1ABEAD698(a1, *(_QWORD *)(v2 + 16), a2);
}

id sub_1ABEAEA58(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  char *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char *v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  objc_super v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD v16[2];
  _BYTE v17[24];
  uint64_t v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = v1;
  v5 = (void *)sub_1ABF31780();
  v6 = objc_msgSend(a1, sel_decodeObjectForKey_, v5);

  if (v6)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_1ABD22B10((uint64_t)v16, (uint64_t)v17);
  if (!v18)
  {

    sub_1ABD6B430((uint64_t)v17);
LABEL_9:
    swift_deallocPartialClassInstance();
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_9;
  }
  v7 = v15;
  v8 = &v4[OBJC_IVAR___SCUpdateUserIDCommand_userID];
  *(_QWORD *)v8 = v14;
  *((_QWORD *)v8 + 1) = v7;
  v9 = (void *)sub_1ABF31780();
  v10 = objc_msgSend(a1, sel_decodeBoolForKey_, v9);

  v4[OBJC_IVAR___SCUpdateUserIDCommand_overwrite] = v10;
  v13.receiver = v4;
  v13.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v13, sel_init);

  return v11;
}

uint64_t sub_1ABEAEC60(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;

  v4 = objc_msgSend(a1, sel_encryptedValues);
  v5 = (void *)sub_1ABF31780();
  v6 = objc_msgSend(v4, sel_objectForKeyedSubscript_, v5);

  swift_unknownObjectRelease();
  if ((*(_BYTE *)(a2 + OBJC_IVAR___SCUpdateUserIDCommand_overwrite) & 1) != 0 || !v6)
  {
    v7 = objc_msgSend(a1, sel_encryptedValues);
    v8 = (void *)sub_1ABF31780();
    v9 = (void *)sub_1ABF31780();
    objc_msgSend(v7, sel_setObject_forKeyedSubscript_, v8, v9);
    swift_unknownObjectRelease();

  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1ABEAEEA0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1ABEAEEC4(void *a1)
{
  uint64_t v1;

  return sub_1ABEAEC60(a1, *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for YahooMultiQuoteOperation(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED351480);
}

uint64_t sub_1ABEAEEE0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF30B38();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

void sub_1ABEAEF94(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v3 = v2;
  v13 = *(_QWORD *)&v2[qword_1ED351460];
  swift_bridgeObjectRetain_n();
  sub_1ABF231D4(&v13);
  swift_bridgeObjectRelease();
  sub_1ABD165AC();
  sub_1ABCFE1EC((unint64_t *)&qword_1ED34DFE8, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0DEAF50]);
  v6 = sub_1ABF31B64();
  swift_release();
  v7 = v3;
  sub_1ABEB1AE0(v6);
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1ABF31114();
  sub_1ABEB1C44();
  sub_1ABF3109C();
  swift_bridgeObjectRelease();

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  sub_1ABF2FF68();
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  sub_1ABF2FF68();
  v12 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABEAF178(uint64_t a1, void (*a2)(uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = MEMORY[0x1E0DEE9E0];
  v7 = MEMORY[0x1E0DEE9E0];
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v4)
  {
    sub_1ABF2FF5C();
    type metadata accessor for YahooMultiQuoteItem(0);
    v5 = 0;
    do
    {
      ++v5;
      sub_1ABF2FF5C();
      sub_1ABF3103C();
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    v3 = v7;
  }
  a2(v3, 0);
  return swift_bridgeObjectRelease();
}

void sub_1ABEAF26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a5 + qword_1ED351468), *(_QWORD *)(a5 + qword_1ED351468 + 24));
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF366E0;
  *(_QWORD *)(inited + 32) = 0x7372656B636974;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  sub_1ABD165AC();
  sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCC0, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0DEAF20]);
  sub_1ABF2FF68();
  *(_QWORD *)(inited + 48) = sub_1ABF316E4();
  *(_QWORD *)(inited + 56) = v11;
  strcpy((char *)(inited + 64), "crossProduct");
  *(_BYTE *)(inited + 77) = 0;
  *(_WORD *)(inited + 78) = -5120;
  *(_QWORD *)(inited + 80) = 0x657A696D6974706FLL;
  *(_QWORD *)(inited + 88) = 0xE900000000000064;
  v12 = sub_1ABD031C0(inited);
  v13 = *(_QWORD *)(a5 + qword_1ED351470);
  v14 = *(_QWORD *)(a5 + qword_1ED351470 + 8);
  v16 = *(_QWORD *)(a5 + qword_1ED351470 + 16);
  v15 = *(_QWORD *)(a5 + qword_1ED351470 + 24);
  v17 = a5 + qword_1EEC44980;
  v18 = a5 + qword_1ED351478;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v19 = sub_1ABF22F24(2, 0xD000000000000013, 0x80000001ABF62000, v12, v13, v14, v16, v15, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v20;
  v21[3] = a6;
  v21[4] = sub_1ABD17050;
  v21[5] = v9;
  v21[6] = a3;
  v21[7] = a4;
  v22 = v19;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF30BF8();

  objc_msgSend(v22, sel_start);
}

void sub_1ABEAF514(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(void *);
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v33 = a7;
  v34 = a6;
  v35 = a5;
  v36 = a4;
  v10 = sub_1ABF306B8();
  MEMORY[0x1E0C80A78](v10);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - v12;
  v14 = *(void **)a1;
  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v37 = *(_QWORD *)(a1 + 16);
  v38 = v16;
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_BYTE *)(a1 + 48);
  swift_beginAccess();
  v20 = MEMORY[0x1AF4390D4](a2 + 16);
  if (v20)
  {
    v21 = (void *)v20;
    if ((v19 & 1) != 0)
    {
      v22 = v14;
      v34(v14);

      sub_1ABEB1D38(v14, v15, v37, v38, v17, v18, 1);
    }
    else
    {
      if (v18)
      {
        v39 = v17;
        v40 = v18;
        sub_1ABF2FF5C();
        swift_bridgeObjectRetain_n();
        v23 = (uint64_t)v14;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        v24 = sub_1ABF2FF5C();
        MEMORY[0x1AF4364E8](v24);
        sub_1ABCFE1EC(qword_1ED3501E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0670], MEMORY[0x1E0CB0668]);
        sub_1ABF3076C();
        v26 = sub_1ABF30760();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v13, 0, 1, v26);
      }
      else
      {
        v25 = sub_1ABF30760();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v13, 1, 1, v25);
        sub_1ABF2FF5C();
        v23 = (uint64_t)v14;
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      v27 = sub_1ABF26374(v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v42 = MEMORY[0x1E0DEE9E0];
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        sub_1ABF2FF5C();
        v29 = (uint64_t *)(v27 + 48);
        do
        {
          v30 = *(v29 - 1);
          v31 = *v29;
          v39 = *(v29 - 2);
          v40 = v30;
          v41 = v31;
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABF2FF5C();
          sub_1ABEAF8E0(&v42, &v39, a3, (uint64_t)v13);
          v29 += 3;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease_n();
        v32 = v42;
      }
      else
      {
        swift_bridgeObjectRelease();
        v32 = MEMORY[0x1E0DEE9E0];
      }
      sub_1ABEB04A8(v32);
      v36(v32);
      swift_bridgeObjectRelease();

      sub_1ABD184CC((uint64_t)v13, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    }
  }
}

uint64_t sub_1ABEAF8E0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  _BYTE *v113;
  BOOL v114;
  _BYTE *v115;
  BOOL v116;
  BOOL v117;
  BOOL v118;
  BOOL v119;
  BOOL v120;
  BOOL v121;
  BOOL v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  char v140;
  void *v141;
  uint64_t result;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  BOOL v189;
  _QWORD v190[46];
  uint64_t v191;

  v148 = a1;
  v149 = a4;
  v147 = type metadata accessor for YahooMultiQuoteItem(0);
  MEMORY[0x1E0C80A78](v147);
  v146 = (uint64_t)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v145 = (uint64_t)&v143 - v8;
  v144 = sub_1ABF306B8();
  MEMORY[0x1E0C80A78](v144);
  v143 = (char *)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v177 = (uint64_t)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v176 = (uint64_t)&v143 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v143 - v15;
  v17 = *a2;
  v18 = a2[1];
  v19 = a2[2];
  if (v17)
    v20 = v17;
  else
    v20 = MEMORY[0x1E0DEE9D8];
  sub_1ABF2FF5C();
  v21 = sub_1ABEC0714(v18);
  v22 = sub_1ABEC09A4(v19);
  v23 = *(_QWORD **)(a3 + 16);
  v151 = v20;
  v152 = v22;
  v175 = v16;
  v150 = v21;
  if (!v23)
  {
    v47 = v22;
    v185 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v48 = *(_QWORD *)(v20 + 16);
    if (!v48)
      goto LABEL_109;
    goto LABEL_22;
  }
  sub_1ABF2FF5C();
  v184 = a3;
  v24 = (uint64_t *)(a3 + 40);
  v25 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v27 = *(v24 - 1);
    v28 = *v24;
    v185 = v23;
    v186 = v27;
    v29 = sub_1ABF31810();
    v31 = v30;
    sub_1ABF2FF5C();
    v32 = v25;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v190[0] = v32;
    v35 = sub_1ABD00F9C(v29, v31);
    v36 = v32[2];
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
      break;
    v39 = v34;
    if (v32[3] >= v38)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v25 = (_QWORD *)v190[0];
        if ((v34 & 1) == 0)
          goto LABEL_15;
      }
      else
      {
        sub_1ABE6E690();
        v25 = (_QWORD *)v190[0];
        if ((v39 & 1) == 0)
          goto LABEL_15;
      }
    }
    else
    {
      sub_1ABD0EBF8(v38, isUniquelyReferenced_nonNull_native);
      v40 = sub_1ABD00F9C(v29, v31);
      if ((v39 & 1) != (v41 & 1))
        goto LABEL_112;
      v35 = v40;
      v25 = (_QWORD *)v190[0];
      if ((v39 & 1) == 0)
      {
LABEL_15:
        v25[(v35 >> 6) + 8] |= 1 << v35;
        v42 = (uint64_t *)(v25[6] + 16 * v35);
        *v42 = v29;
        v42[1] = v31;
        v43 = (uint64_t *)(v25[7] + 16 * v35);
        *v43 = v186;
        v43[1] = v28;
        v44 = v25[2];
        v45 = __OFADD__(v44, 1);
        v46 = v44 + 1;
        if (v45)
          goto LABEL_111;
        v25[2] = v46;
        sub_1ABF2FF5C();
        goto LABEL_7;
      }
    }
    v26 = (uint64_t *)(v25[7] + 16 * v35);
    swift_bridgeObjectRelease();
    *v26 = v186;
    v26[1] = v28;
LABEL_7:
    v24 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = (_QWORD *)((char *)v185 - 1);
    if (v185 == (_QWORD *)1)
    {
      v185 = v25;
      swift_bridgeObjectRelease();
      v20 = v151;
      v47 = v152;
      v21 = v150;
      v48 = *(_QWORD *)(v151 + 16);
      if (!v48)
      {
LABEL_109:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
LABEL_22:
      v49 = v48 - 1;
      v50 = 32;
      while (2)
      {
        v186 = v50;
        memcpy(v190, (const void *)(v20 + v50), 0x168uLL);
        v51 = sub_1ABF31810();
        v53 = v52;
        v54 = v185;
        if (v185[2])
        {
          v55 = v51;
          sub_1ABEB20A8(v190);
          v56 = sub_1ABD00F9C(v55, v53);
          if ((v57 & 1) != 0)
          {
            v174 = v49;
            v58 = v190[39];
            v59 = v190[40];
            v60 = (uint64_t *)(v54[7] + 16 * v56);
            v61 = v60[1];
            v172 = *v60;
            v173 = v61;
            sub_1ABF2FF5C();
            swift_bridgeObjectRelease();
            if (v59)
              v62 = v59;
            else
              v62 = 0xE000000000000000;
            if (*(_QWORD *)(v21 + 16))
            {
              if (v59)
                v63 = v58;
              else
                v63 = 0;
              sub_1ABF2FF5C();
              v64 = sub_1ABD00F9C(v63, v62);
              v155 = 0;
              v156 = 0;
              v65 = 0;
              v154 = 0;
              v181 = 0;
              v182 = 0;
              v178 = 0;
              v66 = 0;
              v184 = 0;
              if ((v67 & 1) != 0)
              {
                v68 = *(_QWORD *)(v21 + 56) + 72 * v64;
                v69 = *(_QWORD *)v68;
                v65 = *(_QWORD *)(v68 + 8);
                v70 = *(_QWORD *)(v68 + 24);
                v155 = *(_QWORD *)(v68 + 16);
                v156 = v69;
                v182 = *(unsigned __int8 *)(v68 + 32);
                v71 = *(_QWORD *)(v68 + 48);
                v178 = *(_QWORD *)(v68 + 40);
                v72 = *(_QWORD *)(v68 + 64);
                v181 = *(_QWORD *)(v68 + 56);
                v184 = v72;
                sub_1ABF2FF5C();
                sub_1ABF2FF5C();
                v154 = v70;
                sub_1ABF2FF5C();
                v66 = v71;
                goto LABEL_39;
              }
            }
            else
            {
              v155 = 0;
              v156 = 0;
              v65 = 0;
              v154 = 0;
              v181 = 0;
              v182 = 0;
              v178 = 0;
              v66 = 0;
              v184 = 0;
LABEL_39:
              sub_1ABF2FF5C();
            }
            swift_bridgeObjectRelease();
            v74 = v190[2];
            v171 = v190[4];
            if (v190[4])
            {
              v75 = v190[7];
              v76 = v190[8];
              sub_1ABF2FF5C();
              if (!*(_QWORD *)(v47 + 16))
              {
LABEL_46:
                v80 = 0;
                v180 = 0;
                goto LABEL_47;
              }
            }
            else
            {
              v75 = 0;
              v76 = 0xE000000000000000;
              if (!*(_QWORD *)(v47 + 16))
                goto LABEL_46;
            }
            v77 = sub_1ABD00F9C(v75, v76);
            if ((v78 & 1) == 0)
              goto LABEL_46;
            v79 = *(_QWORD *)(v47 + 56) + 24 * v77;
            v80 = *(_QWORD *)(v79 + 8);
            v180 = *(unsigned __int8 *)(v79 + 16);
            sub_1ABF2FF5C();
LABEL_47:
            swift_bridgeObjectRelease();
            v81 = v190[23];
            v183 = v190[25];
            if (v190[25])
            {
              v82 = v190[29];
              v83 = v190[28];
              sub_1ABF2FF5C();
              if (!*(_QWORD *)(v47 + 16))
              {
LABEL_53:
                v87 = 0;
                v179 = 0;
                goto LABEL_54;
              }
            }
            else
            {
              v83 = 0;
              v82 = 0xE000000000000000;
              if (!*(_QWORD *)(v47 + 16))
                goto LABEL_53;
            }
            v84 = sub_1ABD00F9C(v83, v82);
            if ((v85 & 1) == 0)
              goto LABEL_53;
            v86 = *(_QWORD *)(v47 + 56) + 24 * v84;
            v87 = *(_QWORD *)(v86 + 8);
            v179 = *(unsigned __int8 *)(v86 + 16);
            sub_1ABF2FF5C();
LABEL_54:
            swift_bridgeObjectRelease();
            if (v65 && v184)
            {
              v187 = v181;
              v188 = v184;
              v88 = sub_1ABF2FF5C();
              MEMORY[0x1AF4364E8](v88);
              sub_1ABCFE1EC(qword_1ED3501E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0670], MEMORY[0x1E0CB0668]);
              v89 = (uint64_t)v175;
              v90 = v153;
              sub_1ABF3076C();
              if (v90)
              {

                v91 = sub_1ABF30760();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v89, 1, 1, v91);
                v153 = 0;
              }
              else
              {
                v153 = 0;
                v93 = sub_1ABF30760();
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v89, 0, 1, v93);
              }
            }
            else
            {
              v92 = sub_1ABF30760();
              v89 = (uint64_t)v175;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v175, 1, 1, v92);
            }
            v94 = v171;
            sub_1ABCFF5B4(v149, v176);
            if (v94)
              v95 = v74;
            else
              v95 = 0;
            v159 = v190[11];
            if (v190[11])
              v96 = v190[9];
            else
              v96 = 0;
            v158 = v190[18];
            if (v190[18])
              v97 = v190[16];
            else
              v97 = 0;
            if (v183)
              v98 = v81;
            else
              v98 = 0;
            v99 = v190[30];
            v157 = v190[32];
            if (!v190[32])
              v99 = 0;
            v166 = v99;
            v167 = v98;
            v163 = v96;
            v164 = v95;
            v162 = v97;
            v100 = v94;
            v101 = v89;
            if (v65)
              v165 = byte_1ABF4A34A[(char)v182];
            else
              v165 = 0;
            v171 = v190[43];
            v102 = v190[44];
            v169 = v190[41];
            v103 = v190[42];
            v161 = v190[37];
            v104 = v190[38];
            sub_1ABCFF5B4(v101, v177);
            v170 = v102;
            v168 = v103;
            v160 = v104;
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            sub_1ABF2FF5C();
            if (v80)
              swift_bridgeObjectRelease();
            else
              v180 = 7;
            v105 = v178;
            v106 = v100;
            if (v87)
            {
              swift_bridgeObjectRelease();
              if (!v65)
              {
LABEL_85:
                v107 = swift_bridgeObjectRelease();
                v105 = 0;
                v66 = 0xE000000000000000;
                goto LABEL_86;
              }
            }
            else
            {
              v179 = 7;
              if (!v65)
                goto LABEL_85;
            }
            sub_1ABF2FF5C();
            v107 = sub_1ABEB2534(v156, v65);
            if (!v66)
              goto LABEL_85;
LABEL_86:
            v191 = 0;
            MEMORY[0x1E0C80A78](v107);
            if ((v66 & 0x1000000000000000) != 0 || !(v66 & 0x2000000000000000 | v105 & 0x1000000000000000))
            {
              v141 = v153;
              sub_1ABF31E7C();
              v153 = v141;
              swift_bridgeObjectRelease();
              v109 = v158;
              v110 = v159;
              v111 = v157;
            }
            else if ((v66 & 0x2000000000000000) != 0)
            {
              v187 = v105;
              v188 = v66 & 0xFFFFFFFFFFFFFFLL;
              v116 = (v105 > 0x20u || ((0x100003E01uLL >> v105) & 1) == 0)
                  && (v115 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
                  && *v115 == 0;
              v109 = v158;
              v110 = v159;
              v111 = v157;
              v189 = v116;
              swift_bridgeObjectRelease();
            }
            else
            {
              if ((v105 & 0x1000000000000000) != 0)
                v108 = (unsigned __int8 *)((v66 & 0xFFFFFFFFFFFFFFFLL) + 32);
              else
                v108 = (unsigned __int8 *)sub_1ABF31EE8();
              v109 = v158;
              v110 = v159;
              v111 = v157;
              v112 = *v108;
              v114 = (v112 >= 0x21 || ((0x100003E01uLL >> v112) & 1) == 0)
                  && (v113 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
                  && *v113 == 0;
              v189 = v114;
              swift_bridgeObjectRelease();
            }
            v117 = v111 == 0;
            v118 = v109 == 0;
            v119 = v110 == 0;
            v120 = v183 == 0;
            v121 = v106 == 0;
            v122 = v189;
            v123 = v191;
            if (!v189)
              v123 = 0;
            v184 = v123;
            v124 = v145;
            sub_1ABD241F8(v176, v145);
            v125 = (int *)v147;
            v126 = v124 + *(int *)(v147 + 20);
            *(_QWORD *)v126 = v164;
            *(_BYTE *)(v126 + 8) = v121;
            v127 = v124 + v125[6];
            *(_QWORD *)v127 = v163;
            *(_BYTE *)(v127 + 8) = v119;
            v128 = v124 + v125[7];
            *(_QWORD *)v128 = v162;
            *(_BYTE *)(v128 + 8) = v118;
            v129 = v124 + v125[8];
            *(_QWORD *)v129 = v167;
            *(_BYTE *)(v129 + 8) = v120;
            v130 = v124 + v125[9];
            *(_QWORD *)v130 = v166;
            *(_BYTE *)(v130 + 8) = v117;
            v131 = (_QWORD *)(v124 + v125[10]);
            v132 = v160;
            *v131 = v161;
            v131[1] = v132;
            *(_BYTE *)(v124 + v125[11]) = v165;
            sub_1ABD241F8(v177, v124 + v125[12]);
            sub_1ABEB2298(v190);
            v133 = (_QWORD *)(v124 + v125[13]);
            v134 = v168;
            *v133 = v169;
            v133[1] = v134;
            v135 = (_QWORD *)(v124 + v125[14]);
            v136 = v170;
            *v135 = v171;
            v135[1] = v136;
            *(_BYTE *)(v124 + v125[15]) = v180;
            *(_BYTE *)(v124 + v125[16]) = v179;
            v137 = v124 + v125[17];
            *(_QWORD *)v137 = v184;
            *(_BYTE *)(v137 + 8) = !v122;
            v138 = v146;
            sub_1ABEB24F0(v124, v146);
            v139 = v148;
            v140 = swift_isUniquelyReferenced_nonNull_native();
            v187 = *v139;
            *v139 = 0x8000000000000000;
            sub_1ABDF1678(v138, v172, v173, v140);
            *v139 = v187;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1ABD184CC((uint64_t)v175, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
            v20 = v151;
            v47 = v152;
            v21 = v150;
            v49 = v174;
            v73 = v186;
            if (!v174)
              goto LABEL_109;
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_1ABEB2298(v190);
            v73 = v186;
            if (!v49)
              goto LABEL_109;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          v73 = v186;
          if (!v49)
            goto LABEL_109;
        }
        --v49;
        v50 = v73 + 360;
        continue;
      }
    }
  }
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABEB04A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSString *v11;
  Class v12;

  swift_getObjectType();
  sub_1ABF2FF5C();
  v2 = sub_1ABF2FF5C();
  sub_1ABEB1D90(v2, a1);
  v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + 16))
  {
    sub_1ABF31BE8();
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1ABF366C0;
    v6 = MEMORY[0x1E0DEA968];
    v7 = MEMORY[0x1AF437C34](v4, MEMORY[0x1E0DEA968]);
    v9 = v8;
    *(_QWORD *)(v5 + 56) = v6;
    *(_QWORD *)(v5 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v5 + 32) = v7;
    *(_QWORD *)(v5 + 40) = v9;
    sub_1ABD19560();
    v10 = (void *)sub_1ABF31D44();
    sub_1ABF31318();
    swift_bridgeObjectRelease();

    v11 = (NSString *)sub_1ABF31780();
    v12 = NSClassFromString(v11);

    if (!v12)
    {
      if (qword_1ED34FA30 != -1)
        swift_once();
      sub_1ABCFE1EC(&qword_1EEC44988, type metadata accessor for YahooMultiQuoteOperation, (uint64_t)&unk_1ABF4A308);
      sub_1ABF30970();
      __asm { BR              X10 }
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_1ABEB07F8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABEB0824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED351468);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_1EEC44980;
  v2 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_1ED351478;
  v4 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t sub_1ABEB08C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_1ED351468);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + qword_1EEC44980;
  v3 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = a1 + qword_1ED351478;
  v5 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1ABEB0970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF68();
  sub_1ABEAEF94((uint64_t)sub_1ABD6B260, v4);
  return swift_release();
}

uint64_t sub_1ABEB09D0()
{
  return type metadata accessor for YahooMultiQuoteOperation(0);
}

uint64_t *sub_1ABEB09D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = sub_1ABF30760();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = a3[5];
    v13 = a3[6];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = (char *)a1 + v13;
    v17 = (char *)a2 + v13;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = a3[7];
    v19 = a3[8];
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = v21[8];
    v22 = (char *)a1 + v19;
    v23 = (char *)a2 + v19;
    v22[8] = v23[8];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v24 = a3[9];
    v25 = a3[10];
    v26 = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v26[8] = v27[8];
    v28 = (uint64_t *)((char *)a1 + v25);
    v29 = (uint64_t *)((char *)a2 + v25);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    sub_1ABF2FF5C();
    if (v9((uint64_t *)v33, 1, v7))
    {
      sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v32, v33, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v32, 0, 1, v7);
    }
    v35 = a3[13];
    v36 = a3[14];
    v37 = (uint64_t *)((char *)a1 + v35);
    v38 = (uint64_t *)((char *)a2 + v35);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
    v40 = (uint64_t *)((char *)a1 + v36);
    v41 = (uint64_t *)((char *)a2 + v36);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *((_BYTE *)a1 + v43) = *((_BYTE *)a2 + v43);
    v44 = a3[17];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    *(_QWORD *)v45 = *(_QWORD *)v46;
    v45[8] = v46[8];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  return a1;
}

uint64_t sub_1ABEB0C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v4 = sub_1ABF30760();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v7 = a1 + *(int *)(a2 + 48);
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_1ABEB0D14(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;

  v6 = sub_1ABF30760();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = a3[6];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = a3[7];
  v17 = a3[8];
  v18 = &a1[v16];
  v19 = &a2[v16];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = &a1[v17];
  v21 = &a2[v17];
  v20[8] = v21[8];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = a3[9];
  v23 = a3[10];
  v24 = &a1[v22];
  v25 = &a2[v22];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  v26 = &a1[v23];
  v27 = &a2[v23];
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  v29 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  v30 = &a1[v29];
  v31 = &a2[v29];
  sub_1ABF2FF5C();
  if (v8(v31, 1, v6))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v30, v31, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v30, 0, 1, v6);
  }
  v33 = a3[13];
  v34 = a3[14];
  v35 = &a1[v33];
  v36 = &a2[v33];
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = v37;
  v38 = &a1[v34];
  v39 = &a2[v34];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v41 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  a1[v41] = a2[v41];
  v42 = a3[17];
  v43 = &a1[v42];
  v44 = &a2[v42];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v43[8] = v44[8];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

char *sub_1ABEB0F64(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;

  v6 = sub_1ABF30760();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_QWORD *)v17 = v19;
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *(_QWORD *)v21 = v23;
  v24 = a3[8];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = *(_QWORD *)v26;
  v25[8] = v26[8];
  *(_QWORD *)v25 = v27;
  v28 = a3[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = *(_QWORD *)v30;
  v29[8] = v30[8];
  *(_QWORD *)v29 = v31;
  v32 = a3[10];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[a3[11]] = a2[a3[11]];
  v35 = a3[12];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = v8(&a1[v35], 1, v6);
  v39 = v8(v37, 1, v6);
  if (!v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v36, v37, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v36, v6);
    goto LABEL_12;
  }
  if (v39)
  {
LABEL_12:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v36, v37, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v36, 0, 1, v6);
LABEL_13:
  v41 = a3[13];
  v42 = &a1[v41];
  v43 = &a2[v41];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v44 = a3[14];
  v45 = &a1[v44];
  v46 = &a2[v44];
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[a3[15]] = a2[a3[15]];
  a1[a3[16]] = a2[a3[16]];
  v47 = a3[17];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = *(_QWORD *)v49;
  v48[8] = v49[8];
  *(_QWORD *)v48 = v50;
  return a1;
}

char *sub_1ABEB1294(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = sub_1ABF30760();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = a3[5];
  v11 = a3[6];
  v12 = &a1[v10];
  v13 = &a2[v10];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = &a1[v11];
  v15 = &a2[v11];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = a3[7];
  v17 = a3[8];
  v18 = &a1[v16];
  v19 = &a2[v16];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  v20 = &a1[v17];
  v21 = &a2[v17];
  v20[8] = v21[8];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = a3[9];
  v23 = a3[10];
  v24 = &a1[v22];
  v25 = &a2[v22];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  *(_OWORD *)&a1[v23] = *(_OWORD *)&a2[v23];
  v26 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  v27 = &a1[v26];
  v28 = &a2[v26];
  if (v8(&a2[v26], 1, v6))
  {
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v28, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  }
  v30 = a3[14];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  *(_OWORD *)&a1[v30] = *(_OWORD *)&a2[v30];
  v31 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  a1[v31] = a2[v31];
  v32 = a3[17];
  v33 = &a1[v32];
  v34 = &a2[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v34[8];
  return a1;
}

char *sub_1ABEB14BC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;

  v6 = sub_1ABF30760();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = a3[6];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = &a1[v13];
  v17 = &a2[v13];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = a3[7];
  v19 = a3[8];
  v20 = &a1[v18];
  v21 = &a2[v18];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = &a1[v19];
  v23 = &a2[v19];
  v22[8] = v23[8];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = a3[9];
  v25 = a3[10];
  v26 = &a1[v24];
  v27 = &a2[v24];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = &a1[v25];
  v29 = &a2[v25];
  v31 = *(_QWORD *)v29;
  v30 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  v32 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = v8(&a1[v32], 1, v6);
  v36 = v8(v34, 1, v6);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v33, v34, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v33, v6);
    goto LABEL_12;
  }
  if (v36)
  {
LABEL_12:
    sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v33, v34, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
LABEL_13:
  v38 = a3[13];
  v39 = &a1[v38];
  v40 = &a2[v38];
  v42 = *(_QWORD *)v40;
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = v42;
  *((_QWORD *)v39 + 1) = v41;
  swift_bridgeObjectRelease();
  v43 = a3[14];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v47 = *(_QWORD *)v45;
  v46 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  v48 = a3[16];
  a1[a3[15]] = a2[a3[15]];
  a1[v48] = a2[v48];
  v49 = a3[17];
  v50 = &a1[v49];
  v51 = &a2[v49];
  *(_QWORD *)v50 = *(_QWORD *)v51;
  v50[8] = v51[8];
  return a1;
}

uint64_t sub_1ABEB17A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABEB17B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 40) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1ABEB1858()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1ABEB1864(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 40) + 8) = a2;
}

uint64_t type metadata accessor for YahooMultiQuoteItem(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED351490);
}

void sub_1ABEB190C()
{
  unint64_t v0;

  sub_1ABCF5A54(319, (unint64_t *)&qword_1ED34EAB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1ABEB19C4()
{
  swift_release();
  return swift_deallocObject();
}

_BYTE *sub_1ABEB19E8@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1ABEB1A50(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  char v4;
  uint64_t var2;

  if (a1)
  {
    a3(&var2);
    if (!v3)
      v4 = var2;
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3)
      v4 = BYTE1(var2);
  }
  return v4 & 1;
}

_QWORD *sub_1ABEB1AA4@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1ABEB1AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    for (i = (uint64_t *)(a1 + 32); ; ++i)
    {
      v8 = *i;
      swift_bridgeObjectRetain_n();
      v7 = sub_1ABF231D4(&v8);
      if (v2)
        break;
      v2 = 0;
      MEMORY[0x1E0C80A78](v7);
      sub_1ABCF5A54(0, (unint64_t *)&qword_1ED351450, (uint64_t (*)(uint64_t))sub_1ABEB1C44, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      sub_1ABF31228();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
      if (!--v4)
        return v9;
    }
    result = swift_release();
    __break(1u);
  }
  return result;
}

void sub_1ABEB1C44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED351458)
  {
    type metadata accessor for YahooMultiQuoteItem(255);
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED351458);
  }
}

uint64_t sub_1ABEB1CA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABEAF178(a1, *(void (**)(uint64_t, _QWORD))(v1 + 16));
}

void sub_1ABEB1CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1ABEAF26C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABEB1CC8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABEB1CEC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABEB1D28(uint64_t a1)
{
  uint64_t v1;

  sub_1ABEAF514(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(void *))(v1 + 48), *(_QWORD *)(v1 + 56));
}

void sub_1ABEB1D38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1ABEB1D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1ABCF5A54(0, &qword_1ED3511E0, type metadata accessor for YahooMultiQuoteItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - v5;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = 0;
    v9 = a1 + 40;
    v10 = -(uint64_t)v7;
    v36 = MEMORY[0x1E0DEE9D8];
    v37 = (char *)&v33 - v5;
    v34 = a1 + 40;
    v35 = v7;
    do
    {
      if (v8 <= v7)
        v11 = v7;
      else
        v11 = v8;
      v39 = -(uint64_t)v11;
      for (i = (uint64_t *)(v9 + 16 * v8++); ; i += 2)
      {
        if (v39 + v8 == 1)
        {
          __break(1u);
          return;
        }
        v13 = *(i - 1);
        v14 = *i;
        v15 = *(_QWORD *)(a2 + 16);
        v38 = v13;
        if (!v15)
          break;
        swift_bridgeObjectRetain_n();
        v16 = sub_1ABD00F9C(v13, v14);
        if ((v17 & 1) != 0)
        {
          v18 = v16;
          v19 = *(_QWORD *)(a2 + 56);
          v20 = type metadata accessor for YahooMultiQuoteItem(0);
          v21 = v10;
          v22 = a2;
          v23 = *(_QWORD *)(v20 - 8);
          v24 = v19 + *(_QWORD *)(v23 + 72) * v18;
          v6 = v37;
          sub_1ABEB2064(v24, (uint64_t)v37);
          v25 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
          a2 = v22;
          v10 = v21;
          v25(v6, 0, 1, v20);
        }
        else
        {
          v20 = type metadata accessor for YahooMultiQuoteItem(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 1, 1, v20);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for YahooMultiQuoteItem(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v6, 1, v20) == 1)
          goto LABEL_16;
        sub_1ABD184CC((uint64_t)v6, &qword_1ED3511E0, type metadata accessor for YahooMultiQuoteItem);
        swift_bridgeObjectRelease();
        ++v8;
        if (v10 + v8 == 1)
          return;
      }
      v26 = type metadata accessor for YahooMultiQuoteItem(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 1, 1, v26);
      sub_1ABF2FF5C();
LABEL_16:
      sub_1ABD184CC((uint64_t)v6, &qword_1ED3511E0, type metadata accessor for YahooMultiQuoteItem);
      v27 = v36;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v29 = v27;
      v40 = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1ABD16414(0, *(_QWORD *)(v27 + 16) + 1, 1);
        v29 = v40;
      }
      v31 = *(_QWORD *)(v29 + 16);
      v30 = *(_QWORD *)(v29 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1ABD16414(v30 > 1, v31 + 1, 1);
        v29 = v40;
      }
      *(_QWORD *)(v29 + 16) = v31 + 1;
      v36 = v29;
      v32 = v29 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v38;
      *(_QWORD *)(v32 + 40) = v14;
      v9 = v34;
      v7 = v35;
    }
    while (v10 + v8);
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9D8];
  }
}

uint64_t sub_1ABEB2064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YahooMultiQuoteItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1ABEB20A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[9];
  v6 = a1[10];
  v8 = a1[11];
  v10 = a1[17];
  v11 = a1[16];
  v9 = a1[18];
  v13 = a1[24];
  v14 = a1[23];
  v12 = a1[25];
  v16 = a1[31];
  v17 = a1[30];
  v15 = a1[32];
  sub_1ABF2FF5C();
  sub_1ABEB225C(v2, v3, v4);
  sub_1ABEB225C(v5, v6, v8);
  sub_1ABEB225C(v11, v10, v9);
  sub_1ABEB225C(v14, v13, v12);
  sub_1ABEB225C(v17, v16, v15);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABEB225C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

_QWORD *sub_1ABEB2298(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[9];
  v6 = a1[10];
  v8 = a1[11];
  v10 = a1[17];
  v11 = a1[16];
  v9 = a1[18];
  v13 = a1[24];
  v14 = a1[23];
  v12 = a1[25];
  v16 = a1[31];
  v17 = a1[30];
  v15 = a1[32];
  swift_bridgeObjectRelease();
  sub_1ABEB2448(v2, v3, v4);
  sub_1ABEB2448(v5, v6, v8);
  sub_1ABEB2448(v11, v10, v9);
  sub_1ABEB2448(v14, v13, v12);
  sub_1ABEB2448(v17, v16, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABEB2448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_BYTE *sub_1ABEB2484@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1ABEB24F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YahooMultiQuoteItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABEB2534(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for YahooQuoteDetailService()
{
  return objc_opt_self();
}

uint64_t sub_1ABEB25B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  _BYTE v39[24];
  uint64_t v40;

  v7 = sub_1ABF30B38();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_1ABF30760();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1ABD07E04(v3 + 16, (uint64_t)v39);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  v15 = (void *)objc_opt_self();
  sub_1ABF2FF5C();
  v16 = objc_msgSend(v15, sel_sharedPreferences);
  v17 = v16;
  if (!v16)
  {
    v22 = 0xE500000000000000;
    v20 = 0x73752D6E65;
LABEL_8:

    v27 = 0xE200000000000000;
    v25 = 21333;
    goto LABEL_9;
  }
  v18 = objc_msgSend(v16, sel_stocksLanguageCode);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1ABF317A4();
    v22 = v21;

  }
  else
  {
    v22 = 0xE500000000000000;
    v20 = 0x73752D6E65;
  }
  v23 = objc_msgSend(v17, sel_stocksCountryCode);
  if (!v23)
    goto LABEL_8;
  v24 = v23;
  v25 = sub_1ABF317A4();
  v27 = v26;

LABEL_9:
  v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
  v29 = MEMORY[0x1E0C80A78](v28);
  v31 = (uint64_t *)&v39[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v32 + 16))(v31, v29);
  v33 = sub_1ABDFED84(a1, *v31, v20, v22, v25, v27, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  sub_1ABEB3200();
  sub_1ABF30BE0();
  v34 = v33;
  sub_1ABF30BA4();
  sub_1ABF31258();
  swift_release();
  v35 = (void *)sub_1ABF31114();
  sub_1ABDF1B70(0, (unint64_t *)&qword_1ED34DE08, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  v36 = sub_1ABF31180();

  swift_release();
  return v36;
}

uint64_t sub_1ABEB28A0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1ABEB2F28(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1ABEB28C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;

  v76 = a2;
  v3 = sub_1ABF30760();
  v4 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v75 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, &qword_1ED34CD08, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v7);
  v74 = (char *)&v48 - v8;
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v9);
  v73 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v72 = (uint64_t)&v48 - v12;
  v13 = sub_1ABF306B8();
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED34EAB0, v4);
  MEMORY[0x1E0C80A78](v15);
  v78 = (uint64_t)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v48 - v18;
  MEMORY[0x1E0C80A78](v20);
  v77 = (char *)&v48 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v48 - v23;
  v25 = (int *)type metadata accessor for YahooQuoteDetailItem(0);
  v26 = (uint64_t *)(a1 + v25[22]);
  v27 = v26[1];
  if (v27)
  {
    v79 = *v26;
    v80 = v27;
    v28 = sub_1ABF2FF5C();
    MEMORY[0x1AF4364E8](v28);
    sub_1ABEB3330();
    v29 = v81;
    sub_1ABF3076C();
    v30 = v29;
    if (v29)
    {

      v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v31(v24, 1, 1, v3);
      v30 = 0;
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v31(v24, 0, 1, v3);
    }
  }
  else
  {
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v31(v24, 1, 1, v3);
    v30 = v81;
  }
  v32 = (uint64_t *)(a1 + v25[23]);
  v33 = v32[1];
  if (v33)
  {
    v79 = *v32;
    v80 = v33;
    v34 = sub_1ABF2FF5C();
    MEMORY[0x1AF4364E8](v34);
    sub_1ABEB3330();
    sub_1ABF3076C();
    if (v30)
    {

      v81 = 0;
      v35 = 1;
    }
    else
    {
      v35 = 0;
      v81 = 0;
    }
  }
  else
  {
    v35 = 1;
    v81 = v30;
  }
  v36 = (uint64_t)v77;
  v31(v77, v35, 1, v3);
  v71 = *(_QWORD *)(a1 + 32);
  v70 = *(unsigned __int8 *)(a1 + 40);
  v69 = *(_QWORD *)(a1 + 48);
  v68 = *(unsigned __int8 *)(a1 + 56);
  v67 = *(_QWORD *)(a1 + 64);
  v66 = *(unsigned __int8 *)(a1 + 72);
  v65 = *(_QWORD *)(a1 + 80);
  v64 = *(unsigned __int8 *)(a1 + 88);
  v63 = *(_QWORD *)(a1 + 96);
  v62 = *(unsigned __int8 *)(a1 + 104);
  v61 = *(_QWORD *)(a1 + 112);
  v60 = *(unsigned __int8 *)(a1 + 120);
  v59 = *(_QWORD *)(a1 + 128);
  v58 = *(unsigned __int8 *)(a1 + 136);
  v57 = *(_QWORD *)(a1 + 144);
  v56 = *(unsigned __int8 *)(a1 + 152);
  v55 = *(_QWORD *)(a1 + 160);
  v54 = *(unsigned __int8 *)(a1 + 168);
  v53 = *(_QWORD *)(a1 + 176);
  v52 = *(unsigned __int8 *)(a1 + 184);
  v51 = *(_QWORD *)(a1 + 192);
  v50 = *(unsigned __int8 *)(a1 + 200);
  v37 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1ABCF57B8((uint64_t)v24, (uint64_t)v19, (unint64_t *)&qword_1ED34EAB0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1ABCF57B8(v36, v78, (unint64_t *)&qword_1ED34EAB0, v37);
  v38 = *(_QWORD *)(a1 + 216);
  v49 = *(_QWORD *)(a1 + 208);
  v39 = a1 + v25[18];
  v40 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v48 = v19;
  v41 = v72;
  sub_1ABCF57B8(v39, v72, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v42 = (uint64_t)v24;
  v43 = v73;
  sub_1ABCF57B8(a1 + v25[19], v73, (unint64_t *)&qword_1ED350380, v40);
  v44 = sub_1ABF3094C();
  v45 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v74, 1, 1, v44);
  sub_1ABF2FF5C();
  v46 = (uint64_t)v75;
  sub_1ABF30754();
  sub_1ABCFF610(v36);
  sub_1ABCFF610(v42);
  return QuoteDetail.init(dayOpenPrice:dayLowPrice:dayHighPrice:yearLowPrice:yearHighPrice:dividendYield:volume:averageVolume:priceEarningsRatio:beta:earningsPerShare:earningsStartDate:earningsEndDate:currencyCode:detailsURL:keyStatisticsURL:marketTimeZone:fundAssetClass:fundCategory:fundFocus:fundNiche:fundRegion:fundTopHoldings:fundSectors:dateLastRefreshed:)(v71, v70, v69, v68, v67, v66, v65, v64, v76, v63, v62, v61, v60, v59, v58, v57, v56, v55, v54,
           v53,
           v52,
           v51,
           v50,
           (uint64_t)v48,
           v78,
           v49,
           v38,
           v41,
           v43,
           v45,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           MEMORY[0x1E0DEE9D8],
           MEMORY[0x1E0DEE9D8],
           v46);
}

uint64_t sub_1ABEB2F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABEB25B0(a1, a2, a3);
}

uint64_t sub_1ABEB2F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  BOOL v20;
  unint64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  v3 = type metadata accessor for QuoteDetail();
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for YahooQuoteDetailItem(0);
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABDF1B70(0, (unint64_t *)&unk_1ED34E180, (uint64_t (*)(uint64_t))type metadata accessor for QuoteDetail, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  result = sub_1ABF31FF0();
  v9 = (_QWORD *)result;
  v10 = 0;
  v35 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v12 = a1 + 64;
  v11 = v13;
  v14 = 1 << *(_BYTE *)(v12 - 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v11;
  v29 = v12;
  v30 = (unint64_t)(v14 + 63) >> 6;
  v31 = result + 64;
  v17 = (uint64_t)v34;
  if ((v15 & v11) == 0)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v18 | (v10 << 6); ; i = __clz(__rbit64(v21)) + (v10 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * i);
    v24 = *v23;
    v25 = v23[1];
    sub_1ABEB326C(*(_QWORD *)(v35 + 56) + *(_QWORD *)(v33 + 72) * i, (uint64_t)v7);
    sub_1ABF2FF5C();
    sub_1ABEB28C8((uint64_t)v7, v17);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1ABEB32B0((uint64_t)v7);
      return (uint64_t)v9;
    }
    sub_1ABEB32B0((uint64_t)v7);
    *(_QWORD *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = (_QWORD *)(v9[6] + 16 * i);
    *v26 = v24;
    v26[1] = v25;
    result = sub_1ABEB32EC(v17, v9[7] + *(_QWORD *)(v32 + 72) * i);
    v27 = v9[2];
    v20 = __OFADD__(v27, 1);
    v28 = v27 + 1;
    if (v20)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v9[2] = v28;
    if (v16)
      goto LABEL_4;
LABEL_5:
    v20 = __OFADD__(v10++, 1);
    if (v20)
      goto LABEL_27;
    if (v10 >= v30)
      return (uint64_t)v9;
    v21 = *(_QWORD *)(v29 + 8 * v10);
    if (!v21)
      break;
LABEL_15:
    v16 = (v21 - 1) & v21;
  }
  v22 = v10 + 1;
  if (v10 + 1 >= v30)
    return (uint64_t)v9;
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
    goto LABEL_14;
  v22 = v10 + 2;
  if (v10 + 2 >= v30)
    return (uint64_t)v9;
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
    goto LABEL_14;
  v22 = v10 + 3;
  if (v10 + 3 >= v30)
    return (uint64_t)v9;
  v21 = *(_QWORD *)(v29 + 8 * v22);
  if (v21)
  {
LABEL_14:
    v10 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v30)
      return (uint64_t)v9;
    v21 = *(_QWORD *)(v29 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1ABEB3200()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3514A0)
  {
    sub_1ABDF1B70(255, (unint64_t *)&qword_1ED3514A8, type metadata accessor for YahooQuoteDetailItem, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3514A0);
  }
}

uint64_t sub_1ABEB326C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YahooQuoteDetailItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABEB32B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for YahooQuoteDetailItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABEB32EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for QuoteDetail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ABEB3330()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3501E0[0];
  if (!qword_1ED3501E0[0])
  {
    v1 = sub_1ABF306B8();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0CB0668], v1);
    atomic_store(result, qword_1ED3501E0);
  }
  return result;
}

uint64_t sub_1ABEB3378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[3136];

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34EA48, type metadata accessor for RawAttributionSourceLogo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v29[-v4];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v29[-v7];
  v9 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1ABF31774();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = &v29[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v16 = &v29[-v15];
  sub_1ABF31738();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v14, v16, v10);
  if (qword_1ED34FD78 != -1)
    swift_once();
  v17 = (id)qword_1ED368428;
  sub_1ABF30844();
  v18 = sub_1ABF317EC();
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v16, v10);
  sub_1ABD43A64();
  sub_1ABF305BC();
  swift_bridgeObjectRelease();
  sub_1ABDD43E0(v5);
  v21 = type metadata accessor for RawAttributionSourceLogo(0);
  v22 = (uint64_t)v8;
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v23(v5, 0, 1, v21);
  v24 = type metadata accessor for RawAttributionSource(0);
  v25 = (uint64_t)a1 + *(int *)(v24 + 20);
  v26 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = (uint64_t)a1 + *(int *)(v24 + 24);
  v23((char *)v27, 1, 1, v21);
  *a1 = v18;
  a1[1] = v20;
  sub_1ABDE560C(v22, v25, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  return sub_1ABDE560C((uint64_t)v5, v27, &qword_1ED34EA48, type metadata accessor for RawAttributionSourceLogo);
}

uint64_t sub_1ABEB3670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  _BYTE v20[3120];

  v0 = type metadata accessor for RawAttributionSource(0);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)&v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v1);
  v5 = &v20[-v4];
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v20[-v7];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = sub_1ABD43A64();
    v12 = v11;
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF30CDC();
    swift_release();
    swift_release();
    sub_1ABCF5A10((uint64_t)&v5[*(int *)(v0 + 20)], (uint64_t)v8);
    sub_1ABEB38E4((uint64_t)v5);
    v13 = sub_1ABF305D4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
    {
      sub_1ABCF59BC((uint64_t)v8);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    v15 = sub_1ABF3052C();
    v17 = v16;
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v8, v13);
    if (v10 != v15 || v12 != v17)
    {
      v19 = sub_1ABF3223C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        return swift_release();
LABEL_9:
      sub_1ABEB3378(v3);
      sub_1ABEB3920();
      sub_1ABF30CF4();
      sub_1ABEB38E4((uint64_t)v3);
      return swift_release();
    }
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1ABEB38B8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABEB38DC()
{
  return sub_1ABEB3670();
}

uint64_t sub_1ABEB38E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RawAttributionSource(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1ABEB3920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34EA30;
  if (!qword_1ED34EA30)
  {
    v1 = type metadata accessor for RawAttributionSource(255);
    result = MEMORY[0x1AF438F30](&unk_1ABF3C2FC, v1);
    atomic_store(result, (unint64_t *)&qword_1ED34EA30);
  }
  return result;
}

uint64_t sub_1ABEB3968(uint64_t a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  sub_1ABD065C8(a2, v4 + 24);
  return v4;
}

uint64_t sub_1ABEB39B8()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1ABEB39C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ABD07E04(v1 + 24, a1);
}

uint64_t sub_1ABEB39CC(uint64_t a1, __int128 *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  sub_1ABD065C8(a2, v2 + 24);
  return v2;
}

uint64_t sub_1ABEB39F4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t sub_1ABEB3A18()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABEB3A44()
{
  void *v0;
  uint64_t v1;

  sub_1ABEB3DB8(0, (unint64_t *)&qword_1ED34DE60, (unint64_t *)&unk_1ED34CA88);
  sub_1ABF3127C();
  v0 = (void *)sub_1ABF31114();
  sub_1ABEB3DB8(0, (unint64_t *)&qword_1ED34DE70, (unint64_t *)&qword_1ED34FCB0);
  sub_1ABEB3E1C();
  v1 = sub_1ABF31240();
  swift_release();

  return v1;
}

uint64_t sub_1ABEB3B1C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_1ABD09088();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v9 = a1 + 3;
  v11 = a1[6];
  v10 = a1[7];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(a3, v11, v10);
  v13 = sub_1ABF30B14();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
  v14 = sub_1ABE32704(a2, v12);
  swift_bridgeObjectRelease();
  sub_1ABD0903C((uint64_t)v8);
  return v14;
}

uint64_t sub_1ABEB3C2C()
{
  uint64_t v0;

  return sub_1ABEB3B1C(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_1ABEB3C48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v16 = *a2;
    v18 = MEMORY[0x1E0DEE9D8];
    v17 = a2[1];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABD16414(0, v6, 0);
    v7 = v18;
    v8 = (uint64_t *)(v5 + 56);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      v12 = *(_QWORD *)(v18 + 16);
      v11 = *(_QWORD *)(v18 + 24);
      sub_1ABF2FF5C();
      if (v12 >= v11 >> 1)
        sub_1ABD16414(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v18 + 16) = v12 + 1;
      v13 = v18 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
      v8 += 13;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v4 = v17;
    v3 = v16;
  }
  else
  {
    sub_1ABF2FF5C();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19 = *a1;
  *a1 = 0x8000000000000000;
  sub_1ABDF10D0(v7, v3, v4, isUniquelyReferenced_nonNull_native);
  *a1 = v19;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1ABEB3DB8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1ABD12448(255, a3);
    v4 = sub_1ABF31690();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1ABEB3E1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34DE68;
  if (!qword_1ED34DE68)
  {
    sub_1ABEB3DB8(255, (unint64_t *)&qword_1ED34DE60, (unint64_t *)&unk_1ED34CA88);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA0D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34DE68);
  }
  return result;
}

