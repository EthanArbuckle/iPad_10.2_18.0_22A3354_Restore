uint64_t sub_1ABDA1244(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a1 >> 62)
  {
    sub_1ABF2FF5C();
    v3 = sub_1ABF31FE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
  {
LABEL_12:
    v16 = sub_1ABF310D8();
    v17 = sub_1ABDA8E68(v4, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v17;
  }
  v19 = MEMORY[0x1E0DEE9D8];
  result = sub_1ABD16414(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v18 = v1;
    v6 = 0;
    v4 = v19;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1AF4380CC](v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_symbol, v18);
      v10 = sub_1ABF317A4();
      v12 = v11;

      v14 = *(_QWORD *)(v19 + 16);
      v13 = *(_QWORD *)(v19 + 24);
      if (v14 >= v13 >> 1)
        sub_1ABD16414(v13 > 1, v14 + 1, 1);
      ++v6;
      *(_QWORD *)(v19 + 16) = v14 + 1;
      v15 = v19 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
    }
    while (v3 != v6);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDA13E4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1ABDA3CD0(a1, a2, a3, (unint64_t *)&unk_1ED34E070);
}

void sub_1ABDA13F8(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  _QWORD v17[6];

  v13 = *a1;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = a5;
  v14[7] = a6;
  v14[8] = a7;
  v17[4] = sub_1ABDA949C;
  v17[5] = v14;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1ABDA1A5C;
  v17[3] = &block_descriptor_167;
  v15 = _Block_copy(v17);
  v16 = v13;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v16, sel_legacyWatchlistSortState_, v15);
  _Block_release(v15);
}

void sub_1ABDA14FC(uint64_t a1, uint64_t a2, id a3, void *a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v16;
  id v17;
  uint64_t v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  uint64_t aBlock;
  unint64_t v29;
  void (*v30)(uint64_t, void *, void *);
  void *v31;
  void (*v32)(void *, void *);
  _QWORD *v33;

  v10 = a8;
  v11 = a7;
  v12 = a4;
  if (a3)
  {
    v16 = a3;
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v17 = (id)qword_1ED3683F0;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1ABF366C0;
    aBlock = 0;
    v29 = 0xE000000000000000;
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v18 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v18 + 32) = 0;
    *(_QWORD *)(v18 + 40) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    v10 = a8;
    v12 = a4;
    v11 = a7;
  }
  if (a2)
  {
    sub_1ABF2FF5C();
    sub_1ABE7C1DC(a1, a2, (char *)&aBlock);
    v19 = aBlock;
    if (aBlock < 0xFEu)
    {
      sub_1ABF31780();
      __asm { BR              X10 }
    }
  }
  v20 = (void *)sub_1ABF31780();
  v21 = (void *)sub_1ABF31B4C();
  v22 = (void *)sub_1ABF31B4C();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v11;
  v23[3] = v10;
  v23[4] = a9;
  v23[5] = a10;
  v32 = sub_1ABDA94FC;
  v33 = v23;
  aBlock = MEMORY[0x1E0C809B0];
  v29 = 1107296256;
  v30 = sub_1ABDA19E8;
  v31 = &block_descriptor_173;
  v24 = _Block_copy(&aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v12, sel_migrateToDefaultWatchlist_sortState_sortOrderState_displayState_completion_, v20, v21, 0, v22, v24);

  _Block_release(v24);
}

void sub_1ABDA17EC(void *a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(_QWORD *))
{
  id v7;
  id v8;
  uint64_t v9;
  void *v11;
  _QWORD v12[5];
  __int16 v13;
  _QWORD v14[5];
  __int16 v15;

  if (a2)
  {
    v7 = a2;
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v8 = (id)qword_1ED3683F0;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1ABF366C0;
    v12[0] = a2;
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v9 + 32) = 0;
    *(_QWORD *)(v9 + 40) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    ((void (*)(id))a3)(a2);

  }
  else if (a1)
  {
    sub_1ABE67338(a1, (uint64_t)v14);
    v12[0] = v14[0];
    v12[1] = v14[1];
    v12[2] = v14[2];
    v12[3] = v14[3];
    v12[4] = v14[4];
    v13 = v15;
    a5(v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ABDA87F4();
    v11 = (void *)swift_allocError();
    a3();

  }
}

void sub_1ABDA19E8(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  sub_1ABF2FF68();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1ABDA1A5C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = sub_1ABF317A4();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  sub_1ABF2FF68();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDA1ADC(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v4 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  v6 = v4;
  sub_1ABF2FF5C();
  sub_1ABF31BF4();
  sub_1ABF31318();

  v7 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v7);
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA1C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a6;
  v13[3] = a7;
  v13[4] = a3;
  v13[5] = a4;
  v13[6] = a1;
  v13[7] = a2;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA1CD4(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD aBlock[6];

  v26 = a4;
  v27 = a6;
  v12 = sub_1ABF30790();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *a1;
  sub_1ABF2FBD8();
  v16 = sub_1ABF30778();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v19 = (void *)sub_1ABF31780();
  v20 = (void *)sub_1ABF31780();
  v21 = (void *)sub_1ABF31B4C();
  v22 = (void *)sub_1ABF31B4C();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v26;
  v23[3] = a5;
  v23[4] = v27;
  v23[5] = a7;
  v23[6] = a2;
  v23[7] = a3;
  v23[8] = v16;
  v23[9] = v18;
  aBlock[4] = sub_1ABDA93D8;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD9FF74;
  aBlock[3] = &block_descriptor_158;
  v24 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  swift_release();
  objc_msgSend(v28, sel_addWatchlist_identifier_sortState_sortOrderState_displayState_completion_, v19, v20, v21, 0, v22, v24);

  _Block_release(v24);
}

void sub_1ABDA1EA0(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v11;
  id v12;
  uint64_t v13;
  _QWORD v15[5];
  __int16 v16;

  if (a1)
  {
    v11 = a1;
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v12 = (id)qword_1ED3683F0;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1ABF366C0;
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v13 + 32) = 0;
    *(_QWORD *)(v13 + 40) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    a2(a1);

  }
  else
  {
    v15[0] = a6;
    v15[1] = a7;
    v15[2] = MEMORY[0x1E0DEE9D8];
    v15[3] = a8;
    v15[4] = a9;
    v16 = 160;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    a4(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ABDA2058(__int128 *a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  __int128 v7;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v2 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1ABF366C0;
  v7 = *a1;
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 64) = sub_1ABD0F5C0();
  *(_OWORD *)(v3 + 32) = *a1;
  v4 = v2;
  sub_1ABD03ADC((uint64_t)&v7);
  sub_1ABF31BF4();
  sub_1ABF31318();

  v5 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v5);
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABDA21C0(void **a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  _QWORD v16[6];

  v11 = *a1;
  v12 = (void *)sub_1ABF31780();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  *(_QWORD *)(v13 + 32) = a5;
  *(_QWORD *)(v13 + 40) = a6;
  v14 = a2[1];
  *(_OWORD *)(v13 + 48) = *a2;
  *(_OWORD *)(v13 + 64) = v14;
  *(_OWORD *)(v13 + 74) = *(_OWORD *)((char *)a2 + 26);
  v16[4] = sub_1ABDA935C;
  v16[5] = v13;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1ABD9FF74;
  v16[3] = &block_descriptor_149;
  v15 = _Block_copy(v16);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABD04B78((uint64_t)a2);
  swift_release();
  objc_msgSend(v11, sel_removeWatchlist_completion_, v12, v15);
  _Block_release(v15);

}

void sub_1ABDA22D4(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(__int128 *), uint64_t a5, __int128 *a6)
{
  id v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v14[2];

  if (a1)
  {
    v8 = a1;
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v9 = (id)qword_1ED3683F0;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1ABF366C0;
    *(_QWORD *)&v13 = 0;
    *((_QWORD *)&v13 + 1) = 0xE000000000000000;
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    v11 = v13;
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 64) = sub_1ABD0F5C0();
    *(_OWORD *)(v10 + 32) = v11;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    a2(a1);

  }
  else
  {
    v12 = a6[1];
    v13 = *a6;
    v14[0] = v12;
    *(_OWORD *)((char *)v14 + 10) = *(__int128 *)((char *)a6 + 26);
    a4(&v13);
  }
}

uint64_t sub_1ABDA2448(__int128 *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  __int128 v13;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v6 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ABF366E0;
  v13 = *a1;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1ABD0F5C0();
  *(_OWORD *)(v7 + 32) = *a1;
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 72) = a2;
  *(_QWORD *)(v7 + 80) = a3;
  v10 = v6;
  sub_1ABD03ADC((uint64_t)&v13);
  sub_1ABF2FF5C();
  sub_1ABF31BF4();
  sub_1ABF31318();

  v11 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v11);
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA25DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  __int128 v16;

  v15 = swift_allocObject();
  v16 = a6[1];
  *(_OWORD *)(v15 + 16) = *a6;
  *(_OWORD *)(v15 + 32) = v16;
  *(_OWORD *)(v15 + 42) = *(_OWORD *)((char *)a6 + 26);
  *(_QWORD *)(v15 + 64) = a7;
  *(_QWORD *)(v15 + 72) = a8;
  *(_QWORD *)(v15 + 80) = a3;
  *(_QWORD *)(v15 + 88) = a4;
  *(_QWORD *)(v15 + 96) = a1;
  *(_QWORD *)(v15 + 104) = a2;
  sub_1ABD04B78((uint64_t)a6);
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA269C(void **a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  _QWORD v21[6];

  v15 = *a1;
  v16 = (void *)sub_1ABF31780();
  v17 = (void *)sub_1ABF31780();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a5;
  *(_QWORD *)(v18 + 24) = a6;
  *(_QWORD *)(v18 + 32) = a7;
  *(_QWORD *)(v18 + 40) = a8;
  *(_QWORD *)(v18 + 48) = a3;
  *(_QWORD *)(v18 + 56) = a4;
  v19 = a2[1];
  *(_OWORD *)(v18 + 64) = *a2;
  *(_OWORD *)(v18 + 80) = v19;
  *(_OWORD *)(v18 + 90) = *(_OWORD *)((char *)a2 + 26);
  v21[4] = sub_1ABDA9270;
  v21[5] = v18;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v21[2] = sub_1ABD9FF74;
  v21[3] = &block_descriptor_140;
  v20 = _Block_copy(v21);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)a2);
  swift_release();
  objc_msgSend(v15, sel_renameWatchlist_newName_completion_, v16, v17, v20);
  _Block_release(v20);

}

void sub_1ABDA27E4(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  _QWORD v18[5];
  __int16 v19;

  if (a1)
  {
    v10 = a1;
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v11 = (id)qword_1ED3683F0;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1ABF366C0;
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v12 + 32) = 0;
    *(_QWORD *)(v12 + 40) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    a2(a1);

  }
  else
  {
    v15 = *(_QWORD *)(a8 + 16);
    v14 = *(_QWORD *)(a8 + 24);
    v16 = *(_QWORD *)(a8 + 32);
    v17 = *(_WORD *)(a8 + 40);
    v18[0] = a6;
    v18[1] = a7;
    v18[2] = v15;
    v18[3] = v14;
    v18[4] = v16;
    v19 = v17;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    a4(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ABDA29A0(__int128 *a1, char *a2)
{
  __int128 v2;
  char v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  __int128 v18;
  _BYTE v19[26];
  char v20;

  v2 = a1[1];
  v18 = *a1;
  *(_OWORD *)v19 = v2;
  *(_OWORD *)&v19[10] = *(__int128 *)((char *)a1 + 26);
  v3 = *a2;
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v4 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ABF366E0;
  sub_1ABDA90A8(&v19[24], &v20);
  sub_1ABDA90A8(&v20, &v17);
  v6 = v4;
  sub_1ABE7C674();
  v8 = v7;
  v10 = v9;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1ABD0F5C0();
  *(_QWORD *)(v5 + 64) = v12;
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v10;
  v17 = v3;
  sub_1ABE7C674();
  *(_QWORD *)(v5 + 96) = v11;
  *(_QWORD *)(v5 + 104) = v12;
  *(_QWORD *)(v5 + 72) = v13;
  *(_QWORD *)(v5 + 80) = v14;
  sub_1ABF31BF4();
  sub_1ABF31318();

  v15 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v15);
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABDA2B5C(uint64_t a1, char a2)
{
  __asm { BR              X9 }
}

void sub_1ABDA2BBC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, __int128 aBlock, __int128 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  __int128 v35;
  void *v36;
  void *v37;
  uint64_t v38;
  __int128 v39;
  void *v40;
  void *v41;
  __int128 v42;
  _BYTE v43[32];

  v32 = (void *)sub_1ABF31B4C();
  v33 = (void *)sub_1ABF31B4C();
  if (v29 > 0x5Fu)
    v34 = 0;
  else
    v34 = (void *)sub_1ABF31B4C();
  sub_1ABCF7BCC(0, &qword_1ED34E018);
  v35 = v28[1];
  v42 = *v28;
  *(_OWORD *)v43 = v35;
  *(_OWORD *)&v43[10] = *(__int128 *)((char *)v28 + 26);
  sub_1ABD04B78((uint64_t)v28);
  sub_1ABDA2D58((uint64_t)&v42);
  v37 = v36;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v31;
  *(_QWORD *)(v38 + 24) = v27;
  *(_QWORD *)(v38 + 32) = v30;
  *(_QWORD *)(v38 + 40) = v26;
  v39 = v28[1];
  *(_OWORD *)(v38 + 48) = *v28;
  *(_OWORD *)(v38 + 64) = v39;
  *(_OWORD *)(v38 + 74) = *(__int128 *)((char *)v28 + 26);
  *(_BYTE *)(v38 + 90) = v29;
  *(_QWORD *)&v43[16] = sub_1ABDA9194;
  *(_QWORD *)&v43[24] = v38;
  *(_QWORD *)&v42 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v42 + 1) = 1107296256;
  *(_QWORD *)v43 = sub_1ABD9FF74;
  *(_QWORD *)&v43[8] = &block_descriptor_131;
  v40 = _Block_copy(&v42);
  sub_1ABD04B78((uint64_t)v28);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v41, sel_updateSortState_newSortOrderState_newDisplayState_watchlist_completion_, v32, v33, v34, v37, v40);
  _Block_release(v40);

}

void sub_1ABDA2D58(uint64_t a1)
{
  int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  sub_1ABF31780();
  sub_1ABF31780();
  sub_1ABF319FC();
  __asm { BR              X10 }
}

id sub_1ABDA2DE4()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = (void *)sub_1ABF31B4C();
  v4 = (void *)sub_1ABF31B4C();
  v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v6 = (void *)sub_1ABF31B4C();
  v7 = objc_msgSend(v5, sel_initWithIdentifier_name_symbols_sortState_sortOrderState_displayState_, v0, v1, v2, v3, v4, v6);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v7;
}

void sub_1ABDA2EAC()
{
  sub_1ABF31B4C();
  JUMPOUT(0x1ABDA2E14);
}

void sub_1ABDA2EC0(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  id v9;
  id v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  unsigned __int8 v19;
  char v20;

  if (a1)
  {
    v9 = a1;
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v10 = (id)qword_1ED3683F0;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1ABF366C0;
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v11 + 32) = 0;
    *(_QWORD *)(v11 + 40) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    a2(a1);

  }
  else
  {
    v13 = *(_BYTE *)(a6 + 41);
    if (a7 < 0x60u)
      v13 = a7 >> 5;
    v14 = *(_QWORD *)(a6 + 8);
    v16 = *(_QWORD *)(a6 + 16);
    v15 = *(_QWORD *)(a6 + 24);
    v17 = *(_QWORD *)(a6 + 32);
    v18[0] = *(_QWORD *)a6;
    v18[1] = v14;
    v18[2] = v16;
    v18[3] = v15;
    v18[4] = v17;
    v19 = a7;
    v20 = v13;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    a4(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ABDA3090()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v0 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ABF366E0;
  v2 = v0;
  v3 = sub_1ABF0EB5C();
  v5 = v4;
  v6 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  v7 = sub_1ABD0F5C0();
  *(_QWORD *)(v1 + 64) = v7;
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v5;
  v8 = sub_1ABF0EB5C();
  *(_QWORD *)(v1 + 96) = v6;
  *(_QWORD *)(v1 + 104) = v7;
  *(_QWORD *)(v1 + 72) = v8;
  *(_QWORD *)(v1 + 80) = v9;
  sub_1ABF31BF4();
  sub_1ABF31318();

  v10 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v10);
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA3234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _OWORD *a7)
{
  uint64_t v13;
  __int128 v14;

  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a6;
  v14 = a7[1];
  *(_OWORD *)(v13 + 24) = *a7;
  *(_OWORD *)(v13 + 40) = v14;
  *(_OWORD *)(v13 + 50) = *(_OWORD *)((char *)a7 + 26);
  *(_QWORD *)(v13 + 72) = a3;
  *(_QWORD *)(v13 + 80) = a4;
  *(_QWORD *)(v13 + 88) = a1;
  *(_QWORD *)(v13 + 96) = a2;
  sub_1ABD04B78((uint64_t)a7);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA32E8(void **a1, char a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v13;
  void *v14;
  __int128 v15;
  void *v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  __int128 v21;
  _BYTE v22[32];

  v13 = *a1;
  v14 = (void *)sub_1ABF31B4C();
  sub_1ABCF7BCC(0, &qword_1ED34E018);
  v15 = a3[1];
  v21 = *a3;
  *(_OWORD *)v22 = v15;
  *(_OWORD *)&v22[10] = *(__int128 *)((char *)a3 + 26);
  sub_1ABD04B78((uint64_t)a3);
  sub_1ABDA2D58((uint64_t)&v21);
  v17 = v16;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = a5;
  *(_QWORD *)(v18 + 32) = a6;
  *(_QWORD *)(v18 + 40) = a7;
  v19 = a3[1];
  *(_OWORD *)(v18 + 48) = *a3;
  *(_OWORD *)(v18 + 64) = v19;
  *(_OWORD *)(v18 + 74) = *(__int128 *)((char *)a3 + 26);
  *(_BYTE *)(v18 + 90) = a2;
  *(_QWORD *)&v22[16] = sub_1ABDA909C;
  *(_QWORD *)&v22[24] = v18;
  *(_QWORD *)&v21 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v21 + 1) = 1107296256;
  *(_QWORD *)v22 = sub_1ABD9FF74;
  *(_QWORD *)&v22[8] = &block_descriptor_122;
  v20 = _Block_copy(&v21);
  sub_1ABD04B78((uint64_t)a3);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v13, sel_updateDisplayState_watchlist_completion_, v14, v17, v20);
  _Block_release(v20);

}

void sub_1ABDA3454(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6, char a7)
{
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v18[5];
  char v19;
  char v20;

  if (a1)
  {
    v9 = a1;
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v10 = (id)qword_1ED3683F0;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1ABF366C0;
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v11 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v11 + 32) = 0;
    *(_QWORD *)(v11 + 40) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    a2(a1);

  }
  else
  {
    v13 = *(_QWORD *)(a6 + 8);
    v15 = *(_QWORD *)(a6 + 16);
    v14 = *(_QWORD *)(a6 + 24);
    v16 = *(_QWORD *)(a6 + 32);
    v17 = *(_BYTE *)(a6 + 40);
    v18[0] = *(_QWORD *)a6;
    v18[1] = v13;
    v18[2] = v15;
    v18[3] = v14;
    v18[4] = v16;
    v19 = v17;
    v20 = a7;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    a4(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1ABDA3614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1ABDAACEC;
  v9[5] = v8;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA36C4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v9 = *a1;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_1ABDA903C;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1ABDA3CBC;
  v12[3] = &block_descriptor_113;
  v11 = _Block_copy(v12);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v9, sel_fetchAllWatchlistsWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1ABDA37A0(unint64_t a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(_QWORD *))
{
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  void *v45;
  id v46;
  int64_t v47;
  __int128 v48;
  void *v50;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  _QWORD *v59;

  if (!a2)
  {
    if (!a1)
    {
      sub_1ABDA87F4();
      v45 = (void *)swift_allocError();
      a3();

      return;
    }
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v10 = (void *)qword_1ED3683F0;
    sub_1ABD0F55C();
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1ABF366E0;
    v12 = a1;
    if (a1 >> 62)
    {
      v46 = v10;
      sub_1ABF2FF5C();
      v13 = sub_1ABF31FE4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v14 = v10;
    }
    v15 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v11 + 64) = v15;
    *(_QWORD *)(v11 + 32) = v13;
    v16 = MEMORY[0x1E0DEE9D8];
    v17 = v13 & ~(v13 >> 63);
    v52 = v13;
    if (v13)
    {
      v47 = v13 & ~(v13 >> 63);
      v50 = v10;
      v53 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v47, 0);
      if (v13 < 0)
      {
        __break(1u);
        goto LABEL_33;
      }
      v18 = 0;
      v16 = v53;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v19 = (id)MEMORY[0x1AF4380CC](v18, a1);
        else
          v19 = *(id *)(a1 + 8 * v18 + 32);
        v20 = v19;
        v21 = objc_msgSend(v19, sel_name);
        v22 = sub_1ABF317A4();
        v24 = v23;

        v53 = v16;
        v26 = *(_QWORD *)(v16 + 16);
        v25 = *(_QWORD *)(v16 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1ABD16414(v25 > 1, v26 + 1, 1);
          v16 = v53;
        }
        ++v18;
        *(_QWORD *)(v16 + 16) = v26 + 1;
        v27 = v16 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v22;
        *(_QWORD *)(v27 + 40) = v24;
      }
      while (v52 != v18);
      v10 = v50;
      v17 = v47;
    }
    v53 = v16;
    v28 = MEMORY[0x1E0DEA968];
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD747CC((unint64_t *)&qword_1ED34FCC0, MEMORY[0x1E0DEAF20]);
    v29 = sub_1ABF316E4();
    v31 = v30;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + 96) = v28;
    *(_QWORD *)(v11 + 104) = sub_1ABD0F5C0();
    *(_QWORD *)(v11 + 72) = v29;
    *(_QWORD *)(v11 + 80) = v31;
    sub_1ABF31BF4();
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v52)
    {
LABEL_29:
      a5(v32);
      swift_bridgeObjectRelease();
      return;
    }
    v59 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1ABDB50B4(0, v17, 0);
    v33 = v52;
    if ((v52 & 0x8000000000000000) == 0)
    {
      v34 = 0;
      v32 = v59;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v35 = (id)MEMORY[0x1AF4380CC](v34, v12);
        else
          v35 = *(id *)(v12 + 8 * v34 + 32);
        sub_1ABE67338(v35, (uint64_t)&v53);
        v36 = v53;
        v37 = v54;
        v39 = v55;
        v38 = v56;
        v40 = v57;
        v41 = v58;
        v59 = v32;
        v43 = v32[2];
        v42 = v32[3];
        if (v43 >= v42 >> 1)
        {
          v48 = v54;
          sub_1ABDB50B4(v42 > 1, v43 + 1, 1);
          v37 = v48;
          v33 = v52;
          v32 = v59;
        }
        v32[2] = v43 + 1;
        v44 = &v32[6 * v43];
        v44[4] = v36;
        ++v34;
        *(_OWORD *)(v44 + 5) = v37;
        v44[7] = v39;
        v44[8] = v38;
        *((_BYTE *)v44 + 72) = v40;
        *((_BYTE *)v44 + 73) = v41;
        v12 = a1;
      }
      while (v33 != v34);
      goto LABEL_29;
    }
LABEL_33:
    __break(1u);
    return;
  }
  v7 = a2;
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v8 = (id)qword_1ED3683F0;
  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1ABF366C0;
  v59 = a2;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 40) = 0xE000000000000000;
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  ((void (*)(id))a3)(a2);

}

uint64_t sub_1ABDA3CBC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1ABDA3CD0(a1, a2, a3, &qword_1ED34E018);
}

uint64_t sub_1ABDA3CD0(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v5 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1ABCF7BCC(0, a4);
    v5 = sub_1ABF31A08();
  }
  sub_1ABF2FF68();
  v7 = a3;
  v6(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDA3D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = swift_allocObject();
  v14 = a6[1];
  *(_OWORD *)(v13 + 16) = *a6;
  *(_OWORD *)(v13 + 32) = v14;
  *(_OWORD *)(v13 + 42) = *(_OWORD *)((char *)a6 + 26);
  *(_QWORD *)(v13 + 64) = a5;
  *(_QWORD *)(v13 + 72) = a3;
  *(_QWORD *)(v13 + 80) = a4;
  *(_QWORD *)(v13 + 88) = sub_1ABD17050;
  *(_QWORD *)(v13 + 96) = v12;
  sub_1ABF2FF68();
  sub_1ABD04B78((uint64_t)a6);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA3E2C(void **a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v12;
  __int128 v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  __int128 v20;
  _BYTE v21[32];

  v12 = *a1;
  sub_1ABCF7BCC(0, &qword_1ED34E018);
  v13 = a2[1];
  v20 = *a2;
  *(_OWORD *)v21 = v13;
  *(_OWORD *)&v21[10] = *(__int128 *)((char *)a2 + 26);
  sub_1ABD04B78((uint64_t)a2);
  sub_1ABDA2D58((uint64_t)&v20);
  v15 = v14;
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = swift_allocObject();
  v18 = a2[1];
  *(_OWORD *)(v17 + 40) = *a2;
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = a4;
  *(_QWORD *)(v17 + 32) = a5;
  *(_OWORD *)(v17 + 56) = v18;
  *(_OWORD *)(v17 + 66) = *(__int128 *)((char *)a2 + 26);
  *(_QWORD *)(v17 + 88) = a6;
  *(_QWORD *)(v17 + 96) = a7;
  *(_QWORD *)&v21[16] = sub_1ABDA8E0C;
  *(_QWORD *)&v21[24] = v17;
  *(_QWORD *)&v20 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v20 + 1) = 1107296256;
  *(_QWORD *)v21 = sub_1ABDA13E4;
  *(_QWORD *)&v21[8] = &block_descriptor_101;
  v19 = _Block_copy(&v20);
  sub_1ABD04B78((uint64_t)a2);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v12, sel_fetchStocksFromWatchlist_completion_, v15, v19);
  _Block_release(v19);

}

void sub_1ABDA3FAC(unint64_t a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t *a6, void (*a7)(uint64_t))
{
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  unint64_t v43;
  void (*v44)(uint64_t);
  uint64_t v45;

  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    v15 = sub_1ABF30B44();
    sub_1ABDA8E20();
    v16 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x1E0DB3590], v15);
    ((void (*)(void *))a4)(v16);
    goto LABEL_7;
  }
  if (!a2)
  {
    if (a1)
    {
      if (qword_1ED34D5E8 != -1)
        swift_once();
      v18 = (void *)qword_1ED3683F0;
      sub_1ABD0F55C();
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1ABF36EA0;
      if (a1 >> 62)
      {
        v40 = v18;
        sub_1ABF2FF5C();
        v20 = sub_1ABF31FE4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v21 = v18;
      }
      v44 = a7;
      v22 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v19 + 64) = v22;
      *(_QWORD *)(v19 + 32) = v20;
      v23 = *a6;
      v24 = a6[1];
      *(_QWORD *)(v19 + 96) = MEMORY[0x1E0DEA968];
      v43 = sub_1ABD0F5C0();
      *(_QWORD *)(v19 + 104) = v43;
      *(_QWORD *)(v19 + 72) = v23;
      *(_QWORD *)(v19 + 80) = v24;
      if (v20)
      {
        v41 = v19;
        v42 = v18;
        v45 = MEMORY[0x1E0DEE9D8];
        sub_1ABF2FF5C();
        sub_1ABD16414(0, v20 & ~(v20 >> 63), 0);
        if (v20 < 0)
        {
          __break(1u);
          return;
        }
        v25 = 0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
            v26 = (id)MEMORY[0x1AF4380CC](v25, a1);
          else
            v26 = *(id *)(a1 + 8 * v25 + 32);
          v27 = v26;
          v28 = objc_msgSend(v26, sel_symbol, v41, v42);
          v29 = sub_1ABF317A4();
          v31 = v30;

          v33 = *(_QWORD *)(v45 + 16);
          v32 = *(_QWORD *)(v45 + 24);
          if (v33 >= v32 >> 1)
            sub_1ABD16414(v32 > 1, v33 + 1, 1);
          ++v25;
          *(_QWORD *)(v45 + 16) = v33 + 1;
          v34 = v45 + 16 * v33;
          *(_QWORD *)(v34 + 32) = v29;
          *(_QWORD *)(v34 + 40) = v31;
        }
        while (v20 != v25);
        v19 = v41;
        v18 = v42;
      }
      else
      {
        sub_1ABF2FF5C();
      }
      v35 = MEMORY[0x1E0DEA968];
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD747CC((unint64_t *)&qword_1ED34FCC0, MEMORY[0x1E0DEAF20]);
      v36 = sub_1ABF316E4();
      v38 = v37;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 136) = v35;
      *(_QWORD *)(v19 + 144) = v43;
      *(_QWORD *)(v19 + 112) = v36;
      *(_QWORD *)(v19 + 120) = v38;
      sub_1ABF31BF4();
      sub_1ABF31318();

      swift_bridgeObjectRelease();
      sub_1ABF2FF68();
      v39 = sub_1ABDA1244(a1);
      swift_release();
      v44(v39);
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    sub_1ABDA87F4();
    v16 = (void *)swift_allocError();
    a4();
    swift_release();
LABEL_7:

    return;
  }
  v12 = a2;
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v13 = (id)qword_1ED3683F0;
  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v14 + 32) = 0;
  *(_QWORD *)(v14 + 40) = 0xE000000000000000;
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  ((void (*)(void *))a4)(a2);
  swift_release();

}

uint64_t sub_1ABDA44A0(uint64_t a1, __int128 *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v11 = *(_OWORD *)(a1 + 16);
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v3 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF366E0;
  v13 = v11;
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1ABD0F5C0();
  *(_QWORD *)(v4 + 64) = v6;
  *(_OWORD *)(v4 + 32) = v11;
  v12 = *a2;
  v7 = v12;
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = v6;
  *(_OWORD *)(v4 + 72) = v7;
  v8 = v3;
  sub_1ABD03ADC((uint64_t)&v13);
  sub_1ABD03ADC((uint64_t)&v12);
  sub_1ABF31BF4();
  sub_1ABF31318();

  v9 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v9);
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34DD80, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA4664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7)
{
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v15 = swift_allocObject();
  v16 = *(_OWORD *)(a6 + 64);
  *(_OWORD *)(v15 + 104) = *(_OWORD *)(a6 + 80);
  v17 = *(_OWORD *)(a6 + 112);
  *(_OWORD *)(v15 + 120) = *(_OWORD *)(a6 + 96);
  *(_OWORD *)(v15 + 136) = v17;
  v18 = *(_OWORD *)a6;
  *(_OWORD *)(v15 + 40) = *(_OWORD *)(a6 + 16);
  v19 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v15 + 56) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v15 + 72) = v19;
  *(_QWORD *)(v15 + 16) = a5;
  *(_QWORD *)(v15 + 152) = *(_QWORD *)(a6 + 128);
  *(_OWORD *)(v15 + 88) = v16;
  *(_OWORD *)(v15 + 24) = v18;
  v20 = a7[1];
  *(_OWORD *)(v15 + 160) = *a7;
  *(_OWORD *)(v15 + 176) = v20;
  *(_OWORD *)(v15 + 186) = *(_OWORD *)((char *)a7 + 26);
  *(_QWORD *)(v15 + 208) = a3;
  *(_QWORD *)(v15 + 216) = a4;
  *(_QWORD *)(v15 + 224) = sub_1ABD12950;
  *(_QWORD *)(v15 + 232) = v14;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABD97ECC(a6);
  sub_1ABD04B78((uint64_t)a7);
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA4788(id *a1, _QWORD *a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  __int128 v24;
  void *v25;
  void *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  id v37;
  __int128 aBlock;
  _BYTE v39[32];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v37 = *a1;
  v11 = a2[6];
  v12 = a2[7];
  __swift_project_boxed_opaque_existential_1(a2 + 3, v11);
  v13 = *(_OWORD *)(a3 + 112);
  v43 = *(_OWORD *)(a3 + 96);
  v44 = v13;
  v45 = *(_QWORD *)(a3 + 128);
  v14 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)&v39[16] = *(_OWORD *)(a3 + 32);
  v40 = v14;
  v15 = *(_OWORD *)(a3 + 80);
  v41 = *(_OWORD *)(a3 + 64);
  v42 = v15;
  v16 = *(_OWORD *)(a3 + 16);
  aBlock = *(_OWORD *)a3;
  *(_OWORD *)v39 = v16;
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v12 + 16))(&aBlock, v11, v12);
  swift_release();
  v17 = objc_allocWithZone((Class)SCWWatchedStock);
  sub_1ABD97ECC(a3);
  v18 = (void *)sub_1ABF31780();
  v19 = (void *)sub_1ABF31780();
  v20 = (void *)sub_1ABF31780();
  v21 = (void *)sub_1ABF31780();
  v22 = (void *)sub_1ABF31780();
  sub_1ABD97F60(a3);
  v23 = objc_msgSend(v17, sel_initWithName_shortName_compactName_symbol_exchange_, v18, v19, v20, v21, v22);

  sub_1ABCF7BCC(0, &qword_1ED34E018);
  v24 = a4[1];
  aBlock = *a4;
  *(_OWORD *)v39 = v24;
  *(_OWORD *)&v39[10] = *(__int128 *)((char *)a4 + 26);
  sub_1ABD04B78((uint64_t)a4);
  sub_1ABDA2D58((uint64_t)&aBlock);
  v26 = v25;
  v27 = swift_allocObject();
  v28 = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(v27 + 112) = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v27 + 128) = v28;
  v29 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v27 + 64) = v29;
  v30 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v27 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v27 + 96) = v30;
  v31 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v27 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v27 + 32) = v31;
  v32 = a4[1];
  *(_OWORD *)(v27 + 152) = *a4;
  *(_QWORD *)(v27 + 144) = *(_QWORD *)(a3 + 128);
  *(_OWORD *)(v27 + 168) = v32;
  *(_OWORD *)(v27 + 178) = *(__int128 *)((char *)a4 + 26);
  *(_QWORD *)(v27 + 200) = a5;
  *(_QWORD *)(v27 + 208) = a6;
  *(_QWORD *)(v27 + 216) = a7;
  *(_QWORD *)(v27 + 224) = a8;
  *(_QWORD *)&v39[16] = sub_1ABDA8CE8;
  *(_QWORD *)&v39[24] = v27;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)v39 = sub_1ABD9FF74;
  *(_QWORD *)&v39[8] = &block_descriptor_79;
  v33 = _Block_copy(&aBlock);
  sub_1ABD97ECC(a3);
  sub_1ABD04B78((uint64_t)a4);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v37, sel_addStock_watchlist_completion_, v23, v26, v33);
  _Block_release(v33);

}

void sub_1ABDA4A14(void *a1, uint64_t a2, __int128 *a3, void (*a4)(void *), uint64_t a5, void (*a6)(void))
{
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  if (a1)
  {
    v10 = a1;
    if (qword_1ED34CA60 != -1)
      swift_once();
    v11 = (id)qword_1ED3683A8;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1ABF36EA0;
    v17 = *(_OWORD *)(a2 + 16);
    v13 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    v14 = sub_1ABD0F5C0();
    *(_QWORD *)(v12 + 64) = v14;
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(a2 + 16);
    v16 = *a3;
    v15 = v16;
    *(_QWORD *)(v12 + 96) = v13;
    *(_QWORD *)(v12 + 104) = v14;
    *(_OWORD *)(v12 + 72) = v15;
    sub_1ABD03ADC((uint64_t)&v17);
    sub_1ABD03ADC((uint64_t)&v16);
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v12 + 136) = v13;
    *(_QWORD *)(v12 + 144) = v14;
    *(_QWORD *)(v12 + 112) = 0;
    *(_QWORD *)(v12 + 120) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    a4(a1);

  }
  else
  {
    a6();
  }
}

uint64_t sub_1ABDA4BBC(uint64_t a1, uint64_t a2, __int128 *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  __int128 v14;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v6 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ABF366E0;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1ABD0F5C0();
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  v14 = *a3;
  v10 = v14;
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_OWORD *)(v7 + 72) = v10;
  v11 = v6;
  sub_1ABF2FF5C();
  sub_1ABD03ADC((uint64_t)&v14);
  sub_1ABF31BF4();
  sub_1ABF31318();

  v12 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v12);
  sub_1ABD04578(0, &qword_1ED346DF0, v8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA4D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _OWORD *a8)
{
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a6;
  *(_QWORD *)(v16 + 24) = a7;
  v17 = a8[1];
  *(_OWORD *)(v16 + 32) = *a8;
  *(_OWORD *)(v16 + 48) = v17;
  *(_OWORD *)(v16 + 58) = *(_OWORD *)((char *)a8 + 26);
  *(_QWORD *)(v16 + 80) = a3;
  *(_QWORD *)(v16 + 88) = a4;
  *(_QWORD *)(v16 + 96) = sub_1ABDA8864;
  *(_QWORD *)(v16 + 104) = v15;
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)a8);
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA4E30(void **a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v15;
  void *v16;
  __int128 v17;
  void *v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  __int128 v23;
  _BYTE v24[32];

  v15 = *a1;
  v16 = (void *)sub_1ABF31780();
  sub_1ABCF7BCC(0, &qword_1ED34E018);
  v17 = a4[1];
  v23 = *a4;
  *(_OWORD *)v24 = v17;
  *(_OWORD *)&v24[10] = *(__int128 *)((char *)a4 + 26);
  sub_1ABD04B78((uint64_t)a4);
  sub_1ABDA2D58((uint64_t)&v23);
  v19 = v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = a3;
  v21 = a4[1];
  *(_OWORD *)(v20 + 32) = *a4;
  *(_OWORD *)(v20 + 48) = v21;
  *(_OWORD *)(v20 + 58) = *(__int128 *)((char *)a4 + 26);
  *(_QWORD *)(v20 + 80) = a5;
  *(_QWORD *)(v20 + 88) = a6;
  *(_QWORD *)(v20 + 96) = a7;
  *(_QWORD *)(v20 + 104) = a8;
  *(_QWORD *)&v24[16] = sub_1ABDA8BA0;
  *(_QWORD *)&v24[24] = v20;
  *(_QWORD *)&v23 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v23 + 1) = 1107296256;
  *(_QWORD *)v24 = sub_1ABD9FF74;
  *(_QWORD *)&v24[8] = &block_descriptor_67;
  v22 = _Block_copy(&v23);
  sub_1ABD04B78((uint64_t)a4);
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v15, sel_removeSymbol_watchlist_completion_, v16, v19, v22);
  _Block_release(v22);

}

void sub_1ABDA4FAC(void *a1, uint64_t a2, uint64_t a3, __int128 *a4, void (*a5)(void *), uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v18;

  if (a1)
  {
    v11 = a1;
    if (qword_1ED34CA60 != -1)
      swift_once();
    v12 = (id)qword_1ED3683A8;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1ABF36EA0;
    v14 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
    v15 = sub_1ABD0F5C0();
    *(_QWORD *)(v13 + 64) = v15;
    *(_QWORD *)(v13 + 32) = a2;
    *(_QWORD *)(v13 + 40) = a3;
    v18 = *a4;
    v16 = v18;
    *(_QWORD *)(v13 + 96) = v14;
    *(_QWORD *)(v13 + 104) = v15;
    *(_OWORD *)(v13 + 72) = v16;
    sub_1ABF2FF5C();
    sub_1ABD03ADC((uint64_t)&v18);
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v13 + 136) = v14;
    *(_QWORD *)(v13 + 144) = v15;
    *(_QWORD *)(v13 + 112) = 0;
    *(_QWORD *)(v13 + 120) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    a5(a1);

  }
  else
  {
    a7(a2, a3);
  }
}

uint64_t sub_1ABDA5158(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  __int128 v17;
  _BYTE v18[136];
  __int128 v19;
  _OWORD v20[2];
  _QWORD v21[17];
  __int128 v22;
  __int128 v23;
  _BYTE v24[136];

  v17 = *(_OWORD *)(a1 + 16);
  sub_1ABD843F0(a2, (uint64_t)v18, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  sub_1ABD843F0(a2, (uint64_t)v24, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  v5 = a3[1];
  v19 = *a3;
  v20[0] = v5;
  *(_OWORD *)((char *)v20 + 10) = *(__int128 *)((char *)a3 + 26);
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v6 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ABF36EA0;
  v23 = v17;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1ABD0F5C0();
  *(_QWORD *)(v7 + 64) = v9;
  *(_OWORD *)(v7 + 32) = v17;
  sub_1ABD843F0((uint64_t)v18, (uint64_t)v21, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  if (sub_1ABD75518((uint64_t)v21) == 1)
  {
    v10 = (_QWORD *)(v7 + 72);
    *(_QWORD *)(v7 + 96) = v8;
    *(_QWORD *)(v7 + 104) = v9;
LABEL_7:
    *v10 = 7104878;
    v12 = 0xE300000000000000;
    goto LABEL_8;
  }
  v11 = v21[2];
  v10 = (_QWORD *)(v7 + 72);
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  v12 = sub_1ABF2FF5C();
  if (!v12)
    goto LABEL_7;
  *v10 = v11;
LABEL_8:
  *(_QWORD *)(v7 + 80) = v12;
  v13 = v19;
  v22 = v19;
  *(_QWORD *)(v7 + 136) = v8;
  *(_QWORD *)(v7 + 144) = v9;
  *(_OWORD *)(v7 + 112) = v13;
  v14 = v6;
  sub_1ABD03ADC((uint64_t)&v23);
  sub_1ABD03ADC((uint64_t)&v22);
  sub_1ABF31BF4();
  sub_1ABF31318();

  v15 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v15);
  sub_1ABD04578(0, &qword_1EEC45230, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA53D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, _OWORD *a8)
{
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v15 = swift_allocObject();
  v16 = *(_OWORD *)(a6 + 112);
  *(_OWORD *)(v15 + 112) = *(_OWORD *)(a6 + 96);
  *(_OWORD *)(v15 + 128) = v16;
  *(_QWORD *)(v15 + 144) = *(_QWORD *)(a6 + 128);
  v17 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v15 + 64) = v17;
  v18 = *(_OWORD *)(a6 + 80);
  *(_OWORD *)(v15 + 80) = *(_OWORD *)(a6 + 64);
  *(_OWORD *)(v15 + 96) = v18;
  v19 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a6;
  *(_OWORD *)(v15 + 32) = v19;
  sub_1ABD843F0((uint64_t)a7, v15 + 152, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  v20 = a8[1];
  *(_OWORD *)(v15 + 288) = *a8;
  *(_OWORD *)(v15 + 304) = v20;
  *(_OWORD *)(v15 + 314) = *(_OWORD *)((char *)a8 + 26);
  *(_QWORD *)(v15 + 336) = a3;
  *(_QWORD *)(v15 + 344) = a4;
  *(_QWORD *)(v15 + 352) = a1;
  *(_QWORD *)(v15 + 360) = a2;
  sub_1ABD97ECC(a6);
  sub_1ABDA89F4(a7);
  sub_1ABD04B78((uint64_t)a8);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA54E0(id *a1, uint64_t a2, uint64_t *a3, __int128 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v14;
  void *v15;
  __int128 v16;
  void *v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  id v27;
  __int128 aBlock;
  _BYTE v29[32];
  _BYTE v30[16];

  v27 = *a1;
  v14 = (void *)sub_1ABF31780();
  sub_1ABD843F0((uint64_t)a3, (uint64_t)v30, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  if (sub_1ABD75518((uint64_t)v30) == 1)
    v15 = 0;
  else
    v15 = (void *)sub_1ABF31780();
  sub_1ABCF7BCC(0, &qword_1ED34E018);
  v16 = a4[1];
  aBlock = *a4;
  *(_OWORD *)v29 = v16;
  *(_OWORD *)&v29[10] = *(__int128 *)((char *)a4 + 26);
  sub_1ABD04B78((uint64_t)a4);
  sub_1ABDA2D58((uint64_t)&aBlock);
  v18 = v17;
  v19 = swift_allocObject();
  v20 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v19 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v19 + 128) = v20;
  v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v19 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v19 + 64) = v21;
  v22 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v19 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v19 + 96) = v22;
  v23 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v19 + 32) = v23;
  v24 = a4[1];
  *(_OWORD *)(v19 + 152) = *a4;
  *(_QWORD *)(v19 + 144) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(v19 + 168) = v24;
  *(_OWORD *)(v19 + 178) = *(__int128 *)((char *)a4 + 26);
  sub_1ABD843F0((uint64_t)a3, v19 + 200, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  *(_QWORD *)(v19 + 336) = a5;
  *(_QWORD *)(v19 + 344) = a6;
  *(_QWORD *)(v19 + 352) = a7;
  *(_QWORD *)(v19 + 360) = a8;
  *(_QWORD *)&v29[16] = sub_1ABDA8B14;
  *(_QWORD *)&v29[24] = v19;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)v29 = sub_1ABD9FF74;
  *(_QWORD *)&v29[8] = &block_descriptor_54;
  v25 = _Block_copy(&aBlock);
  sub_1ABD04B78((uint64_t)a4);
  sub_1ABD97ECC(a2);
  sub_1ABDA89F4(a3);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v27, sel_reorderSymbol_afterSymbol_watchlist_completion_, v14, v15, v18, v25);
  _Block_release(v25);

}

void sub_1ABDA56F4(void *a1, __int128 *a2, __int128 *a3, uint64_t a4, void (*a5)(void *), uint64_t a6, void (*a7)(__int128 *))
{
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;

  if (!a1)
  {
    v19 = a2[6];
    v33 = a2[7];
    v34 = *((_QWORD *)a2 + 16);
    v20 = a2[3];
    v28 = a2[2];
    v29 = v20;
    v21 = a2[4];
    v31 = a2[5];
    v32 = v19;
    v30 = v21;
    v22 = a2[1];
    v26 = *a2;
    v27 = v22;
    a7(&v26);
    return;
  }
  v11 = a1;
  if (qword_1ED34CA60 != -1)
    swift_once();
  v12 = (id)qword_1ED3683A8;
  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1ABF39DC0;
  v36 = a2[1];
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1ABD0F5C0();
  *(_QWORD *)(v13 + 64) = v15;
  v16 = a2[1];
  *(_OWORD *)(v13 + 32) = v16;
  v35 = *a3;
  v17 = v35;
  *(_QWORD *)(v13 + 96) = v14;
  *(_QWORD *)(v13 + 104) = v15;
  *(_OWORD *)(v13 + 72) = v17;
  *(_QWORD *)(v13 + 136) = v14;
  *(_QWORD *)(v13 + 144) = v15;
  *(_OWORD *)(v13 + 112) = v16;
  sub_1ABD843F0(a4, (uint64_t)&v26, &qword_1ED34DAB0, (uint64_t)&type metadata for Stock);
  if (sub_1ABD75518((uint64_t)&v26) == 1)
  {
    v18 = (_QWORD *)(v13 + 152);
    *(_QWORD *)(v13 + 176) = v14;
    *(_QWORD *)(v13 + 184) = v15;
LABEL_9:
    *v18 = 7104878;
    v24 = 0xE300000000000000;
    goto LABEL_10;
  }
  v23 = v27;
  v18 = (_QWORD *)(v13 + 152);
  *(_QWORD *)(v13 + 176) = v14;
  *(_QWORD *)(v13 + 184) = v15;
  v24 = sub_1ABF2FF5C();
  if (!v24)
    goto LABEL_9;
  *v18 = v23;
LABEL_10:
  *(_QWORD *)(v13 + 160) = v24;
  sub_1ABF2FF5C();
  sub_1ABD03ADC((uint64_t)&v36);
  sub_1ABD03ADC((uint64_t)&v35);
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v13 + 216) = v14;
  *(_QWORD *)(v13 + 224) = v15;
  *(_QWORD *)(v13 + 192) = 0;
  *(_QWORD *)(v13 + 200) = 0xE000000000000000;
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  a5(a1);

}

uint64_t sub_1ABDA594C(uint64_t a1, __int128 *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v11;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v4 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ABF366E0;
  v6 = MEMORY[0x1E0DEA968];
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v5 + 56) = v7;
  *(_QWORD *)(v5 + 64) = sub_1ABD747CC((unint64_t *)&qword_1ED34FCD0, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v5 + 32) = a1;
  v11 = *a2;
  *(_QWORD *)(v5 + 96) = v6;
  *(_QWORD *)(v5 + 104) = sub_1ABD0F5C0();
  *(_OWORD *)(v5 + 72) = *a2;
  v8 = v4;
  sub_1ABF2FF5C();
  sub_1ABD03ADC((uint64_t)&v11);
  sub_1ABF31BF4();
  sub_1ABF31318();

  v9 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v9);
  sub_1ABD04518(0, (unint64_t *)&qword_1ED34DD60, (unint64_t *)&qword_1ED34FCB0, v6);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA5B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7)
{
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a6;
  v15 = a7[1];
  *(_OWORD *)(v14 + 24) = *a7;
  *(_OWORD *)(v14 + 40) = v15;
  *(_OWORD *)(v14 + 50) = *(_OWORD *)((char *)a7 + 26);
  *(_QWORD *)(v14 + 72) = a3;
  *(_QWORD *)(v14 + 80) = a4;
  *(_QWORD *)(v14 + 88) = sub_1ABDAACEC;
  *(_QWORD *)(v14 + 96) = v13;
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)a7);
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA5BF4(void **a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v13;
  id v14;
  void *v15;
  id v16;
  __int128 v17;
  void *v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  __int128 v23;
  _BYTE v24[32];

  v13 = *a1;
  sub_1ABD0B940(a2);
  v14 = objc_allocWithZone(MEMORY[0x1E0C99E40]);
  v15 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithArray_, v15);

  sub_1ABCF7BCC(0, &qword_1ED34E018);
  v17 = a3[1];
  v23 = *a3;
  *(_OWORD *)v24 = v17;
  *(_OWORD *)&v24[10] = *(__int128 *)((char *)a3 + 26);
  sub_1ABD04B78((uint64_t)a3);
  sub_1ABDA2D58((uint64_t)&v23);
  v19 = v18;
  v20 = swift_allocObject();
  v21 = a3[1];
  *(_OWORD *)(v20 + 24) = *a3;
  *(_QWORD *)(v20 + 16) = a2;
  *(_OWORD *)(v20 + 40) = v21;
  *(_OWORD *)(v20 + 50) = *(__int128 *)((char *)a3 + 26);
  *(_QWORD *)(v20 + 72) = a4;
  *(_QWORD *)(v20 + 80) = a5;
  *(_QWORD *)(v20 + 88) = a6;
  *(_QWORD *)(v20 + 96) = a7;
  *(_QWORD *)&v24[16] = sub_1ABDA96D8;
  *(_QWORD *)&v24[24] = v20;
  *(_QWORD *)&v23 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v23 + 1) = 1107296256;
  *(_QWORD *)v24 = sub_1ABD9FF74;
  *(_QWORD *)&v24[8] = &block_descriptor_213;
  v22 = _Block_copy(&v23);
  sub_1ABD04B78((uint64_t)a3);
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v13, sel_reorderSymbols_watchlist_completion_, v16, v19, v22);
  _Block_release(v22);

}

void sub_1ABDA5DB8(void *a1, uint64_t a2, __int128 *a3, void (*a4)(void *), uint64_t a5, void (*a6)(uint64_t))
{
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  if (a1)
  {
    v10 = a1;
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v11 = (id)qword_1ED3683F0;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1ABF366E0;
    v13 = MEMORY[0x1E0DEA968];
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    *(_QWORD *)(v12 + 56) = v14;
    *(_QWORD *)(v12 + 64) = sub_1ABD747CC((unint64_t *)&qword_1ED34FCD0, MEMORY[0x1E0CB1B18]);
    *(_QWORD *)(v12 + 32) = a2;
    v15 = *a3;
    *(_QWORD *)(v12 + 96) = v13;
    *(_QWORD *)(v12 + 104) = sub_1ABD0F5C0();
    *(_OWORD *)(v12 + 72) = *a3;
    sub_1ABF2FF5C();
    sub_1ABD03ADC((uint64_t)&v15);
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    a4(a1);

  }
  else
  {
    a6(a2);
  }
}

uint64_t sub_1ABDA5F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  id v15;
  uint64_t v16;
  __int128 v18;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v10 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ABF36EA0;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1ABD0F5C0();
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a2;
  *(_QWORD *)(v11 + 96) = v12;
  *(_QWORD *)(v11 + 104) = v13;
  *(_QWORD *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 72) = a3;
  *(_QWORD *)(v11 + 80) = a4;
  v18 = *a5;
  v14 = v18;
  *(_QWORD *)(v11 + 136) = v12;
  *(_QWORD *)(v11 + 144) = v13;
  *(_OWORD *)(v11 + 112) = v14;
  v15 = v10;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD03ADC((uint64_t)&v18);
  sub_1ABF31BF4();
  sub_1ABF31318();

  v16 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v16);
  sub_1ABD04578(0, &qword_1ED346DF0, v12, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA60EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _OWORD *a10)
{
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a6;
  *(_QWORD *)(v16 + 24) = a7;
  *(_QWORD *)(v16 + 32) = a8;
  *(_QWORD *)(v16 + 40) = a9;
  v17 = a10[1];
  *(_OWORD *)(v16 + 48) = *a10;
  *(_OWORD *)(v16 + 64) = v17;
  *(_OWORD *)(v16 + 74) = *(_OWORD *)((char *)a10 + 26);
  *(_QWORD *)(v16 + 96) = a3;
  *(_QWORD *)(v16 + 104) = a4;
  *(_QWORD *)(v16 + 112) = sub_1ABDA8864;
  *(_QWORD *)(v16 + 120) = v15;
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD04B78((uint64_t)a10);
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA61F0(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v15;
  void *v16;
  __int128 v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  id v22;
  __int128 aBlock;
  _BYTE v24[32];

  v22 = *a1;
  v15 = (void *)sub_1ABF31780();
  v16 = (void *)sub_1ABF31780();
  sub_1ABCF7BCC(0, &qword_1ED34E018);
  v17 = a6[1];
  aBlock = *a6;
  *(_OWORD *)v24 = v17;
  *(_OWORD *)&v24[10] = *(__int128 *)((char *)a6 + 26);
  sub_1ABD04B78((uint64_t)a6);
  sub_1ABDA2D58((uint64_t)&aBlock);
  v19 = v18;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a7;
  v20[3] = a8;
  v20[4] = a9;
  v20[5] = a10;
  v20[6] = a4;
  v20[7] = a5;
  *(_QWORD *)&v24[16] = sub_1ABDA8904;
  *(_QWORD *)&v24[24] = v20;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)v24 = sub_1ABD9FF74;
  *(_QWORD *)&v24[8] = &block_descriptor_45;
  v21 = _Block_copy(&aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  swift_release();
  objc_msgSend(v22, sel_replaceSymbol_withSymbol_watchlist_completion_, v15, v16, v19, v21);
  _Block_release(v21);

}

void sub_1ABDA6370(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v9;

  if (a1)
  {
    v9 = a1;
    a2(a1);

  }
  else
  {
    a4(a6, a7);
  }
}

uint64_t sub_1ABDA63D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1ABDAACEC;
  v9[5] = v8;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA6480(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  _QWORD *v10;
  void *v11;
  _QWORD v12[6];

  v9 = *a1;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v12[4] = sub_1ABDA87E8;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1ABDA6708;
  v12[3] = &block_descriptor_33;
  v11 = _Block_copy(v12);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v9, sel_fetchWatchlistOrderWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1ABDA655C(uint64_t a1, id a2, void (*a3)(void), uint64_t a4, void (*a5)(void))
{
  id v7;
  id v8;
  uint64_t v9;
  void *v10;

  if (a2)
  {
    v7 = a2;
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v8 = (id)qword_1ED3683F0;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1ABF366C0;
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = sub_1ABD0F5C0();
    *(_QWORD *)(v9 + 32) = 0;
    *(_QWORD *)(v9 + 40) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    ((void (*)(id))a3)(a2);

  }
  else if (a1)
  {
    a5();
  }
  else
  {
    sub_1ABDA87F4();
    v10 = (void *)swift_allocError();
    a3();

  }
}

uint64_t sub_1ABDA6708(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1ABF31A08();
  else
    v5 = 0;
  sub_1ABF2FF68();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDA6788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6)
{
  uint64_t v11;
  __int128 v12;

  v11 = swift_allocObject();
  v12 = a6[1];
  *(_OWORD *)(v11 + 16) = *a6;
  *(_OWORD *)(v11 + 32) = v12;
  *(_OWORD *)(v11 + 42) = *(_OWORD *)((char *)a6 + 26);
  *(_QWORD *)(v11 + 64) = a3;
  *(_QWORD *)(v11 + 72) = a4;
  *(_QWORD *)(v11 + 80) = a1;
  *(_QWORD *)(v11 + 88) = a2;
  sub_1ABD04B78((uint64_t)a6);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

uint64_t sub_1ABDA6828(__int128 *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  _BYTE v9[26];
  __int128 v10;
  __int128 v11;

  *(_OWORD *)v9 = a1[1];
  *(_OWORD *)&v9[10] = *(__int128 *)((char *)a1 + 26);
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v2 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1ABF366E0;
  v11 = *a1;
  v4 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  v5 = sub_1ABD0F5C0();
  *(_QWORD *)(v3 + 64) = v5;
  *(_OWORD *)(v3 + 32) = *a1;
  v10 = *(_OWORD *)&v9[8];
  *(_QWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 104) = v5;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)&v9[8];
  v6 = v2;
  sub_1ABD03ADC((uint64_t)&v11);
  sub_1ABD03ADC((uint64_t)&v10);
  sub_1ABF31BF4();
  sub_1ABF31318();

  v7 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v7);
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

void sub_1ABDA69BC(void **a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, SEL *a10)
{
  void *v16;
  __int128 v17;
  void *v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  __int128 aBlock;
  _BYTE v24[32];

  v16 = *a1;
  sub_1ABCF7BCC(0, &qword_1ED34E018);
  v17 = a2[1];
  aBlock = *a2;
  *(_OWORD *)v24 = v17;
  *(_OWORD *)&v24[10] = *(__int128 *)((char *)a2 + 26);
  sub_1ABD04B78((uint64_t)a2);
  sub_1ABDA2D58((uint64_t)&aBlock);
  v19 = v18;
  v20 = swift_allocObject();
  v21 = a2[1];
  *(_OWORD *)(v20 + 16) = *a2;
  *(_OWORD *)(v20 + 32) = v21;
  *(_OWORD *)(v20 + 42) = *(__int128 *)((char *)a2 + 26);
  *(_QWORD *)(v20 + 64) = a3;
  *(_QWORD *)(v20 + 72) = a4;
  *(_QWORD *)(v20 + 80) = a5;
  *(_QWORD *)(v20 + 88) = a6;
  *(_QWORD *)&v24[16] = a8;
  *(_QWORD *)&v24[24] = v20;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)v24 = sub_1ABD9FF74;
  *(_QWORD *)&v24[8] = a9;
  v22 = _Block_copy(&aBlock);
  sub_1ABD04B78((uint64_t)a2);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v16, *a10, v19, v22);
  _Block_release(v22);

}

void sub_1ABDA6B0C(void *a1, __int128 *a2, void (*a3)(void *), uint64_t a4, void (*a5)(__int128 *))
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v16[2];
  __int128 v17;

  if (a1)
  {
    v8 = a1;
    if (qword_1ED34CA60 != -1)
      swift_once();
    v9 = (id)qword_1ED3683A8;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1ABF36EA0;
    v15 = *a2;
    v11 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    v12 = sub_1ABD0F5C0();
    *(_QWORD *)(v10 + 64) = v12;
    *(_OWORD *)(v10 + 32) = *a2;
    v17 = *(__int128 *)((char *)a2 + 24);
    v13 = v17;
    *(_QWORD *)(v10 + 96) = v11;
    *(_QWORD *)(v10 + 104) = v12;
    *(_OWORD *)(v10 + 72) = v13;
    sub_1ABD03ADC((uint64_t)&v15);
    sub_1ABD03ADC((uint64_t)&v17);
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF31F6C();
    *(_QWORD *)(v10 + 136) = v11;
    *(_QWORD *)(v10 + 144) = v12;
    *(_QWORD *)(v10 + 112) = 0;
    *(_QWORD *)(v10 + 120) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    a3(a1);

  }
  else
  {
    v14 = a2[1];
    v15 = *a2;
    v16[0] = v14;
    *(_OWORD *)((char *)v16 + 10) = *(__int128 *)((char *)a2 + 26);
    a5(&v15);
  }
}

uint64_t sub_1ABDA6CCC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _BYTE v12[48];
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v2 = a1[1];
  v13 = *a1;
  v14[0] = v2;
  *(_OWORD *)((char *)v14 + 10) = *(__int128 *)((char *)a1 + 26);
  sub_1ABD843F0(a2, (uint64_t)v12, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v3 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF366E0;
  v17 = v13;
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1ABD0F5C0();
  *(_QWORD *)(v4 + 64) = v6;
  *(_OWORD *)(v4 + 32) = v13;
  sub_1ABD843F0((uint64_t)v12, (uint64_t)&v15, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  v7 = v16;
  if (v16)
  {
    v8 = v15;
    *(_QWORD *)(v4 + 96) = v5;
    *(_QWORD *)(v4 + 104) = v6;
    *(_QWORD *)(v4 + 72) = v8;
    *(_QWORD *)(v4 + 80) = v7;
    sub_1ABF2FF5C();
  }
  else
  {
    *(_QWORD *)(v4 + 96) = v5;
    *(_QWORD *)(v4 + 104) = v6;
    *(_QWORD *)(v4 + 72) = 7104878;
    *(_QWORD *)(v4 + 80) = 0xE300000000000000;
  }
  v9 = v3;
  sub_1ABD03ADC((uint64_t)&v17);
  sub_1ABF31BF4();
  sub_1ABF31318();

  v10 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v10);
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA6EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, _OWORD *a7)
{
  uint64_t v13;
  __int128 v14;

  v13 = swift_allocObject();
  sub_1ABD843F0((uint64_t)a6, v13 + 16, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  v14 = a7[1];
  *(_OWORD *)(v13 + 64) = *a7;
  *(_OWORD *)(v13 + 80) = v14;
  *(_OWORD *)(v13 + 90) = *(_OWORD *)((char *)a7 + 26);
  *(_QWORD *)(v13 + 112) = a3;
  *(_QWORD *)(v13 + 120) = a4;
  *(_QWORD *)(v13 + 128) = a1;
  *(_QWORD *)(v13 + 136) = a2;
  sub_1ABDA85BC(a6);
  sub_1ABD04B78((uint64_t)a7);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDA6F7C(void **a1, uint64_t *a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v12;
  void *v13;
  void *v14;
  __int128 v15;
  void *v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  __int128 aBlock;
  _BYTE v24[32];
  _BYTE v25[8];
  __int128 v26;
  _OWORD v27[2];

  sub_1ABD843F0((uint64_t)a2, (uint64_t)v25, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  v12 = *a1;
  sub_1ABD843F0((uint64_t)a2, (uint64_t)&v26, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  if (*((_QWORD *)&v26 + 1))
  {
    aBlock = v26;
    *(_OWORD *)v24 = v27[0];
    *(_OWORD *)&v24[10] = *(_OWORD *)((char *)v27 + 10);
    sub_1ABCF7BCC(0, &qword_1ED34E018);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABDA2D58((uint64_t)&aBlock);
    v14 = v13;
  }
  else
  {
    v14 = 0;
  }
  sub_1ABCF7BCC(0, &qword_1ED34E018);
  v15 = a3[1];
  aBlock = *a3;
  *(_OWORD *)v24 = v15;
  *(_OWORD *)&v24[10] = *(__int128 *)((char *)a3 + 26);
  sub_1ABD04B78((uint64_t)a3);
  sub_1ABDA2D58((uint64_t)&aBlock);
  v17 = v16;
  v18 = swift_allocObject();
  v19 = a3[1];
  *(_OWORD *)(v18 + 16) = *a3;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 42) = *(__int128 *)((char *)a3 + 26);
  sub_1ABD843F0((uint64_t)a2, v18 + 64, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
  *(_QWORD *)(v18 + 112) = a4;
  *(_QWORD *)(v18 + 120) = a5;
  *(_QWORD *)(v18 + 128) = a6;
  *(_QWORD *)(v18 + 136) = a7;
  *(_QWORD *)&v24[16] = sub_1ABDA868C;
  *(_QWORD *)&v24[24] = v18;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)v24 = sub_1ABD9FF74;
  *(_QWORD *)&v24[8] = &block_descriptor_3;
  v20 = _Block_copy(&aBlock);
  sub_1ABDA85BC(a2);
  sub_1ABD04B78((uint64_t)a3);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v12, sel_reorderWatchlist_afterWatchlist_completion_, v17, v14, v20);
  _Block_release(v20);

}

void sub_1ABDA71B0(void *a1, uint64_t *a2, uint64_t a3, void (*a4)(void *), uint64_t a5, void (*a6)(__int128 *))
{
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];

  if (a1)
  {
    v10 = a1;
    if (qword_1ED34CA60 != -1)
      swift_once();
    v11 = (id)qword_1ED3683A8;
    sub_1ABF31BE8();
    sub_1ABD0F55C();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1ABF36EA0;
    v13 = *a2;
    v14 = a2[1];
    v15 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
    v16 = sub_1ABD0F5C0();
    *(_QWORD *)(v12 + 64) = v16;
    *(_QWORD *)(v12 + 32) = v13;
    *(_QWORD *)(v12 + 40) = v14;
    sub_1ABD843F0(a3, (uint64_t)&v20, &qword_1ED34DB50, (uint64_t)&type metadata for Watchlist);
    v17 = *((_QWORD *)&v20 + 1);
    if (*((_QWORD *)&v20 + 1))
    {
      v18 = v20;
      *(_QWORD *)(v12 + 96) = v15;
      *(_QWORD *)(v12 + 104) = v16;
      *(_QWORD *)(v12 + 72) = v18;
      *(_QWORD *)(v12 + 80) = v17;
      sub_1ABF2FF5C();
    }
    else
    {
      *(_QWORD *)(v12 + 96) = v15;
      *(_QWORD *)(v12 + 104) = v16;
      *(_QWORD *)(v12 + 72) = 7104878;
      *(_QWORD *)(v12 + 80) = 0xE300000000000000;
    }
    sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
    sub_1ABF2FF5C();
    sub_1ABF31F6C();
    *(_QWORD *)(v12 + 136) = v15;
    *(_QWORD *)(v12 + 144) = v16;
    *(_QWORD *)(v12 + 112) = 0;
    *(_QWORD *)(v12 + 120) = 0xE000000000000000;
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    a4(a1);

  }
  else
  {
    v19 = *((_OWORD *)a2 + 1);
    v20 = *(_OWORD *)a2;
    v21[0] = v19;
    *(_OWORD *)((char *)v21 + 10) = *(_OWORD *)((char *)a2 + 26);
    a6(&v20);
  }
}

uint64_t sub_1ABDA73A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (_QWORD *)(v2 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v5 >> 62)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1AF4380CC](i, v5);
    }
    else
    {
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      sub_1ABF2FF68();
    }
    v10 = MEMORY[0x1AF4390D4](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v14;
LABEL_15:
  *v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for WatchlistServiceObserverProxy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1AF437C04](v13);
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  return swift_endAccess();
}

uint64_t sub_1ABDA75B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1ABDAACB4;
  *(_QWORD *)(v5 + 24) = v4;
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

uint64_t sub_1ABDA764C(uint64_t a1)
{
  return sub_1ABD9FAFC(a1);
}

uint64_t sub_1ABDA766C(uint64_t a1, uint64_t a2)
{
  return sub_1ABD9FFC8(a1, a2);
}

uint64_t sub_1ABDA768C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABDA02EC(a1, a2, a3);
}

uint64_t sub_1ABDA76AC(uint64_t a1, __int128 *a2)
{
  return sub_1ABDA594C(a1, a2);
}

uint64_t sub_1ABDA76CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABDA0840(a1, a2, a3, a4);
}

uint64_t sub_1ABDA76EC(uint64_t a1, uint64_t a2)
{
  return sub_1ABDA78D0(a1, a2, &qword_1ED34DD38, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock);
}

uint64_t sub_1ABDA7710(uint64_t a1, uint64_t a2)
{
  return sub_1ABDA73A0(a1, a2);
}

uint64_t sub_1ABDA7730(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD8A848(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(v3 + 16) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDA77C4(uint64_t a1, uint64_t a2)
{
  return sub_1ABDA1ADC(a1, a2);
}

uint64_t sub_1ABDA77F8(uint64_t a1, uint64_t a2)
{
  return sub_1ABDA1ADC(a1, a2);
}

uint64_t sub_1ABDA782C(__int128 *a1)
{
  return sub_1ABDA2058(a1);
}

uint64_t sub_1ABDA784C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABDA2448(a1, a2, a3);
}

uint64_t sub_1ABDA786C(__int128 *a1, char *a2)
{
  return sub_1ABDA29A0(a1, a2);
}

uint64_t sub_1ABDA788C()
{
  return sub_1ABDA3090();
}

uint64_t sub_1ABDA78AC(uint64_t a1, uint64_t a2)
{
  return sub_1ABDA78D0(a1, a2, (unint64_t *)&unk_1ED34DD50, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist);
}

uint64_t sub_1ABDA78D0(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1ABD04518(0, a3, a4, a5);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA7924()
{
  sub_1ABD04518(0, &qword_1ED34DD38, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA79A0()
{
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34DD80, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF31228();
}

uint64_t sub_1ABDA7A00(uint64_t a1, __int128 *a2)
{
  return sub_1ABDA44A0(a1, a2);
}

uint64_t sub_1ABDA7A20(uint64_t a1, uint64_t a2, __int128 *a3)
{
  return sub_1ABDA4BBC(a1, a2, a3);
}

uint64_t sub_1ABDA7A40(uint64_t a1, uint64_t a2, __int128 *a3)
{
  return sub_1ABDA5158(a1, a2, a3);
}

uint64_t sub_1ABDA7A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  return sub_1ABDA5F3C(a1, a2, a3, a4, a5);
}

uint64_t sub_1ABDA7A80(uint64_t a1, uint64_t a2)
{
  return sub_1ABDA78D0(a1, a2, (unint64_t *)&qword_1ED34DD60, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968]);
}

uint64_t sub_1ABDA7AA4(__int128 *a1)
{
  return sub_1ABDA6828(a1);
}

uint64_t sub_1ABDA7AD8(__int128 *a1)
{
  return sub_1ABDA6828(a1);
}

uint64_t sub_1ABDA7B0C(__int128 *a1, uint64_t a2)
{
  return sub_1ABDA6CCC(a1, a2);
}

uint64_t type metadata accessor for CloudKitWatchlistDefaultsProvider()
{
  return objc_opt_self();
}

void sub_1ABDA7C30(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  id v10;

  v5 = v2[5];
  v6 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v2;
  v7[3] = a1;
  v7[4] = a2;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v8 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v2;
  v9[3] = a1;
  v9[4] = a2;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v10 = (id)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABDA7D6C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _QWORD))
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  if ((*(_BYTE *)a1 & 1) != 0)
    return sub_1ABDAA3B8(a3);
  v4 = *(_QWORD *)(a1 + 80);
  if (!*(_QWORD *)(v4 + 16))
    return sub_1ABDAA3B8(a3);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E10]), sel_init);
  sub_1ABD0B940(v4);
  v6 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_addObjectsFromArray_, v6);

  v7 = objc_msgSend(v5, sel_array);
  v8 = sub_1ABF31A08();

  v9 = sub_1ABDA7F78(v8);
  swift_bridgeObjectRelease();
  a3(v9, 0);

  return swift_bridgeObjectRelease();
}

void sub_1ABDA7EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  if (!a1)
  {
    v5 = 0;
    if (a2)
      goto LABEL_3;
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  v5 = (void *)sub_1ABF319FC();
  if (!a2)
    goto LABEL_5;
LABEL_3:
  v6 = sub_1ABF30460();
LABEL_6:
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t sub_1ABDA7F78(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[32];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1ABD16414(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_1ABD1FEFC(i, (uint64_t)v11);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ABD16414(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v12;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1ABD16414(v5 > 1, v6 + 1, 1);
        v3 = v12;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      v7 = v3 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1ABDA80BC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudKitWatchlistMetadataProvider()
{
  return objc_opt_self();
}

uint64_t sub_1ABDA8108(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, _QWORD))
{
  uint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v16;

  sub_1ABDAAB0C();
  sub_1ABF310A8();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD9F74C(v4);
  swift_bridgeObjectRelease();
  if (qword_1ED34D5E8 != -1)
    swift_once();
  v6 = (void *)qword_1ED3683F0;
  sub_1ABD0F55C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1ABF366E0;
  if (v5 >> 62)
  {
    v16 = v6;
    sub_1ABF2FF5C();
    v8 = sub_1ABF31FE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v6;
  }
  v10 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v7 + 64) = v10;
  *(_QWORD *)(v7 + 32) = v8;
  v11 = sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED34E070);
  v12 = MEMORY[0x1AF437C34](v5, v11);
  v14 = v13;
  *(_QWORD *)(v7 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 104) = sub_1ABD0F5C0();
  *(_QWORD *)(v7 + 72) = v12;
  *(_QWORD *)(v7 + 80) = v14;
  sub_1ABF31BF4();
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  a3(v5, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDA82DC(uint64_t a1, uint64_t (*a2)(_QWORD, uint64_t))
{
  id v4;
  uint64_t v5;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v4 = (id)qword_1ED3683F0;
  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v5 + 32) = 0;
  *(_QWORD *)(v5 + 40) = 0xE000000000000000;
  sub_1ABF31318();

  swift_bridgeObjectRelease();
  return a2(0, a1);
}

void sub_1ABDA84A8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = a1;
  if (a1)
  {
    sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED34E070);
    v5 = (void *)sub_1ABF319FC();
  }
  if (a2)
    v6 = sub_1ABF30460();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t sub_1ABDA853C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA6EB0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(uint64_t **)(v4 + 24), *(_OWORD **)(v4 + 32));
}

uint64_t sub_1ABDA8548()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA85A8(void **a1)
{
  uint64_t v1;

  sub_1ABDA6F7C(a1, (uint64_t *)(v1 + 16), (__int128 *)(v1 + 64), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
}

uint64_t *sub_1ABDA85BC(uint64_t *a1)
{
  sub_1ABDA85F0(*a1, a1[1]);
  return a1;
}

uint64_t sub_1ABDA85F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

uint64_t sub_1ABDA862C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 72))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA868C(void *a1)
{
  uint64_t v1;

  sub_1ABDA71B0(a1, (uint64_t *)(v1 + 16), v1 + 64, *(void (**)(void *))(v1 + 112), *(_QWORD *)(v1 + 120), *(void (**)(__int128 *))(v1 + 128));
}

uint64_t sub_1ABDA86A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA6788(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_OWORD **)(v4 + 24));
}

void sub_1ABDA86CC(void **a1)
{
  sub_1ABDA8754(a1, (uint64_t)&unk_1E5AF4358, (uint64_t)sub_1ABDA86F4, (uint64_t)&block_descriptor_12, (SEL *)&selRef_removeWatchlistFromWatchlistOrder_completion_);
}

void sub_1ABDA86F4(void *a1)
{
  sub_1ABDA87A4(a1);
}

uint64_t sub_1ABDA8704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA6788(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_OWORD **)(v4 + 24));
}

void sub_1ABDA8730(void **a1)
{
  sub_1ABDA8754(a1, (uint64_t)&unk_1E5AF43D0, (uint64_t)sub_1ABDA8794, (uint64_t)&block_descriptor_21, (SEL *)&selRef_addWatchlistToWatchlistOrder_completion_);
}

void sub_1ABDA8754(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;

  sub_1ABDA69BC(a1, (__int128 *)(v5 + 16), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88), a2, a3, a4, a5);
}

void sub_1ABDA8794(void *a1)
{
  sub_1ABDA87A4(a1);
}

void sub_1ABDA87A4(void *a1)
{
  uint64_t v1;

  sub_1ABDA6B0C(a1, (__int128 *)(v1 + 16), *(void (**)(void *))(v1 + 64), *(_QWORD *)(v1 + 72), *(void (**)(__int128 *))(v1 + 80));
}

uint64_t sub_1ABDA87CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABDA63D0(a1, a2, a3, a4);
}

void sub_1ABDA87D8(void **a1)
{
  uint64_t *v1;

  sub_1ABDA6480(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1ABDA87E8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1ABDA655C(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(void))(v2 + 32));
}

unint64_t sub_1ABDA87F4()
{
  unint64_t result;

  result = qword_1EEC424B8;
  if (!qword_1EEC424B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39F3C, &type metadata for CloudKitWatchlistService.ServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEC424B8);
  }
  return result;
}

uint64_t sub_1ABDA8838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA60EC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_OWORD **)(v4 + 56));
}

uint64_t sub_1ABDA8868()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA88BC(id *a1)
{
  uint64_t v1;

  sub_1ABDA61F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (__int128 *)(v1 + 48), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120));
}

uint64_t sub_1ABDA88F0()
{
  return objectdestroy_41Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1ABDA8908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA53D4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(uint64_t **)(v4 + 32), *(_OWORD **)(v4 + 40));
}

uint64_t sub_1ABDA8914()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 160))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA89DC(id *a1)
{
  uint64_t v1;

  sub_1ABDA54E0(a1, v1 + 16, (uint64_t *)(v1 + 152), (__int128 *)(v1 + 288), *(_QWORD *)(v1 + 336), *(_QWORD *)(v1 + 344), *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t *sub_1ABDA89F4(uint64_t *a1)
{
  sub_1ABD0DF08(*a1, a1[1]);
  return a1;
}

uint64_t sub_1ABDA8A4C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 208))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA8B14(void *a1)
{
  uint64_t v1;

  sub_1ABDA56F4(a1, (__int128 *)(v1 + 16), (__int128 *)(v1 + 152), v1 + 200, *(void (**)(void *))(v1 + 336), *(_QWORD *)(v1 + 344), *(void (**)(__int128 *))(v1 + 352));
}

uint64_t sub_1ABDA8B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA4D48(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_OWORD **)(v4 + 40));
}

void sub_1ABDA8B3C(void **a1)
{
  uint64_t v1;

  sub_1ABDA4E30(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (__int128 *)(v1 + 32), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t objectdestroy_60Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA8BA0(void *a1)
{
  uint64_t v1;

  sub_1ABDA4FAC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (__int128 *)(v1 + 32), *(void (**)(void *))(v1 + 80), *(_QWORD *)(v1 + 88), *(void (**)(uint64_t, uint64_t))(v1 + 96));
}

uint64_t sub_1ABDA8BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA4664(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_OWORD **)(v4 + 32));
}

uint64_t sub_1ABDA8BC0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA8C4C(id *a1)
{
  uint64_t v1;

  sub_1ABDA4788(a1, *(_QWORD **)(v1 + 16), v1 + 24, (__int128 *)(v1 + 160), *(_QWORD *)(v1 + 208), *(_QWORD *)(v1 + 216), *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
}

uint64_t sub_1ABDA8C64()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA8CE8(void *a1)
{
  uint64_t v1;

  sub_1ABDA4A14(a1, v1 + 16, (__int128 *)(v1 + 152), *(void (**)(void *))(v1 + 200), *(_QWORD *)(v1 + 208), *(void (**)(void))(v1 + 216));
}

uint64_t sub_1ABDA8CFC(uint64_t a1, uint64_t a2)
{
  return sub_1ABDA75B8(a1, a2);
}

uint64_t sub_1ABDA8D04(id *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(id))(v1 + 16))(objc_msgSend(*a1, sel_synchronize));
}

uint64_t sub_1ABDA8D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA3D54(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_OWORD **)(v4 + 24));
}

uint64_t sub_1ABDA8D3C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA8D88(void **a1)
{
  uint64_t v1;

  sub_1ABDA3E2C(a1, (__int128 *)(v1 + 16), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_1ABDA8D9C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABDA8DC0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA8E0C(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1ABDA3FAC(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void))(v2 + 24), *(_QWORD *)(v2 + 32), (uint64_t *)(v2 + 40), *(void (**)(uint64_t))(v2 + 88));
}

unint64_t sub_1ABDA8E20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC43290;
  if (!qword_1EEC43290)
  {
    v1 = sub_1ABF30B44();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DB35A8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC43290);
  }
  return result;
}

uint64_t sub_1ABDA8E68(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t result;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1ABD080B8(0, v2, 0);
  if (*(_QWORD *)(a2 + 16))
  {
    v6 = (uint64_t *)(a1 + 40);
    v3 = v37;
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      swift_bridgeObjectRetain_n();
      v9 = sub_1ABD00F9C(v7, v8);
      if ((v10 & 1) == 0)
        break;
      v11 = *(_QWORD *)(a2 + 56) + 136 * v9;
      v28 = *(_OWORD *)v11;
      v12 = *(_OWORD *)(v11 + 64);
      v14 = *(_OWORD *)(v11 + 16);
      v13 = *(_OWORD *)(v11 + 32);
      v31 = *(_OWORD *)(v11 + 48);
      v32 = v12;
      v29 = v14;
      v30 = v13;
      v16 = *(_OWORD *)(v11 + 96);
      v15 = *(_OWORD *)(v11 + 112);
      v17 = *(_OWORD *)(v11 + 80);
      v36 = *(_QWORD *)(v11 + 128);
      v34 = v16;
      v35 = v15;
      v33 = v17;
      sub_1ABD97ECC((uint64_t)&v28);
      swift_bridgeObjectRelease_n();
      v37 = v3;
      v19 = *(_QWORD *)(v3 + 16);
      v18 = *(_QWORD *)(v3 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1ABD080B8(v18 > 1, v19 + 1, 1);
        v3 = v37;
      }
      *(_QWORD *)(v3 + 16) = v19 + 1;
      v20 = v3 + 136 * v19;
      *(_OWORD *)(v20 + 32) = v28;
      v21 = v29;
      v22 = v30;
      v23 = v32;
      *(_OWORD *)(v20 + 80) = v31;
      *(_OWORD *)(v20 + 96) = v23;
      *(_OWORD *)(v20 + 48) = v21;
      *(_OWORD *)(v20 + 64) = v22;
      v24 = v33;
      v25 = v34;
      v26 = v35;
      *(_QWORD *)(v20 + 160) = v36;
      *(_OWORD *)(v20 + 128) = v25;
      *(_OWORD *)(v20 + 144) = v26;
      *(_OWORD *)(v20 + 112) = v24;
      if (!--v2)
        return v3;
      v6 += 2;
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_11;
    }
  }
  else
  {
LABEL_11:
    __break(1u);
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1ABDA8FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABDA3614(a1, a2, a3, a4);
}

uint64_t sub_1ABDA9004()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA902C(void **a1)
{
  uint64_t *v1;

  sub_1ABDA36C4(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1ABDA903C(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1ABDA37A0(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(_QWORD *))(v2 + 32));
}

uint64_t sub_1ABDA9048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA3234(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24), *(_OWORD **)(v4 + 32));
}

uint64_t sub_1ABDA9088(uint64_t a1)
{
  return sub_1ABDA9174(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABDA32E8);
}

uint64_t sub_1ABDA9094()
{
  return objectdestroy_118Tm();
}

uint64_t sub_1ABDA909C(uint64_t a1)
{
  return sub_1ABDA91A0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD))sub_1ABDA3454);
}

_BYTE *sub_1ABDA90A8(_BYTE *a1, _BYTE *a2)
{
  __swift_memcpy1_1(a2, a1);
  return a2;
}

uint64_t sub_1ABDA90E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA3234(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24), *(_OWORD **)(v4 + 32));
}

uint64_t objectdestroy_115Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABDA9168(uint64_t a1)
{
  return sub_1ABDA9174(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABDA2B5C);
}

uint64_t sub_1ABDA9174(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(unsigned __int8 *)(v2 + 16), v2 + 24, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96));
}

uint64_t sub_1ABDA918C()
{
  return objectdestroy_118Tm();
}

uint64_t sub_1ABDA9194(uint64_t a1)
{
  return sub_1ABDA91A0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD))sub_1ABDA2EC0);
}

uint64_t sub_1ABDA91A0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), v2 + 48, *(unsigned __int8 *)(v2 + 90));
}

uint64_t sub_1ABDA91B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA25DC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_OWORD **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40));
}

uint64_t sub_1ABDA91C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA9210(void **a1)
{
  uint64_t v1;

  sub_1ABDA269C(a1, (_OWORD *)(v1 + 16), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_1ABDA9224()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABDA9270(void *a1)
{
  uint64_t v1;

  sub_1ABDA27E4(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + 64);
}

uint64_t sub_1ABDA9284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA6788(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_OWORD **)(v4 + 24));
}

uint64_t objectdestroy_5Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA92F4(void **a1)
{
  uint64_t v1;

  sub_1ABDA21C0(a1, (_OWORD *)(v1 + 16), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_1ABDA9304()
{
  return objectdestroy_118Tm();
}

uint64_t objectdestroy_118Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABDA935C(void *a1)
{
  uint64_t v1;

  sub_1ABDA22D4(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(__int128 *))(v1 + 32), *(_QWORD *)(v1 + 40), (__int128 *)(v1 + 48));
}

uint64_t sub_1ABDA936C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1ABDA1C34(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_1ABDA93A4()
{
  return objectdestroy_41Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1ABDA93B8(uint64_t a1)
{
  return sub_1ABDA9820(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABDA1CD4);
}

uint64_t sub_1ABDA93C4()
{
  return objectdestroy_154Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1ABDA93D8(void *a1)
{
  uint64_t v1;

  sub_1ABDA1EA0(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1ABDA9408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1ABDA1C34(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_1ABDA9440()
{
  return objectdestroy_41Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1ABDA9454(uint64_t a1)
{
  return sub_1ABDA9820(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABDA13F8);
}

uint64_t sub_1ABDA9460()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA949C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1ABDA14FC(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64));
}

uint64_t objectdestroy_26Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA94FC(void *a1, void *a2)
{
  uint64_t v2;

  sub_1ABDA17EC(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(_QWORD *))(v2 + 32));
}

uint64_t sub_1ABDA9508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA0BC8(a1, a2, a3, a4, v4);
}

void sub_1ABDA9514(void **a1)
{
  uint64_t *v1;

  sub_1ABDA0C84(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t objectdestroy_179Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA955C(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1ABDA0D94(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void))(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(uint64_t))(v2 + 40));
}

uint64_t sub_1ABDA956C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1ABDA09AC(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6]);
}

uint64_t sub_1ABDA9598()
{
  return objectdestroy_154Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_154Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  _QWORD *v2;

  a1(v2[3]);
  a1(v2[5]);
  a2(v2[7]);
  a2(v2[9]);
  return swift_deallocObject();
}

void sub_1ABDA9600(void **a1)
{
  uint64_t *v1;

  sub_1ABDA0A98(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
}

uint64_t sub_1ABDA9630()
{
  return objectdestroy_41Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1ABDA9644(void *a1)
{
  uint64_t v1;

  sub_1ABDA6370(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1ABDA9664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA5B0C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_OWORD **)(v4 + 32));
}

void sub_1ABDA9674(void **a1)
{
  uint64_t v1;

  sub_1ABDA5BF4(a1, *(_QWORD *)(v1 + 16), (__int128 *)(v1 + 24), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t objectdestroy_206Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA96D8(void *a1)
{
  uint64_t v1;

  sub_1ABDA5DB8(a1, *(_QWORD *)(v1 + 16), (__int128 *)(v1 + 24), *(void (**)(void *))(v1 + 72), *(_QWORD *)(v1 + 80), *(void (**)(uint64_t))(v1 + 88));
}

uint64_t sub_1ABDA96EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDA054C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(uint64_t **)(v4 + 32));
}

uint64_t sub_1ABDA96F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 160))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA97A8(void **a1)
{
  uint64_t *v1;

  sub_1ABDA0630(a1, (uint64_t)(v1 + 2), (uint64_t)(v1 + 19), v1[36], v1[37], v1[38], v1[39]);
}

uint64_t sub_1ABDA97C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1ABDA0110(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_1ABDA97D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v3 = *(uint64_t (**)(_QWORD *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t sub_1ABDA9800()
{
  return objectdestroy_41Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1ABDA9814(uint64_t a1)
{
  return sub_1ABDA9820(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABDA01DC);
}

uint64_t sub_1ABDA9820(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1ABDA9834()
{
  return objectdestroy_41Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_41Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 24));
  swift_release();
  a2(*(_QWORD *)(v2 + 56));
  return swift_deallocObject();
}

uint64_t sub_1ABDA988C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABD9FC78(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1ABDA9894()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDA9908(id *a1)
{
  uint64_t v1;

  sub_1ABD9FD54(a1, *(_QWORD **)(v1 + 16), v1 + 24, *(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176), *(_QWORD *)(v1 + 184));
}

uint64_t objectdestroy_218Tm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABDA998C(void *a1)
{
  uint64_t v1;

  sub_1ABDA07B0(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_OWORD *))(v1 + 32), *(_QWORD *)(v1 + 40), v1 + 48);
}

uint64_t sub_1ABDA99AC(uint64_t a1)
{
  uint64_t *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t *, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];

  v14 = *v1;
  swift_beginAccess();
  v3 = v1[2];
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1ABF2FF5C();
    result = sub_1ABF2FF5C();
    if (v4)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v4 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v13 = v3 & 0xC000000000000001;
    do
    {
      if (v13)
      {
        v7 = MEMORY[0x1AF4380CC](v6, v3);
      }
      else
      {
        v7 = *(_QWORD *)(v3 + 8 * v6 + 32);
        sub_1ABF2FF68();
      }
      v16[3] = v14;
      v16[4] = &off_1E5AED8C0;
      v16[0] = v1;
      if (MEMORY[0x1AF4390D4](v7 + 16))
      {
        v8 = *(_QWORD *)(v7 + 24);
        ObjectType = swift_getObjectType();
        v15 = a1;
        v10 = v3;
        v11 = a1;
        v12 = *(void (**)(_QWORD *, uint64_t *, uint64_t, uint64_t))(v8 + 8);
        swift_retain_n();
        v12(v16, &v15, ObjectType, v8);
        a1 = v11;
        v3 = v10;
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain_n();
      }
      ++v6;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      swift_release();
      swift_release();
    }
    while (v4 != v6);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDA9B60(id a1)
{
  uint64_t *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, uint64_t, unint64_t);
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_QWORD *, uint64_t, unint64_t);
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  id v47;
  id v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  id v62;
  id v63;
  uint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t ObjectType;
  void (*v76)(_QWORD *, unint64_t *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t *v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD v86[5];

  v83 = *v1;
  sub_1ABD83F24();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x1E0C80A78](v3);
  v81 = (uint64_t *)((char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x1E0C80A78](v6);
  v80 = (uint64_t *)((char *)&v78 - v9);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v78 - v11);
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v78 - v13);
  v15 = objc_msgSend(a1, sel_addedWatchlistIDs);
  v16 = sub_1ABF31A08();

  v17 = *(_QWORD *)(v16 + 16);
  v82 = a1;
  v84 = v4;
  if (v17)
  {
    v18 = *MEMORY[0x1E0DB3B48];
    v19 = *(void (**)(_QWORD *, uint64_t, unint64_t))(v5 + 104);
    v78 = v16;
    v20 = (uint64_t *)(v16 + 40);
    v21 = MEMORY[0x1E0DEE9D8];
    do
    {
      v22 = *v20;
      *v14 = *(v20 - 1);
      v14[1] = v22;
      v19(v14, v18, v4);
      sub_1ABF2FF5C();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_1ABD82A90(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
      v24 = *(_QWORD *)(v21 + 16);
      v23 = *(_QWORD *)(v21 + 24);
      if (v24 >= v23 >> 1)
        v21 = sub_1ABD82A90(v23 > 1, v24 + 1, 1, v21);
      v20 += 2;
      *(_QWORD *)(v21 + 16) = v24 + 1;
      v25 = v21
          + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
          + *(_QWORD *)(v5 + 72) * v24;
      v4 = v84;
      (*(void (**)(unint64_t, _QWORD *, unint64_t))(v5 + 32))(v25, v14, v84);
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    a1 = v82;
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1E0DEE9D8];
  }
  v26 = objc_msgSend(a1, sel_removedWatchlistIDs, v78);
  v27 = sub_1ABF31A08();

  v28 = *(_QWORD *)(v27 + 16);
  if (v28)
  {
    v29 = *MEMORY[0x1E0DB3B50];
    v30 = *(void (**)(_QWORD *, uint64_t, unint64_t))(v5 + 104);
    v31 = (uint64_t *)(v27 + 40);
    do
    {
      v32 = *v31;
      *v12 = *(v31 - 1);
      v12[1] = v32;
      v30(v12, v29, v4);
      sub_1ABF2FF5C();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_1ABD82A90(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
      v34 = *(_QWORD *)(v21 + 16);
      v33 = *(_QWORD *)(v21 + 24);
      if (v34 >= v33 >> 1)
        v21 = sub_1ABD82A90(v33 > 1, v34 + 1, 1, v21);
      v31 += 2;
      *(_QWORD *)(v21 + 16) = v34 + 1;
      v35 = v21
          + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
          + *(_QWORD *)(v5 + 72) * v34;
      v4 = v84;
      (*(void (**)(unint64_t, _QWORD *, unint64_t))(v5 + 32))(v35, v12, v84);
      --v28;
    }
    while (v28);
  }
  swift_bridgeObjectRelease();
  v36 = v82;
  v37 = objc_msgSend(v82, sel_addedWatchlistIDs);
  v38 = sub_1ABF31A08();

  v39 = *(_QWORD *)(v38 + 16);
  v78 = v38;
  if (v39)
  {
    LODWORD(v84) = *MEMORY[0x1E0DB3B40];
    v40 = (uint64_t *)(v38 + 40);
    do
    {
      v41 = *(v40 - 1);
      v42 = *v40;
      sub_1ABF2FF5C();
      v43 = objc_msgSend(v36, sel_indexesOfAddedWatchlistIDs, v78);
      sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD80);
      v44 = sub_1ABF31624();

      if (*(_QWORD *)(v44 + 16))
      {
        sub_1ABF2FF5C();
        v45 = sub_1ABD00F9C(v41, v42);
        if ((v46 & 1) != 0)
        {
          v47 = *(id *)(*(_QWORD *)(v44 + 56) + 8 * v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v48 = objc_msgSend(v47, sel_integerValue);

          v49 = v80;
          *v80 = v41;
          v49[1] = v42;
          v49[2] = v48;
          (*(void (**)(void))(v5 + 104))();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_1ABD82A90(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
          v51 = *(_QWORD *)(v21 + 16);
          v50 = *(_QWORD *)(v21 + 24);
          if (v51 >= v50 >> 1)
            v21 = sub_1ABD82A90(v50 > 1, v51 + 1, 1, v21);
          *(_QWORD *)(v21 + 16) = v51 + 1;
          (*(void (**)(unint64_t, _QWORD *, unint64_t))(v5 + 32))(v21+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v51, v80, v4);
          v36 = v82;
          goto LABEL_21;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_21:
      v40 += 2;
      --v39;
    }
    while (v39);
  }
  swift_bridgeObjectRelease();
  v52 = objc_msgSend(v36, sel_reorderedWatchlistIDs);
  v53 = sub_1ABF31A08();

  v54 = *(_QWORD *)(v53 + 16);
  v80 = (_QWORD *)v53;
  if (v54)
  {
    LODWORD(v84) = *MEMORY[0x1E0DB3B40];
    v55 = (uint64_t *)(v53 + 40);
    do
    {
      v57 = *(v55 - 1);
      v56 = *v55;
      sub_1ABF2FF5C();
      v58 = objc_msgSend(v36, sel_indexesOfReorderedWatchlistIDs);
      sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD80);
      v59 = sub_1ABF31624();

      if (*(_QWORD *)(v59 + 16))
      {
        sub_1ABF2FF5C();
        v60 = sub_1ABD00F9C(v57, v56);
        if ((v61 & 1) != 0)
        {
          v62 = *(id *)(*(_QWORD *)(v59 + 56) + 8 * v60);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v63 = objc_msgSend(v62, sel_integerValue);

          v64 = v81;
          *v81 = v57;
          v64[1] = v56;
          v64[2] = (uint64_t)v63;
          (*(void (**)(void))(v5 + 104))();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_1ABD82A90(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
          v66 = *(_QWORD *)(v21 + 16);
          v65 = *(_QWORD *)(v21 + 24);
          if (v66 >= v65 >> 1)
            v21 = sub_1ABD82A90(v65 > 1, v66 + 1, 1, v21);
          *(_QWORD *)(v21 + 16) = v66 + 1;
          (*(void (**)(unint64_t, uint64_t *, unint64_t))(v5 + 32))(v21+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v66, v81, v4);
          v36 = v82;
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      v55 += 2;
      --v54;
    }
    while (v54);
  }
  swift_bridgeObjectRelease();
  v67 = v79;
  swift_beginAccess();
  v68 = *(_QWORD *)(v67 + 16);
  if (!(v68 >> 62))
  {
    v69 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v69)
      goto LABEL_43;
LABEL_53:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  v67 = v79;
  result = sub_1ABF31FE4();
  v69 = result;
  if (!result)
    goto LABEL_53;
LABEL_43:
  if (v69 >= 1)
  {
    v71 = 0;
    v84 = v68 & 0xC000000000000001;
    do
    {
      if (v84)
      {
        v72 = MEMORY[0x1AF4380CC](v71, v68);
      }
      else
      {
        v72 = *(_QWORD *)(v68 + 8 * v71 + 32);
        sub_1ABF2FF68();
      }
      v86[3] = v83;
      v86[4] = &off_1E5AED8C0;
      v86[0] = v67;
      if (MEMORY[0x1AF4390D4](v72 + 16))
      {
        v73 = v68;
        v74 = *(_QWORD *)(v72 + 24);
        ObjectType = swift_getObjectType();
        v85 = v21;
        v76 = *(void (**)(_QWORD *, unint64_t *, uint64_t, uint64_t))(v74 + 16);
        swift_retain_n();
        v77 = v74;
        v68 = v73;
        v76(v86, &v85, ObjectType, v77);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain_n();
      }
      ++v71;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
      swift_release();
      swift_release();
    }
    while (v69 != v71);
    goto LABEL_53;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDAA3B8(void (*a1)(uint64_t, _QWORD))
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E10]), sel_init);
  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultsForCurrentCountry);
  v4 = objc_msgSend(v3, sel_defaultSymbols);

  v5 = sub_1ABF31A08();
  sub_1ABD0B940(v5);
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_addObjectsFromArray_, v6);

  v7 = objc_msgSend(v2, sel_array);
  v8 = sub_1ABF31A08();

  v9 = sub_1ABDA7F78(v8);
  swift_bridgeObjectRelease();
  a1(v9, 0);

  return swift_bridgeObjectRelease();
}

void sub_1ABDAA500(uint64_t a1, _QWORD *a2, void (**a3)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v6 = sub_1ABF30B38();
  v67 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v62 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30760();
  v65 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  MEMORY[0x1E0C80A78](v8);
  v61 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1ABF30C28();
  v63 = *(_QWORD *)(v10 - 8);
  v64 = v10;
  MEMORY[0x1E0C80A78](v10);
  v60 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1ABF30B14();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  v17 = a2;
  _Block_copy(a3);
  v18 = sub_1ABF310D8();
  v19 = a1;
  v20 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v18 + 16) == v20)
  {
    v21 = sub_1ABD9F74C(v18);
    swift_bridgeObjectRelease();
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v22 = (void *)qword_1ED3683F0;
    sub_1ABD0F55C();
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1ABF366E0;
    if (v21 >> 62)
    {
      v53 = v22;
      sub_1ABF2FF5C();
      v24 = sub_1ABF31FE4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      v25 = v22;
    }
    v26 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v23 + 64) = v26;
    *(_QWORD *)(v23 + 32) = v24;
    v27 = sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED34E070);
    v28 = MEMORY[0x1AF437C34](v21, v27);
    v30 = v29;
    *(_QWORD *)(v23 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v23 + 104) = sub_1ABD0F5C0();
    *(_QWORD *)(v23 + 72) = v28;
    *(_QWORD *)(v23 + 80) = v30;
    sub_1ABF31BF4();
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    v31 = (void *)sub_1ABF319FC();
    ((void (**)(_QWORD, void *, _QWORD))a3)[2](a3, v31, 0);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v58 = v6;
    v59 = v16;
    swift_bridgeObjectRelease();
    if (qword_1ED34D5E8 != -1)
      swift_once();
    v32 = (void *)qword_1ED3683F0;
    sub_1ABD0F55C();
    v33 = swift_allocObject();
    v34 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v33 + 16) = xmmword_1ABF366E0;
    v35 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v33 + 56) = v34;
    *(_QWORD *)(v33 + 64) = v35;
    *(_QWORD *)(v33 + 32) = v20;
    v36 = v32;
    v37 = MEMORY[0x1E0DEA968];
    v57 = v19;
    v38 = MEMORY[0x1AF437C34](v19, MEMORY[0x1E0DEA968]);
    v40 = v39;
    *(_QWORD *)(v33 + 96) = v37;
    *(_QWORD *)(v33 + 104) = sub_1ABD0F5C0();
    *(_QWORD *)(v33 + 72) = v38;
    *(_QWORD *)(v33 + 80) = v40;
    sub_1ABF31BF4();
    sub_1ABF31318();

    swift_bridgeObjectRelease();
    v41 = v17[5];
    v42 = v17[6];
    __swift_project_boxed_opaque_existential_1(v17 + 2, v41);
    v43 = *MEMORY[0x1E0DB32A8];
    v55 = v12;
    v56 = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v15, v43, v12);
    v44 = v60;
    sub_1ABF30C1C();
    v45 = v61;
    sub_1ABF30754();
    v46 = v67;
    v47 = v62;
    v48 = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v62, *MEMORY[0x1E0DB3560], v58);
    (*(void (**)(uint64_t, char *, char *, char *, char *, uint64_t, uint64_t))(v42 + 8))(v57, v15, v44, v45, v47, v41, v42);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v66);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v64);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v55);
    v49 = (_QWORD *)swift_allocObject();
    v49[2] = v17;
    v49[3] = sub_1ABDAAADC;
    v50 = v59;
    v49[4] = v59;
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    v51 = (void *)sub_1ABF31114();
    sub_1ABF31180();
    swift_release();
    swift_release();

    v52 = swift_allocObject();
    *(_QWORD *)(v52 + 16) = sub_1ABDAAADC;
    *(_QWORD *)(v52 + 24) = v50;
    sub_1ABF2FF68();
    v31 = (void *)sub_1ABF31114();
    sub_1ABF311B0();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

}

uint64_t sub_1ABDAAAB8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1ABDAAADC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1ABDA84A8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1ABDAAAE8(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABDA8108(a1, *(_QWORD *)(v1 + 16), *(void (**)(unint64_t, _QWORD))(v1 + 24));
}

uint64_t sub_1ABDAAB04(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABDA82DC(a1, *(uint64_t (**)(_QWORD, uint64_t))(v1 + 16));
}

void sub_1ABDAAB0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DCD0)
  {
    v0 = sub_1ABF310CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DCD0);
  }
}

void sub_1ABDAAB70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1ABDA7EF8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1ABDAAB7C(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABDA7D6C(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t, _QWORD))(v1 + 24));
}

uint64_t objectdestroy_249Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABDAABC8()
{
  uint64_t v0;

  return sub_1ABDAA3B8(*(void (**)(uint64_t, _QWORD))(v0 + 24));
}

uint64_t storeEnumTagSinglePayload for CloudKitWatchlistService.ServiceError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABDAAC10 + 4 * byte_1ABF39DE2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABDAAC30 + 4 * byte_1ABF39DE7[v4]))();
}

_BYTE *sub_1ABDAAC10(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABDAAC30(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDAAC38(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDAAC40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDAAC48(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDAAC50(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CloudKitWatchlistService.ServiceError()
{
  return &type metadata for CloudKitWatchlistService.ServiceError;
}

unint64_t sub_1ABDAAC70()
{
  unint64_t result;

  result = qword_1EEC424C0;
  if (!qword_1EEC424C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39F14, &type metadata for CloudKitWatchlistService.ServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEC424C0);
  }
  return result;
}

uint64_t sub_1ABDAADA0()
{
  return 0x343434333431;
}

uint64_t sub_1ABDAADB4()
{
  return 0x303634333431;
}

uint64_t sub_1ABDAADC8()
{
  return 0x353534333431;
}

uint64_t sub_1ABDAADDC(uint64_t a1, uint64_t a2)
{
  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED34E878 = a1;
  qword_1ED34E880 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1ABDAAE5C())()
{
  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1ABDAAEC8()
{
  uint64_t v0;
  uint64_t v1;
  char v3;
  BOOL v5;
  char v6;
  char v7;
  BOOL v8;
  BOOL v9;
  char v10;
  BOOL v12;

  if (qword_1ED34F9C8 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_1ED34E878;
  v1 = qword_1ED34E880;
  if (qword_1ED34E878 == 0x313434333431 && qword_1ED34E880 == 0xE600000000000000)
  {
    v6 = 1;
  }
  else
  {
    v3 = sub_1ABF3223C();
    v5 = v0 == 0x343434333431 && v1 == 0xE600000000000000;
    v6 = 1;
    if ((v3 & 1) == 0 && !v5)
    {
      v7 = sub_1ABF3223C();
      v8 = v0 == 0x303634333431 && v1 == 0xE600000000000000;
      v9 = v8;
      v6 = 1;
      if ((v7 & 1) == 0 && !v9)
      {
        v10 = sub_1ABF3223C();
        v12 = v0 == 0x353534333431 && v1 == 0xE600000000000000;
        v6 = 1;
        if ((v10 & 1) == 0 && !v12)
          v6 = sub_1ABF3223C();
      }
    }
  }
  return v6 & 1;
}

ValueMetadata *type metadata accessor for Account()
{
  return &type metadata for Account;
}

ValueMetadata *type metadata accessor for Account.StorefrontID()
{
  return &type metadata for Account.StorefrontID;
}

uint64_t NewsUserProfile.subscribedTagIDs.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t NewsUserProfile.mutedTagIDs.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t NewsUserProfile.autoFavoritedTagIDs.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t NewsUserProfile.purchasedTagIDs.getter()
{
  return sub_1ABF2FF5C();
}

id NewsUserProfile.bundleSubscription.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t NewsUserProfile.init(subscribedTagIDs:mutedTagIDs:autoFavoritedTagIDs:purchasedTagIDs:bundleSubscription:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

_QWORD *assignWithCopy for NewsUserProfile(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[4];
  v5 = (void *)a1[4];
  a1[4] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for NewsUserProfile(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for NewsUserProfile(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsUserProfile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsUserProfile()
{
  return &type metadata for NewsUserProfile;
}

unint64_t sub_1ABDAB25C()
{
  unint64_t result;

  result = qword_1EEC424C8[0];
  if (!qword_1EEC424C8[0])
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39FF0, &type metadata for SymbolNotInWatchlistQuery);
    atomic_store(result, qword_1EEC424C8);
  }
  return result;
}

uint64_t sub_1ABDAB2A0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1ABD16414(0, v1, 0);
  v2 = v26;
  result = sub_1ABE0FADC(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v22 = v1;
  v23 = v5;
  v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 136 * v6);
    v13 = v12[1];
    v25 = *v12;
    v15 = *(_QWORD *)(v26 + 16);
    v14 = *(_QWORD *)(v26 + 24);
    result = sub_1ABF2FF5C();
    if (v15 >= v14 >> 1)
      result = sub_1ABD16414(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v26 + 16) = v15 + 1;
    v16 = v26 + 16 * v15;
    *(_QWORD *)(v16 + 32) = v25;
    *(_QWORD *)(v16 + 40) = v13;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v17 = *(_QWORD *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23)
      goto LABEL_27;
    v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v22;
    }
    else
    {
      v19 = v11 + 1;
      v20 = (unint64_t)(v9 + 63) >> 6;
      v10 = v22;
      if (v11 + 1 < v20)
      {
        v21 = *(_QWORD *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            v21 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1ABDAB4AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *v3;
  v9 = v3[2];
  v8 = v3[3];
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EEC42510 + dword_1EEC42510);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v10;
  *v10 = v4;
  v10[1] = sub_1ABD8D5B0;
  return v12(a2, a3, v7, v9, v8);
}

unint64_t sub_1ABDAB540()
{
  unint64_t result;

  result = qword_1ED34C6A8;
  if (!qword_1ED34C6A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A048, &type metadata for SymbolNotInWatchlistQuery);
    atomic_store(result, (unint64_t *)&qword_1ED34C6A8);
  }
  return result;
}

unint64_t sub_1ABDAB588()
{
  unint64_t result;

  result = qword_1ED34C6B0;
  if (!qword_1ED34C6B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A0A8, &type metadata for SymbolNotInWatchlistQuery);
    atomic_store(result, (unint64_t *)&qword_1ED34C6B0);
  }
  return result;
}

uint64_t sub_1ABDAB5CC()
{
  return sub_1ABCFE1EC(&qword_1ED3467A8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABDAB5F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_1ABDAE404();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_1ABDAB620(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v4 = *(_QWORD *)(v1 + 8);
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EEC42508 + dword_1EEC42508);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1ABD8C690;
  return v7(a1, v4);
}

uint64_t sub_1ABDAB68C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1ABDAB6A4()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = MEMORY[0x1E0DEE9D8];
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1ABDAB6C4()
{
  unint64_t result;

  result = qword_1ED34C6A0;
  if (!qword_1ED34C6A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A0D0, &type metadata for SymbolNotInWatchlistQuery);
    atomic_store(result, (unint64_t *)&qword_1ED34C6A0);
  }
  return result;
}

uint64_t sub_1ABDAB708()
{
  return sub_1ABCFE1EC((unint64_t *)&qword_1ED34CB18, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

unint64_t sub_1ABDAB738()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EEC424E8;
  if (!qword_1EEC424E8)
  {
    sub_1ABDAC6B8(255, qword_1EEC424F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABCFE1EC((unint64_t *)&qword_1ED34CB18, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91CE0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC424E8);
  }
  return result;
}

uint64_t sub_1ABDAB7C0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1ABDAB25C();
  *v1 = v0;
  v1[1] = sub_1ABD37AA0;
  return sub_1ABF2FCC8();
}

uint64_t destroy for SymbolNotInWatchlistQuery()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for SymbolNotInWatchlistQuery(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  return a1;
}

_QWORD *assignWithCopy for SymbolNotInWatchlistQuery(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF68();
  swift_release();
  a1[1] = a2[1];
  sub_1ABF2FF68();
  swift_release();
  a1[2] = a2[2];
  sub_1ABF2FF68();
  swift_release();
  a1[3] = a2[3];
  sub_1ABF2FF68();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *assignWithTake for SymbolNotInWatchlistQuery(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolNotInWatchlistQuery(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolNotInWatchlistQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolNotInWatchlistQuery()
{
  return &type metadata for SymbolNotInWatchlistQuery;
}

uint64_t sub_1ABDABA40(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = result + 32;
  v6 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v4 <= v2)
      v7 = v2;
    else
      v7 = v4;
    v8 = v5 + 136 * v4;
    for (i = v4; ; ++i)
    {
      if (v7 == i)
      {
        __break(1u);
        return result;
      }
      v10 = *(_OWORD *)(v8 + 112);
      v29 = *(_OWORD *)(v8 + 96);
      v30 = v10;
      v31 = *(_QWORD *)(v8 + 128);
      v11 = *(_OWORD *)(v8 + 48);
      v25 = *(_OWORD *)(v8 + 32);
      v26 = v11;
      v12 = *(_OWORD *)(v8 + 80);
      v27 = *(_OWORD *)(v8 + 64);
      v28 = v12;
      v13 = *(_OWORD *)(v8 + 16);
      v4 = i + 1;
      v23 = *(_OWORD *)v8;
      v24 = v13;
      sub_1ABD97ECC((uint64_t)&v23);
      if ((sub_1ABEEFBAC((uint64_t *)&v23, a2) & 1) == 0)
        break;
      result = sub_1ABD97F60((uint64_t)&v23);
      v8 += 136;
      if (v2 == v4)
        return v6;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    v32 = v6;
    if ((result & 1) == 0)
    {
      result = sub_1ABD080B8(0, *(_QWORD *)(v6 + 16) + 1, 1);
      v6 = v32;
    }
    v15 = *(_QWORD *)(v6 + 16);
    v14 = *(_QWORD *)(v6 + 24);
    if (v15 >= v14 >> 1)
    {
      result = sub_1ABD080B8(v14 > 1, v15 + 1, 1);
      v6 = v32;
    }
    *(_QWORD *)(v6 + 16) = v15 + 1;
    v16 = v6 + 136 * v15;
    *(_OWORD *)(v16 + 32) = v23;
    v17 = v24;
    v18 = v25;
    v19 = v27;
    *(_OWORD *)(v16 + 80) = v26;
    *(_OWORD *)(v16 + 96) = v19;
    *(_OWORD *)(v16 + 48) = v17;
    *(_OWORD *)(v16 + 64) = v18;
    v20 = v28;
    v21 = v29;
    v22 = v30;
    *(_QWORD *)(v16 + 160) = v31;
    *(_OWORD *)(v16 + 128) = v21;
    *(_OWORD *)(v16 + 144) = v22;
    *(_OWORD *)(v16 + 112) = v20;
  }
  while (v2 - 1 != i);
  return v6;
}

unint64_t sub_1ABDABBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  __int128 v38[8];
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;

  sub_1ABDAC6B8(0, &qword_1ED3467B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v35 - v6;
  v49 = type metadata accessor for SymbolEntity();
  v8 = *(_QWORD *)(v49 - 8);
  v9 = MEMORY[0x1E0C80A78](v49);
  v37 = (uint64_t)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v36 = (uint64_t)v35 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x1E0DEE9D8];
  v35[1] = v2;
  sub_1ABF2FF5C();
  v35[0] = a1;
  v13 = (uint64_t *)(a1 + 40);
  v14 = MEMORY[0x1E0DEE9D8];
  do
  {
    v15 = *(v13 - 1);
    v16 = *v13;
    v17 = *(_QWORD *)(a2 + 16);
    sub_1ABF2FF5C();
    if (v17)
    {
      sub_1ABF2FF5C();
      v18 = sub_1ABD00F9C(v15, v16);
      if ((v19 & 1) != 0)
      {
        v20 = *(_QWORD *)(a2 + 56) + 136 * v18;
        v40 = *(_OWORD *)v20;
        v21 = *(_OWORD *)(v20 + 64);
        v23 = *(_OWORD *)(v20 + 16);
        v22 = *(_OWORD *)(v20 + 32);
        v43 = *(_OWORD *)(v20 + 48);
        v44 = v21;
        v41 = v23;
        v42 = v22;
        v25 = *(_OWORD *)(v20 + 96);
        v24 = *(_OWORD *)(v20 + 112);
        v26 = *(_OWORD *)(v20 + 80);
        v48 = *(_QWORD *)(v20 + 128);
        v46 = v25;
        v47 = v24;
        v45 = v26;
        sub_1ABD97ECC((uint64_t)&v40);
        swift_bridgeObjectRelease();
        v38[6] = v46;
        v38[7] = v47;
        v39 = v48;
        v38[2] = v42;
        v38[3] = v43;
        v38[4] = v44;
        v38[5] = v45;
        v38[0] = v40;
        v38[1] = v41;
        SymbolEntity.init(from:)(v38, (uint64_t)v7);
        v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v28 = v7;
        v29 = 0;
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
    }
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v28 = v7;
    v29 = 1;
LABEL_10:
    v30 = v49;
    v27(v28, v29, 1, v49);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v30) == 1)
    {
      sub_1ABDAC710((uint64_t)v7);
    }
    else
    {
      v31 = v36;
      sub_1ABDAC75C((uint64_t)v7, v36);
      sub_1ABDAC75C(v31, v37);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD82AA4(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
      v33 = *(_QWORD *)(v14 + 16);
      v32 = *(_QWORD *)(v14 + 24);
      if (v33 >= v32 >> 1)
        v14 = sub_1ABD82AA4(v32 > 1, v33 + 1, 1, v14);
      *(_QWORD *)(v14 + 16) = v33 + 1;
      sub_1ABDAC75C(v37, v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v33);
    }
    v13 += 2;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1ABDABECC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[15] = a1;
  v2[16] = a2;
  v3 = sub_1ABF30B38();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v4 = sub_1ABF30760();
  v2[20] = v4;
  v2[21] = *(_QWORD *)(v4 - 8);
  v2[22] = swift_task_alloc();
  v5 = sub_1ABF30C28();
  v2[23] = v5;
  v2[24] = *(_QWORD *)(v5 - 8);
  v2[25] = swift_task_alloc();
  v6 = sub_1ABF30B14();
  v2[26] = v6;
  v2[27] = *(_QWORD *)(v6 - 8);
  v2[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABDABFA4()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[29] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[15];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v27 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[13] = v5;
    sub_1ABD165AC();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCC0, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0DEAF20]);
    v8 = sub_1ABF316E4();
    v0[14] = sub_1ABD1FE2C(v8, v9, &v27);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching stocks for symbol query with identifiers=[%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v7, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v10 = v0[27];
  v26 = v0[28];
  v11 = v0[25];
  v19 = v0[26];
  v12 = v0[22];
  v24 = v0[24];
  v25 = v0[23];
  v22 = v0[21];
  v13 = v0[19];
  v23 = v0[20];
  v14 = v0[18];
  v20 = v0[17];
  v21 = v0[15];
  sub_1ABF2FBF0();
  v15 = v0[5];
  v16 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v26, *MEMORY[0x1E0DB32A8], v19);
  sub_1ABF30C1C();
  sub_1ABF30754();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v13, *MEMORY[0x1E0DB3560], v20);
  v0[30] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v21, v26, v11, v12, v13, v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v20);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v25);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v26, v19);
  v17 = (_QWORD *)swift_task_alloc();
  v0[31] = v17;
  *v17 = v0;
  v17[1] = sub_1ABDAC2EC;
  return sub_1ABF31150();
}

uint64_t sub_1ABDAC2EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABDAC364()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  os_log_type_t type;
  uint64_t v17;
  uint64_t v18[2];

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 120);
    v5 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18[0] = v17;
    *(_DWORD *)v5 = 136315394;
    type = v3;
    *(_QWORD *)(v0 + 64) = v4;
    sub_1ABD165AC();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCC0, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0DEAF20]);
    v6 = sub_1ABF316E4();
    *(_QWORD *)(v0 + 72) = sub_1ABD1FE2C(v6, v7, v18);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    v8 = sub_1ABF2FF5C();
    v9 = sub_1ABDAB2A0(v8);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = v9;
    v10 = sub_1ABF316E4();
    v12 = v11;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 96) = sub_1ABD1FE2C(v10, v12, v18);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, type, "Fetched stocks for symbol query with identifiers=[%s], stocks=[%s]", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v17, -1, -1);
    MEMORY[0x1AF438FFC](v5, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  v13 = *(_QWORD *)(v0 + 120);
  sub_1ABF2FF5C();
  v14 = sub_1ABDABBE0(v13, v1);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v14);
}

uint64_t sub_1ABDAC638()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1ABDAC6B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for SymbolEntity();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1ABDAC710(uint64_t a1)
{
  uint64_t v2;

  sub_1ABDAC6B8(0, &qword_1ED3467B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABDAC75C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABDAC7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[88] = a5;
  v5[87] = a4;
  v5[86] = a3;
  v5[85] = a2;
  v5[84] = a1;
  v5[89] = *(_QWORD *)(type metadata accessor for SymbolEntity() - 8);
  v5[90] = swift_task_alloc();
  v5[91] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABDAC81C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;

  if (sub_1ABF30034())
  {
    swift_getKeyPath();
    sub_1ABD67FB8();
    sub_1ABF2FE30();
    swift_release();
    swift_release();
    v1 = v0[57];
    v2 = v0[58];
    v3 = v0[59];
  }
  else
  {
    v1 = 0;
    v2 = 0;
    v3 = 0;
  }
  v0[94] = v3;
  v0[93] = v2;
  v0[92] = v1;
  if (qword_1ED346718 != -1)
    swift_once();
  v4 = sub_1ABF3133C();
  v0[95] = __swift_project_value_buffer(v4, (uint64_t)qword_1ED3466E0);
  sub_1ABF2FF5C();
  sub_1ABDAE550(v1, v2);
  sub_1ABF2FF5C();
  sub_1ABDAE550(v1, v2);
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BF4();
  v7 = os_log_type_enabled(v5, v6);
  v8 = v0[85];
  if (v7)
  {
    v19 = v6;
    v9 = v0[84];
    v10 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21 = v20;
    *(_DWORD *)v10 = 136315394;
    sub_1ABF2FF5C();
    v0[80] = sub_1ABD1FE2C(v9, v8, &v21);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    if (v2)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF68();
      sub_1ABF2FD1C();
      sub_1ABDAE580(v1, v2);
      v11 = v0[60];
      v12 = v0[61];
    }
    else
    {
      v12 = 0xE300000000000000;
      v11 = 7104878;
    }
    v0[81] = sub_1ABD1FE2C(v11, v12, &v21);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    sub_1ABDAE580(v1, v2);
    sub_1ABDAE580(v1, v2);
    _os_log_impl(&dword_1ABCEF000, v5, v19, "Fetching stocks for symbol entities matching string='%s', watchlist='%s'", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v20, -1, -1);
    MEMORY[0x1AF438FFC](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1ABDAE580(v1, v2);
    sub_1ABDAE580(v1, v2);
  }

  v13 = v0[85];
  v14 = v0[84];
  sub_1ABF2FBF0();
  v15 = v0[55];
  v16 = v0[56];
  __swift_project_boxed_opaque_existential_1(v0 + 52, v15);
  v0[96] = sub_1ABD78990(v14, v13, v15, v16);
  v17 = (_QWORD *)swift_task_alloc();
  v0[97] = v17;
  *v17 = v0;
  v17[1] = sub_1ABDACBA4;
  return sub_1ABF31150();
}

uint64_t sub_1ABDACBA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 784) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 416);
  }
  return swift_task_switch();
}

uint64_t sub_1ABDACC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t i;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  uint64_t v62;
  os_log_type_t v63;
  __int128 v64[8];
  uint64_t v65;
  uint64_t v66[2];

  v1 = *(_QWORD *)(v0 + 744);
  v2 = *(_QWORD *)(v0 + 736);
  v3 = *(_QWORD *)(v0 + 560);
  *(_QWORD *)(v0 + 792) = v3;
  sub_1ABF2FF5C();
  sub_1ABDAE550(v2, v1);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABDAE550(v2, v1);
  sub_1ABF2FF5C();
  v4 = sub_1ABF31324();
  v5 = sub_1ABF31BF4();
  if (os_log_type_enabled(v4, v5))
  {
    v63 = v5;
    v6 = *(_QWORD *)(v0 + 680);
    v7 = *(_QWORD *)(v0 + 672);
    v8 = swift_slowAlloc();
    v62 = swift_slowAlloc();
    v66[0] = v62;
    *(_DWORD *)v8 = 136315650;
    sub_1ABF2FF5C();
    *(_QWORD *)(v0 + 600) = sub_1ABD1FE2C(v7, v6, v66);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    v9 = *(_QWORD *)(v3 + 16);
    v10 = MEMORY[0x1E0DEE9D8];
    if (v9)
    {
      v59 = v8;
      v60 = v4;
      *(_QWORD *)&v64[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v9, 0);
      v10 = *(_QWORD *)&v64[0];
      v11 = *(_QWORD *)(*(_QWORD *)&v64[0] + 16);
      v12 = 16 * v11;
      v61 = v3;
      v13 = (uint64_t *)(v3 + 40);
      do
      {
        v14 = *(v13 - 1);
        v15 = *v13;
        *(_QWORD *)&v64[0] = v10;
        v16 = v11 + 1;
        v17 = *(_QWORD *)(v10 + 24);
        sub_1ABF2FF5C();
        if (v11 >= v17 >> 1)
        {
          sub_1ABD16414(v17 > 1, v16, 1);
          v10 = *(_QWORD *)&v64[0];
        }
        *(_QWORD *)(v10 + 16) = v16;
        v18 = v10 + v12;
        *(_QWORD *)(v18 + 32) = v14;
        *(_QWORD *)(v18 + 40) = v15;
        v12 += 16;
        v13 += 17;
        ++v11;
        --v9;
      }
      while (v9);
      v4 = v60;
      v3 = v61;
      v8 = v59;
    }
    v21 = *(_QWORD *)(v0 + 744);
    *(_QWORD *)(v0 + 608) = v10;
    sub_1ABD165AC();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCC0, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0DEAF20]);
    v22 = sub_1ABF316E4();
    v24 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 616) = sub_1ABD1FE2C(v22, v24, v66);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    if (v21)
    {
      v25 = *(_QWORD *)(v0 + 744);
      v26 = *(_QWORD *)(v0 + 736);
      sub_1ABF2FF5C();
      sub_1ABF2FF68();
      sub_1ABF2FD1C();
      sub_1ABDAE580(v26, v25);
      v27 = *(_QWORD *)(v0 + 512);
      v28 = *(_QWORD *)(v0 + 520);
    }
    else
    {
      v28 = 0xE300000000000000;
      v27 = 7104878;
    }
    v29 = *(_QWORD *)(v0 + 744);
    v30 = *(_QWORD *)(v0 + 736);
    *(_QWORD *)(v0 + 624) = sub_1ABD1FE2C(v27, v28, v66);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    sub_1ABDAE580(v30, v29);
    sub_1ABDAE580(v30, v29);
    _os_log_impl(&dword_1ABCEF000, v4, v63, "Fetched stocks for symbol entities matching string='%s', stocks=[%s], watchlist='%s'", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v62, -1, -1);
    MEMORY[0x1AF438FFC](v8, -1, -1);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 744);
    v20 = *(_QWORD *)(v0 + 736);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1ABDAE580(v20, v19);
    sub_1ABDAE580(v20, v19);
  }

  v31 = *(_QWORD *)(v3 + 16);
  if (v31)
  {
    v32 = *(_QWORD *)(v0 + 744);
    if (v32)
    {
      v33 = *(_QWORD *)(v0 + 736);
      sub_1ABF2FF5C();
      sub_1ABF2FF68();
      sub_1ABF2FBF0();
      v34 = *(_QWORD *)(v0 + 400);
      v35 = *(_QWORD *)(v0 + 408);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 376), v34);
      *(_QWORD *)(v0 + 800) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 144))(v33, v32, v34, v35);
      v36 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 808) = v36;
      *v36 = v0;
      v36[1] = sub_1ABDAD264;
      return sub_1ABF31150();
    }
    v41 = *(_QWORD *)(v0 + 792);
    v42 = *(_QWORD *)(v0 + 712);
    v66[0] = MEMORY[0x1E0DEE9D8];
    sub_1ABDB50D0(0, v31, 0);
    v40 = v66[0];
    v43 = v41 + 32;
    for (i = v31 - 1; ; --i)
    {
      v45 = *(_QWORD *)(v0 + 720);
      *(_OWORD *)(v0 + 152) = *(_OWORD *)v43;
      v46 = *(_OWORD *)(v43 + 64);
      v48 = *(_OWORD *)(v43 + 16);
      v47 = *(_OWORD *)(v43 + 32);
      *(_OWORD *)(v0 + 200) = *(_OWORD *)(v43 + 48);
      *(_OWORD *)(v0 + 216) = v46;
      *(_OWORD *)(v0 + 168) = v48;
      *(_OWORD *)(v0 + 184) = v47;
      v50 = *(_OWORD *)(v43 + 96);
      v49 = *(_OWORD *)(v43 + 112);
      v51 = *(_OWORD *)(v43 + 80);
      *(_QWORD *)(v0 + 280) = *(_QWORD *)(v43 + 128);
      *(_OWORD *)(v0 + 248) = v50;
      *(_OWORD *)(v0 + 264) = v49;
      *(_OWORD *)(v0 + 232) = v51;
      v52 = *(_OWORD *)(v43 + 112);
      v64[6] = *(_OWORD *)(v43 + 96);
      v64[7] = v52;
      v65 = *(_QWORD *)(v43 + 128);
      v53 = *(_OWORD *)(v43 + 48);
      v64[2] = *(_OWORD *)(v43 + 32);
      v64[3] = v53;
      v54 = *(_OWORD *)(v43 + 80);
      v64[4] = *(_OWORD *)(v43 + 64);
      v64[5] = v54;
      v55 = *(_OWORD *)(v43 + 16);
      v64[0] = *(_OWORD *)v43;
      v64[1] = v55;
      sub_1ABD97ECC(v0 + 152);
      SymbolEntity.init(from:)(v64, v45);
      v66[0] = v40;
      v57 = *(_QWORD *)(v40 + 16);
      v56 = *(_QWORD *)(v40 + 24);
      if (v57 >= v56 >> 1)
      {
        sub_1ABDB50D0(v56 > 1, v57 + 1, 1);
        v40 = v66[0];
      }
      v58 = *(_QWORD *)(v0 + 720);
      *(_QWORD *)(v40 + 16) = v57 + 1;
      sub_1ABDAC75C(v58, v40+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v57);
      if (!i)
        break;
      v43 += 136;
    }
    sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
    swift_bridgeObjectRelease();
  }
  else
  {
    v38 = *(_QWORD *)(v0 + 744);
    v39 = *(_QWORD *)(v0 + 736);
    swift_bridgeObjectRelease();
    sub_1ABDAE580(v39, v38);
    v40 = MEMORY[0x1E0DEE9D8];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v40);
}

uint64_t sub_1ABDAD264()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 376);
  }
  return swift_task_switch();
}

uint64_t sub_1ABDAD2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t i;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 296);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 304);
    v3 = *(_QWORD *)(v0 + 312);
    v4 = *(_QWORD *)(v0 + 320);
    v5 = *(_WORD *)(v0 + 328);
    v30 = *(_QWORD *)(v0 + 288);
    sub_1ABF2FBF0();
    v7 = *(_QWORD *)(v0 + 360);
    v6 = *(_QWORD *)(v0 + 368);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 336), v7);
    *(_QWORD *)&v32 = v30;
    *((_QWORD *)&v32 + 1) = v1;
    *(_QWORD *)&v33 = v2;
    *((_QWORD *)&v33 + 1) = v3;
    *(_QWORD *)&v34 = v4;
    WORD4(v34) = v5;
    *(_QWORD *)(v0 + 816) = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v6 + 112))(&v32, v7, v6);
    sub_1ABD365D4(v30, v1);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 824) = v8;
    *v8 = v0;
    v8[1] = sub_1ABDAD5A4;
    return sub_1ABF31150();
  }
  else
  {
    sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
    v10 = *(_QWORD *)(v0 + 792);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = *(_QWORD *)(v0 + 712);
      v31 = MEMORY[0x1E0DEE9D8];
      sub_1ABDB50D0(0, v11, 0);
      v13 = v31;
      v14 = v10 + 32;
      for (i = v11 - 1; ; --i)
      {
        v16 = *(_QWORD *)(v0 + 720);
        *(_OWORD *)(v0 + 152) = *(_OWORD *)v14;
        v17 = *(_OWORD *)(v14 + 64);
        v19 = *(_OWORD *)(v14 + 16);
        v18 = *(_OWORD *)(v14 + 32);
        *(_OWORD *)(v0 + 200) = *(_OWORD *)(v14 + 48);
        *(_OWORD *)(v0 + 216) = v17;
        *(_OWORD *)(v0 + 168) = v19;
        *(_OWORD *)(v0 + 184) = v18;
        v21 = *(_OWORD *)(v14 + 96);
        v20 = *(_OWORD *)(v14 + 112);
        v22 = *(_OWORD *)(v14 + 80);
        *(_QWORD *)(v0 + 280) = *(_QWORD *)(v14 + 128);
        *(_OWORD *)(v0 + 248) = v21;
        *(_OWORD *)(v0 + 264) = v20;
        *(_OWORD *)(v0 + 232) = v22;
        v23 = *(_OWORD *)(v14 + 112);
        v38 = *(_OWORD *)(v14 + 96);
        v39 = v23;
        v40 = *(_QWORD *)(v14 + 128);
        v24 = *(_OWORD *)(v14 + 48);
        v34 = *(_OWORD *)(v14 + 32);
        v35 = v24;
        v25 = *(_OWORD *)(v14 + 80);
        v36 = *(_OWORD *)(v14 + 64);
        v37 = v25;
        v26 = *(_OWORD *)(v14 + 16);
        v32 = *(_OWORD *)v14;
        v33 = v26;
        sub_1ABD97ECC(v0 + 152);
        SymbolEntity.init(from:)(&v32, v16);
        v28 = *(_QWORD *)(v31 + 16);
        v27 = *(_QWORD *)(v31 + 24);
        if (v28 >= v27 >> 1)
          sub_1ABDB50D0(v27 > 1, v28 + 1, 1);
        v29 = *(_QWORD *)(v0 + 720);
        *(_QWORD *)(v31 + 16) = v28 + 1;
        sub_1ABDAC75C(v29, v31+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v28);
        if (!i)
          break;
        v14 += 136;
      }
      sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x1E0DEE9D8];
    }
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
  }
}

uint64_t sub_1ABDAD5A4()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 832) = v0;
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 336);
  }
  return swift_task_switch();
}

uint64_t sub_1ABDAD630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t i;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  int64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v85;
  uint64_t v86;
  os_log_type_t v87;
  NSObject *log;
  uint64_t v89;
  uint64_t v90;
  uint8_t *v91;
  uint64_t v92;
  os_log_type_t v93;
  uint64_t v94;
  __int128 v95[8];
  uint64_t v96;
  uint64_t v97[3];

  v1 = *(_QWORD *)(v0 + 744);
  v2 = *(_QWORD *)(v0 + 736);
  v3 = *(_QWORD *)(v0 + 656);
  sub_1ABDAE550(v2, v1);
  sub_1ABF2FF5C();
  sub_1ABDAE550(v2, v1);
  sub_1ABF2FF5C();
  v4 = sub_1ABF31324();
  v5 = sub_1ABF31BF4();
  v94 = v3;
  if (os_log_type_enabled(v4, v5))
  {
    v93 = v5;
    v6 = *(_QWORD *)(v0 + 744);
    v7 = *(_QWORD *)(v0 + 736);
    v8 = swift_slowAlloc();
    v89 = swift_slowAlloc();
    v97[0] = v89;
    *(_DWORD *)v8 = 136315394;
    sub_1ABF2FF5C();
    sub_1ABF2FF68();
    sub_1ABF2FD1C();
    sub_1ABDAE580(v7, v6);
    *(_QWORD *)(v0 + 576) = sub_1ABD1FE2C(*(_QWORD *)(v0 + 528), *(_QWORD *)(v0 + 536), v97);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    sub_1ABDAE580(v7, v6);
    sub_1ABDAE580(v7, v6);
    v91 = (uint8_t *)v8;
    *(_WORD *)(v8 + 12) = 2080;
    v9 = *(_QWORD *)(v3 + 16);
    v10 = MEMORY[0x1E0DEE9D8];
    if (v9)
    {
      v85 = v4;
      *(_QWORD *)&v95[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v9, 0);
      v10 = *(_QWORD *)&v95[0];
      v11 = *(_QWORD *)(*(_QWORD *)&v95[0] + 16);
      v12 = 16 * v11;
      v13 = (uint64_t *)(v3 + 40);
      do
      {
        v14 = *(v13 - 1);
        v15 = *v13;
        *(_QWORD *)&v95[0] = v10;
        v16 = v11 + 1;
        v17 = *(_QWORD *)(v10 + 24);
        sub_1ABF2FF5C();
        if (v11 >= v17 >> 1)
        {
          sub_1ABD16414(v17 > 1, v16, 1);
          v10 = *(_QWORD *)&v95[0];
        }
        *(_QWORD *)(v10 + 16) = v16;
        v18 = v10 + v12;
        *(_QWORD *)(v18 + 32) = v14;
        *(_QWORD *)(v18 + 40) = v15;
        v12 += 16;
        v13 += 17;
        ++v11;
        --v9;
      }
      while (v9);
      v3 = v94;
      v4 = v85;
    }
    *(_QWORD *)(v0 + 584) = v10;
    sub_1ABD165AC();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCC0, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0DEAF20]);
    v21 = sub_1ABF316E4();
    v23 = v22;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 592) = sub_1ABD1FE2C(v21, v23, v97);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v4, v93, "Filtering stocks against membership of watchlist='%s', watchlistStocks=[%s]", v91, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v89, -1, -1);
    MEMORY[0x1AF438FFC](v91, -1, -1);
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 744);
    v20 = *(_QWORD *)(v0 + 736);
    sub_1ABDAE580(v20, v19);
    sub_1ABDAE580(v20, v19);
    swift_bridgeObjectRelease_n();
  }

  v24 = *(_QWORD *)(v0 + 792);
  v25 = *(_QWORD *)(v0 + 744);
  v26 = *(_QWORD *)(v0 + 736);
  sub_1ABF2FF5C();
  v27 = sub_1ABDABA40(v24, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABDAE550(v26, v25);
  sub_1ABF2FF5C();
  sub_1ABDAE550(v26, v25);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v28 = sub_1ABF31324();
  v29 = sub_1ABF31BF4();
  v30 = os_log_type_enabled(v28, v29);
  v31 = *(_QWORD *)(v0 + 744);
  v32 = *(_QWORD *)(v0 + 736);
  if (v30)
  {
    v87 = v29;
    log = v28;
    v33 = v3;
    v34 = swift_slowAlloc();
    v86 = swift_slowAlloc();
    v97[0] = v86;
    *(_DWORD *)v34 = 136315650;
    sub_1ABDAE550(v32, v31);
    sub_1ABF2FD1C();
    sub_1ABDAE580(v32, v31);
    *(_QWORD *)(v0 + 632) = sub_1ABD1FE2C(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 504), v97);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    sub_1ABDAE580(v32, v31);
    sub_1ABDAE580(v32, v31);
    *(_WORD *)(v34 + 12) = 2080;
    v35 = *(_QWORD *)(v3 + 16);
    v36 = MEMORY[0x1E0DEE9D8];
    v90 = v34;
    v92 = v27;
    if (v35)
    {
      *(_QWORD *)&v95[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v35, 0);
      v36 = *(_QWORD *)&v95[0];
      v37 = *(_QWORD *)(*(_QWORD *)&v95[0] + 16);
      v38 = 16 * v37;
      v39 = (uint64_t *)(v33 + 40);
      do
      {
        v40 = *(v39 - 1);
        v41 = *v39;
        *(_QWORD *)&v95[0] = v36;
        v42 = v37 + 1;
        v43 = *(_QWORD *)(v36 + 24);
        sub_1ABF2FF5C();
        if (v37 >= v43 >> 1)
        {
          sub_1ABD16414(v43 > 1, v42, 1);
          v36 = *(_QWORD *)&v95[0];
        }
        *(_QWORD *)(v36 + 16) = v42;
        v44 = v36 + v38;
        *(_QWORD *)(v44 + 32) = v40;
        *(_QWORD *)(v44 + 40) = v41;
        v38 += 16;
        v39 += 17;
        ++v37;
        --v35;
      }
      while (v35);
      v34 = v90;
      v27 = v92;
    }
    *(_QWORD *)(v0 + 568) = v36;
    sub_1ABD165AC();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCC0, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0DEAF20]);
    v66 = sub_1ABF316E4();
    v68 = v67;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 544) = sub_1ABD1FE2C(v66, v68, v97);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 22) = 2080;
    v69 = *(_QWORD *)(v27 + 16);
    v70 = MEMORY[0x1E0DEE9D8];
    if (v69)
    {
      *(_QWORD *)&v95[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v69, 0);
      v70 = *(_QWORD *)&v95[0];
      v71 = *(_QWORD *)(*(_QWORD *)&v95[0] + 16);
      v72 = 16 * v71;
      v73 = (uint64_t *)(v27 + 40);
      do
      {
        v75 = *(v73 - 1);
        v74 = *v73;
        *(_QWORD *)&v95[0] = v70;
        v76 = v71 + 1;
        v77 = *(_QWORD *)(v70 + 24);
        sub_1ABF2FF5C();
        if (v71 >= v77 >> 1)
        {
          sub_1ABD16414(v77 > 1, v76, 1);
          v70 = *(_QWORD *)&v95[0];
        }
        *(_QWORD *)(v70 + 16) = v76;
        v78 = v70 + v72;
        *(_QWORD *)(v78 + 32) = v75;
        *(_QWORD *)(v78 + 40) = v74;
        v72 += 16;
        v73 += 17;
        ++v71;
        --v69;
      }
      while (v69);
      v34 = v90;
      v27 = v92;
    }
    *(_QWORD *)(v0 + 552) = v70;
    v79 = sub_1ABF316E4();
    v81 = v80;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 664) = sub_1ABD1FE2C(v79, v81, v97);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, log, v87, "Filtered stocks against membership of watchlist='%s', watchlistStocks=[%s], filteredStocks=[%s]", (uint8_t *)v34, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v86, -1, -1);
    MEMORY[0x1AF438FFC](v34, -1, -1);

    v45 = *(_QWORD *)(v27 + 16);
    if (!v45)
      goto LABEL_31;
  }
  else
  {
    sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
    sub_1ABDAE580(v32, v31);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v45 = *(_QWORD *)(v27 + 16);
    if (!v45)
    {
LABEL_31:
      v82 = *(_QWORD *)(v0 + 744);
      v83 = *(_QWORD *)(v0 + 736);
      sub_1ABDAE580(v83, v82);
      sub_1ABDAE580(v83, v82);
      swift_bridgeObjectRelease();
      v47 = MEMORY[0x1E0DEE9D8];
      goto LABEL_32;
    }
  }
  v46 = *(_QWORD *)(v0 + 712);
  v97[0] = MEMORY[0x1E0DEE9D8];
  sub_1ABDB50D0(0, v45, 0);
  v47 = v97[0];
  v48 = v45 - 1;
  for (i = 32; ; i += 136)
  {
    v50 = *(_QWORD *)(v0 + 728);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v27 + i);
    v51 = *(_OWORD *)(v27 + i + 64);
    v53 = *(_OWORD *)(v27 + i + 16);
    v52 = *(_OWORD *)(v27 + i + 32);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v27 + i + 48);
    *(_OWORD *)(v0 + 80) = v51;
    *(_OWORD *)(v0 + 32) = v53;
    *(_OWORD *)(v0 + 48) = v52;
    v55 = *(_OWORD *)(v27 + i + 96);
    v54 = *(_OWORD *)(v27 + i + 112);
    v56 = *(_OWORD *)(v27 + i + 80);
    *(_QWORD *)(v0 + 144) = *(_QWORD *)(v27 + i + 128);
    *(_OWORD *)(v0 + 112) = v55;
    *(_OWORD *)(v0 + 128) = v54;
    *(_OWORD *)(v0 + 96) = v56;
    v57 = *(_OWORD *)(v27 + i + 112);
    v95[6] = *(_OWORD *)(v27 + i + 96);
    v95[7] = v57;
    v96 = *(_QWORD *)(v27 + i + 128);
    v58 = *(_OWORD *)(v27 + i + 48);
    v95[2] = *(_OWORD *)(v27 + i + 32);
    v95[3] = v58;
    v59 = *(_OWORD *)(v27 + i + 80);
    v95[4] = *(_OWORD *)(v27 + i + 64);
    v95[5] = v59;
    v60 = *(_OWORD *)(v27 + i + 16);
    v95[0] = *(_OWORD *)(v27 + i);
    v95[1] = v60;
    sub_1ABD97ECC(v0 + 16);
    SymbolEntity.init(from:)(v95, v50);
    v97[0] = v47;
    v62 = *(_QWORD *)(v47 + 16);
    v61 = *(_QWORD *)(v47 + 24);
    if (v62 >= v61 >> 1)
    {
      sub_1ABDB50D0(v61 > 1, v62 + 1, 1);
      v47 = v97[0];
    }
    v63 = *(_QWORD *)(v0 + 728);
    *(_QWORD *)(v47 + 16) = v62 + 1;
    sub_1ABDAC75C(v63, v47+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v62);
    if (!v48)
      break;
    --v48;
  }
  v64 = *(_QWORD *)(v0 + 744);
  v65 = *(_QWORD *)(v0 + 736);
  sub_1ABDAE580(v65, v64);
  sub_1ABDAE580(v65, v64);
  swift_bridgeObjectRelease();
LABEL_32:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v47);
}

uint64_t sub_1ABDADFF0()
{
  uint64_t v0;

  sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 416);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABDAE064()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t i;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  __int128 v23[8];
  uint64_t v24;

  sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
  __swift_destroy_boxed_opaque_existential_1(v0 + 376);
  v1 = *(_QWORD *)(v0 + 792);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 712);
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB50D0(0, v2, 0);
    v4 = v22;
    v5 = v1 + 32;
    for (i = v2 - 1; ; --i)
    {
      v7 = *(_QWORD *)(v0 + 720);
      *(_OWORD *)(v0 + 152) = *(_OWORD *)v5;
      v8 = *(_OWORD *)(v5 + 64);
      v10 = *(_OWORD *)(v5 + 16);
      v9 = *(_OWORD *)(v5 + 32);
      *(_OWORD *)(v0 + 200) = *(_OWORD *)(v5 + 48);
      *(_OWORD *)(v0 + 216) = v8;
      *(_OWORD *)(v0 + 168) = v10;
      *(_OWORD *)(v0 + 184) = v9;
      v12 = *(_OWORD *)(v5 + 96);
      v11 = *(_OWORD *)(v5 + 112);
      v13 = *(_OWORD *)(v5 + 80);
      *(_QWORD *)(v0 + 280) = *(_QWORD *)(v5 + 128);
      *(_OWORD *)(v0 + 248) = v12;
      *(_OWORD *)(v0 + 264) = v11;
      *(_OWORD *)(v0 + 232) = v13;
      v14 = *(_OWORD *)(v5 + 112);
      v23[6] = *(_OWORD *)(v5 + 96);
      v23[7] = v14;
      v24 = *(_QWORD *)(v5 + 128);
      v15 = *(_OWORD *)(v5 + 48);
      v23[2] = *(_OWORD *)(v5 + 32);
      v23[3] = v15;
      v16 = *(_OWORD *)(v5 + 80);
      v23[4] = *(_OWORD *)(v5 + 64);
      v23[5] = v16;
      v17 = *(_OWORD *)(v5 + 16);
      v23[0] = *(_OWORD *)v5;
      v23[1] = v17;
      sub_1ABD97ECC(v0 + 152);
      SymbolEntity.init(from:)(v23, v7);
      v19 = *(_QWORD *)(v22 + 16);
      v18 = *(_QWORD *)(v22 + 24);
      if (v19 >= v18 >> 1)
        sub_1ABDB50D0(v18 > 1, v19 + 1, 1);
      v20 = *(_QWORD *)(v0 + 720);
      *(_QWORD *)(v22 + 16) = v19 + 1;
      sub_1ABDAC75C(v20, v22+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v19);
      if (!i)
        break;
      v5 += 136;
    }
    sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1ABDAE234()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t i;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  __int128 v23[8];
  uint64_t v24;

  sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
  __swift_destroy_boxed_opaque_existential_1(v0 + 336);
  v1 = *(_QWORD *)(v0 + 792);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 712);
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB50D0(0, v2, 0);
    v4 = v22;
    v5 = v1 + 32;
    for (i = v2 - 1; ; --i)
    {
      v7 = *(_QWORD *)(v0 + 720);
      *(_OWORD *)(v0 + 152) = *(_OWORD *)v5;
      v8 = *(_OWORD *)(v5 + 64);
      v10 = *(_OWORD *)(v5 + 16);
      v9 = *(_OWORD *)(v5 + 32);
      *(_OWORD *)(v0 + 200) = *(_OWORD *)(v5 + 48);
      *(_OWORD *)(v0 + 216) = v8;
      *(_OWORD *)(v0 + 168) = v10;
      *(_OWORD *)(v0 + 184) = v9;
      v12 = *(_OWORD *)(v5 + 96);
      v11 = *(_OWORD *)(v5 + 112);
      v13 = *(_OWORD *)(v5 + 80);
      *(_QWORD *)(v0 + 280) = *(_QWORD *)(v5 + 128);
      *(_OWORD *)(v0 + 248) = v12;
      *(_OWORD *)(v0 + 264) = v11;
      *(_OWORD *)(v0 + 232) = v13;
      v14 = *(_OWORD *)(v5 + 112);
      v23[6] = *(_OWORD *)(v5 + 96);
      v23[7] = v14;
      v24 = *(_QWORD *)(v5 + 128);
      v15 = *(_OWORD *)(v5 + 48);
      v23[2] = *(_OWORD *)(v5 + 32);
      v23[3] = v15;
      v16 = *(_OWORD *)(v5 + 80);
      v23[4] = *(_OWORD *)(v5 + 64);
      v23[5] = v16;
      v17 = *(_OWORD *)(v5 + 16);
      v23[0] = *(_OWORD *)v5;
      v23[1] = v17;
      sub_1ABD97ECC(v0 + 152);
      SymbolEntity.init(from:)(v23, v7);
      v19 = *(_QWORD *)(v22 + 16);
      v18 = *(_QWORD *)(v22 + 24);
      if (v19 >= v18 >> 1)
        sub_1ABDB50D0(v18 > 1, v19 + 1, 1);
      v20 = *(_QWORD *)(v0 + 720);
      *(_QWORD *)(v22 + 16) = v19 + 1;
      sub_1ABDAC75C(v20, v22+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v19);
      if (!i)
        break;
      v5 += 136;
    }
    sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1ABDAE580(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x1E0DEE9D8];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1ABDAE404()
{
  uint64_t v0;

  sub_1ABDAE5B8(0, &qword_1ED346610, (unint64_t *)&unk_1ED3506E8);
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  v0 = sub_1ABF2FC14();
  sub_1ABDAE5B8(0, &qword_1ED346618, &qword_1ED3508C8);
  sub_1ABF2FC38();
  sub_1ABF2FC14();
  sub_1ABDAE5B8(0, (unint64_t *)&qword_1ED34C7B8, (unint64_t *)&qword_1ED350780);
  sub_1ABF2FC38();
  sub_1ABF2FC14();
  sub_1ABDAE60C();
  swift_getKeyPath();
  sub_1ABF3004C();
  return v0;
}

uint64_t sub_1ABDAE550(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    sub_1ABF2FF5C();
    return sub_1ABF2FF68();
  }
  return result;
}

uint64_t sub_1ABDAE580(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1ABDAE5B8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1ABD0F510(255, a3);
    v4 = sub_1ABF2FC20();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1ABDAE60C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42518)
  {
    sub_1ABDAE664();
    v0 = sub_1ABF30040();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42518);
  }
}

unint64_t sub_1ABDAE664()
{
  unint64_t result;

  result = qword_1ED347128;
  if (!qword_1ED347128)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF453FC, &type metadata for AddSymbolToWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED347128);
  }
  return result;
}

uint64_t static URL.stocksScheme.getter()
{
  return 0x736B636F7473;
}

unint64_t static URL.stocksHost.getter()
{
  return 0xD000000000000010;
}

uint64_t URL.replacingHostWithStocksHost()@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, char *, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;

  v2 = v1;
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - v5;
  sub_1ABD00308(0, &qword_1ED34EA78, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - v8;
  v10 = sub_1ABF30334();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF302EC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1ABD18510((uint64_t)v9, &qword_1ED34EA78, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    v14 = sub_1ABF305D4();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, v2, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_1ABF30304();
    sub_1ABF302F8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v16 = sub_1ABF305D4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
    {
      sub_1ABD18510((uint64_t)v6, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      v18 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 16);
      v19 = a1;
      v20 = v2;
    }
    else
    {
      v18 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32);
      v19 = a1;
      v20 = v6;
    }
    return v18(v19, v20, v16);
  }
}

uint64_t sub_1ABDAE8E8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudKitPollingService()
{
  return objc_opt_self();
}

uint64_t sub_1ABDAE93C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[390];

  if (v0[8])
  {
    v1 = v0[8];
LABEL_5:
    sub_1ABF2FF68();
    return v1;
  }
  v2 = v0[6];
  v3 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v3 + 8))(v6, v2, v3);
  v4 = sub_1ABD7DDF4((uint64_t)v6);
  MEMORY[0x1E0C80A78](v4);
  sub_1ABD03D24();
  swift_allocObject();
  v0[8] = sub_1ABF31228();
  result = swift_release();
  v1 = v0[8];
  if (v1)
  {
    sub_1ABF2FF68();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDAEA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v12;
  uint64_t v13;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = swift_allocObject();
  *(double *)(v13 + 16) = a6;
  *(_QWORD *)(v13 + 24) = a5;
  *(_QWORD *)(v13 + 32) = a3;
  *(_QWORD *)(v13 + 40) = a4;
  *(_QWORD *)(v13 + 48) = sub_1ABD12970;
  *(_QWORD *)(v13 + 56) = v12;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF31054();
  return swift_release();
}

void sub_1ABDAEB0C(void **a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD v16[6];

  v11 = *a1;
  v12 = objc_msgSend(objc_allocWithZone((Class)SCWDatabasePollingCondition), sel_initWithMinIntervalSinceLastSync_, a2);
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a7;
  v16[4] = sub_1ABDAEDE4;
  v16[5] = v14;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1ABD9FF74;
  v16[3] = &block_descriptor_4;
  v15 = _Block_copy(v16);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  swift_release();
  objc_msgSend(v11, sel_pollForChangesWithCondition_completion_, v12, v15);
  _Block_release(v15);

}

void sub_1ABDAEC50(void *a1, uint64_t a2, void (*a3)(void *), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t Strong;
  id v9;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(Strong + 64) = 0;
    swift_release();
    Strong = swift_release();
  }
  if (a1)
  {
    v9 = a1;
    a3(a1);

  }
  else
  {
    a5(Strong);
  }
}

uint64_t sub_1ABDAECF4()
{
  return sub_1ABDAE93C();
}

uint64_t sub_1ABDAED14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDAEA40(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(double *)(v4 + 24));
}

uint64_t sub_1ABDAED20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABDAED44()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDAED78(void **a1)
{
  uint64_t v1;

  sub_1ABDAEB0C(a1, *(double *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1ABDAED8C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABDAEDB0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDAEDE4(void *a1)
{
  uint64_t v1;

  sub_1ABDAEC50(a1, *(_QWORD *)(v1 + 16), *(void (**)(void *))(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40));
}

uint64_t sub_1ABDAEDF4@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (a2)
    v7 = result;
  else
    v7 = 0;
  v8 = 0xE000000000000000;
  if (a2)
    v9 = a2;
  else
    v9 = 0xE000000000000000;
  if (a4)
    v10 = a3;
  else
    v10 = 0;
  if (a4)
    v11 = a4;
  else
    v11 = 0xE000000000000000;
  *a7 = v7;
  a7[1] = v9;
  if (a6)
    v12 = a5;
  else
    v12 = 0;
  a7[2] = v10;
  a7[3] = v11;
  if (a6)
    v8 = a6;
  a7[4] = v12;
  a7[5] = v8;
  return result;
}

uint64_t sub_1ABDAEE2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE1DF8(*a1, *a2);
}

uint64_t sub_1ABDAEE38()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDAEE98()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDAEECC()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDAEF28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDAFBA8();
  *a1 = result;
  return result;
}

void sub_1ABDAEF54(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = ((unint64_t)*v1 << 40) + 0x78316567616D69;
  a1[1] = 0xE700000000000000;
}

unint64_t sub_1ABDAEF78()
{
  unsigned __int8 *v0;

  return ((unint64_t)*v0 << 40) + 0x78316567616D69;
}

uint64_t sub_1ABDAEF98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDAFBA8();
  *a1 = result;
  return result;
}

uint64_t sub_1ABDAEFBC()
{
  sub_1ABDAF594();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDAEFE4()
{
  sub_1ABDAF594();
  return sub_1ABF32398();
}

uint64_t sub_1ABDAF00C@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;

  sub_1ABDAF864(0, &qword_1ED34FE78, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDAF594();
  sub_1ABF3235C();
  if (!v2)
  {
    v47 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v46 = 0;
    sub_1ABF320C8();
    v10 = v45;
    v43 = v44;
    if (v45)
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_beginAccess();
      v11 = v47;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v14 = v11[2];
      v13 = v11[3];
      if (v14 >= v13 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      v11[2] = v14 + 1;
      v15 = &v11[2 * v14];
      v15[4] = 0x78316567616D69;
      v15[5] = 0xE700000000000000;
      v47 = v11;
      swift_endAccess();
      v10 = v42;
    }
    v46 = 1;
    sub_1ABF320C8();
    v40 = v44;
    v41 = v45;
    if (!v45)
    {
      swift_beginAccess();
      v11 = v47;
      v16 = swift_isUniquelyReferenced_nonNull_native();
      v42 = v10;
      if ((v16 & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v18 = v11[2];
      v17 = v11[3];
      if (v18 >= v17 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v17 > 1), v18 + 1, 1, v11);
      v11[2] = v18 + 1;
      v19 = &v11[2 * v18];
      v19[4] = 0x78326567616D69;
      v19[5] = 0xE700000000000000;
      v47 = v11;
      swift_endAccess();
      v10 = v42;
    }
    v46 = 2;
    sub_1ABF320C8();
    v21 = v45;
    if (v45)
    {
      v39 = v44;
    }
    else
    {
      swift_beginAccess();
      v11 = v47;
      v22 = swift_isUniquelyReferenced_nonNull_native();
      v42 = v10;
      if ((v22 & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v24 = v11[2];
      v23 = v11[3];
      v25 = v24 + 1;
      if (v24 >= v23 >> 1)
      {
        v39 = v24 + 1;
        v37 = sub_1ABD12054((_QWORD *)(v23 > 1), v24 + 1, 1, v11);
        v25 = v39;
        v11 = v37;
      }
      v11[2] = v25;
      v26 = &v11[2 * v24];
      v26[4] = 0x78336567616D69;
      v26[5] = 0xE700000000000000;
      v47 = v11;
      swift_endAccess();
      v39 = 0;
      v10 = v42;
    }
    if (v10)
      v27 = v43;
    else
      v27 = 0;
    v28 = 0xE000000000000000;
    if (!v10)
      v10 = 0xE000000000000000;
    v30 = v40;
    v29 = v41;
    if (!v41)
      v30 = 0;
    v42 = v30;
    v43 = v27;
    if (!v41)
      v29 = 0xE000000000000000;
    if (v21)
      v28 = v21;
    v40 = v28;
    v41 = v29;
    if (v11[2])
    {
      sub_1ABD0F55C();
      v31 = swift_allocObject();
      v38 = v10;
      v32 = (_QWORD *)v31;
      *(_OWORD *)(v31 + 16) = xmmword_1ABF366C0;
      sub_1ABD165AC();
      v32[7] = v33;
      v32[8] = sub_1ABD82448();
      v32[4] = v11;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v34 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      v10 = v38;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v34 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    *a2 = v43;
    a2[1] = v10;
    v35 = v41;
    a2[2] = v42;
    a2[3] = v35;
    v36 = v40;
    a2[4] = v39;
    a2[5] = v36;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1ABDAF594()
{
  unint64_t result;

  result = qword_1ED34F2A8;
  if (!qword_1ED34F2A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A370, &type metadata for MultiResolutionImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F2A8);
  }
  return result;
}

uint64_t sub_1ABDAF5DC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  sub_1ABDAF864(0, &qword_1ED34FF30, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDAF594();
  sub_1ABF32368();
  v15 = 0;
  v10 = v12[5];
  sub_1ABF32194();
  if (!v10)
  {
    v14 = 1;
    sub_1ABF32194();
    v13 = 2;
    sub_1ABF32194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABDAF74C@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1ABDAF00C(a1, a2);
}

uint64_t sub_1ABDAF760(_QWORD *a1)
{
  return sub_1ABDAF5DC(a1);
}

uint64_t sub_1ABDAF778(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_1ABF3223C(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v12 = sub_1ABF3223C(), result = 0, (v12 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9)
        return 1;
      else
        return sub_1ABF3223C();
    }
  }
  return result;
}

void sub_1ABDAF864(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABDAF594();
    v7 = a3(a1, &type metadata for MultiResolutionImage.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *initializeWithCopy for MultiResolutionImage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for MultiResolutionImage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MultiResolutionImage(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MultiResolutionImage()
{
  return &type metadata for MultiResolutionImage;
}

uint64_t storeEnumTagSinglePayload for MultiResolutionImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABDAFA50 + 4 * byte_1ABF3A1D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABDAFA84 + 4 * byte_1ABF3A1D0[v4]))();
}

uint64_t sub_1ABDAFA84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDAFA8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDAFA94);
  return result;
}

uint64_t sub_1ABDAFAA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDAFAA8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABDAFAAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDAFAB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MultiResolutionImage.CodingKeys()
{
  return &type metadata for MultiResolutionImage.CodingKeys;
}

unint64_t sub_1ABDAFAD4()
{
  unint64_t result;

  result = qword_1EEC42520;
  if (!qword_1EEC42520)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A348, &type metadata for MultiResolutionImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42520);
  }
  return result;
}

unint64_t sub_1ABDAFB1C()
{
  unint64_t result;

  result = qword_1ED34F2B8;
  if (!qword_1ED34F2B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A280, &type metadata for MultiResolutionImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F2B8);
  }
  return result;
}

unint64_t sub_1ABDAFB64()
{
  unint64_t result;

  result = qword_1ED34F2B0;
  if (!qword_1ED34F2B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A2A8, &type metadata for MultiResolutionImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F2B0);
  }
  return result;
}

uint64_t sub_1ABDAFBA8()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t WatchlistEntity.init(from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;

  v25 = a2;
  v3 = sub_1ABF30484();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1ABF3049C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 8);
  v24 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 16);
  v22 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v23 = *(unsigned __int16 *)(a1 + 40);
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAF9B8], v3);
  sub_1ABF304A8();
  v15 = MEMORY[0x1AF435F84](v11);
  v26 = v24;
  v27 = v12;
  v16 = v22;
  v28 = v13;
  v29 = v22;
  v30 = v14;
  v31 = v23;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v17 = sub_1ABD254E4();
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v17;
  v27 = v19;
  sub_1ABF2FD28();
  swift_release_n();
  result = swift_bridgeObjectRelease_n();
  v21 = v25;
  *v25 = v16;
  v21[1] = v14;
  v21[2] = v15;
  return result;
}

uint64_t sub_1ABDAFE58()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABDAFE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v0 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1ABF31774();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v7 = &v16[-v6];
  v8 = sub_1ABF317A4();
  v10 = v9;
  sub_1ABF31738();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (qword_1ED34FD78 != -1)
    swift_once();
  v11 = (id)qword_1ED368428;
  sub_1ABF30844();
  v12 = sub_1ABF317EC();
  v14 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v7, v1);
  return WatchlistEntity.init(id:name:)(v8, v10, v12, v14, &qword_1EEC42528);
}

uint64_t WatchlistEntity.init(id:name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v20 = a4;
  v21 = a1;
  v8 = sub_1ABF30484();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_1ABF3049C();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CAF9B8], v8);
  sub_1ABF304A8();
  v17 = MEMORY[0x1AF435F84](v16);
  v22 = a3;
  v23 = v20;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  sub_1ABF2FD28();
  swift_release_n();
  result = swift_bridgeObjectRelease_n();
  *a5 = v21;
  a5[1] = a2;
  a5[2] = v17;
  return result;
}

uint64_t static WatchlistEntity.defaultWatchlistEntity.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40F08 != -1)
    swift_once();
  v2 = unk_1EEC42530;
  v3 = qword_1EEC42538;
  *a1 = qword_1EEC42528;
  a1[1] = v2;
  a1[2] = v3;
  sub_1ABF2FF5C();
  return sub_1ABF2FF68();
}

uint64_t WatchlistEntity.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB02B8@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1ED346700 != -1)
    swift_once();
  *a1 = qword_1ED3470B0;
  return sub_1ABF2FF68();
}

uint64_t static WatchlistEntity.defaultQuery.getter()
{
  if (qword_1ED346700 != -1)
    swift_once();
  return sub_1ABF2FF68();
}

uint64_t sub_1ABDB0348@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABDB0354@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40F18 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC42540);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static WatchlistEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40F18 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC42540);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABDB0434()
{
  sub_1ABD68830();
  return sub_1ABF2FC5C();
}

uint64_t WatchlistEntity.displayRepresentation.getter()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED346788, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91480], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - v2;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - v5;
  v7 = sub_1ABF3049C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1ABF31768();
  MEMORY[0x1E0C80A78](v9);
  sub_1ABF3175C();
  sub_1ABF31750();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FD1C();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1ABF31744();
  swift_bridgeObjectRelease();
  sub_1ABF31750();
  sub_1ABF30490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  v10 = sub_1ABF2FEFC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  return sub_1ABF2FF08();
}

uint64_t sub_1ABDB0680()
{
  sub_1ABDB0C48();
  return sub_1ABF300B8();
}

uint64_t sub_1ABDB06B8()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WatchlistQuery();
  v0 = swift_allocObject();
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34C7B8, (uint64_t (*)(uint64_t))sub_1ABD68798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ED3470B0 = v0;
  return result;
}

uint64_t sub_1ABDB0754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v12[0] = (char *)v12 - v1;
  v2 = sub_1ABF30484();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF30070();
  __swift_allocate_value_buffer(v10, qword_1EEC42540);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC42540);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v2);
  sub_1ABF304A8();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v9 + 56))(v12[0], 1, 1, v8);
  sub_1ABCF5A54(0, &qword_1EEC421D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF38EC0;
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  return sub_1ABF30058();
}

unint64_t sub_1ABDB0AC4()
{
  unint64_t result;

  result = qword_1ED34E3F0;
  if (!qword_1ED34E3F0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistEntity, &type metadata for WatchlistEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34E3F0);
  }
  return result;
}

unint64_t sub_1ABDB0B0C()
{
  unint64_t result;

  result = qword_1ED34E418;
  if (!qword_1ED34E418)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistEntity, &type metadata for WatchlistEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34E418);
  }
  return result;
}

unint64_t sub_1ABDB0B54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED347090;
  if (!qword_1ED347090)
  {
    v1 = type metadata accessor for WatchlistQuery();
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistQuery, v1);
    atomic_store(result, (unint64_t *)&qword_1ED347090);
  }
  return result;
}

uint64_t sub_1ABDB0B9C()
{
  return MEMORY[0x1E0C91C88];
}

uint64_t sub_1ABDB0BA8()
{
  return MEMORY[0x1E0DEA978];
}

unint64_t sub_1ABDB0BB8()
{
  unint64_t result;

  result = qword_1ED34E3F8;
  if (!qword_1ED34E3F8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistEntity, &type metadata for WatchlistEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34E3F8);
  }
  return result;
}

unint64_t sub_1ABDB0C00()
{
  unint64_t result;

  result = qword_1ED34E400;
  if (!qword_1ED34E400)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistEntity, &type metadata for WatchlistEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34E400);
  }
  return result;
}

unint64_t sub_1ABDB0C48()
{
  unint64_t result;

  result = qword_1ED34E408;
  if (!qword_1ED34E408)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistEntity, &type metadata for WatchlistEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34E408);
  }
  return result;
}

unint64_t sub_1ABDB0C90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED347080;
  if (!qword_1ED347080)
  {
    sub_1ABCF4DA8(255, &qword_1ED347088, (uint64_t (*)(void))sub_1ABD67FB8, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C91980]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91998], v1);
    atomic_store(result, (unint64_t *)&qword_1ED347080);
  }
  return result;
}

unint64_t sub_1ABDB0CFC()
{
  unint64_t result;

  result = qword_1ED34E410;
  if (!qword_1ED34E410)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for WatchlistEntity, &type metadata for WatchlistEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34E410);
  }
  return result;
}

uint64_t destroy for WatchlistEntity()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s10StocksCore15WatchlistEntityVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  return a1;
}

_QWORD *assignWithCopy for WatchlistEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1ABF2FF68();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WatchlistEntity(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for WatchlistEntity()
{
  return &type metadata for WatchlistEntity;
}

uint64_t sub_1ABDB0E60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB0E8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB0EB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB0EE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB0F10()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB0F3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB0F68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB0F94()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB0FC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB0FEC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB1018()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB1044()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 192);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB1070()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB109C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 224);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB10C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDB10F4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 256);
  sub_1ABF2FF5C();
  return v1;
}

void sub_1ABDB1120(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v39;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v39 = a4;
  if (a2)
  {
    v42 = a2;
    if (a4)
      goto LABEL_3;
LABEL_9:
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    sub_1ABCF9034();
    a3 = v48;
    v39 = v49;
    if (a6)
      goto LABEL_4;
    goto LABEL_10;
  }
  type metadata accessor for EndpointConfiguration.Defaults();
  swift_initStaticObject();
  sub_1ABCF8898();
  a1 = v46;
  v42 = v47;
  if (!v39)
    goto LABEL_9;
LABEL_3:
  if (a6)
    goto LABEL_4;
LABEL_10:
  type metadata accessor for EndpointConfiguration.Defaults();
  swift_initStaticObject();
  sub_1ABCF9158();
  a5 = v50;
  a6 = v51;
LABEL_4:
  v100 = a11;
  if (!a8)
  {
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    sub_1ABCF8778();
    a7 = v44;
    a8 = v45;
  }
  v99 = a13;
  if (!a11)
  {
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    sub_1ABCF8778();
    a10 = v52;
    v100 = v53;
  }
  v98 = a15;
  if (!a13)
  {
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    sub_1ABCF8DF8();
    a12 = v54;
    v99 = v55;
  }
  v97 = a17;
  if (!a15)
  {
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    sub_1ABCF8CDC();
    a14 = v56;
    v98 = v57;
  }
  v58 = a19;
  v92 = v39;
  if (a17)
  {
    v59 = a21;
    if (a19)
      goto LABEL_23;
LABEL_22:
    v62 = v59;
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    sub_1ABCF89DC();
    v59 = v62;
    a18 = v63;
    goto LABEL_23;
  }
  type metadata accessor for EndpointConfiguration.Defaults();
  swift_initStaticObject();
  sub_1ABCF8F14();
  a16 = v60;
  v97 = v61;
  v58 = a19;
  v59 = a21;
  if (!a19)
    goto LABEL_22;
LABEL_23:
  v64 = a23;
  v93 = a5;
  if (!v59)
  {
    v66 = a7;
    v67 = v58;
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    sub_1ABCF8BBC();
    a20 = v68;
    v59 = v69;
    v58 = v67;
    a7 = v66;
  }
  v70 = a25;
  v95 = a7;
  v96 = a8;
  v94 = a6;
  if (!a23)
  {
    v72 = v58;
    v73 = v59;
    v74 = a20;
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    sub_1ABCF8A9C();
    a20 = v74;
    v59 = v73;
    a22 = v75;
    v64 = v76;
    v58 = v72;
  }
  v78 = a34;
  v77 = a35;
  v79 = a33;
  v80 = a30;
  if (a25)
  {
    v81 = a24;
  }
  else
  {
    v85 = v59;
    v86 = v58;
    v83 = a20;
    v84 = a22;
    type metadata accessor for EndpointConfiguration.Defaults();
    swift_initStaticObject();
    sub_1ABCF9034();
    v80 = a30;
    v79 = a33;
    v78 = a34;
    v77 = a35;
    a20 = v83;
    a22 = v84;
    v59 = v85;
    v70 = v82;
    v58 = v86;
  }
  *a9 = a1;
  a9[1] = v42;
  a9[2] = a3;
  a9[3] = v92;
  a9[4] = v93;
  a9[5] = v94;
  a9[6] = v95;
  a9[7] = v96;
  a9[8] = a10;
  a9[9] = v100;
  a9[10] = a12;
  a9[11] = v99;
  a9[12] = a14;
  a9[13] = v98;
  a9[14] = a16;
  a9[15] = v97;
  a9[16] = a18;
  a9[17] = v58;
  a9[18] = a20;
  a9[19] = v59;
  a9[20] = a22;
  a9[21] = v64;
  a9[22] = v81;
  a9[23] = v70;
  a9[24] = a26;
  a9[25] = a27;
  a9[26] = a28;
  a9[27] = a29;
  a9[28] = v80;
  a9[29] = a31;
  a9[30] = a32;
  a9[31] = v79;
  a9[32] = v78;
  a9[33] = v77;
}

void sub_1ABDB156C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  char *v10;
  BOOL v11;
  _QWORD __dst[34];

  v5 = a1[2];
  if (v5)
  {
    memcpy(__dst, a1 + 4, sizeof(__dst));
    if (__dst[0] != a2 || __dst[1] != a3)
    {
      v10 = (char *)(a1 + 38);
      do
      {
        if ((sub_1ABF3223C() & 1) != 0)
          break;
        if (!--v5)
          goto LABEL_15;
        memcpy(__dst, v10, sizeof(__dst));
        v11 = __dst[0] == a2 && __dst[1] == a3;
        v10 += 272;
      }
      while (!v11);
    }
    sub_1ABDB4070((uint64_t)__dst);
    memcpy(a4, __dst, 0x110uLL);
  }
  else
  {
LABEL_15:
    sub_1ABDB1120(0, 0, 0, 0, 0, 0, 0, 0, a4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0);
  }
}

uint64_t sub_1ABDB1688(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABDB16C4 + 4 * byte_1ABF3A630[a1]))(0x6D6E6F7269766E65, 0xEB00000000746E65);
}

unint64_t sub_1ABDB16C4()
{
  return 0xD000000000000017;
}

uint64_t sub_1ABDB1834(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABDB1870 + 4 * byte_1ABF3A640[a1]))(0x6D6E6F7269766E65, 0xEB00000000746E65);
}

unint64_t sub_1ABDB1870()
{
  return 0xD000000000000017;
}

uint64_t sub_1ABDB19E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1ABDB1688(*a1);
  v5 = v4;
  if (v3 == sub_1ABDB1688(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABDB1A68()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABDB1688(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDB1AC8()
{
  unsigned __int8 *v0;

  sub_1ABDB1688(*v0);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDB1B08()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABDB1688(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDB1B64@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDB4028();
  *a1 = result;
  return result;
}

uint64_t sub_1ABDB1B90@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABDB1688(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABDB1BB8()
{
  unsigned __int8 *v0;

  return sub_1ABDB1834(*v0);
}

uint64_t sub_1ABDB1BC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDB4028();
  *a1 = result;
  return result;
}

void sub_1ABDB1BE4(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1ABDB1BF0()
{
  sub_1ABDB2CC8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDB1C18()
{
  sub_1ABDB2CC8();
  return sub_1ABF32398();
}

uint64_t sub_1ABDB1C40@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD v90[34];
  uint64_t v91;
  uint64_t v92;
  char v93;
  _QWORD *v94;

  sub_1ABDB37D4(0, &qword_1ED34FE80, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v66 - v8;
  v10 = a1[3];
  v89 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1ABDB2CC8();
  sub_1ABF3235C();
  if (!v2)
  {
    v87 = a2;
    v88 = v7;
    v94 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v93 = 0;
    v11 = v9;
    sub_1ABF320C8();
    v12 = v6;
    v14 = v91;
    v13 = v92;
    if (v92)
    {
      v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v86 = v91;
      swift_beginAccess();
      v15 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v17 = v15[2];
      v16 = v15[3];
      if (v17 >= v16 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
      v15[2] = v17 + 1;
      v18 = &v15[2 * v17];
      v18[4] = 0x6D6E6F7269766E65;
      v18[5] = 0xEB00000000746E65;
      v94 = v15;
      swift_endAccess();
      v11 = v9;
      v13 = 0;
      v14 = v86;
    }
    v93 = 1;
    sub_1ABF320C8();
    v19 = v92;
    v85 = v91;
    if (!v92)
    {
      v84 = v13;
      v86 = v14;
      swift_beginAccess();
      v15 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v21 = v15[2];
      v20 = v15[3];
      if (v21 >= v20 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v20 > 1), v21 + 1, 1, v15);
      v15[2] = v21 + 1;
      v22 = &v15[2 * v21];
      v22[4] = 0xD000000000000017;
      v22[5] = 0x80000001ABF530D0;
      v94 = v15;
      swift_endAccess();
      v19 = 0;
      v14 = v86;
      v13 = v84;
    }
    v93 = 2;
    sub_1ABF320C8();
    v23 = v92;
    v82 = v91;
    if (!v92)
    {
      swift_beginAccess();
      v15 = v94;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v83 = v19;
      v84 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v26 = v15[2];
      v25 = v15[3];
      if (v26 >= v25 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v25 > 1), v26 + 1, 1, v15);
      v15[2] = v26 + 1;
      v27 = &v15[2 * v26];
      v27[4] = 0xD000000000000015;
      v27[5] = 0x80000001ABF530F0;
      v94 = v15;
      swift_endAccess();
      v19 = v83;
      v23 = v84;
    }
    v93 = 3;
    sub_1ABF320C8();
    v80 = v91;
    v81 = v92;
    if (!v92)
    {
      swift_beginAccess();
      v15 = v94;
      v28 = swift_isUniquelyReferenced_nonNull_native();
      v83 = v19;
      v84 = v23;
      if ((v28 & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v30 = v15[2];
      v29 = v15[3];
      if (v30 >= v29 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v29 > 1), v30 + 1, 1, v15);
      v15[2] = v30 + 1;
      v31 = &v15[2 * v30];
      v31[4] = 0xD000000000000010;
      v31[5] = 0x80000001ABF53110;
      v94 = v15;
      swift_endAccess();
      v19 = v83;
      v23 = v84;
    }
    v93 = 4;
    sub_1ABF320C8();
    v86 = v14;
    v32 = v91;
    v79 = v92;
    if (!v92)
    {
      swift_beginAccess();
      v15 = v94;
      v33 = swift_isUniquelyReferenced_nonNull_native();
      v83 = v19;
      v84 = v23;
      if ((v33 & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v35 = v15[2];
      v34 = v15[3];
      if (v35 >= v34 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v34 > 1), v35 + 1, 1, v15);
      v15[2] = v35 + 1;
      v36 = &v15[2 * v35];
      v36[4] = 0xD000000000000018;
      v36[5] = 0x80000001ABF53130;
      v94 = v15;
      swift_endAccess();
      v19 = v83;
      v23 = v84;
    }
    v93 = 5;
    sub_1ABF320C8();
    v77 = v91;
    v78 = v32;
    v37 = v92;
    if (!v92)
    {
      swift_beginAccess();
      v15 = v94;
      v38 = swift_isUniquelyReferenced_nonNull_native();
      v83 = v19;
      v84 = v23;
      if ((v38 & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v40 = v15[2];
      v39 = v15[3];
      if (v40 >= v39 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v39 > 1), v40 + 1, 1, v15);
      v15[2] = v40 + 1;
      v41 = &v15[2 * v40];
      v41[4] = 0xD000000000000012;
      v41[5] = 0x80000001ABF53150;
      v94 = v15;
      swift_endAccess();
      v19 = v83;
      v23 = v84;
    }
    v93 = 6;
    sub_1ABF320C8();
    v74 = v91;
    v76 = v92;
    if (!v92)
    {
      v75 = v37;
      swift_beginAccess();
      v15 = v94;
      v42 = swift_isUniquelyReferenced_nonNull_native();
      v84 = v23;
      if ((v42 & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v44 = v15[2];
      v43 = v15[3];
      if (v44 >= v43 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v43 > 1), v44 + 1, 1, v15);
      v15[2] = v44 + 1;
      v45 = &v15[2 * v44];
      v45[4] = 0xD000000000000017;
      v45[5] = 0x80000001ABF53170;
      v94 = v15;
      swift_endAccess();
      v23 = v84;
      v37 = v75;
    }
    v93 = 7;
    sub_1ABF320C8();
    v75 = v37;
    v73 = v91;
    v47 = v92;
    if (!v92)
    {
      v83 = v19;
      v84 = v23;
      swift_beginAccess();
      v15 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v49 = v15[2];
      v48 = v15[3];
      if (v49 >= v48 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v48 > 1), v49 + 1, 1, v15);
      v15[2] = v49 + 1;
      v50 = &v15[2 * v49];
      v50[4] = 0xD000000000000019;
      v50[5] = 0x80000001ABF53190;
      v94 = v15;
      swift_endAccess();
      v19 = v83;
      v23 = v84;
    }
    v93 = 8;
    sub_1ABF320C8();
    v83 = v19;
    v84 = v23;
    v51 = v13;
    v52 = v11;
    v71 = v91;
    v72 = v92;
    if (!v92)
    {
      swift_beginAccess();
      v15 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v54 = v15[2];
      v53 = v15[3];
      if (v54 >= v53 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v53 > 1), v54 + 1, 1, v15);
      v15[2] = v54 + 1;
      v55 = &v15[2 * v54];
      v55[4] = 0xD000000000000024;
      v55[5] = 0x80000001ABF531B0;
      v94 = v15;
      swift_endAccess();
    }
    v93 = 9;
    sub_1ABF320C8();
    v69 = v91;
    v70 = v92;
    if (!v92)
    {
      swift_beginAccess();
      v15 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v57 = v15[2];
      v56 = v15[3];
      if (v57 >= v56 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v56 > 1), v57 + 1, 1, v15);
      v15[2] = v57 + 1;
      v58 = &v15[2 * v57];
      v58[4] = 0xD000000000000018;
      v58[5] = 0x80000001ABF531E0;
      v94 = v15;
      swift_endAccess();
    }
    v93 = 10;
    sub_1ABF320C8();
    v59 = v92;
    v68 = v91;
    if (!v92)
    {
      swift_beginAccess();
      v15 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1ABD12054(0, v15[2] + 1, 1, v15);
      v61 = v15[2];
      v60 = v15[3];
      v67 = v61 + 1;
      if (v61 >= v60 >> 1)
        v15 = sub_1ABD12054((_QWORD *)(v60 > 1), v67, 1, v15);
      v15[2] = v67;
      v62 = &v15[2 * v61];
      v62[4] = 0xD000000000000014;
      v62[5] = 0x80000001ABF53200;
      v94 = v15;
      swift_endAccess();
    }
    sub_1ABDB1120(v86, v51, v85, v83, v82, v84, v80, v81, v90, v78, v79, v77, v75, v74, v76, v73, v47, v71, v72,
      v69,
      v70,
      0,
      0,
      v68,
      v59,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0);
    if (v15[2])
    {
      sub_1ABD0F55C();
      v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_1ABF366C0;
      sub_1ABD165AC();
      *(_QWORD *)(v63 + 56) = v64;
      *(_QWORD *)(v63 + 64) = sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCD0, (uint64_t (*)(uint64_t))sub_1ABD165AC, MEMORY[0x1E0CB1B18]);
      *(_QWORD *)(v63 + 32) = v15;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v65 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v65 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v88 + 8))(v52, v12);
    swift_bridgeObjectRelease();
    memcpy(v87, v90, 0x110uLL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v89);
}

unint64_t sub_1ABDB2CC8()
{
  unint64_t result;

  result = qword_1ED34F350;
  if (!qword_1ED34F350)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A87C, &type metadata for EndpointConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F350);
  }
  return result;
}

uint64_t sub_1ABDB2D10(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[30];
  uint64_t v21;
  char v22;

  sub_1ABDB37D4(0, &qword_1ED34FF38, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v20 - v6;
  v8 = v1[2];
  v20[28] = v1[3];
  v20[29] = v8;
  v9 = v1[4];
  v20[26] = v1[5];
  v20[27] = v9;
  v10 = v1[6];
  v20[24] = v1[7];
  v20[25] = v10;
  v11 = v1[8];
  v20[22] = v1[9];
  v20[23] = v11;
  v12 = v1[11];
  v20[20] = v1[10];
  v20[21] = v12;
  v13 = v1[12];
  v20[18] = v1[13];
  v20[19] = v13;
  v14 = v1[15];
  v20[16] = v1[14];
  v20[17] = v14;
  v15 = v1[16];
  v20[14] = v1[17];
  v20[15] = v15;
  v16 = v1[18];
  v20[12] = v1[19];
  v20[13] = v16;
  v17 = v1[22];
  v20[10] = v1[23];
  v20[11] = v17;
  v20[9] = v1[24];
  v20[8] = v1[25];
  v20[7] = v1[26];
  v20[6] = v1[27];
  v20[5] = v1[28];
  v20[4] = v1[29];
  v20[3] = v1[30];
  v20[2] = v1[31];
  v20[1] = v1[32];
  v20[0] = v1[33];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDB2CC8();
  sub_1ABF32368();
  v22 = 0;
  v18 = v21;
  sub_1ABF32194();
  if (!v18)
  {
    v22 = 1;
    sub_1ABF32194();
    v22 = 2;
    sub_1ABF32194();
    v21 = v5;
    v22 = 3;
    sub_1ABF32194();
    v22 = 4;
    sub_1ABF32194();
    v22 = 5;
    sub_1ABF32194();
    v22 = 6;
    sub_1ABF32194();
    v22 = 7;
    sub_1ABF32194();
    v22 = 8;
    sub_1ABF32194();
    v22 = 9;
    sub_1ABF32194();
    v22 = 10;
    sub_1ABF32194();
    v22 = 11;
    sub_1ABF32140();
    v22 = 12;
    sub_1ABF32140();
    v22 = 13;
    sub_1ABF32140();
    v22 = 14;
    sub_1ABF32140();
    v22 = 15;
    sub_1ABF32140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABDB31B0@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1ABDB1C40(a1, a2);
}

uint64_t sub_1ABDB31C4(_QWORD *a1)
{
  return sub_1ABDB2D10(a1);
}

uint64_t sub_1ABDB31DC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v81 = a1[7];
  v82 = a1[6];
  v80 = a1[8];
  v78 = a1[9];
  v76 = a1[10];
  v74 = a1[11];
  v72 = a1[12];
  v70 = a1[13];
  v68 = a1[14];
  v66 = a1[15];
  v64 = a1[16];
  v62 = a1[17];
  v60 = a1[18];
  v58 = a1[19];
  v56 = a1[20];
  v54 = a1[21];
  v52 = a1[22];
  v50 = a1[23];
  v44 = a1[24];
  v48 = a1[25];
  v40 = a1[26];
  v46 = a1[27];
  v36 = a1[28];
  v42 = a1[29];
  v34 = a1[30];
  v38 = a1[31];
  v30 = a1[32];
  v32 = a1[33];
  v7 = a2[2];
  v6 = a2[3];
  v9 = a2[4];
  v8 = a2[5];
  v11 = a2[6];
  v10 = a2[7];
  v79 = a2[8];
  v77 = a2[9];
  v75 = a2[10];
  v73 = a2[11];
  v71 = a2[12];
  v69 = a2[13];
  v67 = a2[14];
  v65 = a2[15];
  v63 = a2[16];
  v61 = a2[17];
  v59 = a2[18];
  v57 = a2[19];
  v55 = a2[20];
  v53 = a2[21];
  v51 = a2[22];
  v49 = a2[23];
  v43 = a2[24];
  v47 = a2[25];
  v39 = a2[26];
  v45 = a2[27];
  v35 = a2[28];
  v41 = a2[29];
  v33 = a2[30];
  v37 = a2[31];
  v29 = a2[32];
  v31 = a2[33];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_1ABF3223C(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v6 || (v14 = sub_1ABF3223C(), result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v8 || (v15 = sub_1ABF3223C(), result = 0, (v15 & 1) != 0))
      {
        if (v82 == v11 && v81 == v10 || (v16 = sub_1ABF3223C(), result = 0, (v16 & 1) != 0))
        {
          if (v80 == v79 && v78 == v77 || (v17 = sub_1ABF3223C(), result = 0, (v17 & 1) != 0))
          {
            if (v76 == v75 && v74 == v73 || (v18 = sub_1ABF3223C(), result = 0, (v18 & 1) != 0))
            {
              if (v72 == v71 && v70 == v69 || (v19 = sub_1ABF3223C(), result = 0, (v19 & 1) != 0))
              {
                if (v68 == v67 && v66 == v65 || (v20 = sub_1ABF3223C(), result = 0, (v20 & 1) != 0))
                {
                  if (v64 == v63 && v62 == v61 || (v21 = sub_1ABF3223C(), result = 0, (v21 & 1) != 0))
                  {
                    if (v60 == v59 && v58 == v57 || (v22 = sub_1ABF3223C(), result = 0, (v22 & 1) != 0))
                    {
                      if (v56 == v55 && v54 == v53 || (v23 = sub_1ABF3223C(), result = 0, (v23 & 1) != 0))
                      {
                        if (v52 == v51 && v50 == v49 || (v24 = sub_1ABF3223C(), result = 0, (v24 & 1) != 0))
                        {
                          if (v48)
                          {
                            if (!v47)
                              return 0;
                            if (v44 != v43 || v48 != v47)
                            {
                              v25 = sub_1ABF3223C();
                              result = 0;
                              if ((v25 & 1) == 0)
                                return result;
                            }
                          }
                          else if (v47)
                          {
                            return 0;
                          }
                          if (v46)
                          {
                            if (!v45)
                              return 0;
                            if (v40 != v39 || v46 != v45)
                            {
                              v26 = sub_1ABF3223C();
                              result = 0;
                              if ((v26 & 1) == 0)
                                return result;
                            }
                          }
                          else if (v45)
                          {
                            return 0;
                          }
                          if (v42)
                          {
                            if (!v41)
                              return 0;
                            if (v36 != v35 || v42 != v41)
                            {
                              v27 = sub_1ABF3223C();
                              result = 0;
                              if ((v27 & 1) == 0)
                                return result;
                            }
                          }
                          else if (v41)
                          {
                            return 0;
                          }
                          if (v38)
                          {
                            if (!v37)
                              return 0;
                            if (v34 != v33 || v38 != v37)
                            {
                              v28 = sub_1ABF3223C();
                              result = 0;
                              if ((v28 & 1) == 0)
                                return result;
                            }
                          }
                          else if (v37)
                          {
                            return 0;
                          }
                          if (v32)
                          {
                            if (v31 && (v30 == v29 && v32 == v31 || (sub_1ABF3223C() & 1) != 0))
                              return 1;
                          }
                          else if (!v31)
                          {
                            return 1;
                          }
                          return 0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1ABDB37D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABDB2CC8();
    v7 = a3(a1, &type metadata for EndpointConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *initializeWithCopy for EndpointConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  v15 = a2[25];
  a1[24] = a2[24];
  a1[25] = v15;
  v16 = a2[27];
  a1[26] = a2[26];
  a1[27] = v16;
  v17 = a2[29];
  a1[28] = a2[28];
  a1[29] = v17;
  v18 = a2[31];
  a1[30] = a2[30];
  a1[31] = v18;
  v19 = a2[33];
  a1[32] = a2[32];
  a1[33] = v19;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for EndpointConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  a1[29] = a2[29];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[32] = a2[32];
  a1[33] = a2[33];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

_QWORD *assignWithTake for EndpointConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_bridgeObjectRelease();
  v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  swift_bridgeObjectRelease();
  v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  swift_bridgeObjectRelease();
  v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  swift_bridgeObjectRelease();
  v20 = a2[33];
  a1[32] = a2[32];
  a1[33] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EndpointConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 272))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EndpointConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 272) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 272) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EndpointConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EndpointConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1ABDB3ED0 + 4 * byte_1ABF3A655[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1ABDB3F04 + 4 * byte_1ABF3A650[v4]))();
}

uint64_t sub_1ABDB3F04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDB3F0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDB3F14);
  return result;
}

uint64_t sub_1ABDB3F20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDB3F28);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1ABDB3F2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDB3F34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EndpointConfiguration.CodingKeys()
{
  return &type metadata for EndpointConfiguration.CodingKeys;
}

unint64_t sub_1ABDB3F54()
{
  unint64_t result;

  result = qword_1EEC42558;
  if (!qword_1EEC42558)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A814, &type metadata for EndpointConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42558);
  }
  return result;
}

unint64_t sub_1ABDB3F9C()
{
  unint64_t result;

  result = qword_1ED34F360;
  if (!qword_1ED34F360)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A74C, &type metadata for EndpointConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F360);
  }
  return result;
}

unint64_t sub_1ABDB3FE4()
{
  unint64_t result;

  result = qword_1ED34F358;
  if (!qword_1ED34F358)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A774, &type metadata for EndpointConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F358);
  }
  return result;
}

uint64_t sub_1ABDB4028()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10)
    return 16;
  else
    return v0;
}

uint64_t sub_1ABDB4070(uint64_t a1)
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

int *sub_1ABDB4190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, char a12)
{
  uint64_t v20;
  int *result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v20 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a9, a1, v20);
  result = (int *)type metadata accessor for Chart.Entry(0);
  v22 = a9 + result[5];
  *(_QWORD *)v22 = a2;
  *(_BYTE *)(v22 + 8) = a3 & 1;
  v23 = a9 + result[6];
  *(_QWORD *)v23 = a4;
  *(_BYTE *)(v23 + 8) = a5 & 1;
  v24 = a9 + result[7];
  *(_QWORD *)v24 = a6;
  *(_BYTE *)(v24 + 8) = a7 & 1;
  v25 = a9 + result[8];
  *(_QWORD *)v25 = a8;
  *(_BYTE *)(v25 + 8) = a10 & 1;
  v26 = a9 + result[9];
  *(_QWORD *)v26 = a11;
  *(_BYTE *)(v26 + 8) = a12 & 1;
  return result;
}

uint64_t sub_1ABDB4298()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Chart.Entry(0) + 20));
}

uint64_t sub_1ABDB42C0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Chart.Entry(0) + 28));
}

uint64_t sub_1ABDB42E8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Chart.Entry(0) + 32));
}

uint64_t sub_1ABDB4310()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Chart.Entry(0) + 36));
}

uint64_t sub_1ABDB433C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABDB761C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ABDB4360(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1ABDB436C()
{
  sub_1ABD24628();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDB4394()
{
  sub_1ABD24628();
  return sub_1ABF32398();
}

uint64_t sub_1ABDB43BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v35 = a2;
  v3 = sub_1ABF30760();
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1ED34E280, (uint64_t (*)(void))sub_1ABD24628, (uint64_t)&type metadata for Chart.Entry.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v38 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - v7;
  v9 = (int *)type metadata accessor for Chart.Entry(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD24628();
  v40 = v8;
  v12 = v41;
  sub_1ABF3235C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v6;
  v14 = (uint64_t)v11;
  v15 = v36;
  v47 = 0;
  sub_1ABCFE1EC(&qword_1ED34CCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v16 = v37;
  sub_1ABF32110();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v39, v16);
  v46 = 1;
  v17 = sub_1ABF320A4();
  v18 = &v11[v9[5]];
  *(_QWORD *)v18 = v17;
  v18[8] = v19 & 1;
  v45 = 2;
  v20 = sub_1ABF320A4();
  v21 = &v11[v9[6]];
  *(_QWORD *)v21 = v20;
  v21[8] = v22 & 1;
  v44 = 3;
  v23 = sub_1ABF320A4();
  v24 = &v11[v9[7]];
  *(_QWORD *)v24 = v23;
  v24[8] = v25 & 1;
  v43 = 4;
  v26 = sub_1ABF320A4();
  v27 = &v11[v9[8]];
  *(_QWORD *)v27 = v26;
  v27[8] = v28 & 1;
  v42 = 5;
  v29 = sub_1ABF320A4();
  v31 = v30;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v40, v38);
  v32 = v14 + v9[9];
  *(_QWORD *)v32 = v29;
  *(_BYTE *)(v32 + 8) = v31 & 1;
  sub_1ABCFC790(v14, v35, type metadata accessor for Chart.Entry);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1ABCFC3BC(v14, type metadata accessor for Chart.Entry);
}

uint64_t sub_1ABDB4740@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABDB43BC(a1, a2);
}

uint64_t sub_1ABDB4758@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ABDB47AC()
{
  return 0x656D756C6F76;
}

uint64_t sub_1ABDB47C0()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABDB480C()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABDB4820()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABDB4868@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ABDB48B8()
{
  sub_1ABCF7DFC();
  return sub_1ABF319CC();
}

uint64_t sub_1ABDB4914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Chart(0) + 28);
  v4 = sub_1ABF3094C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1ABDB495C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for Chart(0) + 32);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1ABDB49A4()
{
  type metadata accessor for Chart(0);
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABDB49C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABDB7880(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABDB49EC()
{
  sub_1ABD147B8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDB4A14()
{
  sub_1ABD147B8();
  return sub_1ABF32398();
}

uint64_t sub_1ABDB4A3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int *v37;
  char v38;
  uint64_t v39;

  v26 = a2;
  v31 = sub_1ABF30760();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v27 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1ABF3094C();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCFC730();
  v34 = v5;
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1ED34E278, (uint64_t (*)(void))sub_1ABD147B8, (uint64_t)&type metadata for Chart.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v36 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - v9;
  v11 = type metadata accessor for Chart(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD147B8();
  v35 = v10;
  v14 = v37;
  sub_1ABF3235C();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15 = (uint64_t)v33;
  sub_1ABCF5A54(0, &qword_1ED34DF58, type metadata accessor for Chart.Entry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v38 = 0;
  sub_1ABD146A0(&qword_1ED34DF68, &qword_1ED34D9E8, (uint64_t)&unk_1ABF3A8F0, MEMORY[0x1E0DEAF40]);
  sub_1ABF32110();
  *(_QWORD *)v13 = v39;
  LOBYTE(v39) = 1;
  sub_1ABD14738(&qword_1ED34DEA8, &qword_1ED34CCC0, MEMORY[0x1E0CB08C0], MEMORY[0x1E0DEA4F0]);
  sub_1ABF32110();
  sub_1ABCFE2AC(v15, (uint64_t)&v13[*(int *)(v11 + 20)], (uint64_t (*)(_QWORD))sub_1ABCFC730);
  LOBYTE(v39) = 2;
  v16 = sub_1ABF320A4();
  v37 = (int *)v11;
  v17 = &v13[*(int *)(v11 + 24)];
  *(_QWORD *)v17 = v16;
  v17[8] = v18 & 1;
  LOBYTE(v39) = 3;
  sub_1ABCFE1EC(&qword_1ED34CCF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB14A0]);
  v19 = v28;
  v20 = v32;
  sub_1ABF32110();
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v13[v37[7]], v19, v20);
  LOBYTE(v39) = 4;
  sub_1ABCFE1EC(&qword_1ED34CCC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v21 = v27;
  v22 = (uint64_t)v13;
  v23 = v31;
  sub_1ABF32110();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v22 + v37[8], v21, v23);
  sub_1ABD04578(0, &qword_1ED34DF70, (uint64_t)&type metadata for Chart.Feature, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v38 = 5;
  sub_1ABD14624((unint64_t *)&unk_1ED34DF80, (uint64_t (*)(void))sub_1ABDB6A9C, MEMORY[0x1E0DEAF40]);
  sub_1ABF32110();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v35, v36);
  *(_QWORD *)(v22 + v37[9]) = v39;
  sub_1ABCFC790(v22, v26, type metadata accessor for Chart);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1ABCFC3BC(v22, type metadata accessor for Chart);
}

uint64_t sub_1ABDB4FFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABDB4A3C(a1, a2);
}

uint64_t sub_1ABDB5014(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1ABD00928(a1, a2, a3, (_QWORD *)*v3, &qword_1ED34E2E0, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEvent);
  *v3 = result;
  return result;
}

uint64_t sub_1ABDB5040(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB52C4(a1, a2, a3, *v3, &qword_1EEC42580, (uint64_t)&type metadata for FundHolding);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB506C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB52C4(a1, a2, a3, *v3, &qword_1EEC42578, (uint64_t)&type metadata for FundSector);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB5098(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB545C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB50B4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB55F4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB50D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1ABD00928(a1, a2, a3, (_QWORD *)*v3, &qword_1EEC42128, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity);
  *v3 = result;
  return result;
}

uint64_t sub_1ABDB50FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1ABDB5780(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1ABDB5118(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB5918(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB5134(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB5A90(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB5150(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1ABDB5C24(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1ABDB516C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB5E40(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB5188(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB5FD4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB51A4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB6150(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB51C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB62C0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB51DC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1ABD00928(a1, a2, a3, (_QWORD *)*v3, &qword_1ED34FFA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690]);
  *v3 = result;
  return result;
}

uint64_t sub_1ABDB5208(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1ABD00928(a1, a2, a3, (_QWORD *)*v3, &qword_1ED350D90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  *v3 = result;
  return result;
}

uint64_t sub_1ABDB5234(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB6430(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB5250(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1ABD00928(a1, a2, a3, (_QWORD *)*v3, &qword_1EEC42588, (uint64_t (*)(uint64_t))sub_1ABDB7B4C);
  *v3 = result;
  return result;
}

uint64_t sub_1ABDB527C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1ABD00928(a1, a2, a3, (_QWORD *)*v3, &qword_1ED34FFB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  *v3 = result;
  return result;
}

uint64_t sub_1ABDB52A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1ABDB65C8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1ABDB52C4(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1ABD04578(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 24);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[24 * v10])
      memmove(v14, v15, 24 * v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[24 * v10] || v14 >= &v15[24 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB545C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, &qword_1ED347148, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB55F4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, &qword_1ED34E328, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 48 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB5780(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABCF5A54(0, &qword_1ED34E348, (uint64_t (*)(uint64_t))sub_1ABDB7C38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1ABDB7C38();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB5918(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, &qword_1ED34E310, (uint64_t)&type metadata for NewsFeedFilterOptions.Option, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = v8 << 6;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB5A90(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, (unint64_t *)&unk_1ED34E2E8, (uint64_t)&type metadata for StockNewsFeed, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[160 * v8])
      memmove(v12, v13, 160 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[160 * v8] || v12 >= &v13[160 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB5C24(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1ABDB7BC4();
  sub_1ABCF4DA8(0, &qword_1EEC425A0, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90720]);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v15 - v13 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1ABCF4DA8(0, &qword_1EEC425A0, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90720]);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (char *)v14 + v19;
  v21 = (char *)a4 + v19;
  if ((a1 & 1) != 0)
  {
    if (v14 < a4 || v20 >= &v21[*(_QWORD *)(v18 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v22 = *(_QWORD *)(v18 + 72) * v8;
  v23 = &v20[v22];
  v24 = (unint64_t)&v21[v22];
  if (v21 >= v23 || (unint64_t)v20 >= v24)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_36:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB5E40(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, &qword_1ED34C588, (uint64_t)&type metadata for CurrencyConversion, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB5FD4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, &qword_1ED34C720, (uint64_t)&type metadata for WatchlistWidgetEntity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB6150(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, (unint64_t *)&unk_1ED34FFE0, MEMORY[0x1E0DEDBC8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB62C0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, &qword_1ED34E360, MEMORY[0x1E0DEDC60], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB6430(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, qword_1ED351138, (uint64_t)&type metadata for YahooMultiQuoteResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDB65C8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1ABD04578(0, &qword_1ED351130, (uint64_t)&type metadata for YahooQuoteDetailResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

BOOL sub_1ABDB6744(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  double *v6;
  char v7;
  double *v8;
  int v9;
  uint64_t v10;
  double *v11;
  char v12;
  double *v13;
  int v14;
  uint64_t v15;
  double *v16;
  char v17;
  double *v18;
  int v19;
  uint64_t v20;
  double *v21;
  char v22;
  double *v23;
  int v24;
  uint64_t v25;
  double *v26;
  char v27;
  double *v28;
  char v29;

  if ((sub_1ABF30718() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for Chart.Entry(0);
  v5 = v4[5];
  v6 = (double *)(a1 + v5);
  v7 = *(_BYTE *)(a1 + v5 + 8);
  v8 = (double *)(a2 + v5);
  v9 = *(unsigned __int8 *)(a2 + v5 + 8);
  if ((v7 & 1) != 0)
  {
    if (!v9)
      return 0;
  }
  else
  {
    if (*v6 != *v8)
      LOBYTE(v9) = 1;
    if ((v9 & 1) != 0)
      return 0;
  }
  v10 = v4[6];
  v11 = (double *)(a1 + v10);
  v12 = *(_BYTE *)(a1 + v10 + 8);
  v13 = (double *)(a2 + v10);
  v14 = *(unsigned __int8 *)(a2 + v10 + 8);
  if ((v12 & 1) != 0)
  {
    if (!v14)
      return 0;
  }
  else
  {
    if (*v11 != *v13)
      LOBYTE(v14) = 1;
    if ((v14 & 1) != 0)
      return 0;
  }
  v15 = v4[7];
  v16 = (double *)(a1 + v15);
  v17 = *(_BYTE *)(a1 + v15 + 8);
  v18 = (double *)(a2 + v15);
  v19 = *(unsigned __int8 *)(a2 + v15 + 8);
  if ((v17 & 1) != 0)
  {
    if (!v19)
      return 0;
  }
  else
  {
    if (*v16 != *v18)
      LOBYTE(v19) = 1;
    if ((v19 & 1) != 0)
      return 0;
  }
  v20 = v4[8];
  v21 = (double *)(a1 + v20);
  v22 = *(_BYTE *)(a1 + v20 + 8);
  v23 = (double *)(a2 + v20);
  v24 = *(unsigned __int8 *)(a2 + v20 + 8);
  if ((v22 & 1) != 0)
  {
    if (!v24)
      return 0;
  }
  else
  {
    if (*v21 != *v23)
      LOBYTE(v24) = 1;
    if ((v24 & 1) != 0)
      return 0;
  }
  v25 = v4[9];
  v26 = (double *)(a1 + v25);
  v27 = *(_BYTE *)(a1 + v25 + 8);
  v28 = (double *)(a2 + v25);
  v29 = *(_BYTE *)(a2 + v25 + 8);
  if ((v27 & 1) == 0)
  {
    if (*v26 != *v28)
      v29 = 1;
    return (v29 & 1) == 0;
  }
  return (v29 & 1) != 0;
}

BOOL sub_1ABDB6880(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t *v14;
  int *v15;
  char v16;
  uint64_t v17;
  double *v18;
  char v19;
  double *v20;
  int v21;
  uint64_t *v24;
  uint64_t v25;

  sub_1ABCFC730();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  if ((sub_1ABCFF84C(*a1, *a2) & 1) == 0)
    return 0;
  v25 = type metadata accessor for Chart(0);
  v10 = *(int *)(v25 + 20);
  v11 = (uint64_t)a1 + v10;
  v12 = (uint64_t)a2 + v10;
  sub_1ABF30760();
  v24 = a1;
  sub_1ABCFE1EC(&qword_1ED34CCB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v13 = sub_1ABF31720();
  sub_1ABCFC790(v11, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1ABCFC730);
  sub_1ABCFC790(v12, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1ABCFC730);
  if ((v13 & 1) == 0)
  {
    sub_1ABCFC3BC((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1ABCFC730);
    sub_1ABCFC3BC((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1ABCFC730);
    return 0;
  }
  v14 = v24;
  v15 = (int *)v25;
  v16 = sub_1ABF31720();
  sub_1ABCFC3BC((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1ABCFC730);
  sub_1ABCFC3BC((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1ABCFC730);
  if ((v16 & 1) != 0)
  {
    v17 = v15[6];
    v18 = (double *)((char *)v14 + v17);
    v19 = *((_BYTE *)v14 + v17 + 8);
    v20 = (double *)((char *)a2 + v17);
    v21 = *((unsigned __int8 *)a2 + v17 + 8);
    if ((v19 & 1) != 0)
    {
      if (!v21)
        return 0;
    }
    else
    {
      if (*v18 != *v20)
        LOBYTE(v21) = 1;
      if ((v21 & 1) != 0)
        return 0;
    }
    if ((MEMORY[0x1AF436B60]((char *)v14 + v15[7], (char *)a2 + v15[7]) & 1) != 0 && (sub_1ABF30718() & 1) != 0)
      return sub_1ABDDFD9C(*(uint64_t *)((char *)v14 + v15[9]), *(uint64_t *)((char *)a2 + v15[9]));
  }
  return 0;
}

unint64_t sub_1ABDB6A9C()
{
  unint64_t result;

  result = qword_1ED34DA18;
  if (!qword_1ED34DA18)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AA08, &type metadata for Chart.Feature);
    atomic_store(result, (unint64_t *)&qword_1ED34DA18);
  }
  return result;
}

unint64_t sub_1ABDB6AE4()
{
  unint64_t result;

  result = qword_1EEC42560;
  if (!qword_1EEC42560)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A968, &type metadata for Chart.Feature);
    atomic_store(result, (unint64_t *)&qword_1EEC42560);
  }
  return result;
}

char *sub_1ABDB6B28(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1ABF30760();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  sub_1ABCFC730();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v14[8];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v15;
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_1ABF3094C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1ABDB6C44(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1ABF30760();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  sub_1ABCFC730();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = &a1[v13];
  v17 = &a2[v13];
  v18 = sub_1ABF3094C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *sub_1ABDB6D3C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1ABF30760();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  sub_1ABCFC730();
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = &a1[v13];
  v17 = &a2[v13];
  v18 = sub_1ABF3094C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABDB6E44(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1ABCFC730();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_1ABF3094C();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = sub_1ABF30760();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

char *sub_1ABDB6F08(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1ABCFC730();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_1ABF3094C();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = sub_1ABF30760();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t *sub_1ABDB6FC8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = sub_1ABF30760();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = a3[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = *(_QWORD *)v22;
    v21[8] = v22[8];
    *(_QWORD *)v21 = v23;
  }
  return a1;
}

uint64_t sub_1ABDB70C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1ABDB70FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  v6 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 8) = *((_BYTE *)v21 + 8);
  *(_QWORD *)v20 = v22;
  return a1;
}

uint64_t sub_1ABDB71D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v6 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 8);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = v26;
  return a1;
}

uint64_t sub_1ABDB72AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  v6 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 8) = *((_BYTE *)v21 + 8);
  *(_QWORD *)v20 = v22;
  return a1;
}

uint64_t sub_1ABDB7380(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  v6 = sub_1ABF30760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a1 + v19;
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 8) = *((_BYTE *)v21 + 8);
  *(_QWORD *)v20 = v22;
  return a1;
}

uint64_t sub_1ABDB7454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1ABDB7490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Chart.Feature(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABDB7510 + 4 * byte_1ABF3A8DC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABDB7530 + 4 * byte_1ABF3A8E1[v4]))();
}

_BYTE *sub_1ABDB7510(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABDB7530(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDB7538(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDB7540(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDB7548(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDB7550(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Chart.Feature()
{
  return &type metadata for Chart.Feature;
}

ValueMetadata *type metadata accessor for Chart.CodingKeys()
{
  return &type metadata for Chart.CodingKeys;
}

ValueMetadata *type metadata accessor for Chart.Entry.CodingKeys()
{
  return &type metadata for Chart.Entry.CodingKeys;
}

unint64_t sub_1ABDB7590()
{
  unint64_t result;

  result = qword_1EEC42568;
  if (!qword_1EEC42568)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AC08, &type metadata for Chart.Entry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42568);
  }
  return result;
}

unint64_t sub_1ABDB75D8()
{
  unint64_t result;

  result = qword_1EEC42570;
  if (!qword_1EEC42570)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3ACC0, &type metadata for Chart.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42570);
  }
  return result;
}

uint64_t sub_1ABDB761C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x636E657265666572 && a2 == 0xED00006574614465;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1852141679 && a2 == 0xE400000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736F6C63 && a2 == 0xE500000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1751607656 && a2 == 0xE400000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7827308 && a2 == 0xE300000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D756C6F76 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1ABDB7880(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73656972746E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E615265746164 && a2 == 0xE900000000000065 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73756F6976657270 && a2 == 0xED000065736F6C43 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x695474656B72616DLL && a2 == 0xEE00656E6F5A656DLL || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001ABF55EC0 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void sub_1ABDB7B4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42590)
  {
    type metadata accessor for SymbolEntity();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34CB18, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    v0 = sub_1ABF2FCB0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42590);
  }
}

void sub_1ABDB7BC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42598)
  {
    sub_1ABCF4DA8(255, &qword_1EEC425A0, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90720]);
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42598);
  }
}

void sub_1ABDB7C38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE90)
  {
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE90);
  }
}

uint64_t sub_1ABDB7CA0(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v3 = v2;
  v6 = sub_1ABF31594();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1ABF315D0();
  v28 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[7];
  v47 = a1[6];
  v48 = v13;
  v49 = *((_QWORD *)a1 + 16);
  v14 = a1[3];
  v43 = a1[2];
  v44 = v14;
  v15 = a1[5];
  v45 = a1[4];
  v46 = v15;
  v16 = a1[1];
  v41 = *a1;
  v42 = v16;
  v17 = *(void **)(v2 + 24);
  v18 = swift_allocObject();
  v19 = a1[4];
  *(_OWORD *)(v18 + 104) = a1[5];
  v20 = a1[7];
  *(_OWORD *)(v18 + 120) = a1[6];
  *(_OWORD *)(v18 + 136) = v20;
  v21 = *a1;
  *(_OWORD *)(v18 + 40) = a1[1];
  v22 = a1[3];
  *(_OWORD *)(v18 + 56) = a1[2];
  *(_OWORD *)(v18 + 72) = v22;
  *(_OWORD *)(v18 + 88) = v19;
  *(_QWORD *)(v18 + 16) = v3;
  v23 = *((_QWORD *)a1 + 16);
  *(_OWORD *)(v18 + 24) = v21;
  *(_QWORD *)(v18 + 152) = v23;
  *(_QWORD *)(v18 + 160) = a2;
  *(_QWORD *)&v33 = sub_1ABDB9AA0;
  *((_QWORD *)&v33 + 1) = v18;
  *(_QWORD *)&v31 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v31 + 1) = 1107296256;
  *(_QWORD *)&v32 = sub_1ABD127EC;
  *((_QWORD *)&v32 + 1) = &block_descriptor_23;
  v24 = _Block_copy(&v31);
  v25 = v17;
  sub_1ABF2FF68();
  sub_1ABD97ECC((uint64_t)&v41);
  sub_1ABF315AC();
  v40 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v7, MEMORY[0x1E0DEF510]);
  sub_1ABD16D20(0, (unint64_t *)&unk_1ED34FC90, (void (*)(uint64_t))v7);
  sub_1ABD14288((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, (void (*)(uint64_t))v7);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v12, v9, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
  swift_release();
  v37 = v47;
  v38 = v48;
  v39 = v49;
  v33 = v43;
  v34 = v44;
  v35 = v45;
  v36 = v46;
  v31 = v41;
  v32 = v42;
  sub_1ABD04578(0, &qword_1EEC45230, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABD97ECC((uint64_t)&v41);
  return sub_1ABF311E0();
}

uint64_t sub_1ABDB7F7C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  unint64_t v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t ObjectType;
  unint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  unint64_t v72;
  id v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;

  v6 = *(_OWORD *)(a2 + 112);
  v89 = *(_OWORD *)(a2 + 96);
  v90 = v6;
  v91 = *(_QWORD *)(a2 + 128);
  v7 = *(_OWORD *)(a2 + 48);
  v85 = *(_OWORD *)(a2 + 32);
  v86 = v7;
  v8 = *(_OWORD *)(a2 + 80);
  v87 = *(_OWORD *)(a2 + 64);
  v88 = v8;
  v9 = *(_OWORD *)(a2 + 16);
  v10 = (uint64_t *)(a1 + 16);
  v83 = *(_OWORD *)a2;
  v84 = v9;
  swift_beginAccess();
  v54 = a1;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v56 = v10;
    v59 = a3;
    *(_QWORD *)&v74 = MEMORY[0x1E0DEE9D8];
    sub_1ABF2FF5C();
    sub_1ABD16414(0, v12, 0);
    v13 = v74;
    v14 = (uint64_t *)(v11 + 56);
    do
    {
      v16 = *(v14 - 1);
      v15 = *v14;
      *(_QWORD *)&v74 = v13;
      v18 = *(_QWORD *)(v13 + 16);
      v17 = *(_QWORD *)(v13 + 24);
      sub_1ABF2FF5C();
      if (v18 >= v17 >> 1)
      {
        sub_1ABD16414(v17 > 1, v18 + 1, 1);
        v13 = v74;
      }
      *(_QWORD *)(v13 + 16) = v18 + 1;
      v19 = v13 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v16;
      *(_QWORD *)(v19 + 40) = v15;
      v14 += 17;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v10 = v56;
    v11 = *v56;
    a3 = v59;
  }
  sub_1ABF2FF5C();
  v20 = sub_1ABF12BDC(a2, v11);
  v22 = v21;
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
    swift_beginAccess();
    v23 = v20;
    v20 = (unint64_t)v10;
    sub_1ABF12ECC(v23, (uint64_t)&v61);
    swift_endAccess();
    v80 = v67;
    v81 = v68;
    v82 = v69;
    v76 = v63;
    v77 = v64;
    v78 = v65;
    v79 = v66;
    v74 = v61;
    v75 = v62;
    sub_1ABD97F60((uint64_t)&v74);
  }
  if ((a3 & 0x8000000000000000) != 0)
    goto LABEL_32;
  swift_beginAccess();
  if (*(_QWORD *)(*v10 + 16) < a3)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v80 = v89;
  v81 = v90;
  v82 = v91;
  v76 = v85;
  v77 = v86;
  v78 = v87;
  v79 = v88;
  v74 = v83;
  v75 = v84;
  sub_1ABD97ECC(a2);
  sub_1ABF209B4(a3, a3, (uint64_t)&v74);
  swift_endAccess();
  v24 = *v10;
  v25 = *(_QWORD *)(*v10 + 16);
  if (v25)
  {
    *(_QWORD *)&v61 = MEMORY[0x1E0DEE9D8];
    sub_1ABF2FF5C();
    sub_1ABD16414(0, v25, 0);
    v26 = v61;
    v27 = (uint64_t *)(v24 + 56);
    do
    {
      v29 = *(v27 - 1);
      v28 = *v27;
      *(_QWORD *)&v61 = v26;
      v31 = *(_QWORD *)(v26 + 16);
      v30 = *(_QWORD *)(v26 + 24);
      sub_1ABF2FF5C();
      if (v31 >= v30 >> 1)
      {
        sub_1ABD16414(v30 > 1, v31 + 1, 1);
        v26 = v61;
      }
      *(_QWORD *)(v26 + 16) = v31 + 1;
      v32 = v26 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v29;
      *(_QWORD *)(v32 + 40) = v28;
      v27 += 17;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v20 = *(_QWORD *)(v54 + 32);
  if (v20 >> 62)
  {
LABEL_34:
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    v57 = result;
    if (result)
      goto LABEL_19;
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v33 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  v57 = v33;
  if (!v33)
    goto LABEL_35;
LABEL_19:
  if (v57 >= 1)
  {
    v35 = 0;
    v55 = v20 & 0xC000000000000001;
    v53 = v20;
    while (1)
    {
      if (v55)
      {
        v36 = MEMORY[0x1AF4380CC](v35, v20);
      }
      else
      {
        v36 = *(_QWORD *)(v20 + 8 * v35 + 32);
        sub_1ABF2FF68();
      }
      if (MEMORY[0x1AF4390D4](v36 + 16))
      {
        v60 = *(_QWORD *)(v36 + 24);
        ObjectType = swift_getObjectType();
        *((_QWORD *)&v62 + 1) = type metadata accessor for StubWatchlistService();
        *(_QWORD *)&v63 = &off_1E5AEA938;
        *(_QWORD *)&v61 = v54;
        v37 = objc_allocWithZone((Class)SCWWatchlistDiff);
        sub_1ABF2FF68();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        v38 = (void *)sub_1ABF319FC();
        swift_bridgeObjectRelease();
        v39 = (void *)sub_1ABF319FC();
        swift_bridgeObjectRelease();
        v40 = objc_msgSend(v37, sel_initWithOldSymbols_newSymbols_updatedName_updatedSortState_updatedSortOrderState_updatedDisplayState_, v38, v39, 0, 0, 0, 0);

        v71 = 1953719636;
        v72 = 0xE400000000000000;
        v73 = v40;
        sub_1ABDB9AB0();
        v41 = (_QWORD *)sub_1ABF32014();
        v42 = v71;
        v43 = v72;
        v44 = v73;
        v45 = v40;
        sub_1ABF2FF5C();
        v46 = v44;
        v20 = (unint64_t)v41;
        v47 = sub_1ABD00F9C(v42, v43);
        if ((v48 & 1) != 0)
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
        v41[(v47 >> 6) + 8] |= 1 << v47;
        v49 = (uint64_t *)(v41[6] + 16 * v47);
        *v49 = v42;
        v49[1] = v43;
        *(_QWORD *)(v41[7] + 8 * v47) = v46;
        v50 = v41[2];
        v51 = __OFADD__(v50, 1);
        v52 = v50 + 1;
        if (v51)
          goto LABEL_31;
        v41[2] = v52;
        sub_1ABDB9B24();
        swift_arrayDestroy();

        v70 = v41;
        (*(void (**)(__int128 *, _QWORD **, uint64_t))(v60 + 8))(&v61, &v70, ObjectType);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
        swift_unknownObjectRelease();
        swift_release();
        v20 = v53;
      }
      else
      {
        swift_release();
      }
      if (v57 == ++v35)
        goto LABEL_35;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDB853C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t aBlock;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t (*v27)();
  _QWORD *v28;

  v3 = v2;
  v19 = a1;
  v6 = sub_1ABF31594();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1ABF315D0();
  v18 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v2 + 24);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v3;
  v13[3] = a1;
  v13[4] = a2;
  v27 = sub_1ABDB9BC4;
  v28 = v13;
  aBlock = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1ABD127EC;
  v26 = &block_descriptor_29;
  v14 = _Block_copy(&aBlock);
  v15 = v12;
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF315AC();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v7, MEMORY[0x1E0DEF510]);
  sub_1ABD16D20(0, (unint64_t *)&unk_1ED34FC90, (void (*)(uint64_t))v7);
  sub_1ABD14288((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, (void (*)(uint64_t))v7);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v11, v9, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v20);
  swift_release();
  aBlock = v19;
  v24 = a2;
  sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABDB87A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *i;
  BOOL v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  unint64_t v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t ObjectType;
  uint64_t *v56;
  uint64_t v57;
  _OWORD v58[8];
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  id v72;

  v6 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  v52 = a1;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
    return swift_bridgeObjectRelease();
  v56 = v6;
  *(_QWORD *)&v60 = MEMORY[0x1E0DEE9D8];
  sub_1ABF2FF5C();
  sub_1ABD16414(0, v8, 0);
  v9 = v60;
  v10 = (uint64_t *)(v7 + 56);
  do
  {
    v11 = *(v10 - 1);
    v12 = *v10;
    *(_QWORD *)&v60 = v9;
    v14 = *(_QWORD *)(v9 + 16);
    v13 = *(_QWORD *)(v9 + 24);
    sub_1ABF2FF5C();
    if (v14 >= v13 >> 1)
    {
      sub_1ABD16414(v13 > 1, v14 + 1, 1);
      v9 = v60;
    }
    *(_QWORD *)(v9 + 16) = v14 + 1;
    v15 = v9 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v11;
    *(_QWORD *)(v15 + 40) = v12;
    v10 += 17;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(*v56 + 16);
  if (!v16)
    return swift_bridgeObjectRelease();
  for (i = (_QWORD *)(*v56 + 56); ; i += 17)
  {
    v18 = *(i - 1) == a2 && *i == a3;
    if (v18 || (sub_1ABF3223C() & 1) != 0)
      break;
    if (!--v16)
      return swift_bridgeObjectRelease();
  }
  v19 = sub_1ABDB9BD0(*v56, a2, a3);
  if ((v20 & 1) == 0)
  {
    v21 = v19;
    swift_beginAccess();
    sub_1ABF12ECC(v21, (uint64_t)v58);
    swift_endAccess();
    v66 = v58[6];
    v67 = v58[7];
    v68 = v59;
    v62 = v58[2];
    v63 = v58[3];
    v64 = v58[4];
    v65 = v58[5];
    v60 = v58[0];
    v61 = v58[1];
    sub_1ABD97F60((uint64_t)&v60);
  }
  v22 = *v56;
  v23 = *(_QWORD *)(*v56 + 16);
  if (v23)
  {
    *(_QWORD *)&v60 = MEMORY[0x1E0DEE9D8];
    sub_1ABF2FF5C();
    sub_1ABD16414(0, v23, 0);
    v24 = v60;
    v25 = (uint64_t *)(v22 + 56);
    do
    {
      v27 = *(v25 - 1);
      v26 = *v25;
      *(_QWORD *)&v60 = v24;
      v29 = *(_QWORD *)(v24 + 16);
      v28 = *(_QWORD *)(v24 + 24);
      sub_1ABF2FF5C();
      if (v29 >= v28 >> 1)
      {
        sub_1ABD16414(v28 > 1, v29 + 1, 1);
        v24 = v60;
      }
      *(_QWORD *)(v24 + 16) = v29 + 1;
      v30 = v24 + 16 * v29;
      *(_QWORD *)(v30 + 32) = v27;
      *(_QWORD *)(v30 + 40) = v26;
      v25 += 17;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v31 = *(_QWORD *)(v52 + 32);
  if (v31 >> 62)
    goto LABEL_38;
  v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  v54 = v32;
  if (!v32)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_25:
  if (v54 >= 1)
  {
    v34 = 0;
    v53 = v31 & 0xC000000000000001;
    v51 = (_QWORD *)v31;
    while (1)
    {
      if (v53)
      {
        v35 = MEMORY[0x1AF4380CC](v34, v31);
      }
      else
      {
        v35 = *(_QWORD *)(v31 + 8 * v34 + 32);
        sub_1ABF2FF68();
      }
      if (MEMORY[0x1AF4390D4](v35 + 16))
      {
        v57 = *(_QWORD *)(v35 + 24);
        ObjectType = swift_getObjectType();
        *((_QWORD *)&v61 + 1) = type metadata accessor for StubWatchlistService();
        *(_QWORD *)&v62 = &off_1E5AEA938;
        *(_QWORD *)&v60 = v52;
        v36 = objc_allocWithZone((Class)SCWWatchlistDiff);
        sub_1ABF2FF68();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        v37 = (void *)sub_1ABF319FC();
        swift_bridgeObjectRelease();
        v38 = (void *)sub_1ABF319FC();
        swift_bridgeObjectRelease();
        v39 = objc_msgSend(v36, sel_initWithOldSymbols_newSymbols_updatedName_updatedSortState_updatedSortOrderState_updatedDisplayState_, v37, v38, 0, 0, 0, 0);

        v70 = 1953719636;
        v71 = 0xE400000000000000;
        v72 = v39;
        sub_1ABDB9AB0();
        v40 = (_QWORD *)sub_1ABF32014();
        v42 = v70;
        v41 = v71;
        v43 = v72;
        sub_1ABF2FF5C();
        v44 = v43;
        v31 = (unint64_t)v40;
        v45 = sub_1ABD00F9C(v42, v41);
        if ((v46 & 1) != 0)
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          sub_1ABF2FF5C();
          result = sub_1ABF31FE4();
          v54 = result;
          if (!result)
            goto LABEL_39;
          goto LABEL_25;
        }
        v40[(v45 >> 6) + 8] |= 1 << v45;
        v47 = (uint64_t *)(v40[6] + 16 * v45);
        *v47 = v42;
        v47[1] = v41;
        *(_QWORD *)(v40[7] + 8 * v45) = v44;
        v48 = v40[2];
        v49 = __OFADD__(v48, 1);
        v50 = v48 + 1;
        if (v49)
          goto LABEL_37;
        v40[2] = v50;
        sub_1ABDB9B24();
        swift_arrayDestroy();
        v69 = v40;
        (*(void (**)(__int128 *, _QWORD **, uint64_t))(v57 + 8))(&v60, &v69, ObjectType);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
        swift_unknownObjectRelease();
        swift_release();
        v31 = (unint64_t)v51;
      }
      else
      {
        swift_release();
      }
      if (v54 == ++v34)
        goto LABEL_39;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDB8CDC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  void *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v2 = v1;
  v4 = sub_1ABF31594();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v27 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF315D0();
  v25 = *(_QWORD *)(v8 - 8);
  v26 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[7];
  v44 = a1[6];
  v45 = v11;
  v46 = *((_QWORD *)a1 + 16);
  v12 = a1[3];
  v40 = a1[2];
  v41 = v12;
  v13 = a1[5];
  v42 = a1[4];
  v43 = v13;
  v14 = a1[1];
  v38 = *a1;
  v39 = v14;
  v15 = *(void **)(v1 + 24);
  v16 = swift_allocObject();
  v17 = a1[4];
  *(_OWORD *)(v16 + 104) = a1[5];
  v18 = a1[7];
  *(_OWORD *)(v16 + 120) = a1[6];
  *(_OWORD *)(v16 + 136) = v18;
  v19 = *a1;
  *(_OWORD *)(v16 + 40) = a1[1];
  v20 = a1[3];
  *(_OWORD *)(v16 + 56) = a1[2];
  *(_OWORD *)(v16 + 72) = v20;
  *(_OWORD *)(v16 + 88) = v17;
  *(_QWORD *)(v16 + 16) = v2;
  *(_QWORD *)(v16 + 152) = *((_QWORD *)a1 + 16);
  *(_OWORD *)(v16 + 24) = v19;
  *(_QWORD *)&v30 = sub_1ABDB9CD8;
  *((_QWORD *)&v30 + 1) = v16;
  *(_QWORD *)&v28 = MEMORY[0x1E0C809B0];
  *((_QWORD *)&v28 + 1) = 1107296256;
  *(_QWORD *)&v29 = sub_1ABD127EC;
  *((_QWORD *)&v29 + 1) = &block_descriptor_35;
  v21 = _Block_copy(&v28);
  v22 = v15;
  sub_1ABF2FF68();
  sub_1ABD97ECC((uint64_t)&v38);
  sub_1ABF315AC();
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v5, MEMORY[0x1E0DEF510]);
  sub_1ABD16D20(0, (unint64_t *)&unk_1ED34FC90, (void (*)(uint64_t))v5);
  sub_1ABD14288((unint64_t *)&qword_1ED34FCA0, (unint64_t *)&unk_1ED34FC90, (void (*)(uint64_t))v5);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v10, v7, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v26);
  swift_release();
  v34 = v44;
  v35 = v45;
  v36 = v46;
  v30 = v40;
  v31 = v41;
  v32 = v42;
  v33 = v43;
  v28 = v38;
  v29 = v39;
  sub_1ABD04578(0, &qword_1EEC45230, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABD97ECC((uint64_t)&v38);
  return sub_1ABF311E0();
}

uint64_t sub_1ABDB8FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _QWORD *v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  void *v46;
  id v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  id v63;
  _QWORD v64[5];

  v4 = a1 + 16;
  swift_beginAccess();
  v55 = a1;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v58 = v4;
    v64[0] = MEMORY[0x1E0DEE9D8];
    sub_1ABF2FF5C();
    sub_1ABD16414(0, v6, 0);
    v7 = v64[0];
    v8 = (uint64_t *)(v5 + 56);
    do
    {
      v10 = *(v8 - 1);
      v9 = *v8;
      v64[0] = v7;
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      sub_1ABF2FF5C();
      if (v12 >= v11 >> 1)
      {
        sub_1ABD16414(v11 > 1, v12 + 1, 1);
        v7 = v64[0];
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      v13 = v7 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v10;
      *(_QWORD *)(v13 + 40) = v9;
      v8 += 17;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v4 = v58;
  }
  swift_beginAccess();
  v14 = *(_QWORD **)v4;
  sub_1ABD97ECC(a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v4 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_31;
  while (1)
  {
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1ABD32E4C((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)v4 = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[17 * v17];
    *((_OWORD *)v18 + 2) = *(_OWORD *)a2;
    v19 = *(_OWORD *)(a2 + 16);
    v20 = *(_OWORD *)(a2 + 32);
    v21 = *(_OWORD *)(a2 + 64);
    *((_OWORD *)v18 + 5) = *(_OWORD *)(a2 + 48);
    *((_OWORD *)v18 + 6) = v21;
    *((_OWORD *)v18 + 3) = v19;
    *((_OWORD *)v18 + 4) = v20;
    v22 = *(_OWORD *)(a2 + 80);
    v23 = *(_OWORD *)(a2 + 96);
    v24 = *(_OWORD *)(a2 + 112);
    v18[20] = *(_QWORD *)(a2 + 128);
    *((_OWORD *)v18 + 8) = v23;
    *((_OWORD *)v18 + 9) = v24;
    *((_OWORD *)v18 + 7) = v22;
    v25 = *(_QWORD **)v4;
    swift_endAccess();
    v26 = v25[2];
    v4 = MEMORY[0x1E0DEE9D8];
    if (v26)
    {
      v64[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABD16414(0, v26, 0);
      v4 = v64[0];
      v27 = v25 + 7;
      do
      {
        v29 = *(v27 - 1);
        v28 = *v27;
        v64[0] = v4;
        v31 = *(_QWORD *)(v4 + 16);
        v30 = *(_QWORD *)(v4 + 24);
        sub_1ABF2FF5C();
        if (v31 >= v30 >> 1)
        {
          sub_1ABD16414(v30 > 1, v31 + 1, 1);
          v4 = v64[0];
        }
        *(_QWORD *)(v4 + 16) = v31 + 1;
        v32 = v4 + 16 * v31;
        *(_QWORD *)(v32 + 32) = v29;
        *(_QWORD *)(v32 + 40) = v28;
        v27 += 17;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v33 = *(_QWORD *)(v55 + 32);
    if (v33 >> 62)
    {
      sub_1ABF2FF5C();
      result = sub_1ABF31FE4();
      v57 = result;
      if (!result)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = sub_1ABF2FF5C();
      v57 = v34;
      if (!v34)
        goto LABEL_33;
    }
    if (v57 < 1)
      break;
    v36 = 0;
    v56 = v33 & 0xC000000000000001;
    v54 = v33;
    while (1)
    {
      if (v56)
      {
        v37 = MEMORY[0x1AF4380CC](v36, v33);
      }
      else
      {
        v37 = *(_QWORD *)(v33 + 8 * v36 + 32);
        sub_1ABF2FF68();
      }
      v38 = MEMORY[0x1AF4390D4](v37 + 16);
      if (!v38)
      {
        swift_release();
        goto LABEL_21;
      }
      v14 = (_QWORD *)v38;
      v39 = *(_QWORD *)(v37 + 24);
      ObjectType = swift_getObjectType();
      v64[3] = type metadata accessor for StubWatchlistService();
      v64[4] = &off_1E5AEA938;
      v64[0] = v55;
      v40 = objc_allocWithZone((Class)SCWWatchlistDiff);
      sub_1ABF2FF68();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v41 = (void *)sub_1ABF319FC();
      swift_bridgeObjectRelease();
      v42 = (void *)sub_1ABF319FC();
      swift_bridgeObjectRelease();
      v43 = objc_msgSend(v40, sel_initWithOldSymbols_newSymbols_updatedName_updatedSortState_updatedSortOrderState_updatedDisplayState_, v41, v42, 0, 0, 0, 0);

      v61 = 1953719636;
      v62 = 0xE400000000000000;
      v63 = v43;
      sub_1ABDB9AB0();
      v44 = (_QWORD *)sub_1ABF32014();
      a2 = v61;
      v45 = v62;
      v46 = v63;
      sub_1ABF2FF5C();
      v47 = v46;
      v48 = sub_1ABD00F9C(a2, v45);
      if ((v49 & 1) != 0)
        break;
      v44[(v48 >> 6) + 8] |= 1 << v48;
      v50 = (uint64_t *)(v44[6] + 16 * v48);
      *v50 = a2;
      v50[1] = v45;
      *(_QWORD *)(v44[7] + 8 * v48) = v47;
      v51 = v44[2];
      v52 = __OFADD__(v51, 1);
      v53 = v51 + 1;
      if (v52)
        goto LABEL_30;
      v44[2] = v53;
      sub_1ABDB9B24();
      swift_arrayDestroy();
      v60 = v44;
      (*(void (**)(_QWORD *, _QWORD **, uint64_t, uint64_t))(v39 + 8))(v64, &v60, ObjectType, v39);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
      swift_unknownObjectRelease();
      swift_release();
      v33 = v54;
LABEL_21:
      if (v57 == ++v36)
        goto LABEL_33;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    v14 = sub_1ABD32E4C(0, v14[2] + 1, 1, v14);
    *(_QWORD *)v4 = v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDB94EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABDB9520(__int128 *a1)
{
  return sub_1ABDB8CDC(a1);
}

uint64_t sub_1ABDB9540(uint64_t a1, uint64_t a2)
{
  return sub_1ABDB853C(a1, a2);
}

uint64_t sub_1ABDB9560(__int128 *a1, uint64_t a2)
{
  return sub_1ABDB7CA0(a1, a2);
}

uint64_t sub_1ABDB9580()
{
  sub_1ABD04518(0, (unint64_t *)&qword_1ED34DD60, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968]);
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

void sub_1ABDB95E8()
{
  sub_1ABF31FCC();
  __break(1u);
}

uint64_t sub_1ABDB9640(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD8A848(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(v3 + 32) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDB96D4()
{
  sub_1ABF317A4();
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABDB9768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];
  __int16 v13;

  v4 = sub_1ABF30790();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF2FF5C();
  sub_1ABF2FBD8();
  v8 = sub_1ABF30778();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12[0] = a1;
  v12[1] = a2;
  v12[2] = MEMORY[0x1E0DEE9D8];
  v12[3] = v8;
  v12[4] = v10;
  v13 = 160;
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABDB9864()
{
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABDB9900()
{
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34DD80, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABDB9950()
{
  sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABDB99B8(uint64_t a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[8];
  uint64_t v7;

  v1 = *(_OWORD *)(a1 + 112);
  v6[6] = *(_OWORD *)(a1 + 96);
  v6[7] = v1;
  v2 = *(_OWORD *)(a1 + 48);
  v6[2] = *(_OWORD *)(a1 + 32);
  v6[3] = v2;
  v3 = *(_OWORD *)(a1 + 80);
  v6[4] = *(_OWORD *)(a1 + 64);
  v6[5] = v3;
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = *(_QWORD *)(a1 + 128);
  sub_1ABD04578(0, &qword_1EEC45230, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABD97ECC((uint64_t)v6);
  return sub_1ABF311E0();
}

uint64_t sub_1ABDB9A6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABDB9A98()
{
  return objectdestroy_19Tm();
}

uint64_t sub_1ABDB9AA0()
{
  uint64_t v0;

  return sub_1ABDB7F7C(*(_QWORD *)(v0 + 16), v0 + 24, *(_QWORD *)(v0 + 160));
}

void sub_1ABDB9AB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC425A8)
  {
    sub_1ABCF7BCC(255, (unint64_t *)&unk_1ED34CAA0);
    v0 = sub_1ABF32020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC425A8);
  }
}

void sub_1ABDB9B24()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEC425B0)
  {
    sub_1ABCF7BCC(255, (unint64_t *)&unk_1ED34CAA0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEC425B0);
  }
}

uint64_t sub_1ABDB9B98()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABDB9BC4()
{
  uint64_t *v0;

  return sub_1ABDB87A4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1ABDB9BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *i;
  BOOL v8;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  v6 = 0;
  for (i = (_QWORD *)(a1 + 56); ; i += 17)
  {
    v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (sub_1ABF3223C() & 1) != 0)
      break;
    if (v3 == ++v6)
      return 0;
  }
  return v6;
}

uint64_t sub_1ABDB9C60()
{
  return objectdestroy_19Tm();
}

uint64_t objectdestroy_19Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABDB9CD8()
{
  uint64_t v0;

  return sub_1ABDB8FB4(*(_QWORD *)(v0 + 16), v0 + 24);
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ArticleScore(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 120))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 56);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleScore(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 120) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleScore()
{
  return &type metadata for ArticleScore;
}

uint64_t sub_1ABDB9E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  NSArray *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  void *v13;
  id v14;
  id v15;
  uint64_t result;
  uint64_t v17;

  v0 = sub_1ABF305D4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v17 - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v17 - v8;
  v10 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  v11 = sub_1ABF31A08();

  if (*(_QWORD *)(v11 + 16))
  {
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    sub_1ABF30EB0();
    swift_bridgeObjectRelease();
    if (qword_1ED350AA0 != -1)
      swift_once();
    sub_1ABCF5804((uint64_t)v9);
    sub_1ABF3055C();
    sub_1ABF30EA4();
    v12 = *(void (**)(char *, uint64_t))(v1 + 8);
    v12(v7, v0);
    sub_1ABF3055C();
    sub_1ABF30EA4();
    v12(v7, v0);
    if (qword_1ED346C88 != -1)
      swift_once();
    sub_1ABCF5804((uint64_t)v7);
    sub_1ABF3055C();
    sub_1ABF30EA4();
    v12(v4, v0);
    v13 = (void *)objc_opt_self();
    v14 = objc_msgSend(v13, sel_standardUserDefaults);
    sub_1ABF30E98();

    v15 = objc_msgSend(v13, sel_standardUserDefaults);
    sub_1ABF30E98();

    v12(v7, v0);
    return ((uint64_t (*)(char *, uint64_t))v12)(v9, v0);
  }
  else
  {
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDBA114@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  v4 = 8;
  if (v2 < 8)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t sub_1ABDBA16C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABDBA19C + 4 * byte_1ABF3AE20[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1ABDBA19C()
{
  return 0x79636E6572727563;
}

uint64_t sub_1ABDBA1B4()
{
  return 0x75636F7470797263;
}

uint64_t sub_1ABDBA1D8()
{
  return 0x797469757165;
}

uint64_t sub_1ABDBA1EC()
{
  return 6714469;
}

uint64_t sub_1ABDBA1FC()
{
  return 0x73657275747566;
}

uint64_t sub_1ABDBA210()
{
  return 0x7865646E69;
}

uint64_t sub_1ABDBA224()
{
  return 0x75466C617574756DLL;
}

unint64_t sub_1ABDBA244()
{
  unint64_t result;

  result = qword_1EEC425B8;
  if (!qword_1EEC425B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AF04, &type metadata for StockType);
    atomic_store(result, (unint64_t *)&qword_1EEC425B8);
  }
  return result;
}

void sub_1ABDBA288()
{
  char *v0;

  sub_1ABF109D8(0, *v0);
}

void sub_1ABDBA294(uint64_t a1)
{
  char *v1;

  sub_1ABD98D20(a1, *v1);
}

void sub_1ABDBA29C(uint64_t a1)
{
  char *v1;

  sub_1ABF109D8(a1, *v1);
}

uint64_t sub_1ABDBA2A4@<X0>(char *a1@<X8>)
{
  return sub_1ABDBA114(a1);
}

uint64_t sub_1ABDBA2B0()
{
  sub_1ABCF7D6C();
  return sub_1ABF319CC();
}

uint64_t storeEnumTagSinglePayload for StockType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1ABDBA358 + 4 * byte_1ABF3AE35[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1ABDBA38C + 4 * byte_1ABF3AE30[v4]))();
}

uint64_t sub_1ABDBA38C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDBA394(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDBA39CLL);
  return result;
}

uint64_t sub_1ABDBA3A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDBA3B0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1ABDBA3B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDBA3BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDBA3C8()
{
  return sub_1ABF2FDB8();
}

uint64_t sub_1ABDBA3E8()
{
  return sub_1ABF2FDB8();
}

uint64_t sub_1ABDBA408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC425C0);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC425C0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABDBA57C@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC40F20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1EEC425C0, a1);
}

uint64_t sub_1ABDBA5A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABD00308(0, &qword_1ED34CAE0, (void (*)(uint64_t))MEMORY[0x1E0CAF9F8]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v12[0] = sub_1ABF30484();
  v3 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF2FE54();
  __swift_allocate_value_buffer(v10, qword_1EEC425D8);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC425D8);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v12[0]);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1ABF2FE60();
}

uint64_t sub_1ABDBA7C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC40F28, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1EEC425D8, a1);
}

uint64_t sub_1ABDBA7E8()
{
  return 1;
}

uint64_t sub_1ABDBA7F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0C919C0];
  v3 = sub_1ABF30088();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1ABDBA834()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABCF4DA8(0, &qword_1EEC425F0, (uint64_t (*)(void))sub_1ABDBAA04, (uint64_t)&type metadata for DeleteSymbolFromWatchlistIntent, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v0);
  sub_1ABCF4DA8(0, &qword_1EEC425F8, (uint64_t (*)(void))sub_1ABDBAA04, (uint64_t)&type metadata for DeleteSymbolFromWatchlistIntent, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABDBAA04();
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABDBAADC();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABDBAC44();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  return sub_1ABF2FF74();
}

unint64_t sub_1ABDBAA04()
{
  unint64_t result;

  result = qword_1ED3471F8;
  if (!qword_1ED3471F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3AFAC, &type metadata for DeleteSymbolFromWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3471F8);
  }
  return result;
}

uint64_t sub_1ABDBAA48()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABDBAA68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FDD0();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

void sub_1ABDBAADC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42600)
  {
    sub_1ABDBAB38();
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42600);
  }
}

void sub_1ABDBAB38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED346768)
  {
    type metadata accessor for SymbolEntity();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34CB18, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    v0 = sub_1ABF2FE24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED346768);
  }
}

uint64_t sub_1ABDBABB0()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABDBABD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FDD0();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

void sub_1ABDBAC44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42608)
  {
    sub_1ABCF4DA8(255, &qword_1ED347078, (uint64_t (*)(void))sub_1ABD67FB8, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42608);
  }
}

uint64_t sub_1ABDBACC0()
{
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABDBAD20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  sub_1ABDBAE80(a1, (uint64_t)&v9 - v6);
  sub_1ABDBAE80((uint64_t)v7, (uint64_t)v4);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  sub_1ABD64AD4((uint64_t)v7);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABDBAE04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for SymbolEntity();
  MEMORY[0x1E0C80A78](v2);
  sub_1ABDBAE80(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1ABF2FDC4();
  return sub_1ABD64AD4(a1);
}

uint64_t sub_1ABDBAE80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SymbolEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1ABDBAEC4(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

double sub_1ABDBAF0C@<D0>(uint64_t a1@<X8>)
{
  double result;
  uint64_t v3;
  __int128 v4;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)a1 = v3;
  result = *(double *)&v4;
  *(_OWORD *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1ABDBAF88()
{
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABDBB010()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABDBB04C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABDBB094()
{
  uint64_t v1;

  sub_1ABF2FBF0();
  return v1;
}

double sub_1ABDBB0C4@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1ABDBB138()
{
  swift_unknownObjectRetain();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBFC();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABDBB1B0()
{
  swift_unknownObjectRetain();
  sub_1ABF2FBFC();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1ABDBB1F0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FBE4();
  return sub_1ABD6817C;
}

uint64_t sub_1ABDBB238()
{
  return sub_1ABF2FC08();
}

uint64_t sub_1ABDBB258@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t);
  void (*v35)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t result;
  _QWORD *v38;
  _BYTE v39[4];
  unsigned int v40;
  _BYTE *v41;
  void (*v42)(_BYTE *, uint64_t, uint64_t);
  uint64_t v43;
  unsigned int v44;
  void (*v45)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  v52 = a1;
  v56 = sub_1ABF2FFC8();
  v51 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v55 = &v39[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABD00308(0, &qword_1ED34CAD0, (void (*)(uint64_t))MEMORY[0x1E0C907D0]);
  MEMORY[0x1E0C80A78](v2);
  v54 = &v39[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v46 = &v39[-v5];
  sub_1ABD00308(0, &qword_1ED3467B0, (void (*)(uint64_t))type metadata accessor for SymbolEntity);
  MEMORY[0x1E0C80A78](v6);
  v53 = &v39[-v7];
  sub_1ABD00308(0, &qword_1ED34CAE0, (void (*)(uint64_t))MEMORY[0x1E0CAF9F8]);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v39[-v9];
  v11 = sub_1ABF30484();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  MEMORY[0x1E0C80A78](v11);
  v15 = &v39[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1ABF3049C();
  v19 = *(_QWORD *)(v18 - 8);
  v50 = v18;
  MEMORY[0x1E0C80A78](v18);
  v41 = &v39[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABDBAB38();
  v47 = v21;
  sub_1ABF31738();
  sub_1ABF30844();
  v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 104);
  v44 = *MEMORY[0x1E0CAF9B8];
  v22 = v44;
  v43 = v13;
  v23(v15, v44, v13);
  v42 = v23;
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v23(v15, v22, v13);
  v24 = v10;
  sub_1ABF304A8();
  v49 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v49(v10, 0, 1, v18);
  v25 = type metadata accessor for SymbolEntity();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v53, 1, 1, v25);
  v26 = sub_1ABF2FCD4();
  v27 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v45 = v27;
  v28 = v46;
  v27(v46, 1, 1, v26);
  v27(v54, 1, 1, v26);
  sub_1ABDBB94C(0, (unint64_t *)&qword_1ED34C7B8, (unint64_t *)&qword_1ED350780);
  v48 = sub_1ABF2FC44();
  v57 = 0u;
  v58 = 0u;
  v59 = 0;
  sub_1ABF2FC38();
  v29 = sub_1ABF2FC14();
  sub_1ABCF4DA8(0, &qword_1EEC42610, (uint64_t (*)(void))sub_1ABDBAA04, (uint64_t)&type metadata for DeleteSymbolFromWatchlistIntent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C918F0]);
  swift_getKeyPath();
  v30 = sub_1ABF3004C();
  *(_QWORD *)&v57 = v29;
  *((_QWORD *)&v57 + 1) = v30;
  v40 = *MEMORY[0x1E0C91738];
  v51 = *(_QWORD *)(v51 + 104);
  ((void (*)(_BYTE *))v51)(v55);
  sub_1ABDBB9A8();
  sub_1ABCFE1EC(&qword_1ED3467A8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  v53 = (_BYTE *)sub_1ABF2FDE8();
  sub_1ABCF4DA8(0, &qword_1ED347078, (uint64_t (*)(void))sub_1ABD67FB8, (uint64_t)&type metadata for WatchlistEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90E90]);
  v47 = v31;
  sub_1ABF31738();
  sub_1ABF30844();
  v32 = v44;
  v33 = v43;
  v34 = v42;
  v42(v15, v44, v43);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v34(v15, v32, v33);
  sub_1ABF304A8();
  v49(v24, 0, 1, v50);
  v57 = 0uLL;
  *(_QWORD *)&v58 = 0;
  v35 = v45;
  v45(v28, 1, 1, v26);
  v35(v54, 1, 1, v26);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v51)(v55, v40, v56);
  sub_1ABD68830();
  v36 = sub_1ABF2FE00();
  sub_1ABDBB94C(0, &qword_1ED34C7B0, (unint64_t *)&qword_1ED34CAF0);
  v59 = 0;
  v57 = 0u;
  v58 = 0u;
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  v38 = v52;
  *v52 = v53;
  v38[1] = v36;
  v38[2] = result;
  return result;
}

void sub_1ABDBB94C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1ABD079D8(255, a3);
    v4 = sub_1ABF2FC20();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1ABDBB9A8()
{
  unint64_t result;

  result = qword_1EEC42618;
  if (!qword_1EEC42618)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF464A0, &type metadata for SymbolInWatchlistOptionsProvider);
    atomic_store(result, &qword_1EEC42618);
  }
  return result;
}

uint64_t sub_1ABDBB9EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_OWORD *)(v2 + 104) = *(_OWORD *)v1;
  *(_QWORD *)(v2 + 120) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_1ABDBBA14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  swift_release();
  swift_release();
  v4 = v0[9];
  v0[16] = v0[8];
  ObjectType = swift_getObjectType();
  v0[2] = v3;
  v0[3] = v2;
  v0[4] = v1 | 0x2000000000000000;
  v8 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v6 = (_QWORD *)swift_task_alloc();
  v0[17] = v6;
  *v6 = v0;
  v6[1] = sub_1ABDBBB18;
  return v8(v0 + 2, ObjectType, v4);
}

uint64_t sub_1ABDBBB18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1ABDBBBB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3[2];
  uint64_t v4;
  __int128 v5;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_OWORD *)(v0 + 48);
  sub_1ABD80E60(&v4, v3);
  v1 = v3[1];
  *(_QWORD *)(v0 + 80) = v3[0];
  *(_QWORD *)(v0 + 88) = v1;
  sub_1ABD80748();
  sub_1ABF2FCE0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABDBBC90()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1ABDBBCA0()
{
  unint64_t result;

  result = qword_1ED347200;
  if (!qword_1ED347200)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B03C, &type metadata for DeleteSymbolFromWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED347200);
  }
  return result;
}

unint64_t sub_1ABDBBCE8()
{
  unint64_t result;

  result = qword_1ED3471F0;
  if (!qword_1ED3471F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B064, &type metadata for DeleteSymbolFromWatchlistIntent);
    atomic_store(result, (unint64_t *)&qword_1ED3471F0);
  }
  return result;
}

uint64_t sub_1ABDBBD2C()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1ABDBBD50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ABDBBD60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40F20 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC425C0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABDBBDD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1ABD37AA0;
  *(_QWORD *)(v4 + 96) = a1;
  *(_OWORD *)(v4 + 104) = *(_OWORD *)v1;
  *(_QWORD *)(v4 + 120) = *(_QWORD *)(v1 + 16);
  return swift_task_switch();
}

uint64_t sub_1ABDBBE48()
{
  sub_1ABDBAA04();
  return sub_1ABF2FCA4();
}

uint64_t destroy for AddSymbolToWatchlistIntent()
{
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *_s10StocksCore26AddSymbolToWatchlistIntentVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  return a1;
}

_QWORD *assignWithCopy for AddSymbolToWatchlistIntent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF68();
  swift_release();
  a1[1] = a2[1];
  sub_1ABF2FF68();
  swift_release();
  a1[2] = a2[2];
  sub_1ABF2FF68();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AddSymbolToWatchlistIntent(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AddSymbolToWatchlistIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AddSymbolToWatchlistIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteSymbolFromWatchlistIntent()
{
  return &type metadata for DeleteSymbolFromWatchlistIntent;
}

unint64_t sub_1ABDBC064()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC42630;
  if (!qword_1EEC42630)
  {
    sub_1ABCF4DA8(255, &qword_1EEC42638, (uint64_t (*)(void))sub_1ABDBAA04, (uint64_t)&type metadata for DeleteSymbolFromWatchlistIntent, MEMORY[0x1E0C91678]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C916B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC42630);
  }
  return result;
}

uint64_t sub_1ABDBC0CC()
{
  return sub_1ABCFE1EC(&qword_1EEC42640, (uint64_t (*)(uint64_t))sub_1ABDBC0F8, MEMORY[0x1E0C91580]);
}

void sub_1ABDBC0F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42648)
  {
    sub_1ABD69948();
    sub_1ABD80748();
    v0 = sub_1ABF2FF38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42648);
  }
}

uint64_t sub_1ABDBC174(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE1BA0(*a1, *a2);
}

uint64_t sub_1ABDBC180()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDBC238()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDBC2CC()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDBC380@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDBD294();
  *a1 = result;
  return result;
}

void sub_1ABDBC3AC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE900000000000064;
  v4 = 0xEC00000073676966;
  v5 = 0x6E6F43656C797473;
  if (v2 != 1)
  {
    v5 = 0x6954736567646162;
    v4 = 0xED000074756F656DLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x496C656E6E616863;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ABDBC424()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E6F43656C797473;
  if (*v0 != 1)
    v1 = 0x6954736567646162;
  if (*v0)
    return v1;
  else
    return 0x496C656E6E616863;
}

uint64_t sub_1ABDBC498@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDBD294();
  *a1 = result;
  return result;
}

uint64_t sub_1ABDBC4BC()
{
  sub_1ABDBCB48();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDBC4E4()
{
  sub_1ABDBCB48();
  return sub_1ABF32398();
}

unint64_t sub_1ABDBC50C@<X0>(unint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, double a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v6 = 0xD000000000000017;
  if (a2)
    v6 = result;
  v7 = 0x80000001ABF592C0;
  v8 = MEMORY[0x1E0DEE9D8];
  if (a2)
    v7 = a2;
  if (a3)
    v8 = a3;
  *(_QWORD *)a6 = v6;
  *(_QWORD *)(a6 + 8) = v7;
  if ((a5 & 1) != 0)
    a4 = 21600.0;
  *(_QWORD *)(a6 + 16) = v8;
  *(double *)(a6 + 24) = a4;
  return result;
}

uint64_t sub_1ABDBC568@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;

  sub_1ABDBCE28(0, &qword_1ED34FEA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDBCB48();
  sub_1ABF3235C();
  if (!v2)
  {
    v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v37 = 0;
    sub_1ABF320C8();
    v10 = v36;
    v33 = v35;
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v36)
    {
      swift_beginAccess();
      v11 = v38;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v34 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v14 = v11[2];
      v13 = v11[3];
      if (v14 >= v13 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      v11[2] = v14 + 1;
      v15 = &v11[2 * v14];
      v15[4] = 0x496C656E6E616863;
      v15[5] = 0xE900000000000064;
      v38 = v11;
      swift_endAccess();
      v10 = v34;
    }
    v37 = 1;
    sub_1ABD12448(0, &qword_1ED34FC40);
    sub_1ABDBCE84(&qword_1ED34FC50, (uint64_t (*)(void))sub_1ABDBCD6C, MEMORY[0x1E0DEAF40]);
    sub_1ABF320C8();
    v32 = v35;
    if (!v35)
    {
      swift_beginAccess();
      v11 = v38;
      v16 = swift_isUniquelyReferenced_nonNull_native();
      v34 = v10;
      if ((v16 & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v18 = v11[2];
      v17 = v11[3];
      if (v18 >= v17 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v17 > 1), v18 + 1, 1, v11);
      v11[2] = v18 + 1;
      v19 = (char *)&v11[2 * v18];
      strcpy(v19 + 32, "styleConfigs");
      v19[45] = 0;
      *((_WORD *)v19 + 23) = -5120;
      v38 = v11;
      swift_endAccess();
      v10 = v34;
    }
    v37 = 2;
    sub_1ABF320C8();
    if ((v36 & 1) != 0)
    {
      swift_beginAccess();
      v11 = v38;
      v21 = swift_isUniquelyReferenced_nonNull_native();
      v34 = v10;
      if ((v21 & 1) == 0)
        v11 = sub_1ABD12054(0, v11[2] + 1, 1, v11);
      v23 = v11[2];
      v22 = v11[3];
      if (v23 >= v22 >> 1)
        v11 = sub_1ABD12054((_QWORD *)(v22 > 1), v23 + 1, 1, v11);
      v11[2] = v23 + 1;
      v24 = (char *)&v11[2 * v23];
      strcpy(v24 + 32, "badgesTimeout");
      *((_WORD *)v24 + 23) = -4864;
      v38 = v11;
      swift_endAccess();
      v25 = 0x40D5180000000000;
      v10 = v34;
    }
    else
    {
      v25 = v35;
    }
    v26 = 0xD000000000000017;
    if (v10)
      v26 = v33;
    v33 = v26;
    if (!v10)
      v10 = 0x80000001ABF592C0;
    v27 = MEMORY[0x1E0DEE9D8];
    if (v32)
      v27 = v32;
    v34 = v27;
    if (v11[2])
    {
      sub_1ABD0F55C();
      v28 = swift_allocObject();
      v32 = v10;
      v29 = (_QWORD *)v28;
      *(_OWORD *)(v28 + 16) = xmmword_1ABF366C0;
      sub_1ABD12448(0, (unint64_t *)&qword_1ED34FCB0);
      v29[7] = v30;
      v29[8] = sub_1ABD82448();
      v29[4] = v11;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v31 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      v10 = v32;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v31 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    *a2 = v33;
    a2[1] = v10;
    a2[2] = v34;
    a2[3] = v25;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1ABDBCB48()
{
  unint64_t result;

  result = qword_1ED34F570;
  if (!qword_1ED34F570)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B254, &type metadata for TopStoriesConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F570);
  }
  return result;
}

uint64_t sub_1ABDBCB90(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;

  sub_1ABDBCE28(0, &qword_1ED34FF58, MEMORY[0x1E0DED170]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - v6;
  v13 = *(_QWORD *)(v1 + 16);
  v8 = a1[3];
  v9 = a1;
  v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1ABDBCB48();
  sub_1ABF32368();
  v17 = 0;
  sub_1ABF32194();
  if (!v2)
  {
    v16 = v13;
    v15 = 1;
    sub_1ABD12448(0, &qword_1ED34FC40);
    sub_1ABDBCE84(&qword_1ED34FC48, (uint64_t (*)(void))sub_1ABDBCEF8, MEMORY[0x1E0DEAF10]);
    sub_1ABF321D0();
    v14 = 2;
    sub_1ABF321AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

uint64_t sub_1ABDBCD40@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1ABDBC568(a1, a2);
}

uint64_t sub_1ABDBCD54(_QWORD *a1)
{
  return sub_1ABDBCB90(a1);
}

unint64_t sub_1ABDBCD6C()
{
  unint64_t result;

  result = qword_1ED34F760;
  if (!qword_1ED34F760)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41E98, &type metadata for TopStoriesStyleConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F760);
  }
  return result;
}

uint64_t sub_1ABDBCDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  double v5;
  char v7;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(double *)(a1 + 24);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(double *)(a2 + 24);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return sub_1ABD1CDA0(v2, v4) & (v3 == v5);
  v7 = sub_1ABF3223C();
  result = 0;
  if ((v7 & 1) != 0)
    return sub_1ABD1CDA0(v2, v4) & (v3 == v5);
  return result;
}

void sub_1ABDBCE28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABDBCB48();
    v7 = a3(a1, &type metadata for TopStoriesConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1ABDBCE84(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD12448(255, &qword_1ED34FC40);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABDBCEF8()
{
  unint64_t result;

  result = qword_1ED34F758;
  if (!qword_1ED34F758)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41EC0, &type metadata for TopStoriesStyleConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F758);
  }
  return result;
}

uint64_t destroy for TopStoriesConfiguration()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TopStoriesConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for TopStoriesConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for TopStoriesConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiSizeVideo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiSizeVideo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TopStoriesConfiguration()
{
  return &type metadata for TopStoriesConfiguration;
}

uint64_t storeEnumTagSinglePayload for TopStoriesConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABDBD13C + 4 * byte_1ABF3B0B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABDBD170 + 4 * asc_1ABF3B0B0[v4]))();
}

uint64_t sub_1ABDBD170(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDBD178(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDBD180);
  return result;
}

uint64_t sub_1ABDBD18C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDBD194);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABDBD198(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDBD1A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TopStoriesConfiguration.CodingKeys()
{
  return &type metadata for TopStoriesConfiguration.CodingKeys;
}

unint64_t sub_1ABDBD1C0()
{
  unint64_t result;

  result = qword_1EEC42650;
  if (!qword_1EEC42650)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B22C, &type metadata for TopStoriesConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42650);
  }
  return result;
}

unint64_t sub_1ABDBD208()
{
  unint64_t result;

  result = qword_1ED34F580;
  if (!qword_1ED34F580)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B164, &type metadata for TopStoriesConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F580);
  }
  return result;
}

unint64_t sub_1ABDBD250()
{
  unint64_t result;

  result = qword_1ED34F578;
  if (!qword_1ED34F578)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3B18C, &type metadata for TopStoriesConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F578);
  }
  return result;
}

uint64_t sub_1ABDBD294()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1ABDBD2DC()
{
  return 0x657361622D736473;
}

uint64_t sub_1ABDBD2FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD0B1DC(0, (unint64_t *)&qword_1ED350B28, (unint64_t *)&unk_1ED350BC0);
  result = sub_1ABF30B68();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED3508C8);
  result = sub_1ABF30B74();
  if (!v12)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v10)
  {
    type metadata accessor for CloudKitWatchlistDefaultsProvider();
    v6 = swift_allocObject();
    sub_1ABD065C8(&v9, v6 + 16);
    v7 = type metadata accessor for CloudKitWatchlistService();
    v8 = (_QWORD *)swift_allocObject();
    result = (uint64_t)sub_1ABDC1D28(v5, (uint64_t)v11, v6, v8);
    a2[3] = v7;
    a2[4] = (uint64_t)&off_1E5AED8C0;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1ABDBD480@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD03950((uint64_t (*)(_QWORD))type metadata accessor for TestWatchlistService, (uint64_t (*)(void))sub_1ABE12AA4, (uint64_t)&off_1E5AEACA0, a1);
}

uint64_t sub_1ABDBD4A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  char v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[3];
  uint64_t v34;
  _UNKNOWN **v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;

  sub_1ABD07E04((uint64_t)a1, (uint64_t)v37);
  v4 = sub_1ABD30B84(v37);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v4 & 1) == 0)
  {
    sub_1ABD079D8(0, (unint64_t *)&unk_1ED3509D0);
    result = sub_1ABF30B74();
    if (v38)
    {
      v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
      MEMORY[0x1E0C80A78](v6);
      v8 = (_QWORD *)((char *)&v33[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      v10 = *v8;
      v11 = type metadata accessor for YahooBaseOperationFactory();
      v34 = v11;
      v35 = &off_1E5AEEE20;
      v33[0] = v10;
      v12 = type metadata accessor for YahooQuoteService();
      v13 = (_QWORD *)swift_allocObject();
      v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v11);
      MEMORY[0x1E0C80A78](v14);
      v16 = (_QWORD *)((char *)&v33[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_1E5AEEE20;
      v13[2] = v18;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      v19 = &off_1E5AE78D0;
LABEL_7:
      a2[3] = v12;
      a2[4] = v19;
      *a2 = v13;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
  sub_1ABD079D8(0, &qword_1ED350968);
  result = sub_1ABF30B74();
  if (!v38)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDC1CC0();
  result = sub_1ABF30B74();
  v20 = v36;
  if (v36)
  {
    v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
    MEMORY[0x1E0C80A78](v21);
    v23 = (_QWORD *)((char *)&v33[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v24 + 16))(v23);
    v25 = *v23;
    v26 = type metadata accessor for SDSBaseOperationFactory();
    v34 = v26;
    v35 = &off_1E5AEC4C0;
    v33[0] = v25;
    v12 = type metadata accessor for SDSQuoteService();
    v13 = (_QWORD *)swift_allocObject();
    v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v26);
    MEMORY[0x1E0C80A78](v27);
    v29 = (_QWORD *)((char *)&v33[-1] - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v30 + 16))(v29);
    v31 = *v29;
    v13[5] = v26;
    v13[6] = &off_1E5AEC4C0;
    v13[2] = v31;
    v13[7] = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    v19 = &off_1E5AE3868;
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1ABDBD7EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  char v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _QWORD v34[3];
  uint64_t v35;

  sub_1ABD07E04((uint64_t)a1, (uint64_t)v34);
  v4 = sub_1ABD30B84(v34);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v4 & 1) != 0)
  {
    sub_1ABD079D8(0, &qword_1ED350968);
    result = sub_1ABF30B74();
    if (v35)
    {
      v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      MEMORY[0x1E0C80A78](v20);
      v22 = (_QWORD *)((char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v23 + 16))(v22);
      v24 = *v22;
      v25 = type metadata accessor for SDSBaseOperationFactory();
      v32 = v25;
      v33 = &off_1E5AEC4C0;
      v31[0] = v24;
      v12 = type metadata accessor for SDSQuoteDetailService();
      v13 = (_QWORD *)swift_allocObject();
      v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v25);
      MEMORY[0x1E0C80A78](v26);
      v28 = (_QWORD *)((char *)v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v29 + 16))(v28);
      v30 = *v28;
      v13[5] = v25;
      v13[6] = &off_1E5AEC4C0;
      v13[2] = v30;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      v19 = &off_1E5AEB498;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1ABD079D8(0, (unint64_t *)&unk_1ED3509D0);
    result = sub_1ABF30B74();
    if (v35)
    {
      v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      MEMORY[0x1E0C80A78](v6);
      v8 = (_QWORD *)((char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      v10 = *v8;
      v11 = type metadata accessor for YahooBaseOperationFactory();
      v32 = v11;
      v33 = &off_1E5AEEE20;
      v31[0] = v10;
      v12 = type metadata accessor for YahooQuoteDetailService();
      v13 = (_QWORD *)swift_allocObject();
      v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v11);
      MEMORY[0x1E0C80A78](v14);
      v16 = (_QWORD *)((char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_1E5AEEE20;
      v13[2] = v18;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      v19 = &off_1E5AED810;
LABEL_6:
      a2[3] = v12;
      a2[4] = v19;
      *a2 = v13;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDBDAEC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  char v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _QWORD v34[3];
  uint64_t v35;

  sub_1ABD07E04((uint64_t)a1, (uint64_t)v34);
  v4 = sub_1ABD30B84(v34);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v4 & 1) != 0)
  {
    sub_1ABD079D8(0, &qword_1ED350968);
    result = sub_1ABF30B74();
    if (v35)
    {
      v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      MEMORY[0x1E0C80A78](v20);
      v22 = (_QWORD *)((char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v23 + 16))(v22);
      v24 = *v22;
      v25 = type metadata accessor for SDSBaseOperationFactory();
      v32 = v25;
      v33 = &off_1E5AEC4C0;
      v31[0] = v24;
      v12 = type metadata accessor for SDSChartService();
      v13 = (_QWORD *)swift_allocObject();
      v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v25);
      MEMORY[0x1E0C80A78](v26);
      v28 = (_QWORD *)((char *)v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v29 + 16))(v28);
      v30 = *v28;
      v13[5] = v25;
      v13[6] = &off_1E5AEC4C0;
      v13[2] = v30;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      v19 = &off_1E5AE3540;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1ABD079D8(0, (unint64_t *)&unk_1ED3509F0);
    result = sub_1ABF30B74();
    if (v35)
    {
      v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      MEMORY[0x1E0C80A78](v6);
      v8 = (_QWORD *)((char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      v10 = *v8;
      v11 = type metadata accessor for YahooChartOperationFactory();
      v32 = v11;
      v33 = &off_1E5AEF050;
      v31[0] = v10;
      v12 = type metadata accessor for YahooChartService();
      v13 = (_QWORD *)swift_allocObject();
      v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v11);
      MEMORY[0x1E0C80A78](v14);
      v16 = (_QWORD *)((char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_1E5AEF050;
      v13[2] = v18;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      v19 = &off_1E5AE7010;
LABEL_6:
      a2[3] = v12;
      a2[4] = v19;
      *a2 = v13;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDBDDEC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD03950((uint64_t (*)(_QWORD))type metadata accessor for StubChartService, sub_1ABD429F8, (uint64_t)&off_1E5AE5CD0, a1);
}

uint64_t sub_1ABDBDE0C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  _BYTE v18[24];
  uint64_t v19;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED3509C8);
  result = sub_1ABF30B74();
  if (v19)
  {
    v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    MEMORY[0x1E0C80A78](v4);
    v6 = (_QWORD *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    v8 = *v6;
    v9 = type metadata accessor for SparklineOperationFactory();
    v17[3] = v9;
    v17[4] = &off_1E5AEED40;
    v17[0] = v8;
    v10 = type metadata accessor for SparklineService();
    v11 = (_QWORD *)swift_allocObject();
    v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v9);
    MEMORY[0x1E0C80A78](v12);
    v14 = (_QWORD *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_1E5AEED40;
    v11[2] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &off_1E5AE5C08;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDBDFA4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _UNKNOWN **v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  _UNKNOWN **v48;
  __int128 v49;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350860);
  result = sub_1ABF30B74();
  if (!v50)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_1ABD065C8(&v49, (uint64_t)v51);
  v5 = v52;
  v6 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6) & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, &qword_1ED350708);
    result = sub_1ABF30B74();
    if (v50)
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1ABD079D8(0, (unint64_t *)&unk_1ED3507E0);
      result = sub_1ABF30B74();
      if (v47)
      {
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        sub_1ABD079D8(0, (unint64_t *)&unk_1ED350958);
        result = sub_1ABF30B74();
        if (v44)
        {
          v7 = v45;
          __swift_project_boxed_opaque_existential_1(a1, a1[3]);
          sub_1ABD079D8(0, &qword_1ED350930);
          result = sub_1ABF30B74();
          if (v43)
          {
            __swift_project_boxed_opaque_existential_1(a1, a1[3]);
            sub_1ABD079D8(0, &qword_1ED350980);
            result = sub_1ABF30B74();
            v8 = v40;
            if (v40)
            {
              v9 = v41;
              __swift_project_boxed_opaque_existential_1(a1, a1[3]);
              sub_1ABD079D8(0, &qword_1ED350760);
              result = sub_1ABF30B74();
              if (v39)
              {
                v10 = type metadata accessor for NewsStockFeedService();
                v11 = (_QWORD *)swift_allocObject();
                sub_1ABD065C8(&v49, (uint64_t)(v11 + 2));
                sub_1ABD065C8(&v46, (uint64_t)(v11 + 7));
                v11[12] = v44;
                v11[13] = v7;
                sub_1ABD065C8(&v42, (uint64_t)(v11 + 14));
                v11[19] = v8;
                v11[20] = v9;
                sub_1ABD065C8(&v38, (uint64_t)(v11 + 21));
                v12 = &off_1E5AEA540;
LABEL_16:
                a2[3] = v10;
                a2[4] = v12;
                *a2 = v11;
                return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
              }
              goto LABEL_23;
            }
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1ABD07E04((uint64_t)a1, (uint64_t)&v49);
  v13 = sub_1ABD30B84(&v49);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v13 & 1) == 0)
  {
    sub_1ABD079D8(0, (unint64_t *)&unk_1ED3509D0);
    result = sub_1ABF30B74();
    if (v50)
    {
      v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v49, v50);
      MEMORY[0x1E0C80A78](v14);
      v16 = (uint64_t *)((char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      v18 = *v16;
      v19 = type metadata accessor for YahooBaseOperationFactory();
      v47 = v19;
      v48 = &off_1E5AEEE20;
      *(_QWORD *)&v46 = v18;
      v10 = type metadata accessor for YahooStockFeedService();
      v11 = (_QWORD *)swift_allocObject();
      v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v46, v19);
      MEMORY[0x1E0C80A78](v20);
      v22 = (uint64_t *)((char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v23 + 16))(v22);
      v24 = *v22;
      v11[5] = v19;
      v11[6] = &off_1E5AEEE20;
      v11[2] = v24;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
      v12 = &off_1E5AEB820;
      goto LABEL_16;
    }
    goto LABEL_24;
  }
  sub_1ABD079D8(0, &qword_1ED350968);
  result = sub_1ABF30B74();
  if (!v50)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDC1CC0();
  result = sub_1ABF30B74();
  v25 = v42;
  if ((_QWORD)v42)
  {
    v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v49, v50);
    MEMORY[0x1E0C80A78](v26);
    v28 = (uint64_t *)((char *)&v37 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v29 + 16))(v28);
    v30 = *v28;
    v31 = type metadata accessor for SDSBaseOperationFactory();
    v47 = v31;
    v48 = &off_1E5AEC4C0;
    *(_QWORD *)&v46 = v30;
    v10 = type metadata accessor for SDSStockFeedService();
    v11 = (_QWORD *)swift_allocObject();
    v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v46, v31);
    MEMORY[0x1E0C80A78](v32);
    v34 = (uint64_t *)((char *)&v37 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v35 + 16))(v34);
    v36 = *v34;
    v11[5] = v31;
    v11[6] = &off_1E5AEC4C0;
    v11[2] = v36;
    v11[7] = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    v12 = &off_1E5AE9AE8;
    goto LABEL_16;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1ABDBE5D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350870);
  sub_1ABF30B74();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, (unint64_t *)&unk_1ED3507E0);
    sub_1ABF30B74();
    if (v8)
    {
      v4 = type metadata accessor for TestStockFeedService();
      v5 = swift_allocObject();
      sub_1ABDC2424();
      swift_allocObject();
      *(_QWORD *)(v5 + 16) = sub_1ABF30CC4();
      sub_1ABD065C8(&v9, v5 + 24);
      result = sub_1ABD065C8(&v7, v5 + 64);
      a2[3] = v4;
      a2[4] = (uint64_t)&off_1E5AEABD0;
      *a2 = v5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1ABDBE744@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15[2];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3508D0);
  result = sub_1ABF30B5C();
  if (!v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1ABD065C8(&v12, (uint64_t)v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350860);
  result = sub_1ABF30B74();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1ABD065C8(&v10, (uint64_t)&v12);
  v5 = v13;
  v6 = v14;
  __swift_project_boxed_opaque_existential_1(&v12, v13);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6) & 1) == 0)
  {
    sub_1ABD065C8(v15, (uint64_t)a2);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350CB0);
  result = sub_1ABF30B50();
  if (result)
  {
    v7 = result;
    sub_1ABD07E04((uint64_t)v15, (uint64_t)&v10);
    v8 = type metadata accessor for NewsStockMetadataService();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v7;
    sub_1ABD065C8(&v10, v9 + 24);
    a2[3] = v8;
    a2[4] = (uint64_t)&off_1E5AEDAE0;
    *a2 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
  }
LABEL_10:
  __break(1u);
  return result;
}

id sub_1ABDBE924@<X0>(_QWORD *a1@<X8>)
{
  objc_class *v2;
  id result;

  v2 = (objc_class *)type metadata accessor for IdentificationService();
  result = objc_msgSend(objc_allocWithZone(v2), sel_init);
  a1[3] = v2;
  a1[4] = &off_1E5AEB2C8;
  *a1 = result;
  return result;
}

uint64_t sub_1ABDBE96C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350A00);
  result = sub_1ABF30B74();
  if (v23)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, &qword_1ED350A58);
    result = sub_1ABF30B74();
    if (v21)
    {
      v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
      MEMORY[0x1E0C80A78](v5);
      v7 = (_QWORD *)((char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v8 + 16))(v7);
      v9 = *v7;
      v10 = type metadata accessor for RemoteConfigurationSettingsFactory();
      v19[3] = v10;
      v19[4] = &off_1E5AF01C0;
      v19[0] = v9;
      v11 = type metadata accessor for RemoteAppConfigurationService();
      v12 = (_QWORD *)swift_allocObject();
      v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
      MEMORY[0x1E0C80A78](v13);
      v15 = (_QWORD *)((char *)&v19[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v16 + 16))(v15);
      v17 = *v15;
      v12[10] = v10;
      v12[11] = &off_1E5AF01C0;
      v12[7] = v17;
      sub_1ABD065C8(&v22, (uint64_t)(v12 + 2));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      a2[3] = v11;
      a2[4] = &off_1E5AEF990;
      *a2 = v12;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDBEB64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1ABCF5A54(0, &qword_1ED350AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3568], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = sub_1ABF30B38();
  sub_1ABF30B74();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v10 = type metadata accessor for AttributionSourceAssetService();
    v11 = swift_allocObject();
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v11 + OBJC_IVAR____TtC10StocksCore29AttributionSourceAssetService_networkProxy, v6, v7);
    a2[3] = v10;
    a2[4] = (uint64_t)&off_1E5AEF970;
    *a2 = v11;
  }
  return result;
}

uint64_t sub_1ABDBEC80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  sub_1ABCF5A54(0, &qword_1ED350AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3568], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4EA0]);
  result = sub_1ABF30B50();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1ABF30B38();
  sub_1ABF30B74();
  v10 = *(_QWORD *)(v9 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9);
  if ((_DWORD)result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3506F8);
  result = sub_1ABF30B74();
  if (v15)
  {
    v11 = type metadata accessor for SDSAuthTokenService(0);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v8;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v12 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkProxy, v6, v9);
    result = sub_1ABD065C8(&v14, v12 + OBJC_IVAR____TtC10StocksCore19SDSAuthTokenService_networkMonitor);
    a2[3] = v11;
    a2[4] = (uint64_t)&off_1E5AE98A8;
    *a2 = v12;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1ABDBEE84@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  _BYTE v20[24];
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;
  _BYTE v24[24];
  uint64_t v25;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED350D78);
  result = sub_1ABF30B68();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (!v25)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED3504C0);
  result = sub_1ABF30B74();
  if (!v23)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350828);
  result = sub_1ABF30B74();
  if (v21)
  {
    v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    MEMORY[0x1E0C80A78](v6);
    v8 = (_QWORD *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v9 + 16))(v8);
    v10 = *v8;
    v11 = type metadata accessor for UserRegionProvider();
    v19[3] = v11;
    v19[4] = &off_1E5AE81E0;
    v19[0] = v10;
    v12 = type metadata accessor for FeatureAvailability();
    v13 = swift_allocObject();
    v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v11);
    MEMORY[0x1E0C80A78](v14);
    v16 = (_QWORD *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v17 + 16))(v16);
    v18 = sub_1ABDC1EF8(v5, (uint64_t)v24, (uint64_t)v22, *v16, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v12;
    a2[4] = (uint64_t)&off_1E5AE9480;
    *a2 = v18;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1ABDBF118@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD0B1DC(0, (unint64_t *)&qword_1ED350B28, (unint64_t *)&unk_1ED350BC0);
  result = sub_1ABF30B68();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, &qword_1ED350930);
    result = sub_1ABF30B74();
    if (v9)
    {
      v6 = type metadata accessor for CloudKitPollingService();
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 64) = 0;
      *(_QWORD *)(v7 + 16) = v5;
      result = sub_1ABD065C8(&v8, v7 + 24);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1E5AEB930;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDBF22C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABDC1464((uint64_t (*)(_QWORD))type metadata accessor for StubPrivateDataPollingService, (uint64_t)&off_1E5AEF9E0, a1);
}

uint64_t sub_1ABDBF240@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD0B1DC(0, (unint64_t *)&qword_1ED350B28, (unint64_t *)&unk_1ED350BC0);
  result = sub_1ABF30B68();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for UserInfo();
    v6 = swift_allocObject();
    v7 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v7;
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF3106C();
    swift_release();
    swift_release();
    result = swift_release();
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1E5AF0AA0;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDBF31C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34EAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - v3;
  v5 = sub_1ABF30880();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UserRegionProvider();
  v10 = swift_allocObject();
  sub_1ABF30844();
  sub_1ABF30838();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_1ABD47DAC((uint64_t)v4, v10 + OBJC_IVAR____TtC10StocksCore18UserRegionProvider_currentRegion);
  a1[3] = v9;
  a1[4] = (uint64_t)&off_1E5AE81E0;
  *a1 = v10;
  return result;
}

uint64_t sub_1ABDBF438@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  _UNKNOWN **v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  if (qword_1ED34DBB8 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED34EEE8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ServiceAssembly, (uint64_t)&unk_1ABF3B2BC);
  sub_1ABF30970();
  if ((v17 & 1) != 0)
  {
    v5 = type metadata accessor for EmptyTopStoriesService();
    result = swift_allocObject();
    v7 = (_QWORD *)result;
    v8 = &off_1E5AEB940;
LABEL_11:
    a3[3] = v5;
    a3[4] = v8;
    *a3 = v7;
    return result;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350988);
  result = sub_1ABF30B74();
  if (!v18)
  {
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350870);
  result = sub_1ABF30B74();
  if (!v16)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350958);
  result = sub_1ABF30B74();
  if (!v13)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350D40);
  result = sub_1ABF30B68();
  if (result)
  {
    v10 = result;
    v5 = type metadata accessor for TopStoriesService();
    v7 = (_QWORD *)swift_allocObject();
    sub_1ABD065C8(&v17, (uint64_t)(v7 + 2));
    sub_1ABD065C8(&v15, (uint64_t)(v7 + 7));
    v7[12] = v13;
    v7[13] = v9;
    result = sub_1ABD065C8(&v11, (uint64_t)(v7 + 14));
    v7[19] = v10;
    v8 = &off_1E5AE6C18;
    goto LABEL_11;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1ABDBF6F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350870);
  sub_1ABF30B74();
  if (v7)
  {
    v3 = type metadata accessor for TestTopStoriesService();
    v4 = swift_allocObject();
    sub_1ABDC2424();
    swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_1ABF30CC4();
    result = sub_1ABD065C8(&v6, v4 + 24);
    a2[3] = v3;
    a2[4] = (uint64_t)&off_1E5AEB780;
    *a2 = v4;
  }
  else
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDBF808@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[5];
  __int128 v21;
  uint64_t v22;
  _BYTE v23[24];
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350988);
  result = sub_1ABF30B74();
  if (!v28)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350A00);
  result = sub_1ABF30B74();
  if (!v26)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350A58);
  result = sub_1ABF30B74();
  if (!v24)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350BF8);
  result = sub_1ABF30B68();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v22)
  {
    v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    MEMORY[0x1E0C80A78](v6);
    v8 = (_QWORD *)((char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v9 + 16))(v8);
    v10 = *v8;
    v11 = type metadata accessor for RemoteConfigurationSettingsFactory();
    v20[3] = v11;
    v20[4] = &off_1E5AF01C0;
    v20[0] = v10;
    v12 = type metadata accessor for ForYouFeedConfigService();
    v13 = (_QWORD *)swift_allocObject();
    v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v11);
    MEMORY[0x1E0C80A78](v14);
    v16 = (_QWORD *)((char *)&v20[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v17 + 16))(v16);
    v18 = *v16;
    v13[15] = v11;
    v13[16] = &off_1E5AF01C0;
    v13[12] = v18;
    sub_1ABD065C8(&v27, (uint64_t)(v13 + 2));
    sub_1ABD065C8(&v25, (uint64_t)(v13 + 7));
    v13[17] = v5;
    sub_1ABD065C8(&v21, (uint64_t)(v13 + 18));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    a2[3] = v12;
    a2[4] = &off_1E5AEBEC8;
    *a2 = v13;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1ABDBFB14@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350BF8);
  result = sub_1ABF30B68();
  if (result)
  {
    v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, &qword_1ED350930);
    result = sub_1ABF30B74();
    if (v9)
    {
      v6 = type metadata accessor for StockFeedConfigService();
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v5;
      result = sub_1ABD065C8(&v8, v7 + 24);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_1E5AEBB50;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDBFC1C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350BF8);
  result = sub_1ABF30B68();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED34D8C0);
  result = sub_1ABF30B74();
  if (!v11)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v9)
  {
    v6 = type metadata accessor for NewsFeedService();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    sub_1ABD065C8(&v10, v7 + 24);
    result = sub_1ABD065C8(&v8, v7 + 64);
    a2[3] = v6;
    a2[4] = (uint64_t)&protocol witness table for NewsFeedService;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1ABDBFD80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350778);
  result = sub_1ABF30B74();
  if (v7)
  {
    v4 = type metadata accessor for TestNewsFeedService();
    v5 = swift_allocObject();
    result = sub_1ABD065C8(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1E5AE9B00;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDBFE30@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABDC1108(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockFeedLookupService, (uint64_t)&off_1E5AEBB60, a2);
}

uint64_t sub_1ABDBFE44@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD03950((uint64_t (*)(_QWORD))type metadata accessor for StubFeedLookupService, sub_1ABD3BD14, (uint64_t)&off_1E5AEB4E0, a1);
}

uint64_t sub_1ABDBFE64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for TestFeedLookupService();
  v3 = swift_allocObject();
  sub_1ABDC2424();
  swift_allocObject();
  result = sub_1ABF30CC4();
  *(_QWORD *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E5AEB5A8;
  *a1 = v3;
  return result;
}

void *sub_1ABDBFF20@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[34];
  _QWORD __dst[390];

  memcpy(__dst, __src, sizeof(__dst));
  v3 = (_QWORD *)__dst[51];
  sub_1ABDC1FEC((uint64_t)__dst);
  type metadata accessor for EndpointConfiguration.Defaults();
  swift_initStaticObject();
  sub_1ABCF8898();
  sub_1ABDB156C(v3, v4, v5, v7);
  swift_bridgeObjectRelease();
  sub_1ABD7DDF4((uint64_t)__dst);
  return memcpy(a2, v7, 0x110uLL);
}

uint64_t sub_1ABDBFFC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED34E0A0);
  result = sub_1ABF30B68();
  if (result)
  {
    v4 = result;
    v5 = type metadata accessor for FeedPersonalizerHeadlineScorer();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_1E5AEFDC0;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDC0058(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v3;

  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED34EEE8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ServiceAssembly, (uint64_t)&unk_1ABF3B2BC);
  sub_1ABF30970();
  type metadata accessor for PermanentURLFactory();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0x403000000020100uLL >> (8 * v3);
  return result;
}

uint64_t sub_1ABDC0118@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[5];
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (!v27)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1ABD065C8(&v26, (uint64_t)v28);
  v5 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  swift_getKeyPath();
  (*(void (**)(void))(v5 + 56))();
  swift_release();
  sub_1ABF305D4();
  v6 = sub_1ABF31288();
  swift_release();
  v7 = v30;
  __swift_project_boxed_opaque_existential_1(v28, v29);
  swift_getKeyPath();
  (*(void (**)(void))(v7 + 56))();
  swift_release();
  v8 = sub_1ABF31288();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED3508F8);
  result = sub_1ABF30B74();
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3506F8);
  result = sub_1ABF30B74();
  if (v25)
  {
    v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v26, v27);
    MEMORY[0x1E0C80A78](v9);
    v11 = (_QWORD *)((char *)&v23[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    v13 = *v11;
    v14 = type metadata accessor for YahooChartModelEngine();
    v23[3] = v14;
    v23[4] = &off_1E5AEB810;
    v23[0] = v13;
    v15 = type metadata accessor for SparklineOperationFactory();
    v16 = (_QWORD *)swift_allocObject();
    v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v14);
    MEMORY[0x1E0C80A78](v17);
    v19 = (_QWORD *)((char *)&v23[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v20 + 16))(v19);
    v21 = *v19;
    v16[7] = v14;
    v16[8] = &off_1E5AEB810;
    v16[3] = v8;
    v16[4] = v21;
    v16[2] = v6;
    sub_1ABD065C8(&v24, (uint64_t)(v16 + 9));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
    a2[3] = v15;
    a2[4] = &off_1E5AEED40;
    *a2 = v16;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1ABDC0460@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - v3;
  sub_1ABF305BC();
  v5 = sub_1ABF305D4();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  __break(1u);
  return result;
}

uint64_t sub_1ABDC0524@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  unint64_t v3;

  result = sub_1ABF30604();
  if (v3 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    *a1 = result;
    a1[1] = v3;
  }
  return result;
}

uint64_t sub_1ABDC0564@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  _QWORD v30[3];
  uint64_t v31;
  _UNKNOWN **v32;
  _QWORD v33[5];
  _BYTE v34[24];
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED3508F8);
  result = sub_1ABF30B74();
  if (v37)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, (unint64_t *)&unk_1ED3509D0);
    result = sub_1ABF30B74();
    if (v35)
    {
      v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
      v29[2] = v29;
      MEMORY[0x1E0C80A78](v5);
      v7 = (_QWORD *)((char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v8 + 16))(v7);
      v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      v29[1] = v29;
      MEMORY[0x1E0C80A78](v9);
      v11 = (_QWORD *)((char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v12 + 16))(v11);
      v13 = *v7;
      v14 = *v11;
      v15 = type metadata accessor for YahooChartModelEngine();
      v33[3] = v15;
      v33[4] = &off_1E5AEB810;
      v33[0] = v13;
      v16 = type metadata accessor for YahooBaseOperationFactory();
      v31 = v16;
      v32 = &off_1E5AEEE20;
      v30[0] = v14;
      v17 = type metadata accessor for YahooChartOperationFactory();
      v18 = (_QWORD *)swift_allocObject();
      v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v15);
      MEMORY[0x1E0C80A78](v19);
      v21 = (_QWORD *)((char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v22 + 16))(v21);
      v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
      MEMORY[0x1E0C80A78](v23);
      v25 = (_QWORD *)((char *)v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v26 + 16))(v25);
      v27 = *v21;
      v28 = *v25;
      v18[5] = v15;
      v18[6] = &off_1E5AEB810;
      v18[2] = v27;
      v18[10] = v16;
      v18[11] = &off_1E5AEEE20;
      v18[7] = v28;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      a2[3] = v17;
      a2[4] = &off_1E5AEF050;
      *a2 = v18;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDC0878@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for YahooChartModelEngine();
  result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_1E5AEB810;
  *a1 = result;
  return result;
}

uint64_t sub_1ABDC08BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3506F8);
  result = sub_1ABF30B74();
  if (v7)
  {
    v4 = type metadata accessor for YahooBaseOperationFactory();
    v5 = swift_allocObject();
    result = sub_1ABD065C8(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1E5AEEE20;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDC096C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4EA0]);
  result = sub_1ABF30B50();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350880);
  result = sub_1ABF30B74();
  if (!v13)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3506F8);
  result = sub_1ABF30B74();
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v9)
  {
    v6 = type metadata accessor for SDSBaseOperationFactory();
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    sub_1ABD065C8(&v12, v7 + 24);
    sub_1ABD065C8(&v10, v7 + 64);
    result = sub_1ABD065C8(&v8, v7 + 104);
    a2[3] = v6;
    a2[4] = (uint64_t)&off_1E5AEC4C0;
    *a2 = v7;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1ABDC0B50@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t result;
  id v15;
  id v16;
  void (*v17)(char *, uint64_t);
  id v18;
  void *v19;
  id v20;
  uint64_t v21;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - v3;
  v5 = sub_1ABF305D4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - v10;
  v12 = (id)FCURLForContainerizedUserAccountCachesDirectory();
  if (v12)
  {
    v13 = v12;
    sub_1ABF30580();

    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v4, v9, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if ((_DWORD)result != 1)
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_defaultConfiguration);
      v16 = objc_msgSend(v15, sel_contentContainerCombinationIdentifier);

      sub_1ABF317A4();
      sub_1ABF3055C();
      swift_bridgeObjectRelease();
      v17 = *(void (**)(char *, uint64_t))(v6 + 8);
      v17(v4, v5);
      v18 = objc_allocWithZone(MEMORY[0x1E0D86F48]);
      v19 = (void *)sub_1ABF30550();
      v20 = objc_msgSend(v18, sel_initWithContentDirectoryURL_, v19);

      a1[3] = sub_1ABCF7BCC(0, (unint64_t *)&unk_1ED34FD68);
      a1[4] = &off_1E5AF1058;
      *a1 = v20;
      return ((uint64_t (*)(char *, uint64_t))v17)(v11, v5);
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDC0D98@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED3508E8);
  result = sub_1ABF30B74();
  if (!v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for PermanentURLFactory();
  result = sub_1ABF30B68();
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v6 = result;
  if (qword_1ED34FA30 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED34EEE8, v5, (uint64_t (*)(uint64_t))type metadata accessor for ServiceAssembly, (uint64_t)&unk_1ABF3B2BC);
  sub_1ABF30970();
  v7 = type metadata accessor for RemoteConfigurationSettingsFactory();
  v8 = swift_allocObject();
  result = sub_1ABD065C8(&v10, v8 + 16);
  *(_QWORD *)(v8 + 56) = v6;
  *(_BYTE *)(v8 + 64) = v9;
  a2[3] = v7;
  a2[4] = (uint64_t)&off_1E5AF01C0;
  *a2 = v8;
  return result;
}

uint64_t sub_1ABDC0F0C(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  _BYTE v5[40];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350958);
  result = sub_1ABF30B74();
  if (v4)
  {
    sub_1ABF30F58();
    swift_unknownObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDC0FD0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  _QWORD v8[2];
  _BYTE v9[40];

  v3 = sub_1ABF31000();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350958);
  result = sub_1ABF30B74();
  if (v8[1])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB4690], v3);
    sub_1ABF30FDC();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDC10F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABDC1108(a1, (uint64_t (*)(_QWORD))type metadata accessor for StockEntityService, (uint64_t)&off_1E5AE80B0, a2);
}

uint64_t sub_1ABDC1108@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350CB0);
  result = sub_1ABF30B50();
  if (result)
  {
    v9 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, &qword_1ED350760);
    result = sub_1ABF30B74();
    if (v13)
    {
      v10 = a2(0);
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v9;
      result = sub_1ABD065C8(&v12, v11 + 24);
      a4[3] = v10;
      a4[4] = a3;
      *a4 = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDC1228@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _UNKNOWN **v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED350860);
  result = sub_1ABF30B74();
  if (!v14)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1ABD065C8(&v13, (uint64_t)v15);
  v5 = v16;
  v6 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6) & 1) == 0)
  {
    v8 = type metadata accessor for NoopWatchlistDeprecationService();
    v9 = swift_allocObject();
    v10 = &off_1E5AEFE78;
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&qword_1ED350780);
  result = sub_1ABF30B74();
  if (!v14)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, (unint64_t *)&unk_1ED350CB0);
  result = sub_1ABF30B50();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v7 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350930);
  result = sub_1ABF30B74();
  if (v12)
  {
    v8 = type metadata accessor for WatchlistDeprecationService();
    v9 = swift_allocObject();
    sub_1ABD065C8(&v13, v9 + 16);
    *(_QWORD *)(v9 + 56) = v7;
    sub_1ABD065C8(&v11, v9 + 64);
    v10 = &off_1E5AEF330;
LABEL_8:
    a2[3] = v8;
    a2[4] = (uint64_t)v10;
    *a2 = v9;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1ABDC1450@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABDC1464((uint64_t (*)(_QWORD))type metadata accessor for NoopWatchlistDeprecationService, (uint64_t)&off_1E5AEFE78, a1);
}

uint64_t sub_1ABDC1464@<X0>(uint64_t (*a1)(_QWORD)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = a1(0);
  result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_1ABDC14AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, (unint64_t *)&unk_1ED3507E0);
  result = sub_1ABF30B74();
  if (v7)
  {
    v4 = type metadata accessor for NewsStockFeedIdentifierService();
    v5 = swift_allocObject();
    result = sub_1ABD065C8(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_1E5AEFDD8;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDC155C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  char v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _QWORD v34[3];
  uint64_t v35;

  sub_1ABD07E04((uint64_t)a1, (uint64_t)v34);
  v4 = sub_1ABD30B84(v34);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v4 & 1) != 0)
  {
    sub_1ABD079D8(0, &qword_1ED350968);
    result = sub_1ABF30B74();
    if (v35)
    {
      v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      MEMORY[0x1E0C80A78](v20);
      v22 = (_QWORD *)((char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v23 + 16))(v22);
      v24 = *v22;
      v25 = type metadata accessor for SDSBaseOperationFactory();
      v32 = v25;
      v33 = &off_1E5AEC4C0;
      v31[0] = v24;
      v12 = type metadata accessor for SDSStockMetadataService();
      v13 = (_QWORD *)swift_allocObject();
      v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v25);
      MEMORY[0x1E0C80A78](v26);
      v28 = (_QWORD *)((char *)v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v29 + 16))(v28);
      v30 = *v28;
      v13[5] = v25;
      v13[6] = &off_1E5AEC4C0;
      v13[2] = v30;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      v19 = &off_1E5AEC4D0;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1ABD079D8(0, (unint64_t *)&unk_1ED3509D0);
    result = sub_1ABF30B74();
    if (v35)
    {
      v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      MEMORY[0x1E0C80A78](v6);
      v8 = (_QWORD *)((char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      v10 = *v8;
      v11 = type metadata accessor for YahooBaseOperationFactory();
      v32 = v11;
      v33 = &off_1E5AEEE20;
      v31[0] = v10;
      v12 = type metadata accessor for YahooStockMetadataService();
      v13 = (_QWORD *)swift_allocObject();
      v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v11);
      MEMORY[0x1E0C80A78](v14);
      v16 = (_QWORD *)((char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_1E5AEEE20;
      v13[2] = v18;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      v19 = &off_1E5AEEE30;
LABEL_6:
      a2[3] = v12;
      a2[4] = v19;
      *a2 = v13;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDC185C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[5];
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABD079D8(0, &qword_1ED350968);
  result = sub_1ABF30B74();
  if (v23)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABDC1CC0();
    result = sub_1ABF30B74();
    v5 = v21;
    if (v21)
    {
      v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      MEMORY[0x1E0C80A78](v6);
      v8 = (_QWORD *)((char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      v10 = *v8;
      v11 = type metadata accessor for SDSBaseOperationFactory();
      v20[3] = v11;
      v20[4] = &off_1E5AEC4C0;
      v20[0] = v10;
      v12 = type metadata accessor for SDSCurrencyService();
      v13 = (_QWORD *)swift_allocObject();
      v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v11);
      MEMORY[0x1E0C80A78](v14);
      v16 = (_QWORD *)((char *)&v20[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_1E5AEC4C0;
      v13[2] = v18;
      v13[7] = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      a2[3] = v12;
      a2[4] = &off_1E5AE80A0;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDC1A44@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  __int128 v10;
  uint64_t v11;

  v4 = sub_1ABF30EE0();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF7C04(0, &qword_1ED350D50);
  result = sub_1ABF30B68();
  if (result)
  {
    v6 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1ABD079D8(0, &qword_1ED350930);
    result = sub_1ABF30B74();
    if (v11)
    {
      v7 = type metadata accessor for ForYouConfigRecordService();
      v8 = swift_allocObject();
      v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
      sub_1ABCFE22C((unint64_t *)&unk_1ED350B00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198], MEMORY[0x1E0DB41A8]);
      sub_1ABCF5A54(0, &qword_1ED350B80, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD33D0C();
      sub_1ABF31E04();
      sub_1ABD353FC();
      swift_allocObject();
      *(_QWORD *)(v8 + 64) = sub_1ABF30C34();
      *(_QWORD *)(v8 + 16) = v6;
      result = sub_1ABD065C8(&v10, v8 + 24);
      a2[3] = v7;
      a2[4] = (uint64_t)&off_1E5AEEC98;
      *a2 = v8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDC1C2C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1ABD03950((uint64_t (*)(_QWORD))type metadata accessor for TestForYouConfigRecordService, sub_1ABEED974, (uint64_t)&off_1E5AEFC48, a1);
}

uint64_t sub_1ABDC1C4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DB3560];
  v3 = sub_1ABF30B38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void sub_1ABDC1C90(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 24) = &type metadata for UnimplementedManagedConfigurationService;
  *(_QWORD *)(a1 + 32) = &off_1E5AF04C8;
}

uint64_t sub_1ABDC1CA8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1ABDBF438(a1, v2, a2);
}

uint64_t sub_1ABDC1CB0(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABDC0058(a1, v1);
}

uint64_t sub_1ABDC1CB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABDC0D98(a1, a2);
}

void sub_1ABDC1CC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED350B48)
  {
    sub_1ABD079D8(255, &qword_1ED3508C0);
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED350B48);
  }
}

_QWORD *sub_1ABDC1D28(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12[2];

  v8 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v8);
  a4[2] = MEMORY[0x1E0DEE9D8];
  sub_1ABD07E04(a2, (uint64_t)v12);
  type metadata accessor for CloudKitWatchlistMetadataProvider();
  v9 = swift_allocObject();
  sub_1ABDAAB0C();
  swift_allocObject();
  *(_QWORD *)(v9 + 56) = sub_1ABF310C0();
  sub_1ABD065C8(v12, v9 + 16);
  sub_1ABD07E04(a2, (uint64_t)(a4 + 3));
  a4[8] = v9;
  sub_1ABF2FF68();
  sub_1ABF30B20();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = v9;
  v10[4] = a3;
  sub_1ABD0B1DC(0, &qword_1ED34DC98, qword_1ED34E0C0);
  swift_allocObject();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  a4[9] = sub_1ABF31078();
  sub_1ABF2FF68();
  sub_1ABF3106C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a2);
  return a4;
}

uint64_t sub_1ABDC1EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  _UNKNOWN **v15;
  _QWORD v16[5];

  v16[3] = type metadata accessor for UserRegionProvider();
  v16[4] = &off_1E5AE81E0;
  v16[0] = a4;
  *(_QWORD *)(a5 + 56) = a1;
  sub_1ABD07E04(a2, a5 + 64);
  sub_1ABD07E04(a3, a5 + 104);
  sub_1ABD07E04((uint64_t)v16, a5 + 144);
  sub_1ABD07E04(a2, (uint64_t)&v13);
  v10 = type metadata accessor for PaidBundleViaOfferFeatureAvailability();
  v11 = swift_allocObject();
  sub_1ABD065C8(&v13, v11 + 16);
  v14 = v10;
  v15 = &off_1E5AF03A0;
  *(_QWORD *)&v13 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  sub_1ABD065C8(&v13, a5 + 16);
  return a5;
}

uint64_t sub_1ABDC1FEC(uint64_t a1)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16 = *(_QWORD *)(a1 + 632);
  v17 = *(_QWORD *)(a1 + 624);
  v14 = *(_QWORD *)(a1 + 648);
  v15 = *(_QWORD *)(a1 + 640);
  v12 = *(_QWORD *)(a1 + 664);
  v13 = *(_QWORD *)(a1 + 656);
  v10 = *(_QWORD *)(a1 + 680);
  v11 = *(_QWORD *)(a1 + 672);
  v9 = *(_OWORD *)(a1 + 688);
  v8 = *(_OWORD *)(a1 + 704);
  v6 = *(_OWORD *)(a1 + 736);
  v7 = *(_OWORD *)(a1 + 720);
  v5 = *(_OWORD *)(a1 + 752);
  v4 = *(_OWORD *)(a1 + 768);
  v3 = *(_QWORD *)(a1 + 784);
  v18 = *(_QWORD *)(a1 + 2864);
  v19 = *(_QWORD *)(a1 + 2856);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD1A564(v17, v16, v15, v14, v13, v12, v11, v10, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v3);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD1A670(v19, v18);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABDC23D0(uint64_t result)
{
  if (result != 1)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    return sub_1ABF2FF5C();
  }
  return result;
}

void sub_1ABDC2424()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC42788)
  {
    sub_1ABDC247C();
    v0 = sub_1ABF30CB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC42788);
  }
}

unint64_t sub_1ABDC247C()
{
  unint64_t result;

  result = qword_1EEC42790;
  if (!qword_1EEC42790)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4DBD8, &type metadata for StockTestDataLocator);
    atomic_store(result, (unint64_t *)&qword_1EEC42790);
  }
  return result;
}

uint64_t sub_1ABDC24C0()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1ABDC24F4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1ABD9FA18(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

id sub_1ABDC2500(id *a1)
{
  uint64_t v1;

  return sub_1ABD9FA8C(a1, v1);
}

uint64_t sub_1ABDC2508(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABDC2510(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1ABDC2518(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1ABDC2520(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1ABDC2528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_1ABDC2530(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1ABDC2538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1ABDC2540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

_QWORD *sub_1ABDC2548()
{
  _QWORD *result;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = result[6];
    v3 = result[7];
    __swift_project_boxed_opaque_existential_1(result + 3, v2);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) & 1) != 0)
    {
      if (qword_1ED34DBC8 != -1)
        swift_once();
      type metadata accessor for LanguageSettings();
      sub_1ABCFE22C(&qword_1ED34CF10, v4, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSettings, (uint64_t)&unk_1ABF3B490);
      sub_1ABF30970();
      v5 = v6;
      if (v6 == *((_BYTE *)v1 + 16))
        return (_QWORD *)swift_release();
    }
    else
    {
      if ((v1[2] & 1) == 0)
        return (_QWORD *)swift_release();
      v5 = 0;
    }
    *((_BYTE *)v1 + 16) = v5;
    sub_1ABDC2910(v5);
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t sub_1ABDC2660(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v6;
  char v7;

  if (qword_1ED34DBC8 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED34CF10, a2, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSettings, (uint64_t)&unk_1ABF3B490);
  sub_1ABF30970();
  if ((v7 & 1) != 0)
    return 0;
  v3 = v2[6];
  v4 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4) & 1) == 0)
    return 0;
  if (qword_1EEC40F90 != -1)
    swift_once();
  sub_1ABF30970();
  return v6;
}

uint64_t sub_1ABDC2780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = a2;
  if (qword_1ED34DBC8 != -1)
    swift_once();
  sub_1ABCFE22C((unint64_t *)&unk_1EEC42800, a2, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSettings, (uint64_t)&unk_1ABF3B4D0);
  sub_1ABF30A60();
  if ((v3 & 1) != 0)
  {
    if (qword_1EEC40F90 != -1)
      swift_once();
    sub_1ABF30A60();
  }
  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 24), v4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  if ((result & 1) == 0)
  {
    if ((*(_BYTE *)(v2 + 16) & 1) == 0)
      return result;
    LOBYTE(result) = 0;
    goto LABEL_12;
  }
  sub_1ABCFE22C(&qword_1ED34CF10, v7, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSettings, (uint64_t)&unk_1ABF3B490);
  sub_1ABF30970();
  result = v8;
  if (v8 != *(unsigned __int8 *)(v2 + 16))
  {
LABEL_12:
    *(_BYTE *)(v2 + 16) = result;
    return sub_1ABDC2910(result);
  }
  return result;
}

uint64_t sub_1ABDC2910(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t (*v14)(uint64_t);
  _QWORD aBlock[6];

  v3 = sub_1ABF31594();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF315D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD133B8();
  v11 = (void *)sub_1ABF31C24();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_BYTE *)(v12 + 24) = a1;
  aBlock[4] = sub_1ABDC3114;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_6;
  v13 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  swift_release();
  sub_1ABF315AC();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1ABCFE22C((unint64_t *)&unk_1ED34FB10, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34FC90, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD33CAC();
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1ABDC2B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unsigned __int8 v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), v1);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  if ((result & 1) == 0)
  {
    if ((*(_BYTE *)(v0 + 16) & 1) == 0)
      return result;
    LOBYTE(result) = 0;
    goto LABEL_8;
  }
  if (qword_1ED34DBC8 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED34CF10, v4, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSettings, (uint64_t)&unk_1ABF3B490);
  sub_1ABF30970();
  result = v5;
  if (v5 != *(unsigned __int8 *)(v0 + 16))
  {
LABEL_8:
    *(_BYTE *)(v0 + 16) = result;
    return sub_1ABDC2910(result);
  }
  return result;
}

uint64_t sub_1ABDC2C2C(uint64_t a1, char a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD v12[5];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 64);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = sub_1ABF2FF5C();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  sub_1ABF2FF5C();
  result = sub_1ABF31FE4();
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x1AF4380CC](v7, v4);
      }
      else
      {
        v8 = *(_QWORD *)(v4 + 8 * v7 + 32);
        sub_1ABF2FF68();
      }
      v12[3] = type metadata accessor for LanguageSettings();
      v12[4] = &off_1E5AE4100;
      v12[0] = a1;
      if (MEMORY[0x1AF4390D4](v8 + 16))
      {
        v9 = *(_QWORD *)(v8 + 24);
        ObjectType = swift_getObjectType();
        v11 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 8);
        swift_retain_n();
        v11(v12, a2 & 1, ObjectType, v9);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain_n();
      }
      ++v7;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      swift_release();
      swift_release();
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDC2DAC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABDC2DD8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1ABDC2DE4(uint64_t a1, uint64_t a2)
{
  return sub_1ABDC2660(a1, a2) & 1;
}

uint64_t sub_1ABDC2E08(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3;

  if (qword_1ED34DBC8 != -1)
    swift_once();
  sub_1ABCFE22C(&qword_1ED34CF10, a2, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSettings, (uint64_t)&unk_1ABF3B490);
  sub_1ABF30970();
  return v3;
}

uint64_t sub_1ABDC2E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 24), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2) & 1;
}

uint64_t sub_1ABDC2EE8(uint64_t a1, uint64_t a2)
{
  return sub_1ABDC2780(a1, a2);
}

uint64_t sub_1ABDC2F08(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  if (qword_1EEC40F90 != -1)
    swift_once();
  sub_1ABCFE22C((unint64_t *)&unk_1EEC42800, a2, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSettings, (uint64_t)&unk_1ABF3B4D0);
  sub_1ABF30A60();
  return sub_1ABDC2910(*(_BYTE *)(v3 + 16));
}

uint64_t sub_1ABDC2FA4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD8A848(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(v3 + 64) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDC3038()
{
  return sub_1ABF30A60();
}

uint64_t sub_1ABDC3044()
{
  return sub_1ABF30A78();
}

uint64_t sub_1ABDC3050()
{
  return sub_1ABF30A6C();
}

uint64_t sub_1ABDC3058(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = a1[3];
  v5 = a1[4];
  v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  return sub_1ABDC3120((uint64_t)v6, a2, v2, v4, v5);
}

uint64_t sub_1ABDC3098(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED34CF10, a2, (uint64_t (*)(uint64_t))type metadata accessor for LanguageSettings, (uint64_t)&unk_1ABF3B490);
}

uint64_t sub_1ABDC30C4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

_QWORD *sub_1ABDC30E8()
{
  return sub_1ABDC2548();
}

uint64_t sub_1ABDC30F0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABDC3114()
{
  uint64_t v0;

  return sub_1ABDC2C2C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1ABDC3120(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v13[5];

  v13[3] = a4;
  v13[4] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  if (MEMORY[0x1AF4390D4](a3 + 16))
  {
    v10 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 8))(v13, a2 & 1, ObjectType, v10);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

id sub_1ABDC31BC(_QWORD *a1)
{
  objc_class *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  uint64_t v17;
  objc_super v18;
  _BYTE v19[3128];

  v3 = sub_1ABF30AE4();
  MEMORY[0x1E0C80A78](v3);
  v4 = (char *)objc_allocWithZone(v1);
  v5 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers;
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3690]);
  v7 = v4;
  *(_QWORD *)&v4[v5] = objc_msgSend(v6, sel_initWithOptions_capacity_, 517, 0);
  v8 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3690]), sel_initWithOptions_capacity_, 517, 0);
  v9 = (uint64_t)&v7[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig];
  sub_1ABDC4280(v19);
  sub_1ABDC4288((uint64_t)v19, v9);
  *(_QWORD *)&v7[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownNewsConfig] = 0;
  v10 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_configLock;
  sub_1ABF30AD8();
  sub_1ABF30AFC();
  swift_allocObject();
  *(_QWORD *)&v7[v10] = sub_1ABF30AF0();
  sub_1ABD07E04((uint64_t)a1, (uint64_t)&v7[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager]);

  v18.receiver = v7;
  v18.super_class = v1;
  v11 = objc_msgSendSuper2(&v18, sel_init);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
  v15 = v11;
  v14(v12, v13);
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  sub_1ABF30C94();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v15;
}

id sub_1ABDC33D4(_QWORD *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  uint64_t v17;
  objc_super v18;
  _BYTE v19[3128];

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_1ABF30AE4();
  MEMORY[0x1E0C80A78](v4);
  v5 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers;
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3690]);
  v7 = v1;
  *(_QWORD *)&v1[v5] = objc_msgSend(v6, sel_initWithOptions_capacity_, 517, 0);
  v8 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3690]), sel_initWithOptions_capacity_, 517, 0);
  v9 = (uint64_t)&v7[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownAppConfig];
  sub_1ABDC4280(v19);
  sub_1ABDC4288((uint64_t)v19, v9);
  *(_QWORD *)&v7[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_lastKnownNewsConfig] = 0;
  v10 = OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_configLock;
  sub_1ABF30AD8();
  sub_1ABF30AFC();
  swift_allocObject();
  *(_QWORD *)&v7[v10] = sub_1ABF30AF0();
  sub_1ABD07E04((uint64_t)a1, (uint64_t)&v7[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager]);

  v18.receiver = v7;
  v18.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v18, sel_init);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
  v15 = v11;
  v14(v12, v13);
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  sub_1ABF30C94();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v15;
}

void sub_1ABDC35EC()
{
  char *Strong;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  char **v5;
  uint64_t i;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t j;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  v1 = *(id *)&Strong[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers];

  v2 = objc_msgSend(v1, sel_allObjects);
  sub_1ABCF7C04(0, &qword_1ED34E110);
  v3 = sub_1ABF31A08();

  if (v3 >> 62)
  {
    sub_1ABF2FF5C();
    v4 = sub_1ABF31FE4();
    swift_bridgeObjectRelease();
    v5 = &selRef_setStatus_;
    if (!v4)
      goto LABEL_12;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = &selRef_setStatus_;
    if (!v4)
      goto LABEL_12;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_25;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      v7 = (void *)MEMORY[0x1AF4380CC](i, v3);
    }
    else
    {
      v7 = *(void **)(v3 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    if ((objc_msgSend(v7, v5[506], sel_configurationManager_configurationDidChange_) & 1) != 0)
    {
      v8 = (void *)swift_unknownObjectUnownedLoadStrong();
      v9 = (void *)swift_unknownObjectUnownedLoadStrong();
      v10 = swift_unknownObjectRetain();
      v11 = sub_1ABD19EE8(v10);

      objc_msgSend(v7, sel_configurationManager_configurationDidChange_, v8, v11);
      v5 = &selRef_setStatus_;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  v12 = (char *)swift_unknownObjectUnownedLoadStrong();
  v13 = *(id *)&v12[OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers];

  v14 = objc_msgSend(v13, sel_allObjects);
  sub_1ABCF7C04(0, &qword_1ED34E118);
  v15 = sub_1ABF31A08();

  if (!(v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v16)
      goto LABEL_14;
LABEL_23:
    swift_bridgeObjectRelease();
    return;
  }
  sub_1ABF2FF5C();
  v16 = sub_1ABF31FE4();
  swift_bridgeObjectRelease();
  if (!v16)
    goto LABEL_23;
LABEL_14:
  if (v16 >= 1)
  {
    for (j = 0; j != v16; ++j)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v18 = (void *)MEMORY[0x1AF4380CC](j, v15);
      }
      else
      {
        v18 = *(void **)(v15 + 8 * j + 32);
        swift_unknownObjectRetain();
      }
      if ((objc_msgSend(v18, v5[506], sel_configurationManager_appConfigurationDidChange_) & 1) != 0)
      {
        v19 = (void *)swift_unknownObjectUnownedLoadStrong();
        v20 = (void *)swift_unknownObjectUnownedLoadStrong();
        v21 = swift_unknownObjectRetain();
        v22 = sub_1ABD19EE8(v21);

        objc_msgSend(v18, sel_configurationManager_appConfigurationDidChange_, v19, v22);
        v5 = &selRef_setStatus_;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    goto LABEL_23;
  }
LABEL_25:
  __break(1u);
}

id sub_1ABDC3930()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void sub_1ABDC3950()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1ABDC39A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1ABDC3A6C(uint64_t a1, uint64_t a2)
{
  return sub_1ABDC3B50(a1, a2, (uint64_t)&unk_1E5AF5AB0, (void (*)(uint64_t, uint64_t))sub_1ABDC8B68);
}

uint64_t sub_1ABDC3A88(uint64_t result)
{
  void (*v1)(void);

  if (result)
  {
    v1 = (void (*)(void))result;
    sub_1ABD19EE8(result);
    v1();
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1ABDC3AD4(void *a1)
{
  return sub_1ABDC3AEC(a1, (SEL *)&selRef_addObject_);
}

id sub_1ABDC3AE0(void *a1)
{
  return sub_1ABDC3AEC(a1, (SEL *)&selRef_removeObject_);
}

id sub_1ABDC3AEC(id result, SEL *a2)
{
  uint64_t v2;

  if (result)
    return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_coreConfigObservers), *a2, result);
  return result;
}

uint64_t sub_1ABDC3B18()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1ABDC3B24()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1ABDC3B34(uint64_t a1, uint64_t a2)
{
  return sub_1ABDC3B50(a1, a2, (uint64_t)&unk_1E5AF5B00, (void (*)(uint64_t, uint64_t))sub_1ABDC8B68);
}

uint64_t sub_1ABDC3B50(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  void *v4;
  _QWORD *v8;
  id v9;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v4;
  a4(a1, a2);
  v9 = v4;
  sub_1ABF312E8();
  return swift_release();
}

void sub_1ABDC3BC4(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _QWORD *v7;
  id v8;
  id v9;
  void *v10;
  _QWORD *v11;
  id v12;
  void *v13;

  sub_1ABF3127C();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v7[5] = v3;
  v8 = a1;
  sub_1ABD1338C(a2);
  v9 = v3;
  v10 = (void *)sub_1ABF31114();
  sub_1ABF31180();
  swift_release();
  swift_release();

  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v8;
  v11[3] = a2;
  v11[4] = a3;
  v12 = v8;
  sub_1ABD1338C(a2);
  v13 = (void *)sub_1ABF31114();
  sub_1ABF311B0();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1ABDC3D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[8];

  v21 = a2;
  v8 = sub_1ABF31594();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1ABF315D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  aBlock[4] = sub_1ABD0B434;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_65;
  v16 = _Block_copy(aBlock);
  sub_1ABD1338C(a3);
  v17 = a5;
  sub_1ABF315AC();
  aBlock[7] = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1ABD1339C(0);
  sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCA0, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_1ABDC3F00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v21 = a2;
  v7 = sub_1ABF31594();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1ABF315D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a1;
  aBlock[4] = sub_1ABDC8B34;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABD127EC;
  aBlock[3] = &block_descriptor_59;
  v16 = _Block_copy(aBlock);
  sub_1ABD1338C(a3);
  v17 = a1;
  sub_1ABF315AC();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED34FB10, v8, MEMORY[0x1E0DEF510]);
  sub_1ABD1339C(0);
  sub_1ABCFE1EC((unint64_t *)&qword_1ED34FCA0, (uint64_t (*)(uint64_t))sub_1ABD1339C, MEMORY[0x1E0DEAF38]);
  sub_1ABF31E04();
  MEMORY[0x1AF437E50](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_1ABDC41B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABD1338C(a1);
  sub_1ABF312E8();
  return swift_release();
}

id sub_1ABDC4218(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers), sel_addObject_, a1);
}

id sub_1ABDC424C(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigObservers), sel_removeObject_, a1);
}

void sub_1ABDC4280(void *a1)
{
  bzero(a1, 0xC30uLL);
}

uint64_t sub_1ABDC4288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABDC42CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABDC42CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34EF18)
  {
    v0 = sub_1ABF31D5C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34EF18);
  }
}

uint64_t sub_1ABDC4320()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

void sub_1ABDC4344()
{
  sub_1ABDC35EC();
}

uint64_t *sub_1ABDC434C(uint64_t a1)
{
  uint64_t *v1;

  v1 = (uint64_t *)MEMORY[0x1E0C80A78](a1);
  sub_1ABD435D8(*v1, v1[1]);
  return v1;
}

uint64_t *sub_1ABDC5A70(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v1 = (uint64_t *)MEMORY[0x1E0C80A78](a1);
  v3 = v1[390];
  v4 = v1[391];
  sub_1ABD435D8(*v1, v1[1]);
  sub_1ABD435D8(v3, v4);
  return v1;
}

uint64_t sub_1ABDC8970()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC10StocksCore24NewsConfigurationManager_appConfigurationManager);
  v2 = v1[3];
  v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
}

uint64_t sub_1ABDC89C8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ABDC8A04(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABDC3D00(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1ABDC8A20()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABDC8A54(void *a1)
{
  uint64_t *v1;

  return sub_1ABDC3F00(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1ABDC8A60()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABDC8A8C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD, _QWORD))(v0 + 16);
  if (v1)
    return v1(MEMORY[0x1E0DEE9D8], 0);
  return result;
}

uint64_t sub_1ABDC8AC0()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABDC8ACC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1ABDC8AD4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1ABDC8B00()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_1ABDC8B34()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD, _QWORD))(v0 + 16);
  if (v1)
    return v1(0, *(_QWORD *)(v0 + 32));
  return result;
}

void sub_1ABDC8B8C(uint64_t *a1@<X8>)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v2 = 0x73752D6E65;
  v3 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  v4 = v3;
  if (!v3)
  {
    v8 = 0xE500000000000000;
LABEL_8:

    v13 = 0xE200000000000000;
    v11 = 21333;
    goto LABEL_9;
  }
  v5 = objc_msgSend(v3, sel_stocksLanguageCode);
  if (v5)
  {
    v6 = v5;
    v2 = sub_1ABF317A4();
    v8 = v7;

  }
  else
  {
    v8 = 0xE500000000000000;
  }
  v9 = objc_msgSend(v4, sel_stocksCountryCode);
  if (!v9)
    goto LABEL_8;
  v10 = v9;
  v11 = sub_1ABF317A4();
  v13 = v12;

LABEL_9:
  *a1 = v2;
  a1[1] = v8;
  a1[2] = v11;
  a1[3] = v13;
}

_QWORD *initializeWithCopy for MultiSizeVideo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for MultiSizeVideo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MultiSizeVideo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LocalizationParameters()
{
  return &type metadata for LocalizationParameters;
}

uint64_t sub_1ABDC8D80()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1ABF305D4();
  if (v1 <= 0x3F)
  {
    result = sub_1ABF30760();
    if (v2 <= 0x3F)
    {
      result = sub_1ABF30B38();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

id sub_1ABDC8E64(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t inited;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id result;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  char *v33;
  void (*v34)(void);
  int v35;
  uint64_t v36;
  void (*v37)(uint64_t *);
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  char *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t *);

  v5 = v4;
  v63 = a2;
  v65 = a1;
  v6 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v7 = (uint64_t *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v4) + qword_1ED368460);
  v8 = v7[1];
  v58 = *v7;
  v57 = v8;
  v50 = type metadata accessor for YahooBaseResponse(255, v58, v8, a4);
  v60 = sub_1ABF31120();
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v10 = (uint64_t *)((char *)&v47 - v9);
  v55 = sub_1ABF30760();
  v52 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v54 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1ABF30B38();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED3511C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v47 - v14;
  v16 = sub_1ABF30184();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v56 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v53 = (char *)&v47 - v20;
  v62 = sub_1ABF305D4();
  v64 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF30568();
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFD8, (uint64_t (*)(uint64_t))sub_1ABD344F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF36EA0;
  *(_QWORD *)(inited + 32) = 1735287148;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v24 = &v5[*(_QWORD *)(qword_1ED368460 + (*v6 & *(_QWORD *)v5) + 48)];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)(inited + 48) = *(_QWORD *)v24;
  *(_QWORD *)(inited + 56) = v25;
  *(_QWORD *)(inited + 64) = 0x6E6F69676572;
  *(_QWORD *)(inited + 72) = 0xE600000000000000;
  v26 = *((_QWORD *)v24 + 3);
  *(_QWORD *)(inited + 80) = *((_QWORD *)v24 + 2);
  *(_QWORD *)(inited + 88) = v26;
  *(_QWORD *)(inited + 96) = 0x74616D726F66;
  *(_QWORD *)(inited + 104) = 0xE600000000000000;
  *(_QWORD *)(inited + 112) = 1852797802;
  *(_QWORD *)(inited + 120) = 0xE400000000000000;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD031C0(inited);
  v27 = sub_1ABF30EEC();
  swift_bridgeObjectRelease();
  result = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  if (result)
  {
    v29 = result;
    v61 = v22;
    v30 = (void *)sub_1ABF30550();
    sub_1ABDEAFD8(v27);
    swift_bridgeObjectRelease();
    v31 = (void *)sub_1ABF31618();
    swift_bridgeObjectRelease();
    v32 = objc_msgSend(v29, sel_signedRequestForURL_parameters_, v30, v31);

    if (v32)
    {
      v33 = v56;
      sub_1ABF3013C();

      v34 = *(void (**)(void))(v17 + 32);
      ((void (*)(char *, char *, uint64_t))v34)(v15, v33, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
      v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
      v36 = v62;
      v37 = v65;
      if (v35 != 1)
      {
        v38 = v53;
        v34();
        MEMORY[0x1AF438F30](&unk_1ABF4F9B8, v50);
        v39 = sub_1ABF30D3C();
        MEMORY[0x1AF438F30](MEMORY[0x1E0DB3BA8], v39);
        v60 = sub_1ABF30D84();
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v33, v38, v16);
        v40 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v51, &v5[*(_QWORD *)(qword_1ED368460 + (*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v5) + 72)], v49);
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v54, &v5[*(_QWORD *)(qword_1ED368460 + (*v40 & *(_QWORD *)v5) + 64)], v55);
        v41 = (void *)sub_1ABF30D6C();
        *(_QWORD *)(swift_allocObject() + 16) = v5;
        v42 = v5;
        sub_1ABF30D48();
        v43 = v41;
        sub_1ABF2FF68();
        sub_1ABF30BF8();

        objc_msgSend(v43, sel_start);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v38, v16);
        return (id)(*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v61, v36);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
      v36 = v62;
      v37 = v65;
    }
    sub_1ABDC99B0((uint64_t)v15);
    v45 = type metadata accessor for YahooBaseOperation.OperationError(0, v58, v57, v44);
    MEMORY[0x1AF438F30](&unk_1ABF3B708, v45);
    *v10 = swift_allocError();
    v46 = v60;
    swift_storeEnumTagMultiPayload();
    v37(v10);
    (*(void (**)(uint64_t *, uint64_t))(v59 + 8))(v10, v46);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v61, v36);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDC9554(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for NetworkEvent();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)((char *)a2 + *(_QWORD *)(qword_1ED368460 + (*MEMORY[0x1E0DEEDD8] & *a2) + 56));
  v8 = v7[3];
  v9 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v8);
  sub_1ABDC9624(a1, (uint64_t)v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, v8, v9);
  return sub_1ABDC9A3C((uint64_t)v6);
}

uint64_t sub_1ABDC9624@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1ABF30F34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for NetworkEvent();
  return swift_storeEnumTagMultiPayload();
}

void sub_1ABDC96AC()
{
  sub_1ABDC9A78();
}

uint64_t sub_1ABDC96D4()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = (char *)v0 + *(_QWORD *)(qword_1ED368460 + (*MEMORY[0x1E0DEEDD8] & *v0) + 24);
  v3 = sub_1ABF305D4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(_QWORD *)(qword_1ED368460 + (*v1 & *v0) + 56));
  v4 = (char *)v0 + *(_QWORD *)(qword_1ED368460 + (*v1 & *v0) + 64);
  v5 = sub_1ABF30760();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v0 + *(_QWORD *)(qword_1ED368460 + (*v1 & *v0) + 72);
  v7 = sub_1ABF30B38();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_1ABDC9838(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = (char *)a1 + *(_QWORD *)(qword_1ED368460 + (*MEMORY[0x1E0DEEDD8] & *a1) + 24);
  v4 = sub_1ABF305D4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + *(_QWORD *)(qword_1ED368460 + (*v2 & *a1) + 56));
  v5 = (char *)a1 + *(_QWORD *)(qword_1ED368460 + (*v2 & *a1) + 64);
  v6 = sub_1ABF30760();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (char *)a1 + *(_QWORD *)(qword_1ED368460 + (*v2 & *a1) + 72);
  v8 = sub_1ABF30B38();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t type metadata accessor for YahooBaseOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseOperation);
}

uint64_t sub_1ABDC99B0(uint64_t a1)
{
  uint64_t v2;

  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED3511C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for YahooBaseOperation.OperationError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for YahooBaseOperation.OperationError);
}

uint64_t sub_1ABDC9A10()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1ABDC9A34(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABDC9554(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1ABDC9A3C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NetworkEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1ABDC9A78()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1ABDC9AA4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1ABDC9AAC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABDC9AEC + 4 * byte_1ABF3B5B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABDC9B0C + 4 * byte_1ABF3B5B5[v4]))();
}

_BYTE *sub_1ABDC9AEC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABDC9B0C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDC9B14(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDC9B1C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDC9B24(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDC9B2C(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1ABDC9B38()
{
  JUMPOUT(0x1AF438F30);
}

uint64_t sub_1ABDC9B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  if (!a2)
    a1 = sub_1ABD16220(0x500000001);
  v5 = a2;
  sub_1ABF2FF5C();
  v6 = sub_1ABD16220(0xF00000005);
  v9 = 0;
  return sub_1ABD15B80(a1, v5, v6, v7, 0x51414453414ELL, 0xE600000000000000, &v9, 0, a3, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1ABDC9BF4()
{
  char v1;

  v1 = 6;
  return sub_1ABD15B80(1229603934, 0xE400000000000000, 0xD00000000000001CLL, 0x80000001ABF597B0, 0, 0xE000000000000000, &v1, 0x656E6F4A20776F44, (uint64_t)&xmmword_1EEC42B50, 0xE900000000000073, 5721924, 0xE300000000000000, 0, 0, 0, 0);
}

uint64_t sub_1ABDC9C84@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F50 != -1)
    swift_once();
  v2 = xmmword_1EEC42BA0;
  v10[6] = xmmword_1EEC42BB0;
  v10[7] = xmmword_1EEC42BC0;
  v3 = xmmword_1EEC42B60;
  v4 = xmmword_1EEC42B70;
  v10[2] = xmmword_1EEC42B70;
  v10[3] = xmmword_1EEC42B80;
  v5 = xmmword_1EEC42B80;
  v6 = xmmword_1EEC42B90;
  v10[4] = xmmword_1EEC42B90;
  v10[5] = xmmword_1EEC42BA0;
  v7 = xmmword_1EEC42B50;
  v10[0] = xmmword_1EEC42B50;
  v10[1] = xmmword_1EEC42B60;
  v8 = xmmword_1EEC42BC0;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42BB0;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC42BD0;
  *(_QWORD *)(a1 + 128) = qword_1EEC42BD0;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

uint64_t sub_1ABDC9D34()
{
  char v1;

  v1 = 3;
  return sub_1ABD15B80(5721924, 0xE300000000000000, 0x6D65684320776F44, 0xED0000736C616369, 0, 0xE000000000000000, &v1, 5721924, (uint64_t)&xmmword_1EEC42BD8, 0xE300000000000000, 5721924, 0xE300000000000000, 0, 0, 0, 0);
}

uint64_t sub_1ABDC9DBC@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F58 != -1)
    swift_once();
  v2 = xmmword_1EEC42C28;
  v10[6] = xmmword_1EEC42C38;
  v10[7] = xmmword_1EEC42C48;
  v3 = xmmword_1EEC42BE8;
  v4 = xmmword_1EEC42BF8;
  v10[2] = xmmword_1EEC42BF8;
  v10[3] = xmmword_1EEC42C08;
  v5 = xmmword_1EEC42C08;
  v6 = xmmword_1EEC42C18;
  v10[4] = xmmword_1EEC42C18;
  v10[5] = xmmword_1EEC42C28;
  v7 = xmmword_1EEC42BD8;
  v10[0] = xmmword_1EEC42BD8;
  v10[1] = xmmword_1EEC42BE8;
  v8 = xmmword_1EEC42C48;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42C38;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC42C58;
  *(_QWORD *)(a1 + 128) = qword_1EEC42C58;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

uint64_t sub_1ABDC9E6C()
{
  char v1;

  v1 = 3;
  return sub_1ABD15B80(1296253505, 0xE400000000000000, 0x6C70206D61636241, 0xE900000000000063, 0, 0xE000000000000000, &v1, 0, (uint64_t)&xmmword_1EEC42C60, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1ABDC9EDC@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F60 != -1)
    swift_once();
  v2 = xmmword_1EEC42CB0;
  v10[6] = xmmword_1EEC42CC0;
  v10[7] = xmmword_1EEC42CD0;
  v3 = xmmword_1EEC42C70;
  v4 = xmmword_1EEC42C80;
  v10[2] = xmmword_1EEC42C80;
  v10[3] = xmmword_1EEC42C90;
  v5 = xmmword_1EEC42C90;
  v6 = xmmword_1EEC42CA0;
  v10[4] = xmmword_1EEC42CA0;
  v10[5] = xmmword_1EEC42CB0;
  v7 = xmmword_1EEC42C60;
  v10[0] = xmmword_1EEC42C60;
  v10[1] = xmmword_1EEC42C70;
  v8 = xmmword_1EEC42CD0;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42CC0;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC42CE0;
  *(_QWORD *)(a1 + 128) = qword_1EEC42CE0;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

uint64_t sub_1ABDC9F8C()
{
  char v1;

  v1 = 3;
  return sub_1ABD15B80(1279476289, 0xE400000000000000, 0xD000000000000011, 0x80000001ABF59790, 0, 0xE000000000000000, &v1, 0, (uint64_t)&xmmword_1EEC42CE8, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1ABDC9FFC@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F68 != -1)
    swift_once();
  v2 = xmmword_1EEC42D38;
  v10[6] = xmmword_1EEC42D48;
  v10[7] = xmmword_1EEC42D58;
  v3 = xmmword_1EEC42CF8;
  v4 = xmmword_1EEC42D08;
  v10[2] = xmmword_1EEC42D08;
  v10[3] = xmmword_1EEC42D18;
  v5 = xmmword_1EEC42D18;
  v6 = xmmword_1EEC42D28;
  v10[4] = xmmword_1EEC42D28;
  v10[5] = xmmword_1EEC42D38;
  v7 = xmmword_1EEC42CE8;
  v10[0] = xmmword_1EEC42CE8;
  v10[1] = xmmword_1EEC42CF8;
  v8 = xmmword_1EEC42D58;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42D48;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC42D68;
  *(_QWORD *)(a1 + 128) = qword_1EEC42D68;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

uint64_t sub_1ABDCA0AC()
{
  char v1;

  v1 = 3;
  return sub_1ABD15B80(16706, 0xE200000000000000, 0xD000000000000012, 0x80000001ABF59770, 0, 0xE000000000000000, &v1, 0, (uint64_t)&xmmword_1EEC42D70, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1ABDCA118@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F70 != -1)
    swift_once();
  v2 = xmmword_1EEC42DC0;
  v10[6] = xmmword_1EEC42DD0;
  v10[7] = xmmword_1EEC42DE0;
  v3 = xmmword_1EEC42D80;
  v4 = xmmword_1EEC42D90;
  v10[2] = xmmword_1EEC42D90;
  v10[3] = xmmword_1EEC42DA0;
  v5 = xmmword_1EEC42DA0;
  v6 = xmmword_1EEC42DB0;
  v10[4] = xmmword_1EEC42DB0;
  v10[5] = xmmword_1EEC42DC0;
  v7 = xmmword_1EEC42D70;
  v10[0] = xmmword_1EEC42D70;
  v10[1] = xmmword_1EEC42D80;
  v8 = xmmword_1EEC42DE0;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42DD0;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC42DF0;
  *(_QWORD *)(a1 + 128) = qword_1EEC42DF0;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

uint64_t sub_1ABDCA1C8()
{
  char v1;

  v1 = 6;
  return sub_1ABD15B80(0x3532324E5ELL, 0xE500000000000000, 0xD000000000000010, 0x80000001ABF59750, 0, 0xE000000000000000, &v1, 0, (uint64_t)&xmmword_1EEC42DF8, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1ABDCA23C@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F78 != -1)
    swift_once();
  v2 = xmmword_1EEC42E48;
  v10[6] = xmmword_1EEC42E58;
  v10[7] = xmmword_1EEC42E68;
  v3 = xmmword_1EEC42E08;
  v4 = xmmword_1EEC42E18;
  v10[2] = xmmword_1EEC42E18;
  v10[3] = xmmword_1EEC42E28;
  v5 = xmmword_1EEC42E28;
  v6 = xmmword_1EEC42E38;
  v10[4] = xmmword_1EEC42E38;
  v10[5] = xmmword_1EEC42E48;
  v7 = xmmword_1EEC42DF8;
  v10[0] = xmmword_1EEC42DF8;
  v10[1] = xmmword_1EEC42E08;
  v8 = xmmword_1EEC42E68;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42E58;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC42E78;
  *(_QWORD *)(a1 + 128) = qword_1EEC42E78;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

uint64_t sub_1ABDCA2EC()
{
  char v1;

  v1 = 3;
  return sub_1ABD15B80(0x4B2E303039313530, 0xE900000000000053, 0x1000000000000013, 0x80000001ABF59730, 0, 0xE000000000000000, &v1, 0, (uint64_t)&xmmword_1EEC42E80, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_1ABDCA368@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[8];
  uint64_t v11;

  if (qword_1EEC40F80 != -1)
    swift_once();
  v2 = xmmword_1EEC42ED0;
  v10[6] = xmmword_1EEC42EE0;
  v10[7] = xmmword_1EEC42EF0;
  v3 = xmmword_1EEC42E90;
  v4 = xmmword_1EEC42EA0;
  v10[2] = xmmword_1EEC42EA0;
  v10[3] = xmmword_1EEC42EB0;
  v5 = xmmword_1EEC42EB0;
  v6 = xmmword_1EEC42EC0;
  v10[4] = xmmword_1EEC42EC0;
  v10[5] = xmmword_1EEC42ED0;
  v7 = xmmword_1EEC42E80;
  v10[0] = xmmword_1EEC42E80;
  v10[1] = xmmword_1EEC42E90;
  v8 = xmmword_1EEC42EF0;
  *(_OWORD *)(a1 + 96) = xmmword_1EEC42EE0;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  v11 = qword_1EEC42F00;
  *(_QWORD *)(a1 + 128) = qword_1EEC42F00;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v3;
  return sub_1ABD97ECC((uint64_t)v10);
}

id sub_1ABDCA418(void *a1, uint64_t a2, void *a3, int a4)
{
  id v4;
  char *v7;
  void *v8;
  unint64_t v9;
  id v10;
  unsigned int v11;
  id v12;
  id v13;
  void *v14;
  id v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[24];
  uint64_t v20;

  v4 = a3;
  if (a3)
  {
    v7 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v7, v7 + 1))
    {
      sub_1ABF31DD4();
      swift_unknownObjectRelease();
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    sub_1ABD22B10((uint64_t)&v17, (uint64_t)v19);
    if (v20)
    {
      sub_1ABD22AD4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = v16;
        v9 = (unint64_t)objc_msgSend(v16, sel_integerValue);
        if (v9 == -1)
          goto LABEL_19;
        goto LABEL_11;
      }
    }
    else
    {
      sub_1ABD6B430((uint64_t)v19);
    }
    v8 = 0;
    v9 = 0;
LABEL_11:
    if (objc_getAssociatedObject(v7, (const void *)~v9))
    {
      sub_1ABF31DD4();
      swift_unknownObjectRelease();
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    sub_1ABD22B10((uint64_t)&v17, (uint64_t)v19);
    if (v20)
    {
      sub_1ABD22AD4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v10 = v16;
        v11 = objc_msgSend(v10, sel_integerValue);

        if ((((v11 - a4) ^ ((_DWORD)v9 + a4)) & 1) == 0)
          return 0;
        goto LABEL_17;
      }
    }
    else
    {
      sub_1ABD6B430((uint64_t)v19);
    }
LABEL_19:

    if (((((_DWORD)v9 + a4) ^ a4) & 1) == 0)
      return 0;
LABEL_17:
    v12 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    v13 = objc_msgSend(v12, sel_bundleChannelIDs);

    v14 = (void *)sub_1ABF31780();
    v4 = objc_msgSend(v13, sel_containsObject_, v14);

  }
  return v4;
}

BOOL AccessCheckerHasAccess(_:toItemPaid:isBundlePaid:channelID:lineNumber:)(id a1, char a2, char a3, uint64_t a4, uint64_t a5, int a6)
{
  id v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v15;
  unint64_t v16;
  id v17;
  unsigned int v18;
  id v19;
  id v20;
  void *v21;
  unsigned __int8 v22;
  id v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[24];
  uint64_t v28;

  if ((a2 & 1) != 0)
  {
    v11 = objc_msgSend(a1, sel_purchaseProvider);
    if (!a5)
    {
      swift_unknownObjectRelease();
      return 0;
    }
    v12 = objc_msgSend(v11, sel_purchasedTagIDs);
    v13 = sub_1ABF31B1C();

    LOBYTE(v12) = sub_1ABD0DC3C(a4, a5, v13);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      if ((a3 & 1) == 0)
        return 0;
      goto LABEL_8;
    }
    return 1;
  }
  if ((a3 & 1) == 0)
    return 1;
  if (!a5)
    return 0;
LABEL_8:
  v14 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v14, v14 + 1))
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v25, (uint64_t)v27);
  if (!v28)
  {
    sub_1ABD6B430((uint64_t)v27);
    goto LABEL_17;
  }
  sub_1ABD22AD4();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    v15 = 0;
    v16 = 0;
    goto LABEL_18;
  }
  v15 = v24;
  v16 = (unint64_t)objc_msgSend(v24, sel_integerValue);
  if (v16 == -1)
  {
LABEL_26:

    if (((((_DWORD)v16 + a6) ^ a6) & 1) == 0)
      return 0;
    goto LABEL_27;
  }
LABEL_18:
  if (objc_getAssociatedObject(v14, (const void *)~v16))
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v25 = 0u;
    v26 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v25, (uint64_t)v27);
  if (!v28)
  {
    sub_1ABD6B430((uint64_t)v27);
    goto LABEL_26;
  }
  sub_1ABD22AD4();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_26;
  v17 = v24;
  v18 = objc_msgSend(v17, sel_integerValue);

  if ((((v18 - a6) ^ ((_DWORD)v16 + a6)) & 1) == 0)
    return 0;
LABEL_27:
  v19 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v20 = objc_msgSend(v19, sel_bundleChannelIDs);

  v21 = (void *)sub_1ABF31780();
  v22 = objc_msgSend(v20, sel_containsObject_, v21);

  return (v22 & 1) != 0;
}

BOOL AccessCheckerHasAccess(_:to:lineNumber:)(void *a1, id a2, int a3)
{
  unsigned __int8 v6;
  unsigned int v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  char *v17;
  void *v18;
  unint64_t v19;
  id v20;
  unsigned int v21;
  id v22;
  id v23;
  void *v24;
  unsigned __int8 v25;
  id v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[24];
  uint64_t v30;

  v6 = objc_msgSend(a2, sel_isPaid);
  if ((objc_msgSend(a2, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v7 = objc_msgSend(a2, sel_isBundlePaid);
  else
    v7 = 0;
  v8 = objc_msgSend(a2, sel_sourceChannel);
  v9 = (uint64_t)v8;
  if (v8)
  {
    v10 = objc_msgSend(v8, sel_identifier);
    swift_unknownObjectRelease();
    v11 = sub_1ABF317A4();
    v9 = v12;

    if ((v6 & 1) != 0)
      goto LABEL_6;
LABEL_11:
    if ((v7 & 1) != 0)
      goto LABEL_15;
    goto LABEL_12;
  }
  v11 = 0;
  if ((v6 & 1) == 0)
    goto LABEL_11;
LABEL_6:
  v13 = objc_msgSend(a1, sel_purchaseProvider);
  if (v9)
  {
    v14 = objc_msgSend(v13, sel_purchasedTagIDs);
    v15 = sub_1ABF31B1C();

    LOBYTE(v14) = sub_1ABD0DC3C(v11, v9, v15);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      if (!v7)
        goto LABEL_35;
      goto LABEL_15;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 1;
  }
  swift_unknownObjectRelease();
  if (!v7)
    goto LABEL_35;
LABEL_15:
  if (v9)
  {
    v17 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    if (objc_getAssociatedObject(v17, v17 + 1))
    {
      sub_1ABF31DD4();
      swift_unknownObjectRelease();
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }
    sub_1ABD22B10((uint64_t)&v27, (uint64_t)v29);
    if (v30)
    {
      sub_1ABD22AD4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v18 = v26;
        v19 = (unint64_t)objc_msgSend(v26, sel_integerValue);
        if (v19 == -1)
        {
LABEL_34:

          if (((((_DWORD)v19 + a3) ^ a3) & 1) == 0)
            goto LABEL_35;
          goto LABEL_31;
        }
        goto LABEL_25;
      }
    }
    else
    {
      sub_1ABD6B430((uint64_t)v29);
    }
    v18 = 0;
    v19 = 0;
LABEL_25:
    if (objc_getAssociatedObject(v17, (const void *)~v19))
    {
      sub_1ABF31DD4();
      swift_unknownObjectRelease();
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }
    sub_1ABD22B10((uint64_t)&v27, (uint64_t)v29);
    if (!v30)
    {
      sub_1ABD6B430((uint64_t)v29);
      goto LABEL_34;
    }
    sub_1ABD22AD4();
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_34;
    v20 = v26;
    v21 = objc_msgSend(v20, sel_integerValue);

    if ((((v21 - a3) ^ ((_DWORD)v19 + a3)) & 1) != 0)
    {
LABEL_31:
      v22 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
      swift_unknownObjectRelease();
      v23 = objc_msgSend(v22, sel_bundleChannelIDs);

      v24 = (void *)sub_1ABF31780();
      v25 = objc_msgSend(v23, sel_containsObject_, v24);
      swift_bridgeObjectRelease();

      return (v25 & 1) != 0;
    }
LABEL_35:
    swift_bridgeObjectRelease();
  }
  return 0;
}

{
  unsigned __int8 v6;
  unsigned __int8 v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v16;
  unint64_t v17;
  id v18;
  unsigned int v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  uint64_t v27;

  v6 = objc_msgSend(a2, sel_isPaid);
  v7 = objc_msgSend(a2, sel_isBundlePaid);
  v8 = objc_msgSend(objc_msgSend(a2, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  v9 = sub_1ABF317A4();
  v11 = v10;

  if ((v6 & 1) == 0)
  {
    if ((v7 & 1) != 0)
      goto LABEL_6;
LABEL_8:
    swift_bridgeObjectRelease();
    return 1;
  }
  v12 = objc_msgSend(objc_msgSend(a1, sel_purchaseProvider), sel_purchasedTagIDs);
  v13 = sub_1ABF31B1C();

  LOBYTE(v12) = sub_1ABD0DC3C(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_8;
  if ((v7 & 1) == 0)
    goto LABEL_27;
LABEL_6:
  v14 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v14, v14 + 1))
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v24, (uint64_t)v26);
  if (!v27)
  {
    sub_1ABD6B430((uint64_t)v26);
    goto LABEL_16;
  }
  sub_1ABD22AD4();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    v16 = 0;
    v17 = 0;
    goto LABEL_17;
  }
  v16 = v23;
  v17 = (unint64_t)objc_msgSend(v23, sel_integerValue);
  if (v17 == -1)
  {
LABEL_26:

    if (((((_DWORD)v17 + a3) ^ a3) & 1) == 0)
      goto LABEL_27;
    goto LABEL_23;
  }
LABEL_17:
  if (objc_getAssociatedObject(v14, (const void *)~v17))
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v24, (uint64_t)v26);
  if (!v27)
  {
    sub_1ABD6B430((uint64_t)v26);
    goto LABEL_26;
  }
  sub_1ABD22AD4();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_26;
  v18 = v23;
  v19 = objc_msgSend(v18, sel_integerValue);

  if ((((v19 - a3) ^ ((_DWORD)v17 + a3)) & 1) != 0)
  {
LABEL_23:
    v20 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    v21 = objc_msgSend(v20, sel_bundleChannelIDs);

    v22 = (void *)sub_1ABF31780();
    LOBYTE(v20) = objc_msgSend(v21, sel_containsObject_, v22);
    swift_bridgeObjectRelease();

    return (v20 & 1) != 0;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t AccessCheckerHasAccess(_:with:lineNumber:)(void *a1, void *a2, int a3)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  char *v15;
  void *v16;
  unint64_t v17;
  id v18;
  unsigned int v19;
  id v20;
  id v21;
  id v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  uint64_t v27;

  v6 = objc_msgSend(a1, sel_purchaseProvider);
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
  {
    v7 = objc_msgSend(a2, sel_asSection);
    if (!v7
      || (v8 = objc_msgSend(v7, sel_parentID), swift_unknownObjectRelease(), !v8))
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    v8 = objc_msgSend(a2, sel_identifier);
  }
  v9 = sub_1ABF317A4();
  v11 = v10;

  v12 = objc_msgSend(v6, sel_purchasedTagIDs);
  v13 = sub_1ABF31B1C();

  LOBYTE(v12) = sub_1ABD0DC3C(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    return 1;
LABEL_8:
  v15 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v15, v15 + 1))
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    sub_1ABD22AD4();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v16 = v23;
      v17 = (unint64_t)objc_msgSend(v23, sel_integerValue);
      if (v17 == -1)
        goto LABEL_27;
      goto LABEL_17;
    }
  }
  else
  {
    sub_1ABD6B430((uint64_t)v26);
  }
  v16 = 0;
  v17 = 0;
LABEL_17:
  if (objc_getAssociatedObject(v15, (const void *)~v17))
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    sub_1ABD22AD4();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v18 = v23;
      v19 = objc_msgSend(v18, sel_integerValue);

      if ((((v19 - a3) ^ ((_DWORD)v17 + a3)) & 1) == 0)
        return 0;
      goto LABEL_23;
    }
  }
  else
  {
    sub_1ABD6B430((uint64_t)v26);
  }
LABEL_27:

  if (((((_DWORD)v17 + a3) ^ a3) & 1) == 0)
    return 0;
LABEL_23:
  v20 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v21 = objc_msgSend(a2, sel_identifier);
  if (!v21)
  {
    sub_1ABF317A4();
    v21 = (id)sub_1ABF31780();
    swift_bridgeObjectRelease();
  }
  v14 = objc_msgSend(v20, sel_containsTagID_, v21);

  return (uint64_t)v14;
}

uint64_t sub_1ABDCB55C(uint64_t a1)
{
  return sub_1ABDCB5C4(a1, qword_1ED34C4D8);
}

uint64_t sub_1ABDCB580@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABDCB654(&qword_1ED347358, (uint64_t)qword_1ED34C4D8, a1);
}

uint64_t sub_1ABDCB59C(uint64_t a1)
{
  return sub_1ABDCB5C4(a1, qword_1ED347340);
}

uint64_t sub_1ABDCB5C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1ABF3133C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1ABF31330();
}

uint64_t sub_1ABDCB638@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABDCB654(&qword_1ED34C2E0, (uint64_t)qword_1ED347340, a1);
}

uint64_t sub_1ABDCB654@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1ABF3133C();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1ABDCB6BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABDCB654(&qword_1ED34FAD8, (uint64_t)qword_1ED34E920, a1);
}

uint64_t sub_1ABDCB6D8(uint64_t a1)
{
  return sub_1ABD04C04(a1, qword_1ED3683B0);
}

uint64_t sub_1ABDCB6FC(uint64_t a1)
{
  return sub_1ABD04C04(a1, qword_1ED368360);
}

uint64_t sub_1ABDCB720(uint64_t a1)
{
  return sub_1ABD04C04(a1, qword_1ED34E648);
}

uint64_t sub_1ABDCB744@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABDCB654(&qword_1ED34E660, (uint64_t)qword_1ED34E648, a1);
}

id sub_1ABDCB760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _BYTE v13[40];
  _BYTE v14[24];
  uint64_t v15;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  sub_1ABD07E04(v1 + 32, (uint64_t)v14);
  sub_1ABD07E04(v1 + 72, (uint64_t)v13);
  v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)&v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
  v10 = *v8;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  v11 = sub_1ABDCB8A0(v3, v4, v10, (uint64_t)v13, a1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return v11;
}

uint64_t sub_1ABDCB844()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SparklineOperationFactory()
{
  return objc_opt_self();
}

id sub_1ABDCB8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  objc_super v21;
  _QWORD v22[5];
  _QWORD v23[5];

  v10 = type metadata accessor for YahooChartModelEngine();
  v23[3] = v10;
  v23[4] = &off_1E5AEB810;
  v23[0] = a3;
  v11 = (objc_class *)type metadata accessor for SparklineOperation();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v10);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  v18 = *v16;
  v22[3] = v10;
  v22[4] = &off_1E5AEB810;
  v22[0] = v18;
  *(_QWORD *)&v12[qword_1ED34D478] = a1;
  *(_QWORD *)&v12[qword_1ED34D470] = a2;
  sub_1ABD07E04((uint64_t)v22, (uint64_t)&v12[qword_1ED34D460]);
  sub_1ABD07E04(a4, (uint64_t)&v12[qword_1ED34D468]);
  *(_QWORD *)&v12[qword_1ED34D480] = a5;
  v21.receiver = v12;
  v21.super_class = v11;
  v19 = objc_msgSendSuper2(&v21, sel_init);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v19;
}

uint64_t sub_1ABDCB9FC()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1ABD033EC();
  return v0;
}

uint64_t sub_1ABDCBA30()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABDCBA38()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1ABDCBA54()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABDCBA78()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABDCBA84()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1ABDCBA8C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1ABDCBA94()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1ABDCBA9C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_1ABDCBAA4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t sub_1ABDCBAAC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1ABDCBAB4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1ABDCBABC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_1ABDCBAC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDCBAF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDCBB1C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDCBB48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDCBB74()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDCBBA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDCBBCC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t sub_1ABDCBBD4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152);
}

uint64_t sub_1ABDCBBDC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 160);
}

uint64_t sub_1ABDCBBE4()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABDCBBEC()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABDCBBF4()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABDCBBFC()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABDCBC04()
{
  return sub_1ABF2FF5C();
}

_QWORD *sub_1ABDCBC0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[21];

  sub_1ABDCBC58(v1 + 208, (uint64_t)v4);
  sub_1ABDCBC58((uint64_t)v4, a1);
  return sub_1ABDCF168(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD1A564);
}

uint64_t sub_1ABDCBC58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD04578(0, &qword_1ED34EDD8, (uint64_t)&type metadata for FlexiblePaywall, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABDCBCB4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 376);
}

uint64_t sub_1ABDCBCC4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 392);
}

uint64_t sub_1ABDCBCD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 408);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDCBD00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 424);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDCBD2C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 440);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDCBD58()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 456);
}

uint64_t sub_1ABDCBD60()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 464);
}

uint64_t sub_1ABDCBD68()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 472);
}

uint64_t sub_1ABDCBD70()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 480);
}

uint64_t sub_1ABDCBD78()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 481);
}

uint64_t sub_1ABDCBD80()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 488);
}

uint64_t sub_1ABDCBD88()
{
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABDCBD90()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 504);
}

uint64_t sub_1ABDCBD98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1ABCF92FC(*a1);
  v5 = v4;
  if (v3 == sub_1ABCF92FC(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABDCBE20()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABCF92FC(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDCBE80()
{
  unsigned __int8 *v0;

  sub_1ABCF92FC(*v0);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDCBEC0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABCF92FC(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDCBF1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDCEFF4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABDCBF48@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABCF92FC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABDCBF70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDCEFF4();
  *a1 = result;
  return result;
}

void sub_1ABDCBF94(_BYTE *a1@<X8>)
{
  *a1 = 37;
}

uint64_t sub_1ABDCBFA0()
{
  sub_1ABD107D0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDCBFC8()
{
  sub_1ABD107D0();
  return sub_1ABF32398();
}

uint64_t sub_1ABDCBFF0@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  char v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  unint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  unint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  unint64_t v110;
  unint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  unint64_t v114;
  unint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  unint64_t v118;
  unint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  unint64_t v122;
  unint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  unint64_t v126;
  unint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  unint64_t v130;
  unint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  unint64_t v134;
  unint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  unint64_t v138;
  unint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  unint64_t v142;
  unint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  unint64_t v146;
  unint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  unint64_t v150;
  unint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  unint64_t v154;
  unint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  unint64_t v158;
  unint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  _QWORD *v162;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  int v171;
  unint64_t v172;
  int v173;
  int v174;
  int v175;
  unint64_t v176;
  int v177;
  unint64_t v178;
  int v179;
  unint64_t v180;
  unint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  int v187;
  unint64_t v188;
  int v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  int v215;
  int v216;
  uint64_t v217;
  int v218;
  int v219;
  int v220;
  int v221;
  uint64_t v222;
  char *v223;
  void *v224;
  uint64_t v225;
  _QWORD *v226;
  unint64_t v227;
  uint64_t v228;
  _BYTE v229[512];
  uint64_t v230;
  char v231;
  _BYTE v232[168];
  _BYTE v233[168];
  _BYTE v234[168];
  uint64_t v235;
  uint64_t v236;
  char v237;
  _QWORD *v238;

  sub_1ABD104B4(0, &qword_1ED34FE98, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v170 - v8;
  v10 = a1[3];
  v226 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1ABD107D0();
  sub_1ABF3235C();
  if (!v2)
  {
    v224 = a2;
    v225 = v7;
    v238 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v234[0] = 0;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v12 = v11;
    sub_1ABD1056C((unint64_t *)&qword_1ED34FCC8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1ABF320C8();
    v223 = v9;
    v13 = v235;
    if (!v235)
    {
      swift_beginAccess();
      v14 = v238;
      v15 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD12054(0, v14[2] + 1, 1, v14);
      v17 = v14[2];
      v16 = v14[3];
      if (v17 >= v16 >> 1)
        v14 = sub_1ABD12054((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      v14[2] = v17 + 1;
      v18 = &v14[2 * v17];
      v18[4] = 0xD000000000000015;
      v18[5] = 0x80000001ABF53330;
      v238 = v14;
      swift_endAccess();
      v12 = v15;
    }
    v234[0] = 1;
    sub_1ABF320C8();
    v222 = v12;
    v19 = v235;
    if (!v235)
    {
      swift_beginAccess();
      v20 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1ABD12054(0, v20[2] + 1, 1, v20);
      v22 = v20[2];
      v21 = v20[3];
      if (v22 >= v21 >> 1)
        v20 = sub_1ABD12054((_QWORD *)(v21 > 1), v22 + 1, 1, v20);
      v20[2] = v22 + 1;
      v23 = &v20[2 * v22];
      v23[4] = 0xD000000000000012;
      v23[5] = 0x80000001ABF53350;
      v238 = v20;
      swift_endAccess();
    }
    LOBYTE(v235) = 2;
    sub_1ABF320C8();
    v221 = v234[0];
    if (v234[0] == 2)
    {
      swift_beginAccess();
      v24 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_1ABD12054(0, v24[2] + 1, 1, v24);
      v26 = v24[2];
      v25 = v24[3];
      if (v26 >= v25 >> 1)
        v24 = sub_1ABD12054((_QWORD *)(v25 > 1), v26 + 1, 1, v24);
      v24[2] = v26 + 1;
      v27 = &v24[2 * v26];
      v27[4] = 0xD000000000000010;
      v27[5] = 0x80000001ABF53370;
      v238 = v24;
      swift_endAccess();
    }
    LOBYTE(v235) = 3;
    sub_1ABF320C8();
    v220 = v234[0];
    if (v234[0] == 2)
    {
      swift_beginAccess();
      v28 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_1ABD12054(0, v28[2] + 1, 1, v28);
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
        v28 = sub_1ABD12054((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
      v28[2] = v30 + 1;
      v31 = &v28[2 * v30];
      v31[4] = 0xD000000000000010;
      v31[5] = 0x80000001ABF53390;
      v238 = v28;
      swift_endAccess();
    }
    LOBYTE(v235) = 4;
    sub_1ABF320C8();
    v219 = v234[0];
    if (v234[0] == 2)
    {
      swift_beginAccess();
      v32 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v32 = sub_1ABD12054(0, v32[2] + 1, 1, v32);
      v34 = v32[2];
      v33 = v32[3];
      if (v34 >= v33 >> 1)
        v32 = sub_1ABD12054((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
      v32[2] = v34 + 1;
      v35 = &v32[2 * v34];
      v35[4] = 0xD00000000000001CLL;
      v35[5] = 0x80000001ABF533B0;
      v238 = v32;
      swift_endAccess();
    }
    LOBYTE(v235) = 5;
    sub_1ABF320C8();
    v218 = v234[0];
    if (v234[0] == 2)
    {
      swift_beginAccess();
      v36 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v36 = sub_1ABD12054(0, v36[2] + 1, 1, v36);
      v38 = v36[2];
      v37 = v36[3];
      if (v38 >= v37 >> 1)
        v36 = sub_1ABD12054((_QWORD *)(v37 > 1), v38 + 1, 1, v36);
      v36[2] = v38 + 1;
      v39 = &v36[2 * v38];
      v39[4] = 0xD00000000000001CLL;
      v39[5] = 0x80000001ABF533D0;
      v238 = v36;
      swift_endAccess();
    }
    v234[0] = 6;
    sub_1ABF320C8();
    v217 = v235;
    v216 = v236;
    if ((v236 & 1) != 0)
    {
      swift_beginAccess();
      v40 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v40 = sub_1ABD12054(0, v40[2] + 1, 1, v40);
      v42 = v40[2];
      v41 = v40[3];
      if (v42 >= v41 >> 1)
        v40 = sub_1ABD12054((_QWORD *)(v41 > 1), v42 + 1, 1, v40);
      v40[2] = v42 + 1;
      v43 = (char *)&v40[2 * v42];
      strcpy(v43 + 32, "enabledLevel");
      v43[45] = 0;
      *((_WORD *)v43 + 23) = -5120;
      v238 = v40;
      swift_endAccess();
    }
    LOBYTE(v235) = 7;
    sub_1ABF320C8();
    v215 = v234[0];
    if (v234[0] == 2)
    {
      swift_beginAccess();
      v45 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v45 = sub_1ABD12054(0, v45[2] + 1, 1, v45);
      v47 = v45[2];
      v46 = v45[3];
      if (v47 >= v46 >> 1)
        v45 = sub_1ABD12054((_QWORD *)(v46 > 1), v47 + 1, 1, v45);
      v45[2] = v47 + 1;
      v48 = &v45[2 * v47];
      v48[4] = 0xD000000000000019;
      v48[5] = 0x80000001ABF53400;
      v238 = v45;
      swift_endAccess();
    }
    v234[0] = 8;
    sub_1ABF320C8();
    v213 = v235;
    v214 = v19;
    v49 = v236;
    if ((v236 & 1) != 0)
    {
      swift_beginAccess();
      v50 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v50 = sub_1ABD12054(0, v50[2] + 1, 1, v50);
      v52 = v50[2];
      v51 = v50[3];
      if (v52 >= v51 >> 1)
        v50 = sub_1ABD12054((_QWORD *)(v51 > 1), v52 + 1, 1, v50);
      v50[2] = v52 + 1;
      v53 = &v50[2 * v52];
      v53[4] = 0xD000000000000026;
      v53[5] = 0x80000001ABF53420;
      v238 = v50;
      swift_endAccess();
    }
    v234[0] = 9;
    sub_1ABF320C8();
    v212 = v235;
    v54 = v236;
    if (!v236)
    {
      swift_beginAccess();
      v55 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v55 = sub_1ABD12054(0, v55[2] + 1, 1, v55);
      v57 = v55[2];
      v56 = v55[3];
      if (v57 >= v56 >> 1)
        v55 = sub_1ABD12054((_QWORD *)(v56 > 1), v57 + 1, 1, v55);
      v55[2] = v57 + 1;
      v58 = &v55[2 * v57];
      v58[4] = 0x6C63697472416564;
      v58[5] = 0xEB00000000444965;
      v238 = v55;
      swift_endAccess();
    }
    v234[0] = 10;
    sub_1ABF320C8();
    v210 = v235;
    v211 = v236;
    if (!v236)
    {
      swift_beginAccess();
      v59 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v59 = sub_1ABD12054(0, v59[2] + 1, 1, v59);
      v61 = v59[2];
      v60 = v59[3];
      if (v61 >= v60 >> 1)
        v59 = sub_1ABD12054((_QWORD *)(v60 > 1), v61 + 1, 1, v59);
      v59[2] = v61 + 1;
      v62 = &v59[2 * v61];
      v62[4] = 0x6C63697472416572;
      v62[5] = 0xEB00000000444965;
      v238 = v59;
      swift_endAccess();
    }
    v234[0] = 11;
    sub_1ABF320C8();
    v208 = v235;
    v209 = v236;
    if (!v236)
    {
      swift_beginAccess();
      v63 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v63 = sub_1ABD12054(0, v63[2] + 1, 1, v63);
      v65 = v63[2];
      v64 = v63[3];
      if (v65 >= v64 >> 1)
        v63 = sub_1ABD12054((_QWORD *)(v64 > 1), v65 + 1, 1, v63);
      v63[2] = v65 + 1;
      v66 = &v63[2 * v65];
      v66[4] = 0x6C63697472416873;
      v66[5] = 0xEB00000000444965;
      v238 = v63;
      swift_endAccess();
    }
    v234[0] = 12;
    sub_1ABF320C8();
    v206 = v235;
    v207 = v236;
    if (!v236)
    {
      swift_beginAccess();
      v67 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v67 = sub_1ABD12054(0, v67[2] + 1, 1, v67);
      v69 = v67[2];
      v68 = v67[3];
      if (v69 >= v68 >> 1)
        v67 = sub_1ABD12054((_QWORD *)(v68 > 1), v69 + 1, 1, v67);
      v67[2] = v69 + 1;
      v70 = &v67[2 * v69];
      v70[4] = 0xD000000000000028;
      v70[5] = 0x80000001ABF53470;
      v238 = v67;
      swift_endAccess();
    }
    v234[0] = 13;
    sub_1ABF320C8();
    v204 = v235;
    v205 = v236;
    if (!v236)
    {
      swift_beginAccess();
      v71 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v71 = sub_1ABD12054(0, v71[2] + 1, 1, v71);
      v73 = v71[2];
      v72 = v71[3];
      if (v73 >= v72 >> 1)
        v71 = sub_1ABD12054((_QWORD *)(v72 > 1), v73 + 1, 1, v71);
      v71[2] = v73 + 1;
      v74 = &v71[2 * v73];
      v74[4] = 0xD00000000000002ALL;
      v74[5] = 0x80000001ABF534A0;
      v238 = v71;
      swift_endAccess();
    }
    v234[0] = 14;
    sub_1ABF320C8();
    v202 = v235;
    v203 = v236;
    if (!v236)
    {
      swift_beginAccess();
      v75 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v75 = sub_1ABD12054(0, v75[2] + 1, 1, v75);
      v77 = v75[2];
      v76 = v75[3];
      if (v77 >= v76 >> 1)
        v75 = sub_1ABD12054((_QWORD *)(v76 > 1), v77 + 1, 1, v75);
      v75[2] = v77 + 1;
      v78 = &v75[2 * v77];
      v78[4] = 0xD00000000000001ALL;
      v78[5] = 0x80000001ABF534D0;
      v238 = v75;
      swift_endAccess();
    }
    v234[0] = 15;
    sub_1ABF320C8();
    v201 = v235;
    v200 = v236;
    if ((v236 & 1) != 0)
    {
      swift_beginAccess();
      v79 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v79 = sub_1ABD12054(0, v79[2] + 1, 1, v79);
      v81 = v79[2];
      v80 = v79[3];
      if (v81 >= v80 >> 1)
        v79 = sub_1ABD12054((_QWORD *)(v80 > 1), v81 + 1, 1, v79);
      v79[2] = v81 + 1;
      v82 = &v79[2 * v81];
      v82[4] = 0xD000000000000020;
      v82[5] = 0x80000001ABF534F0;
      v238 = v79;
      swift_endAccess();
    }
    v234[0] = 16;
    sub_1ABF320C8();
    v199 = v235;
    v198 = v236;
    if ((v236 & 1) != 0)
    {
      swift_beginAccess();
      v83 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v83 = sub_1ABD12054(0, v83[2] + 1, 1, v83);
      v85 = v83[2];
      v84 = v83[3];
      if (v85 >= v84 >> 1)
        v83 = sub_1ABD12054((_QWORD *)(v84 > 1), v85 + 1, 1, v83);
      v83[2] = v85 + 1;
      v86 = &v83[2 * v85];
      v86[4] = 0xD00000000000002CLL;
      v86[5] = 0x80000001ABF53520;
      v238 = v83;
      swift_endAccess();
    }
    v234[0] = 17;
    sub_1ABF320C8();
    v197 = v235;
    v196 = v236;
    if ((v236 & 1) != 0)
    {
      swift_beginAccess();
      v87 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v87 = sub_1ABD12054(0, v87[2] + 1, 1, v87);
      v89 = v87[2];
      v88 = v87[3];
      if (v89 >= v88 >> 1)
        v87 = sub_1ABD12054((_QWORD *)(v88 > 1), v89 + 1, 1, v87);
      v87[2] = v89 + 1;
      v90 = &v87[2 * v89];
      v90[4] = 0xD000000000000027;
      v90[5] = 0x80000001ABF53550;
      v238 = v87;
      swift_endAccess();
    }
    v234[0] = 18;
    sub_1ABD04578(0, &qword_1ED34FBB8, (uint64_t)&type metadata for PaywallConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD10754(&qword_1ED34FBC8, (uint64_t (*)(void))sub_1ABDCF044, MEMORY[0x1E0DEAF40]);
    sub_1ABF320C8();
    v195 = v235;
    if (!v235)
    {
      swift_beginAccess();
      v91 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v91 = sub_1ABD12054(0, v91[2] + 1, 1, v91);
      v93 = v91[2];
      v92 = v91[3];
      if (v93 >= v92 >> 1)
        v91 = sub_1ABD12054((_QWORD *)(v92 > 1), v93 + 1, 1, v91);
      v91[2] = v93 + 1;
      v94 = (char *)&v91[2 * v93];
      strcpy(v94 + 32, "paywallConfigs");
      v94[47] = -18;
      v238 = v91;
      swift_endAccess();
    }
    v234[0] = 19;
    sub_1ABD04578(0, &qword_1ED34FC28, (uint64_t)&type metadata for SubscriptionButtonConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v96 = v95;
    v193 = sub_1ABDCF088();
    v194 = v96;
    sub_1ABF320C8();
    v192 = v235;
    if (!v235)
    {
      swift_beginAccess();
      v97 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v97 = sub_1ABD12054(0, v97[2] + 1, 1, v97);
      v99 = v97[2];
      v98 = v97[3];
      if (v99 >= v98 >> 1)
        v97 = sub_1ABD12054((_QWORD *)(v98 > 1), v99 + 1, 1, v97);
      v97[2] = v99 + 1;
      v100 = &v97[2 * v99];
      v100[4] = 0xD000000000000019;
      v100[5] = 0x80000001ABF53590;
      v238 = v97;
      swift_endAccess();
    }
    v234[0] = 20;
    sub_1ABF320C8();
    v191 = v235;
    if (!v235)
    {
      swift_beginAccess();
      v101 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v101 = sub_1ABD12054(0, v101[2] + 1, 1, v101);
      v103 = v101[2];
      v102 = v101[3];
      if (v103 >= v102 >> 1)
        v101 = sub_1ABD12054((_QWORD *)(v102 > 1), v103 + 1, 1, v101);
      v101[2] = v103 + 1;
      v104 = &v101[2 * v103];
      v104[4] = 0xD00000000000001BLL;
      v104[5] = 0x80000001ABF535B0;
      v238 = v101;
      swift_endAccess();
    }
    v234[0] = 21;
    sub_1ABF320C8();
    v190 = v235;
    if (!v235)
    {
      swift_beginAccess();
      v105 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v105 = sub_1ABD12054(0, v105[2] + 1, 1, v105);
      v107 = v105[2];
      v106 = v105[3];
      if (v107 >= v106 >> 1)
        v105 = sub_1ABD12054((_QWORD *)(v106 > 1), v107 + 1, 1, v105);
      v105[2] = v107 + 1;
      v108 = &v105[2 * v107];
      v108[4] = 0xD000000000000027;
      v108[5] = 0x80000001ABF535D0;
      v238 = v105;
      swift_endAccess();
    }
    v234[0] = 22;
    sub_1ABF320C8();
    v194 = v235;
    if (!v235)
    {
      swift_beginAccess();
      v109 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v109 = sub_1ABD12054(0, v109[2] + 1, 1, v109);
      v111 = v109[2];
      v110 = v109[3];
      if (v111 >= v110 >> 1)
        v109 = sub_1ABD12054((_QWORD *)(v110 > 1), v111 + 1, 1, v109);
      v109[2] = v111 + 1;
      v112 = &v109[2 * v111];
      v112[4] = 0xD00000000000002ELL;
      v112[5] = 0x80000001ABF53600;
      v238 = v109;
      swift_endAccess();
    }
    v237 = 23;
    sub_1ABDCF100();
    sub_1ABF320C8();
    sub_1ABDCBC58((uint64_t)&v235, (uint64_t)v233);
    sub_1ABDCBC58((uint64_t)v233, (uint64_t)v234);
    if (sub_1ABDCF144((uint64_t)v234) == 1)
    {
      swift_beginAccess();
      v113 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v113 = sub_1ABD12054(0, v113[2] + 1, 1, v113);
      v115 = v113[2];
      v114 = v113[3];
      if (v115 >= v114 >> 1)
        v113 = sub_1ABD12054((_QWORD *)(v114 > 1), v115 + 1, 1, v113);
      v113[2] = v115 + 1;
      v116 = &v113[2 * v115];
      v116[4] = 0xD000000000000015;
      v116[5] = 0x80000001ABF53630;
      v238 = v113;
      swift_endAccess();
    }
    sub_1ABDCBC58((uint64_t)v233, (uint64_t)v232);
    LOBYTE(v230) = 24;
    sub_1ABF320C8();
    v193 = v227;
    v189 = v228;
    if ((v228 & 1) != 0)
    {
      swift_beginAccess();
      v117 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v117 = sub_1ABD12054(0, v117[2] + 1, 1, v117);
      v119 = v117[2];
      v118 = v117[3];
      if (v119 >= v118 >> 1)
        v117 = sub_1ABD12054((_QWORD *)(v118 > 1), v119 + 1, 1, v117);
      v117[2] = v119 + 1;
      v120 = &v117[2 * v119];
      v120[4] = 0xD00000000000001DLL;
      v120[5] = 0x80000001ABF53650;
      v238 = v117;
      swift_endAccess();
    }
    LOBYTE(v230) = 25;
    sub_1ABF320C8();
    v188 = v227;
    v187 = v228;
    if ((v228 & 1) != 0)
    {
      swift_beginAccess();
      v121 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v121 = sub_1ABD12054(0, v121[2] + 1, 1, v121);
      v123 = v121[2];
      v122 = v121[3];
      if (v123 >= v122 >> 1)
        v121 = sub_1ABD12054((_QWORD *)(v122 > 1), v123 + 1, 1, v121);
      v121[2] = v123 + 1;
      v124 = &v121[2 * v123];
      v124[4] = 0xD000000000000024;
      v124[5] = 0x80000001ABF53670;
      v238 = v121;
      swift_endAccess();
    }
    LOBYTE(v230) = 26;
    sub_1ABF320C8();
    v185 = v227;
    v186 = v228;
    if (!v228)
    {
      swift_beginAccess();
      v125 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v125 = sub_1ABD12054(0, v125[2] + 1, 1, v125);
      v127 = v125[2];
      v126 = v125[3];
      if (v127 >= v126 >> 1)
        v125 = sub_1ABD12054((_QWORD *)(v126 > 1), v127 + 1, 1, v125);
      v125[2] = v127 + 1;
      v128 = &v125[2 * v127];
      v128[4] = 0xD000000000000019;
      v128[5] = 0x80000001ABF536A0;
      v238 = v125;
      swift_endAccess();
    }
    LOBYTE(v230) = 27;
    sub_1ABF320C8();
    v183 = v227;
    v184 = v228;
    if (!v228)
    {
      swift_beginAccess();
      v129 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v129 = sub_1ABD12054(0, v129[2] + 1, 1, v129);
      v131 = v129[2];
      v130 = v129[3];
      if (v131 >= v130 >> 1)
        v129 = sub_1ABD12054((_QWORD *)(v130 > 1), v131 + 1, 1, v129);
      v129[2] = v131 + 1;
      v132 = &v129[2 * v131];
      v132[4] = 0xD000000000000019;
      v132[5] = 0x80000001ABF536C0;
      v238 = v129;
      swift_endAccess();
    }
    LOBYTE(v230) = 28;
    sub_1ABF320C8();
    v181 = v227;
    v182 = v228;
    if (!v228)
    {
      swift_beginAccess();
      v133 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v133 = sub_1ABD12054(0, v133[2] + 1, 1, v133);
      v135 = v133[2];
      v134 = v133[3];
      if (v135 >= v134 >> 1)
        v133 = sub_1ABD12054((_QWORD *)(v134 > 1), v135 + 1, 1, v133);
      v133[2] = v135 + 1;
      v136 = &v133[2 * v135];
      v136[4] = 0xD000000000000018;
      v136[5] = 0x80000001ABF536E0;
      v238 = v133;
      swift_endAccess();
    }
    LOBYTE(v230) = 29;
    sub_1ABF320C8();
    v180 = v227;
    v179 = v228;
    if ((v228 & 1) != 0)
    {
      swift_beginAccess();
      v137 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v137 = sub_1ABD12054(0, v137[2] + 1, 1, v137);
      v139 = v137[2];
      v138 = v137[3];
      if (v139 >= v138 >> 1)
        v137 = sub_1ABD12054((_QWORD *)(v138 > 1), v139 + 1, 1, v137);
      v137[2] = v139 + 1;
      v140 = &v137[2 * v139];
      v140[4] = 0xD000000000000025;
      v140[5] = 0x80000001ABF53700;
      v238 = v137;
      swift_endAccess();
    }
    LOBYTE(v230) = 30;
    sub_1ABF320C8();
    v178 = v227;
    v177 = v228;
    if ((v228 & 1) != 0)
    {
      swift_beginAccess();
      v141 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v141 = sub_1ABD12054(0, v141[2] + 1, 1, v141);
      v143 = v141[2];
      v142 = v141[3];
      if (v143 >= v142 >> 1)
        v141 = sub_1ABD12054((_QWORD *)(v142 > 1), v143 + 1, 1, v141);
      v141[2] = v143 + 1;
      v144 = &v141[2 * v143];
      v144[4] = 0xD000000000000021;
      v144[5] = 0x80000001ABF53730;
      v238 = v141;
      swift_endAccess();
    }
    LOBYTE(v230) = 31;
    sub_1ABF320C8();
    v176 = v227;
    v175 = v228;
    if ((v228 & 1) != 0)
    {
      swift_beginAccess();
      v145 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v145 = sub_1ABD12054(0, v145[2] + 1, 1, v145);
      v147 = v145[2];
      v146 = v145[3];
      if (v147 >= v146 >> 1)
        v145 = sub_1ABD12054((_QWORD *)(v146 > 1), v147 + 1, 1, v145);
      v145[2] = v147 + 1;
      v148 = &v145[2 * v147];
      v148[4] = 0xD00000000000002FLL;
      v148[5] = 0x80000001ABF53760;
      v238 = v145;
      swift_endAccess();
    }
    LOBYTE(v227) = 32;
    sub_1ABF320C8();
    v174 = v230;
    if (v230 == 2)
    {
      swift_beginAccess();
      v149 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v149 = sub_1ABD12054(0, v149[2] + 1, 1, v149);
      v151 = v149[2];
      v150 = v149[3];
      if (v151 >= v150 >> 1)
        v149 = sub_1ABD12054((_QWORD *)(v150 > 1), v151 + 1, 1, v149);
      v149[2] = v151 + 1;
      v152 = &v149[2 * v151];
      v152[4] = 0xD000000000000026;
      v152[5] = 0x80000001ABF53790;
      v238 = v149;
      swift_endAccess();
    }
    LOBYTE(v227) = 33;
    sub_1ABF320C8();
    v173 = v230;
    if (v230 == 2)
    {
      swift_beginAccess();
      v153 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v153 = sub_1ABD12054(0, v153[2] + 1, 1, v153);
      v155 = v153[2];
      v154 = v153[3];
      if (v155 >= v154 >> 1)
        v153 = sub_1ABD12054((_QWORD *)(v154 > 1), v155 + 1, 1, v153);
      v153[2] = v155 + 1;
      v156 = &v153[2 * v155];
      v156[4] = 0xD00000000000002DLL;
      v156[5] = 0x80000001ABF537C0;
      v238 = v153;
      swift_endAccess();
    }
    LOBYTE(v230) = 34;
    sub_1ABF320C8();
    v172 = v227;
    v171 = v228;
    if ((v228 & 1) != 0)
    {
      swift_beginAccess();
      v157 = v238;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v157 = sub_1ABD12054(0, v157[2] + 1, 1, v157);
      v159 = v157[2];
      v158 = v157[3];
      if (v159 >= v158 >> 1)
        v157 = sub_1ABD12054((_QWORD *)(v158 > 1), v159 + 1, 1, v157);
      v157[2] = v159 + 1;
      v160 = &v157[2 * v159];
      v160[4] = 0xD00000000000001ALL;
      v160[5] = 0x80000001ABF537F0;
      v238 = v157;
      swift_endAccess();
    }
    v231 = 35;
    sub_1ABCF5A54(0, &qword_1ED34FBE0, (uint64_t (*)(uint64_t))type metadata accessor for AudioUpsellConfig, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD106C4(&qword_1ED34FBF0, &qword_1ED34F068, (uint64_t)&unk_1ABF4EE88, MEMORY[0x1E0DEAF40]);
    sub_1ABF320C8();
    v161 = v230;
    if (!v230)
    {
      swift_beginAccess();
      v162 = v238;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v238 = v162;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v162 = sub_1ABD12054(0, v162[2] + 1, 1, v162);
        v238 = v162;
      }
      v165 = v162[2];
      v164 = v162[3];
      if (v165 >= v164 >> 1)
        v238 = sub_1ABD12054((_QWORD *)(v164 > 1), v165 + 1, 1, v162);
      v166 = sub_1ABD8241C(v165, 0xD000000000000012, 0x80000001ABF53810);
      nullsub_2(v166);
      swift_endAccess();
    }
    sub_1ABD3A9B8(v13, v214, v221, v220, v219, v218, v217, v216, v229, v215, v213, v49, v212, v54, v210, v211, v208, v209, v206,
      v207,
      v204,
      v205,
      v202,
      v203,
      v201,
      v200,
      v199,
      v198,
      v197,
      v196,
      v195,
      v192,
      v191,
      v190,
      v194,
      (uint64_t)v232,
      v193,
      v189,
      v188,
      v187,
      v185,
      v186,
      v183,
      v184,
      v181,
      v182,
      v180,
      v179,
      v178,
      v177,
      v176,
      v175,
      v174,
      v173,
      v172,
      v171,
      v161,
      2);
    swift_beginAccess();
    v167 = v238;
    if (v238[2])
    {
      sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34FFF0, (uint64_t (*)(uint64_t))sub_1ABD6B360, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v168 = swift_allocObject();
      *(_OWORD *)(v168 + 16) = xmmword_1ABF366C0;
      *(_QWORD *)(v168 + 56) = v222;
      *(_QWORD *)(v168 + 64) = sub_1ABD82448();
      *(_QWORD *)(v168 + 32) = v167;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v169 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v169 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v225 + 8))(v223, v6);
    swift_bridgeObjectRelease();
    memcpy(v224, v229, 0x1F9uLL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
}

unint64_t sub_1ABDCED68()
{
  const void *v0;
  _BYTE v2[512];

  memcpy(v2, v0, 0x1F9uLL);
  return sub_1ABDCEDA0((uint64_t)v2);
}

unint64_t sub_1ABDCEDA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v13;
  id v14[21];
  _QWORD v15[22];

  v15[21] = *MEMORY[0x1E0C80C00];
  sub_1ABF30220();
  swift_allocObject();
  sub_1ABF30214();
  sub_1ABDCBC58(a1 + 208, (uint64_t)v15);
  sub_1ABDCBC58((uint64_t)v15, (uint64_t)v14);
  sub_1ABDCF168(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD1A564);
  sub_1ABD04578(0, &qword_1ED34EDD8, (uint64_t)&type metadata for FlexiblePaywall, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1ABDD0970();
  v2 = sub_1ABF30208();
  v4 = v3;
  sub_1ABDCF168(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD1A400);
  swift_release();
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1ABF30640();
  v14[0] = 0;
  v7 = objc_msgSend(v5, sel_JSONObjectWithData_options_error_, v6, 4, v14);

  if (!v7)
  {
    v10 = v14[0];
    v11 = (void *)sub_1ABF3046C();

    swift_willThrow();
    goto LABEL_5;
  }
  v8 = v14[0];
  sub_1ABF31DD4();
  swift_unknownObjectRelease();
  sub_1ABDD09E8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v9 = sub_1ABDEA5B0(MEMORY[0x1E0DEE9D8]);
    sub_1ABD0F430(v2, v4);
    return v9;
  }
  sub_1ABD0F430(v2, v4);
  return v13;
}

uint64_t sub_1ABDCEFDC@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1ABDCBFF0(a1, a2);
}

uint64_t sub_1ABDCEFF4()
{
  unint64_t v0;

  v0 = sub_1ABF3226C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x25)
    return 37;
  else
    return v0;
}

unint64_t sub_1ABDCF044()
{
  unint64_t result;

  result = qword_1ED34ED28;
  if (!qword_1ED34ED28)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for PaywallConfig, &type metadata for PaywallConfig);
    atomic_store(result, (unint64_t *)&qword_1ED34ED28);
  }
  return result;
}

unint64_t sub_1ABDCF088()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED34FC38;
  if (!qword_1ED34FC38)
  {
    sub_1ABD04578(255, &qword_1ED34FC28, (uint64_t)&type metadata for SubscriptionButtonConfig, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABD85EB0();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34FC38);
  }
  return result;
}

unint64_t sub_1ABDCF100()
{
  unint64_t result;

  result = qword_1ED34EDD0;
  if (!qword_1ED34EDD0)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for FlexiblePaywall, &type metadata for FlexiblePaywall);
    atomic_store(result, (unint64_t *)&qword_1ED34EDD0);
  }
  return result;
}

uint64_t sub_1ABDCF144(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 160);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_1ABDCF168(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20]);
  return a1;
}

uint64_t destroy for PaidBundleConfiguration(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[46] != 1)
  {
    if (a1[26] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[30] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[34] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[38] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[42] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaidBundleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v10 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v10;
  v11 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v11;
  v12 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v12;
  v13 = (_OWORD *)(a1 + 208);
  v14 = a2 + 208;
  v15 = *(_QWORD *)(a2 + 368);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v15 == 1)
  {
    v16 = *(_OWORD *)(v14 + 144);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(v14 + 128);
    *(_OWORD *)(a1 + 352) = v16;
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(v14 + 160);
    v17 = *(_OWORD *)(v14 + 80);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(v14 + 64);
    *(_OWORD *)(a1 + 288) = v17;
    v18 = *(_OWORD *)(v14 + 112);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(v14 + 96);
    *(_OWORD *)(a1 + 320) = v18;
    v19 = *(_OWORD *)(v14 + 16);
    *v13 = *(_OWORD *)v14;
    *(_OWORD *)(a1 + 224) = v19;
    v20 = *(_OWORD *)(v14 + 48);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(v14 + 32);
    *(_OWORD *)(a1 + 256) = v20;
  }
  else
  {
    if (*(_QWORD *)v14 == 1)
    {
      v21 = *(_OWORD *)(v14 + 16);
      *v13 = *(_OWORD *)v14;
      *(_OWORD *)(a1 + 224) = v21;
    }
    else
    {
      v22 = *(_QWORD *)(a2 + 216);
      v23 = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)v14;
      *(_QWORD *)(a1 + 216) = v22;
      v24 = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 224) = v23;
      *(_QWORD *)(a1 + 232) = v24;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v25 = *(_QWORD *)(a2 + 240);
    if (v25 == 1)
    {
      v26 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 256) = v26;
    }
    else
    {
      v27 = *(_QWORD *)(a2 + 248);
      v28 = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 240) = v25;
      *(_QWORD *)(a1 + 248) = v27;
      v29 = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 256) = v28;
      *(_QWORD *)(a1 + 264) = v29;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v30 = *(_QWORD *)(a2 + 272);
    if (v30 == 1)
    {
      v31 = *(_OWORD *)(a2 + 288);
      *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
      *(_OWORD *)(a1 + 288) = v31;
    }
    else
    {
      v32 = *(_QWORD *)(a2 + 280);
      v33 = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 272) = v30;
      *(_QWORD *)(a1 + 280) = v32;
      v34 = *(_QWORD *)(a2 + 296);
      *(_QWORD *)(a1 + 288) = v33;
      *(_QWORD *)(a1 + 296) = v34;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v35 = *(_QWORD *)(a2 + 304);
    if (v35 == 1)
    {
      v36 = *(_OWORD *)(a2 + 320);
      *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 320) = v36;
    }
    else
    {
      v37 = *(_QWORD *)(a2 + 312);
      v38 = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 304) = v35;
      *(_QWORD *)(a1 + 312) = v37;
      v39 = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 320) = v38;
      *(_QWORD *)(a1 + 328) = v39;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    v40 = *(_QWORD *)(a2 + 336);
    if (v40 == 1)
    {
      v41 = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
      *(_OWORD *)(a1 + 352) = v41;
    }
    else
    {
      v42 = *(_QWORD *)(a2 + 344);
      v43 = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 336) = v40;
      *(_QWORD *)(a1 + 344) = v42;
      v44 = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 352) = v43;
      *(_QWORD *)(a1 + 360) = v44;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    *(_QWORD *)(a1 + 368) = v15;
    sub_1ABF2FF5C();
  }
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  v45 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v45;
  v46 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v46;
  v47 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v47;
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
  v48 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v48;
  *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for PaidBundleConfiguration(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 *v5;
  __int128 *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  _OWORD *v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  _OWORD *v46;
  _OWORD *v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  _OWORD *v51;
  _OWORD *v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  v4 = (_BYTE *)(a2 + 480);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v5 = (__int128 *)(a1 + 208);
  v6 = (__int128 *)(a2 + 208);
  v7 = *(_QWORD *)(a2 + 368);
  if (*(_QWORD *)(a1 + 368) == 1)
  {
    if (v7 == 1)
    {
      v8 = *v6;
      v9 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v9;
      *v5 = v8;
      v10 = *(_OWORD *)(a2 + 256);
      v11 = *(_OWORD *)(a2 + 272);
      v12 = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(_OWORD *)(a1 + 304) = v12;
      *(_OWORD *)(a1 + 256) = v10;
      *(_OWORD *)(a1 + 272) = v11;
      v13 = *(_OWORD *)(a2 + 320);
      v14 = *(_OWORD *)(a2 + 336);
      v15 = *(_OWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_OWORD *)(a1 + 336) = v14;
      *(_OWORD *)(a1 + 352) = v15;
      *(_OWORD *)(a1 + 320) = v13;
    }
    else
    {
      if (*(_QWORD *)v6 == 1)
      {
        v24 = *(_OWORD *)(a2 + 224);
        *v5 = *v6;
        *(_OWORD *)(a1 + 224) = v24;
      }
      else
      {
        *(_QWORD *)(a1 + 208) = *(_QWORD *)v6;
        *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      v27 = *(_QWORD *)(a2 + 240);
      if (v27 == 1)
      {
        v28 = *(_OWORD *)(a2 + 256);
        *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 256) = v28;
      }
      else
      {
        *(_QWORD *)(a1 + 240) = v27;
        *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
        *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
        *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      v30 = *(_QWORD *)(a2 + 272);
      if (v30 == 1)
      {
        v31 = *(_OWORD *)(a2 + 288);
        *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
        *(_OWORD *)(a1 + 288) = v31;
      }
      else
      {
        *(_QWORD *)(a1 + 272) = v30;
        *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
        *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
        *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      v32 = *(_QWORD *)(a2 + 304);
      if (v32 == 1)
      {
        v33 = *(_OWORD *)(a2 + 320);
        *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
        *(_OWORD *)(a1 + 320) = v33;
      }
      else
      {
        *(_QWORD *)(a1 + 304) = v32;
        *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
        *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
        *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      v34 = *(_QWORD *)(a2 + 336);
      if (v34 == 1)
      {
        v35 = *(_OWORD *)(a2 + 352);
        *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
        *(_OWORD *)(a1 + 352) = v35;
      }
      else
      {
        *(_QWORD *)(a1 + 336) = v34;
        *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
        *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
        *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      sub_1ABF2FF5C();
    }
  }
  else if (v7 == 1)
  {
    sub_1ABDD0088((_QWORD *)(a1 + 208));
    v17 = *(_OWORD *)(a2 + 224);
    v16 = *(_OWORD *)(a2 + 240);
    *v5 = *v6;
    *(_OWORD *)(a1 + 224) = v17;
    *(_OWORD *)(a1 + 240) = v16;
    v18 = *(_OWORD *)(a2 + 304);
    v20 = *(_OWORD *)(a2 + 256);
    v19 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 304) = v18;
    *(_OWORD *)(a1 + 256) = v20;
    *(_OWORD *)(a1 + 272) = v19;
    v22 = *(_OWORD *)(a2 + 336);
    v21 = *(_OWORD *)(a2 + 352);
    v23 = *(_OWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 336) = v22;
    *(_OWORD *)(a1 + 352) = v21;
    *(_OWORD *)(a1 + 320) = v23;
  }
  else
  {
    v25 = *(_QWORD *)v6;
    if (*(_QWORD *)v5 == 1)
    {
      if (v25 == 1)
      {
        v26 = *(_OWORD *)(a2 + 224);
        *v5 = *v6;
        *(_OWORD *)(a1 + 224) = v26;
      }
      else
      {
        *(_QWORD *)(a1 + 208) = v25;
        *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
    }
    else if (v25 == 1)
    {
      sub_1ABDD0054(a1 + 208);
      v29 = *(_OWORD *)(a2 + 224);
      *v5 = *v6;
      *(_OWORD *)(a1 + 224) = v29;
    }
    else
    {
      *(_QWORD *)(a1 + 208) = v25;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    v36 = (_OWORD *)(a1 + 240);
    v38 = (_OWORD *)(a2 + 240);
    v37 = *(_QWORD *)(a2 + 240);
    if (*(_QWORD *)(a1 + 240) == 1)
    {
      if (v37 == 1)
      {
        v39 = *(_OWORD *)(a2 + 256);
        *v36 = *v38;
        *(_OWORD *)(a1 + 256) = v39;
      }
      else
      {
        *(_QWORD *)(a1 + 240) = v37;
        *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
        *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
        *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
    }
    else if (v37 == 1)
    {
      sub_1ABDD0054(a1 + 240);
      v40 = *(_OWORD *)(a2 + 256);
      *v36 = *v38;
      *(_OWORD *)(a1 + 256) = v40;
    }
    else
    {
      *(_QWORD *)(a1 + 240) = v37;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    v41 = (_OWORD *)(a1 + 272);
    v42 = (_OWORD *)(a2 + 272);
    v43 = *(_QWORD *)(a2 + 272);
    if (*(_QWORD *)(a1 + 272) == 1)
    {
      if (v43 == 1)
      {
        v44 = *(_OWORD *)(a2 + 288);
        *v41 = *v42;
        *(_OWORD *)(a1 + 288) = v44;
      }
      else
      {
        *(_QWORD *)(a1 + 272) = v43;
        *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
        *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
        *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
    }
    else if (v43 == 1)
    {
      sub_1ABDD0054(a1 + 272);
      v45 = *(_OWORD *)(a2 + 288);
      *v41 = *v42;
      *(_OWORD *)(a1 + 288) = v45;
    }
    else
    {
      *(_QWORD *)(a1 + 272) = v43;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    v46 = (_OWORD *)(a1 + 304);
    v47 = (_OWORD *)(a2 + 304);
    v48 = *(_QWORD *)(a2 + 304);
    if (*(_QWORD *)(a1 + 304) == 1)
    {
      if (v48 == 1)
      {
        v49 = *(_OWORD *)(a2 + 320);
        *v46 = *v47;
        *(_OWORD *)(a1 + 320) = v49;
      }
      else
      {
        *(_QWORD *)(a1 + 304) = v48;
        *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
        *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
        *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
    }
    else if (v48 == 1)
    {
      sub_1ABDD0054(a1 + 304);
      v50 = *(_OWORD *)(a2 + 320);
      *v46 = *v47;
      *(_OWORD *)(a1 + 320) = v50;
    }
    else
    {
      *(_QWORD *)(a1 + 304) = v48;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    v51 = (_OWORD *)(a1 + 336);
    v52 = (_OWORD *)(a2 + 336);
    v53 = *(_QWORD *)(a2 + 336);
    if (*(_QWORD *)(a1 + 336) == 1)
    {
      if (v53 == 1)
      {
        v54 = *(_OWORD *)(a2 + 352);
        *v51 = *v52;
        *(_OWORD *)(a1 + 352) = v54;
      }
      else
      {
        *(_QWORD *)(a1 + 336) = v53;
        *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
        *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
        *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
      }
    }
    else if (v53 == 1)
    {
      sub_1ABDD0054(a1 + 336);
      v55 = *(_OWORD *)(a2 + 352);
      *v51 = *v52;
      *(_OWORD *)(a1 + 352) = v55;
    }
    else
    {
      *(_QWORD *)(a1 + 336) = v53;
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
  }
  v56 = *(_QWORD *)(a2 + 376);
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = v56;
  v57 = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = v57;
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_BYTE *)(a1 + 480) = *v4;
  *(_BYTE *)(a1 + 481) = v4[1];
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 504) = v4[24];
  return a1;
}

uint64_t sub_1ABDD0054(uint64_t a1)
{
  destroy for FlexiblePaywallResourceByLocationConfig();
  return a1;
}

_QWORD *sub_1ABDD0088(_QWORD *a1)
{
  destroy for FlexiblePaywall(a1);
  return a1;
}

void *__swift_memcpy505_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F9uLL);
}

uint64_t assignWithTake for PaidBundleConfiguration(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = (_BYTE *)(a2 + 480);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v10 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)(a1 + 208);
  v12 = (_QWORD *)(a2 + 208);
  if (*(_QWORD *)(a1 + 368) == 1)
    goto LABEL_4;
  if (*(_QWORD *)(a2 + 368) != 1)
  {
    if (*v11 != 1)
    {
      if (*v12 != 1)
      {
        *(_QWORD *)(a1 + 208) = *v12;
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        swift_bridgeObjectRelease();
LABEL_10:
        v19 = *(_QWORD *)(a2 + 240);
        if (*(_QWORD *)(a1 + 240) != 1)
        {
          if (v19 != 1)
          {
            *(_QWORD *)(a1 + 240) = v19;
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
            swift_bridgeObjectRelease();
LABEL_15:
            if (*(_QWORD *)(a1 + 272) != 1)
            {
              v21 = *(_QWORD *)(a2 + 272);
              if (v21 != 1)
              {
                *(_QWORD *)(a1 + 272) = v21;
                swift_bridgeObjectRelease();
                *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
                swift_bridgeObjectRelease();
                *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
                swift_bridgeObjectRelease();
                *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
                swift_bridgeObjectRelease();
LABEL_20:
                if (*(_QWORD *)(a1 + 304) != 1)
                {
                  v23 = *(_QWORD *)(a2 + 304);
                  if (v23 != 1)
                  {
                    *(_QWORD *)(a1 + 304) = v23;
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
                    swift_bridgeObjectRelease();
LABEL_25:
                    if (*(_QWORD *)(a1 + 336) != 1)
                    {
                      v25 = *(_QWORD *)(a2 + 336);
                      if (v25 != 1)
                      {
                        *(_QWORD *)(a1 + 336) = v25;
                        swift_bridgeObjectRelease();
                        *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
                        swift_bridgeObjectRelease();
                        *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
                        swift_bridgeObjectRelease();
                        *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
                        swift_bridgeObjectRelease();
                        goto LABEL_30;
                      }
                      sub_1ABDD0054(a1 + 336);
                    }
                    v26 = *(_OWORD *)(a2 + 352);
                    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
                    *(_OWORD *)(a1 + 352) = v26;
LABEL_30:
                    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
                    swift_bridgeObjectRelease();
                    goto LABEL_31;
                  }
                  sub_1ABDD0054(a1 + 304);
                }
                v24 = *(_OWORD *)(a2 + 320);
                *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
                *(_OWORD *)(a1 + 320) = v24;
                goto LABEL_25;
              }
              sub_1ABDD0054(a1 + 272);
            }
            v22 = *(_OWORD *)(a2 + 288);
            *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
            *(_OWORD *)(a1 + 288) = v22;
            goto LABEL_20;
          }
          sub_1ABDD0054(a1 + 240);
        }
        v20 = *(_OWORD *)(a2 + 256);
        *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 256) = v20;
        goto LABEL_15;
      }
      sub_1ABDD0054(a1 + 208);
    }
    v18 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)v11 = *(_OWORD *)v12;
    *(_OWORD *)(a1 + 224) = v18;
    goto LABEL_10;
  }
  sub_1ABDD0088((_QWORD *)(a1 + 208));
LABEL_4:
  v13 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v13;
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  v14 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v14;
  v15 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v15;
  v16 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(a1 + 224) = v16;
  v17 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v17;
LABEL_31:
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  v27 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v27;
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v28;
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v29;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_BYTE *)(a1 + 480) = *v4;
  *(_BYTE *)(a1 + 481) = v4[1];
  v30 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v30;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 504) = v4[24];
  return a1;
}

uint64_t getEnumTagSinglePayload for PaidBundleConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 505))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaidBundleConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 504) = 0;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 505) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 505) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidBundleConfiguration()
{
  return &type metadata for PaidBundleConfiguration;
}

ValueMetadata *type metadata accessor for PaidBundleConfiguration.CodingKeys()
{
  return &type metadata for PaidBundleConfiguration.CodingKeys;
}

unint64_t sub_1ABDD0644()
{
  unint64_t result;

  result = qword_1EEC42F08;
  if (!qword_1EEC42F08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3BA5C, &type metadata for PaidBundleConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42F08);
  }
  return result;
}

uint64_t sub_1ABDD0688(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = *(_QWORD *)(a1 + 168);
  v3 = *(_QWORD *)(a1 + 176);
  v4 = *(_QWORD *)(a1 + 184);
  v5 = *(_QWORD *)(a1 + 192);
  v6 = *(_QWORD *)(a1 + 200);
  v7 = *(_QWORD *)(a1 + 208);
  v8 = *(_QWORD *)(a1 + 216);
  v9 = *(_QWORD *)(a1 + 224);
  v16 = *(_OWORD *)(a1 + 248);
  v17 = *(_OWORD *)(a1 + 232);
  v15 = *(_OWORD *)(a1 + 264);
  v13 = *(_OWORD *)(a1 + 296);
  v14 = *(_OWORD *)(a1 + 280);
  v12 = *(_OWORD *)(a1 + 312);
  v10 = *(_QWORD *)(a1 + 328);
  sub_1ABD1A400(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160));
  sub_1ABD1A400(v2, v3, v4, v5, v6, v7, v8, v9, v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12,
    *((uint64_t *)&v12 + 1),
    v10);
  return a1;
}

uint64_t *sub_1ABDD07A0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = a1[4];
  v3 = a1[8];
  v4 = a1[12];
  v6 = a1[16];
  sub_1ABDC23D0(*a1);
  sub_1ABDC23D0(v2);
  sub_1ABDC23D0(v3);
  sub_1ABDC23D0(v4);
  sub_1ABDC23D0(v6);
  sub_1ABF2FF5C();
  return a1;
}

uint64_t *sub_1ABDD0888(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = a1[4];
  v3 = a1[8];
  v4 = a1[12];
  v6 = a1[16];
  sub_1ABD7E1E0(*a1);
  sub_1ABD7E1E0(v2);
  sub_1ABD7E1E0(v3);
  sub_1ABD7E1E0(v4);
  sub_1ABD7E1E0(v6);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1ABDD0970()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC42F10;
  if (!qword_1EEC42F10)
  {
    sub_1ABD04578(255, &qword_1ED34EDD8, (uint64_t)&type metadata for FlexiblePaywall, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1ABD10814();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC42F10);
  }
  return result;
}

void sub_1ABDD09E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DE80)
  {
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DE80);
  }
}

StocksCore::NewsProvider_optional __swiftcall NewsProvider.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (StocksCore::NewsProvider_optional)sub_1ABDD14E0(v1);
}

uint64_t NewsProvider.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C707061;
  if (*v0 != 1)
    v1 = 0x6F6F686179;
  if (*v0)
    return v1;
  else
    return 0x6F72467265666E69;
}

uint64_t sub_1ABDD0ABC()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDD0B60()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDD0BE0()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

StocksCore::NewsProvider_optional sub_1ABDD0C80(Swift::String *a1)
{
  return NewsProvider.init(rawValue:)(*a1);
}

uint64_t sub_1ABDD0C8C()
{
  sub_1ABD45BCC();
  return sub_1ABF31978();
}

uint64_t sub_1ABDD0CCC()
{
  sub_1ABD45BCC();
  return sub_1ABF3196C();
}

uint64_t NewsEnvironment.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABDD0D48 + 4 * byte_1ABF3BAE0[*v0]))(0x69746375646F7270, 0xEA00000000006E6FLL);
}

uint64_t sub_1ABDD0D48()
{
  return 0x676E6967617473;
}

uint64_t sub_1ABDD0D60()
{
  return 24945;
}

uint64_t sub_1ABDD0D6C()
{
  return 1953719668;
}

uint64_t sub_1ABDD0D7C()
{
  return 0x6C65766564;
}

uint64_t sub_1ABDD0D90()
{
  return 0x786F62646E6173;
}

uint64_t sub_1ABDD0DA8()
{
  return 0x316F6D6564;
}

uint64_t sub_1ABDD0DBC()
{
  return 0x326F6D6564;
}

void sub_1ABDD0DD0()
{
  char *v0;

  sub_1ABF10130(0, *v0);
}

void sub_1ABDD0DDC(uint64_t a1)
{
  char *v1;

  sub_1ABD99328(a1, *v1);
}

void sub_1ABDD0DE4(uint64_t a1)
{
  char *v1;

  sub_1ABF10130(a1, *v1);
}

uint64_t sub_1ABDD0DEC@<X0>(char *a1@<X8>)
{
  return sub_1ABDD14E0(a1);
}

uint64_t sub_1ABDD0DF8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656764457377656ELL;
  if (*v0 != 1)
    v1 = 0x74694B64756F6C63;
  if (*v0)
    return v1;
  else
    return 0x746C7561666564;
}

uint64_t sub_1ABDD0E54(char *a1, unsigned __int8 *a2)
{
  return sub_1ABDE1CE0(*a1, *a2);
}

uint64_t sub_1ABDD0E60()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDD0F00()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDD0F7C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDD1018@<X0>(char *a1@<X8>)
{
  return sub_1ABDD0DEC(a1);
}

void sub_1ABDD1024(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0x656764457377656ELL;
  if (v2 != 1)
    v4 = 0x74694B64756F6C63;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x746C7561666564;
  if (!v5)
    v3 = 0xE800000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_1ABDD1084()
{
  sub_1ABDD320C();
  return sub_1ABF31978();
}

uint64_t sub_1ABDD10C4()
{
  sub_1ABDD320C();
  return sub_1ABF3196C();
}

uint64_t sub_1ABDD110C()
{
  sub_1ABDD320C();
  return sub_1ABF31960();
}

uint64_t sub_1ABDD114C@<X0>(char *a1@<X8>)
{
  return sub_1ABDD14E0(a1);
}

uint64_t sub_1ABDD1158()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6465776F6C6C61;
  if (*v0 != 1)
    v1 = 0x776F6C6C61736964;
  if (*v0)
    return v1;
  else
    return 0x69666E6F43707061;
}

uint64_t sub_1ABDD11BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE1E6C(*a1, *a2);
}

uint64_t sub_1ABDD11C8()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDD1270()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDD12F4()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDD1398@<X0>(char *a1@<X8>)
{
  return sub_1ABDD114C(a1);
}

void sub_1ABDD13A4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE900000000000067;
  v4 = 0xE700000000000000;
  v5 = 0x6465776F6C6C61;
  if (v2 != 1)
  {
    v5 = 0x776F6C6C61736964;
    v4 = 0xEA00000000006465;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x69666E6F43707061;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1ABDD140C()
{
  sub_1ABDD31C8();
  return sub_1ABF31978();
}

uint64_t sub_1ABDD144C()
{
  sub_1ABDD31C8();
  return sub_1ABF3196C();
}

uint64_t sub_1ABDD1494()
{
  sub_1ABDD31C8();
  return sub_1ABF31960();
}

StocksCore::StocksDataServiceEnablement_optional __swiftcall StocksDataServiceEnablement.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (StocksCore::StocksDataServiceEnablement_optional)sub_1ABDD14E0(v1);
}

uint64_t sub_1ABDD14E0@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t StocksDataServiceEnablement.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64656C62616E65;
  if (*v0 != 1)
    v1 = 0x64656C6261736964;
  if (*v0)
    return v1;
  else
    return 0x746C7561666564;
}

uint64_t sub_1ABDD1590(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE4788(*a1, *a2);
}

uint64_t sub_1ABDD159C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDD163C()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDD16B8()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

StocksCore::StocksDataServiceEnablement_optional sub_1ABDD1754(Swift::String *a1)
{
  return StocksDataServiceEnablement.init(rawValue:)(*a1);
}

uint64_t sub_1ABDD1760()
{
  sub_1ABD46740();
  return sub_1ABF31978();
}

uint64_t sub_1ABDD17A0()
{
  sub_1ABD46740();
  return sub_1ABF3196C();
}

uint64_t sub_1ABDD17E8()
{
  return sub_1ABD03B0C(&qword_1ED34DBB8);
}

uint64_t sub_1ABDD1804(uint64_t a1)
{
  return sub_1ABD020B4(a1, 0xD000000000000025, 0x80000001ABF5A480, &qword_1ED34DBD0);
}

uint64_t sub_1ABDD1828()
{
  return sub_1ABD03B0C(&qword_1ED34C8B0);
}

uint64_t sub_1ABDD1844()
{
  return sub_1ABD03B0C(&qword_1ED346D08);
}

uint64_t sub_1ABDD1860(uint64_t a1)
{
  return sub_1ABD01F74(a1, 0, 0xD00000000000002ELL, 0x80000001ABF5A420, (uint64_t *)&unk_1ED346D10);
}

uint64_t sub_1ABDD1888()
{
  return sub_1ABD03B0C(&qword_1ED346D20);
}

uint64_t sub_1ABDD18A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD v5[4];

  v0 = sub_1ABF309E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD021F0(0, &qword_1EEC42F50);
  v5[3] = 3;
  v5[2] = 1;
  v5[1] = 5;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  result = sub_1ABF30A3C();
  qword_1EEC42F18 = result;
  return result;
}

uint64_t sub_1ABDD199C()
{
  return sub_1ABD03B0C(&qword_1EEC40F88);
}

uint64_t sub_1ABDD19B8(uint64_t a1)
{
  return sub_1ABD01F74(a1, 1, 0xD000000000000027, 0x80000001ABF5A3F0, &qword_1EEC42F20);
}

uint64_t sub_1ABDD19E0()
{
  return sub_1ABD03B0C(&qword_1EEC40F90);
}

uint64_t sub_1ABDD19FC()
{
  return sub_1ABD03B0C(&qword_1ED34DBC8);
}

uint64_t sub_1ABDD1A18()
{
  return sub_1ABD03B0C(&qword_1ED346CF0);
}

uint64_t sub_1ABDD1A34(uint64_t a1)
{
  return sub_1ABDD217C(a1, 0xD00000000000002DLL, 0x80000001ABF5A360, (uint64_t *)&unk_1ED34C6E8);
}

uint64_t sub_1ABDD1A58()
{
  return sub_1ABD03B0C(qword_1ED34C6F8);
}

uint64_t sub_1ABDD1A74()
{
  return sub_1ABD03B0C(&qword_1ED34DB70);
}

uint64_t sub_1ABDD1A90(uint64_t a1)
{
  return sub_1ABD020B4(a1, 0xD000000000000027, 0x80000001ABF5A300, &qword_1ED34DB88);
}

uint64_t sub_1ABDD1AB4()
{
  return sub_1ABD03B0C(&qword_1ED34DB98);
}

uint64_t sub_1ABDD1AD0()
{
  return sub_1ABD03B0C(&qword_1ED34DB80);
}

uint64_t sub_1ABDD1AEC(uint64_t a1)
{
  return sub_1ABD020B4(a1, 0xD000000000000020, 0x80000001ABF5A2A0, &qword_1ED346CB0);
}

uint64_t sub_1ABDD1B10()
{
  return sub_1ABD03B0C(&qword_1ED346CB8);
}

uint64_t sub_1ABDD1B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t result;
  _BYTE v9[16];

  v0 = sub_1ABF309E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_1ABF309F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABD35510(0, &qword_1ED34FA58, (void (*)(void))sub_1ABDD32D8);
  v9[15] = 0;
  if (qword_1ED350AA0 != -1)
    swift_once();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, qword_1ED350A90 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain, v4);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  sub_1ABCF6208(0, &qword_1ED34FFC8, &qword_1ED34FA48);
  sub_1ABDD3360(0, &qword_1ED34FA48);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF36EA0;
  v9[14] = 0;
  sub_1ABF30A00();
  v9[13] = 1;
  sub_1ABF30A00();
  v9[12] = 2;
  sub_1ABF30A00();
  sub_1ABDD331C();
  result = sub_1ABF30A18();
  qword_1ED34FA20 = result;
  return result;
}

uint64_t sub_1ABDD1DC8()
{
  return sub_1ABD03B0C(&qword_1ED34E950);
}

uint64_t sub_1ABDD1DE4(uint64_t a1)
{
  return sub_1ABDD1E10(a1, MEMORY[0x1E0DB57E8], 0xD000000000000025, 0x80000001ABF5A250, &qword_1ED34F9D0);
}

uint64_t sub_1ABDD1E10(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t result;
  _BYTE v16[16];

  v7 = sub_1ABF309E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1ABF309F4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED350AA0 != -1)
    swift_once();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(v14, qword_1ED350A90 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain, v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *a2, v7);
  v16[15] = 0;
  sub_1ABD021F0(0, (unint64_t *)&qword_1ED350AD0);
  swift_allocObject();
  result = sub_1ABF30A54();
  *a5 = result;
  return result;
}

uint64_t sub_1ABDD1F88()
{
  return sub_1ABD03B0C(&qword_1ED34F9D8);
}

uint64_t sub_1ABDD1FA4(uint64_t a1)
{
  return sub_1ABDD1E10(a1, MEMORY[0x1E0DB57E8], 0xD00000000000002BLL, 0x80000001ABF5A220, &qword_1ED34F9F8);
}

uint64_t sub_1ABDD1FD0()
{
  return sub_1ABD03B0C(&qword_1ED34E940);
}

uint64_t sub_1ABDD1FEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v0 = sub_1ABF309F4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF309E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF309AC();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB57E8], v4);
  if (qword_1ED350AA0 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, qword_1ED350A90 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain, v0);
  result = sub_1ABF30994();
  qword_1ED34FA18 = result;
  return result;
}

uint64_t sub_1ABDD213C()
{
  return sub_1ABD03B0C(&qword_1ED34E948);
}

uint64_t sub_1ABDD2158(uint64_t a1)
{
  return sub_1ABDD217C(a1, 0xD000000000000029, 0x80000001ABF5A1B0, &qword_1ED34F9E0);
}

uint64_t sub_1ABDD217C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  _QWORD v14[2];

  v5 = sub_1ABF309E8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1ABF309F4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED350AA0 != -1)
    swift_once();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, qword_1ED350A90 + OBJC_IVAR____TtC10StocksCore8AppGroup_settingsDomain, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E8], v5);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_1ABD021F0(0, &qword_1ED34FA68);
  swift_allocObject();
  result = sub_1ABF30A54();
  *a4 = result;
  return result;
}

uint64_t sub_1ABDD22FC()
{
  return sub_1ABD03B0C(&qword_1ED34F9F0);
}

uint64_t sub_1ABDD2318(uint64_t a1)
{
  return sub_1ABDD217C(a1, 0xD000000000000031, 0x80000001ABF5A170, &qword_1ED34FA00);
}

uint64_t sub_1ABDD233C()
{
  return sub_1ABD03B0C(&qword_1ED34E888);
}

uint64_t sub_1ABDD2358(uint64_t a1)
{
  return sub_1ABDD217C(a1, 0xD000000000000033, 0x80000001ABF5A130, &qword_1ED34FA08);
}

uint64_t sub_1ABDD237C()
{
  return sub_1ABD03B0C(&qword_1ED34FA10);
}

uint64_t sub_1ABDD2398()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = sub_1ABF309E8();
  v10 = *(_QWORD *)(v0 - 8);
  v11 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1ABF309F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD021F0(0, &qword_1ED346D70);
  v9[1] = v7;
  v13 = 0x404E000000000000;
  sub_1ABCF6208(0, &qword_1ED347048, &qword_1ED346D68);
  sub_1ABDD3360(0, &qword_1ED346D68);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF366D0;
  v12 = 0x3FF0000000000000;
  sub_1ABF30A00();
  v12 = 0x4014000000000000;
  sub_1ABF30A00();
  v12 = 0x4024000000000000;
  sub_1ABF30A00();
  v12 = 0x404E000000000000;
  sub_1ABF30A00();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB5800], v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v2, *MEMORY[0x1E0DB57E0], v11);
  result = sub_1ABF30A18();
  qword_1ED346638 = result;
  return result;
}

uint64_t sub_1ABDD2630()
{
  return sub_1ABD03B0C(&qword_1ED346640);
}

uint64_t sub_1ABDD264C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;

  v0 = sub_1ABF309E8();
  v10 = *(_QWORD *)(v0 - 8);
  v11 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1ABF309F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD35510(0, &qword_1ED34C778, (void (*)(void))sub_1ABDD3250);
  v9 = v7;
  v15 = 0;
  sub_1ABCF6208(0, &qword_1ED34C780, &qword_1ED34C770);
  sub_1ABDD3360(0, &qword_1ED34C770);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF36EA0;
  v14 = 0;
  sub_1ABF30A00();
  v13 = 1;
  sub_1ABF30A00();
  v12 = 2;
  sub_1ABF30A00();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB5800], v3);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v2, *MEMORY[0x1E0DB57E0], v11);
  sub_1ABDD3294();
  result = sub_1ABF30A18();
  qword_1ED34C758 = result;
  return result;
}

uint64_t sub_1ABDD28B8()
{
  return sub_1ABD03B0C(&qword_1ED34C768);
}

uint64_t sub_1ABDD28D4()
{
  return sub_1ABD03B0C(&qword_1ED34DB60);
}

uint64_t sub_1ABDD28F0(uint64_t a1)
{
  return sub_1ABDD1E10(a1, MEMORY[0x1E0DB57E8], 0xD000000000000032, 0x80000001ABF5A020, &qword_1ED350268);
}

uint64_t sub_1ABDD291C()
{
  return sub_1ABD03B0C(qword_1ED350278);
}

uint64_t sub_1ABDD2938(uint64_t a1)
{
  return sub_1ABDD1E10(a1, MEMORY[0x1E0DB57E8], 0xD000000000000033, 0x80000001ABF59FE0, &qword_1ED347320);
}

uint64_t sub_1ABDD2964()
{
  return sub_1ABD03B0C(&qword_1ED34C2D0);
}

uint64_t sub_1ABDD2980()
{
  return sub_1ABD03B0C(&qword_1ED3466A8);
}

uint64_t sub_1ABDD299C(uint64_t a1)
{
  return sub_1ABD2467C(a1, MEMORY[0x1E0DB54D8], 0xD00000000000002CLL, 0x80000001ABF59F70, &qword_1ED346D58);
}

uint64_t sub_1ABDD29C8()
{
  return sub_1ABD03B0C(&qword_1ED346D60);
}

uint64_t sub_1ABDD29E4()
{
  return sub_1ABD03B0C(&qword_1ED3466B8);
}

uint64_t sub_1ABDD2A00(uint64_t a1)
{
  return sub_1ABD2467C(a1, MEMORY[0x1E0DB54D8], 0xD00000000000001DLL, 0x80000001ABF59F30, &qword_1EEC42F28);
}

uint64_t sub_1ABDD2A2C()
{
  return sub_1ABD03B0C(&qword_1EEC40FA0);
}

uint64_t sub_1ABDD2A48(uint64_t a1)
{
  return sub_1ABD2467C(a1, MEMORY[0x1E0DB54D8], 0xD00000000000001CLL, 0x80000001ABF59F10, &qword_1EEC42F30);
}

uint64_t sub_1ABDD2A74()
{
  return sub_1ABD03B0C(&qword_1EEC40FA8);
}

uint64_t sub_1ABDD2A90()
{
  return sub_1ABD03B0C(&qword_1ED346D50);
}

uint64_t sub_1ABDD2AAC()
{
  return sub_1ABD03B0C(&qword_1ED34DBE8);
}

uint64_t sub_1ABDD2AC8(uint64_t a1)
{
  return sub_1ABD2467C(a1, MEMORY[0x1E0DB54D8], 0xD000000000000021, 0x80000001ABF59E80, &qword_1ED346D30);
}

uint64_t sub_1ABDD2AF4()
{
  return sub_1ABD03B0C(&qword_1ED346D40);
}

uint64_t sub_1ABDD2B10(uint64_t a1)
{
  return sub_1ABD357A4(a1, 0xD000000000000022, 0x80000001ABF59E20, &qword_1ED346708);
}

uint64_t sub_1ABDD2B34()
{
  return sub_1ABD03B0C(&qword_1ED346710);
}

uint64_t sub_1ABDD2B50(uint64_t a1)
{
  return sub_1ABD357A4(a1, 0xD000000000000024, 0x80000001ABF59DF0, &qword_1ED347398);
}

uint64_t sub_1ABDD2B74()
{
  return sub_1ABD03B0C(&qword_1ED34C708);
}

uint64_t sub_1ABDD2B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v0 = sub_1ABF309E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30988();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD24798();
  sub_1ABF317A4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB54D8], v4);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E8], v0);
  result = sub_1ABF30A24();
  qword_1ED346648 = result;
  return result;
}

uint64_t sub_1ABDD2CB8()
{
  return sub_1ABD03B0C(&qword_1ED346650);
}

uint64_t sub_1ABDD2CD4(uint64_t a1)
{
  return sub_1ABD2467C(a1, MEMORY[0x1E0DB54E0], 0xD000000000000020, 0x80000001ABF59DC0, (uint64_t *)&unk_1ED347328);
}

uint64_t sub_1ABDD2D00()
{
  return sub_1ABD03B0C(&qword_1ED347338);
}

uint64_t sub_1ABDD2D1C(uint64_t a1)
{
  return sub_1ABDD2D80(a1, 0xD000000000000018, 0x80000001ABF59DA0, &qword_1EEC42F38);
}

uint64_t sub_1ABDD2D40()
{
  return sub_1ABD03B0C(&qword_1EEC40FB0);
}

uint64_t sub_1ABDD2D5C(uint64_t a1)
{
  return sub_1ABDD2D80(a1, 0xD00000000000001BLL, 0x80000001ABF59D80, &qword_1EEC42F40);
}

uint64_t sub_1ABDD2D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v15[16];

  v5 = sub_1ABF309E8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1ABF309F4();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v12 = 0xD00000000000001CLL;
  v12[1] = 0x80000001ABF59D60;
  (*(void (**)(_QWORD *, _QWORD, double))(v13 + 104))(v12, *MEMORY[0x1E0DB57F8], v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB57E0], v5);
  v15[15] = 0;
  sub_1ABD021F0(0, (unint64_t *)&qword_1ED350AD0);
  swift_allocObject();
  result = sub_1ABF30A54();
  *a4 = result;
  return result;
}

uint64_t sub_1ABDD2ED8()
{
  return sub_1ABD03B0C(&qword_1EEC40FB8);
}

uint64_t sub_1ABDD2EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v0 = sub_1ABF309E8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF309F4();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v7 = 0xD00000000000001CLL;
  v7[1] = 0x80000001ABF59D60;
  (*(void (**)(_QWORD *, _QWORD, double))(v8 + 104))(v7, *MEMORY[0x1E0DB57F8], v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB57E0], v0);
  v10[1] = 0x4024000000000000;
  sub_1ABD021F0(0, &qword_1ED346D70);
  swift_allocObject();
  result = sub_1ABF30A54();
  qword_1EEC42F48 = result;
  return result;
}

uint64_t sub_1ABDD304C()
{
  return sub_1ABD03B0C(qword_1EEC40FC0);
}

unint64_t sub_1ABDD306C()
{
  unint64_t result;

  result = qword_1ED34F408;
  if (!qword_1ED34F408)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3BCFC, &type metadata for AppConfigurationSource);
    atomic_store(result, (unint64_t *)&qword_1ED34F408);
  }
  return result;
}

unint64_t sub_1ABDD30B4()
{
  unint64_t result;

  result = qword_1ED34C748;
  if (!qword_1ED34C748)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3BDF8, &type metadata for KVSCleanupPermission);
    atomic_store(result, (unint64_t *)&qword_1ED34C748);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppConfigurationSource()
{
  return &type metadata for AppConfigurationSource;
}

ValueMetadata *type metadata accessor for KVSCleanupPermission()
{
  return &type metadata for KVSCleanupPermission;
}

ValueMetadata *type metadata accessor for StocksDataServiceEnablement()
{
  return &type metadata for StocksDataServiceEnablement;
}

ValueMetadata *_s4NewsVMa()
{
  return &_s4NewsVN;
}

ValueMetadata *_s10MarketDataVMa()
{
  return &_s10MarketDataVN;
}

ValueMetadata *_s16AppConfigurationVMa()
{
  return &_s16AppConfigurationVN;
}

ValueMetadata *_s14IdentificationVMa()
{
  return &_s14IdentificationVN;
}

ValueMetadata *_s9WatchlistVMa()
{
  return &_s9WatchlistVN;
}

ValueMetadata *_s10DataSourceVMa()
{
  return &_s10DataSourceVN;
}

ValueMetadata *_s3SDSVMa()
{
  return &_s3SDSVN;
}

ValueMetadata *_s11PrivateDataVMa()
{
  return &_s11PrivateDataVN;
}

ValueMetadata *_s8FeaturesVMa()
{
  return &_s8FeaturesVN;
}

ValueMetadata *_s6WidgetVMa()
{
  return &_s6WidgetVN;
}

unint64_t sub_1ABDD31C8()
{
  unint64_t result;

  result = qword_1ED34C750;
  if (!qword_1ED34C750)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3BE60, &type metadata for KVSCleanupPermission);
    atomic_store(result, (unint64_t *)&qword_1ED34C750);
  }
  return result;
}

unint64_t sub_1ABDD320C()
{
  unint64_t result;

  result = qword_1ED34F410;
  if (!qword_1ED34F410)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3BD64, &type metadata for AppConfigurationSource);
    atomic_store(result, (unint64_t *)&qword_1ED34F410);
  }
  return result;
}

unint64_t sub_1ABDD3250()
{
  unint64_t result;

  result = qword_1ED34C740;
  if (!qword_1ED34C740)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3BE98, &type metadata for KVSCleanupPermission);
    atomic_store(result, (unint64_t *)&qword_1ED34C740);
  }
  return result;
}

unint64_t sub_1ABDD3294()
{
  unint64_t result;

  result = qword_1ED34C738;
  if (!qword_1ED34C738)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3BED8, &type metadata for KVSCleanupPermission);
    atomic_store(result, (unint64_t *)&qword_1ED34C738);
  }
  return result;
}

unint64_t sub_1ABDD32D8()
{
  unint64_t result;

  result = qword_1ED34F400;
  if (!qword_1ED34F400)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3BD9C, &type metadata for AppConfigurationSource);
    atomic_store(result, (unint64_t *)&qword_1ED34F400);
  }
  return result;
}

unint64_t sub_1ABDD331C()
{
  unint64_t result;

  result = qword_1ED34F3F8;
  if (!qword_1ED34F3F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3BDDC, &type metadata for AppConfigurationSource);
    atomic_store(result, (unint64_t *)&qword_1ED34F3F8);
  }
  return result;
}

void sub_1ABDD3360(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1ABF30A0C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1ABDD33A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1ABDD33AC(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  id v5;

  sub_1ABF30BE0();
  v5 = sub_1ABDD349C(a1);
  sub_1ABF30BA4();
  sub_1ABCF5A54(0, &qword_1ED346E08, (uint64_t (*)(uint64_t))sub_1ABDD3954, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF31228();
  v2 = (void *)sub_1ABF31114();
  sub_1ABDD38CC();
  v3 = sub_1ABF31174();

  swift_release();
  swift_release();

  return v3;
}

id sub_1ABDD349C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[390];

  v2 = a1[2];
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1ABF366C0;
  v4 = a1[6];
  v5 = a1[7];
  __swift_project_boxed_opaque_existential_1(a1 + 3, v4);
  v6 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8);
  swift_unknownObjectRetain();
  v6(v13, v4, v5);
  v7 = v13[164];
  v8 = v13[165];
  sub_1ABF2FF5C();
  sub_1ABD7DDF4((uint64_t)v13);
  *(_QWORD *)(v3 + 32) = v7;
  *(_QWORD *)(v3 + 40) = v8;
  v9 = objc_allocWithZone(MEMORY[0x1E0D58EA8]);
  v10 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithContext_resourceIDs_downloadAssets_, v2, v10, 1);

  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_1ABDD35C0(id *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v2 = v1;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v21 - v5;
  v7 = sub_1ABF305D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v21 - v13;
  v15 = objc_msgSend(*a1, sel_fileURL, v12);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_7;
  }
  v16 = v15;
  sub_1ABF30580();

  v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v6, v10, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_7:
    sub_1ABCF59BC((uint64_t)v6);
    sub_1ABDD3908();
    swift_allocError();
    swift_willThrow();
    return v2;
  }
  v17(v14, v6, v7);
  v18 = sub_1ABF305EC();
  if (!v1)
  {
    v21[0] = v18;
    v21[1] = v19;
    sub_1ABD04578(0, &qword_1ED346DC0, MEMORY[0x1E0CB0338], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v2 = sub_1ABF311E0();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  return v2;
}

uint64_t sub_1ABDD37F0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedConfigService()
{
  return objc_opt_self();
}

uint64_t sub_1ABDD383C()
{
  void *v0;
  uint64_t v1;

  sub_1ABDD38CC();
  sub_1ABF3127C();
  v0 = (void *)sub_1ABF31114();
  v1 = sub_1ABF31174();
  swift_release();

  return v1;
}

uint64_t sub_1ABDD38B4()
{
  _QWORD *v0;

  return sub_1ABDD33AC(v0);
}

unint64_t sub_1ABDD38CC()
{
  unint64_t result;

  result = qword_1ED3466D8;
  if (!qword_1ED3466D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3466D8);
  }
  return result;
}

unint64_t sub_1ABDD3908()
{
  unint64_t result;

  result = qword_1EEC42F58;
  if (!qword_1EEC42F58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C240, &type metadata for StockFeedConfigService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEC42F58);
  }
  return result;
}

uint64_t sub_1ABDD394C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABF26C7C(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1ABDD3954(uint64_t a1)
{
  sub_1ABCF5A54(a1, &qword_1ED346F50, (uint64_t (*)(uint64_t))sub_1ABDD38CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t storeEnumTagSinglePayload for StockFeedConfigService.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABDD39B0 + 4 * byte_1ABF3C160[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABDD39D0 + 4 * byte_1ABF3C165[v4]))();
}

_BYTE *sub_1ABDD39B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABDD39D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDD39D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDD39E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDD39E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDD39F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StockFeedConfigService.Errors()
{
  return &type metadata for StockFeedConfigService.Errors;
}

unint64_t sub_1ABDD3A10()
{
  unint64_t result;

  result = qword_1EEC42F60;
  if (!qword_1EEC42F60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C218, &type metadata for StockFeedConfigService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEC42F60);
  }
  return result;
}

uint64_t sub_1ABDD3A54()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABDD3A80(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1ABDD3AB4())()
{
  return nullsub_2;
}

uint64_t sub_1ABDD3AC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABDD4634(type metadata accessor for RawAttributionSource, a1);
}

uint64_t type metadata accessor for RawAttributionSource(uint64_t a1)
{
  return sub_1ABD008B4(a1, qword_1ED34E830);
}

uint64_t sub_1ABDD3AE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawAttributionSource(0);
  return sub_1ABDD3BEC(a1, v1 + *(int *)(v3 + 20), (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t (*sub_1ABDD3B28())(_QWORD)
{
  type metadata accessor for RawAttributionSource(0);
  return nullsub_2;
}

uint64_t sub_1ABDD3B50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawAttributionSource(0);
  return sub_1ABCF57B8(v1 + *(int *)(v3 + 24), a1, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
}

uint64_t type metadata accessor for RawAttributionSourceLogo(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED34EA38);
}

uint64_t sub_1ABDD3BA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RawAttributionSource(0);
  return sub_1ABDD3BEC(a1, v1 + *(int *)(v3 + 24), &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
}

uint64_t sub_1ABDD3BEC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1ABD00308(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t (*sub_1ABDD3C38())(_QWORD)
{
  type metadata accessor for RawAttributionSource(0);
  return nullsub_2;
}

uint64_t sub_1ABDD3C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;

  v10 = type metadata accessor for RawAttributionSource(0);
  v11 = (uint64_t)a5 + *(int *)(v10 + 20);
  v12 = sub_1ABF305D4();
  v13 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v14 = (uint64_t)a5 + *(int *)(v10 + 24);
  v15 = type metadata accessor for RawAttributionSourceLogo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *a5 = a1;
  a5[1] = a2;
  sub_1ABDD3BEC(a3, v11, (unint64_t *)&qword_1ED350380, v13);
  return sub_1ABDD3BEC(a4, v14, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
}

uint64_t sub_1ABDD3D58()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4C5255656D6F68;
  if (*v0 != 1)
    v1 = 1869049708;
  if (*v0)
    return v1;
  else
    return 1701667182;
}

uint64_t sub_1ABDD3DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABDDBACC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABDD3DC8()
{
  sub_1ABDD7B60();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDD3DF0()
{
  sub_1ABDD7B60();
  return sub_1ABF32398();
}

uint64_t sub_1ABDD3E18(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;

  sub_1ABCF4DA8(0, &qword_1ED34C560, (uint64_t (*)(void))sub_1ABDD7B60, (uint64_t)&type metadata for RawAttributionSource.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDD7B60();
  sub_1ABF32368();
  v12 = 0;
  sub_1ABF32194();
  if (!v1)
  {
    type metadata accessor for RawAttributionSource(0);
    v11 = 1;
    sub_1ABF305D4();
    sub_1ABCFE1EC(&qword_1ED34EA80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1ABF3217C();
    v10 = 2;
    type metadata accessor for RawAttributionSourceLogo(0);
    sub_1ABCFE1EC(&qword_1ED34C490, type metadata accessor for RawAttributionSourceLogo, (uint64_t)&unk_1ABF3C4BC);
    sub_1ABF3217C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABDD3FEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;

  v29 = a2;
  sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v29 - v4;
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v29 - v6;
  sub_1ABCF4DA8(0, &qword_1EEC42F70, (uint64_t (*)(void))sub_1ABDD7B60, (uint64_t)&type metadata for RawAttributionSource.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v33 = v7;
  v31 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - v8;
  v10 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (uint64_t)v12 + *(int *)(v13 + 20);
  v15 = sub_1ABF305D4();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v36 = v14;
  v16(v14, 1, 1, v15);
  v17 = (uint64_t)v12 + *(int *)(v10 + 24);
  v18 = type metadata accessor for RawAttributionSourceLogo(0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v34 = v17;
  v19(v17, 1, 1, v18);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDD7B60();
  v20 = v9;
  v21 = v35;
  sub_1ABF3235C();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v25 = v34;
    sub_1ABD18510(v36, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    return sub_1ABD18510(v25, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
  }
  else
  {
    v22 = v12;
    v23 = v31;
    v24 = (uint64_t)v32;
    v39 = 0;
    *v22 = sub_1ABF320E0();
    v22[1] = v26;
    v38 = 1;
    sub_1ABCFE1EC(&qword_1ED34EA90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    sub_1ABF320C8();
    sub_1ABDD3BEC(v24, v36, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v37 = 2;
    sub_1ABCFE1EC(&qword_1EEC42F78, type metadata accessor for RawAttributionSourceLogo, (uint64_t)&unk_1ABF3C494);
    v27 = (uint64_t)v30;
    sub_1ABF320C8();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v33);
    sub_1ABDD3BEC(v27, v34, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    sub_1ABCFC790((uint64_t)v22, v29, type metadata accessor for RawAttributionSource);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1ABCFC3BC((uint64_t)v22, type metadata accessor for RawAttributionSource);
  }
}

uint64_t sub_1ABDD43B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABDD3FEC(a1, a2);
}

uint64_t sub_1ABDD43C8(_QWORD *a1)
{
  return sub_1ABDD3E18(a1);
}

uint64_t sub_1ABDD43E0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  uint64_t result;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;

  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v17 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  sub_1ABF305BC();
  v11 = sub_1ABF305D4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  result = v13(v10, 1, v11);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1ABF305BC();
    result = v13(v5, 1, v11);
    if ((_DWORD)result != 1)
    {
      v15 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v15(v8, v5, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      v15(a1, v10, v11);
      v16 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      sub_1ABDD7BB8((uint64_t)v8, (uint64_t)&a1[*(int *)(v16 + 20)]);
      type metadata accessor for RawAttributionSourceLogo(0);
      return swift_storeEnumTagMultiPayload();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDD4590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = a3 + *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
  return sub_1ABDD7BB8(a2, v7);
}

uint64_t sub_1ABDD45F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1ABF305D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1ABDD4628@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABDD4634(type metadata accessor for RawAttributionSourceLogo.Unresolved, a1);
}

uint64_t sub_1ABDD4634@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return sub_1ABCF57B8(v2 + *(int *)(v4 + 20), a2, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1ABDD467C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_1ABF305D4();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))v2, MEMORY[0x1E0CB0018]);
  sub_1ABF316CC();
  v9 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  sub_1ABCF57B8(v0 + *(int *)(v9 + 20), (uint64_t)v8, (unint64_t *)&qword_1ED350380, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
    return sub_1ABF32320();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
  sub_1ABF32320();
  sub_1ABF316CC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t sub_1ABDD47FC()
{
  _BYTE *v0;

  if (*v0)
    return 1802658148;
  else
    return 0x746867696CLL;
}

uint64_t sub_1ABDD482C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABDDBC00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABDD4850()
{
  sub_1ABDD7C0C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDD4878()
{
  sub_1ABDD7C0C();
  return sub_1ABF32398();
}

uint64_t sub_1ABDD48A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;

  sub_1ABCF4DA8(0, &qword_1ED34C570, (uint64_t (*)(void))sub_1ABDD7C0C, (uint64_t)&type metadata for RawAttributionSourceLogo.Unresolved.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDD7C0C();
  sub_1ABF32368();
  v11 = 0;
  sub_1ABF305D4();
  sub_1ABCFE1EC(&qword_1ED34EA80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_1ABF321D0();
  if (!v1)
  {
    type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
    v10 = 1;
    sub_1ABF3217C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABDD4A18()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_1ABF305D4();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  sub_1ABF32308();
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))v2, MEMORY[0x1E0CB0018]);
  sub_1ABF316CC();
  v9 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  sub_1ABCF57B8(v0 + *(int *)(v9 + 20), (uint64_t)v8, (unint64_t *)&qword_1ED350380, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_1ABF32320();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_1ABF32320();
    sub_1ABF316CC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  return sub_1ABF32338();
}

uint64_t sub_1ABDD4BA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  char v30;

  v22 = a2;
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v3);
  v23 = (char *)&v21 - v4;
  v5 = sub_1ABF305D4();
  v6 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  v25 = v6;
  MEMORY[0x1E0C80A78](v5);
  v26 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1EEC42F80, (uint64_t (*)(void))sub_1ABDD7C0C, (uint64_t)&type metadata for RawAttributionSourceLogo.Unresolved.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v27 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - v10;
  v12 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDD7C0C();
  v15 = (uint64_t)v28;
  sub_1ABF3235C();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = v12;
  v28 = a1;
  v16 = v9;
  v17 = v25;
  v18 = (uint64_t)v23;
  v30 = 0;
  sub_1ABCFE1EC(&qword_1ED34EA90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  v19 = v24;
  sub_1ABF32110();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v26, v19);
  v29 = 1;
  sub_1ABF320C8();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v27);
  sub_1ABDD7BB8(v18, (uint64_t)&v14[*(int *)(v21 + 20)]);
  sub_1ABCFC790((uint64_t)v14, v22, type metadata accessor for RawAttributionSourceLogo.Unresolved);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_1ABCFC3BC((uint64_t)v14, type metadata accessor for RawAttributionSourceLogo.Unresolved);
}

uint64_t sub_1ABDD4E94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABDD4BA0(a1, a2);
}

uint64_t sub_1ABDD4EA8(_QWORD *a1)
{
  return sub_1ABDD48A0(a1);
}

uint64_t sub_1ABDD4EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = sub_1ABF305D4();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - v10;
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))v5, MEMORY[0x1E0CB0018]);
  sub_1ABF316CC();
  sub_1ABCF57B8(v2 + *(int *)(a2 + 20), (uint64_t)v11, (unint64_t *)&qword_1ED350380, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v4) == 1)
    return sub_1ABF32320();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v4);
  sub_1ABF32320();
  sub_1ABF316CC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
}

uint64_t sub_1ABDD5038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = sub_1ABF305D4();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - v10;
  sub_1ABF32308();
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))v5, MEMORY[0x1E0CB0018]);
  sub_1ABF316CC();
  sub_1ABCF57B8(v2 + *(int *)(a2 + 20), (uint64_t)v11, (unint64_t *)&qword_1ED350380, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v4) == 1)
  {
    sub_1ABF32320();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v4);
    sub_1ABF32320();
    sub_1ABF316CC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  }
  return sub_1ABF32338();
}

uint64_t sub_1ABDD51CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ABCFC790(v1, a1, type metadata accessor for RawAttributionSourceLogo.Unresolved);
}

double sub_1ABDD51F0()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for RawAttributionSourceLogo.Resolved(0) + 20));
}

uint64_t sub_1ABDD5210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for RawAttributionSourceLogo.Resolved(0) + 24);
  v2 = *(_QWORD *)v1;
  sub_1ABD0F474(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1ABDD5250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for RawAttributionSourceLogo.Resolved(0) + 28);
  v2 = *(_QWORD *)v1;
  sub_1ABD9EA4C(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1ABDD5294()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_1ABF305D4();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))v2, MEMORY[0x1E0CB0018]);
  sub_1ABF316CC();
  v9 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  sub_1ABCF57B8(v0 + *(int *)(v9 + 20), (uint64_t)v8, (unint64_t *)&qword_1ED350380, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
    return sub_1ABF32320();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
  sub_1ABF32320();
  sub_1ABF316CC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t sub_1ABDD5410()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABDD5434 + 4 * byte_1ABF3C280[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1ABDD5434()
{
  return 0x656C616373;
}

uint64_t sub_1ABDD5448()
{
  return 0x746867696CLL;
}

uint64_t sub_1ABDD545C()
{
  return 1802658148;
}

uint64_t sub_1ABDD546C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABDDBCD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABDD5490()
{
  sub_1ABDD7C64();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDD54B8()
{
  sub_1ABDD7C64();
  return sub_1ABF32398();
}

uint64_t sub_1ABDD54E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v12;
  char v13;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1EEC42F88, (uint64_t (*)(void))sub_1ABDD7C64, (uint64_t)&type metadata for RawAttributionSourceLogo.Resolved.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDD7C64();
  sub_1ABF32368();
  LOBYTE(v12) = 0;
  type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  sub_1ABCFE1EC(&qword_1ED34C458, type metadata accessor for RawAttributionSourceLogo.Unresolved, (uint64_t)&unk_1ABF3C34C);
  sub_1ABF321D0();
  if (!v2)
  {
    v10 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
    LOBYTE(v12) = 1;
    sub_1ABF321AC();
    v12 = *(_OWORD *)(v3 + *(int *)(v10 + 24));
    v13 = 2;
    sub_1ABD47EE8();
    sub_1ABF321D0();
    v12 = *(_OWORD *)(v3 + *(int *)(v10 + 28));
    v13 = 3;
    sub_1ABF3217C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ABDD56DC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_1ABF305D4();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  sub_1ABF32308();
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))v2, MEMORY[0x1E0CB0018]);
  sub_1ABF316CC();
  v9 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  sub_1ABCF57B8(v0 + *(int *)(v9 + 20), (uint64_t)v8, (unint64_t *)&qword_1ED350380, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_1ABF32320();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_1ABF32320();
    sub_1ABF316CC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  return sub_1ABF32338();
}

uint64_t sub_1ABDD5864@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v26;
  char v27;

  v20 = a2;
  v3 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  MEMORY[0x1E0C80A78](v3);
  v21 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1EEC42F98, (uint64_t (*)(void))sub_1ABDD7C64, (uint64_t)&type metadata for RawAttributionSourceLogo.Resolved.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - v7;
  v9 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1ABDD7C64();
  v22 = v8;
  v13 = v25;
  sub_1ABF3235C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  v14 = (uint64_t)v11;
  LOBYTE(v26) = 0;
  sub_1ABCFE1EC(&qword_1EEC42FA0, type metadata accessor for RawAttributionSourceLogo.Unresolved, (uint64_t)&unk_1ABF3C324);
  v15 = (uint64_t)v21;
  v16 = v22;
  v17 = v23;
  sub_1ABF32110();
  sub_1ABCFE2AC(v15, v14, type metadata accessor for RawAttributionSourceLogo.Unresolved);
  LOBYTE(v26) = 1;
  sub_1ABF320F8();
  *(_QWORD *)(v14 + v9[5]) = v18;
  v27 = 2;
  sub_1ABD47EA4();
  sub_1ABF32110();
  *(_OWORD *)(v14 + v9[6]) = v26;
  v27 = 3;
  sub_1ABF320C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v17);
  *(_OWORD *)(v14 + v9[7]) = v26;
  sub_1ABCFC790(v14, v20, type metadata accessor for RawAttributionSourceLogo.Resolved);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_1ABCFC3BC(v14, type metadata accessor for RawAttributionSourceLogo.Resolved);
}

uint64_t sub_1ABDD5B94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABDD5864(a1, a2);
}

uint64_t sub_1ABDD5BA8(_QWORD *a1)
{
  return sub_1ABDD54E0(a1);
}

uint64_t sub_1ABDD5BC0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_1ABF305D4();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))v2, MEMORY[0x1E0CB0018]);
  sub_1ABF316CC();
  v9 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  sub_1ABCF57B8(v0 + *(int *)(v9 + 20), (uint64_t)v8, (unint64_t *)&qword_1ED350380, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
    return sub_1ABF32320();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
  sub_1ABF32320();
  sub_1ABF316CC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v1);
}

uint64_t sub_1ABDD5D3C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_1ABF305D4();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v2);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  sub_1ABF32308();
  sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))v2, MEMORY[0x1E0CB0018]);
  sub_1ABF316CC();
  v9 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  sub_1ABCF57B8(v0 + *(int *)(v9 + 20), (uint64_t)v8, (unint64_t *)&qword_1ED350380, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v1) == 1)
  {
    sub_1ABF32320();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v1);
    sub_1ABF32320();
    sub_1ABF316CC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  }
  return sub_1ABF32338();
}

uint64_t sub_1ABDD5ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  void (*v20)(uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  char *v27;
  char *v29;
  uint64_t v30;

  v1 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF305D4();
  v30 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v6);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - v11;
  v13 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RawAttributionSourceLogo(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCFC790(v0, (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1ABCFE2AC((uint64_t)v18, (uint64_t)v3, type metadata accessor for RawAttributionSourceLogo.Resolved);
    sub_1ABF32314();
    v20 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_1ABF316CC();
    sub_1ABCF57B8((uint64_t)&v3[*(int *)(v13 + 20)], (uint64_t)v9, (unint64_t *)&qword_1ED350380, v20);
    v21 = v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v9, 1, v4) == 1)
    {
      sub_1ABF32320();
    }
    else
    {
      v24 = v29;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v29, v9, v4);
      sub_1ABF32320();
      sub_1ABF316CC();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v4);
    }
    v25 = type metadata accessor for RawAttributionSourceLogo.Resolved;
    v26 = (uint64_t)v3;
  }
  else
  {
    sub_1ABCFE2AC((uint64_t)v18, (uint64_t)v15, type metadata accessor for RawAttributionSourceLogo.Unresolved);
    sub_1ABF32314();
    v22 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    sub_1ABF316CC();
    sub_1ABCF57B8((uint64_t)&v15[*(int *)(v13 + 20)], (uint64_t)v12, (unint64_t *)&qword_1ED350380, v22);
    v23 = v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v12, 1, v4) == 1)
    {
      sub_1ABF32320();
    }
    else
    {
      v27 = v29;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v29, v12, v4);
      sub_1ABF32320();
      sub_1ABF316CC();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v4);
    }
    v25 = type metadata accessor for RawAttributionSourceLogo.Unresolved;
    v26 = (uint64_t)v15;
  }
  return sub_1ABCFC3BC(v26, v25);
}

uint64_t sub_1ABDD6278()
{
  _BYTE *v0;

  if (*v0)
    return 0x6465766C6F736572;
  else
    return 0x766C6F7365726E75;
}

uint64_t sub_1ABDD62B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABDDBE58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABDD62DC()
{
  sub_1ABDD7D30();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDD6304()
{
  sub_1ABDD7D30();
  return sub_1ABF32398();
}

uint64_t sub_1ABDD6334()
{
  return 12383;
}

uint64_t sub_1ABDD6344()
{
  sub_1ABDD7CA8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDD636C()
{
  sub_1ABDD7CA8();
  return sub_1ABF32398();
}

uint64_t sub_1ABDD6394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABDD6410()
{
  sub_1ABDD7CEC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDD6438()
{
  sub_1ABDD7CEC();
  return sub_1ABF32398();
}

uint64_t sub_1ABDD6460(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1ABCF4DA8(0, &qword_1ED34C578, (uint64_t (*)(void))sub_1ABDD7CA8, (uint64_t)&type metadata for RawAttributionSourceLogo.ResolvedCodingKeys, MEMORY[0x1E0DED170]);
  v32 = *(_QWORD *)(v3 - 8);
  v33 = v3;
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)&v25 - v4;
  v29 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  MEMORY[0x1E0C80A78](v29);
  v30 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1ED34C580, (uint64_t (*)(void))sub_1ABDD7CEC, (uint64_t)&type metadata for RawAttributionSourceLogo.UnresolvedCodingKeys, v2);
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  MEMORY[0x1E0C80A78](v6);
  v26 = (char *)&v25 - v7;
  v25 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  MEMORY[0x1E0C80A78](v25);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawAttributionSourceLogo(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1ED34C568, (uint64_t (*)(void))sub_1ABDD7D30, (uint64_t)&type metadata for RawAttributionSourceLogo.CodingKeys, v2);
  v14 = v13;
  v34 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDD7D30();
  sub_1ABF32368();
  sub_1ABCFC790(v35, (uint64_t)v12, type metadata accessor for RawAttributionSourceLogo);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = v30;
    sub_1ABCFE2AC((uint64_t)v12, v30, type metadata accessor for RawAttributionSourceLogo.Resolved);
    v37 = 1;
    sub_1ABDD7CA8();
    v18 = v31;
    sub_1ABF32134();
    sub_1ABCFE1EC(&qword_1EEC42FA8, type metadata accessor for RawAttributionSourceLogo.Resolved, (uint64_t)&unk_1ABF3C404);
    v19 = v33;
    sub_1ABF321D0();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v19);
    v20 = type metadata accessor for RawAttributionSourceLogo.Resolved;
    v21 = v17;
  }
  else
  {
    sub_1ABCFE2AC((uint64_t)v12, (uint64_t)v9, type metadata accessor for RawAttributionSourceLogo.Unresolved);
    v36 = 0;
    sub_1ABDD7CEC();
    v22 = v26;
    sub_1ABF32134();
    sub_1ABCFE1EC(&qword_1ED34C458, type metadata accessor for RawAttributionSourceLogo.Unresolved, (uint64_t)&unk_1ABF3C34C);
    v23 = v28;
    sub_1ABF321D0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v23);
    v20 = type metadata accessor for RawAttributionSourceLogo.Unresolved;
    v21 = (uint64_t)v9;
  }
  sub_1ABCFC3BC(v21, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v16, v14);
}

uint64_t sub_1ABDD6828()
{
  sub_1ABF32308();
  sub_1ABDD5ECC();
  return sub_1ABF32338();
}

uint64_t sub_1ABDD6864@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  char v50;
  char v51;

  v40 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1ABCF4DA8(0, &qword_1EEC42FB0, (uint64_t (*)(void))sub_1ABDD7CA8, (uint64_t)&type metadata for RawAttributionSourceLogo.ResolvedCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v42 = v4;
  v44 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v36 - v5;
  sub_1ABCF4DA8(0, &qword_1EEC42FB8, (uint64_t (*)(void))sub_1ABDD7CEC, (uint64_t)&type metadata for RawAttributionSourceLogo.UnresolvedCodingKeys, v3);
  v41 = v6;
  v43 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)&v36 - v7;
  sub_1ABCF4DA8(0, &qword_1EEC42FC0, (uint64_t (*)(void))sub_1ABDD7D30, (uint64_t)&type metadata for RawAttributionSourceLogo.CodingKeys, v3);
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for RawAttributionSourceLogo(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v36 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v36 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDD7D30();
  v20 = v49;
  sub_1ABF3235C();
  if (v20)
    goto LABEL_7;
  v37 = v13;
  v38 = v16;
  v22 = v47;
  v21 = v48;
  v36 = v19;
  v39 = v11;
  v49 = a1;
  v23 = sub_1ABF3211C();
  v24 = v10;
  if (*(_QWORD *)(v23 + 16) != 1)
  {
    v28 = sub_1ABF31EDC();
    swift_allocError();
    v30 = v29;
    sub_1ABDD7D74();
    *v30 = v39;
    sub_1ABF32080();
    sub_1ABF31EC4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x1E0DEC450], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v22);
    a1 = v49;
LABEL_7:
    v31 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  if ((*(_BYTE *)(v23 + 32) & 1) != 0)
  {
    v51 = 1;
    sub_1ABDD7CA8();
    v25 = v45;
    sub_1ABF32074();
    type metadata accessor for RawAttributionSourceLogo.Resolved(0);
    sub_1ABCFE1EC(&qword_1EEC42FD8, type metadata accessor for RawAttributionSourceLogo.Resolved, (uint64_t)&unk_1ABF3C3DC);
    v26 = (uint64_t)v37;
    v27 = v42;
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v22);
  }
  else
  {
    v50 = 0;
    sub_1ABDD7CEC();
    sub_1ABF32074();
    type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
    sub_1ABCFE1EC(&qword_1EEC42FA0, type metadata accessor for RawAttributionSourceLogo.Unresolved, (uint64_t)&unk_1ABF3C324);
    v33 = v41;
    sub_1ABF32110();
    v34 = v46;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v21, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v22);
    v26 = (uint64_t)v38;
  }
  swift_storeEnumTagMultiPayload();
  v35 = (uint64_t)v36;
  sub_1ABCFE2AC(v26, (uint64_t)v36, type metadata accessor for RawAttributionSourceLogo);
  sub_1ABCFE2AC(v35, v40, type metadata accessor for RawAttributionSourceLogo);
  v31 = (uint64_t)v49;
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

uint64_t sub_1ABDD6D90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABDD6864(a1, a2);
}

uint64_t sub_1ABDD6DA4(_QWORD *a1)
{
  return sub_1ABDD6460(a1);
}

uint64_t sub_1ABDD6DB8()
{
  sub_1ABF32308();
  sub_1ABDD5ECC();
  return sub_1ABF32338();
}

uint64_t sub_1ABDD6DF8()
{
  sub_1ABF32308();
  sub_1ABDD5ECC();
  return sub_1ABF32338();
}

BOOL sub_1ABDD6E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v28;

  v4 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RawAttributionSourceLogo(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  sub_1ABDDBF54();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v18[*(int *)(v19 + 48)];
  sub_1ABCFC790(a1, (uint64_t)v18, type metadata accessor for RawAttributionSourceLogo);
  sub_1ABCFC790(a2, v20, type metadata accessor for RawAttributionSourceLogo);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1ABCFC790((uint64_t)v18, (uint64_t)v12, type metadata accessor for RawAttributionSourceLogo);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1ABCFE2AC(v20, (uint64_t)v6, type metadata accessor for RawAttributionSourceLogo.Resolved);
      v21 = sub_1ABDD70B8((uint64_t)v12, (uint64_t)v6);
      sub_1ABCFC3BC((uint64_t)v6, type metadata accessor for RawAttributionSourceLogo.Resolved);
      v22 = (uint64_t)v12;
      v23 = type metadata accessor for RawAttributionSourceLogo.Resolved;
LABEL_9:
      sub_1ABCFC3BC(v22, v23);
      v26 = type metadata accessor for RawAttributionSourceLogo;
      goto LABEL_10;
    }
    v24 = type metadata accessor for RawAttributionSourceLogo.Resolved;
    v25 = (uint64_t)v12;
  }
  else
  {
    sub_1ABCFC790((uint64_t)v18, (uint64_t)v15, type metadata accessor for RawAttributionSourceLogo);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1ABCFE2AC(v20, (uint64_t)v9, type metadata accessor for RawAttributionSourceLogo.Unresolved);
      v21 = sub_1ABDD70B8((uint64_t)v15, (uint64_t)v9);
      sub_1ABCFC3BC((uint64_t)v9, type metadata accessor for RawAttributionSourceLogo.Unresolved);
      v22 = (uint64_t)v15;
      v23 = type metadata accessor for RawAttributionSourceLogo.Unresolved;
      goto LABEL_9;
    }
    v24 = type metadata accessor for RawAttributionSourceLogo.Unresolved;
    v25 = (uint64_t)v15;
  }
  sub_1ABCFC3BC(v25, v24);
  v21 = 0;
  v26 = (uint64_t (*)(_QWORD))sub_1ABDDBF54;
LABEL_10:
  sub_1ABCFC3BC((uint64_t)v18, v26);
  return v21;
}

BOOL sub_1ABDD70B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  void (*v31)(_BYTE *, uint64_t, uint64_t);
  uint64_t v32;
  _BYTE *v33;
  void (*v34)(uint64_t);
  void (*v35)(_BYTE *, uint64_t);
  _BYTE v37[12];
  int v38;
  _BYTE *v39;
  _BYTE *v40;

  v4 = sub_1ABF305D4();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABD722CC(0, (unint64_t *)&qword_1ED34EA98, (unint64_t *)&qword_1ED350380, v5);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = &v37[-v11];
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v5);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v37[-v17];
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = &v37[-v21];
  if ((MEMORY[0x1AF436794](a1, a2, v20) & 1) == 0)
    return 0;
  v39 = v8;
  v40 = v15;
  v23 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  v24 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1ABCF57B8(a1 + *(int *)(v23 + 20), (uint64_t)v22, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v25 = *(int *)(v23 + 20);
  v26 = v6;
  sub_1ABCF57B8(a2 + v25, (uint64_t)v18, (unint64_t *)&qword_1ED350380, v24);
  v27 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1ABCF57B8((uint64_t)v22, (uint64_t)v12, (unint64_t *)&qword_1ED350380, v24);
  sub_1ABCF57B8((uint64_t)v18, v27, (unint64_t *)&qword_1ED350380, v24);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v28((uint64_t)v12, 1, v4) == 1)
  {
    sub_1ABD18510((uint64_t)v18, (unint64_t *)&qword_1ED350380, v24);
    sub_1ABD18510((uint64_t)v22, (unint64_t *)&qword_1ED350380, v24);
    if (v28(v27, 1, v4) == 1)
    {
      sub_1ABD18510((uint64_t)v12, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      return 1;
    }
    goto LABEL_7;
  }
  v29 = (uint64_t)v40;
  sub_1ABCF57B8((uint64_t)v12, (uint64_t)v40, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v28(v27, 1, v4) == 1)
  {
    v30 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1ABD18510((uint64_t)v18, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1ABD18510((uint64_t)v22, (unint64_t *)&qword_1ED350380, v30);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v29, v4);
LABEL_7:
    sub_1ABD7232C((uint64_t)v12, (unint64_t *)&qword_1ED34EA98, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    return 0;
  }
  v31 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32);
  v32 = v29;
  v33 = v39;
  v31(v39, v27, v4);
  v34 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1ABCFE1EC(&qword_1ED34EA88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
  v38 = sub_1ABF31720();
  v35 = *(void (**)(_BYTE *, uint64_t))(v26 + 8);
  v35(v33, v4);
  sub_1ABD18510((uint64_t)v18, (unint64_t *)&qword_1ED350380, v34);
  sub_1ABD18510((uint64_t)v22, (unint64_t *)&qword_1ED350380, v34);
  v35((_BYTE *)v32, v4);
  sub_1ABD18510((uint64_t)v12, (unint64_t *)&qword_1ED350380, v34);
  return (v38 & 1) != 0;
}

BOOL sub_1ABDD7464(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _BOOL8 result;
  uint64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  void (*v40)(uint64_t);
  void (*v41)(uint64_t);
  unint64_t *v42;
  unint64_t *v43;
  void (*v44)(uint64_t);
  uint64_t v45;
  _BYTE *v46;
  void (*v47)(uint64_t);
  void (*v48)(_BYTE *, uint64_t);
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  BOOL v57;
  _BYTE v58[12];
  int v59;
  _BYTE *v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;

  v68 = type metadata accessor for RawAttributionSourceLogo(0);
  v65 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v5 = &v58[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABD722CC(0, &qword_1ED34EA50, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
  v64 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = &v58[-v7];
  sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
  MEMORY[0x1E0C80A78](v9);
  v62 = &v58[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v66 = &v58[-v12];
  MEMORY[0x1E0C80A78](v13);
  v67 = &v58[-v14];
  v15 = sub_1ABF305D4();
  v16 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v69 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v63 = &v58[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1ABD722CC(0, (unint64_t *)&qword_1ED34EA98, (unint64_t *)&qword_1ED350380, v16);
  v19 = v18;
  MEMORY[0x1E0C80A78](v18);
  v21 = &v58[-v20];
  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, v16);
  MEMORY[0x1E0C80A78](v22);
  v24 = &v58[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v25);
  v27 = &v58[-v26];
  MEMORY[0x1E0C80A78](v28);
  v30 = &v58[-v29];
  v31 = *a1;
  v32 = a1[1];
  v70 = a1;
  v71 = a2;
  if (v31 == *a2 && v32 == a2[1] || (v33 = sub_1ABF3223C(), result = 0, (v33 & 1) != 0))
  {
    v60 = v5;
    v61 = v8;
    v35 = type metadata accessor for RawAttributionSource(0);
    v36 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1ABCF57B8((uint64_t)v70 + *(int *)(v35 + 20), (uint64_t)v30, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1ABCF57B8((uint64_t)v71 + *(int *)(v35 + 20), (uint64_t)v27, (unint64_t *)&qword_1ED350380, v36);
    v37 = (uint64_t)&v21[*(int *)(v19 + 48)];
    sub_1ABCF57B8((uint64_t)v30, (uint64_t)v21, (unint64_t *)&qword_1ED350380, v36);
    sub_1ABCF57B8((uint64_t)v27, v37, (unint64_t *)&qword_1ED350380, v36);
    v38 = v69;
    v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
    if (v39((uint64_t)v21, 1, v15) == 1)
    {
      v40 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      sub_1ABD18510((uint64_t)v27, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      sub_1ABD18510((uint64_t)v30, (unint64_t *)&qword_1ED350380, v40);
      if (v39(v37, 1, v15) == 1)
      {
        sub_1ABD18510((uint64_t)v21, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
LABEL_11:
        v49 = v67;
        sub_1ABCF57B8((uint64_t)v70 + *(int *)(v35 + 24), (uint64_t)v67, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
        v50 = v66;
        sub_1ABCF57B8((uint64_t)v71 + *(int *)(v35 + 24), (uint64_t)v66, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
        v51 = (uint64_t)v61;
        v52 = (uint64_t)&v61[*(int *)(v64 + 48)];
        sub_1ABCF57B8((uint64_t)v49, (uint64_t)v61, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
        sub_1ABCF57B8((uint64_t)v50, v52, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
        v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
        v54 = v68;
        if (v53(v51, 1, v68) == 1)
        {
          sub_1ABD18510((uint64_t)v50, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
          sub_1ABD18510((uint64_t)v49, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
          if (v53(v52, 1, v54) == 1)
          {
            sub_1ABD18510(v51, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
            return 1;
          }
        }
        else
        {
          v55 = v62;
          sub_1ABCF57B8(v51, (uint64_t)v62, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
          if (v53(v52, 1, v54) != 1)
          {
            v56 = (uint64_t)v60;
            sub_1ABCFE2AC(v52, (uint64_t)v60, type metadata accessor for RawAttributionSourceLogo);
            v57 = sub_1ABDD6E34((uint64_t)v55, v56);
            sub_1ABCFC3BC(v56, type metadata accessor for RawAttributionSourceLogo);
            sub_1ABD18510((uint64_t)v50, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
            sub_1ABD18510((uint64_t)v49, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
            sub_1ABCFC3BC((uint64_t)v55, type metadata accessor for RawAttributionSourceLogo);
            sub_1ABD18510(v51, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
            return v57;
          }
          sub_1ABD18510((uint64_t)v50, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
          sub_1ABD18510((uint64_t)v49, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
          sub_1ABCFC3BC((uint64_t)v55, type metadata accessor for RawAttributionSourceLogo);
        }
        v42 = &qword_1ED34EA50;
        v43 = &qword_1ED34EA48;
        v44 = (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo;
        v45 = v51;
        goto LABEL_17;
      }
    }
    else
    {
      sub_1ABCF57B8((uint64_t)v21, (uint64_t)v24, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      if (v39(v37, 1, v15) != 1)
      {
        v46 = v63;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v38 + 32))(v63, v37, v15);
        v47 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        sub_1ABCFE1EC(&qword_1ED34EA88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
        v59 = sub_1ABF31720();
        v48 = *(void (**)(_BYTE *, uint64_t))(v38 + 8);
        v48(v46, v15);
        sub_1ABD18510((uint64_t)v27, (unint64_t *)&qword_1ED350380, v47);
        sub_1ABD18510((uint64_t)v30, (unint64_t *)&qword_1ED350380, v47);
        v48(v24, v15);
        sub_1ABD18510((uint64_t)v21, (unint64_t *)&qword_1ED350380, v47);
        if ((v59 & 1) == 0)
          return 0;
        goto LABEL_11;
      }
      v41 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      sub_1ABD18510((uint64_t)v27, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      sub_1ABD18510((uint64_t)v30, (unint64_t *)&qword_1ED350380, v41);
      (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v24, v15);
    }
    v42 = (unint64_t *)&qword_1ED34EA98;
    v43 = (unint64_t *)&qword_1ED350380;
    v44 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v45 = (uint64_t)v21;
LABEL_17:
    sub_1ABD7232C(v45, v42, v43, v44);
    return 0;
  }
  return result;
}

unint64_t sub_1ABDD7B60()
{
  unint64_t result;

  result = qword_1ED34C3E8;
  if (!qword_1ED34C3E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3CC64, &type metadata for RawAttributionSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C3E8);
  }
  return result;
}

uint64_t type metadata accessor for RawAttributionSourceLogo.Unresolved(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED350498);
}

uint64_t sub_1ABDD7BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1ABDD7C0C()
{
  unint64_t result;

  result = qword_1ED34C440;
  if (!qword_1ED34C440)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3CC14, &type metadata for RawAttributionSourceLogo.Unresolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C440);
  }
  return result;
}

uint64_t type metadata accessor for RawAttributionSourceLogo.Resolved(uint64_t a1)
{
  return sub_1ABD008B4(a1, (uint64_t *)&unk_1ED3504A8);
}

unint64_t sub_1ABDD7C64()
{
  unint64_t result;

  result = qword_1EEC42F90;
  if (!qword_1EEC42F90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3CBC4, &type metadata for RawAttributionSourceLogo.Resolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42F90);
  }
  return result;
}

unint64_t sub_1ABDD7CA8()
{
  unint64_t result;

  result = qword_1ED34C460;
  if (!qword_1ED34C460)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3CB74, &type metadata for RawAttributionSourceLogo.ResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C460);
  }
  return result;
}

unint64_t sub_1ABDD7CEC()
{
  unint64_t result;

  result = qword_1ED34C478;
  if (!qword_1ED34C478)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3CB24, &type metadata for RawAttributionSourceLogo.UnresolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C478);
  }
  return result;
}

unint64_t sub_1ABDD7D30()
{
  unint64_t result;

  result = qword_1ED34C428;
  if (!qword_1ED34C428)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3CAD4, &type metadata for RawAttributionSourceLogo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C428);
  }
  return result;
}

void sub_1ABDD7D74()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEC42FC8)
  {
    sub_1ABDD7DE0();
    sub_1ABF31ED0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEC42FC8);
  }
}

unint64_t sub_1ABDD7DE0()
{
  unint64_t result;

  result = qword_1EEC42FD0;
  if (!qword_1EEC42FD0)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEC42FD0);
  }
  return result;
}

uint64_t sub_1ABDD7E1C()
{
  return sub_1ABCFE1EC(&qword_1EEC42FE0, type metadata accessor for RawAttributionSourceLogo.Unresolved, (uint64_t)&unk_1ABF3C3B4);
}

uint64_t sub_1ABDD7E48()
{
  return sub_1ABCFE1EC(&qword_1EEC42FE8, type metadata accessor for RawAttributionSourceLogo.Resolved, (uint64_t)&unk_1ABF3C46C);
}

uint64_t sub_1ABDD7E74()
{
  return sub_1ABCFE1EC(&qword_1EEC42FF0, type metadata accessor for RawAttributionSourceLogo, (uint64_t)&unk_1ABF3C524);
}

uint64_t *sub_1ABDD7EA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1ABF305D4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    sub_1ABF2FF5C();
    if (v13(v10, 1, v11))
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 24);
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for RawAttributionSourceLogo(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v41 = v20;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v23 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v23(v17, v18, v11);
      v24 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
      __dst = &v17[v24];
      v25 = &v18[v24];
      v26 = v13(&v18[v24], 1, v11);
      if (EnumCaseMultiPayload == 1)
      {
        if (v26)
        {
          sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          v23(__dst, v25, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
        }
        v29 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        *(_QWORD *)&v17[v29[5]] = *(_QWORD *)&v18[v29[5]];
        v30 = v29[6];
        v31 = (uint64_t *)&v17[v30];
        v32 = (uint64_t *)&v18[v30];
        v33 = *v32;
        v34 = v32[1];
        sub_1ABD0F474(*v32, v34);
        *v31 = v33;
        v31[1] = v34;
        v35 = v29[7];
        v36 = &v17[v35];
        v37 = &v18[v35];
        v38 = *((_QWORD *)v37 + 1);
        if (v38 >> 60 == 15)
        {
          *(_OWORD *)v36 = *(_OWORD *)v37;
        }
        else
        {
          v39 = *(_QWORD *)v37;
          sub_1ABD0F474(*(_QWORD *)v37, *((_QWORD *)v37 + 1));
          *(_QWORD *)v36 = v39;
          *((_QWORD *)v36 + 1) = v38;
        }
      }
      else if (v26)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v23(__dst, v25, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t sub_1ABDD81E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1ABF305D4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 24);
  v9 = type metadata accessor for RawAttributionSourceLogo(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if (!(_DWORD)result)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v16 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v16(v8, v5);
    v12 = v8 + *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v12, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (!(_DWORD)result)
        v16(v12, v5);
      v13 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      result = sub_1ABD0F430(*(_QWORD *)(v8 + *(int *)(v13 + 24)), *(_QWORD *)(v8 + *(int *)(v13 + 24) + 8));
      v14 = (uint64_t *)(v8 + *(int *)(v13 + 28));
      v15 = v14[1];
      if (v15 >> 60 != 15)
        return sub_1ABD0F430(*v14, v15);
    }
    else if (!(_DWORD)result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v16)(v12, v5);
    }
  }
  return result;
}

_QWORD *sub_1ABDD8368(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1ABF305D4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  sub_1ABF2FF5C();
  if (v12(v9, 1, v10))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for RawAttributionSourceLogo(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v39 = v18;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v21 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v21(v15, v16, v10);
    v22 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    __dst = &v15[v22];
    v23 = &v16[v22];
    v24 = v12(&v16[v22], 1, v10);
    if (EnumCaseMultiPayload == 1)
    {
      if (v24)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        v21(__dst, v23, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
      }
      v27 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)&v15[v27[5]] = *(_QWORD *)&v16[v27[5]];
      v28 = v27[6];
      v29 = (uint64_t *)&v15[v28];
      v30 = (uint64_t *)&v16[v28];
      v31 = *v30;
      v32 = v30[1];
      sub_1ABD0F474(*v30, v32);
      *v29 = v31;
      v29[1] = v32;
      v33 = v27[7];
      v34 = &v15[v33];
      v35 = &v16[v33];
      v36 = *((_QWORD *)v35 + 1);
      if (v36 >> 60 == 15)
      {
        *(_OWORD *)v34 = *(_OWORD *)v35;
      }
      else
      {
        v37 = *(_QWORD *)v35;
        sub_1ABD0F474(*(_QWORD *)v35, *((_QWORD *)v35 + 1));
        *(_QWORD *)v34 = v37;
        *((_QWORD *)v34 + 1) = v36;
      }
    }
    else if (v24)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v21(__dst, v23, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

_QWORD *sub_1ABDD867C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  uint64_t v28;
  int v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  _QWORD *__dst;
  char *__dsta;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF305D4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for RawAttributionSourceLogo(0);
  __dst = *(_QWORD **)(v18 - 8);
  v19 = (uint64_t (*)(char *, uint64_t, uint64_t))__dst[6];
  v20 = v19(v16, 1, v18);
  v21 = v19(v17, 1, v18);
  if (v20)
  {
    if (v21)
      goto LABEL_12;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v60 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v60(v16, v17, v9);
    v24 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    v25 = &v16[v24];
    v26 = &v17[v24];
    v27 = v11(&v17[v24], 1, v9);
    if (EnumCaseMultiPayload == 1)
    {
      if (v27)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v60(v25, v26, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
      }
      v36 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)&v16[v36[5]] = *(_QWORD *)&v17[v36[5]];
      v37 = v36[6];
      v38 = (uint64_t *)&v16[v37];
      v39 = (uint64_t *)&v17[v37];
      v40 = *v39;
      v41 = v39[1];
      sub_1ABD0F474(*v39, v41);
      *v38 = v40;
      v38[1] = v41;
      v42 = v36[7];
      v43 = &v16[v42];
      v44 = &v17[v42];
      v45 = *((_QWORD *)v44 + 1);
      if (v45 >> 60 == 15)
      {
        *(_OWORD *)v43 = *(_OWORD *)v44;
      }
      else
      {
        v46 = *(_QWORD *)v44;
        sub_1ABD0F474(*(_QWORD *)v44, *((_QWORD *)v44 + 1));
        *(_QWORD *)v43 = v46;
        *((_QWORD *)v43 + 1) = v45;
      }
    }
    else if (v27)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v60(v25, v26, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dst[7])(v16, 0, 1, v18);
  }
  else
  {
    if (v21)
    {
      sub_1ABCFC3BC((uint64_t)v16, type metadata accessor for RawAttributionSourceLogo);
LABEL_12:
      sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      return a1;
    }
    if (a1 != a2)
    {
      sub_1ABCFC3BC((uint64_t)v16, type metadata accessor for RawAttributionSourceLogo);
      v29 = swift_getEnumCaseMultiPayload();
      v30 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v30(v16, v17, v9);
      v31 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
      __dsta = &v16[v31];
      v32 = &v17[v31];
      v33 = v11(&v17[v31], 1, v9);
      if (v29 == 1)
      {
        if (v33)
        {
          sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(__dsta, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          v30(__dsta, v32, v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(__dsta, 0, 1, v9);
        }
        v49 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        *(_QWORD *)&v16[v49[5]] = *(_QWORD *)&v17[v49[5]];
        v50 = v49[6];
        v51 = (uint64_t *)&v16[v50];
        v52 = (uint64_t *)&v17[v50];
        v53 = *v52;
        v54 = v52[1];
        sub_1ABD0F474(*v52, v54);
        *v51 = v53;
        v51[1] = v54;
        v55 = v49[7];
        v56 = &v16[v55];
        v57 = &v17[v55];
        v58 = *((_QWORD *)v57 + 1);
        if (v58 >> 60 == 15)
        {
          *(_OWORD *)v56 = *(_OWORD *)v57;
        }
        else
        {
          v59 = *(_QWORD *)v57;
          sub_1ABD0F474(*(_QWORD *)v57, *((_QWORD *)v57 + 1));
          *(_QWORD *)v56 = v59;
          *((_QWORD *)v56 + 1) = v58;
        }
      }
      else if (v33)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dsta, v32, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        v30(__dsta, v32, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(__dsta, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

_OWORD *sub_1ABDD8BF0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  char *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  void (*v27)(char *, char *, uint64_t);
  char *__dst;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF305D4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for RawAttributionSourceLogo(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v27 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v27(v14, v15, v9);
    v20 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    __dst = &v14[v20];
    v21 = &v15[v20];
    v22 = v11(&v15[v20], 1, v9);
    if (EnumCaseMultiPayload == 1)
    {
      if (v22)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v27(__dst, v21, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
      }
      v25 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)&v14[v25[5]] = *(_QWORD *)&v15[v25[5]];
      *(_OWORD *)&v14[v25[6]] = *(_OWORD *)&v15[v25[6]];
      *(_OWORD *)&v14[v25[7]] = *(_OWORD *)&v15[v25[7]];
    }
    else if (v22)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v27(__dst, v21, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

_QWORD *sub_1ABDD8EB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  uint64_t v29;
  int v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  int *v38;
  uint64_t v39;
  int *v41;
  void (*v42)(char *, char *, uint64_t);
  _QWORD *__dst;
  char *__dsta;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1ABF305D4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for RawAttributionSourceLogo(0);
  __dst = *(_QWORD **)(v19 - 8);
  v20 = (uint64_t (*)(char *, uint64_t, uint64_t))__dst[6];
  v21 = v20(v17, 1, v19);
  v22 = v20(v18, 1, v19);
  if (v21)
  {
    if (v22)
      goto LABEL_12;
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v42 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v42(v17, v18, v10);
    v25 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    v26 = &v17[v25];
    v27 = &v18[v25];
    v28 = v12(&v18[v25], 1, v10);
    if (EnumCaseMultiPayload == 1)
    {
      if (v28)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v42(v26, v27, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v26, 0, 1, v10);
      }
      v37 = __dst;
      v38 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)&v17[v38[5]] = *(_QWORD *)&v18[v38[5]];
      *(_OWORD *)&v17[v38[6]] = *(_OWORD *)&v18[v38[6]];
      *(_OWORD *)&v17[v38[7]] = *(_OWORD *)&v18[v38[7]];
    }
    else
    {
      if (v28)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v42(v26, v27, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v26, 0, 1, v10);
      }
      v37 = __dst;
    }
    swift_storeEnumTagMultiPayload();
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v37[7])(v17, 0, 1, v19);
  }
  else
  {
    if (v22)
    {
      sub_1ABCFC3BC((uint64_t)v17, type metadata accessor for RawAttributionSourceLogo);
LABEL_12:
      sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      return a1;
    }
    if (a1 != a2)
    {
      sub_1ABCFC3BC((uint64_t)v17, type metadata accessor for RawAttributionSourceLogo);
      v30 = swift_getEnumCaseMultiPayload();
      v31 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v31(v17, v18, v10);
      v32 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
      __dsta = &v17[v32];
      v33 = &v18[v32];
      v34 = v12(&v18[v32], 1, v10);
      if (v30 == 1)
      {
        if (v34)
        {
          sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v31(__dsta, v33, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dsta, 0, 1, v10);
        }
        v41 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
        *(_QWORD *)&v17[v41[5]] = *(_QWORD *)&v18[v41[5]];
        *(_OWORD *)&v17[v41[6]] = *(_OWORD *)&v18[v41[6]];
        *(_OWORD *)&v17[v41[7]] = *(_OWORD *)&v18[v41[7]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (v34)
        {
          sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(__dsta, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          v31(__dsta, v33, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dsta, 0, 1, v10);
        }
        swift_storeEnumTagMultiPayload();
      }
    }
  }
  return a1;
}

uint64_t sub_1ABDD9390()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABDD939C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1ABDD945C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABDD9468(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1ABD00308(0, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1ABDD9524()
{
  unint64_t v0;
  unint64_t v1;

  sub_1ABD00308(319, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
  {
    sub_1ABD00308(319, &qword_1ED34EA48, (void (*)(uint64_t))type metadata accessor for RawAttributionSourceLogo);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

char *sub_1ABDD95D4(char *a1, char *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_1ABF305D4();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7);
    if (EnumCaseMultiPayload == 1)
    {
      if (v13)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v9(v11, v12, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      }
      v17 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)&a1[v17[5]] = *(_QWORD *)&a2[v17[5]];
      v18 = v17[6];
      v19 = (uint64_t *)&a1[v18];
      v20 = (uint64_t *)&a2[v18];
      v21 = *v20;
      v22 = v20[1];
      sub_1ABD0F474(*v20, v22);
      *v19 = v21;
      v19[1] = v22;
      v23 = v17[7];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = *((_QWORD *)v25 + 1);
      if (v26 >> 60 == 15)
      {
        *(_OWORD *)v24 = *(_OWORD *)v25;
      }
      else
      {
        v27 = *(_QWORD *)v25;
        sub_1ABD0F474(*(_QWORD *)v25, *((_QWORD *)v25 + 1));
        *(_QWORD *)v24 = v27;
        *((_QWORD *)v24 + 1) = v26;
      }
    }
    else if (v13)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1ABDD97F8(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = sub_1ABF305D4();
  v4 = *(_QWORD *)(v3 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(a1, v3);
  v5 = a1 + *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    if (!(_DWORD)result)
      v10(v5, v3);
    v7 = type metadata accessor for RawAttributionSourceLogo.Resolved(0);
    result = sub_1ABD0F430(*(_QWORD *)(a1 + *(int *)(v7 + 24)), *(_QWORD *)(a1 + *(int *)(v7 + 24) + 8));
    v8 = (uint64_t *)(a1 + *(int *)(v7 + 28));
    v9 = v8[1];
    if (v9 >> 60 != 15)
      return sub_1ABD0F430(*v8, v9);
  }
  else if (!(_DWORD)result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v5, v3);
  }
  return result;
}

uint64_t sub_1ABDD9910(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_1ABF305D4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a2 + v8, 1, v5);
  if (EnumCaseMultiPayload == 1)
  {
    if (v11)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v9, (uint64_t)v10, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
    }
    v14 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
    *(_QWORD *)(a1 + v14[5]) = *(_QWORD *)(a2 + v14[5]);
    v15 = v14[6];
    v16 = (uint64_t *)(a1 + v15);
    v17 = (uint64_t *)(a2 + v15);
    v18 = *v17;
    v19 = v17[1];
    sub_1ABD0F474(*v17, v19);
    *v16 = v18;
    v16[1] = v19;
    v20 = v14[7];
    v21 = a1 + v20;
    v22 = (uint64_t *)(a2 + v20);
    v23 = v22[1];
    if (v23 >> 60 == 15)
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
    }
    else
    {
      v24 = *v22;
      sub_1ABD0F474(*v22, v22[1]);
      *(_QWORD *)v21 = v24;
      *(_QWORD *)(v21 + 8) = v23;
    }
  }
  else if (v11)
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1ABDD9B08(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1ABCFC3BC(a1, type metadata accessor for RawAttributionSourceLogo);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_1ABF305D4();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v7(a1, a2, v5);
    v8 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a2 + v8, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (v11)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v9, (uint64_t)v10, v5);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
      }
      v14 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)(a1 + v14[5]) = *(_QWORD *)(a2 + v14[5]);
      v15 = v14[6];
      v16 = (uint64_t *)(a1 + v15);
      v17 = (uint64_t *)(a2 + v15);
      v18 = *v17;
      v19 = v17[1];
      sub_1ABD0F474(*v17, v19);
      *v16 = v18;
      v16[1] = v19;
      v20 = v14[7];
      v21 = a1 + v20;
      v22 = (uint64_t *)(a2 + v20);
      v23 = v22[1];
      if (v23 >> 60 == 15)
      {
        *(_OWORD *)v21 = *(_OWORD *)v22;
      }
      else
      {
        v24 = *v22;
        sub_1ABD0F474(*v22, v22[1]);
        *(_QWORD *)v21 = v24;
        *(_QWORD *)(v21 + 8) = v23;
      }
    }
    else if (v11)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v9, (uint64_t)v10, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1ABDD9D18(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_1ABF305D4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(&a2[v8], 1, v5);
  if (EnumCaseMultiPayload == 1)
  {
    if (v11)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v7(v9, v10, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
    }
    v14 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
    *(_QWORD *)&a1[v14[5]] = *(_QWORD *)&a2[v14[5]];
    *(_OWORD *)&a1[v14[6]] = *(_OWORD *)&a2[v14[6]];
    *(_OWORD *)&a1[v14[7]] = *(_OWORD *)&a2[v14[7]];
  }
  else if (v11)
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1ABDD9EC8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  const void *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;

  if (a1 != a2)
  {
    sub_1ABCFC3BC(a1, type metadata accessor for RawAttributionSourceLogo);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_1ABF305D4();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v7(a1, a2, v5);
    v8 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a2 + v8, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (v11)
      {
        sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v9, (uint64_t)v10, v5);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
      }
      v14 = (int *)type metadata accessor for RawAttributionSourceLogo.Resolved(0);
      *(_QWORD *)(a1 + v14[5]) = *(_QWORD *)(a2 + v14[5]);
      *(_OWORD *)(a1 + v14[6]) = *(_OWORD *)(a2 + v14[6]);
      *(_OWORD *)(a1 + v14[7]) = *(_OWORD *)(a2 + v14[7]);
    }
    else if (v11)
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v9, (uint64_t)v10, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for NetworkEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1ABDDA0AC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1ABDDA0BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for RawAttributionSourceLogo.Unresolved(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for RawAttributionSourceLogo.Resolved(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1ABDDA13C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = sub_1ABF305D4();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1ABDDA240(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_1ABF305D4();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *sub_1ABDDA2D4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_1ABDDA3AC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *sub_1ABDDA4D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_1ABDDA5A8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t sub_1ABDDA6CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABDDA6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1ABDDA75C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABDDA768(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = sub_1ABF305D4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1ABDDA7F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1ABF305D4();
  if (v0 <= 0x3F)
  {
    sub_1ABD00308(319, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

char *sub_1ABDDA888(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = sub_1ABF305D4();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = a3[6];
    *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
    v16 = (uint64_t *)&a1[v15];
    v17 = *(_QWORD *)&a2[v15];
    v18 = *(_QWORD *)&a2[v15 + 8];
    sub_1ABD0F474(v17, v18);
    *v16 = v17;
    v16[1] = v18;
    v19 = a3[7];
    v20 = &a1[v19];
    v21 = &a2[v19];
    v22 = *((_QWORD *)v21 + 1);
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
    else
    {
      v23 = *(_QWORD *)v21;
      sub_1ABD0F474(*(_QWORD *)v21, *((_QWORD *)v21 + 1));
      *(_QWORD *)v20 = v23;
      *((_QWORD *)v20 + 1) = v22;
    }
  }
  return a1;
}

uint64_t sub_1ABDDAA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;
  uint64_t *v9;
  unint64_t v10;

  v4 = sub_1ABF305D4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  result = sub_1ABD0F430(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
  v9 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  v10 = v9[1];
  if (v10 >> 60 != 15)
    return sub_1ABD0F430(*v9, v10);
  return result;
}

uint64_t sub_1ABDDAAC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v14 = (uint64_t *)(a1 + v13);
  v15 = *(_QWORD *)(a2 + v13);
  v16 = *(_QWORD *)(a2 + v13 + 8);
  sub_1ABD0F474(v15, v16);
  *v14 = v15;
  v14[1] = v16;
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = v19[1];
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  else
  {
    v21 = *v19;
    sub_1ABD0F474(*v19, v19[1]);
    *(_QWORD *)v18 = v21;
    *(_QWORD *)(v18 + 8) = v20;
  }
  return a1;
}

char *sub_1ABDDAC10(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  v16 = a3[6];
  v17 = (uint64_t *)&a1[v16];
  v18 = (uint64_t *)&a2[v16];
  v19 = *v18;
  v20 = v18[1];
  sub_1ABD0F474(*v18, v20);
  v21 = *v17;
  v22 = v17[1];
  *v17 = v19;
  v17[1] = v20;
  sub_1ABD0F430(v21, v22);
  v23 = a3[7];
  v24 = (uint64_t *)&a1[v23];
  v25 = (uint64_t *)&a2[v23];
  v26 = *(_QWORD *)&a2[v23 + 8];
  if (*(_QWORD *)&a1[v23 + 8] >> 60 != 15)
  {
    if (v26 >> 60 != 15)
    {
      v28 = *v25;
      sub_1ABD0F474(v28, v26);
      v29 = *v24;
      v30 = v24[1];
      *v24 = v28;
      v24[1] = v26;
      sub_1ABD0F430(v29, v30);
      return a1;
    }
    sub_1ABDDADF8((uint64_t)v24);
    goto LABEL_12;
  }
  if (v26 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    return a1;
  }
  v27 = *v25;
  sub_1ABD0F474(v27, v26);
  *v24 = v27;
  v24[1] = v26;
  return a1;
}

uint64_t sub_1ABDDADF8(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

char *sub_1ABDDAE2C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[6];
  *(_QWORD *)&a1[a3[5]] = *(_QWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

uint64_t sub_1ABDDAF34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v6 = sub_1ABF305D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(type metadata accessor for RawAttributionSourceLogo.Unresolved(0) + 20);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    sub_1ABD00308(0, (unint64_t *)&qword_1ED350380, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v17 = *(_QWORD *)(a1 + v16);
  v18 = *(_QWORD *)(a1 + v16 + 8);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  sub_1ABD0F430(v17, v18);
  v19 = a3[7];
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *(_QWORD *)(a1 + v19 + 8);
  if (v22 >> 60 != 15)
  {
    v23 = v21[1];
    if (v23 >> 60 != 15)
    {
      v24 = *v20;
      *v20 = *v21;
      v20[1] = v23;
      sub_1ABD0F430(v24, v22);
      return a1;
    }
    sub_1ABDDADF8((uint64_t)v20);
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  return a1;
}

uint64_t sub_1ABDDB0D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABDDB0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
  if (((4 * (_DWORD)v9) & 0xC) != 0)
    return 16 - ((4 * (_DWORD)v9) & 0xC | (v9 >> 2));
  else
    return 0;
}

uint64_t sub_1ABDDB174()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABDDB180(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 24));
  *v10 = 0;
  v10[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * (_DWORD)a2) << 60;
  return result;
}

uint64_t sub_1ABDDB208()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RawAttributionSourceLogo.Unresolved(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.CodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.CodingKeys;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.UnresolvedCodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.UnresolvedCodingKeys;
}

uint64_t _s10StocksCore24RawAttributionSourceLogoO20UnresolvedCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABDDB2FC + 4 * byte_1ABF3C284[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABDDB31C + 4 * byte_1ABF3C289[v4]))();
}

_BYTE *sub_1ABDDB2FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABDDB31C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDDB324(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDDB32C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDDB334(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDDB33C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.ResolvedCodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.ResolvedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for RawAttributionSourceLogo.Resolved.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABDDB3A4 + 4 * byte_1ABF3C293[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABDDB3D8 + 4 * byte_1ABF3C28E[v4]))();
}

uint64_t sub_1ABDDB3D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDDB3E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDDB3E8);
  return result;
}

uint64_t sub_1ABDDB3F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDDB3FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABDDB400(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDDB408(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.Resolved.CodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.Resolved.CodingKeys;
}

uint64_t _s10StocksCore24RawAttributionSourceLogoO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABDDB470 + 4 * byte_1ABF3C29D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABDDB4A4 + 4 * byte_1ABF3C298[v4]))();
}

uint64_t sub_1ABDDB4A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDDB4AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDDB4B4);
  return result;
}

uint64_t sub_1ABDDB4C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDDB4C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABDDB4CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDDB4D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawAttributionSourceLogo.Unresolved.CodingKeys()
{
  return &type metadata for RawAttributionSourceLogo.Unresolved.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RawAttributionSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABDDB53C + 4 * byte_1ABF3C2A7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABDDB570 + 4 * byte_1ABF3C2A2[v4]))();
}

uint64_t sub_1ABDDB570(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDDB578(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDDB580);
  return result;
}

uint64_t sub_1ABDDB58C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDDB594);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABDDB598(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDDB5A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RawAttributionSource.CodingKeys()
{
  return &type metadata for RawAttributionSource.CodingKeys;
}

unint64_t sub_1ABDDB5C0()
{
  unint64_t result;

  result = qword_1EEC42FF8;
  if (!qword_1EEC42FF8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C714, &type metadata for RawAttributionSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC42FF8);
  }
  return result;
}

unint64_t sub_1ABDDB608()
{
  unint64_t result;

  result = qword_1EEC43000;
  if (!qword_1EEC43000)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C7CC, &type metadata for RawAttributionSourceLogo.Unresolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43000);
  }
  return result;
}

unint64_t sub_1ABDDB650()
{
  unint64_t result;

  result = qword_1EEC43008;
  if (!qword_1EEC43008)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C884, &type metadata for RawAttributionSourceLogo.Resolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43008);
  }
  return result;
}

unint64_t sub_1ABDDB698()
{
  unint64_t result;

  result = qword_1EEC43010;
  if (!qword_1EEC43010)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C93C, &type metadata for RawAttributionSourceLogo.ResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43010);
  }
  return result;
}

unint64_t sub_1ABDDB6E0()
{
  unint64_t result;

  result = qword_1EEC43018;
  if (!qword_1EEC43018)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C9F4, &type metadata for RawAttributionSourceLogo.UnresolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43018);
  }
  return result;
}

unint64_t sub_1ABDDB728()
{
  unint64_t result;

  result = qword_1EEC43020;
  if (!qword_1EEC43020)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3CAAC, &type metadata for RawAttributionSourceLogo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43020);
  }
  return result;
}

unint64_t sub_1ABDDB770()
{
  unint64_t result;

  result = qword_1ED34C438;
  if (!qword_1ED34C438)
  {
    result = MEMORY[0x1AF438F30]("핻9", &type metadata for RawAttributionSourceLogo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C438);
  }
  return result;
}

unint64_t sub_1ABDDB7B8()
{
  unint64_t result;

  result = qword_1ED34C430;
  if (!qword_1ED34C430)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3CA44, &type metadata for RawAttributionSourceLogo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C430);
  }
  return result;
}

unint64_t sub_1ABDDB800()
{
  unint64_t result;

  result = qword_1ED34C488;
  if (!qword_1ED34C488)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C964, &type metadata for RawAttributionSourceLogo.UnresolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C488);
  }
  return result;
}

unint64_t sub_1ABDDB848()
{
  unint64_t result;

  result = qword_1ED34C480;
  if (!qword_1ED34C480)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C98C, &type metadata for RawAttributionSourceLogo.UnresolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C480);
  }
  return result;
}

unint64_t sub_1ABDDB890()
{
  unint64_t result;

  result = qword_1ED34C470;
  if (!qword_1ED34C470)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C8AC, &type metadata for RawAttributionSourceLogo.ResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C470);
  }
  return result;
}

unint64_t sub_1ABDDB8D8()
{
  unint64_t result;

  result = qword_1ED34C468;
  if (!qword_1ED34C468)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C8D4, &type metadata for RawAttributionSourceLogo.ResolvedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C468);
  }
  return result;
}

unint64_t sub_1ABDDB920()
{
  unint64_t result;

  result = qword_1EEC43028;
  if (!qword_1EEC43028)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C7F4, &type metadata for RawAttributionSourceLogo.Resolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43028);
  }
  return result;
}

unint64_t sub_1ABDDB968()
{
  unint64_t result;

  result = qword_1EEC43030;
  if (!qword_1EEC43030)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C81C, &type metadata for RawAttributionSourceLogo.Resolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43030);
  }
  return result;
}

unint64_t sub_1ABDDB9B0()
{
  unint64_t result;

  result = qword_1ED34C450;
  if (!qword_1ED34C450)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C73C, &type metadata for RawAttributionSourceLogo.Unresolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C450);
  }
  return result;
}

unint64_t sub_1ABDDB9F8()
{
  unint64_t result;

  result = qword_1ED34C448;
  if (!qword_1ED34C448)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C764, &type metadata for RawAttributionSourceLogo.Unresolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C448);
  }
  return result;
}

unint64_t sub_1ABDDBA40()
{
  unint64_t result;

  result = qword_1ED34C3F8;
  if (!qword_1ED34C3F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C684, &type metadata for RawAttributionSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C3F8);
  }
  return result;
}

unint64_t sub_1ABDDBA88()
{
  unint64_t result;

  result = qword_1ED34C3F0;
  if (!qword_1ED34C3F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3C6AC, &type metadata for RawAttributionSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34C3F0);
  }
  return result;
}

uint64_t sub_1ABDDBACC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C5255656D6F68 && a2 == 0xE700000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1869049708 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1ABDDBC00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746867696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1ABDDBCD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746867696CLL && a2 == 0xE500000000000000 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1ABDDBE58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x766C6F7365726E75 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766C6F736572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1ABDDBF54()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED346630)
  {
    type metadata accessor for RawAttributionSourceLogo(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED346630);
  }
}

uint64_t sub_1ABDDBFC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  char *v50;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v42 - v6;
  MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v42 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v42 - v10;
  v12 = sub_1ABF305D4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v42 - v17;
  objc_opt_self();
  v19 = swift_dynamicCastObjCClass();
  if (!v19)
    goto LABEL_8;
  v20 = (void *)v19;
  swift_unknownObjectRetain();
  v21 = objc_msgSend(v20, sel_contentURL);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_7;
  }
  v22 = v21;
  sub_1ABF30580();

  v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v23(v11, v15, v12);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v24((uint64_t)v11, 0, 1, v12);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v48(v11, 1, v12) == 1)
  {
LABEL_7:
    swift_unknownObjectRelease();
    sub_1ABD184CC((uint64_t)v11, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
LABEL_8:
    sub_1ABF31CCC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) == 1)
    {
      sub_1ABD184CC((uint64_t)v4, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, 1, 1, v12);
    }
    else
    {
      URL.replacingHostWithStocksHost()(a1);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
  }
  v46 = v24;
  v47 = a1;
  v23(v18, v11, v12);
  v45 = (id)objc_opt_self();
  sub_1ABDDC500();
  v25 = swift_allocObject();
  v42 = xmmword_1ABF366C0;
  v26 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v25 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v25 + 56) = v26;
  *(_QWORD *)(v25 + 32) = 0x656C6369747261;
  *(_QWORD *)(v25 + 40) = 0xE700000000000000;
  v44 = sub_1ABF319FC();
  swift_bridgeObjectRelease();
  sub_1ABCF5A54(0, &qword_1ED34FFA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v43 = sub_1ABF302BC();
  *(_OWORD *)(swift_allocObject() + 16) = v42;
  v27 = sub_1ABF30544();
  v29 = v28;
  sub_1ABF3064C();
  sub_1ABD0F430(v27, v29);
  sub_1ABF302B0();
  swift_bridgeObjectRelease();
  v30 = (void *)sub_1ABF319FC();
  swift_bridgeObjectRelease();
  v31 = (void *)v44;
  v32 = objc_msgSend(v45, sel_fc_NewsURLWithPathComponents_queryItems_internal_, v44, v30, 0);

  if (v32)
  {
    v33 = (uint64_t)v49;
    sub_1ABF30580();

    v34 = 0;
    v35 = v47;
  }
  else
  {
    v34 = 1;
    v35 = v47;
    v33 = (uint64_t)v49;
  }
  v36 = (uint64_t)v50;
  v38 = v46;
  v46(v33, v34, 1, v12);
  sub_1ABDD7BB8(v33, v36);
  if (v48((char *)v36, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    swift_unknownObjectRelease();
    sub_1ABD184CC(v36, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v39 = v35;
    v40 = 1;
  }
  else
  {
    URL.replacingHostWithStocksHost()(v35);
    swift_unknownObjectRelease();
    v41 = *(void (**)(char *, uint64_t))(v13 + 8);
    v41(v18, v12);
    v41((char *)v36, v12);
    v39 = v35;
    v40 = 0;
  }
  return v38(v39, v40, 1, v12);
}

void sub_1ABDDC500()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E380)
  {
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E380);
  }
}

void sub_1ABDDC558()
{
  __asm { BR              X11 }
}

_QWORD *sub_1ABDDC5B8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_1ABDDC848@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1ABE604B0(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1ABDDCA54((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1ABD17FCC((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_1ABDDC8BC(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_1ABDDC920(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_1ABF30358();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_1ABF3037C();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_1ABF30370();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_1ABDDC9CC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31EA0();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDDCA54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1ABF30388();
  swift_allocObject();
  result = sub_1ABF3034C();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1ABF30610();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1ABDDCACC(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_1ABF30388();
      swift_allocObject();
      sub_1ABF30364();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1ABF30610();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

_QWORD *sub_1ABDDCB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_1ABDDC8BC((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1ABDDCBC4, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1ABDDCBC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABDDC9CC(a1, a2);
}

uint64_t type metadata accessor for YahooSearchService()
{
  return objc_opt_self();
}

uint64_t sub_1ABDDCC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _BYTE v22[24];
  uint64_t v23;

  v7 = sub_1ABF30B38();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = *v3;
  sub_1ABF30BE0();
  sub_1ABD07E04(v11 + 16, (uint64_t)v22);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)&v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
  v17 = *v15;
  sub_1ABF2FF5C();
  v18 = sub_1ABDDCD40(a1, a2, v17, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  v19 = sub_1ABF30BBC();

  return v19;
}

id sub_1ABDDCD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  objc_super v23;
  _QWORD v24[5];
  _QWORD v25[5];

  v8 = type metadata accessor for YahooBaseOperationFactory();
  v25[3] = v8;
  v25[4] = &off_1E5AEEE20;
  v25[0] = a3;
  v9 = (objc_class *)type metadata accessor for YahooSearchOperation();
  v10 = (char *)objc_allocWithZone(v9);
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  v16 = *v14;
  v24[3] = v8;
  v24[4] = &off_1E5AEEE20;
  v24[0] = v16;
  v17 = &v10[qword_1EEC44030];
  *(_QWORD *)v17 = a1;
  *((_QWORD *)v17 + 1) = a2;
  sub_1ABD07E04((uint64_t)v24, (uint64_t)&v10[qword_1EEC44038]);
  v18 = &v10[qword_1EEC44040];
  v19 = sub_1ABF30B38();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a4, v19);
  v23.receiver = v10;
  v23.super_class = v9;
  v21 = objc_msgSendSuper2(&v23, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a4, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v21;
}

uint64_t sub_1ABDDCEA0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1ABD12EC4(*(_QWORD *)(v0 + 56));
  return swift_deallocClassInstance();
}

uint64_t sub_1ABDDCED4()
{
  return sub_1ABF2FF68();
}

uint64_t sub_1ABDDCEE0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1ABDDCF14()
{
  unint64_t result;

  result = qword_1EEC43038;
  if (!qword_1EEC43038)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3CE34, &type metadata for StubAppConfigurationManager.ManagerError);
    atomic_store(result, (unint64_t *)&qword_1EEC43038);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StubAppConfigurationManager.ManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABDDCF98 + 4 * byte_1ABF3CD50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABDDCFB8 + 4 * byte_1ABF3CD55[v4]))();
}

_BYTE *sub_1ABDDCF98(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABDDCFB8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDDCFC0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDDCFC8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDDCFD0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDDCFD8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StubAppConfigurationManager.ManagerError()
{
  return &type metadata for StubAppConfigurationManager.ManagerError;
}

unint64_t sub_1ABDDCFF8()
{
  unint64_t result;

  result = qword_1EEC43040;
  if (!qword_1EEC43040)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3CE0C, &type metadata for StubAppConfigurationManager.ManagerError);
    atomic_store(result, (unint64_t *)&qword_1EEC43040);
  }
  return result;
}

uint64_t dispatch thunk of UserInfoType.userID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UserInfoType.resetUserID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UserInfoType.adsUserID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of UserInfoType.resetAdsUserID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of UserInfoType.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UserInfoType.saveStartDate(_:overwrite:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of UserInfoType.upsellAppLaunchCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of UserInfoType.saveUpsellAppLaunchCount(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of UserInfoType.lastAppLaunchUpsellInstanceID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of UserInfoType.saveLastAppLaunchUpsellInstanceID(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of UserInfoType.appLaunchUpsellLastSeenDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of UserInfoType.saveAppLaunchUpsellLastSeenDate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of UserInfoType.saveAppReviewRequestLastSeenDate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of UserInfoType.addObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of UserInfoType.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t sub_1ABDDD0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1ABDDD0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

void sub_1ABDDD0C4(void **a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v7;
  void *v8;
  objc_class *updated;
  _BYTE *v10;
  _QWORD *v11;
  id v12;
  objc_super v13;

  v7 = *a1;
  v8 = (void *)sub_1ABF31780();
  updated = (objc_class *)type metadata accessor for UpdateUserIDCommand();
  v10 = objc_allocWithZone(updated);
  v11 = &v10[OBJC_IVAR___SCUpdateUserIDCommand_userID];
  *v11 = a2;
  v11[1] = a3;
  v10[OBJC_IVAR___SCUpdateUserIDCommand_overwrite] = a4;
  v13.receiver = v10;
  v13.super_class = updated;
  sub_1ABF2FF5C();
  v12 = objc_msgSendSuper2(&v13, sel_init);
  objc_msgSend(v7, sel_modifyContentsOfZone_withCommand_, v8, v12, v13.receiver, v13.super_class);

}

void sub_1ABDDD190(void **a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  objc_class *updated;
  _BYTE *v15;
  _QWORD *v16;
  id v17;
  objc_super v18;

  v8 = sub_1ABF30760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = (void *)sub_1ABF31780();
  sub_1ABF2FF5C();
  sub_1ABF30730();
  updated = (objc_class *)type metadata accessor for UpdateAdsUserIDCommand();
  v15 = objc_allocWithZone(updated);
  v16 = &v15[OBJC_IVAR___SCUpdateAdsUserIDCommand_userID];
  *v16 = a2;
  v16[1] = a3;
  (*(void (**)(_BYTE *, char *, uint64_t))(v9 + 16))(&v15[OBJC_IVAR___SCUpdateAdsUserIDCommand_userIDCreatedDate], v11, v8);
  v15[OBJC_IVAR___SCUpdateAdsUserIDCommand_overwrite] = a4;
  v18.receiver = v15;
  v18.super_class = updated;
  v17 = objc_msgSendSuper2(&v18, sel_init);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  objc_msgSend(v12, sel_modifyContentsOfZone_withCommand_, v13, v17);

}

uint64_t sub_1ABDDD2DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABDDD308(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v2 = sub_1ABF30790();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1
    || (v7 = objc_msgSend(*a1, sel_encryptedValues, v4),
        v8 = (void *)sub_1ABF31780(),
        v9 = objc_msgSend(v7, sel_objectForKeyedSubscript_, v8),
        swift_unknownObjectRelease(),
        v8,
        !v9)
    || (v15[1] = v9, sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70), (swift_dynamicCast() & 1) == 0))
  {
    sub_1ABF2FBD8();
    v10 = sub_1ABF30778();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = v12;
    *(_BYTE *)(v13 + 32) = 0;
    sub_1ABF2FF5C();
    sub_1ABF31054();
    swift_release();
    v15[2] = v10;
    v15[3] = v12;
  }
  sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABDDD4DC(void **a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  int v29;
  int v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;

  v53 = a2;
  v52 = sub_1ABF30790();
  v4 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1ABF30760();
  v10 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v46 - v14;
  v17 = MEMORY[0x1E0C80A78](v16);
  v49 = (char *)&v46 - v18;
  v19 = *a1;
  if (!v19)
    goto LABEL_12;
  v20 = objc_msgSend(v19, sel_encryptedValues, v17);
  v48 = v15;
  v21 = v20;
  v22 = sub_1ABF31780();
  v51 = v2;
  v23 = (void *)v22;
  v24 = objc_msgSend(v21, sel_objectForKeyedSubscript_, v22);
  swift_unknownObjectRelease();

  if (!v24)
    goto LABEL_12;
  v56 = v24;
  sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_12;
  v46 = v54;
  v47 = v55;
  v25 = objc_msgSend(v19, sel_encryptedValues);
  v26 = (void *)sub_1ABF31780();
  v27 = objc_msgSend(v25, sel_objectForKeyedSubscript_, v26);
  swift_unknownObjectRelease();

  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v9, 1, 1, v50);
    goto LABEL_11;
  }
  v54 = (uint64_t)v27;
  v28 = v50;
  v29 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v9, v29 ^ 1u, 1, v28);
  v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v28);
  v31 = v48;
  if (v30 == 1)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    sub_1ABCFF610((uint64_t)v9);
LABEL_12:
    sub_1ABF2FBD8();
    v36 = sub_1ABF30778();
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v52);
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = v36;
    *(_QWORD *)(v39 + 24) = v38;
    *(_BYTE *)(v39 + 32) = 0;
    sub_1ABF2FF5C();
    sub_1ABF31054();
    swift_release();
    v54 = v36;
    v55 = v38;
    sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1ABF311E0();
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v49, v9, v28);
  sub_1ABF309DC();
  sub_1ABF309C4();
  if (qword_1ED346640 != -1)
    swift_once();
  sub_1ABF309B8();
  swift_release();
  sub_1ABF306C4();
  sub_1ABF30730();
  v32 = sub_1ABF306DC();
  v33 = *(void (**)(char *, uint64_t))(v10 + 8);
  v33(v12, v28);
  if ((v32 & 1) != 0)
  {
    v54 = v46;
    v55 = v47;
    sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v34 = sub_1ABF311E0();
    v35 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1ABF2FBD8();
    v41 = sub_1ABF30778();
    v42 = v31;
    v44 = v43;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v52);
    v45 = swift_allocObject();
    *(_QWORD *)(v45 + 16) = v41;
    *(_QWORD *)(v45 + 24) = v44;
    *(_BYTE *)(v45 + 32) = 1;
    sub_1ABF2FF5C();
    sub_1ABF31054();
    swift_release();
    v54 = v41;
    v55 = v44;
    sub_1ABD04578(0, &qword_1ED346DF0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v34 = sub_1ABF311E0();
    v35 = v42;
  }
  v33(v35, v28);
  v33(v49, v28);
  return v34;
}

void sub_1ABDDDA68(void **a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  objc_class *updated;
  _BYTE *v14;
  id v15;
  objc_super v16;

  v6 = sub_1ABF30760();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = (void *)sub_1ABF31780();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v12(v9, a2, v6);
  updated = (objc_class *)type metadata accessor for UpdateUserStartDateCommand();
  v14 = objc_allocWithZone(updated);
  v12(&v14[OBJC_IVAR___SCUpdateUserStartDateCommand_startDate], (uint64_t)v9, v6);
  v14[OBJC_IVAR___SCUpdateUserStartDateCommand_mergePolicy] = a3;
  v16.receiver = v14;
  v16.super_class = updated;
  v15 = objc_msgSendSuper2(&v16, sel_init);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v10, sel_modifyContentsOfZone_withCommand_, v11, v15);

}

uint64_t sub_1ABDDDBA0(void **a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *a1;
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_valuesByKey);
    v3 = (void *)sub_1ABF31780();
    v4 = objc_msgSend(v2, sel_objectForKeyedSubscript_, v3);
    swift_unknownObjectRelease();

    if (v4)
    {
      sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
      swift_dynamicCast();
    }
  }
  sub_1ABDDEBF8(0, &qword_1ED346E38, &qword_1ED347070, MEMORY[0x1E0DEDC60]);
  swift_allocObject();
  return sub_1ABF311E0();
}

void sub_1ABDDDCD4(void **a1, uint64_t a2)
{
  void *v3;
  void *v4;
  objc_class *updated;
  char *v6;
  id v7;
  objc_super v8;

  v3 = *a1;
  v4 = (void *)sub_1ABF31780();
  updated = (objc_class *)type metadata accessor for UpdateUpsellAppLaunchCountCommand();
  v6 = (char *)objc_allocWithZone(updated);
  *(_QWORD *)&v6[OBJC_IVAR___SCUpdateUpsellAppLaunchCountCommand_upsellAppLaunchCount] = a2;
  v8.receiver = v6;
  v8.super_class = updated;
  v7 = objc_msgSendSuper2(&v8, sel_init);
  objc_msgSend(v3, sel_modifyContentsOfZone_withCommand_, v4, v7);

}

uint64_t sub_1ABDDDD74(void **a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *a1;
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_valuesByKey);
    v3 = (void *)sub_1ABF31780();
    v4 = objc_msgSend(v2, sel_objectForKeyedSubscript_, v3);
    swift_unknownObjectRelease();

    if (v4)
    {
      sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
      swift_dynamicCast();
    }
  }
  sub_1ABDDEBF8(0, (unint64_t *)&unk_1ED346DF8, (unint64_t *)&qword_1ED34FB80, MEMORY[0x1E0DEA968]);
  swift_allocObject();
  return sub_1ABF311E0();
}

void sub_1ABDDDEA4(void **a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  objc_class *updated;
  char *v8;
  char *v9;
  id v10;
  objc_super v11;

  v5 = *a1;
  v6 = (void *)sub_1ABF31780();
  updated = (objc_class *)type metadata accessor for UpdateLastAppLaunchUpsellInstanceIDCommand();
  v8 = (char *)objc_allocWithZone(updated);
  v9 = &v8[OBJC_IVAR___SCUpdateLastAppLaunchUpsellInstanceIDCommand_lastAppLaunchUpsellInstanceID];
  *(_QWORD *)v9 = a2;
  *((_QWORD *)v9 + 1) = a3;
  v11.receiver = v8;
  v11.super_class = updated;
  sub_1ABF2FF5C();
  v10 = objc_msgSendSuper2(&v11, sel_init);
  objc_msgSend(v5, sel_modifyContentsOfZone_withCommand_, v6, v10, v11.receiver, v11.super_class);

}

uint64_t sub_1ABDDDF60(id *a1)
{
  return sub_1ABD04D58(a1);
}

void sub_1ABDDDF8C(void **a1, uint64_t a2, uint64_t (*a3)(_QWORD), _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  objc_class *v15;
  char *v16;
  id v17;
  objc_super v18;

  v8 = sub_1ABF30760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = (void *)sub_1ABF31780();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v14(v11, a2, v8);
  v15 = (objc_class *)a3(0);
  v16 = (char *)objc_allocWithZone(v15);
  v14(&v16[*a4], (uint64_t)v11, v8);
  v18.receiver = v16;
  v18.super_class = v15;
  v17 = objc_msgSendSuper2(&v18, sel_init);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  objc_msgSend(v12, sel_modifyContentsOfZone_withCommand_, v13, v17);

}

uint64_t sub_1ABDDE0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (_QWORD *)(v2 + 24);
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 24);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v5 >> 62)
  {
    sub_1ABF2FF5C();
    result = sub_1ABF31FE4();
    v6 = result;
    if (result)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = sub_1ABF2FF5C();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v9 = MEMORY[0x1AF4380CC](i, v5);
    }
    else
    {
      v9 = *(_QWORD *)(v5 + 8 * i + 32);
      sub_1ABF2FF68();
    }
    v10 = MEMORY[0x1AF4390D4](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v11 = v14;
LABEL_15:
  *v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for ObserverProxy();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  v13 = swift_beginAccess();
  MEMORY[0x1AF437C04](v13);
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  return swift_endAccess();
}

uint64_t sub_1ABDDE2D0()
{
  return sub_1ABDDE30C();
}

uint64_t sub_1ABDDE2E4()
{
  return sub_1ABDDE3A8();
}

uint64_t sub_1ABDDE2F8()
{
  return sub_1ABDDE30C();
}

uint64_t sub_1ABDDE30C()
{
  void *v0;
  uint64_t v1;

  sub_1ABD05308();
  sub_1ABF3127C();
  sub_1ABF2FF68();
  v0 = (void *)sub_1ABF31114();
  v1 = sub_1ABF31174();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_1ABDDE394()
{
  return sub_1ABDDE3A8();
}

uint64_t sub_1ABDDE3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1ABF30790();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF2FBD8();
  v4 = sub_1ABF30778();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v6;
  *(_BYTE *)(v7 + 32) = 1;
  sub_1ABF2FF5C();
  sub_1ABF31054();
  swift_release();
  return v4;
}

uint64_t sub_1ABDDE498(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1ABF30760();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(_BYTE *)(v9 + v8 + v6) = a2;
  sub_1ABF31054();
  return swift_release();
}

uint64_t sub_1ABDDE580(uint64_t a1, uint64_t a2)
{
  return sub_1ABDDE5A4(a1, a2, (uint64_t)sub_1ABD36A38, &qword_1ED347070, MEMORY[0x1E0DEDC60]);
}

uint64_t sub_1ABDDE5A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5)
{
  void *v7;
  uint64_t v8;

  sub_1ABD05308();
  sub_1ABF3127C();
  v7 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = sub_1ABF31174();
  swift_release();

  return v8;
}

uint64_t sub_1ABDDE644(uint64_t a1)
{
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1ABF31054();
  return swift_release();
}

uint64_t sub_1ABDDE6A0(uint64_t a1, uint64_t a2)
{
  return sub_1ABDDE5A4(a1, a2, (uint64_t)sub_1ABD36A38, (unint64_t *)&qword_1ED34FB80, MEMORY[0x1E0DEA968]);
}

uint64_t sub_1ABDDE6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1ABF2FF5C();
  sub_1ABF31054();
  return swift_release();
}

uint64_t sub_1ABDDE72C()
{
  return sub_1ABD05288();
}

uint64_t sub_1ABDDE740(uint64_t a1)
{
  return sub_1ABDDE768(a1);
}

uint64_t sub_1ABDDE754(uint64_t a1)
{
  return sub_1ABDDE768(a1);
}

uint64_t sub_1ABDDE768(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_1ABF30760();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1ABF31054();
  return swift_release();
}

uint64_t sub_1ABDDE844(uint64_t a1, uint64_t a2)
{
  return sub_1ABDDE0B8(a1, a2);
}

uint64_t sub_1ABDDE864(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = sub_1ABF2FF5C();
  v5 = sub_1ABD8A848(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)(v3 + 24) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ObserverProxy()
{
  return objc_opt_self();
}

uint64_t sub_1ABDDE918(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = a1[3];
  v7 = a1[4];
  v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  return sub_1ABDDEA6C((uint64_t)v8, a2, a3, v3, v6, v7);
}

uint64_t sub_1ABDDE968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;

  result = MEMORY[0x1AF4390D4](v3 + 16);
  if (result)
  {
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1ABDDEA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v15[5];

  v15[3] = a5;
  v15[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  if (MEMORY[0x1AF4390D4](a4 + 16))
  {
    v12 = *(_QWORD *)(a4 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v15, a2, a3, ObjectType, v12);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

void sub_1ABDDEB1C(void **a1)
{
  sub_1ABDDEB74(a1, (uint64_t (*)(_QWORD))type metadata accessor for UpdateAppReviewRequestLastSeenDateCommand, &OBJC_IVAR___SCUpdateAppReviewRequestLastSeenDateCommand_appReviewRequestLastSeenDate);
}

uint64_t sub_1ABDDEB30()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDDEB60(void **a1)
{
  sub_1ABDDEB74(a1, (uint64_t (*)(_QWORD))type metadata accessor for UpdateAppLaunchUpsellLastSeenDateCommand, &OBJC_IVAR___SCUpdateAppLaunchUpsellLastSeenDateCommand_appLaunchUpsellLastSeenDate);
}

void sub_1ABDDEB74(void **a1, uint64_t (*a2)(_QWORD), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF30760() - 8) + 80);
  sub_1ABDDDF8C(a1, v3 + ((v7 + 16) & ~v7), a2, a3);
}

uint64_t sub_1ABDDEBCC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABDDEBF0(void **a1)
{
  uint64_t v1;

  sub_1ABDDDEA4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1ABDDEBF8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1ABD04578(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v5 = sub_1ABF3124C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1ABDDEC58()
{
  return swift_deallocObject();
}

void sub_1ABDDEC68(void **a1)
{
  uint64_t v1;

  sub_1ABDDDCD4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1ABDDEC70()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1ABF30760();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

void sub_1ABDDECD4(void **a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_1ABF30760() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1ABDDDA68(a1, v1 + v4, *(_BYTE *)(v1 + v4 + *(_QWORD *)(v3 + 64)));
}

uint64_t sub_1ABDDED1C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABDDED40(void **a1)
{
  uint64_t v1;

  sub_1ABDDD190(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1ABDDED4C(void **a1)
{
  uint64_t v1;

  return sub_1ABDDD4DC(a1, v1);
}

void sub_1ABDDED64(void **a1)
{
  uint64_t v1;

  sub_1ABDDD0C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1ABDDED70(id *a1)
{
  return sub_1ABDDD308(a1);
}

void sub_1ABDDED88(uint64_t a1, unint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  _QWORD v26[3];

  if (a2)
  {
    sub_1ABF2FF5C();
    v4 = (void *)sub_1ABF31780();
    v5 = (void *)sub_1ABF31780();
    v6 = objc_msgSend(v4, sel_fc_numberFollowingString_, v5);

    if (v6)
    {
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_integerValue);

      return;
    }
    v7 = HIBYTE(a2) & 0xF;
    v8 = a1 & 0xFFFFFFFFFFFFLL;
    if ((a2 & 0x2000000000000000) != 0)
      v9 = HIBYTE(a2) & 0xF;
    else
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        sub_1ABE411D8(a1, a2, 10);
LABEL_47:
        swift_bridgeObjectRelease();
        return;
      }
      if ((a2 & 0x2000000000000000) == 0)
      {
        if ((a1 & 0x1000000000000000) != 0)
          v10 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v10 = (unsigned __int8 *)sub_1ABF31EE8();
        sub_1ABE411C4(v10, v8, 10);
        goto LABEL_47;
      }
      v26[0] = a1;
      v26[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      if (a1 == 43)
      {
        if (v7)
        {
          if (v7 != 1 && (BYTE1(a1) - 48) <= 9u && v7 != 2 && (BYTE2(a1) - 48) <= 9u)
          {
            v11 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
            v12 = v7 - 3;
            if (v12)
            {
              v13 = (unsigned __int8 *)v26 + 3;
              do
              {
                v14 = *v13 - 48;
                if (v14 > 9)
                  break;
                v15 = 10 * v11;
                if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63)
                  break;
                v11 = v15 + v14;
                if (__OFADD__(v15, v14))
                  break;
                ++v13;
                --v12;
              }
              while (v12);
            }
          }
          goto LABEL_47;
        }
      }
      else
      {
        if (a1 != 45)
        {
          if (v7)
          {
            if ((a1 - 48) <= 9u && v7 != 1 && (BYTE1(a1) - 48) <= 9u)
            {
              v16 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
              v17 = v7 - 2;
              if (v17)
              {
                v18 = (unsigned __int8 *)v26 + 2;
                do
                {
                  v19 = *v18 - 48;
                  if (v19 > 9)
                    break;
                  v20 = 10 * v16;
                  if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
                    break;
                  v16 = v20 + v19;
                  if (__OFADD__(v20, v19))
                    break;
                  ++v18;
                  --v17;
                }
                while (v17);
              }
            }
          }
          goto LABEL_47;
        }
        if (v7)
        {
          if (v7 != 1 && (BYTE1(a1) - 48) <= 9u && v7 != 2 && (BYTE2(a1) - 48) <= 9u)
          {
            v21 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
            v22 = v7 - 3;
            if (v22)
            {
              v23 = (unsigned __int8 *)v26 + 3;
              do
              {
                v24 = *v23 - 48;
                if (v24 > 9)
                  break;
                v25 = 10 * v21;
                if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63)
                  break;
                v21 = v25 - v24;
                if (__OFSUB__(v25, v24))
                  break;
                ++v23;
                --v22;
              }
              while (v22);
            }
          }
          goto LABEL_47;
        }
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1ABDDF0F4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  objc_class *updated;
  _BYTE *v33;
  _QWORD *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  char *v40;
  objc_class *v41;
  _BYTE *v42;
  _QWORD *v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  int v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  objc_class *v52;
  _BYTE *v53;
  uint64_t (*v54)(char *, uint64_t);
  uint64_t v55;
  uint32_t *p_ivar_base_size;
  id v57;
  void *v58;
  id v59;
  id v60;
  objc_class *v61;
  char *v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  uint64_t v67;
  objc_class *v68;
  char *v69;
  char *v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  int v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  objc_class *v78;
  char *v79;
  uint64_t (*v80)(char *, uint64_t);
  uint64_t v81;
  id v82;
  void *v83;
  id v84;
  uint64_t v85;
  int v86;
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  objc_class *v90;
  char *v91;
  uint64_t (*v92)(char *, uint64_t);
  uint64_t v93;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  objc_super v100;
  objc_super v101;
  objc_super v102;
  objc_super v103;
  objc_super v104;
  id v105;
  uint64_t v106;
  id v107;
  objc_super v108;
  objc_super v109;
  uint64_t v110;

  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v2);
  v98 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v97 = (char *)&v95 - v5;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v95 - v7;
  v9 = sub_1ABF30760();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v96 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v95 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v95 - v16;
  v19 = MEMORY[0x1E0C80A78](v18);
  v99 = (char *)&v95 - v20;
  v110 = MEMORY[0x1E0DEE9D8];
  v21 = objc_msgSend(a1, sel_recordID, v19);
  v22 = objc_msgSend(v21, sel_recordName);

  v23 = sub_1ABF317A4();
  v25 = v24;

  if (v23 == 0x6F666E4972657375 && v25 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v26 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
      return v110;
  }
  v27 = objc_msgSend(a1, sel_encryptedValues);
  v28 = (void *)sub_1ABF31780();
  v29 = objc_msgSend(v27, sel_objectForKeyedSubscript_, v28);
  swift_unknownObjectRelease();

  if (v29)
  {
    v107 = v29;
    sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v30 = v105;
      v31 = v106;
      updated = (objc_class *)type metadata accessor for UpdateUserIDCommand();
      v33 = objc_allocWithZone(updated);
      v34 = &v33[OBJC_IVAR___SCUpdateUserIDCommand_userID];
      *v34 = v30;
      v34[1] = v31;
      v33[OBJC_IVAR___SCUpdateUserIDCommand_overwrite] = 0;
      v100.receiver = v33;
      v100.super_class = updated;
      objc_msgSendSuper2(&v100, sel_init);
      MEMORY[0x1AF437C04]();
      if (*(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1ABF31A50();
      sub_1ABF31A8C();
      sub_1ABF31A20();
    }
  }
  v35 = objc_msgSend(a1, sel_encryptedValues);
  v36 = (void *)sub_1ABF31780();
  v37 = objc_msgSend(v35, sel_objectForKeyedSubscript_, v36);
  swift_unknownObjectRelease();

  if (v37)
  {
    v107 = v37;
    sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v95 = v14;
      v39 = v105;
      v38 = v106;
      v40 = v99;
      sub_1ABF30730();
      v41 = (objc_class *)type metadata accessor for UpdateAdsUserIDCommand();
      v42 = objc_allocWithZone(v41);
      v43 = &v42[OBJC_IVAR___SCUpdateAdsUserIDCommand_userID];
      *v43 = v39;
      v43[1] = v38;
      (*(void (**)(_BYTE *, char *, uint64_t))(v10 + 16))(&v42[OBJC_IVAR___SCUpdateAdsUserIDCommand_userIDCreatedDate], v40, v9);
      v42[OBJC_IVAR___SCUpdateAdsUserIDCommand_overwrite] = 0;
      v101.receiver = v42;
      v101.super_class = v41;
      objc_msgSendSuper2(&v101, sel_init);
      v44 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v40, v9);
      MEMORY[0x1AF437C04](v44);
      if (*(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1ABF31A50();
      sub_1ABF31A8C();
      sub_1ABF31A20();
      v14 = v95;
    }
  }
  v45 = objc_msgSend(a1, sel_encryptedValues);
  v46 = (void *)sub_1ABF31780();
  v47 = objc_msgSend(v45, sel_objectForKeyedSubscript_, v46);
  swift_unknownObjectRelease();

  if (!v47)
  {
    v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v49(v8, 1, 1, v9);
    goto LABEL_21;
  }
  v105 = v47;
  sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
  v48 = swift_dynamicCast();
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v49(v8, v48 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_21:
    sub_1ABCFF610((uint64_t)v8);
    goto LABEL_22;
  }
  v95 = v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v8, v9);
  v50 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v51 = v99;
  v50(v99, v17, v9);
  v52 = (objc_class *)type metadata accessor for UpdateUserStartDateCommand();
  v53 = objc_allocWithZone(v52);
  v50(&v53[OBJC_IVAR___SCUpdateUserStartDateCommand_startDate], v51, v9);
  v53[OBJC_IVAR___SCUpdateUserStartDateCommand_mergePolicy] = 2;
  v102.receiver = v53;
  v102.super_class = v52;
  objc_msgSendSuper2(&v102, sel_init);
  v54 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  v55 = v54(v51, v9);
  MEMORY[0x1AF437C04](v55);
  if (*(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  v54(v17, v9);
  v14 = v95;
LABEL_22:
  p_ivar_base_size = &NetworkMonitor.ivar_base_size;
  v57 = objc_msgSend(a1, sel_valuesByKey);
  v58 = (void *)sub_1ABF31780();
  v59 = objc_msgSend(v57, sel_objectForKeyedSubscript_, v58);
  swift_unknownObjectRelease();

  if (v59)
  {
    v105 = v59;
    sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v60 = v107;
      v61 = (objc_class *)type metadata accessor for UpdateUpsellAppLaunchCountCommand();
      v62 = (char *)objc_allocWithZone(v61);
      *(_QWORD *)&v62[OBJC_IVAR___SCUpdateUpsellAppLaunchCountCommand_upsellAppLaunchCount] = v60;
      v103.receiver = v62;
      v103.super_class = v61;
      objc_msgSendSuper2(&v103, sel_init);
      MEMORY[0x1AF437C04]();
      if (*(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1ABF31A50();
      sub_1ABF31A8C();
      sub_1ABF31A20();
    }
  }
  v63 = objc_msgSend(a1, sel_valuesByKey);
  v64 = (void *)sub_1ABF31780();
  v65 = objc_msgSend(v63, sel_objectForKeyedSubscript_, v64);
  swift_unknownObjectRelease();

  if (v65)
  {
    v107 = v65;
    sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v66 = v105;
      v67 = v106;
      v68 = (objc_class *)type metadata accessor for UpdateLastAppLaunchUpsellInstanceIDCommand();
      v69 = (char *)objc_allocWithZone(v68);
      v70 = &v69[OBJC_IVAR___SCUpdateLastAppLaunchUpsellInstanceIDCommand_lastAppLaunchUpsellInstanceID];
      *(_QWORD *)v70 = v66;
      *((_QWORD *)v70 + 1) = v67;
      v104.receiver = v69;
      v104.super_class = v68;
      objc_msgSendSuper2(&v104, sel_init);
      MEMORY[0x1AF437C04]();
      if (*(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1ABF31A50();
      sub_1ABF31A8C();
      sub_1ABF31A20();
    }
  }
  v71 = objc_msgSend(a1, sel_encryptedValues);
  v72 = (void *)sub_1ABF31780();
  v73 = objc_msgSend(v71, sel_objectForKeyedSubscript_, v72);
  swift_unknownObjectRelease();

  if (!v73)
  {
    v74 = (uint64_t)v97;
    v49(v97, 1, 1, v9);
    goto LABEL_38;
  }
  v105 = v73;
  sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
  v74 = (uint64_t)v97;
  v75 = swift_dynamicCast();
  v49((char *)v74, v75 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v74, 1, v9) == 1)
  {
LABEL_38:
    sub_1ABCFF610(v74);
    goto LABEL_39;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v14, v74, v9);
  v76 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v77 = v99;
  v76(v99, v14, v9);
  v78 = (objc_class *)type metadata accessor for UpdateAppLaunchUpsellLastSeenDateCommand();
  v79 = (char *)objc_allocWithZone(v78);
  v76(&v79[OBJC_IVAR___SCUpdateAppLaunchUpsellLastSeenDateCommand_appLaunchUpsellLastSeenDate], v77, v9);
  v108.receiver = v79;
  v108.super_class = v78;
  objc_msgSendSuper2(&v108, sel_init);
  v80 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  v81 = v80(v77, v9);
  MEMORY[0x1AF437C04](v81);
  if (*(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  v80(v14, v9);
  p_ivar_base_size = (_DWORD *)(&NetworkMonitor + 8);
LABEL_39:
  v82 = objc_msgSend(a1, sel_encryptedValues);
  v83 = (void *)sub_1ABF31780();
  v84 = objc_msgSend(v82, *((SEL *)p_ivar_base_size + 378), v83);
  swift_unknownObjectRelease();

  if (!v84)
  {
    v85 = (uint64_t)v98;
    v49(v98, 1, 1, v9);
    goto LABEL_45;
  }
  v105 = v84;
  sub_1ABCF7C04(0, (unint64_t *)&qword_1ED346F70);
  v85 = (uint64_t)v98;
  v86 = swift_dynamicCast();
  v49((char *)v85, v86 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v85, 1, v9) == 1)
  {
LABEL_45:
    sub_1ABCFF610(v85);
    return v110;
  }
  v87 = v96;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v96, v85, v9);
  v88 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v89 = v99;
  v88(v99, v87, v9);
  v90 = (objc_class *)type metadata accessor for UpdateAppReviewRequestLastSeenDateCommand();
  v91 = (char *)objc_allocWithZone(v90);
  v88(&v91[OBJC_IVAR___SCUpdateAppReviewRequestLastSeenDateCommand_appReviewRequestLastSeenDate], v89, v9);
  v109.receiver = v91;
  v109.super_class = v90;
  objc_msgSendSuper2(&v109, sel_init);
  v92 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  v93 = v92(v89, v9);
  MEMORY[0x1AF437C04](v93);
  if (*(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1ABF31A50();
  sub_1ABF31A8C();
  sub_1ABF31A20();
  v92(v87, v9);
  return v110;
}

BOOL sub_1ABDDFD9C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

uint64_t sub_1ABDDFDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 56);
    for (i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      v5 = *(i - 1);
      v6 = *i;
      v7 = *(v3 - 1);
      v8 = *v3;
      v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1ABF3223C() & 1) == 0)
        break;
      v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_1ABF3223C() & 1) == 0)
        break;
      v3 += 4;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1ABDDFE74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  BOOL v8;
  _BYTE v10[56];
  _BYTE v11[56];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v6 = 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        sub_1ABD22744(v3, (uint64_t)v11);
        sub_1ABD22744(v4, (uint64_t)v10);
        v6 = sub_1ABEF00EC(v11, v10);
        sub_1ABD228E4((uint64_t)v10);
        sub_1ABD228E4((uint64_t)v11);
        v8 = v5-- != 0;
        if ((v6 & 1) == 0)
          break;
        v4 += 56;
        v3 += 56;
      }
      while (v8);
    }
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1ABDDFF28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    for (i = 0; ; i += 56)
    {
      v4 = *(_QWORD *)(a1 + i + 48);
      v5 = *(_QWORD *)(a1 + i + 56);
      v6 = *(double *)(a1 + i + 64);
      v7 = *(_QWORD *)(a1 + i + 72);
      v8 = *(_QWORD *)(a1 + i + 80);
      v9 = *(_QWORD *)(a2 + i + 48);
      v10 = *(_QWORD *)(a2 + i + 56);
      v11 = *(double *)(a2 + i + 64);
      v12 = *(_QWORD *)(a2 + i + 72);
      v13 = *(_QWORD *)(a2 + i + 80);
      if ((*(_QWORD *)(a1 + i + 32) != *(_QWORD *)(a2 + i + 32) || *(_QWORD *)(a1 + i + 40) != *(_QWORD *)(a2 + i + 40))
        && (sub_1ABF3223C() & 1) == 0)
      {
        break;
      }
      if (v4 == v9 && v5 == v10)
      {
        if (v6 != v11)
          return 0;
      }
      else
      {
        v14 = sub_1ABF3223C();
        result = 0;
        if ((v14 & 1) == 0 || v6 != v11)
          return result;
      }
      if ((v7 != v12 || v8 != v13) && (sub_1ABF3223C() & 1) == 0)
        break;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1ABDE0078(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != a2[2])
    return 0;
  if (v2 && (_QWORD *)a1 != a2)
  {
    v3 = *(_QWORD *)(a1 + 48);
    v4 = *(_QWORD *)(a1 + 56);
    v5 = *(_QWORD *)(a1 + 64);
    v6 = *(_QWORD *)(a1 + 72);
    v15 = *(_QWORD *)(a1 + 80);
    v20 = *(_QWORD *)(a1 + 88);
    v7 = *(_QWORD *)(a1 + 104);
    v18 = *(unsigned __int8 *)(a1 + 112);
    v8 = a2[6];
    v9 = a2[7];
    v10 = a2[8];
    v11 = a2[9];
    v14 = a2[10];
    v12 = a2[13];
    v16 = a2[12];
    v17 = *(_QWORD *)(a1 + 96);
    v19 = a2[11];
    if ((*(_QWORD *)(a1 + 32) != a2[4] || *(_QWORD *)(a1 + 40) != a2[5]) && (sub_1ABF3223C() & 1) == 0
      || (v3 != v8 || v4 != v9) && (sub_1ABF3223C() & 1) == 0
      || (v5 != v10 || v6 != v11) && (sub_1ABF3223C() & 1) == 0)
    {
      return 0;
    }
    if (v7)
    {
      if (!v12 || (v17 != v16 || v7 != v12) && (sub_1ABF3223C() & 1) == 0)
        return 0;
    }
    else if (v12)
    {
      return 0;
    }
    if (v20)
    {
      if (!v19 || (v15 != v14 || v20 != v19) && (sub_1ABF3223C() & 1) == 0)
        return 0;
LABEL_27:
      __asm { BR              X8 }
    }
    if (!v19)
      goto LABEL_27;
    return 0;
  }
  return 1;
}

uint64_t sub_1ABDE0468(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char v6;
  BOOL v8;
  _BYTE v10[776];
  _BYTE __dst[776];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v6 = 1;
    }
    else
    {
      v3 = (char *)(a1 + 32);
      v4 = (char *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        memcpy(v10, v3, sizeof(v10));
        memcpy(__dst, v4, sizeof(__dst));
        sub_1ABD74914((uint64_t)v10);
        sub_1ABD74914((uint64_t)__dst);
        v6 = sub_1ABE2AFB8((uint64_t)v10);
        sub_1ABD74D6C((uint64_t)__dst);
        sub_1ABD74D6C((uint64_t)v10);
        v8 = v5-- != 0;
        if ((v6 & 1) == 0)
          break;
        v3 += 776;
        v4 += 776;
      }
      while (v8);
    }
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1ABDE0540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double v5;
  double v6;
  char v8;
  uint64_t result;
  uint64_t v10;
  double *v11;
  double *i;
  double v13;
  double v14;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = *(double *)(a1 + 48);
  v6 = *(double *)(a2 + 48);
  if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40))
  {
    if (v5 == v6)
      goto LABEL_12;
    return 0;
  }
  v8 = sub_1ABF3223C();
  result = 0;
  if ((v8 & 1) != 0 && v5 == v6)
  {
LABEL_12:
    v10 = v2 - 1;
    if (v10)
    {
      v11 = (double *)(a2 + 72);
      for (i = (double *)(a1 + 72); ; i += 3)
      {
        v13 = *i;
        v14 = *v11;
        if (*((_QWORD *)i - 2) == *((_QWORD *)v11 - 2) && *((_QWORD *)i - 1) == *((_QWORD *)v11 - 1))
        {
          if (v13 != v14)
            return 0;
        }
        else
        {
          v16 = sub_1ABF3223C();
          result = 0;
          if ((v16 & 1) == 0 || v13 != v14)
            return result;
        }
        v11 += 3;
        result = 1;
        if (!--v10)
          return result;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1ABDE0650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  int v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    do
    {
      v5 = *(_QWORD *)(a1 + v3 + 96);
      v6 = *(_QWORD *)(a2 + v3 + 96);
      if ((*(_BYTE *)(a1 + v3 + 40) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + v3 + 40))
          return 0;
      }
      else
      {
        if (*(double *)(a1 + v3 + 32) == *(double *)(a2 + v3 + 32))
          v7 = *(_BYTE *)(a2 + v3 + 40);
        else
          v7 = 1;
        if ((v7 & 1) != 0)
          return 0;
      }
      if ((*(_BYTE *)(a1 + v3 + 56) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + v3 + 56))
          return 0;
      }
      else
      {
        if (*(double *)(a1 + v3 + 48) == *(double *)(a2 + v3 + 48))
          v8 = *(_BYTE *)(a2 + v3 + 56);
        else
          v8 = 1;
        if ((v8 & 1) != 0)
          return 0;
      }
      if ((*(_BYTE *)(a1 + v3 + 72) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + v3 + 72))
          return 0;
      }
      else
      {
        if (*(double *)(a1 + v3 + 64) == *(double *)(a2 + v3 + 64))
          v9 = *(_BYTE *)(a2 + v3 + 72);
        else
          v9 = 1;
        if ((v9 & 1) != 0)
          return 0;
      }
      if ((*(_BYTE *)(a1 + v3 + 88) & 1) != 0)
      {
        if (v5 == v6)
          v10 = *(unsigned __int8 *)(a2 + v3 + 88);
        else
          v10 = 0;
        if (v10 != 1)
          return 0;
      }
      else
      {
        v11 = 0;
        if ((*(_BYTE *)(a2 + v3 + 88) & 1) != 0 || *(double *)(a1 + v3 + 80) != *(double *)(a2 + v3 + 80) || v5 != v6)
          return v11;
      }
      if ((*(_BYTE *)(a1 + v3 + 112) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + v3 + 112))
          return 0;
      }
      else
      {
        if (*(double *)(a1 + v3 + 104) == *(double *)(a2 + v3 + 104))
          v4 = *(_BYTE *)(a2 + v3 + 112);
        else
          v4 = 1;
        if ((v4 & 1) != 0)
          return 0;
      }
      v3 += 88;
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_1ABDE0780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  _BYTE v9[648];
  _BYTE __dst[648];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v3 = (char *)(a1 + 32);
      v4 = (char *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        v7 = _s10StocksCore13PaywallConfigV2eeoiySbAC_ACtFZ_0((uint64_t)__dst);
        if (!v7)
          break;
        v5 = v6 - 1;
        v4 += 648;
        v3 += 648;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v7;
}

uint64_t sub_1ABDE0828(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    if (a1 != a2)
    {
      v4 = 0;
      v15 = a1;
      while (1)
      {
        v5 = *(_QWORD *)(a1 + v4 + 48);
        v6 = *(_QWORD *)(a1 + v4 + 56);
        v7 = *(_QWORD *)(a1 + v4 + 64);
        v41 = *(_QWORD *)(a1 + v4 + 80);
        v42 = *(_QWORD *)(a1 + v4 + 72);
        v40 = *(_QWORD *)(a1 + v4 + 88);
        v37 = *(_QWORD *)(a1 + v4 + 104);
        v38 = *(_QWORD *)(a1 + v4 + 96);
        v34 = *(unsigned __int8 *)(a1 + v4 + 112);
        v31 = *(_QWORD *)(a1 + v4 + 128);
        v32 = *(_QWORD *)(a1 + v4 + 120);
        v27 = *(_QWORD *)(a1 + v4 + 144);
        v28 = *(_QWORD *)(a1 + v4 + 136);
        v23 = *(_QWORD *)(a1 + v4 + 160);
        v24 = *(_QWORD *)(a1 + v4 + 152);
        v19 = *(_QWORD *)(a1 + v4 + 176);
        v20 = *(_QWORD *)(a1 + v4 + 168);
        v9 = *(_QWORD *)(v3 + v4 + 48);
        v8 = *(_QWORD *)(v3 + v4 + 56);
        v10 = *(_QWORD *)(v3 + v4 + 64);
        v11 = *(_QWORD *)(v3 + v4 + 72);
        v12 = *(_QWORD *)(v3 + v4 + 80);
        v39 = *(_QWORD *)(v3 + v4 + 88);
        v36 = *(_QWORD *)(v3 + v4 + 96);
        v35 = *(_QWORD *)(v3 + v4 + 104);
        v33 = *(unsigned __int8 *)(v3 + v4 + 112);
        v29 = *(_QWORD *)(v3 + v4 + 128);
        v30 = *(_QWORD *)(v3 + v4 + 120);
        v25 = *(_QWORD *)(v3 + v4 + 144);
        v26 = *(_QWORD *)(v3 + v4 + 136);
        v21 = *(_QWORD *)(v3 + v4 + 160);
        v22 = *(_QWORD *)(v3 + v4 + 152);
        v17 = *(_QWORD *)(v3 + v4 + 176);
        v18 = *(_QWORD *)(v3 + v4 + 168);
        if ((*(_QWORD *)(a1 + v4 + 32) != *(_QWORD *)(v3 + v4 + 32)
           || *(_QWORD *)(a1 + v4 + 40) != *(_QWORD *)(v3 + v4 + 40))
          && (sub_1ABF3223C() & 1) == 0)
        {
          break;
        }
        if ((v5 != v9 || v6 != v8) && (sub_1ABF3223C() & 1) == 0
          || (v7 != v10 || v42 != v11) && (sub_1ABF3223C() & 1) == 0
          || (v41 != v12 || v40 != v39) && (sub_1ABF3223C() & 1) == 0)
        {
          break;
        }
        if (v38 == v36 && v37 == v35)
        {
          if (v34 != v33)
            return 0;
        }
        else
        {
          v13 = sub_1ABF3223C();
          result = 0;
          if ((v13 & 1) == 0 || ((v34 ^ v33) & 1) != 0)
            return result;
        }
        if ((v32 != v30 || v31 != v29) && (sub_1ABF3223C() & 1) == 0
          || (v28 != v26 || v27 != v25) && (sub_1ABF3223C() & 1) == 0
          || (v24 != v22 || v23 != v21) && (sub_1ABF3223C() & 1) == 0
          || (v20 != v18 || v19 != v17) && (sub_1ABF3223C() & 1) == 0)
        {
          break;
        }
        v4 += 152;
        --v2;
        a1 = v15;
        v3 = a2;
        if (!v2)
          return 1;
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1ABDE0AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    if (a1 != a2)
    {
      v4 = 0;
      v14 = a1;
      while (1)
      {
        v5 = *(_QWORD *)(a1 + v4 + 48);
        v6 = *(_QWORD *)(a1 + v4 + 56);
        v7 = *(_QWORD *)(a1 + v4 + 72);
        v16 = *(_QWORD *)(a1 + v4 + 64);
        v22 = *(_QWORD *)(a1 + v4 + 88);
        v23 = *(_QWORD *)(a1 + v4 + 80);
        v19 = *(_QWORD *)(a1 + v4 + 104);
        v20 = *(_QWORD *)(a1 + v4 + 96);
        v9 = *(_QWORD *)(v3 + v4 + 48);
        v8 = *(_QWORD *)(v3 + v4 + 56);
        v11 = *(_QWORD *)(v3 + v4 + 64);
        v10 = *(_QWORD *)(v3 + v4 + 72);
        v12 = *(_QWORD *)(v3 + v4 + 80);
        v21 = *(_QWORD *)(v3 + v4 + 88);
        v17 = *(_QWORD *)(v3 + v4 + 104);
        v18 = *(_QWORD *)(v3 + v4 + 96);
        if ((*(_QWORD *)(a1 + v4 + 32) != *(_QWORD *)(v3 + v4 + 32)
           || *(_QWORD *)(a1 + v4 + 40) != *(_QWORD *)(v3 + v4 + 40))
          && (sub_1ABF3223C() & 1) == 0)
        {
          break;
        }
        if ((v5 != v9 || v6 != v8) && (sub_1ABF3223C() & 1) == 0)
          break;
        if (v7)
        {
          if (!v10 || (v16 != v11 || v7 != v10) && (sub_1ABF3223C() & 1) == 0)
            return 0;
        }
        else if (v10)
        {
          return 0;
        }
        if ((v23 != v12 || v22 != v21) && (sub_1ABF3223C() & 1) == 0
          || (v20 != v18 || v19 != v17) && (sub_1ABF3223C() & 1) == 0)
        {
          break;
        }
        v4 += 80;
        --v2;
        a1 = v14;
        v3 = a2;
        if (!v2)
          return 1;
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1ABDE0C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    if (a1 != a2)
    {
      v4 = 0;
      v14 = a1;
      while (1)
      {
        v6 = *(_QWORD *)(a1 + v4 + 48);
        v5 = *(_QWORD *)(a1 + v4 + 56);
        v7 = *(_QWORD *)(a1 + v4 + 72);
        v8 = *(unsigned __int8 *)(a1 + v4 + 80);
        v10 = *(_QWORD *)(v3 + v4 + 48);
        v9 = *(_QWORD *)(v3 + v4 + 56);
        v11 = *(_QWORD *)(v3 + v4 + 72);
        v16 = *(_QWORD *)(v3 + v4 + 64);
        v17 = *(_QWORD *)(a1 + v4 + 64);
        v12 = *(unsigned __int8 *)(v3 + v4 + 80);
        if ((*(_QWORD *)(a1 + v4 + 32) != *(_QWORD *)(v3 + v4 + 32)
           || *(_QWORD *)(a1 + v4 + 40) != *(_QWORD *)(v3 + v4 + 40))
          && (sub_1ABF3223C() & 1) == 0)
        {
          break;
        }
        if (v5)
        {
          if (!v9 || (v6 != v10 || v5 != v9) && (sub_1ABF3223C() & 1) == 0)
            return 0;
        }
        else if (v9)
        {
          return 0;
        }
        if (v7)
        {
          if (!v11 || (v17 != v16 || v7 != v11) && (sub_1ABF3223C() & 1) == 0)
            return 0;
        }
        else if (v11)
        {
          return 0;
        }
        if (v8 == 2)
        {
          if (v12 != 2)
            return 0;
        }
        else
        {
          result = 0;
          if (v12 == 2 || ((((v8 & 1) == 0) ^ v12) & 1) == 0)
            return result;
        }
        v4 += 56;
        --v2;
        a1 = v14;
        v3 = a2;
        if (!v2)
          return 1;
      }
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1ABDE0E00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned __int8 v6;
  BOOL v7;
  char v8;
  uint64_t result;
  unsigned __int8 *v10;
  _BYTE *v11;
  uint64_t i;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  char v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = *(_BYTE *)(a1 + 48);
  v6 = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
  if (v7 || (v8 = sub_1ABF3223C(), result = 0, (v8 & 1) != 0))
  {
    v10 = (unsigned __int8 *)(a2 + 72);
    v11 = (_BYTE *)(a1 + 72);
    for (i = v2 - 1; ; --i)
    {
      if (v5)
      {
        if (v5 == 1)
          v13 = 0x544847494CLL;
        else
          v13 = 1263681860;
        if (v5 == 1)
          v14 = 0xE500000000000000;
        else
          v14 = 0xE400000000000000;
        v15 = v6;
        if (v6)
        {
LABEL_20:
          if (v15 == 1)
            v16 = 0x544847494CLL;
          else
            v16 = 1263681860;
          if (v15 == 1)
            v17 = 0xE500000000000000;
          else
            v17 = 0xE400000000000000;
          if (v13 != v16)
            goto LABEL_32;
          goto LABEL_30;
        }
      }
      else
      {
        v14 = 0xE700000000000000;
        v13 = 0x6E776F6E6B6E75;
        v15 = v6;
        if (v6)
          goto LABEL_20;
      }
      v17 = 0xE700000000000000;
      if (v13 != 0x6E776F6E6B6E75)
        goto LABEL_32;
LABEL_30:
      if (v14 == v17)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_33;
      }
LABEL_32:
      v18 = sub_1ABF3223C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
        return 0;
LABEL_33:
      if (!i)
        return 1;
      v5 = *v11;
      v6 = *v10;
      if ((*((_QWORD *)v11 - 2) != *((_QWORD *)v10 - 2) || *((_QWORD *)v11 - 1) != *((_QWORD *)v10 - 1))
        && (sub_1ABF3223C() & 1) == 0)
      {
        return 0;
      }
      v10 += 24;
      v11 += 24;
    }
  }
  return result;
}

uint64_t sub_1ABDE0FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  double v5;
  double v6;
  char v8;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (double *)(a2 + 48);
    v4 = (double *)(a1 + 48);
    do
    {
      v5 = *v4;
      v6 = *v3;
      if (*((_QWORD *)v4 - 2) == *((_QWORD *)v3 - 2) && *((_QWORD *)v4 - 1) == *((_QWORD *)v3 - 1))
      {
        if (v5 != v6)
          return 0;
      }
      else
      {
        v8 = sub_1ABF3223C();
        result = 0;
        if ((v8 & 1) == 0 || v5 != v6)
          return result;
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

void sub_1ABDE1070(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE10DC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE11A4 + 4 * byte_1ABF3CF67[a2]))(0x655271616473616ELL);
}

uint64_t sub_1ABDE11A4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x655271616473616ELL && v1 == 0xEE00656D69746C61)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1ABDE12D8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE1318(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE13A0 + 4 * byte_1ABF3CF7E[a2]))(0x6C6562616CLL);
}

uint64_t sub_1ABDE13A0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C6562616CLL && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABDE146C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xED0000676E697373;
  v3 = 0x694D6649796C6E6FLL;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x746972777265766FLL;
    else
      v5 = 0x65646C4F7065656BLL;
    if (v4 == 1)
      v6 = 0xE900000000000065;
    else
      v6 = 0xEA00000000007473;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x694D6649796C6E6FLL;
  v6 = 0xED0000676E697373;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x746972777265766FLL;
    else
      v3 = 0x65646C4F7065656BLL;
    if (v7 == 1)
      v2 = 0xE900000000000065;
    else
      v2 = 0xEA00000000007473;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABDE15A4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA00000000007372;
  v3 = 0x756F487265746661;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x737961776C61;
    else
      v5 = 0x726576656ELL;
    if (v4 == 1)
      v6 = 0xE600000000000000;
    else
      v6 = 0xE500000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x756F487265746661;
  v6 = 0xEA00000000007372;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x737961776C61;
    else
      v3 = 0x726576656ELL;
    if (v7 == 1)
      v2 = 0xE600000000000000;
    else
      v2 = 0xE500000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1ABDE16AC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE16E4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE1768 + 4 * byte_1ABF3CF89[a2]))(1701667182);
}

uint64_t sub_1ABDE1768(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1701667182 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABDE1830(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1701667182;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1701667182;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1ABDE18C0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1ABDE1910(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE19A4 + 4 * byte_1ABF3CF95[a2]))(v2 + 1);
}

uint64_t sub_1ABDE19A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 1 && v2 == 0x80000001ABF54BA0)
    v3 = 1;
  else
    v3 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1ABDE1A78(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x65676E6168637865;
    else
      v3 = 0x756F735F61746164;
    if (v2 == 1)
      v4 = 0xE900000000000073;
    else
      v4 = 0xEC00000073656372;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x65676E6168637865;
      else
        v6 = 0x756F735F61746164;
      if (v5 == 1)
        v7 = 0xE900000000000073;
      else
        v7 = 0xEC00000073656372;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x7365746F7571;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x7365746F7571)
  {
LABEL_21:
    v8 = sub_1ABF3223C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABDE1BA0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xE900000000000064;
  v3 = 0x496C656E6E616863;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6E6F43656C797473;
    else
      v5 = 0x6954736567646162;
    if (v4 == 1)
      v6 = 0xEC00000073676966;
    else
      v6 = 0xED000074756F656DLL;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x496C656E6E616863;
  v6 = 0xE900000000000064;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x6E6F43656C797473;
    else
      v3 = 0x6954736567646162;
    if (v7 == 1)
      v2 = 0xEC00000073676966;
    else
      v2 = 0xED000074756F656DLL;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABDE1CE0(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 0x656764457377656ELL;
    else
      v2 = 0x74694B64756F6C63;
    v3 = 0xE800000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 0x656764457377656ELL;
      else
        v5 = 0x74694B64756F6C63;
      v6 = 0xE800000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x746C7561666564;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x746C7561666564)
  {
LABEL_15:
    v7 = sub_1ABF3223C();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ABDE1DF8(unsigned __int8 a1, unsigned __int8 a2)
{
  char v2;

  if ((unint64_t)a1 << 40 == (unint64_t)a2 << 40)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1ABDE1E6C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xE900000000000067;
  v3 = 0x69666E6F43707061;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6465776F6C6C61;
    else
      v5 = 0x776F6C6C61736964;
    if (v4 == 1)
      v6 = 0xE700000000000000;
    else
      v6 = 0xEA00000000006465;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x69666E6F43707061;
  v6 = 0xE900000000000067;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x6465776F6C6C61;
    else
      v3 = 0x776F6C6C61736964;
    if (v7 == 1)
      v2 = 0xE700000000000000;
    else
      v2 = 0xEA00000000006465;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1ABDE1F8C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE1FF8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE2060 + 4 * byte_1ABF3CFA1[a2]))(1701869940);
}

uint64_t sub_1ABDE2060(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1701869940 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1ABDE2114(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1ABDE2160(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE21D4 + 4 * byte_1ABF3CFAB[a2]))(v2 + 10);
}

uint64_t sub_1ABDE21D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 10 && v2 == 0x80000001ABF550A0)
    v3 = 1;
  else
    v3 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1ABDE2278(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1702125892;
  else
    v3 = 0x6D617473656D6954;
  if (v2)
    v4 = 0xE900000000000070;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1702125892;
  else
    v5 = 0x6D617473656D6954;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE900000000000070;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ABDE2318(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 118;
  else
    v3 = 6710642;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE100000000000000;
  if ((a2 & 1) != 0)
    v5 = 118;
  else
    v5 = 6710642;
  if ((a2 & 1) != 0)
    v6 = 0xE100000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1ABDE23A8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE23E8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE2448 + 4 * byte_1ABF3CFB5[a2]))(0x65736F6C63);
}

uint64_t sub_1ABDE2448(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x65736F6C63 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1ABDE24F0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE2554(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE25B4 + 4 * byte_1ABF3CFBE[a2]))(0x636E657265666572);
}

uint64_t sub_1ABDE25B4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x636E657265666572 && v1 == 0xEE006174656D2D65)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABDE265C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1635017060;
  else
    v3 = 0x7265732D61746164;
  if (v2)
    v4 = 0xEB00000000736569;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1635017060;
  else
    v5 = 0x7265732D61746164;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xEB00000000736569;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ABDE2700(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEB00000000657461;
  v3 = 0x4479616C70736964;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x70795479726F7473;
    else
      v5 = 25705;
    if (v4 == 1)
      v6 = 0xE900000000000065;
    else
      v6 = 0xE200000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x4479616C70736964;
  v6 = 0xEB00000000657461;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x70795479726F7473;
    else
      v3 = 25705;
    if (v7 == 1)
      v2 = 0xE900000000000065;
    else
      v2 = 0xE200000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABDE2810(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000011;
  else
    v3 = 0x446873696C627570;
  if (v2)
    v4 = 0xEB00000000657461;
  else
    v4 = 0x80000001ABF54CD0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000011;
  else
    v5 = 0x446873696C627570;
  if ((a2 & 1) != 0)
    v6 = 0x80000001ABF54CD0;
  else
    v6 = 0xEB00000000657461;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1ABDE28C0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1ABDE292C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE29AC + 4 * byte_1ABF3CFC7[a2]))(0x72756769666E6F63);
}

uint64_t sub_1ABDE29AC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x72756769666E6F63 && v1 == 0xED00006E6F697461)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1ABDE2A68(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE2AB8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE2B50 + 4 * byte_1ABF3CFD2[a2]))(1701667182);
}

uint64_t sub_1ABDE2B50(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1701667182 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1ABDE2C38(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE2C94(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE2CF4 + 4 * byte_1ABF3CFDC[a2]))(7107189);
}

uint64_t sub_1ABDE2CF4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7107189 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABDE2D9C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x646174654D736473;
  else
    v3 = 0x7365746F7571;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEB00000000617461;
  if ((a2 & 1) != 0)
    v5 = 0x646174654D736473;
  else
    v5 = 0x7365746F7571;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000617461;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1ABDE2E44(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE2E8C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE2F10 + 4 * byte_1ABF3CFE6[a2]))(1751607656);
}

uint64_t sub_1ABDE2F10(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 1751607656 && v1 == 0xE400000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABDE2FE4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7461447472617473;
  else
    v3 = 0x65746144646E65;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x7461447472617473;
  else
    v5 = 0x65746144646E65;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1ABDE308C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x74657366666FLL;
  else
    v3 = 1701080931;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x74657366666FLL;
  else
    v5 = 1701080931;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1ABDE3124(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE3180(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE31F8 + 4 * byte_1ABF3CFF0[a2]))(0x73656972746E65);
}

uint64_t sub_1ABDE31F8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73656972746E65 && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1ABDE32B8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE3308(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE33CC + 4 * byte_1ABF3CFFC[a2]))(0x59434E4552525543);
}

uint64_t sub_1ABDE33CC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x59434E4552525543 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1ABDE34F0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE3530(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE359C + 4 * byte_1ABF3D008[a2]))(0x4445534F4C43);
}

uint64_t sub_1ABDE359C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x4445534F4C43 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1ABDE364C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE36B8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE376C + 4 * byte_1ABF3D012[a2]))(0x525F51414453414ELL);
}

uint64_t sub_1ABDE376C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x525F51414453414ELL && v1 == 0xEF454D49544C4145)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABDE386C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000013;
  else
    v3 = 0x65676175676E616CLL;
  if (v2)
    v4 = 0xEF736769666E6F43;
  else
    v4 = 0x80000001ABF54ED0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000013;
  else
    v5 = 0x65676175676E616CLL;
  if ((a2 & 1) != 0)
    v6 = 0x80000001ABF54ED0;
  else
    v6 = 0xEF736769666E6F43;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1ABDE3920(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE398C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE39E8 + 4 * byte_1ABF3D01C[a2]))(0x6C6F626D7973);
}

uint64_t sub_1ABDE39E8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C6F626D7973 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABDE3A8C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x646174654D736473;
  else
    v3 = 0x6D6574497377656ELL;
  if (v2)
    v4 = 0xE900000000000073;
  else
    v4 = 0xEB00000000617461;
  if ((a2 & 1) != 0)
    v5 = 0x646174654D736473;
  else
    v5 = 0x6D6574497377656ELL;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000617461;
  else
    v6 = 0xE900000000000073;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1ABDE3B3C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE3B8C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE3C04 + 4 * byte_1ABF3D025[a2]))(0x446873696C627570);
}

uint64_t sub_1ABDE3C04(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x446873696C627570 && v1 == 0xEB00000000657461)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABDE3CC4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x72614C6F65646976;
  else
    v3 = 0x616D536F65646976;
  if (v2)
    v4 = 0xEA00000000006C6CLL;
  else
    v4 = 0xEA00000000006567;
  if ((a2 & 1) != 0)
    v5 = 0x72614C6F65646976;
  else
    v5 = 0x616D536F65646976;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006567;
  else
    v6 = 0xEA00000000006C6CLL;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1ABDE3D6C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE3DD8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE3EB0 + 4 * byte_1ABF3D041[a2]))(0x657469726F766166);
}

uint64_t sub_1ABDE3EB0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x657469726F766166 && v1 == 0xEE0074736F6F4264)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1ABDE3FE0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE4028(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE4100 + 4 * byte_1ABF3D04F[a2]))(0xD000000000000011);
}

uint64_t sub_1ABDE4100(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000011 && v1 == 0x80000001ABF54120)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABDE4224(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x544847494CLL;
    else
      v3 = 1263681860;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x544847494CLL;
      else
        v6 = 1263681860;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x6E776F6E6B6E75;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    v8 = sub_1ABF3223C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABDE4324(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x736C72556F676F6CLL;
    else
      v3 = 0x6C7255656D6F68;
    if (v2 == 1)
      v4 = 0xE800000000000000;
    else
      v4 = 0xE700000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x736C72556F676F6CLL;
      else
        v6 = 0x6C7255656D6F68;
      if (v5 == 1)
        v7 = 0xE800000000000000;
      else
        v7 = 0xE700000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701667182;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701667182)
  {
LABEL_21:
    v8 = sub_1ABF3223C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABDE442C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x746E6169726176;
  else
    v3 = 7107189;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x746E6169726176;
  else
    v5 = 7107189;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1ABDE44C8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE4510(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1ABDE4618 + 4 * byte_1ABF3D061[a2]))(0x6B656557656E6FLL);
}

uint64_t sub_1ABDE4618(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6B656557656E6FLL && v1 == 0xE700000000000000)
    v2 = 1;
  else
    v2 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1ABDE4788(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x64656C62616E65;
    else
      v3 = 0x64656C6261736964;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x64656C62616E65;
      else
        v6 = 0x64656C6261736964;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE700000000000000;
    v3 = 0x746C7561666564;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE700000000000000;
  if (v3 != 0x746C7561666564)
  {
LABEL_21:
    v8 = sub_1ABF3223C();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABDE48A0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE004449656C646ELL;
  v3 = 0x7542746E65696C63;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000018;
    else
      v5 = 0xD000000000000020;
    if (v4 == 1)
      v6 = 0x80000001ABF53FC0;
    else
      v6 = 0x80000001ABF53FE0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x7542746E65696C63;
  v6 = 0xEE004449656C646ELL;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000018;
    else
      v3 = 0xD000000000000020;
    if (v7 == 1)
      v2 = 0x80000001ABF53FC0;
    else
      v2 = 0x80000001ABF53FE0;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABDE49B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;

  v2 = v1;
  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = type metadata accessor for RawAttributionSource(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = *(_QWORD *)(v1 + 80);
  v13 = *(_QWORD *)(v2 + 88);
  v12 = *(_QWORD *)(v2 + 96);
  v15 = *(_QWORD *)(v2 + 104);
  v14 = *(_QWORD *)(v2 + 112);
  v28 = *(_OWORD *)a1;
  v26 = (uint64_t *)((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = v12;
  if (!v13)
  {
    sub_1ABD03ADC((uint64_t)&v28);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABD365D4(v5, v4);
    sub_1ABD365D4(v11, 0);
    goto LABEL_14;
  }
  v24 = v5;
  v25 = v7;
  v16 = v13;
  if (__PAIR128__(v13, v11) != v28 && (sub_1ABF3223C() & 1) == 0)
    goto LABEL_13;
  if (!v8)
  {
    if (!v14)
      goto LABEL_9;
LABEL_13:
    sub_1ABD03ADC((uint64_t)&v28);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABD03ADC((uint64_t)&v28);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABD7F874(v11, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABDE55E4((uint64_t)&v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABDE55E4((uint64_t)&v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v24;
    v7 = v25;
    goto LABEL_14;
  }
  if (!v14 || (v25 != v15 || v8 != v14) && (sub_1ABF3223C() & 1) == 0)
    goto LABEL_13;
LABEL_9:
  sub_1ABD03ADC((uint64_t)&v28);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD03ADC((uint64_t)&v28);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v17 = v27;
  sub_1ABD7F874(v11, v16);
  v18 = sub_1ABDE0E00(v6, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABDE55E4((uint64_t)&v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABDE55E4((uint64_t)&v28);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v5 = v24;
  v7 = v25;
  if ((v18 & 1) == 0)
  {
LABEL_14:
    v20 = *(_QWORD *)(v2 + 80);
    v21 = *(_QWORD *)(v2 + 88);
    *(_QWORD *)(v2 + 80) = v5;
    *(_QWORD *)(v2 + 88) = v4;
    *(_QWORD *)(v2 + 96) = v6;
    *(_QWORD *)(v2 + 104) = v7;
    *(_QWORD *)(v2 + 112) = v8;
    sub_1ABD365D4(v20, v21);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 64));
    v22 = *(_BYTE *)(v2 + 24);
    sub_1ABD03ADC((uint64_t)&v28);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABEA4E38((uint64_t)a1, v22);
    sub_1ABD03ADC((uint64_t)&v28);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v23 = v26;
    sub_1ABDE4D1C(a1, v26);
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34EA30, type metadata accessor for RawAttributionSource, (uint64_t)&unk_1ABF3C2FC);
    sub_1ABF30CF4();
    return sub_1ABCFC3BC((uint64_t)v23, type metadata accessor for RawAttributionSource);
  }
  return result;
}

uint64_t sub_1ABDE4D1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34EA48, type metadata accessor for RawAttributionSourceLogo, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v34 = (uint64_t)&v32 - v6;
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v4);
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v32 - v8;
  v9 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1ABF31774();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v32 - v15;
  v17 = *a1;
  v18 = a1[1];
  v19 = a1[4];
  v32 = a1[3];
  if (v17 == 0x6946206F6F686159 && v18 == 0xED000065636E616ELL || (sub_1ABF3223C() & 1) != 0)
  {
    sub_1ABF31738();
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    if (qword_1ED34FD78 != -1)
      swift_once();
    v20 = (id)qword_1ED368428;
    sub_1ABF30844();
    v17 = sub_1ABF317EC();
    v18 = v21;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v22 = (uint64_t)v33;
    if (v19)
      goto LABEL_7;
LABEL_9:
    v23 = sub_1ABF305D4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    goto LABEL_10;
  }
  sub_1ABF2FF5C();
  v22 = (uint64_t)v33;
  if (!v19)
    goto LABEL_9;
LABEL_7:
  sub_1ABF2FF5C();
  sub_1ABF305BC();
  swift_bridgeObjectRelease();
LABEL_10:
  v24 = v34;
  sub_1ABDE5134((__int128 *)a1, v34);
  v25 = type metadata accessor for RawAttributionSource(0);
  v26 = (uint64_t)a2 + *(int *)(v25 + 20);
  v27 = sub_1ABF305D4();
  v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v29 = (uint64_t)a2 + *(int *)(v25 + 24);
  v30 = type metadata accessor for RawAttributionSourceLogo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  *a2 = v17;
  a2[1] = v18;
  sub_1ABDE560C(v22, v26, (unint64_t *)&qword_1ED350380, v28);
  return sub_1ABDE560C(v24, v29, &qword_1ED34EA48, type metadata accessor for RawAttributionSourceLogo);
}

uint64_t sub_1ABDE50C4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  sub_1ABD365D4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));

  return swift_deallocClassInstance();
}

uint64_t sub_1ABDE5110(uint64_t a1, uint64_t *a2)
{
  return sub_1ABDE49B8(a2);
}

uint64_t sub_1ABDE5134@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t result;
  char *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  _BYTE v51[16];
  __int128 v52;
  _QWORD v53[2];

  v4 = type metadata accessor for RawAttributionSourceLogo(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v38 - v12;
  v14 = sub_1ABF305D4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v44 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v43 = (char *)&v38 - v18;
  v19 = a1[1];
  v48 = *a1;
  v49 = v19;
  v50 = *((_QWORD *)a1 + 4);
  v20 = v19;
  v53[0] = v19;
  v52 = v48;
  sub_1ABDE55E4((uint64_t)&v52);
  sub_1ABD463AC((uint64_t)&v49 + 8, (uint64_t)v51, (unint64_t *)&qword_1ED34FB80);
  sub_1ABDE55E4((uint64_t)v51);
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_11:
    sub_1ABD66AA0((uint64_t)v53);
    sub_1ABCF59BC((uint64_t)v13);
    v27 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v27, 1, v4);
  }
  v46 = v4;
  v47 = v15;
  v40 = v11;
  v41 = v7;
  v45 = v5;
  v42 = a2;
  sub_1ABF2FF5C();
  v22 = (_BYTE *)(v20 + 48);
  v23 = v21;
  while (!*v22 || *v22 == 2)
  {
    v24 = sub_1ABF3223C();
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
      goto LABEL_10;
    v22 += 24;
    swift_bridgeObjectRelease();
    if (!--v23)
    {
      sub_1ABD66AA0((uint64_t)v53);
      a2 = v42;
      v5 = v45;
      v4 = v46;
      v15 = v47;
      goto LABEL_8;
    }
  }
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
LABEL_10:
  sub_1ABD66AA0((uint64_t)v53);
  sub_1ABF2FF5C();
  sub_1ABF305BC();
  swift_bridgeObjectRelease_n();
  v25 = v47;
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v13, 1, v14);
  a2 = v42;
  v5 = v45;
  v4 = v46;
  if (v26 == 1)
    goto LABEL_11;
  v29 = v43;
  v39 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v39(v43, v13, v14);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v44, v29, v14);
  result = sub_1ABF2FF5C();
  v30 = 0;
  v31 = (_BYTE *)(v20 + 48);
  while (1)
  {
    v32 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (*v31 && *v31 != 1)
    {
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
LABEL_21:
      sub_1ABD66AA0((uint64_t)v53);
      sub_1ABD66AA0((uint64_t)v53);
      sub_1ABF2FF5C();
      v35 = (uint64_t)v40;
      sub_1ABF305BC();
      swift_bridgeObjectRelease_n();
      v34 = v47;
LABEL_22:
      (*(void (**)(char *, uint64_t))(v34 + 8))(v43, v14);
      v36 = (uint64_t)v41;
      v39(v41, v44, v14);
      v37 = type metadata accessor for RawAttributionSourceLogo.Unresolved(0);
      sub_1ABDD7BB8(v35, v36 + *(int *)(v37 + 20));
      v4 = v46;
      swift_storeEnumTagMultiPayload();
      sub_1ABDE5664(v36, a2);
      v27 = 0;
      v5 = v45;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v27, 1, v4);
    }
    v33 = sub_1ABF3223C();
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    if ((v33 & 1) != 0)
      goto LABEL_21;
    result = swift_bridgeObjectRelease();
    ++v30;
    v31 += 24;
    if (v32 == v21)
    {
      sub_1ABD66AA0((uint64_t)v53);
      sub_1ABD66AA0((uint64_t)v53);
      v34 = v47;
      v35 = (uint64_t)v40;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v40, 1, 1, v14);
      goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDE55E4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABDE560C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1ABCF5A54(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_1ABDE5664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RawAttributionSourceLogo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABDE56A8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for UnimplementedManagedConfigurationService()
{
  return &type metadata for UnimplementedManagedConfigurationService;
}

uint64_t sub_1ABDE56C0()
{
  MEMORY[0x1AF436E0C]("StocksCore requires a registered ManagedConfigurationServiceType to fetch News.", 79, 2, MEMORY[0x1E0DEE9D8]);
  return 0;
}

uint64_t sub_1ABDE56F0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1ABDE5F70(0, &qword_1EEC43078, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDE5ECC();
  sub_1ABF32368();
  v10[1] = a2;
  sub_1ABDE5F10();
  sub_1ABDE5FCC(&qword_1EEC43080, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABDE5810()
{
  return 0x676E697070616DLL;
}

uint64_t sub_1ABDE5828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x676E697070616DLL && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABDE58BC()
{
  sub_1ABDE5ECC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDE58E4()
{
  sub_1ABDE5ECC();
  return sub_1ABF32398();
}

_QWORD *sub_1ABDE590C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABDE5D74(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABDE5934(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABDE56F0(a1, *v1);
}

uint64_t *sub_1ABDE594C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_21:
    *a3 = v6;
    return result;
  }
  v30 = a3;
  v5 = *result;
  sub_1ABF2FF5C();
  v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v7 = (uint64_t *)(a2 + 40);
  v31 = v5;
  while (1)
  {
    if (!*(_QWORD *)(v5 + 16))
      goto LABEL_4;
    v8 = *(v7 - 1);
    v9 = *v7;
    swift_bridgeObjectRetain_n();
    v10 = sub_1ABD00F9C(v8, v9);
    if ((v11 & 1) != 0)
      break;
    swift_bridgeObjectRelease_n();
LABEL_4:
    v7 += 2;
    if (!--v3)
    {
      result = (uint64_t *)swift_bridgeObjectRelease();
      a3 = v30;
      goto LABEL_21;
    }
  }
  v12 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v10);
  v14 = *v12;
  v13 = v12[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  sub_1ABD1248C(0, (unint64_t *)&qword_1ED34FFD0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1ABF366C0;
  *(_QWORD *)(v15 + 32) = v14;
  *(_QWORD *)(v15 + 40) = v13;
  sub_1ABF2FF5C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32 = v8;
  v18 = sub_1ABD00F9C(v8, v9);
  v19 = v6[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (!__OFADD__(v19, v20))
  {
    v22 = v17;
    if (v6[3] >= v21)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v17 & 1) == 0)
          goto LABEL_16;
      }
      else
      {
        sub_1ABE6ECA4();
        if ((v22 & 1) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      sub_1ABD23C30(v21, isUniquelyReferenced_nonNull_native);
      v23 = sub_1ABD00F9C(v32, v9);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_24;
      v18 = v23;
      if ((v22 & 1) == 0)
      {
LABEL_16:
        v6[(v18 >> 6) + 8] |= 1 << v18;
        v26 = (uint64_t *)(v6[6] + 16 * v18);
        *v26 = v32;
        v26[1] = v9;
        *(_QWORD *)(v6[7] + 8 * v18) = v15;
        v27 = v6[2];
        v28 = __OFADD__(v27, 1);
        v29 = v27 + 1;
        if (v28)
          goto LABEL_23;
        v6[2] = v29;
        sub_1ABF2FF5C();
        goto LABEL_18;
      }
    }
    v25 = v6[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + 8 * v18) = v15;
LABEL_18:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v5 = v31;
    goto LABEL_4;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = (uint64_t *)sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDE5BBC()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TestFeedLookupService()
{
  return objc_opt_self();
}

uint64_t sub_1ABDE5C00(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  sub_1ABF3127C();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1ABF2FF5C();
  v2 = (void *)sub_1ABF31114();
  sub_1ABD345C8();
  v3 = sub_1ABF31180();
  swift_release();
  swift_release();

  return v3;
}

uint64_t sub_1ABDE5CA8()
{
  sub_1ABDE5D20();
  return sub_1ABF30CAC();
}

uint64_t sub_1ABDE5CE4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t *sub_1ABDE5D08@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1ABDE594C(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1ABDE5D20()
{
  unint64_t result;

  result = qword_1EEC43050;
  if (!qword_1EEC43050)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D1BC, &type metadata for TestFeedLookupService.TestData);
    atomic_store(result, (unint64_t *)&qword_1EEC43050);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestFeedLookupService.TestData()
{
  return &type metadata for TestFeedLookupService.TestData;
}

_QWORD *sub_1ABDE5D74(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD v10[2];

  sub_1ABDE5F70(0, &qword_1EEC43058, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDE5ECC();
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABDE5F10();
    sub_1ABDE5FCC(&qword_1EEC43070, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8 = (_QWORD *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_1ABDE5ECC()
{
  unint64_t result;

  result = qword_1EEC43060;
  if (!qword_1EEC43060)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D2A8, &type metadata for TestFeedLookupService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43060);
  }
  return result;
}

void sub_1ABDE5F10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43068)
  {
    v0 = sub_1ABF31690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43068);
  }
}

void sub_1ABDE5F70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABDE5ECC();
    v7 = a3(a1, &type metadata for TestFeedLookupService.TestData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1ABDE5FCC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    sub_1ABDE5F10();
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1AF438F30](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TestFeedLookupService.TestData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABDE6068 + 4 * byte_1ABF3D140[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABDE6088 + 4 * byte_1ABF3D145[v4]))();
}

_BYTE *sub_1ABDE6068(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABDE6088(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDE6090(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDE6098(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDE60A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDE60A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TestFeedLookupService.TestData.CodingKeys()
{
  return &type metadata for TestFeedLookupService.TestData.CodingKeys;
}

unint64_t sub_1ABDE60C8()
{
  unint64_t result;

  result = qword_1EEC43088;
  if (!qword_1EEC43088)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D280, &type metadata for TestFeedLookupService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43088);
  }
  return result;
}

unint64_t sub_1ABDE6110()
{
  unint64_t result;

  result = qword_1EEC43090;
  if (!qword_1EEC43090)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D1F0, &type metadata for TestFeedLookupService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43090);
  }
  return result;
}

unint64_t sub_1ABDE6158()
{
  unint64_t result;

  result = qword_1EEC43098;
  if (!qword_1EEC43098)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D218, &type metadata for TestFeedLookupService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43098);
  }
  return result;
}

void sub_1ABDE619C(char *a1)
{
  sub_1ABDE24F0(*a1);
}

void sub_1ABDE61A8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABDE61FC()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABDE626C()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE62B0()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABDE630C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABDE635C()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDE63CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDE7674();
  *a1 = result;
  return result;
}

uint64_t sub_1ABDE63F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABDE6430 + 4 * byte_1ABF3D32C[*v0]))();
}

void sub_1ABDE6430(char *a1@<X8>)
{
  strcpy(a1, "reference-meta");
  a1[15] = -18;
}

void sub_1ABDE6458(_QWORD *a1@<X8>)
{
  *a1 = 0x736569726573;
  a1[1] = 0xE600000000000000;
}

void sub_1ABDE6470(_QWORD *a1@<X8>)
{
  *a1 = 1635018093;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1ABDE6484()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABDE64BC + 4 * byte_1ABF3D330[*v0]))(0x6D2D7365756C6176, 0xEB00000000617465);
}

uint64_t sub_1ABDE64BC()
{
  return 0x636E657265666572;
}

uint64_t sub_1ABDE64E0()
{
  return 0x736569726573;
}

uint64_t sub_1ABDE64F4()
{
  return 1635018093;
}

uint64_t sub_1ABDE6504@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDE7674();
  *a1 = result;
  return result;
}

uint64_t sub_1ABDE6528()
{
  sub_1ABDE8BD4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDE6550()
{
  sub_1ABDE8BD4();
  return sub_1ABF32398();
}

uint64_t sub_1ABDE6578()
{
  return sub_1ABDE6D7C();
}

uint64_t sub_1ABDE6590()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABDE65A8()
{
  return sub_1ABDE6DE0();
}

uint64_t sub_1ABDE65C0@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

void sub_1ABDE65CC(_QWORD *a1@<X8>)
{
  *a1 = 0x65727574616566;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1ABDE65E8()
{
  return 0x65727574616566;
}

uint64_t sub_1ABDE6600@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABDE660C()
{
  sub_1ABDE8B90();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDE6634()
{
  sub_1ABDE8B90();
  return sub_1ABF32398();
}

uint64_t sub_1ABDE665C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;

  result = sub_1ABDE76BC(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
    *(_QWORD *)(a2 + 24) = v7;
  }
  return result;
}

void sub_1ABDE6690(char *a1)
{
  sub_1ABDE23A8(*a1);
}

void sub_1ABDE669C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABDE66E0()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABDE674C()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDE6780()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABDE67D8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABDE6818()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDE6884@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABDE7AC0();
  *a1 = result;
  return result;
}

uint64_t sub_1ABDE68B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABDE68D8 + 4 * byte_1ABF3D343[*v0]))();
}

void sub_1ABDE68D8(_QWORD *a1@<X8>)
{
  *a1 = 0x65736F6C63;
  a1[1] = 0xE500000000000000;
}

void sub_1ABDE68F0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1751607656;
  a1[1] = v1;
}

void sub_1ABDE6900(_QWORD *a1@<X8>)
{
  *a1 = 7827308;
  a1[1] = 0xE300000000000000;
}

void sub_1ABDE6914(_QWORD *a1@<X8>)
{
  *a1 = 0x656D756C6F76;
  a1[1] = 0xE600000000000000;
}

ValueMetadata *type metadata accessor for YahooChartResponse()
{
  return &type metadata for YahooChartResponse;
}

uint64_t sub_1ABDE693C()
{
  sub_1ABDE9D4C();
  return sub_1ABF319CC();
}

uint64_t sub_1ABDE6998(char *a1, char *a2)
{
  return sub_1ABDE2318(*a1, *a2);
}

uint64_t sub_1ABDE69A4()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDE6A10()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDE6A58()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDE6AC0@<X0>(char *a1@<X8>)
{
  return sub_1ABDE74C0(a1);
}

void sub_1ABDE6ACC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 6710642;
  if (*v1)
    v2 = 118;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE100000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABDE6AF8()
{
  _BYTE *v0;

  if (*v0)
    return 118;
  else
    return 6710642;
}

uint64_t sub_1ABDE6B20@<X0>(char *a1@<X8>)
{
  return sub_1ABDE75A0(a1);
}

uint64_t sub_1ABDE6B2C()
{
  sub_1ABDE9828();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDE6B54()
{
  sub_1ABDE9828();
  return sub_1ABF32398();
}

uint64_t sub_1ABDE6B7C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1ABDE7B08(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1ABDE6BA8()
{
  return sub_1ABDE6D7C();
}

uint64_t sub_1ABDE6BB4()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABDE6BC0()
{
  return sub_1ABDE6DE0();
}

uint64_t sub_1ABDE6BCC@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

void sub_1ABDE6BD8(_QWORD *a1@<X8>)
{
  *a1 = 112;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1ABDE6BE8()
{
  return 112;
}

uint64_t sub_1ABDE6BF4@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABDE6C00()
{
  sub_1ABDE90EC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDE6C28()
{
  sub_1ABDE90EC();
  return sub_1ABF32398();
}

_QWORD *sub_1ABDE6C50@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABDE7D00(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABDE6C78()
{
  return sub_1ABDE6D7C();
}

uint64_t sub_1ABDE6C8C()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABDE6CA0()
{
  return sub_1ABDE6DE0();
}

uint64_t sub_1ABDE6CB4@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

void sub_1ABDE6CC0(_QWORD *a1@<X8>)
{
  *a1 = 0x65756C6176;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1ABDE6CD8()
{
  return 0x65756C6176;
}

uint64_t sub_1ABDE6CEC@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABDE6CF8()
{
  sub_1ABDE9064();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDE6D20()
{
  sub_1ABDE9064();
  return sub_1ABF32398();
}

_QWORD *sub_1ABDE6D48@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABDE7F24(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABDE6D70()
{
  return sub_1ABDE6D7C();
}

uint64_t sub_1ABDE6D7C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABDE6DC8()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABDE6DD4()
{
  return sub_1ABDE6DE0();
}

uint64_t sub_1ABDE6DE0()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABDE6E28@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6E34(a1);
}

uint64_t sub_1ABDE6E34@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ABDE6E80(_QWORD *a1@<X8>)
{
  *a1 = 25705;
  a1[1] = 0xE200000000000000;
}

uint64_t sub_1ABDE6E90()
{
  return 25705;
}

uint64_t sub_1ABDE6E9C@<X0>(BOOL *a1@<X8>)
{
  return sub_1ABDE6EA8(a1);
}

uint64_t sub_1ABDE6EA8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ABDE6EF8()
{
  sub_1ABDE9748();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDE6F20()
{
  sub_1ABDE9748();
  return sub_1ABF32398();
}

unint64_t sub_1ABDE6F48@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_1ABDE80AC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABDE6F70(char *a1, char *a2)
{
  return sub_1ABDE2278(*a1, *a2);
}

uint64_t sub_1ABDE6F7C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDE6FF8()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDE7050()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDE70C8@<X0>(char *a1@<X8>)
{
  return sub_1ABDE74C0(a1);
}

void sub_1ABDE70D4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1702125892;
  if (!*v1)
    v2 = 0x6D617473656D6954;
  v3 = 0xE900000000000070;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABDE7110()
{
  sub_1ABDE98DC();
  return sub_1ABF319CC();
}

uint64_t sub_1ABDE716C()
{
  return 1701869940;
}

uint64_t sub_1ABDE717C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABDE7200()
{
  sub_1ABDE9174();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDE7228()
{
  sub_1ABDE9174();
  return sub_1ABF32398();
}

unint64_t sub_1ABDE7250@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_1ABDE81F4(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_1ABDE727C()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E65746E6F63;
  else
    return 1701667182;
}

uint64_t sub_1ABDE72B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABDE833C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABDE72D4()
{
  sub_1ABDE91FC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDE72FC()
{
  sub_1ABDE91FC();
  return sub_1ABF32398();
}

uint64_t sub_1ABDE7324@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1ABDE841C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1ABDE7350(char *a1, char *a2)
{
  return sub_1ABDE265C(*a1, *a2);
}

uint64_t sub_1ABDE735C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDE73DC()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDE7438()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABDE74B4@<X0>(char *a1@<X8>)
{
  return sub_1ABDE74C0(a1);
}

uint64_t sub_1ABDE74C0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1ABDE7518(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1635017060;
  if (!*v1)
    v2 = 0x7265732D61746164;
  v3 = 0xEB00000000736569;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABDE7558()
{
  _BYTE *v0;

  if (*v0)
    return 1635017060;
  else
    return 0x7265732D61746164;
}

uint64_t sub_1ABDE7594@<X0>(char *a1@<X8>)
{
  return sub_1ABDE75A0(a1);
}

uint64_t sub_1ABDE75A0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1ABDE75FC()
{
  sub_1ABDE88B8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABDE7624()
{
  sub_1ABDE88B8();
  return sub_1ABF32398();
}

ValueMetadata *sub_1ABDE764C@<X0>(_QWORD *a1@<X0>, ValueMetadata **a2@<X8>)
{
  uint64_t v2;
  ValueMetadata *result;

  result = sub_1ABDE85DC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABDE7674()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1ABDE76BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  char v23;
  uint64_t v24;

  sub_1ABDE97D0(0, &qword_1ED34E238, (void (*)(void))sub_1ABDE8B90);
  v20 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v19 - v4;
  sub_1ABDE97D0(0, &qword_1ED34E230, (void (*)(void))sub_1ABDE8BD4);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v19 - v9;
  v11 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1ABDE8BD4();
  v12 = v22;
  sub_1ABF3235C();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    v22 = v5;
    v13 = v8;
    v14 = v3;
    v15 = v20;
    v23 = 0;
    sub_1ABDE8C18();
    sub_1ABF32110();
    v11 = v24;
    v23 = 2;
    sub_1ABDE8C5C();
    sub_1ABF2FF5C();
    sub_1ABF32110();
    v17 = v13;
    v18 = v24;
    v23 = 1;
    sub_1ABDE8CA0();
    sub_1ABF2FF5C();
    sub_1ABF32110();
    v19[1] = v18;
    LOBYTE(v24) = 3;
    sub_1ABDE8B90();
    sub_1ABF32074();
    sub_1ABD04578(0, &qword_1ED34DF48, (uint64_t)&type metadata for YahooChartResponse.Feature, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABDE8CE4(&qword_1ED34DF50, &qword_1ED34DF48, (uint64_t)&type metadata for YahooChartResponse.Feature, (uint64_t (*)(void))sub_1ABDE8D50);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v15);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    sub_1ABF2FF5C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1ABDE7AC0()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1ABDE7B08(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[32];

  sub_1ABDE97D0(0, &qword_1ED34E248, (void (*)(void))sub_1ABDE9828);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v10[-v6];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDE9828();
  sub_1ABF3235C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10[31] = 0;
    v8 = sub_1ABF320E0();
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10[30] = 1;
    sub_1ABDE986C();
    sub_1ABF2FF5C();
    sub_1ABF32110();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    sub_1ABF2FF5C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

_QWORD *sub_1ABDE7D00(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  __int128 v11;
  _QWORD *v12;

  sub_1ABDE97D0(0, &qword_1ED34E250, (void (*)(void))sub_1ABDE90EC);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDE90EC();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABD04578(0, &qword_1ED34DF38, (uint64_t)&type metadata for YahooChartResponse.Record, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABDE8CE4(&qword_1ED34DF40, &qword_1ED34DF38, (uint64_t)&type metadata for YahooChartResponse.Record, (uint64_t (*)(void))sub_1ABDE9130);
    sub_1ABF32110();
    v9 = v12;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

_QWORD *sub_1ABDE7F24(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABDE97D0(0, &qword_1ED34E260, (void (*)(void))sub_1ABDE9064);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDE9064();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABD04578(0, &qword_1ED34DF28, (uint64_t)&type metadata for YahooChartResponse.MappingEntry, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABDE8CE4(&qword_1ED34DF30, &qword_1ED34DF28, (uint64_t)&type metadata for YahooChartResponse.MappingEntry, (uint64_t (*)(void))sub_1ABDE90A8);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABDE80AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v11;
  unsigned __int8 v12;

  sub_1ABDE97D0(0, &qword_1ED34E240, (void (*)(void))sub_1ABDE9748);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDE9748();
  v9 = (unint64_t)v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABDE978C();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABDE81F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v11;
  unsigned __int8 v12;

  sub_1ABDE97D0(0, &qword_1ED34E268, (void (*)(void))sub_1ABDE9174);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDE9174();
  v9 = (unint64_t)v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABDE91B8();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t sub_1ABDE833C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1ABDE841C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1ABDE97D0(0, &qword_1ED34E258, (void (*)(void))sub_1ABDE91FC);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDE91FC();
  sub_1ABF3235C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_1ABF320E0();
    v11 = 1;
    sub_1ABF2FF5C();
    sub_1ABF3208C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1ABF2FF5C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

ValueMetadata *sub_1ABDE85DC(_QWORD *a1)
{
  uint64_t v1;
  ValueMetadata *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v13)(char *, uint64_t);
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  ValueMetadata *v17;
  char v18;
  char v19;

  v3 = &type metadata for YahooChartResponse.CodingKeys;
  sub_1ABDE97D0(0, &qword_1ED34E228, (void (*)(void))sub_1ABDE88B8);
  v15 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v16 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABDE88B8();
  sub_1ABF3235C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v14 = a1;
    v19 = 1;
    v11 = v15;
    v10 = v16;
    sub_1ABF32074();
    sub_1ABD04578(0, &qword_1EEC430A0, (uint64_t)&type metadata for YahooChartResponse.DataSeries, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v18 = 0;
    sub_1ABDE8CE4(&qword_1EEC430A8, &qword_1EEC430A0, (uint64_t)&type metadata for YahooChartResponse.DataSeries, (uint64_t (*)(void))sub_1ABDE88FC);
    sub_1ABF32110();
    v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v10, v11);
    v13(v9, v11);
    v3 = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return v3;
}

unint64_t sub_1ABDE88B8()
{
  unint64_t result;

  result = qword_1ED34D4A8;
  if (!qword_1ED34D4A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D4DC, &type metadata for YahooChartResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D4A8);
  }
  return result;
}

unint64_t sub_1ABDE88FC()
{
  unint64_t result;

  result = qword_1ED34D4F0;
  if (!qword_1ED34D4F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D4B4, &type metadata for YahooChartResponse.DataSeries);
    atomic_store(result, (unint64_t *)&qword_1ED34D4F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.CodingKeys()
{
  return &type metadata for YahooChartResponse.CodingKeys;
}

uint64_t destroy for YahooChartResponse.DataSeries()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for YahooChartResponse.DataSeries(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for YahooChartResponse.DataSeries(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for YahooChartResponse.DataSeries(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for YahooChartResponse.DataSeries()
{
  return &type metadata for YahooChartResponse.DataSeries;
}

unint64_t sub_1ABDE8ABC()
{
  unint64_t result;

  result = qword_1EEC430B0;
  if (!qword_1EEC430B0)
  {
    result = MEMORY[0x1AF438F30]("叻9", &type metadata for YahooChartResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC430B0);
  }
  return result;
}

unint64_t sub_1ABDE8B04()
{
  unint64_t result;

  result = qword_1ED34D4B8;
  if (!qword_1ED34D4B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D3C4, &type metadata for YahooChartResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D4B8);
  }
  return result;
}

unint64_t sub_1ABDE8B4C()
{
  unint64_t result;

  result = qword_1ED34D4B0;
  if (!qword_1ED34D4B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D3EC, &type metadata for YahooChartResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D4B0);
  }
  return result;
}

unint64_t sub_1ABDE8B90()
{
  unint64_t result;

  result = qword_1ED34D4D8;
  if (!qword_1ED34D4D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D834, &type metadata for YahooChartResponse.DataSeries.FeaturesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D4D8);
  }
  return result;
}

unint64_t sub_1ABDE8BD4()
{
  unint64_t result;

  result = qword_1ED34D4C0;
  if (!qword_1ED34D4C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D7E4, &type metadata for YahooChartResponse.DataSeries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D4C0);
  }
  return result;
}

unint64_t sub_1ABDE8C18()
{
  unint64_t result;

  result = qword_1ED34D5A0;
  if (!qword_1ED34D5A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D7BC, &type metadata for YahooChartResponse.Mapping);
    atomic_store(result, (unint64_t *)&qword_1ED34D5A0);
  }
  return result;
}

unint64_t sub_1ABDE8C5C()
{
  unint64_t result;

  result = qword_1ED34D560;
  if (!qword_1ED34D560)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D794, &type metadata for YahooChartResponse.Series);
    atomic_store(result, (unint64_t *)&qword_1ED34D560);
  }
  return result;
}

unint64_t sub_1ABDE8CA0()
{
  unint64_t result;

  result = qword_1ED34D5D0;
  if (!qword_1ED34D5D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D76C, &type metadata for YahooChartResponse.Metadata);
    atomic_store(result, (unint64_t *)&qword_1ED34D5D0);
  }
  return result;
}

uint64_t sub_1ABDE8CE4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a4();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABDE8D50()
{
  unint64_t result;

  result = qword_1ED34D580;
  if (!qword_1ED34D580)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D744, &type metadata for YahooChartResponse.Feature);
    atomic_store(result, (unint64_t *)&qword_1ED34D580);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for YahooChartResponse.DataSeries.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABDE8DE0 + 4 * byte_1ABF3D34D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABDE8E14 + 4 * byte_1ABF3D348[v4]))();
}

uint64_t sub_1ABDE8E14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDE8E1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDE8E24);
  return result;
}

uint64_t sub_1ABDE8E30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDE8E38);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABDE8E3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDE8E44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.DataSeries.CodingKeys()
{
  return &type metadata for YahooChartResponse.DataSeries.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.DataSeries.FeaturesCodingKeys()
{
  return &type metadata for YahooChartResponse.DataSeries.FeaturesCodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Feature()
{
  return &type metadata for YahooChartResponse.Feature;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Metadata()
{
  return &type metadata for YahooChartResponse.Metadata;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Series()
{
  return &type metadata for YahooChartResponse.Series;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Mapping()
{
  return &type metadata for YahooChartResponse.Mapping;
}

unint64_t sub_1ABDE8EB8()
{
  unint64_t result;

  result = qword_1EEC430B8;
  if (!qword_1EEC430B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D62C, &type metadata for YahooChartResponse.DataSeries.FeaturesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC430B8);
  }
  return result;
}

unint64_t sub_1ABDE8F00()
{
  unint64_t result;

  result = qword_1EEC430C0;
  if (!qword_1EEC430C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D71C, &type metadata for YahooChartResponse.DataSeries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC430C0);
  }
  return result;
}

unint64_t sub_1ABDE8F48()
{
  unint64_t result;

  result = qword_1ED34D4D0;
  if (!qword_1ED34D4D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D654, &type metadata for YahooChartResponse.DataSeries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D4D0);
  }
  return result;
}

unint64_t sub_1ABDE8F90()
{
  unint64_t result;

  result = qword_1ED34D4C8;
  if (!qword_1ED34D4C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D67C, &type metadata for YahooChartResponse.DataSeries.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D4C8);
  }
  return result;
}

unint64_t sub_1ABDE8FD8()
{
  unint64_t result;

  result = qword_1ED34D4E8;
  if (!qword_1ED34D4E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D564, &type metadata for YahooChartResponse.DataSeries.FeaturesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D4E8);
  }
  return result;
}

unint64_t sub_1ABDE9020()
{
  unint64_t result;

  result = qword_1ED34D4E0;
  if (!qword_1ED34D4E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D58C, &type metadata for YahooChartResponse.DataSeries.FeaturesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D4E0);
  }
  return result;
}

unint64_t sub_1ABDE9064()
{
  unint64_t result;

  result = qword_1ED34D588;
  if (!qword_1ED34D588)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DDFC, &type metadata for YahooChartResponse.Mapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D588);
  }
  return result;
}

unint64_t sub_1ABDE90A8()
{
  unint64_t result;

  result = qword_1ED34D510;
  if (!qword_1ED34D510)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DDD4, &type metadata for YahooChartResponse.MappingEntry);
    atomic_store(result, (unint64_t *)&qword_1ED34D510);
  }
  return result;
}

unint64_t sub_1ABDE90EC()
{
  unint64_t result;

  result = qword_1ED34D548;
  if (!qword_1ED34D548)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DD84, &type metadata for YahooChartResponse.Series.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D548);
  }
  return result;
}

unint64_t sub_1ABDE9130()
{
  unint64_t result;

  result = qword_1ED34D540;
  if (!qword_1ED34D540)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DD5C, &type metadata for YahooChartResponse.Record);
    atomic_store(result, (unint64_t *)&qword_1ED34D540);
  }
  return result;
}

unint64_t sub_1ABDE9174()
{
  unint64_t result;

  result = qword_1ED34D5A8;
  if (!qword_1ED34D5A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DD0C, &type metadata for YahooChartResponse.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D5A8);
  }
  return result;
}

unint64_t sub_1ABDE91B8()
{
  unint64_t result;

  result = qword_1ED34D5C8;
  if (!qword_1ED34D5C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DCE4, &type metadata for YahooChartResponse.Metadata.DateType);
    atomic_store(result, (unint64_t *)&qword_1ED34D5C8);
  }
  return result;
}

unint64_t sub_1ABDE91FC()
{
  unint64_t result;

  result = qword_1ED34D568;
  if (!qword_1ED34D568)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DC94, &type metadata for YahooChartResponse.Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D568);
  }
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Feature.CodingKeys()
{
  return &type metadata for YahooChartResponse.Feature.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Metadata.CodingKeys()
{
  return &type metadata for YahooChartResponse.Metadata.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Series.CodingKeys()
{
  return &type metadata for YahooChartResponse.Series.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Mapping.CodingKeys()
{
  return &type metadata for YahooChartResponse.Mapping.CodingKeys;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Metadata.DateType()
{
  return &type metadata for YahooChartResponse.Metadata.DateType;
}

_QWORD *sub_1ABDE9294(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for YahooChartResponse.Record(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for YahooChartResponse.Record(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Record()
{
  return &type metadata for YahooChartResponse.Record;
}

ValueMetadata *type metadata accessor for YahooChartResponse.MappingEntry()
{
  return &type metadata for YahooChartResponse.MappingEntry;
}

unint64_t sub_1ABDE93A4()
{
  unint64_t result;

  result = qword_1EEC430D0;
  if (!qword_1EEC430D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D91C, &type metadata for YahooChartResponse.Metadata.DateType);
    atomic_store(result, (unint64_t *)&qword_1EEC430D0);
  }
  return result;
}

unint64_t sub_1ABDE93EC()
{
  unint64_t result;

  result = qword_1EEC430D8;
  if (!qword_1EEC430D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DA0C, &type metadata for YahooChartResponse.Mapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC430D8);
  }
  return result;
}

unint64_t sub_1ABDE9434()
{
  unint64_t result;

  result = qword_1EEC430E0;
  if (!qword_1EEC430E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DAFC, &type metadata for YahooChartResponse.Series.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC430E0);
  }
  return result;
}

unint64_t sub_1ABDE947C()
{
  unint64_t result;

  result = qword_1EEC430E8;
  if (!qword_1EEC430E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DBB4, &type metadata for YahooChartResponse.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC430E8);
  }
  return result;
}

unint64_t sub_1ABDE94C4()
{
  unint64_t result;

  result = qword_1EEC430F0;
  if (!qword_1EEC430F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DC6C, &type metadata for YahooChartResponse.Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC430F0);
  }
  return result;
}

unint64_t sub_1ABDE950C()
{
  unint64_t result;

  result = qword_1ED34D578;
  if (!qword_1ED34D578)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DBDC, &type metadata for YahooChartResponse.Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D578);
  }
  return result;
}

unint64_t sub_1ABDE9554()
{
  unint64_t result;

  result = qword_1ED34D570;
  if (!qword_1ED34D570)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DC04, &type metadata for YahooChartResponse.Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D570);
  }
  return result;
}

unint64_t sub_1ABDE959C()
{
  unint64_t result;

  result = qword_1ED34D5B8;
  if (!qword_1ED34D5B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DB24, &type metadata for YahooChartResponse.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D5B8);
  }
  return result;
}

unint64_t sub_1ABDE95E4()
{
  unint64_t result;

  result = qword_1ED34D5B0;
  if (!qword_1ED34D5B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DB4C, &type metadata for YahooChartResponse.Metadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D5B0);
  }
  return result;
}

unint64_t sub_1ABDE962C()
{
  unint64_t result;

  result = qword_1ED34D558;
  if (!qword_1ED34D558)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DA34, &type metadata for YahooChartResponse.Series.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D558);
  }
  return result;
}

unint64_t sub_1ABDE9674()
{
  unint64_t result;

  result = qword_1ED34D550;
  if (!qword_1ED34D550)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DA5C, &type metadata for YahooChartResponse.Series.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D550);
  }
  return result;
}

unint64_t sub_1ABDE96BC()
{
  unint64_t result;

  result = qword_1ED34D598;
  if (!qword_1ED34D598)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D944, &type metadata for YahooChartResponse.Mapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D598);
  }
  return result;
}

unint64_t sub_1ABDE9704()
{
  unint64_t result;

  result = qword_1ED34D590;
  if (!qword_1ED34D590)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D96C, &type metadata for YahooChartResponse.Mapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D590);
  }
  return result;
}

unint64_t sub_1ABDE9748()
{
  unint64_t result;

  result = qword_1ED34D4F8;
  if (!qword_1ED34D4F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3E154, &type metadata for YahooChartResponse.MappingEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D4F8);
  }
  return result;
}

unint64_t sub_1ABDE978C()
{
  unint64_t result;

  result = qword_1ED34D520;
  if (!qword_1ED34D520)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3E12C, &type metadata for YahooChartResponse.ValueIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED34D520);
  }
  return result;
}

void sub_1ABDE97D0(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1ABF32128();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1ABDE9828()
{
  unint64_t result;

  result = qword_1ED34D528;
  if (!qword_1ED34D528)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3E0DC, &type metadata for YahooChartResponse.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D528);
  }
  return result;
}

unint64_t sub_1ABDE986C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED34FCC8;
  if (!qword_1ED34FCC8)
  {
    sub_1ABD04578(255, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED34FCC8);
  }
  return result;
}

unint64_t sub_1ABDE98DC()
{
  unint64_t result;

  result = qword_1ED34D5C0;
  if (!qword_1ED34D5C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3D8A4, &type metadata for YahooChartResponse.Metadata.DateType);
    atomic_store(result, (unint64_t *)&qword_1ED34D5C0);
  }
  return result;
}

uint64_t _s10StocksCore18YahooChartResponseV8MetadataV8DateTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABDE996C + 4 * byte_1ABF3D357[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABDE99A0 + 4 * byte_1ABF3D352[v4]))();
}

uint64_t sub_1ABDE99A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDE99A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDE99B0);
  return result;
}

uint64_t sub_1ABDE99BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDE99C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABDE99C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDE99D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.Record.CodingKeys()
{
  return &type metadata for YahooChartResponse.Record.CodingKeys;
}

uint64_t _s10StocksCore18YahooChartResponseV10DataSeriesV18FeaturesCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABDE9A2C + 4 * byte_1ABF3D35C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABDE9A4C + 4 * byte_1ABF3D361[v4]))();
}

_BYTE *sub_1ABDE9A2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABDE9A4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDE9A54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDE9A5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABDE9A64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABDE9A6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.MappingEntry.CodingKeys()
{
  return &type metadata for YahooChartResponse.MappingEntry.CodingKeys;
}

uint64_t _s10StocksCore18YahooChartResponseV15ValueIdentifierOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1ABDE9AD4 + 4 * byte_1ABF3D36B[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1ABDE9B08 + 4 * byte_1ABF3D366[v4]))();
}

uint64_t sub_1ABDE9B08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDE9B10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDE9B18);
  return result;
}

uint64_t sub_1ABDE9B24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDE9B2CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1ABDE9B30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDE9B38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for YahooChartResponse.ValueIdentifier()
{
  return &type metadata for YahooChartResponse.ValueIdentifier;
}

unint64_t sub_1ABDE9B58()
{
  unint64_t result;

  result = qword_1EEC430F8;
  if (!qword_1EEC430F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DED4, &type metadata for YahooChartResponse.ValueIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEC430F8);
  }
  return result;
}

unint64_t sub_1ABDE9BA0()
{
  unint64_t result;

  result = qword_1EEC43100;
  if (!qword_1EEC43100)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DFC4, &type metadata for YahooChartResponse.MappingEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43100);
  }
  return result;
}

unint64_t sub_1ABDE9BE8()
{
  unint64_t result;

  result = qword_1EEC43108;
  if (!qword_1EEC43108)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3E0B4, &type metadata for YahooChartResponse.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43108);
  }
  return result;
}

unint64_t sub_1ABDE9C30()
{
  unint64_t result;

  result = qword_1ED34D538;
  if (!qword_1ED34D538)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DFEC, &type metadata for YahooChartResponse.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D538);
  }
  return result;
}

unint64_t sub_1ABDE9C78()
{
  unint64_t result;

  result = qword_1ED34D530;
  if (!qword_1ED34D530)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3E014, &type metadata for YahooChartResponse.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D530);
  }
  return result;
}

unint64_t sub_1ABDE9CC0()
{
  unint64_t result;

  result = qword_1ED34D508;
  if (!qword_1ED34D508)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DEFC, &type metadata for YahooChartResponse.MappingEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D508);
  }
  return result;
}

unint64_t sub_1ABDE9D08()
{
  unint64_t result;

  result = qword_1ED34D500;
  if (!qword_1ED34D500)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DF24, &type metadata for YahooChartResponse.MappingEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34D500);
  }
  return result;
}

unint64_t sub_1ABDE9D4C()
{
  unint64_t result;

  result = qword_1ED34D518;
  if (!qword_1ED34D518)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3DE5C, &type metadata for YahooChartResponse.ValueIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED34D518);
  }
  return result;
}

uint64_t sub_1ABDE9D90(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[136];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *a1;
  v5 = *a2;
  v4 = a2[1];
  v6 = type metadata accessor for NewsFeedRequest();
  sub_1ABDEA124((uint64_t)a2 + *(int *)(v6 + 32), (uint64_t)v8);
  v9 = v3;
  v10 = v5;
  v11 = v4;
  sub_1ABDEA124((uint64_t)v8, (uint64_t)&v12);
  sub_1ABDEA320();
  swift_allocObject();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD97ECC((uint64_t)v8);
  return sub_1ABF311E0();
}

uint64_t type metadata accessor for TestNewsFeedService()
{
  return objc_opt_self();
}

uint64_t sub_1ABDE9E88(uint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  void *v4;
  uint64_t v5;

  v3 = *v1;
  sub_1ABF2FF68();
  sub_1ABDE9F0C(a1, v3);
  swift_release();
  v4 = (void *)sub_1ABF31114();
  v5 = sub_1ABF3109C();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1ABDE9F0C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25[8];
  uint64_t v26;
  _BYTE v27[136];
  _OWORD v28[8];
  uint64_t v29;
  uint64_t v30;

  v24 = type metadata accessor for NewsFeedRequest();
  v5 = *(_QWORD *)(v24 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v24);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v18[1] = v2;
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1ABF31F18();
    v10 = *(unsigned __int8 *)(v5 + 80);
    v11 = a1 + ((v10 + 32) & ~v10);
    v12 = *(_QWORD *)(v5 + 72);
    v22 = (v10 + 16) & ~v10;
    v23 = a2 + 2;
    v21 = v22 + v6;
    v19 = v12;
    v20 = v10 | 7;
    for (i = v8 - 1; ; --i)
    {
      v14 = a2[5];
      v15 = a2[6];
      __swift_project_boxed_opaque_existential_1(v23, v14);
      sub_1ABDEA124(v11 + *(int *)(v24 + 32), (uint64_t)v27);
      sub_1ABDEA124((uint64_t)v27, (uint64_t)v28);
      v25[6] = v28[6];
      v25[7] = v28[7];
      v26 = v29;
      v25[2] = v28[2];
      v25[3] = v28[3];
      v25[4] = v28[4];
      v25[5] = v28[5];
      v25[0] = v28[0];
      v25[1] = v28[1];
      sub_1ABD97ECC((uint64_t)v28);
      sub_1ABE419F4(v25, v14, v15);
      sub_1ABD97F60((uint64_t)v27);
      sub_1ABDEA160(v11, (uint64_t)v7);
      v16 = swift_allocObject();
      sub_1ABDEA294((uint64_t)v7, v16 + v22);
      v17 = (void *)sub_1ABF31114();
      sub_1ABF31174();
      swift_release();
      swift_release();

      sub_1ABF31EF4();
      sub_1ABF31F24();
      sub_1ABF31F30();
      sub_1ABF31F00();
      if (!i)
        break;
      v11 += v19;
    }
    return v30;
  }
  return result;
}

uint64_t sub_1ABDEA124(uint64_t a1, uint64_t a2)
{
  __swift_memcpy136_8(a2, a1);
  return a2;
}

uint64_t sub_1ABDEA160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsFeedRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABDEA1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = type metadata accessor for NewsFeedRequest();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 24);
  v5 = sub_1ABF30760();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(v3 + *(int *)(v1 + 28), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABDEA294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NewsFeedRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABDEA2D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NewsFeedRequest() - 8) + 80);
  return sub_1ABDE9D90(a1, (uint64_t *)(v1 + ((v3 + 16) & ~v3)));
}

void sub_1ABDEA320()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43110)
  {
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43110);
  }
}

unint64_t sub_1ABDEA374(uint64_t a1)
{
  return sub_1ABDEA90C(a1, (unint64_t *)&qword_1ED34DED8, (void (*)(uint64_t))type metadata accessor for Chart, &qword_1ED34E1B0);
}

unint64_t sub_1ABDEA390(uint64_t a1)
{
  return sub_1ABDEA90C(a1, (unint64_t *)&qword_1ED347180, (void (*)(uint64_t))type metadata accessor for Quote, &qword_1ED34E1B8);
}

unint64_t sub_1ABDEA3AC(uint64_t a1)
{
  return sub_1ABDEABE0(a1, (void (*)(_QWORD))sub_1ABDF1F78, (uint64_t)&unk_1EEC431F0, (uint64_t)type metadata accessor for CIImageRepresentationOption, (uint64_t (*)(uint64_t))sub_1ABD9A3EC);
}

unint64_t sub_1ABDEA3D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_11;
  }
  sub_1ABD032EC(0, &qword_1ED3511D8);
  v2 = (_QWORD *)sub_1ABF32014();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1ABF2FF68();
  v4 = *(_OWORD *)(a1 + 144);
  v37 = *(_OWORD *)(a1 + 128);
  v38 = v4;
  v39 = *(_OWORD *)(a1 + 160);
  v40 = *(_QWORD *)(a1 + 176);
  v5 = *(_OWORD *)(a1 + 80);
  v33 = *(_OWORD *)(a1 + 64);
  v34 = v5;
  v6 = *(_OWORD *)(a1 + 112);
  v35 = *(_OWORD *)(a1 + 96);
  v36 = v6;
  v7 = *(_OWORD *)(a1 + 48);
  v31 = *(_OWORD *)(a1 + 32);
  v32 = v7;
  v9 = *((_QWORD *)&v31 + 1);
  v8 = v31;
  sub_1ABDF1E34((uint64_t)&v31);
  result = sub_1ABD00F9C(v8, v9);
  if ((v11 & 1) != 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  v12 = 184;
  while (1)
  {
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    v14 = v2[7] + 136 * result;
    *(_OWORD *)v14 = v32;
    v15 = v33;
    v16 = v34;
    v17 = v36;
    *(_OWORD *)(v14 + 48) = v35;
    *(_OWORD *)(v14 + 64) = v17;
    *(_OWORD *)(v14 + 16) = v15;
    *(_OWORD *)(v14 + 32) = v16;
    v18 = v37;
    v19 = v38;
    v20 = v39;
    *(_QWORD *)(v14 + 128) = v40;
    *(_OWORD *)(v14 + 96) = v19;
    *(_OWORD *)(v14 + 112) = v20;
    *(_OWORD *)(v14 + 80) = v18;
    v21 = v2[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      break;
    v2[2] = v23;
    if (!--v3)
      goto LABEL_9;
    v24 = v12 + 152;
    v25 = (__int128 *)(a1 + v12);
    v26 = v25[7];
    v37 = v25[6];
    v38 = v26;
    v39 = v25[8];
    v40 = *((_QWORD *)v25 + 18);
    v27 = v25[3];
    v33 = v25[2];
    v34 = v27;
    v28 = v25[5];
    v35 = v25[4];
    v36 = v28;
    v29 = v25[1];
    v31 = *v25;
    v32 = v29;
    v9 = *((_QWORD *)&v31 + 1);
    v8 = v31;
    sub_1ABDF1E34((uint64_t)&v31);
    result = sub_1ABD00F9C(v8, v9);
    v12 = v24;
    if ((v30 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_1ABDEA5B0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1ABD18AE0(0, &qword_1EEC43210, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
  v2 = sub_1ABF32014();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  sub_1ABF2FF68();
  while (1)
  {
    sub_1ABD18C28(v6, (uint64_t)&v15, (unint64_t *)&unk_1EEC43218);
    v7 = v15;
    v8 = v16;
    result = sub_1ABD00F9C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1ABD1F610(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ABDEA714(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  sub_1ABDF22D4(0, (unint64_t *)&qword_1EEC431F8, (void (*)(uint64_t))MEMORY[0x1E0C914D0]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (unsigned __int8 *)v24 - v5;
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1ABDF2338(0, (unint64_t *)&unk_1EEC43200, (void (*)(uint64_t))MEMORY[0x1E0C914D0], (void (*)(void))sub_1ABDF23AC);
  v7 = sub_1ABF32014();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = &v6[*(int *)(v3 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  sub_1ABF2FF68();
  while (1)
  {
    sub_1ABDF1BD8(v13, (uint64_t)v6, (uint64_t)&qword_1EEC431F8, (uint64_t)MEMORY[0x1E0C914D0], (uint64_t)&type metadata for NewsDisplayConfiguration, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABDF22D4);
    v15 = *v6;
    result = sub_1ABD9A420(*v6);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_BYTE *)(v8[6] + result) = v15;
    v19 = v8[7];
    v20 = sub_1ABF2FF14();
    result = (*(uint64_t (**)(unint64_t, unsigned __int8 *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v10, v20);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ABDEA8F0(uint64_t a1)
{
  return sub_1ABDEA90C(a1, (unint64_t *)&qword_1EEC431D0, (void (*)(uint64_t))type metadata accessor for EarningsCalendarEventModel, &qword_1EEC441E0);
}

unint64_t sub_1ABDEA90C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t result;
  char v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  unint64_t *v32;

  v32 = a2;
  sub_1ABDF22D4(0, a2, a3);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v30 - v10);
  if (!*(_QWORD *)(a1 + 16))
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1ABDF1B70(0, a4, (uint64_t (*)(uint64_t))a3, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
  v12 = sub_1ABF32014();
  v13 = (_QWORD *)v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  v15 = (uint64_t)v11 + *(int *)(v8 + 48);
  v30[1] = a1;
  v31 = v15;
  v16 = v12 + 64;
  v17 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v18 = *(_QWORD *)(v9 + 72);
  sub_1ABF2FF68();
  while (1)
  {
    sub_1ABDF1BD8(v17, (uint64_t)v11, (uint64_t)v32, (uint64_t)a3, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABDF22D4);
    v19 = *v11;
    v20 = v11[1];
    result = sub_1ABD00F9C(*v11, v20);
    if ((v22 & 1) != 0)
      break;
    v23 = result;
    *(_QWORD *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v24 = (uint64_t *)(v13[6] + 16 * result);
    *v24 = v19;
    v24[1] = v20;
    v25 = v13[7];
    v26 = ((uint64_t (*)(_QWORD))a3)(0);
    result = sub_1ABCFE2AC(v31, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v23, (uint64_t (*)(_QWORD))a3);
    v27 = v13[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_11;
    v13[2] = v29;
    v17 += v18;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ABDEAACC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1ABDF2260();
  v2 = (_QWORD *)sub_1ABF32014();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  sub_1ABF2FF68();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    sub_1ABF2FF5C();
    v8 = v7;
    result = sub_1ABD00F9C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ABDEABE0(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v9 = sub_1ABF32014();
  v10 = (_QWORD *)v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  v12 = v9 + 64;
  v13 = a1 + 32;
  sub_1ABF2FF68();
  v14 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    sub_1ABDF1BD8(v13, (uint64_t)&v21, a3, a4, v14, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABDF1FFC);
    v15 = v21;
    result = a5(v21);
    if ((v17 & 1) != 0)
      break;
    *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v10[6] + 8 * result) = v15;
    result = (unint64_t)sub_1ABD1F610(&v22, (_OWORD *)(v10[7] + 32 * result));
    v18 = v10[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v10[2] = v20;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1ABDEAD30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  sub_1ABDF1FFC(0, (unint64_t *)&qword_1ED34CAE8, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v25 - v5;
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1ABDF1EF8();
  v7 = sub_1ABF32014();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = &v6[*(int *)(v3 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v25[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  sub_1ABF2FF68();
  while (1)
  {
    sub_1ABDF1BD8(v13, (uint64_t)v6, (uint64_t)&qword_1ED34CAE8, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t)&type metadata for DownloadedImage, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABDF1FFC);
    result = sub_1ABD9A5B4((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_1ABF305D4();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    v20 = v8[7] + 24 * v17;
    v21 = *((_QWORD *)v10 + 2);
    *(_OWORD *)v20 = *(_OWORD *)v10;
    *(_QWORD *)(v20 + 16) = v21;
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id NewsCoreConfiguration.__allocating_init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)(uint64_t a1, uint64_t a2, const void *a3, uint64_t *a4, uint64_t *a5, const void *a6, uint64_t a7, const void *a8, double a9, double a10, double a11, __int128 a12, uint64_t a13, char a14, char a15)
{
  objc_class *v15;
  id v25;

  v25 = objc_allocWithZone(v15);
  return NewsCoreConfiguration.init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (__int128 *)a12, *((uint64_t *)&a12 + 1), a13, a14, a15);
}

uint64_t sub_1ABDEAFD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1ABD18AE0(0, &qword_1ED34E1E0, MEMORY[0x1E0DEC198], MEMORY[0x1E0DEC1A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DECD58]);
    v2 = sub_1ABF32014();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  sub_1ABF2FF5C();
  result = sub_1ABF2FF68();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    swift_dynamicCast();
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_1ABD1F610(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_1ABD1F610(v35, v36);
    sub_1ABD1F610(v36, &v32);
    result = sub_1ABF31E28();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_1ABD1F610(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1ABD97E10();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t NewsCoreConfiguration.experimentalizableFieldPostfix.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_experimentalizableFieldPostfix);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t NewsCoreConfiguration.analyticsEndpointMaxPayloadSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_analyticsEndpointMaxPayloadSize);
}

uint64_t NewsCoreConfiguration.maxRetriesForDroppedFeeds.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_maxRetriesForDroppedFeeds);
}

double NewsCoreConfiguration.delayBeforeRetryingDroppedFeeds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_delayBeforeRetryingDroppedFeeds);
}

uint64_t NewsCoreConfiguration.enableCacheFallbackForArticleRecirculation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_enableCacheFallbackForArticleRecirculation);
}

double NewsCoreConfiguration.prerollLoadingTimeout.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollLoadingTimeout);
}

double NewsCoreConfiguration.prerollReadyToPlayTimeout.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_prerollReadyToPlayTimeout);
}

uint64_t NewsCoreConfiguration.isPrivateDataEncryptionRequired.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_isPrivateDataEncryptionRequired);
}

uint64_t sub_1ABDEB4C8()
{
  _QWORD *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[48] != 1)
  {
    if (v0[28] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v0[32] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v0[36] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v0[40] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v0[44] != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABDEB648(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v3;
  id v4;
  void *v5;
  id v6;

  v3 = sub_1ABDEB710(a1);
  sub_1ABD1F230(v3);
  swift_bridgeObjectRelease();
  v4 = objc_allocWithZone(MEMORY[0x1E0D58D48]);
  v5 = (void *)sub_1ABF31618();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithConfigDictionary_, v5);

  *a2 = v6;
}

uint64_t sub_1ABDEB6E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABDEB708(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1ABDEB648(v1 + 16, a1);
}

unint64_t sub_1ABDEB710(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v15;
  _OWORD v16[4];
  char v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  sub_1ABF30220();
  swift_allocObject();
  sub_1ABF30214();
  v2 = *(_OWORD *)(a1 + 48);
  v16[2] = *(_OWORD *)(a1 + 32);
  v16[3] = v2;
  v17 = *(_BYTE *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v3;
  sub_1ABDF2488();
  v4 = sub_1ABF30208();
  v6 = v5;
  swift_release();
  v7 = (void *)objc_opt_self();
  v8 = (void *)sub_1ABF30640();
  *(_QWORD *)&v16[0] = 0;
  v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 4, v16);

  if (!v9)
  {
    v12 = *(id *)&v16[0];
    v13 = (void *)sub_1ABF3046C();

    swift_willThrow();
    goto LABEL_5;
  }
  v10 = *(id *)&v16[0];
  sub_1ABF31DD4();
  swift_unknownObjectRelease();
  sub_1ABD18AE0(0, (unint64_t *)&qword_1ED34DE80, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA048]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v11 = sub_1ABDEA5B0(MEMORY[0x1E0DEE9D8]);
    sub_1ABD0F430(v4, v6);
    return v11;
  }
  sub_1ABD0F430(v4, v6);
  return v15;
}

uint64_t sub_1ABDEB910()
{
  return swift_deallocObject();
}

id NewsCoreConfiguration.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void NewsCoreConfiguration.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NewsCoreConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t NewsCoreConfiguration.isOrderFeedEndpointEnabled.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.useSecureConnectionForAssets.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.forYouRecordConfigID.getter()
{
  return 0x3134343334312D59;
}

uint64_t NewsCoreConfiguration.isPrivateDataEncryptionAllowed.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.isPrivateDataEncryptionMigrationDesired.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.privateDataEncryptionMigrationRequiresAllDevicesRunningTigris.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.isPrivateDataMigrationCleanupEnabled.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.privateDataShouldSecureSubscriptions.getter()
{
  return 0;
}

unint64_t sub_1ABDEBA74@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[5];
  v7 = a1[7];
  v11 = a1[4];
  v12 = a1[6];
  v13 = a1[9];
  v14 = a1[8];
  v15 = a1[11];
  v16 = a1[10];
  sub_1ABD188A0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF38EC0;
  v9 = MEMORY[0x1E0DEA968];
  sub_1ABF31E40();
  *(_QWORD *)(inited + 96) = v9;
  *(_QWORD *)(inited + 72) = v5;
  *(_QWORD *)(inited + 80) = v4;
  sub_1ABF2FF5C();
  sub_1ABF31E40();
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 144) = v3;
  *(_QWORD *)(inited + 152) = v2;
  sub_1ABF2FF5C();
  sub_1ABF31E40();
  *(_QWORD *)(inited + 240) = v9;
  *(_QWORD *)(inited + 216) = v11;
  *(_QWORD *)(inited + 224) = v6;
  sub_1ABF2FF5C();
  sub_1ABF31E40();
  *(_QWORD *)(inited + 312) = v9;
  *(_QWORD *)(inited + 288) = v12;
  *(_QWORD *)(inited + 296) = v7;
  sub_1ABF2FF5C();
  sub_1ABF31E40();
  *(_QWORD *)(inited + 384) = v9;
  *(_QWORD *)(inited + 360) = v14;
  *(_QWORD *)(inited + 368) = v13;
  sub_1ABF2FF5C();
  sub_1ABF31E40();
  *(_QWORD *)(inited + 456) = v9;
  *(_QWORD *)(inited + 432) = v16;
  *(_QWORD *)(inited + 440) = v15;
  sub_1ABF2FF5C();
  result = sub_1ABD18978(inited);
  *a2 = result;
  return result;
}

uint64_t NewsCoreConfiguration.diversifyOptionalTopStories.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.articleRapidUpdatesTimeout.getter()
{
  return 60;
}

uint64_t NewsCoreConfiguration.savedArticlesCutoffTime.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.savedArticlesOpenedCutoffTime.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.savedArticlesMaximumCountWiFi.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.savedArticlesMaximumCountCellular.getter()
{
  return 0;
}

void NewsCoreConfiguration.analyticsEnvelopeContentTypeConfigs(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;
  BOOL v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD __dst[34];
  _QWORD __src[34];

  v2 = *(_QWORD **)(v1 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_endpointConfigurations);
  v3 = sub_1ABDEBEE4(a1);
  v5 = v4;
  v6 = v2[2];
  if (v6)
  {
    v7 = v3;
    memcpy(__dst, v2 + 4, sizeof(__dst));
    if (__dst[0] != v7 || __dst[1] != v5)
    {
      v9 = (char *)(v2 + 38);
      do
      {
        if ((sub_1ABF3223C() & 1) != 0)
          break;
        if (!--v6)
          goto LABEL_15;
        memcpy(__dst, v9, sizeof(__dst));
        v10 = __dst[0] == v7 && __dst[1] == v5;
        v9 += 272;
      }
      while (!v10);
    }
    sub_1ABDB4070((uint64_t)__dst);
    swift_bridgeObjectRelease();
    memcpy(__src, __dst, sizeof(__src));
  }
  else
  {
LABEL_15:
    sub_1ABDB1120(0, 0, 0, 0, 0, 0, 0, 0, __src, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0);
    swift_bridgeObjectRelease();
  }
  memcpy(__dst, __src, sizeof(__dst));
  v11 = (void *)sub_1ABF31780();
  v12 = (void *)sub_1ABF31780();
  sub_1ABDEFE3C((uint64_t)__dst);
  v13 = (id)FCAnalyticsEnvelopeContentTypeConfigsByContentType();

  if (v13)
  {
    sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD80);
    sub_1ABCF7BCC(0, &qword_1ED3511D0);
    sub_1ABDF1218();
    sub_1ABF31624();

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1ABDEBEE4(uint64_t a1)
{
  uint64_t result;

  result = 0x49544355444F5250;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      result = 0x474E4947415453;
      break;
    case 3:
      result = 16721;
      break;
    case 4:
      result = 1414743380;
      break;
    case 5:
      result = 0x3144554F4C4349;
      break;
    case 6:
      result = 0x4C45564544;
      break;
    case 7:
      result = 0x584F42444E4153;
      break;
    case 8:
      result = 0x314F4D4544;
      break;
    case 9:
      result = 0x324F4D4544;
      break;
    default:
      result = 0x4E574F4E4B4E55;
      break;
  }
  return result;
}

uint64_t NewsCoreConfiguration.personalizationTreatment()()
{
  uint64_t v1;

  sub_1ABF31060();
  return v1;
}

id NewsCoreConfiguration.currentTreatment.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 0);
}

uint64_t NewsCoreConfiguration.shouldShowAlternateHeadlines.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.subscriptionsGlobalMeteredCount.getter()
{
  return 0;
}

double NewsCoreConfiguration.endOfArticleMinPaidHeadlineRatio.getter()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2696);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2704))
    return 0.25;
  return result;
}

uint64_t NewsCoreConfiguration.endOfArticleMaxInaccessiblePaidArticleCount.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2720))
    return 2;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2712);
}

uint64_t NewsCoreConfiguration.endOfArticleExpireArticlesAfter.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2736))
    return 2592000;
  else
    return *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2728);
}

double NewsCoreConfiguration.interstitialAdLoadDelay.getter()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2744);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2752))
    return 1.0;
  return result;
}

double NewsCoreConfiguration.adRequestThrottle.getter()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2760);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2768))
    return 1.0;
  return result;
}

uint64_t NewsCoreConfiguration.todayFeedEnabled.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.permanentChannelIDs.getter()
{
  return 0;
}

uint64_t NewsCoreConfiguration.briefingsTagID.getter()
{
  return 0;
}

id NewsCoreConfiguration.notificationsConfig.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58D10]), sel_init);
}

id NewsCoreConfiguration.embedProxyConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  char v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = MEMORY[0x1E0DEE9E0];
  v15 = MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2864);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2872);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2880);
  if (v2 >= 2)
  {
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2856);
    sub_1ABF2FF5C();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1ABDF0CDC(v7, v2, 0x736F4879786F7270, 0xE900000000000074, isUniquelyReferenced_nonNull_native);
    v6 = v1;
    v15 = v1;
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_8;
LABEL_9:
    sub_1ABDEF99C(0x74754179786F7270, 0xEF6769666E6F436FLL);
    swift_bridgeObjectRelease();
    v10 = v15;
    goto LABEL_10;
  }
  sub_1ABDEF99C(0x736F4879786F7270, 0xE900000000000074);
  swift_bridgeObjectRelease();
  if (v2 == 1 || v4 == 0)
    goto LABEL_9;
  v6 = v15;
LABEL_8:
  sub_1ABF2FF5C();
  v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_1ABDF0CDC(v3, v4, 0x74754179786F7270, 0xEF6769666E6F436FLL, v9);
  v10 = v6;
  swift_bridgeObjectRelease();
LABEL_10:
  sub_1ABDEAFD8(v10);
  swift_bridgeObjectRelease();
  v11 = objc_allocWithZone(MEMORY[0x1E0D58AE0]);
  v12 = (void *)sub_1ABF31618();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithDictionary_, v12);

  return v13;
}

uint64_t NewsCoreConfiguration.entitlementsRequestTimeoutDurationInSeconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2848);
}

uint64_t NewsCoreConfiguration.peopleAlsoReadConfiguration.getter()
{
  return 0;
}

void NewsCoreConfiguration.appConfigRefreshRate.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.trendingTopicsRefreshRate.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.notificationEnabledChannelsRefreshFrequency.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.presubscribedFeedIDs.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.breakingNewsChannelID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.topVideosChannelID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.moreVideosChannelID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.trendingTagID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.featuredStoriesTagID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.savedStoriesTagID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.myMagazinesTagID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.mySportsTagID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.sportsTopStoriesTagID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.shortcutsTagID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.editorialGemsSectionID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.editorialChannelID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.hiddenFeedIDs.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.forYouGroupsConfiguration.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.minimumDurationBetweenForYouGroupsWeekday.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.minimumDurationBetweenForYouGroupsWeekend.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.minimumDurationBetweenTrendingGroupsWeekday.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.minimumDurationBetweenTrendingGroupsWeekend.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.expiredPaidSubscriptionGroupCutoffTime.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.maximumNumberOfExpiredPaidSubscriptionGroups.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.maximumTimesHeadlineInPaidSubscriptionGroup.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.maximumPaidSubscriptionGroupSizeiPad.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.maximumPaidSubscriptionGroupSizeiPhone.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.optionalTopStoriesRefreshRate.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.minimumTrendingUnseenRatio.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.forYouVideoGroupsConfig.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.minimumDistanceBetweenImageOnTopTiles.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.expirePinnedArticlesAfter.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.todayConfig(withIdentifier:queueConfigs:backgroundColorLight:backgroundColorDark:maxSlotCount:)()
{
  sub_1ABF31FCC();
  __break(1u);
}

uint64_t NewsCoreConfiguration.universalLinksEnabled.getter()
{
  return 1;
}

uint64_t NewsCoreConfiguration.embedConfigurationAssetID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t NewsCoreConfiguration.mediaSharingBlacklistedChannelIDs.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t NewsCoreConfiguration.webEmbedContentBlockers.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 24);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t NewsCoreConfiguration.webEmbedContentBlockerOverrides.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 40);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t NewsCoreConfiguration.anfRenderingConfiguration.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_newsUIConfiguration + 56);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t NewsCoreConfiguration.endOfArticleFeedConfigurationResourceId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 1328);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t NewsCoreConfiguration.userConcernConfigurationResourceId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2944);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t NewsCoreConfiguration.aiAttributionArticleString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2960);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t NewsCoreConfiguration.paidBundleConfig.getter()
{
  uint64_t v1;

  sub_1ABF31060();
  return v1;
}

uint64_t NewsCoreConfiguration.paidBundleViaOfferConfig.getter()
{
  uint64_t v1;

  sub_1ABF31060();
  return v1;
}

id NewsCoreConfiguration.newAdsEnabled.getter()
{
  uint64_t v0;
  uint64_t v1;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2784) & 1) != 0)
    v1 = 2;
  else
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2776);
  return objc_msgSend((id)objc_opt_self(), sel_enabledForCurrentLevel_, v1);
}

id NewsCoreConfiguration.newsPersonalizationConfiguration.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58CE0]), sel_init);
}

uint64_t NewsCoreConfiguration.subscriptionsPlacardGlobalMaximumPerDay.getter()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2800);
  if (result < 0)
    __break(1u);
  return result;
}

uint64_t NewsCoreConfiguration.subscriptionsPlacardPublisherFrequencyInSeconds.getter()
{
  uint64_t v0;
  double v1;
  uint64_t result;

  v1 = *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2792);
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18)
    return (uint64_t)v1;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t NewsCoreConfiguration.subscriptionsGracePeriodForTokenVerificationSeconds.getter()
{
  uint64_t v0;
  double v1;
  uint64_t result;

  v1 = *(double *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2808);
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 9.22337204e18)
    return (uint64_t)v1;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t NewsCoreConfiguration.hideAllPaywalls.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2816);
}

uint64_t NewsCoreConfiguration.hideAlacartePaywalls.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2817);
}

void NewsCoreConfiguration.iAdConfig.getter()
{
  uint64_t v0;
  char v1[8];
  __int128 v2;

  sub_1ABCF7BCC(0, &qword_1ED3471D0);
  v1[0] = *(_BYTE *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 1552);
  v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 1560);
  sub_1ABD82258(v1);
}

uint64_t NewsCoreConfiguration.likeDislikeBehavior.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 2824);
}

uint64_t NewsCoreConfiguration.autoRefreshMinimumInterval.getter()
{
  return 120;
}

uint64_t NewsCoreConfiguration.deprecatedSportsTopicTagIds.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

id NewsCoreConfiguration.puzzlesConfig.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58E68]), sel_init);
}

unint64_t NewsCoreConfiguration.articleConfig.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC10StocksCore21NewsCoreConfiguration_appConfiguration + 3112))
    return sub_1ABD18978(MEMORY[0x1E0DEE9D8]);
  sub_1ABDF1B70(0, (unint64_t *)&qword_1ED34FB68, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  sub_1ABDF1270();
  v1 = sub_1ABF316B4();
  if (!v1)
    return sub_1ABD18978(MEMORY[0x1E0DEE9D8]);
  v2 = sub_1ABD1F230(v1);
  swift_bridgeObjectRelease();
  return v2;
}

void NewsCoreConfiguration.minimumFollowCountToRemovePersonalizePlacardInFollowingAndForYou.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.onboardingFeedIDs.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.recommendedCategories.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.autoScrollToTopFeedTimeout.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.tileProminenceScoreBalanceValue.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.prefetchConfig.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.topLevelCuratedTagIDs.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.topLevelRecommendedTopicTagIDs.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.topLevelRecommendedChannelTagIDs.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.newFavoriteNotificationAlertsFrequency.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.notificationArticleCacheTimeout.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.notificationArticleWithRapidUpdatesCacheTimeout.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.parsecPopulationFloor.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.parsecPopulationCeiling.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.widgetConfigID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.widgetMinimumArticleExposureDurationToBePreseenInMilliseconds.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.widgetMinimumNumberOfTimesPreseenToBeSeen.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.articleDiversificationSimilarityExpectationStart.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.articleDiversificationSimilarityExpectationEnd.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.articleDiversificationUniquePublisherExpectationSlope.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.articleDiversificationUniquePublisherExpectationYIntercept.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.personalizationBundleIdMappingResourceId.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.personalizationUrlMappingResourceId.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.personalizationWhitelistResourceId.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.personalizationFavorabilityResourceId.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.corryBarMaxArticleCountForArticleList.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.corryBarMaxArticleCountForSingleArticle.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.corryBarHideDiscoverMoreInterstitialForNonOnboardedUsers.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.exploreArticleID.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.externalAnalyticsConfigurations.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.usAndUKUseAUWhatsNewFeatures.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.stateRestorationAllowedTimeWindow.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.stateRestorationOniPhoneEnabled.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.terminateAppOnBackgroundAfterJoiningOrLeavingExperiment.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.topStoriesPublishDates.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.articleRecirculationConfigJSON.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.trendingStyle.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.shareDiscoverMoreVideosInfo.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.articleRecirculationComponentPlacementConfigJSON.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.articleRecirculationPopularFeedQueryTimeRange.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

void NewsCoreConfiguration.disableThumbnailsForArticleRecirculation.getter()
{
  sub_1ABF31FCC();
  __break(1u);
}

id sub_1ABDEF4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  id v80;
  void *v81;

  if (a2)
  {
    v78 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    if (a4)
      goto LABEL_3;
  }
  else
  {
    v78 = 0;
    if (a4)
    {
LABEL_3:
      v77 = (void *)sub_1ABF31780();
      swift_bridgeObjectRelease();
      if (a6)
        goto LABEL_4;
      goto LABEL_24;
    }
  }
  v77 = 0;
  if (a6)
  {
LABEL_4:
    v76 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v43 = a10;
    if (a8)
      goto LABEL_5;
    goto LABEL_25;
  }
LABEL_24:
  v76 = 0;
  v43 = a10;
  if (a8)
  {
LABEL_5:
    v75 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v44 = a12;
    if (v43)
      goto LABEL_6;
    goto LABEL_26;
  }
LABEL_25:
  v75 = 0;
  v44 = a12;
  if (v43)
  {
LABEL_6:
    v74 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v45 = a14;
    if (v44)
      goto LABEL_7;
    goto LABEL_27;
  }
LABEL_26:
  v74 = 0;
  v45 = a14;
  if (v44)
  {
LABEL_7:
    v73 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v46 = a16;
    if (v45)
      goto LABEL_8;
    goto LABEL_28;
  }
LABEL_27:
  v73 = 0;
  v46 = a16;
  if (v45)
  {
LABEL_8:
    v72 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v47 = a18;
    if (v46)
      goto LABEL_9;
    goto LABEL_29;
  }
LABEL_28:
  v72 = 0;
  v47 = a18;
  if (v46)
  {
LABEL_9:
    v71 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v48 = a20;
    if (v47)
      goto LABEL_10;
    goto LABEL_30;
  }
LABEL_29:
  v71 = 0;
  v48 = a20;
  if (v47)
  {
LABEL_10:
    v70 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v49 = a22;
    if (v48)
      goto LABEL_11;
    goto LABEL_31;
  }
LABEL_30:
  v70 = 0;
  v49 = a22;
  if (v48)
  {
LABEL_11:
    v81 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v50 = a24;
    if (v49)
      goto LABEL_12;
    goto LABEL_32;
  }
LABEL_31:
  v81 = 0;
  v50 = a24;
  if (v49)
  {
LABEL_12:
    v51 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v52 = a26;
    if (v50)
      goto LABEL_13;
    goto LABEL_33;
  }
LABEL_32:
  v51 = 0;
  v52 = a26;
  if (v50)
  {
LABEL_13:
    v53 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v54 = a28;
    if (v52)
      goto LABEL_14;
    goto LABEL_34;
  }
LABEL_33:
  v53 = 0;
  v54 = a28;
  if (v52)
  {
LABEL_14:
    v55 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v56 = a30;
    if (v54)
      goto LABEL_15;
    goto LABEL_35;
  }
LABEL_34:
  v55 = 0;
  v56 = a30;
  if (v54)
  {
LABEL_15:
    v69 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v57 = a32;
    if (v56)
      goto LABEL_16;
    goto LABEL_36;
  }
LABEL_35:
  v69 = 0;
  v57 = a32;
  if (v56)
  {
LABEL_16:
    v58 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v59 = a34;
    if (v57)
      goto LABEL_17;
    goto LABEL_37;
  }
LABEL_36:
  v58 = 0;
  v59 = a34;
  if (v57)
  {
LABEL_17:
    v60 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v61 = a36;
    if (v59)
      goto LABEL_18;
    goto LABEL_38;
  }
LABEL_37:
  v60 = 0;
  v61 = a36;
  if (v59)
  {
LABEL_18:
    v62 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v63 = a38;
    if (v61)
      goto LABEL_19;
    goto LABEL_39;
  }
LABEL_38:
  v62 = 0;
  v63 = a38;
  if (v61)
  {
LABEL_19:
    v64 = (void *)sub_1ABF31780();
    swift_bridgeObjectRelease();
    v65 = a40;
    if (v63)
      goto LABEL_20;
LABEL_40:
    v66 = 0;
    if (v65)
      goto LABEL_21;
LABEL_41:
    v67 = 0;
    goto LABEL_42;
  }
LABEL_39:
  v64 = 0;
  v65 = a40;
  if (!v63)
    goto LABEL_40;
LABEL_20:
  v66 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
  if (!v65)
    goto LABEL_41;
LABEL_21:
  v67 = (void *)sub_1ABF31780();
  swift_bridgeObjectRelease();
LABEL_42:
  v80 = objc_msgSend(v79, sel_initWithClientAPIBaseURLString_notificationsBaseURLString_staticAssetBaseURLString_remoteDataSourceBaseURLString_newsletterAPIBaseURLString_appAnalyticsBaseURLString_fairPlayBaseURLString_searchAPIBaseURLString_puzzlesArchiveAPIBaseURLString_appAnalyticsNotificationReceiptBaseURLString_authTokenAPIBaseURLString_sportsDataVisualizationAPIBaseURLString_fineGrainedNewsletterSubscriptionBaseURLString_appAnalyticsSportsEventsBaseURLString_appAnalyticsAppHealthBaseURLString_ckOrderFeedBaseURLString_ckMultiFetchBaseURLString_ckRecordFetchBaseURLString_ckEdgeCachedOrderFeedBaseURLString_ckEdgeCachedMultiFetchBaseURLString_, v78, v77, v76, v75, v74, v73, v72, v71, v70, v81, v51, v53, v55, v69, v58, v60, v62,
          v64,
          v66,
          v67);

  return v80;
}

uint64_t sub_1ABDEF99C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  sub_1ABF2FF5C();
  v6 = sub_1ABD00F9C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ABE6E690();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_1ABDF02CC(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1ABDEFA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ABDEFAA8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail, (void (*)(void))sub_1ABE6E854, a3);
}

uint64_t sub_1ABDEFA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ABDEFAA8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Quote, (void (*)(void))sub_1ABE6E868, a3);
}

uint64_t sub_1ABDEFAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v8 = v5;
  sub_1ABF2FF5C();
  v12 = sub_1ABD00F9C(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v8;
    v21 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v15 = v21;
    }
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 56);
    v17 = a3(0);
    v18 = *(_QWORD *)(v17 - 8);
    sub_1ABCFE2AC(v16 + *(_QWORD *)(v18 + 72) * v12, a5, a3);
    sub_1ABDF0850(v12, v15, a3);
    *v8 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a5, 0, 1, v17);
  }
  else
  {
    v20 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
  }
}

double sub_1ABDEFBE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  double result;
  uint64_t v17;

  v4 = v3;
  sub_1ABF2FF5C();
  v8 = sub_1ABD00F9C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1ABE6EAA8();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56) + 48 * v8;
    v13 = *(_QWORD *)(v12 + 24);
    v14 = *(_QWORD *)(v12 + 32);
    v15 = *(_WORD *)(v12 + 40);
    *(_QWORD *)a3 = *(_QWORD *)v12;
    *(_OWORD *)(a3 + 8) = *(_OWORD *)(v12 + 8);
    *(_QWORD *)(a3 + 24) = v13;
    *(_QWORD *)(a3 + 32) = v14;
    *(_WORD *)(a3 + 40) = v15;
    sub_1ABDF04A0(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)(a3 + 26) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1ABDEFCF0(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    sub_1ABF2FF5C();
    a1 = sub_1ABD9A3F0(a1);
    v13 = v12;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1ABE6ECC0();
        v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  sub_1ABF2FF5C();
  v6 = (id)a1;
  v7 = sub_1ABF31FA8();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  v8 = sub_1ABF31F9C();
  v9 = sub_1ABDF0080(v5, v8);
  sub_1ABF2FF68();
  a1 = sub_1ABD9A3F0((uint64_t)v6);
  v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v15 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * a1);
  sub_1ABDF0694(a1, v9);
  *v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1ABDEFE3C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABDEFF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ABDEFAA8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel, (void (*)(void))sub_1ABE6F6B8, a3);
}

uint64_t sub_1ABDEFF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1ABDEFAA8(a1, a2, type metadata accessor for Chart, (void (*)(void))sub_1ABE6F6E8, a3);
}

double sub_1ABDEFF84@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  sub_1ABF2FF5C();
  v6 = sub_1ABD9A618(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1ABE7075C();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1ABF31F84();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_1ABD1F610((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1ABDF0A58(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1ABDF0080(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_1ABDF23F0();
    v2 = sub_1ABF32008();
    v18 = v2;
    sub_1ABF31F90();
    v3 = sub_1ABF31FB4();
    if (v3)
    {
      v4 = v3;
      sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD80);
      do
      {
        swift_dynamicCast();
        sub_1ABCF7BCC(0, &qword_1ED34E0F0);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1ABE6B24C(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1ABF31D14();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1ABF31FB4();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

unint64_t sub_1ABDF02CC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1ABF31E10();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1ABF32308();
        sub_1ABF2FF5C();
        sub_1ABF31840();
        v9 = sub_1ABF32338();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1ABDF04A0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  __int128 *v17;
  __int128 *v18;
  BOOL v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1ABF31E10();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1ABF32308();
        sub_1ABF2FF5C();
        sub_1ABF31840();
        v11 = sub_1ABF32338();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (__int128 *)(v16 + 48 * v3);
          v18 = (__int128 *)(v16 + 48 * v6);
          if (48 * v3 < (uint64_t)(48 * v6) || v17 >= v18 + 3 || (v19 = v3 == v6, v3 = v6, !v19))
          {
            v9 = *v18;
            v10 = v18[2];
            v17[1] = v18[1];
            v17[2] = v10;
            *v17 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1ABDF0694(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1ABF31E10();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1ABF31D14();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1ABDF0844(unint64_t a1, uint64_t a2)
{
  return sub_1ABDF0850(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel);
}

unint64_t sub_1ABDF0850(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_1ABF31E10();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_1ABF32308();
        sub_1ABF2FF5C();
        sub_1ABF31840();
        v11 = sub_1ABF32338();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1ABDF0A58(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_1ABF31F84();
  v35 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1ABF31E10();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v34 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v33(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = sub_1ABF316C0();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v12 = v15;
              v13 = v17;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_OWORD *)(v22 + 32 * a1);
            v24 = (_OWORD *)(v22 + 32 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 2))
            {
              v25 = v24[1];
              *v23 = *v24;
              v23[1] = v25;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v26 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_1ABDF0CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1ABD00F9C(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        result = swift_bridgeObjectRelease();
        *v21 = a1;
        v21[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1ABE6E690();
      goto LABEL_7;
    }
    sub_1ABD0EBF8(v17, a5 & 1);
    v23 = sub_1ABD00F9C(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1ABF204A4(v14, a3, a4, a1, a2, v20);
      return sub_1ABF2FF5C();
    }
  }
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDF0E1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ABDF0E40(a1, a2, a3, a4, (void (*)(void))sub_1ABE6E854, (void (*)(void))sub_1ABE6B238, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABF204F4);
}

uint64_t sub_1ABDF0E40(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), uint64_t (*a7)(_QWORD), void (*a8)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v8;
  uint64_t *v11;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  char v29;

  v11 = v8;
  v16 = *v8;
  v18 = sub_1ABD00F9C(a2, a3);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
  }
  else
  {
    v22 = v17;
    v23 = *(_QWORD *)(v16 + 24);
    if (v23 >= v21 && (a4 & 1) != 0)
    {
LABEL_7:
      v24 = *v11;
      if ((v22 & 1) != 0)
      {
LABEL_8:
        v25 = *(_QWORD *)(v24 + 56);
        v26 = a7(0);
        return sub_1ABDF221C(a1, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v18, a7);
      }
      goto LABEL_11;
    }
    if (v23 >= v21 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v28 = sub_1ABD00F9C(a2, a3);
    if ((v22 & 1) == (v29 & 1))
    {
      v18 = v28;
      v24 = *v11;
      if ((v22 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a8(v18, a2, a3, a1, v24);
      return sub_1ABF2FF5C();
    }
  }
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDF0FA8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1ABD00F9C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1ABDF1AF8((uint64_t)a1, v18[7] + 48 * v12);
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1ABE6EAA8();
      goto LABEL_7;
    }
    sub_1ABD09FAC(v15, a4 & 1);
    v20 = sub_1ABD00F9C(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1ABDF1AF8((uint64_t)a1, v18[7] + 48 * v12);
LABEL_11:
      sub_1ABF20500(v12, a2, a3, a1, v18);
      return sub_1ABF2FF5C();
    }
  }
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDF10D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ABDF16B8(a1, a2, a3, a4, (void (*)(void))sub_1ABE6ECA4, (void (*)(void))sub_1ABD23C30, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABF2055C);
}

void sub_1ABDF10EC(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1ABD9A3F0((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];

        *(_QWORD *)(v16 + 8 * v9) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1ABE6ECC0();
      goto LABEL_7;
    }
    sub_1ABE6B24C(v12, a3 & 1);
    v17 = sub_1ABD9A3F0((uint64_t)a2);
    if ((v13 & 1) == (v18 & 1))
    {
      v9 = v17;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1ABF20560(v9, (uint64_t)a2, a1, v15);
      v19 = a2;
      return;
    }
  }
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD80);
  sub_1ABF3229C();
  __break(1u);
}

unint64_t sub_1ABDF1218()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34E150;
  if (!qword_1ED34E150)
  {
    v1 = sub_1ABCF7BCC(255, (unint64_t *)&qword_1ED34FD80);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34E150);
  }
  return result;
}

unint64_t sub_1ABDF1270()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  result = qword_1ED34FB70;
  if (!qword_1ED34FB70)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
    sub_1ABDF1B70(255, (unint64_t *)&qword_1ED34FB68, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v3 = v2;
    v4 = sub_1ABCFE1EC(&qword_1ED34FA98, v1, MEMORY[0x1E0DB48C0]);
    v5[0] = MEMORY[0x1E0DEA970];
    v5[1] = v4;
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEA0B8], v3, v5);
    atomic_store(result, (unint64_t *)&qword_1ED34FB70);
  }
  return result;
}

uint64_t method lookup function for NewsCoreConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NewsCoreConfiguration.__allocating_init(experimentalizableFieldPostfix:appConfiguration:topStoriesConfiguration:newsUIConfiguration:newsPersonalizationTreatment:endpointConfigurations:paidBundleConfiguration:paidBundleViaOfferConfiguration:analyticsEndpointMaxPayloadSize:maxRetriesForDroppedFeeds:delayBeforeRetryingDroppedFeeds:enableCacheFallbackForArticleRecirculation:prerollLoadingTimeout:prerollReadyToPlayTimeout:isPrivateDataEncryptionRequired:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

void sub_1ABDF133C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC431B8)
  {
    type metadata accessor for FileAttributeKey(255);
    sub_1ABCFE1EC(&qword_1ED34E080, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1ABF36DB8);
    v0 = sub_1ABF32020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC431B8);
  }
}

uint64_t sub_1ABDF13C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ABDF0E40(a1, a2, a3, a4, (void (*)(void))sub_1ABE6F6B8, (void (*)(void))sub_1ABE6B88C, (uint64_t (*)(_QWORD))type metadata accessor for EarningsCalendarEventModel, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABF205A8);
}

uint64_t sub_1ABDF13E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ABDF0E40(a1, a2, a3, a4, (void (*)(void))sub_1ABE6F6E8, (void (*)(void))sub_1ABD24348, type metadata accessor for Chart, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABF205B8);
}

uint64_t sub_1ABDF1408(uint64_t a1, unint64_t *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1ABD9A4D0(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1ABE6F6FC();
      goto LABEL_7;
    }
    sub_1ABE6B8BC(v13, a3 & 1);
    v19 = sub_1ABD9A4D0(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1ABF205B4(v10, (uint64_t)a2, a1, v16);
      return sub_1ABD97ECC((uint64_t)a2);
    }
  }
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDF1524(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1ABD00F9C(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7] + 24 * v16;
        result = swift_bridgeObjectRelease();
        *(_QWORD *)v23 = a1;
        *(_QWORD *)(v23 + 8) = a2;
        *(_BYTE *)(v23 + 16) = a3 & 1;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_1ABE6FAF0();
      goto LABEL_7;
    }
    sub_1ABE6C03C(v19, a6 & 1);
    v25 = sub_1ABD00F9C(a4, a5);
    if ((v20 & 1) == (v26 & 1))
    {
      v16 = v25;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1ABF20634(v16, a4, a5, a1, a2, a3 & 1, v22);
      return sub_1ABF2FF5C();
    }
  }
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDF1678(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ABDF0E40(a1, a2, a3, a4, (void (*)(void))sub_1ABE702C4, (void (*)(void))sub_1ABE6CFD8, type metadata accessor for YahooMultiQuoteItem, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABF20688);
}

uint64_t sub_1ABDF169C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1ABDF16B8(a1, a2, a3, a4, (void (*)(void))sub_1ABE702D8, (void (*)(void))sub_1ABE6CFEC, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1ABF2055C);
}

uint64_t sub_1ABDF16B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v10 = v7;
  v15 = *v7;
  v17 = sub_1ABD00F9C(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v24 + 8 * v17) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v26 = sub_1ABD00F9C(a2, a3);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      return sub_1ABF2FF5C();
    }
  }
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDF180C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1ABF305D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1ABD9A5B4(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      v22 = type metadata accessor for SDSAuthToken();
      return sub_1ABDF221C(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for SDSAuthToken);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1ABE70498();
    goto LABEL_7;
  }
  sub_1ABE6D30C(v17, a3 & 1);
  v24 = sub_1ABD9A5B4(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_1ABF3229C();
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1ABF206DC(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_1ABDF197C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1ABF31F84();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1ABD9A618(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (_OWORD *)(v20[7] + 32 * v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        return sub_1ABD1F610(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1ABE7075C();
      goto LABEL_7;
    }
    sub_1ABE6D6FC(v17, a3 & 1);
    v23 = sub_1ABD9A618(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1ABF20794(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = (_OWORD *)sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDF1AF8(uint64_t a1, uint64_t a2)
{
  assignWithTake for Watchlist(a2, a1);
  return a2;
}

uint64_t sub_1ABDF1B34(uint64_t a1, uint64_t a2)
{
  assignWithTake for StockRecord(a2, a1);
  return a2;
}

void sub_1ABDF1B70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, _QWORD, uint64_t, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, MEMORY[0x1E0DEA968], v7, MEMORY[0x1E0DEA978]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1ABDF1BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1ABDF1C28(uint64_t a1, uint64_t a2)
{
  assignWithTake for Stock(a2, a1);
  return a2;
}

unint64_t sub_1ABDF1C64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  sub_1ABDF22D4(0, (unint64_t *)&qword_1ED34C420, (void (*)(uint64_t))type metadata accessor for CurrencyResponse);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - v4;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_1ABDF2338(0, &qword_1ED34C538, (void (*)(uint64_t))type metadata accessor for CurrencyResponse, (void (*)(void))sub_1ABDF1DF0);
    v7 = sub_1ABF32014();
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1ABDF1BD8(v8, (uint64_t)v5, (uint64_t)&qword_1ED34C420, (uint64_t)type metadata accessor for CurrencyResponse, (uint64_t)&type metadata for CurrencyManagerCacheKey, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1ABDF22D4);
      result = sub_1ABD9B524();
      if ((v11 & 1) != 0)
        break;
      v12 = result;
      *(_QWORD *)(v7 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v13 = *(_QWORD *)(v7 + 56);
      v14 = type metadata accessor for CurrencyResponse();
      result = sub_1ABCFE2AC((uint64_t)v5, v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
      v15 = *(_QWORD *)(v7 + 16);
      v16 = __OFADD__(v15, 1);
      v17 = v15 + 1;
      if (v16)
        goto LABEL_10;
      *(_QWORD *)(v7 + 16) = v17;
      v8 += v9;
      if (!--v6)
        return v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1ABDF1DF0()
{
  unint64_t result;

  result = qword_1ED34C410;
  if (!qword_1ED34C410)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4FFF0, &type metadata for CurrencyManagerCacheKey);
    atomic_store(result, (unint64_t *)&qword_1ED34C410);
  }
  return result;
}

uint64_t sub_1ABDF1E34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  sub_1ABF2FF5C();
  sub_1ABD0DF08(v2, v3);
  return a1;
}

void sub_1ABDF1EF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34CC90)
  {
    sub_1ABF305D4();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED350508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
    v0 = sub_1ABF32020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34CC90);
  }
}

void sub_1ABDF1F78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC431E0)
  {
    type metadata accessor for CIImageRepresentationOption(255);
    sub_1ABCFE1EC((unint64_t *)&unk_1ED34C2F0, (uint64_t (*)(uint64_t))type metadata accessor for CIImageRepresentationOption, (uint64_t)&unk_1ABF36D74);
    v0 = sub_1ABF32020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC431E0);
  }
}

void sub_1ABDF1FFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1ABDF2060(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = *(_QWORD *)(a1 + 216);
  v17 = *(_QWORD *)(a1 + 208);
  v14 = *(_QWORD *)(a1 + 232);
  v15 = *(_QWORD *)(a1 + 224);
  v12 = *(_QWORD *)(a1 + 248);
  v13 = *(_QWORD *)(a1 + 240);
  v10 = *(_QWORD *)(a1 + 264);
  v11 = *(_QWORD *)(a1 + 256);
  v9 = *(_OWORD *)(a1 + 272);
  v7 = *(_OWORD *)(a1 + 304);
  v8 = *(_OWORD *)(a1 + 288);
  v6 = *(_OWORD *)(a1 + 320);
  v4 = *(_OWORD *)(a1 + 352);
  v5 = *(_OWORD *)(a1 + 336);
  v2 = *(_QWORD *)(a1 + 368);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABD1A400(v17, v16, v15, v14, v13, v12, v11, v10, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABDF221C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_1ABDF2260()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED347310)
  {
    sub_1ABCF7BCC(255, &qword_1ED3472F0);
    v0 = sub_1ABF32020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED347310);
  }
}

void sub_1ABDF22D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1ABDF2338(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1ABF32020();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1ABDF23AC()
{
  unint64_t result;

  result = qword_1ED34CBF8;
  if (!qword_1ED34CBF8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40074, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CBF8);
  }
  return result;
}

void sub_1ABDF23F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34E1D8)
  {
    sub_1ABCF7BCC(255, (unint64_t *)&qword_1ED34FD80);
    sub_1ABCF7BCC(255, &qword_1ED34E0F0);
    sub_1ABDF1218();
    v0 = sub_1ABF32020();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34E1D8);
  }
}

unint64_t sub_1ABDF2488()
{
  unint64_t result;

  result = qword_1ED34F7D8;
  if (!qword_1ED34F7D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF42ED8, &type metadata for PaidBundleViaOfferConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34F7D8);
  }
  return result;
}

uint64_t sub_1ABDF24CC(uint64_t a1, void (*a2)(uint64_t *, uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a1;
  v7 = a4 + 64;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = sub_1ABF2FF5C();
  v13 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * i);
    sub_1ABF2FF5C();
    a2(&v20, &v19);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11)
      goto LABEL_26;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    if (!v17)
      break;
LABEL_17:
    v10 = (v17 - 1) & v17;
  }
  v18 = v13 + 1;
  if (v13 + 1 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 2;
  if (v13 + 2 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 3;
  if (v13 + 3 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_26:
    swift_release();
    return v20;
  }
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v11)
      goto LABEL_26;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1ABDF2688(uint64_t a1, void (*a2)(uint64_t *, _OWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _OWORD v27[9];
  _OWORD v28[8];
  uint64_t v29;
  _OWORD __dst[8];
  __int128 v31;
  uint64_t v32[3];
  int64_t v33;

  v32[0] = a1;
  v7 = a4 + 64;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a4 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  result = sub_1ABF2FF5C();
  v12 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(_QWORD *)(a4 + 56);
    v19 = (_OWORD *)(*(_QWORD *)(a4 + 48) + 136 * i);
    v28[0] = *v19;
    v20 = v19[4];
    v22 = v19[1];
    v21 = v19[2];
    v28[3] = v19[3];
    v28[4] = v20;
    v28[1] = v22;
    v28[2] = v21;
    v24 = v19[6];
    v23 = v19[7];
    v25 = v19[5];
    v29 = *((_QWORD *)v19 + 16);
    v28[6] = v24;
    v28[7] = v23;
    v28[5] = v25;
    v26 = *(_QWORD *)(v18 + 8 * i);
    memmove(__dst, v19, 0x88uLL);
    *((_QWORD *)&v31 + 1) = v26;
    v27[6] = __dst[6];
    v27[7] = __dst[7];
    v27[8] = v31;
    v27[2] = __dst[2];
    v27[3] = __dst[3];
    v27[4] = __dst[4];
    v27[5] = __dst[5];
    v27[0] = __dst[0];
    v27[1] = __dst[1];
    sub_1ABD97ECC((uint64_t)v28);
    sub_1ABF2FF5C();
    a2(v32, v27);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_1ABDFD5E4((uint64_t)__dst);
      return swift_release();
    }
    result = sub_1ABDFD5E4((uint64_t)__dst);
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v33)
      goto LABEL_26;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v10 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v33)
    goto LABEL_26;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v33)
    goto LABEL_26;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v33)
    goto LABEL_26;
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 4;
  if (v12 + 4 >= v33)
  {
LABEL_26:
    swift_release();
    return v32[0];
  }
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v33)
      goto LABEL_26;
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1ABDF28D8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *);
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t (*v14)(_BYTE *);
  _QWORD v15[18];
  _BYTE v16[152];
  uint64_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = (uint64_t (*)(_BYTE *))result;
    v7 = 0;
    v8 = MEMORY[0x1E0DEE9D8];
    v9 = a3 + 32;
    v14 = (uint64_t (*)(_BYTE *))result;
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      sub_1ABD6414C(v9, (uint64_t)v15);
      sub_1ABD6414C((uint64_t)v15, (uint64_t)v16);
      sub_1ABD64188(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      v10 = v6(v16);
      if (v3)
      {
        sub_1ABD64188(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        swift_release();
        goto LABEL_15;
      }
      if ((v10 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v17 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1ABD1515C(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v17;
        }
        v13 = *(_QWORD *)(v8 + 16);
        v12 = *(_QWORD *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1ABD1515C(v12 > 1, v13 + 1, 1);
          v8 = v17;
        }
        *(_QWORD *)(v8 + 16) = v13 + 1;
        result = sub_1ABD6414C((uint64_t)v15, v8 + 144 * v13 + 32);
        v6 = v14;
      }
      else
      {
        result = (uint64_t)sub_1ABD64188(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      }
      ++v7;
      v9 += 144;
      if (v5 == v7)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1ABDF2A74(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(__int128 *);
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(__int128 *);
  __int128 v15[4];
  __int128 v16[4];
  unint64_t v17;

  v5 = MEMORY[0x1E0DEE9D8];
  v17 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = (uint64_t (*)(__int128 *))result;
    v5 = 0;
    v8 = a3 + 32;
    v9 = MEMORY[0x1E0DEE9D8];
    v13 = *(_QWORD *)(a3 + 16);
    v14 = (uint64_t (*)(__int128 *))result;
    while (v5 < *(_QWORD *)(a3 + 16))
    {
      sub_1ABDFAE2C(v8, (uint64_t)v16);
      v10 = v7(v16);
      if (v3)
      {
        sub_1ABDFAE60((uint64_t)v16);
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      if ((v10 & 1) != 0)
      {
        sub_1ABDFAE0C(v16, v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1ABDB5118(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v17;
        v12 = *(_QWORD *)(v17 + 16);
        v11 = *(_QWORD *)(v17 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1ABDB5118(v11 > 1, v12 + 1, 1);
          v9 = v17;
        }
        *(_QWORD *)(v9 + 16) = v12 + 1;
        result = (uint64_t)sub_1ABDFAE0C(v15, (_OWORD *)(v9 + (v12 << 6) + 32));
        v6 = v13;
        v7 = v14;
      }
      else
      {
        result = sub_1ABDFAE60((uint64_t)v16);
      }
      ++v5;
      v8 += 64;
      if (v6 == v5)
      {
        v5 = v17;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

_QWORD *sub_1ABDF2BF4(void (*a1)(_QWORD *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v21;
  unint64_t v22;
  _OWORD v24[10];
  _BYTE v25[160];
  uint64_t v26[20];
  _QWORD v27[21];
  id v28;

  v4 = a3;
  if (a3 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1ABF2FF5C();
  for (; v5; v5 = sub_1ABF31FE4())
  {
    v22 = v4 & 0xC000000000000001;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v7 = 4;
    v21 = v4;
    while (1)
    {
      v8 = v22 ? (id)MEMORY[0x1AF4380CC](v7 - 4, v4) : *(id *)(v4 + 8 * v7);
      v9 = v8;
      if (__OFADD__(v7 - 4, 1))
        break;
      v28 = v8;
      a1(v27, &v28);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v6;
      }

      sub_1ABD843F0((uint64_t)v27, (uint64_t)v25, &qword_1ED34C938, (uint64_t)&type metadata for StockNewsFeed);
      sub_1ABD843F0((uint64_t)v25, (uint64_t)v26, &qword_1ED34C938, (uint64_t)&type metadata for StockNewsFeed);
      if (sub_1ABDFDCD4(v26) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1ABD82AB8(0, v6[2] + 1, 1, v6);
        v11 = v6[2];
        v10 = v6[3];
        if (v11 >= v10 >> 1)
          v6 = sub_1ABD82AB8((_QWORD *)(v10 > 1), v11 + 1, 1, v6);
        sub_1ABD843F0((uint64_t)v25, (uint64_t)v24, &qword_1ED34C938, (uint64_t)&type metadata for StockNewsFeed);
        v6[2] = v11 + 1;
        v12 = &v6[20 * v11];
        v13 = v24[1];
        v12[2] = v24[0];
        v12[3] = v13;
        v14 = v24[5];
        v15 = v24[3];
        v16 = v24[2];
        v12[6] = v24[4];
        v12[7] = v14;
        v12[4] = v16;
        v12[5] = v15;
        v17 = v24[9];
        v18 = v24[7];
        v19 = v24[6];
        v12[10] = v24[8];
        v12[11] = v17;
        v12[8] = v19;
        v12[9] = v18;
        v4 = v21;
      }
      if (v7 - 3 == v5)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
      ++v7;
    }
    __break(1u);
LABEL_20:
    sub_1ABF2FF5C();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

uint64_t NewsFeedService.__allocating_init(contentContext:headlineScorerFactory:appConfigurationManager:)(uint64_t a1, __int128 *a2, __int128 *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  sub_1ABD065C8(a2, v6 + 24);
  sub_1ABD065C8(a3, v6 + 64);
  return v6;
}

uint64_t NewsFeedType.stock.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _BYTE v8[136];
  _OWORD v9[8];
  uint64_t v10;

  sub_1ABDEA124(v1, (uint64_t)v8);
  sub_1ABDEA124((uint64_t)v8, (uint64_t)v9);
  v3 = v9[7];
  *(_OWORD *)(a1 + 96) = v9[6];
  *(_OWORD *)(a1 + 112) = v3;
  *(_QWORD *)(a1 + 128) = v10;
  v4 = v9[3];
  *(_OWORD *)(a1 + 32) = v9[2];
  *(_OWORD *)(a1 + 48) = v4;
  v5 = v9[5];
  *(_OWORD *)(a1 + 64) = v9[4];
  *(_OWORD *)(a1 + 80) = v5;
  v6 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v6;
  return sub_1ABD97ECC((uint64_t)v9);
}

uint64_t sub_1ABDF2F28()
{
  return sub_1ABF2FF5C();
}

_OWORD *sub_1ABDF2F30@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  _OWORD *result;

  sub_1ABD04578(0, &qword_1ED34E310, (uint64_t)&type metadata for NewsFeedFilterOptions.Option, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF366C0;
  result = sub_1ABDFAE0C(a1, (_OWORD *)(v4 + 32));
  *a2 = v4;
  return result;
}

uint64_t sub_1ABDF2FA4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1ABDF2FAC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  _BYTE v13[64];

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 16);
  if (!v3)
    return 0;
  sub_1ABDFAE2C(v2 + 32, (uint64_t)v13);
  sub_1ABF2FF5C();
  sub_1ABDFABD4((uint64_t)v13, a1);
  v6 = v5;
  sub_1ABDFAE60((uint64_t)v13);
  if ((v6 & 1) != 0)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v3 == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  v8 = v2 + 96;
  v9 = 1;
  while (1)
  {
    result = sub_1ABDFAE2C(v8, (uint64_t)v13);
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    sub_1ABDFABD4((uint64_t)v13, a1);
    v12 = v11;
    sub_1ABDFAE60((uint64_t)v13);
    if ((v12 & 1) != 0)
      goto LABEL_3;
    v8 += 64;
    ++v9;
    if (v10 == v3)
      goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDF3094@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[4];

  v4 = *v2;
  v6[2] = a1;
  sub_1ABF2FF5C();
  result = sub_1ABDF2A74((uint64_t)sub_1ABDFAE8C, (uint64_t)v6, v4);
  *a2 = result;
  return result;
}

BOOL sub_1ABDF30EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1ABDF3100()
{
  return sub_1ABF32314();
}

uint64_t sub_1ABDF3128()
{
  sub_1ABF32308();
  sub_1ABF32314();
  return sub_1ABF32338();
}

uint64_t NewsFeedRequest.feedID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t NewsFeedRequest.maxCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t NewsFeedRequest.laterDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsFeedRequest() + 24);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsFeedRequest.earlierDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NewsFeedRequest() + 28);
  v4 = sub_1ABF30760();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NewsFeedRequest.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[136];

  v3 = type metadata accessor for NewsFeedRequest();
  sub_1ABDEA124(v1 + *(int *)(v3 + 32), (uint64_t)v5);
  sub_1ABDEA124((uint64_t)v5, a1);
  return sub_1ABD97ECC((uint64_t)v5);
}

uint64_t NewsFeedRequest.init(feedID:maxCount:laterDate:earlierDate:type:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  int *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  _BYTE v18[136];

  sub_1ABDEA124(a6, (uint64_t)v18);
  *(_QWORD *)a7 = a1;
  *((_QWORD *)a7 + 1) = a2;
  *((_QWORD *)a7 + 2) = a3;
  v13 = (int *)type metadata accessor for NewsFeedRequest();
  v14 = &a7[v13[6]];
  v15 = sub_1ABF30760();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v14, a4, v15);
  v16(&a7[v13[7]], a5, v15);
  return sub_1ABDEA124((uint64_t)v18, (uint64_t)&a7[v13[8]]);
}

uint64_t StockNewsFeed.headlines.getter()
{
  return sub_1ABF2FF5C();
}

uint64_t StockNewsFeed.feedID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t StockNewsFeed.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[136];

  sub_1ABDEA124(v1 + 24, (uint64_t)v4);
  sub_1ABDEA124((uint64_t)v4, a1);
  return sub_1ABD97ECC((uint64_t)v4);
}

BOOL StockNewsFeed.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

uint64_t StockNewsFeed.filtered(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[136];

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  sub_1ABDEA124((uint64_t)(v1 + 3), (uint64_t)v7);
  *a1 = sub_1ABDF344C(v3);
  a1[1] = v4;
  a1[2] = v5;
  sub_1ABDEA124((uint64_t)v7, (uint64_t)(a1 + 3));
  sub_1ABF2FF5C();
  return sub_1ABD97ECC((uint64_t)v7);
}

uint64_t sub_1ABDF344C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[144];
  _QWORD v21[19];
  uint64_t v22;
  _QWORD v23[8];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (v4)
  {
    v5 = v3 + 32;
    sub_1ABF2FF5C();
    v19 = v3 + 32;
    v6 = v4;
    v18 = v3;
    while (1)
    {
      sub_1ABDFAE2C(v5, (uint64_t)v21);
      sub_1ABDFAE2C((uint64_t)v21, (uint64_t)v20);
      if (v20[57] == 3)
        break;
      sub_1ABDFAE60((uint64_t)v20);
      sub_1ABDFAE60((uint64_t)v21);
      v5 += 64;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        sub_1ABF2FF5C();
        goto LABEL_23;
      }
    }
    sub_1ABDFAE60((uint64_t)v21);
    swift_bridgeObjectRelease();
    v25 = 0u;
    v26 = 0u;
    v24 = 4;
    v27 = 0;
    v28 = 9;
    sub_1ABD22744((uint64_t)&v24, (uint64_t)v23);
    sub_1ABF2FF5C();
    sub_1ABD228E4((uint64_t)&v24);
    v22 = MEMORY[0x1E0DEE9D8];
    v7 = *(_QWORD *)(a1 + 16);
    if (v7)
    {
      v8 = 0;
      v9 = MEMORY[0x1E0DEE9D8];
      do
      {
        if (v8 <= v7)
          v10 = v7;
        else
          v10 = v8;
        v11 = a1 + 32 + 144 * v8;
        v12 = v8;
        while (1)
        {
          if (v10 == v12)
            goto LABEL_26;
          sub_1ABD6414C(v11, (uint64_t)v21);
          v8 = v12 + 1;
          sub_1ABD6414C((uint64_t)v21, (uint64_t)v20);
          sub_1ABD64188(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
          sub_1ABD2189C((uint64_t)v20);
          if ((v13 & 1) == 0)
            break;
          sub_1ABD64188(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
          v11 += 144;
          ++v12;
          if (v7 == v8)
            goto LABEL_22;
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v22 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1ABD1515C(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v9 = v22;
        }
        v16 = *(_QWORD *)(v9 + 16);
        v15 = *(_QWORD *)(v9 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1ABD1515C(v15 > 1, v16 + 1, 1);
          v9 = v22;
        }
        *(_QWORD *)(v9 + 16) = v16 + 1;
        sub_1ABD6414C((uint64_t)v21, v9 + 144 * v16 + 32);
      }
      while (v7 - 1 != v12);
    }
LABEL_22:
    sub_1ABD228E4((uint64_t)v23);
    swift_bridgeObjectRelease();
    v3 = v18;
LABEL_23:
    sub_1ABF2FF5C();
    if (*(_QWORD *)(v3 + 16))
    {
      sub_1ABDFAE2C(v19, (uint64_t)&v24);
      __asm { BR              X9 }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    JUMPOUT(0x1ABDF3D74);
  }
  sub_1ABF2FF5C();
  return a1;
}

uint64_t StockNewsFeed.copy(with:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[136];

  v6 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  sub_1ABDEA124(v2 + 24, (uint64_t)v8);
  *a2 = a1;
  a2[1] = v6;
  a2[2] = v5;
  sub_1ABDEA124((uint64_t)v8, (uint64_t)(a2 + 3));
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return sub_1ABD97ECC((uint64_t)v8);
}

void StockNewsFeed.sorted(_:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[136];

  v2 = *a1;
  sub_1ABDEA124(v1 + 24, (uint64_t)v3);
  __asm { BR              X9 }
}

uint64_t sub_1ABDF3E4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[200];

  sub_1ABF2FF5C();
  *v0 = v2;
  v0[1] = v3;
  v0[2] = v1;
  sub_1ABDEA124((uint64_t)v5, (uint64_t)(v0 + 3));
  sub_1ABF2FF5C();
  return sub_1ABD97ECC((uint64_t)v5);
}

double StockNewsFeed.limited(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 *v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  double v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  double result;
  __int128 v21;
  __int128 v22;
  _OWORD v23[9];
  _BYTE v24[136];
  __int128 v25;
  _OWORD v26[9];

  v4 = v2[5];
  v26[3] = v2[4];
  v26[4] = v4;
  v5 = v2[3];
  v26[1] = v2[2];
  v26[2] = v5;
  v6 = v2[9];
  v26[7] = v2[8];
  v26[8] = v6;
  v7 = v2[7];
  v26[5] = v2[6];
  v26[6] = v7;
  v8 = v2[1];
  v25 = *v2;
  v26[0] = v8;
  v9 = *(double *)&v25;
  if (*(_QWORD *)(v25 + 16) <= a1)
  {
    v15 = *((_QWORD *)&v25 + 1);
    v14 = *(_QWORD *)&v26[0];
    sub_1ABD97E18((uint64_t)&v25);
    goto LABEL_10;
  }
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1ABF32254();
    sub_1ABF2FF5C();
    swift_unknownObjectRetain_n();
    v11 = swift_dynamicCastClass();
    if (!v11)
    {
      swift_bridgeObjectRelease();
      v11 = MEMORY[0x1E0DEE9D8];
    }
    v12 = *(_QWORD *)(v11 + 16);
    swift_release();
    if (v12 == a1)
    {
      v13 = swift_dynamicCastClass();
      if (!v13)
      {
        swift_bridgeObjectRelease();
        v13 = MEMORY[0x1E0DEE9D8];
      }
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  v13 = sub_1ABD910B8(v25, v25 + 32, 0, (2 * a1) | 1);
LABEL_8:
  swift_bridgeObjectRelease();
  v15 = *((_QWORD *)&v25 + 1);
  v14 = *(_QWORD *)&v26[0];
  sub_1ABF2FF5C();
  sub_1ABD97ECC((uint64_t)v26 + 8);
  v9 = *(double *)&v13;
LABEL_10:
  sub_1ABDEA124((uint64_t)v26 + 8, (uint64_t)v24);
  *(double *)&v22 = v9;
  *((_QWORD *)&v22 + 1) = v15;
  *(_QWORD *)&v23[0] = v14;
  sub_1ABDEA124((uint64_t)v24, (uint64_t)v23 + 8);
  v16 = v23[6];
  a2[6] = v23[5];
  a2[7] = v16;
  v17 = v23[8];
  a2[8] = v23[7];
  a2[9] = v17;
  v18 = v23[2];
  a2[2] = v23[1];
  a2[3] = v18;
  v19 = v23[4];
  a2[4] = v23[3];
  a2[5] = v19;
  result = v9;
  v21 = v23[0];
  *a2 = v22;
  a2[1] = v21;
  return result;
}

uint64_t StockNewsFeed.startIndex.getter()
{
  return 0;
}

uint64_t StockNewsFeed.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

unint64_t StockNewsFeed.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD v4[18];

  if (*(_QWORD *)(*(_QWORD *)v2 + 16) <= result)
  {
    __break(1u);
  }
  else
  {
    sub_1ABD6414C(*(_QWORD *)v2 + 144 * result + 32, (uint64_t)v4);
    sub_1ABD6414C((uint64_t)v4, a2);
    return (unint64_t)sub_1ABD64188(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  }
  return result;
}

Swift::Int __swiftcall StockNewsFeed.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

uint64_t StockNewsFeed.makeIterator()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 0;
  sub_1ABDFAF24();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1ABDFAF1C;
  *(_QWORD *)(v3 + 24) = v2;
  sub_1ABF2FF5C();
  return v3;
}

_QWORD *sub_1ABDF41AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v8[18];

  result = (_QWORD *)swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(v5 + 16);
  if (v6 == v7)
  {
    sub_1ABDFDD08((uint64_t)v8);
    return (_QWORD *)sub_1ABD843F0((uint64_t)v8, a2, &qword_1EEC43288, (uint64_t)&type metadata for Headline);
  }
  else if (v6 >= v7)
  {
    __break(1u);
  }
  else
  {
    sub_1ABD6414C(v5 + 144 * v6 + 32, (uint64_t)v8);
    sub_1ABD6414C((uint64_t)v8, a2);
    *(_QWORD *)(a1 + 24) = v6 + 1;
    nullsub_2(a2);
    return sub_1ABD64188(v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  }
  return result;
}

void sub_1ABDF4270(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_1ABDF4278(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
}

void (*sub_1ABDF4288(_QWORD *a1, unint64_t *a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1ABDF4300(v4, *a2);
  return sub_1ABDF42D4;
}

void sub_1ABDF42D4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_1ABDF4300(_QWORD *a1, unint64_t a2))(_QWORD **a1)
{
  uint64_t *v2;
  void (*result)(_QWORD **);
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  result = (void (*)(_QWORD **))malloc(0x1B0uLL);
  *a1 = result;
  v6 = *v2;
  if (*(_QWORD *)(*v2 + 16) <= a2)
  {
    __break(1u);
  }
  else
  {
    v7 = result;
    v8 = (uint64_t)result + 144;
    sub_1ABD6414C(v6 + 144 * a2 + 32, (uint64_t)result);
    sub_1ABD6414C((uint64_t)v7, v8);
    sub_1ABD64188(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    return sub_1ABDF438C;
  }
  return result;
}

void sub_1ABDF438C(_QWORD **a1)
{
  _QWORD *v1;

  v1 = *a1;
  sub_1ABD6414C((uint64_t)(*a1 + 18), (uint64_t)(*a1 + 36));
  sub_1ABD64188(v1 + 36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
  free(v1);
}

uint64_t *sub_1ABDF43CC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v15[10];

  v3 = *result;
  v4 = result[1];
  v5 = v2[5];
  v15[4] = v2[4];
  v15[5] = v5;
  v6 = v2[3];
  v15[2] = v2[2];
  v15[3] = v6;
  v7 = v2[9];
  v15[8] = v2[8];
  v15[9] = v7;
  v8 = v2[7];
  v15[6] = v2[6];
  v15[7] = v8;
  v9 = v2[1];
  v15[0] = *v2;
  v15[1] = v9;
  if (v3 < 0 || *(_QWORD *)(*(_QWORD *)&v15[0] + 16) < v4)
  {
    __break(1u);
  }
  else
  {
    v10 = v2[7];
    *(_OWORD *)(a2 + 112) = v2[6];
    *(_OWORD *)(a2 + 128) = v10;
    v11 = v2[9];
    *(_OWORD *)(a2 + 144) = v2[8];
    *(_OWORD *)(a2 + 160) = v11;
    v12 = v2[3];
    *(_OWORD *)(a2 + 48) = v2[2];
    *(_OWORD *)(a2 + 64) = v12;
    v13 = v2[5];
    *(_OWORD *)(a2 + 80) = v2[4];
    *(_OWORD *)(a2 + 96) = v13;
    v14 = v2[1];
    *(_OWORD *)(a2 + 16) = *v2;
    *(_OWORD *)(a2 + 32) = v14;
    *(_QWORD *)a2 = v3;
    *(_QWORD *)(a2 + 8) = v4;
    return (uint64_t *)sub_1ABD97E18((uint64_t)v15);
  }
  return result;
}

uint64_t sub_1ABDF445C@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _OWORD v18[2];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v2 = v1[7];
  v3 = v1[5];
  v23 = v1[6];
  v24 = v2;
  v4 = v1[7];
  v5 = v1[9];
  v25 = v1[8];
  v6 = v25;
  v26 = v5;
  v7 = v1[3];
  v9 = v1[1];
  v19 = v1[2];
  v8 = v19;
  v20 = v7;
  v10 = v1[3];
  v11 = v1[5];
  v21 = v1[4];
  v12 = v21;
  v22 = v11;
  v13 = v1[1];
  v18[0] = *v1;
  v14 = v18[0];
  v18[1] = v13;
  *(_OWORD *)(a1 + 96) = v23;
  *(_OWORD *)(a1 + 112) = v4;
  v15 = v1[9];
  *(_OWORD *)(a1 + 128) = v6;
  *(_OWORD *)(a1 + 144) = v15;
  *(_OWORD *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = v12;
  *(_OWORD *)(a1 + 80) = v3;
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v9;
  v16 = *(_QWORD *)(*(_QWORD *)&v18[0] + 16);
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = v16;
  return sub_1ABD97E18((uint64_t)v18);
}

BOOL sub_1ABDF44DC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

void sub_1ABDF44F0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_1ABDF4500@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDF4538@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_1ABDFD514(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_1ABDF456C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;

  v2 = *result;
  v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result)
    return 0;
  v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    result = 0;
    v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      result = (uint64_t *)((char *)result + 1);
      if (v4 == result)
        return result;
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_1ABDF45C4(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = a2[1];
  if (*result >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  if (v4 == v5)
    __break(1u);
  return result;
}

_QWORD *sub_1ABDF45E0(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < *result)
    __break(1u);
  return result;
}

_QWORD *sub_1ABDF45FC(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < result[1])
    __break(1u);
  return result;
}

_QWORD *sub_1ABDF4618@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

_QWORD *sub_1ABDF4630(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

uint64_t sub_1ABDF4648@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t result;
  _OWORD v12[10];

  v3 = *v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = 0;
  sub_1ABDFAF24();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1ABDFAF1C;
  *(_QWORD *)(v5 + 24) = v4;
  v6 = *((_OWORD *)v1 + 7);
  v12[6] = *((_OWORD *)v1 + 6);
  v12[7] = v6;
  v7 = *((_OWORD *)v1 + 9);
  v12[8] = *((_OWORD *)v1 + 8);
  v12[9] = v7;
  v8 = *((_OWORD *)v1 + 3);
  v12[2] = *((_OWORD *)v1 + 2);
  v12[3] = v8;
  v9 = *((_OWORD *)v1 + 5);
  v12[4] = *((_OWORD *)v1 + 4);
  v12[5] = v9;
  v10 = *((_OWORD *)v1 + 1);
  v12[0] = *(_OWORD *)v1;
  v12[1] = v10;
  sub_1ABF2FF5C();
  result = sub_1ABDFCC34((uint64_t)v12);
  *a1 = v5;
  return result;
}

uint64_t sub_1ABDF46FC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1ABDF4708()
{
  return 2;
}

_QWORD *sub_1ABDF4710()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  _OWORD v8[10];

  v1 = v0[7];
  v8[6] = v0[6];
  v8[7] = v1;
  v2 = v0[9];
  v8[8] = v0[8];
  v8[9] = v2;
  v3 = v0[3];
  v8[2] = v0[2];
  v8[3] = v3;
  v4 = v0[5];
  v8[4] = v0[4];
  v8[5] = v4;
  v5 = v0[1];
  v8[0] = *v0;
  v8[1] = v5;
  v6 = sub_1ABD90D34((uint64_t)v8);
  sub_1ABDFCC34((uint64_t)v8);
  return v6;
}

uint64_t sub_1ABDF4770(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABDF47C0(a1, a2, a3);
}

uint64_t sub_1ABDF47C0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v13[144];
  _BYTE v14[144];
  _BYTE v15[144];
  _BYTE v16[144];

  v4 = v3;
  v8 = *v4;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = 0;
  sub_1ABDFAF24();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1ABDFAF1C;
  *(_QWORD *)(v10 + 24) = v9;
  sub_1ABF2FF5C();
  result = sub_1ABDFCC34((uint64_t)v4);
  v12 = 0;
  if (!a2 || !a3)
  {
LABEL_11:
    *a1 = v10;
    return v12;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_1ABDF41AC(v9, (uint64_t)v14);
    sub_1ABD843F0((uint64_t)v14, (uint64_t)v15, &qword_1EEC43288, (uint64_t)&type metadata for Headline);
    sub_1ABD843F0((uint64_t)v15, (uint64_t)v16, &qword_1EEC43288, (uint64_t)&type metadata for Headline);
    if (sub_1ABDFCCE8((uint64_t)v16) == 1)
    {
      v12 = 0;
    }
    else
    {
      v12 = 0;
      while (1)
      {
        sub_1ABD843F0((uint64_t)v15, (uint64_t)v13, &qword_1EEC43288, (uint64_t)&type metadata for Headline);
        sub_1ABD6414C((uint64_t)v13, a2);
        if (a3 - 1 == v12)
          break;
        a2 += 144;
        sub_1ABDF41AC(v9, (uint64_t)v14);
        sub_1ABD843F0((uint64_t)v14, (uint64_t)v15, &qword_1EEC43288, (uint64_t)&type metadata for Headline);
        sub_1ABD843F0((uint64_t)v15, (uint64_t)v16, &qword_1EEC43288, (uint64_t)&type metadata for Headline);
        ++v12;
        if (sub_1ABDFCCE8((uint64_t)v16) == 1)
          goto LABEL_11;
      }
      v12 = a3;
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1ABDF4968()
{
  return sub_1ABF31930();
}

uint64_t NewsFeedService.init(contentContext:headlineScorerFactory:appConfigurationManager:)(uint64_t a1, __int128 *a2, __int128 *a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  sub_1ABD065C8(a2, v3 + 24);
  sub_1ABD065C8(a3, v3 + 64);
  return v3;
}

uint64_t sub_1ABDF49C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  _BYTE v57[136];
  _QWORD *v58;
  _QWORD v59[18];

  v5 = type metadata accessor for NewsFeedRequest();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t *)((char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    v59[0] = MEMORY[0x1E0DEE9D8];
    sub_1ABDFD75C();
    swift_allocObject();
    return sub_1ABF311E0();
  }
  v50 = v2;
  v51 = a2;
  v59[0] = MEMORY[0x1E0DEE9D8];
  sub_1ABF31F18();
  v12 = (void *)objc_opt_self();
  v13 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v14 = *(_QWORD *)(v6 + 72);
  v52 = v13;
  v53 = a1;
  v54 = v11;
  v15 = v11;
  v56 = v5;
  do
  {
    sub_1ABDEA160(v13, (uint64_t)v10);
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B60]), sel_init);
    v17 = (void *)sub_1ABF31780();
    objc_msgSend(v16, sel_setFeedID_, v17);

    objc_msgSend(v16, sel_setMaxCount_, *((_QWORD *)v10 + 2));
    v18 = v14;
    v19 = (void *)sub_1ABF306D0();
    v20 = (void *)sub_1ABF306D0();
    v21 = objc_msgSend(v12, sel_feedRangeFromDate_toDate_, v19, v20);

    objc_msgSend(v16, sel_setFeedRange_, v21);
    v22 = v56;
    sub_1ABCFC3BC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for NewsFeedRequest);
    sub_1ABF31EF4();
    sub_1ABF31F24();
    v14 = v18;
    sub_1ABF31F30();
    sub_1ABF31F00();
    v13 += v18;
    --v15;
  }
  while (v15);
  v49 = v59[0];
  sub_1ABF2FF5C();
  --v54;
  v23 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v24 = v52;
  while (1)
  {
    v25 = v24;
    v26 = v55;
    sub_1ABDEA160(v24, (uint64_t)v55);
    v28 = *v26;
    v27 = v26[1];
    sub_1ABDEA124((uint64_t)v26 + *(int *)(v22 + 32), (uint64_t)v59);
    sub_1ABF2FF5C();
    sub_1ABD97ECC((uint64_t)v59);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v58 = v23;
    v31 = sub_1ABD00F9C(v28, v27);
    v32 = v23[2];
    v33 = (v30 & 1) == 0;
    v34 = v32 + v33;
    if (__OFADD__(v32, v33))
      break;
    v35 = v30;
    if (v23[3] >= v34)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v22 = v56;
        if ((v30 & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        sub_1ABE6EE60();
        v22 = v56;
        if ((v35 & 1) != 0)
          goto LABEL_12;
      }
    }
    else
    {
      sub_1ABE6B518(v34, isUniquelyReferenced_nonNull_native);
      v36 = sub_1ABD00F9C(v28, v27);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_23;
      v31 = v36;
      v22 = v56;
      if ((v35 & 1) != 0)
      {
LABEL_12:
        v23 = v58;
        v38 = v58[7] + 136 * v31;
        sub_1ABDEA124(v38, (uint64_t)v57);
        sub_1ABD97F60((uint64_t)v57);
        sub_1ABDEA124((uint64_t)v59, v38);
        goto LABEL_16;
      }
    }
    v23 = v58;
    v58[(v31 >> 6) + 8] |= 1 << v31;
    v39 = (uint64_t *)(v23[6] + 16 * v31);
    *v39 = v28;
    v39[1] = v27;
    sub_1ABDEA124((uint64_t)v59, v23[7] + 136 * v31);
    v40 = v23[2];
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
      goto LABEL_22;
    v23[2] = v42;
    sub_1ABF2FF5C();
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABCFC3BC((uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for NewsFeedRequest);
    if (!v54)
    {
      v43 = v53;
      v44 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v44);
      v45 = v49;
      *(&v49 - 6) = v50;
      *(&v49 - 5) = v45;
      v46 = v51;
      *(&v49 - 4) = v43;
      *(&v49 - 3) = v46;
      *(&v49 - 2) = (uint64_t)v23;
      sub_1ABDFD75C();
      swift_allocObject();
      v47 = sub_1ABF31228();
      swift_release();
      swift_bridgeObjectRelease();
      return v47;
    }
    v24 = v25 + v18;
    --v54;
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_1ABF3229C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDF4E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void *v36;
  uint64_t v39;
  uint64_t v41;
  char v42;
  _QWORD aBlock[391];

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = (void *)a5[2];
  sub_1ABF2FF68();
  v17 = objc_msgSend(objc_msgSend(v16, sel_configurationManager), sel_configuration);
  swift_unknownObjectRelease();
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B68]), sel_init);
  objc_msgSend(v18, sel_setContext_, v16);
  objc_msgSend(v18, sel_setConfiguration_, v17);
  objc_msgSend(v18, sel_setOptions_, 14);
  sub_1ABCF7BCC(0, &qword_1ED34E020);
  v19 = (void *)sub_1ABF319FC();
  objc_msgSend(v18, sel_setFeedRequests_, v19);

  if (v17)
    v20 = objc_msgSend(v17, sel_isOrderFeedEndpointEnabled);
  else
    v20 = 1;
  v21 = objc_msgSend((id)objc_opt_self(), sel_temporaryFeedDatabaseWithEndpoint_, v20);
  objc_msgSend(v18, sel_setFeedDatabase_, v21);

  if (a6 >> 62)
  {
    sub_1ABF2FF5C();
    v22 = sub_1ABF31FE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v22 == 1)
  {
    v23 = a5[11];
    v24 = a5[12];
    __swift_project_boxed_opaque_existential_1(a5 + 8, v23);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v24 + 8))(aBlock, v23, v24);
    sub_1ABD7DDF4((uint64_t)aBlock);
    if (aBlock[32] >= 1)
    {
      if (qword_1ED34C8B0 != -1)
        swift_once();
      type metadata accessor for NewsFeedService();
      sub_1ABCFE22C(&qword_1ED34CF08, v25, (uint64_t (*)(uint64_t))type metadata accessor for NewsFeedService, (uint64_t)&protocol conformance descriptor for NewsFeedService);
      sub_1ABF30970();
      if ((v42 & 1) == 0)
      {
        v26 = objc_allocWithZone(MEMORY[0x1E0D58AC8]);
        v27 = (void *)sub_1ABF31780();
        v28 = (void *)sub_1ABF31780();
        v29 = objc_msgSend(v26, sel_initWithGroupName_cacheControlKey_, v27, v28);

        objc_msgSend(v18, sel_setEdgeCacheHint_, v29);
      }
    }
  }
  v30 = objc_msgSend(v18, sel_operationID, a3, a8);
  v31 = sub_1ABF317A4();
  v33 = v32;

  v34 = swift_allocObject();
  swift_weakInit();
  v35 = (_QWORD *)swift_allocObject();
  v35[2] = v34;
  v35[3] = v39;
  v35[4] = a4;
  v35[5] = a7;
  v35[6] = v41;
  v35[7] = sub_1ABD17050;
  v35[8] = v15;
  v35[9] = v31;
  v35[10] = v33;
  v35[11] = v17;
  v35[12] = a9;
  aBlock[4] = sub_1ABDFD840;
  aBlock[5] = v35;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1ABDF6050;
  aBlock[3] = &block_descriptor_11;
  v36 = _Block_copy(aBlock);
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  swift_unknownObjectRetain();
  sub_1ABF2FF5C();
  swift_release();
  objc_msgSend(v18, sel_setRequestCompletionHandler_, v36);
  _Block_release(v36);
  sub_1ABF30BE0();
  sub_1ABF30BA4();
  sub_1ABF30BC8();
  swift_unknownObjectRelease();

  return swift_release();
}

void sub_1ABDF52E4(uint64_t a1, void *a2, void *a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t Strong;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  void *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD aBlock[9];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v21 = Strong;
    if (a3)
    {
      swift_getErrorValue();
      v22 = a3;
      if (sub_1ABF22924(v38))
      {
        sub_1ABDFD934(a7, a9, a10);
      }
      else
      {
        sub_1ABF31BE8();
        sub_1ABD0F55C();
        v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_1ABF366E0;
        v32 = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEA968];
        v33 = sub_1ABD0F5C0();
        *(_QWORD *)(v31 + 64) = v33;
        *(_QWORD *)(v31 + 32) = a11;
        *(_QWORD *)(v31 + 40) = a12;
        aBlock[6] = a3;
        sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
        sub_1ABF2FF5C();
        sub_1ABF31F6C();
        *(_QWORD *)(v31 + 96) = v32;
        *(_QWORD *)(v31 + 104) = v33;
        *(_QWORD *)(v31 + 72) = 0;
        *(_QWORD *)(v31 + 80) = 0xE000000000000000;
        sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
        v34 = (void *)sub_1ABF31D44();
        sub_1ABF31318();
        swift_bridgeObjectRelease();

        ((void (*)(void *))a5)(a3);
      }
      swift_release();

    }
    else
    {
      if (a1)
      {
        v26 = objc_allocWithZone(MEMORY[0x1E0D58B38]);
        sub_1ABF2FF5C();
        v27 = objc_msgSend(v26, sel_init);
        objc_msgSend(v27, sel_setConfiguration_, a13);
        objc_msgSend(v27, sel_setContext_, *(_QWORD *)(v21 + 16));
        if (a2)
        {
          sub_1ABCF7BCC(0, &qword_1ED34E010);
          a2 = (void *)sub_1ABF319FC();
        }
        objc_msgSend(v27, sel_setFeedItems_, a2, a14);

        v28 = swift_allocObject();
        swift_beginAccess();
        swift_weakLoadStrong();
        swift_weakInit();
        swift_release();
        v29 = (_QWORD *)swift_allocObject();
        v29[2] = v28;
        v29[3] = a5;
        v29[4] = a6;
        v29[5] = a1;
        v29[6] = v37;
        v29[7] = a9;
        v29[8] = a10;
        aBlock[4] = sub_1ABDFD904;
        aBlock[5] = v29;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1ABDA19E8;
        aBlock[3] = &block_descriptor_21_0;
        v30 = _Block_copy(aBlock);
        sub_1ABF2FF68();
        sub_1ABF2FF5C();
        sub_1ABF2FF68();
        swift_release();
        objc_msgSend(v27, sel_setHeadlinesMapCompletionHandler_, v30);
        _Block_release(v30);
        sub_1ABF30BE0();
        sub_1ABF30BA4();
        sub_1ABF30BC8();
        swift_release();

      }
      else
      {
        sub_1ABDFD87C();
        v35 = (void *)swift_allocError();
        *v36 = 1;
        a5();

      }
      swift_release();
    }
  }
  else
  {
    v23 = sub_1ABF30B44();
    sub_1ABCFE22C((unint64_t *)&qword_1EEC43290, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], MEMORY[0x1E0DB35A8]);
    v24 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DB3590], v23);
    ((void (*)(void *))a5)(v24);

  }
}

void sub_1ABDF5758(void *a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *Strong;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _BYTE *v31;
  void (*v32)(uint64_t, uint64_t);
  id v33;
  void (*v34)(void);

  swift_beginAccess();
  Strong = (_QWORD *)swift_weakLoadStrong();
  if (Strong)
  {
    if (a2)
    {
      v17 = a2;
      ((void (*)(void *))a4)(a2);
      v18 = a2;
LABEL_4:

      swift_release();
      return;
    }
    if (!a1)
    {
      sub_1ABDFD87C();
      v30 = swift_allocError();
      *v31 = 0;
      a4();
      v18 = (void *)v30;
      goto LABEL_4;
    }
    v34 = a4;
    v22 = Strong[6];
    v23 = Strong[7];
    __swift_project_boxed_opaque_existential_1(Strong + 3, v22);
    v32 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v33 = a1;
    v32(v22, v23);
    v24 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v24;
    v25[3] = v34;
    v25[4] = a5;
    v25[5] = a6;
    v25[6] = a7;
    v25[7] = v33;
    v25[8] = a8;
    v25[9] = a9;
    v26 = v33;
    sub_1ABF2FF68();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF68();
    v27 = (void *)sub_1ABF31114();
    sub_1ABF31180();
    swift_release();
    swift_release();

    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v34;
    *(_QWORD *)(v28 + 24) = a5;
    sub_1ABF2FF68();
    v29 = (void *)sub_1ABF31114();
    sub_1ABF311B0();
    swift_release();

    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    v19 = sub_1ABF30B44();
    sub_1ABCFE22C((unint64_t *)&qword_1EEC43290, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], MEMORY[0x1E0DB35A8]);
    v20 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DB3590], v19);
    ((void (*)(void *))a4)(v20);

  }
}

void sub_1ABDF5A4C(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void))
{
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[7];

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v15 = swift_release();
  if (Strong)
  {
    MEMORY[0x1E0C80A78](v15);
    v19[2] = a6;
    v19[3] = a7;
    v19[4] = a1;
    sub_1ABDF2BF4((void (*)(_QWORD *__return_ptr, id *))sub_1ABDFDCB8, (uint64_t)v19, a5);
    a8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = sub_1ABF30B44();
    sub_1ABCFE22C((unint64_t *)&qword_1EEC43290, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], MEMORY[0x1E0DB35A8]);
    v17 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x1E0DB3590], v16);
    a3(v17);

  }
}

uint64_t sub_1ABDF5BAC@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  unint64_t v33;
  uint64_t result;
  id v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(unint64_t, _OWORD *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  __int128 v49;
  _OWORD v50[9];
  _OWORD v51[8];
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  _BYTE v62[136];
  _OWORD v63[11];
  uint64_t v64;

  v10 = *a1;
  v11 = objc_msgSend(*a1, sel_feedID);
  if (!v11)
  {
    __break(1u);
LABEL_17:
    sub_1ABD97F60((uint64_t)v62);
    __break(1u);
    goto LABEL_18;
  }
  v12 = v11;
  v13 = sub_1ABF317A4();
  v15 = v14;

  if (!*(_QWORD *)(a2 + 16) || (v16 = sub_1ABD00F9C(v13, v15), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_1ABDFDCEC(v63);
    return sub_1ABD843F0((uint64_t)v63, a5, &qword_1ED34C938, (uint64_t)&type metadata for StockNewsFeed);
  }
  sub_1ABDEA124(*(_QWORD *)(a2 + 56) + 136 * v16, (uint64_t)v62);
  sub_1ABD97ECC((uint64_t)v62);
  swift_bridgeObjectRelease();
  sub_1ABD0F55C();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1ABF36EA0;
  v19 = objc_msgSend(v10, sel_feedItems);
  v47 = a5;
  v64 = v5;
  v48 = a3;
  if (v19)
  {
    sub_1ABCF7BCC(0, &qword_1ED34E010);
    v20 = sub_1ABF31A08();

    if (v20 >> 62)
    {
      sub_1ABF2FF5C();
      v19 = (id)sub_1ABF31FE4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = *(id *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  v21 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v18 + 64) = v21;
  *(_QWORD *)(v18 + 32) = v19;
  sub_1ABDEA124((uint64_t)v62, (uint64_t)&v53);
  v22 = v54;
  v23 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 96) = MEMORY[0x1E0DEA968];
  v24 = sub_1ABD0F5C0();
  *(_QWORD *)(v18 + 104) = v24;
  *(_OWORD *)(v18 + 72) = v22;
  sub_1ABF2FF5C();
  v25 = objc_msgSend(v10, sel_feedID);
  if (!v25)
    goto LABEL_17;
  v26 = v25;
  v27 = sub_1ABF317A4();
  v29 = v28;

  *(_QWORD *)(v18 + 136) = v23;
  *(_QWORD *)(v18 + 144) = v24;
  *(_QWORD *)(v18 + 112) = v27;
  *(_QWORD *)(v18 + 120) = v29;
  sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
  v30 = (void *)sub_1ABF31D44();
  sub_1ABF31BF4();
  sub_1ABF31318();
  swift_bridgeObjectRelease();

  v31 = objc_msgSend(v10, sel_feedItems);
  if (v31)
  {
    v32 = v31;
    sub_1ABCF7BCC(0, &qword_1ED34E010);
    v33 = sub_1ABF31A08();

  }
  else
  {
    v33 = MEMORY[0x1E0DEE9D8];
  }
  v35 = v48;
  v36 = sub_1ABDFD390(v33, v35);
  swift_bridgeObjectRelease();

  v37 = a4[3];
  v38 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v37);
  v51[6] = v59;
  v51[7] = v60;
  v52 = v61;
  v51[2] = v55;
  v51[3] = v56;
  v51[4] = v57;
  v51[5] = v58;
  v51[0] = v53;
  v51[1] = v54;
  nullsub_2(v51);
  sub_1ABD261A4((uint64_t)v51, (uint64_t)v63);
  v39 = *(uint64_t (**)(unint64_t, _OWORD *, uint64_t, uint64_t))(v38 + 16);
  sub_1ABD97ECC((uint64_t)&v53);
  v40 = v39(v36, v63, v37, v38);
  sub_1ABD97F60((uint64_t)v62);
  sub_1ABF2FF5C();
  v41 = sub_1ABDFA988(v36, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v42 = objc_msgSend(v10, sel_feedID);
  if (v42)
  {
    v43 = v42;
    v44 = sub_1ABF317A4();
    v46 = v45;

    *(_QWORD *)&v49 = v41;
    *((_QWORD *)&v49 + 1) = v44;
    *(_QWORD *)&v50[0] = v46;
    sub_1ABDEA124((uint64_t)v62, (uint64_t)v50 + 8);
    v63[6] = v50[5];
    v63[7] = v50[6];
    v63[8] = v50[7];
    v63[9] = v50[8];
    v63[2] = v50[1];
    v63[3] = v50[2];
    v63[4] = v50[3];
    v63[5] = v50[4];
    v63[0] = v49;
    v63[1] = v50[0];
    nullsub_2(v63);
    return sub_1ABD843F0((uint64_t)v63, v47, &qword_1ED34C938, (uint64_t)&type metadata for StockNewsFeed);
  }
LABEL_18:
  result = sub_1ABD97F60((uint64_t)v62);
  __break(1u);
  return result;
}

uint64_t sub_1ABDF6050(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, void *);
  id v8;

  v6 = a2;
  v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1ABCF7BCC(0, &qword_1ED34C8E8);
    v6 = sub_1ABF31A08();
  }
  if (a3)
  {
    sub_1ABCF7BCC(0, &qword_1ED34E010);
    a3 = sub_1ABF31A08();
  }
  sub_1ABF2FF68();
  v8 = a4;
  v7(v6, a3, a4);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t NewsFeedService.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return v0;
}

uint64_t NewsFeedService.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t NewsFeedService.fetchFeeds(for:)(uint64_t a1)
{
  return sub_1ABDF49C8(a1, 0);
}

uint64_t sub_1ABDF6180(uint64_t a1)
{
  return sub_1ABDF49C8(a1, 0);
}

uint64_t sub_1ABDF61A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[7];
  _BYTE v15[136];

  sub_1ABDEA124(a2, (uint64_t)v15);
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = v15;
  sub_1ABF2FF5C();
  v11 = sub_1ABDF24CC(MEMORY[0x1E0DEE9D8], (void (*)(uint64_t *, uint64_t *))sub_1ABDFAFC4, (uint64_t)v14, a1);
  swift_bridgeObjectRelease();
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a6 + 8))(v11, a5, a6);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1ABDF6264(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a5;
  v27 = a3;
  v28 = a4;
  v8 = type metadata accessor for NewsFeedRequest();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = *a2;
  v13 = *(_QWORD *)(*a2 + 16);
  if (v13)
  {
    v25 = a1;
    v26 = v5;
    v14 = *a1;
    v24 = sub_1ABF2FF5C();
    v15 = (uint64_t *)(v24 + 40);
    do
    {
      v17 = *(v15 - 1);
      v16 = *v15;
      sub_1ABF2FF5C();
      sub_1ABF30754();
      v18 = (char *)v11 + *(int *)(v8 + 28);
      v19 = sub_1ABF30760();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, v28, v19);
      *v11 = v17;
      v11[1] = v16;
      v11[2] = v27;
      v20 = v29;
      sub_1ABDEA124(v29, (uint64_t)v11 + *(int *)(v8 + 32));
      sub_1ABD97ECC(v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1ABD82BEC(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
      v22 = *(_QWORD *)(v14 + 16);
      v21 = *(_QWORD *)(v14 + 24);
      if (v22 >= v21 >> 1)
        v14 = sub_1ABD82BEC(v21 > 1, v22 + 1, 1, v14);
      v15 += 2;
      *(_QWORD *)(v14 + 16) = v22 + 1;
      sub_1ABDEA294((uint64_t)v11, v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v22);
      --v13;
    }
    while (v13);
    result = swift_bridgeObjectRelease();
    *v25 = v14;
  }
  return result;
}

uint64_t sub_1ABDF6420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  _QWORD v8[6];

  v8[2] = a2;
  v8[3] = a3;
  sub_1ABDF2688(MEMORY[0x1E0DEE9D8], (void (*)(uint64_t *, _OWORD *))sub_1ABDFAFE0, (uint64_t)v8, a1);
  v6 = (*(uint64_t (**)(void))(a5 + 8))();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1ABDF6498(unint64_t *a1, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  _QWORD v30[2];
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[8];
  uint64_t v36;
  _OWORD v37[10];
  uint64_t v38;

  v38 = a4;
  v34 = a3;
  v7 = type metadata accessor for NewsFeedRequest();
  v33 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = a2[3];
  v37[2] = a2[2];
  v37[3] = v10;
  v11 = a2[8];
  v12 = a2[6];
  v37[7] = a2[7];
  v37[8] = v11;
  v13 = a2[5];
  v37[4] = a2[4];
  v37[5] = v13;
  v37[6] = v12;
  v14 = a2[1];
  v37[0] = *a2;
  v37[1] = v14;
  v15 = *((_QWORD *)&v11 + 1);
  v16 = *(_QWORD *)(*((_QWORD *)&v11 + 1) + 16);
  if (v16)
  {
    v32 = v4;
    v17 = a2[7];
    v35[6] = a2[6];
    v35[7] = v17;
    v36 = *((_QWORD *)a2 + 16);
    v18 = a2[3];
    v35[2] = a2[2];
    v35[3] = v18;
    v19 = a2[5];
    v35[4] = a2[4];
    v35[5] = v19;
    v20 = a2[1];
    v35[0] = *a2;
    v35[1] = v20;
    nullsub_2(v35);
    v31 = a1;
    v21 = *a1;
    sub_1ABDFD688((uint64_t)v37);
    v30[1] = v15;
    v22 = (uint64_t *)(v15 + 40);
    do
    {
      v24 = *(v22 - 1);
      v23 = *v22;
      sub_1ABF2FF5C();
      sub_1ABF30754();
      v25 = (char *)v9 + *(int *)(v7 + 28);
      v26 = sub_1ABF30760();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v25, v38, v26);
      *v9 = v24;
      v9[1] = v23;
      v9[2] = v34;
      sub_1ABDEA124((uint64_t)v35, (uint64_t)v9 + *(int *)(v7 + 32));
      sub_1ABD97ECC((uint64_t)v37);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_1ABD82BEC(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
      v28 = *(_QWORD *)(v21 + 16);
      v27 = *(_QWORD *)(v21 + 24);
      if (v28 >= v27 >> 1)
        v21 = sub_1ABD82BEC(v27 > 1, v28 + 1, 1, v21);
      v22 += 2;
      *(_QWORD *)(v21 + 16) = v28 + 1;
      sub_1ABDEA294((uint64_t)v9, v21+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v28);
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    result = sub_1ABD97F60((uint64_t)v37);
    *v31 = v21;
  }
  else
  {
    sub_1ABDFD688((uint64_t)v37);
    swift_bridgeObjectRelease();
    return sub_1ABD97F60((uint64_t)v37);
  }
  return result;
}

void sub_1ABDF66E0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char v4;
  _BYTE v5[144];
  _BYTE v6[144];

  sub_1ABD6414C(a1, (uint64_t)v6);
  sub_1ABD6414C((uint64_t)v6, (uint64_t)v5);
  sub_1ABD2189C((uint64_t)v5);
  if ((v4 & 1) != 0)
  {
    if (__OFADD__(*a3, 1))
      __break(1u);
    else
      ++*a3;
  }
}

void sub_1ABDF6768(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1ABDF679C()
{
  uint64_t v0;

  sub_1ABF2FF5C();
  return v0;
}

uint64_t sub_1ABDF6824(uint64_t *a1)
{
  return sub_1ABDF685C(a1, (uint64_t (*)(_QWORD *))sub_1ABDF7D70);
}

uint64_t sub_1ABDF6840(uint64_t *a1)
{
  return sub_1ABDF685C(a1, sub_1ABDF731C);
}

uint64_t sub_1ABDF685C(uint64_t *a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1ABE8C08C(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  result = a2(v7);
  *a1 = v4;
  return result;
}

uint64_t sub_1ABDF68C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  _OWORD *i;
  uint64_t v42;
  int v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *__dst;
  uint64_t v113;
  _BYTE v114[144];
  _QWORD v115[18];
  _QWORD v116[18];
  _BYTE v117[144];
  uint64_t v118;
  _BYTE v119[144];
  _QWORD v120[18];
  _QWORD v121[18];
  _QWORD v122[18];
  _BYTE v123[144];
  _BYTE v124[152];
  uint64_t v125;

  v2 = v1;
  v4 = a1[1];
  result = sub_1ABF321E8();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_158;
    if (v4)
      return sub_1ABDF8E48(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_166;
  v111 = v4;
  v107 = result;
  v105 = a1;
  if (v4 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v4 != 1)
    {
      v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_123:
      v106 = v9;
      if (v14 >= 2)
      {
        v99 = *v105;
        do
        {
          v100 = v14 - 2;
          if (v14 < 2)
            goto LABEL_153;
          if (!v99)
            goto LABEL_165;
          v101 = *(_QWORD *)&v12[16 * v100 + 32];
          v102 = *(_QWORD *)&v12[16 * v14 + 24];
          sub_1ABDF96B4((char *)(v99 + 144 * v101), (char *)(v99 + 144 * *(_QWORD *)&v12[16 * v14 + 16]), v99 + 144 * v102, __dst);
          if (v2)
            break;
          if (v102 < v101)
            goto LABEL_154;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_1ABE8C050((uint64_t)v12);
          if (v100 >= *((_QWORD *)v12 + 2))
            goto LABEL_155;
          v103 = &v12[16 * v100 + 32];
          *(_QWORD *)v103 = v101;
          *((_QWORD *)v103 + 1) = v102;
          v104 = *((_QWORD *)v12 + 2);
          if (v14 > v104)
            goto LABEL_156;
          memmove(&v12[16 * v14 + 16], &v12[16 * v14 + 32], 16 * (v104 - v14));
          *((_QWORD *)v12 + 2) = v104 - 1;
          v14 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v106 = MEMORY[0x1E0DEE9D8];
    v113 = v1;
  }
  else
  {
    v113 = v1;
    v7 = v6 >> 1;
    v8 = sub_1ABF31A74();
    *(_QWORD *)(v8 + 16) = v7;
    v106 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v13 = v111;
  v125 = v11;
LABEL_16:
  v15 = v10;
  v16 = v10 + 1;
  v108 = v10;
  if (v10 + 1 >= v13)
  {
    ++v10;
    goto LABEL_71;
  }
  v17 = v11;
  sub_1ABD6414C(v11 + 144 * v16, (uint64_t)v120);
  sub_1ABD6414C(v17 + 144 * v15, (uint64_t)v121);
  sub_1ABD6414C((uint64_t)v120, (uint64_t)v123);
  sub_1ABD6414C((uint64_t)v121, (uint64_t)v124);
  sub_1ABD6414C((uint64_t)v120, (uint64_t)v122);
  if (sub_1ABD24814((uint64_t)v122) == 1)
  {
    sub_1ABD24804((uint64_t)v122);
LABEL_22:
    sub_1ABD64188(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABD64188(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABDFDD28((uint64_t)v123);
    v10 = v15 + 2;
    if (v15 + 2 >= v13)
      goto LABEL_71;
    v21 = 0;
    goto LABEL_26;
  }
  v18 = sub_1ABD24804((uint64_t)v122);
  sub_1ABD6414C((uint64_t)v121, (uint64_t)v117);
  v19 = sub_1ABD24814((uint64_t)v117);
  v20 = sub_1ABD24804((uint64_t)v117);
  if (v19 == 1)
  {
    v13 = v111;
    v15 = v108;
    goto LABEL_22;
  }
  v22 = v20;
  sub_1ABD64188(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  sub_1ABD64188(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  sub_1ABDFDD28((uint64_t)v123);
  v23 = *(double *)(v22 + 88);
  v24 = *(double *)(v18 + 88);
  v21 = v23 < v24;
  v15 = v108;
  v10 = v108 + 2;
  v13 = v111;
  if (v108 + 2 < v111)
  {
LABEL_26:
    v25 = v125;
    while (1)
    {
      v26 = v10;
      v27 = v25 + 144 * v10;
      v28 = v25;
      sub_1ABD6414C(v27, (uint64_t)v115);
      sub_1ABD6414C(v28 + 144 * v16, (uint64_t)v116);
      sub_1ABD6414C((uint64_t)v115, (uint64_t)v117);
      sub_1ABD6414C((uint64_t)v116, (uint64_t)&v118);
      sub_1ABD6414C((uint64_t)v115, (uint64_t)v119);
      if (sub_1ABD24814((uint64_t)v119) == 1)
        break;
      v29 = sub_1ABD24804((uint64_t)v119);
      sub_1ABD6414C((uint64_t)v116, (uint64_t)v114);
      v30 = sub_1ABD24814((uint64_t)v114);
      v31 = sub_1ABD24804((uint64_t)v114);
      if (v30 == 1)
      {
        v13 = v111;
        v15 = v108;
        goto LABEL_32;
      }
      v32 = v31;
      sub_1ABD64188(v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABD64188(v115, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABDFDD28((uint64_t)v117);
      if (((v21 ^ (*(double *)(v32 + 88) >= *(double *)(v29 + 88))) & 1) == 0)
      {
        v13 = v111;
        v25 = v125;
        v15 = v108;
        if (!v21)
        {
          v10 = v26;
          if (v26 >= v111)
            goto LABEL_71;
          goto LABEL_52;
        }
        goto LABEL_40;
      }
      v10 = v26 + 1;
      v13 = v111;
      v25 = v125;
      v15 = v108;
      if (v26 + 1 >= v111)
      {
        ++v26;
        if (v21)
          goto LABEL_40;
LABEL_51:
        if (v10 < v13)
          goto LABEL_52;
LABEL_71:
        if (v10 < v15)
          goto LABEL_152;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1ABE8BC6C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        v50 = *((_QWORD *)v12 + 2);
        v49 = *((_QWORD *)v12 + 3);
        v14 = v50 + 1;
        v11 = v125;
        if (v50 >= v49 >> 1)
        {
          v98 = sub_1ABE8BC6C((char *)(v49 > 1), v50 + 1, 1, v12);
          v11 = v125;
          v12 = v98;
        }
        *((_QWORD *)v12 + 2) = v14;
        v51 = v12 + 32;
        v52 = &v12[16 * v50 + 32];
        *(_QWORD *)v52 = v15;
        *((_QWORD *)v52 + 1) = v10;
        if (v50)
        {
          while (2)
          {
            v53 = v14 - 1;
            if (v14 >= 4)
            {
              v58 = &v51[16 * v14];
              v59 = *((_QWORD *)v58 - 8);
              v60 = *((_QWORD *)v58 - 7);
              v64 = __OFSUB__(v60, v59);
              v61 = v60 - v59;
              if (v64)
                goto LABEL_141;
              v63 = *((_QWORD *)v58 - 6);
              v62 = *((_QWORD *)v58 - 5);
              v64 = __OFSUB__(v62, v63);
              v56 = v62 - v63;
              v57 = v64;
              if (v64)
                goto LABEL_142;
              v65 = v14 - 2;
              v66 = &v51[16 * v14 - 32];
              v68 = *(_QWORD *)v66;
              v67 = *((_QWORD *)v66 + 1);
              v64 = __OFSUB__(v67, v68);
              v69 = v67 - v68;
              if (v64)
                goto LABEL_144;
              v64 = __OFADD__(v56, v69);
              v70 = v56 + v69;
              if (v64)
                goto LABEL_147;
              if (v70 >= v61)
              {
                v88 = &v51[16 * v53];
                v90 = *(_QWORD *)v88;
                v89 = *((_QWORD *)v88 + 1);
                v64 = __OFSUB__(v89, v90);
                v91 = v89 - v90;
                if (v64)
                  goto LABEL_151;
                v81 = v56 < v91;
              }
              else
              {
LABEL_90:
                if ((v57 & 1) != 0)
                  goto LABEL_143;
                v65 = v14 - 2;
                v71 = &v51[16 * v14 - 32];
                v73 = *(_QWORD *)v71;
                v72 = *((_QWORD *)v71 + 1);
                v74 = __OFSUB__(v72, v73);
                v75 = v72 - v73;
                v76 = v74;
                if (v74)
                  goto LABEL_146;
                v77 = &v51[16 * v53];
                v79 = *(_QWORD *)v77;
                v78 = *((_QWORD *)v77 + 1);
                v64 = __OFSUB__(v78, v79);
                v80 = v78 - v79;
                if (v64)
                  goto LABEL_149;
                if (__OFADD__(v75, v80))
                  goto LABEL_150;
                if (v75 + v80 < v56)
                  goto LABEL_102;
                v81 = v56 < v80;
              }
              if (v81)
                v53 = v65;
            }
            else
            {
              if (v14 == 3)
              {
                v55 = *((_QWORD *)v12 + 4);
                v54 = *((_QWORD *)v12 + 5);
                v64 = __OFSUB__(v54, v55);
                v56 = v54 - v55;
                v57 = v64;
                goto LABEL_90;
              }
              v82 = *((_QWORD *)v12 + 4);
              v83 = *((_QWORD *)v12 + 5);
              v64 = __OFSUB__(v83, v82);
              v75 = v83 - v82;
              v76 = v64;
LABEL_102:
              if ((v76 & 1) != 0)
                goto LABEL_145;
              v84 = &v51[16 * v53];
              v86 = *(_QWORD *)v84;
              v85 = *((_QWORD *)v84 + 1);
              v64 = __OFSUB__(v85, v86);
              v87 = v85 - v86;
              if (v64)
                goto LABEL_148;
              if (v87 < v75)
                goto LABEL_15;
            }
            v92 = v53 - 1;
            if (v53 - 1 >= v14)
            {
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
              goto LABEL_160;
            }
            if (!v11)
              goto LABEL_163;
            v93 = &v51[16 * v92];
            v94 = *(_QWORD *)v93;
            v95 = &v51[16 * v53];
            v96 = *((_QWORD *)v95 + 1);
            sub_1ABDF96B4((char *)(v11 + 144 * *(_QWORD *)v93), (char *)(v11 + 144 * *(_QWORD *)v95), v11 + 144 * v96, __dst);
            if (v113)
              goto LABEL_134;
            if (v96 < v94)
              goto LABEL_138;
            if (v53 > *((_QWORD *)v12 + 2))
              goto LABEL_139;
            *(_QWORD *)v93 = v94;
            *(_QWORD *)&v51[16 * v92 + 8] = v96;
            v97 = *((_QWORD *)v12 + 2);
            if (v53 >= v97)
              goto LABEL_140;
            v14 = v97 - 1;
            memmove(&v51[16 * v53], v95 + 16, 16 * (v97 - 1 - v53));
            *((_QWORD *)v12 + 2) = v97 - 1;
            v11 = v125;
            if (v97 <= 2)
              goto LABEL_15;
            continue;
          }
        }
        v14 = 1;
LABEL_15:
        v13 = v111;
        if (v10 >= v111)
        {
          v2 = v113;
          v9 = v106;
          goto LABEL_123;
        }
        goto LABEL_16;
      }
LABEL_27:
      v16 = v26;
    }
    sub_1ABD24804((uint64_t)v119);
LABEL_32:
    sub_1ABD64188(v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABD64188(v115, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABDFDD28((uint64_t)v117);
    if (v21)
    {
      v25 = v125;
LABEL_40:
      v10 = v26;
      if (v26 < v15)
        goto LABEL_161;
      goto LABEL_41;
    }
    v10 = v26 + 1;
    v25 = v125;
    if (v26 + 1 >= v13)
      goto LABEL_51;
    goto LABEL_27;
  }
  v25 = v125;
  if (v23 >= v24)
    goto LABEL_51;
LABEL_41:
  if (v15 >= v10)
    goto LABEL_51;
  v33 = 144 * v10 - 144;
  v34 = 144 * v15;
  v35 = v10;
  do
  {
    if (v15 != --v35)
    {
      if (!v25)
        goto LABEL_164;
      v36 = (void *)(v25 + v34);
      v37 = (const void *)(v25 + v33);
      sub_1ABD6414C(v25 + v34, (uint64_t)v117);
      memmove(v36, v37, 0x90uLL);
      sub_1ABD6414C((uint64_t)v117, (uint64_t)v37);
      v25 = v125;
      v13 = v111;
    }
    ++v15;
    v33 -= 144;
    v34 += 144;
  }
  while (v15 < v35);
  v15 = v108;
  if (v10 >= v13)
    goto LABEL_71;
LABEL_52:
  if (__OFSUB__(v10, v15))
    goto LABEL_157;
  if (v10 - v15 >= v107)
    goto LABEL_71;
  if (__OFADD__(v15, v107))
    goto LABEL_159;
  if (v15 + v107 >= v13)
    v38 = v13;
  else
    v38 = v15 + v107;
  if (v38 >= v15)
  {
    if (v10 != v38)
    {
      v39 = (_OWORD *)(v25 + 144 * v10);
      v109 = v38;
      v110 = v15 + 1;
      do
      {
        v40 = v110;
        for (i = v39; ; i -= 9)
        {
          sub_1ABD6414C((uint64_t)i, (uint64_t)v121);
          sub_1ABD6414C((uint64_t)(i - 9), (uint64_t)v122);
          sub_1ABD6414C((uint64_t)v121, (uint64_t)v123);
          sub_1ABD6414C((uint64_t)v122, (uint64_t)v124);
          sub_1ABD6414C((uint64_t)v121, (uint64_t)v117);
          if (sub_1ABD24814((uint64_t)v117) == 1)
            break;
          v42 = sub_1ABD24804((uint64_t)v117);
          sub_1ABD6414C((uint64_t)v122, (uint64_t)v120);
          v43 = sub_1ABD24814((uint64_t)v120);
          v44 = sub_1ABD24804((uint64_t)v120);
          sub_1ABD64188(v122, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
          sub_1ABD64188(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
          sub_1ABDFDD28((uint64_t)v123);
          if (v43 == 1 || *(double *)(v44 + 88) >= *(double *)(v42 + 88))
            goto LABEL_62;
          if (!v125)
            goto LABEL_162;
          sub_1ABD6414C((uint64_t)i, (uint64_t)v119);
          v45 = *(i - 2);
          i[6] = *(i - 3);
          i[7] = v45;
          i[8] = *(i - 1);
          v46 = *(i - 6);
          i[2] = *(i - 7);
          i[3] = v46;
          v47 = *(i - 4);
          i[4] = *(i - 5);
          i[5] = v47;
          v48 = *(i - 8);
          *i = *(i - 9);
          i[1] = v48;
          sub_1ABD6414C((uint64_t)v119, (uint64_t)(i - 9));
          if (v10 == v40)
            goto LABEL_62;
          ++v40;
        }
        sub_1ABD24804((uint64_t)v117);
        sub_1ABD64188(v122, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD64188(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABDFDD28((uint64_t)v123);
LABEL_62:
        ++v10;
        v39 += 9;
      }
      while (v10 != v109);
      v10 = v109;
      v15 = v108;
    }
    goto LABEL_71;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

uint64_t sub_1ABDF731C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;
  _OWORD *v39;
  uint64_t v40;
  _OWORD *i;
  uint64_t v42;
  int v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *__dst;
  uint64_t v113;
  _BYTE v114[144];
  _QWORD v115[18];
  _QWORD v116[18];
  _BYTE v117[144];
  uint64_t v118;
  _BYTE v119[144];
  _QWORD v120[18];
  _QWORD v121[18];
  _QWORD v122[18];
  _BYTE v123[144];
  _BYTE v124[152];
  uint64_t v125;

  v2 = v1;
  v4 = a1[1];
  result = sub_1ABF321E8();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_158;
    if (v4)
      return sub_1ABDF9028(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_166;
  v111 = v4;
  v107 = result;
  v105 = a1;
  if (v4 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v4 != 1)
    {
      v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_123:
      v106 = v9;
      if (v14 >= 2)
      {
        v99 = *v105;
        do
        {
          v100 = v14 - 2;
          if (v14 < 2)
            goto LABEL_153;
          if (!v99)
            goto LABEL_165;
          v101 = *(_QWORD *)&v12[16 * v100 + 32];
          v102 = *(_QWORD *)&v12[16 * v14 + 24];
          sub_1ABDF9B8C((char *)(v99 + 144 * v101), (char *)(v99 + 144 * *(_QWORD *)&v12[16 * v14 + 16]), v99 + 144 * v102, __dst);
          if (v2)
            break;
          if (v102 < v101)
            goto LABEL_154;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_1ABE8C050((uint64_t)v12);
          if (v100 >= *((_QWORD *)v12 + 2))
            goto LABEL_155;
          v103 = &v12[16 * v100 + 32];
          *(_QWORD *)v103 = v101;
          *((_QWORD *)v103 + 1) = v102;
          v104 = *((_QWORD *)v12 + 2);
          if (v14 > v104)
            goto LABEL_156;
          memmove(&v12[16 * v14 + 16], &v12[16 * v14 + 32], 16 * (v104 - v14));
          *((_QWORD *)v12 + 2) = v104 - 1;
          v14 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v106 = MEMORY[0x1E0DEE9D8];
    v113 = v1;
  }
  else
  {
    v113 = v1;
    v7 = v6 >> 1;
    v8 = sub_1ABF31A74();
    *(_QWORD *)(v8 + 16) = v7;
    v106 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v13 = v111;
  v125 = v11;
LABEL_16:
  v15 = v10;
  v16 = v10 + 1;
  v108 = v10;
  if (v10 + 1 >= v13)
  {
    ++v10;
    goto LABEL_71;
  }
  v17 = v11;
  sub_1ABD6414C(v11 + 144 * v16, (uint64_t)v120);
  sub_1ABD6414C(v17 + 144 * v15, (uint64_t)v121);
  sub_1ABD6414C((uint64_t)v120, (uint64_t)v123);
  sub_1ABD6414C((uint64_t)v121, (uint64_t)v124);
  sub_1ABD6414C((uint64_t)v120, (uint64_t)v122);
  if (sub_1ABD24814((uint64_t)v122) == 1)
  {
    sub_1ABD24804((uint64_t)v122);
LABEL_22:
    sub_1ABD64188(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABD64188(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABDFDD28((uint64_t)v123);
    v10 = v15 + 2;
    if (v15 + 2 >= v13)
      goto LABEL_71;
    v21 = 0;
    goto LABEL_26;
  }
  v18 = sub_1ABD24804((uint64_t)v122);
  sub_1ABD6414C((uint64_t)v121, (uint64_t)v117);
  v19 = sub_1ABD24814((uint64_t)v117);
  v20 = sub_1ABD24804((uint64_t)v117);
  if (v19 == 1)
  {
    v13 = v111;
    v15 = v108;
    goto LABEL_22;
  }
  v22 = v20;
  sub_1ABD64188(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  sub_1ABD64188(v120, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
  sub_1ABDFDD28((uint64_t)v123);
  v23 = *(double *)(v22 + 72);
  v24 = *(double *)(v18 + 72);
  v21 = v23 < v24;
  v15 = v108;
  v10 = v108 + 2;
  v13 = v111;
  if (v108 + 2 < v111)
  {
LABEL_26:
    v25 = v125;
    while (1)
    {
      v26 = v10;
      v27 = v25 + 144 * v10;
      v28 = v25;
      sub_1ABD6414C(v27, (uint64_t)v115);
      sub_1ABD6414C(v28 + 144 * v16, (uint64_t)v116);
      sub_1ABD6414C((uint64_t)v115, (uint64_t)v117);
      sub_1ABD6414C((uint64_t)v116, (uint64_t)&v118);
      sub_1ABD6414C((uint64_t)v115, (uint64_t)v119);
      if (sub_1ABD24814((uint64_t)v119) == 1)
        break;
      v29 = sub_1ABD24804((uint64_t)v119);
      sub_1ABD6414C((uint64_t)v116, (uint64_t)v114);
      v30 = sub_1ABD24814((uint64_t)v114);
      v31 = sub_1ABD24804((uint64_t)v114);
      if (v30 == 1)
      {
        v13 = v111;
        v15 = v108;
        goto LABEL_32;
      }
      v32 = v31;
      sub_1ABD64188(v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABD64188(v115, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABDFDD28((uint64_t)v117);
      if (((v21 ^ (*(double *)(v32 + 72) >= *(double *)(v29 + 72))) & 1) == 0)
      {
        v13 = v111;
        v25 = v125;
        v15 = v108;
        if (!v21)
        {
          v10 = v26;
          if (v26 >= v111)
            goto LABEL_71;
          goto LABEL_52;
        }
        goto LABEL_40;
      }
      v10 = v26 + 1;
      v13 = v111;
      v25 = v125;
      v15 = v108;
      if (v26 + 1 >= v111)
      {
        ++v26;
        if (v21)
          goto LABEL_40;
LABEL_51:
        if (v10 < v13)
          goto LABEL_52;
LABEL_71:
        if (v10 < v15)
          goto LABEL_152;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1ABE8BC6C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        v50 = *((_QWORD *)v12 + 2);
        v49 = *((_QWORD *)v12 + 3);
        v14 = v50 + 1;
        v11 = v125;
        if (v50 >= v49 >> 1)
        {
          v98 = sub_1ABE8BC6C((char *)(v49 > 1), v50 + 1, 1, v12);
          v11 = v125;
          v12 = v98;
        }
        *((_QWORD *)v12 + 2) = v14;
        v51 = v12 + 32;
        v52 = &v12[16 * v50 + 32];
        *(_QWORD *)v52 = v15;
        *((_QWORD *)v52 + 1) = v10;
        if (v50)
        {
          while (2)
          {
            v53 = v14 - 1;
            if (v14 >= 4)
            {
              v58 = &v51[16 * v14];
              v59 = *((_QWORD *)v58 - 8);
              v60 = *((_QWORD *)v58 - 7);
              v64 = __OFSUB__(v60, v59);
              v61 = v60 - v59;
              if (v64)
                goto LABEL_141;
              v63 = *((_QWORD *)v58 - 6);
              v62 = *((_QWORD *)v58 - 5);
              v64 = __OFSUB__(v62, v63);
              v56 = v62 - v63;
              v57 = v64;
              if (v64)
                goto LABEL_142;
              v65 = v14 - 2;
              v66 = &v51[16 * v14 - 32];
              v68 = *(_QWORD *)v66;
              v67 = *((_QWORD *)v66 + 1);
              v64 = __OFSUB__(v67, v68);
              v69 = v67 - v68;
              if (v64)
                goto LABEL_144;
              v64 = __OFADD__(v56, v69);
              v70 = v56 + v69;
              if (v64)
                goto LABEL_147;
              if (v70 >= v61)
              {
                v88 = &v51[16 * v53];
                v90 = *(_QWORD *)v88;
                v89 = *((_QWORD *)v88 + 1);
                v64 = __OFSUB__(v89, v90);
                v91 = v89 - v90;
                if (v64)
                  goto LABEL_151;
                v81 = v56 < v91;
              }
              else
              {
LABEL_90:
                if ((v57 & 1) != 0)
                  goto LABEL_143;
                v65 = v14 - 2;
                v71 = &v51[16 * v14 - 32];
                v73 = *(_QWORD *)v71;
                v72 = *((_QWORD *)v71 + 1);
                v74 = __OFSUB__(v72, v73);
                v75 = v72 - v73;
                v76 = v74;
                if (v74)
                  goto LABEL_146;
                v77 = &v51[16 * v53];
                v79 = *(_QWORD *)v77;
                v78 = *((_QWORD *)v77 + 1);
                v64 = __OFSUB__(v78, v79);
                v80 = v78 - v79;
                if (v64)
                  goto LABEL_149;
                if (__OFADD__(v75, v80))
                  goto LABEL_150;
                if (v75 + v80 < v56)
                  goto LABEL_102;
                v81 = v56 < v80;
              }
              if (v81)
                v53 = v65;
            }
            else
            {
              if (v14 == 3)
              {
                v55 = *((_QWORD *)v12 + 4);
                v54 = *((_QWORD *)v12 + 5);
                v64 = __OFSUB__(v54, v55);
                v56 = v54 - v55;
                v57 = v64;
                goto LABEL_90;
              }
              v82 = *((_QWORD *)v12 + 4);
              v83 = *((_QWORD *)v12 + 5);
              v64 = __OFSUB__(v83, v82);
              v75 = v83 - v82;
              v76 = v64;
LABEL_102:
              if ((v76 & 1) != 0)
                goto LABEL_145;
              v84 = &v51[16 * v53];
              v86 = *(_QWORD *)v84;
              v85 = *((_QWORD *)v84 + 1);
              v64 = __OFSUB__(v85, v86);
              v87 = v85 - v86;
              if (v64)
                goto LABEL_148;
              if (v87 < v75)
                goto LABEL_15;
            }
            v92 = v53 - 1;
            if (v53 - 1 >= v14)
            {
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
              goto LABEL_160;
            }
            if (!v11)
              goto LABEL_163;
            v93 = &v51[16 * v92];
            v94 = *(_QWORD *)v93;
            v95 = &v51[16 * v53];
            v96 = *((_QWORD *)v95 + 1);
            sub_1ABDF9B8C((char *)(v11 + 144 * *(_QWORD *)v93), (char *)(v11 + 144 * *(_QWORD *)v95), v11 + 144 * v96, __dst);
            if (v113)
              goto LABEL_134;
            if (v96 < v94)
              goto LABEL_138;
            if (v53 > *((_QWORD *)v12 + 2))
              goto LABEL_139;
            *(_QWORD *)v93 = v94;
            *(_QWORD *)&v51[16 * v92 + 8] = v96;
            v97 = *((_QWORD *)v12 + 2);
            if (v53 >= v97)
              goto LABEL_140;
            v14 = v97 - 1;
            memmove(&v51[16 * v53], v95 + 16, 16 * (v97 - 1 - v53));
            *((_QWORD *)v12 + 2) = v97 - 1;
            v11 = v125;
            if (v97 <= 2)
              goto LABEL_15;
            continue;
          }
        }
        v14 = 1;
LABEL_15:
        v13 = v111;
        if (v10 >= v111)
        {
          v2 = v113;
          v9 = v106;
          goto LABEL_123;
        }
        goto LABEL_16;
      }
LABEL_27:
      v16 = v26;
    }
    sub_1ABD24804((uint64_t)v119);
LABEL_32:
    sub_1ABD64188(v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABD64188(v115, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABDFDD28((uint64_t)v117);
    if (v21)
    {
      v25 = v125;
LABEL_40:
      v10 = v26;
      if (v26 < v15)
        goto LABEL_161;
      goto LABEL_41;
    }
    v10 = v26 + 1;
    v25 = v125;
    if (v26 + 1 >= v13)
      goto LABEL_51;
    goto LABEL_27;
  }
  v25 = v125;
  if (v23 >= v24)
    goto LABEL_51;
LABEL_41:
  if (v15 >= v10)
    goto LABEL_51;
  v33 = 144 * v10 - 144;
  v34 = 144 * v15;
  v35 = v10;
  do
  {
    if (v15 != --v35)
    {
      if (!v25)
        goto LABEL_164;
      v36 = (void *)(v25 + v34);
      v37 = (const void *)(v25 + v33);
      sub_1ABD6414C(v25 + v34, (uint64_t)v117);
      memmove(v36, v37, 0x90uLL);
      sub_1ABD6414C((uint64_t)v117, (uint64_t)v37);
      v25 = v125;
      v13 = v111;
    }
    ++v15;
    v33 -= 144;
    v34 += 144;
  }
  while (v15 < v35);
  v15 = v108;
  if (v10 >= v13)
    goto LABEL_71;
LABEL_52:
  if (__OFSUB__(v10, v15))
    goto LABEL_157;
  if (v10 - v15 >= v107)
    goto LABEL_71;
  if (__OFADD__(v15, v107))
    goto LABEL_159;
  if (v15 + v107 >= v13)
    v38 = v13;
  else
    v38 = v15 + v107;
  if (v38 >= v15)
  {
    if (v10 != v38)
    {
      v39 = (_OWORD *)(v25 + 144 * v10);
      v109 = v38;
      v110 = v15 + 1;
      do
      {
        v40 = v110;
        for (i = v39; ; i -= 9)
        {
          sub_1ABD6414C((uint64_t)i, (uint64_t)v121);
          sub_1ABD6414C((uint64_t)(i - 9), (uint64_t)v122);
          sub_1ABD6414C((uint64_t)v121, (uint64_t)v123);
          sub_1ABD6414C((uint64_t)v122, (uint64_t)v124);
          sub_1ABD6414C((uint64_t)v121, (uint64_t)v117);
          if (sub_1ABD24814((uint64_t)v117) == 1)
            break;
          v42 = sub_1ABD24804((uint64_t)v117);
          sub_1ABD6414C((uint64_t)v122, (uint64_t)v120);
          v43 = sub_1ABD24814((uint64_t)v120);
          v44 = sub_1ABD24804((uint64_t)v120);
          sub_1ABD64188(v122, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
          sub_1ABD64188(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
          sub_1ABDFDD28((uint64_t)v123);
          if (v43 == 1 || *(double *)(v44 + 72) >= *(double *)(v42 + 72))
            goto LABEL_62;
          if (!v125)
            goto LABEL_162;
          sub_1ABD6414C((uint64_t)i, (uint64_t)v119);
          v45 = *(i - 2);
          i[6] = *(i - 3);
          i[7] = v45;
          i[8] = *(i - 1);
          v46 = *(i - 6);
          i[2] = *(i - 7);
          i[3] = v46;
          v47 = *(i - 4);
          i[4] = *(i - 5);
          i[5] = v47;
          v48 = *(i - 8);
          *i = *(i - 9);
          i[1] = v48;
          sub_1ABD6414C((uint64_t)v119, (uint64_t)(i - 9));
          if (v10 == v40)
            goto LABEL_62;
          ++v40;
        }
        sub_1ABD24804((uint64_t)v117);
        sub_1ABD64188(v122, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD64188(v121, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABDFDD28((uint64_t)v123);
LABEL_62:
        ++v10;
        v39 += 9;
      }
      while (v10 != v109);
      v10 = v109;
      v15 = v108;
    }
    goto LABEL_71;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

void sub_1ABDF7D70(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  char *v46;
  _QWORD *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  id v52;
  void *v53;
  char *v54;
  char *v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t i;
  void *v61;
  id v62;
  void *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  void (*v67)(uint64_t, char *, uint64_t);
  uint64_t v68;
  unsigned int (*v69)(uint64_t, uint64_t, uint64_t);
  id v70;
  void *v71;
  char *v72;
  uint64_t v73;
  unsigned int v74;
  char *v75;
  char *v76;
  int v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const void *v85;
  uint64_t v86;
  _OWORD *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  id v91;
  void *v92;
  char *v93;
  _QWORD *v94;
  void (*v95)(char *, char *, uint64_t);
  void (*v96)(uint64_t, _QWORD, uint64_t, uint64_t);
  unsigned int (*v97)(uint64_t, uint64_t, uint64_t);
  id v98;
  void *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char v105;
  void (*v106)(char *, uint64_t);
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  BOOL v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  BOOL v138;
  uint64_t v139;
  char v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  BOOL v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t *v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _OWORD *v189;
  unint64_t v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  void (*v197)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v198;
  char *v199;
  char *v200;
  _BYTE v201[144];
  _QWORD v202[18];
  _QWORD v203[18];
  _BYTE v204[144];
  _QWORD v205[18];
  _QWORD v206[18];
  _BYTE v207[152];
  _QWORD *v208;

  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v172 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v172 - v7;
  MEMORY[0x1E0C80A78](v9);
  v182 = (char *)&v172 - v10;
  MEMORY[0x1E0C80A78](v11);
  v183 = (char *)&v172 - v12;
  MEMORY[0x1E0C80A78](v13);
  v176 = (char *)&v172 - v14;
  MEMORY[0x1E0C80A78](v15);
  v180 = (char *)&v172 - v16;
  v17 = sub_1ABF30760();
  v208 = *(_QWORD **)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v193 = (char *)&v172 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v199 = (char *)&v172 - v20;
  MEMORY[0x1E0C80A78](v21);
  v179 = (char *)&v172 - v22;
  MEMORY[0x1E0C80A78](v23);
  v184 = (char *)&v172 - v24;
  MEMORY[0x1E0C80A78](v25);
  v174 = (char *)&v172 - v26;
  MEMORY[0x1E0C80A78](v27);
  v200 = (char *)&v172 - v28;
  MEMORY[0x1E0C80A78](v29);
  v177 = (char *)&v172 - v30;
  v181 = a1;
  v31 = a1[1];
  v32 = sub_1ABF321E8();
  if (v32 >= v31)
  {
    if (v31 < 0)
      goto LABEL_168;
    if (v31)
      sub_1ABDF9208(0, v31, 1, v181);
    return;
  }
  if (v31 >= 0)
    v33 = v31;
  else
    v33 = v31 + 1;
  if (v31 < -1)
    goto LABEL_176;
  v188 = v31;
  v175 = v32;
  v192 = v1;
  if (v31 < 2)
  {
    v36 = MEMORY[0x1E0DEE9D8];
    v190 = MEMORY[0x1E0DEE9D8] + 32;
    if (v31 != 1)
    {
      v40 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v38 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_133:
      v173 = v36;
      if (v40 >= 2)
      {
        v164 = *v181;
        do
        {
          v165 = v40 - 2;
          if (v40 < 2)
            goto LABEL_163;
          if (!v164)
            goto LABEL_175;
          v166 = v38;
          v167 = *(_QWORD *)&v38[16 * v165 + 32];
          v168 = *(_QWORD *)&v38[16 * v40 + 24];
          v169 = v192;
          sub_1ABDFA064((char *)(v164 + 144 * v167), (char *)(v164 + 144 * *(_QWORD *)&v38[16 * v40 + 16]), (char *)(v164 + 144 * v168), v190);
          v192 = v169;
          if (v169)
            break;
          if (v168 < v167)
            goto LABEL_164;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v166 = sub_1ABE8C050((uint64_t)v166);
          if (v165 >= *((_QWORD *)v166 + 2))
            goto LABEL_165;
          v170 = &v166[16 * v165 + 32];
          *(_QWORD *)v170 = v167;
          *((_QWORD *)v170 + 1) = v168;
          v171 = *((_QWORD *)v166 + 2);
          if (v40 > v171)
            goto LABEL_166;
          memmove(&v166[16 * v40 + 16], &v166[16 * v40 + 32], 16 * (v171 - v40));
          v38 = v166;
          *((_QWORD *)v166 + 2) = v171 - 1;
          v40 = v171 - 1;
        }
        while (v171 > 2);
      }
LABEL_144:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v173 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v173 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v34 = v33 >> 1;
    v35 = sub_1ABF31A74();
    *(_QWORD *)(v35 + 16) = v34;
    v173 = v35;
    v190 = v35 + 32;
  }
  v37 = 0;
  v196 = *v181;
  v172 = v196 + 144;
  v38 = (char *)MEMORY[0x1E0DEE9D8];
  v194 = v5;
  v195 = v8;
  v178 = v17;
  v39 = v188;
  while (1)
  {
    v191 = v38;
    v185 = v37;
    v187 = v37 + 1;
    if (v37 + 1 >= v39)
    {
      v58 = v37 + 1;
      goto LABEL_57;
    }
    v41 = v196;
    sub_1ABD6414C(v196 + 144 * (v37 + 1), (uint64_t)v205);
    sub_1ABD6414C(v41 + 144 * v37, (uint64_t)v206);
    sub_1ABD6414C((uint64_t)v205, (uint64_t)v207);
    sub_1ABD24814((uint64_t)v207);
    v42 = *(void **)sub_1ABD24804((uint64_t)v207);
    sub_1ABD64188(v206, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABD64188(v205, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    v43 = objc_msgSend(v42, sel_publishDate);
    v44 = (uint64_t)v183;
    if (v43)
    {
      v45 = v43;
      v46 = v200;
      sub_1ABF30724();

      v47 = v208;
      v48 = (void (*)(char *, char *, uint64_t))v208[4];
      v49 = (uint64_t)v180;
      v48(v180, v46, v17);
      v50 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v47[7];
      v50(v49, 0, 1, v17);
      v51 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v47[6];
      if (v51(v49, 1, v17) != 1)
      {
        v48(v177, (char *)v49, v17);
        sub_1ABD6414C((uint64_t)v206, (uint64_t)v204);
        sub_1ABD24814((uint64_t)v204);
        v52 = objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v204), sel_publishDate);
        if (v52)
        {
          v53 = v52;
          v54 = v200;
          sub_1ABF30724();

          v49 = (uint64_t)v176;
          v48(v176, v54, v17);
          v50(v49, 0, 1, v17);
          if (v51(v49, 1, v17) != 1)
          {
            v55 = v174;
            v48(v174, (char *)v49, v17);
            v56 = v177;
            LODWORD(v198) = sub_1ABF306E8();
            v57 = (void (*)(char *, uint64_t))v208[1];
            v57(v55, v17);
            v57(v56, v17);
            sub_1ABD64188(v206, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
            sub_1ABD64188(v205, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
            goto LABEL_27;
          }
        }
        else
        {
          v49 = (uint64_t)v176;
          v50((uint64_t)v176, 1, 1, v17);
        }
        ((void (*)(char *, uint64_t))v208[1])(v177, v17);
      }
    }
    else
    {
      v50 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v208[7];
      v49 = (uint64_t)v180;
      v50((uint64_t)v180, 1, 1, v17);
    }
    sub_1ABCFC3BC(v49, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABD64188(v206, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
    sub_1ABD64188(v205, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
    LODWORD(v198) = 0;
LABEL_27:
    if (v185 + 2 < v188)
    {
      v59 = v172 + 144 * v185;
      for (i = v185 + 3; ; ++i)
      {
        sub_1ABD6414C(v59 + 144, (uint64_t)v202);
        sub_1ABD6414C(v59, (uint64_t)v203);
        sub_1ABD6414C((uint64_t)v202, (uint64_t)v204);
        sub_1ABD24814((uint64_t)v204);
        v61 = *(void **)sub_1ABD24804((uint64_t)v204);
        sub_1ABD64188(v203, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD64188(v202, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        v62 = objc_msgSend(v61, sel_publishDate);
        if (!v62)
        {
          v50(v44, 1, 1, v17);
LABEL_33:
          sub_1ABCFC3BC(v44, (uint64_t (*)(_QWORD))sub_1ABD226F0);
          sub_1ABD64188(v203, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
          sub_1ABD64188(v202, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
          if ((v198 & 1) != 0)
            goto LABEL_47;
          goto LABEL_41;
        }
        v63 = v62;
        v64 = v200;
        sub_1ABF30724();

        v65 = v44;
        v66 = v208;
        v67 = (void (*)(uint64_t, char *, uint64_t))v208[4];
        v67(v65, v64, v17);
        v50(v65, 0, 1, v17);
        v68 = v17;
        v69 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v66[6];
        if (v69(v65, 1, v68) == 1)
        {
          v44 = v65;
          v17 = v68;
          goto LABEL_33;
        }
        v67((uint64_t)v184, (char *)v65, v68);
        sub_1ABD6414C((uint64_t)v203, (uint64_t)v201);
        sub_1ABD24814((uint64_t)v201);
        v70 = objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v201), sel_publishDate);
        if (!v70)
          break;
        v71 = v70;
        v72 = v200;
        sub_1ABF30724();

        v73 = (uint64_t)v182;
        v67((uint64_t)v182, v72, v68);
        v50(v73, 0, 1, v68);
        v74 = v69(v73, 1, v68);
        v17 = v68;
        if (v74 == 1)
          goto LABEL_40;
        v75 = v179;
        v67((uint64_t)v179, (char *)v73, v68);
        v76 = v184;
        v77 = sub_1ABF306E8();
        v78 = (void (*)(char *, uint64_t))v208[1];
        v78(v75, v17);
        v78(v76, v17);
        sub_1ABD64188(v203, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        sub_1ABD64188(v202, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        v44 = (uint64_t)v183;
        if (((v198 ^ v77) & 1) != 0)
        {
          v58 = i - 1;
          v39 = v188;
          if ((v198 & 1) != 0)
            goto LABEL_48;
          goto LABEL_57;
        }
LABEL_41:
        if (v188 == i)
        {
          v39 = v188;
          v58 = v188;
          if ((v198 & 1) != 0)
            goto LABEL_48;
          goto LABEL_57;
        }
        v59 += 144;
      }
      v73 = (uint64_t)v182;
      v50((uint64_t)v182, 1, 1, v68);
      v17 = v68;
LABEL_40:
      ((void (*)(char *, uint64_t))v208[1])(v184, v17);
      sub_1ABCFC3BC(v73, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      sub_1ABD64188(v203, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      sub_1ABD64188(v202, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      v44 = (uint64_t)v183;
      if ((v198 & 1) != 0)
      {
LABEL_47:
        v58 = i - 1;
        v39 = v188;
        goto LABEL_48;
      }
      goto LABEL_41;
    }
    v39 = v188;
    v58 = v185 + 2;
    if ((v198 & 1) != 0)
    {
LABEL_48:
      v79 = v185;
      if (v58 < v185)
        goto LABEL_169;
      if (v185 < v58)
      {
        v80 = 144 * v58 - 144;
        v81 = v58;
        v82 = 144 * v185;
        v83 = v81;
        do
        {
          if (v79 != --v81)
          {
            if (!v196)
              goto LABEL_174;
            v84 = (void *)(v196 + v82);
            v85 = (const void *)(v196 + v80);
            sub_1ABD6414C(v196 + v82, (uint64_t)v204);
            memmove(v84, v85, 0x90uLL);
            sub_1ABD6414C((uint64_t)v204, (uint64_t)v85);
          }
          ++v79;
          v80 -= 144;
          v82 += 144;
        }
        while (v79 < v81);
        v17 = v178;
        v39 = v188;
        v58 = v83;
      }
    }
LABEL_57:
    if (v58 >= v39)
      goto LABEL_82;
    if (__OFSUB__(v58, v185))
      goto LABEL_167;
    if (v58 - v185 >= v175)
      goto LABEL_82;
    if (__OFADD__(v185, v175))
      goto LABEL_170;
    v86 = v185 + v175 >= v39 ? v39 : v185 + v175;
    if (v86 < v185)
      break;
    if (v58 != v86)
    {
      v87 = (_OWORD *)(v196 + 144 * v58);
      v186 = v86;
      do
      {
        v89 = v187;
        v189 = v87;
        while (1)
        {
          sub_1ABD6414C((uint64_t)v87, (uint64_t)v205);
          sub_1ABD6414C((uint64_t)(v87 - 9), (uint64_t)v206);
          sub_1ABD6414C((uint64_t)v205, (uint64_t)v207);
          sub_1ABD24814((uint64_t)v207);
          v90 = *(void **)sub_1ABD24804((uint64_t)v207);
          sub_1ABD64188(v206, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
          sub_1ABD64188(v205, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
          v91 = objc_msgSend(v90, sel_publishDate);
          if (!v91)
          {
            v88 = (uint64_t)v195;
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v208[7])(v195, 1, 1, v17);
            goto LABEL_68;
          }
          v92 = v91;
          v198 = v89;
          v93 = v200;
          sub_1ABF30724();

          v94 = v208;
          v95 = (void (*)(char *, char *, uint64_t))v208[4];
          v88 = (uint64_t)v195;
          v95(v195, v93, v17);
          v96 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v94[7];
          v96(v88, 0, 1, v17);
          v97 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v94[6];
          if (v97(v88, 1, v17) == 1)
            goto LABEL_68;
          v95(v199, (char *)v88, v17);
          sub_1ABD6414C((uint64_t)v206, (uint64_t)v204);
          sub_1ABD24814((uint64_t)v204);
          v98 = objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v204), sel_publishDate);
          if (!v98)
            break;
          v99 = v98;
          v197 = v96;
          v100 = v58;
          v101 = v200;
          sub_1ABF30724();

          v88 = (uint64_t)v194;
          v102 = v101;
          v58 = v100;
          v95(v194, v102, v17);
          v197(v88, 0, 1, v17);
          if (v97(v88, 1, v17) == 1)
            goto LABEL_80;
          v103 = v193;
          v95(v193, (char *)v88, v17);
          v104 = v199;
          v105 = sub_1ABF306E8();
          v106 = (void (*)(char *, uint64_t))v208[1];
          v106(v103, v17);
          v106(v104, v17);
          sub_1ABD64188(v206, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
          sub_1ABD64188(v205, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
          if ((v105 & 1) == 0)
            goto LABEL_69;
          if (!v196)
            goto LABEL_172;
          sub_1ABD6414C((uint64_t)v87, (uint64_t)v203);
          v107 = *(v87 - 2);
          v87[6] = *(v87 - 3);
          v87[7] = v107;
          v87[8] = *(v87 - 1);
          v108 = *(v87 - 6);
          v87[2] = *(v87 - 7);
          v87[3] = v108;
          v109 = *(v87 - 4);
          v87[4] = *(v87 - 5);
          v87[5] = v109;
          v110 = *(v87 - 8);
          *v87 = *(v87 - 9);
          v87[1] = v110;
          sub_1ABD6414C((uint64_t)v203, (uint64_t)(v87 - 9));
          if (v58 == v198)
            goto LABEL_69;
          v89 = v198 + 1;
          v87 -= 9;
        }
        v88 = (uint64_t)v194;
        v96((uint64_t)v194, 1, 1, v17);
LABEL_80:
        ((void (*)(char *, uint64_t))v208[1])(v199, v17);
LABEL_68:
        sub_1ABCFC3BC(v88, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        sub_1ABD64188(v206, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        sub_1ABD64188(v205, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
LABEL_69:
        ++v58;
        v87 = v189 + 9;
      }
      while (v58 != v186);
      v58 = v186;
    }
LABEL_82:
    v111 = v185;
    if (v58 < v185)
      goto LABEL_162;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v38 = v191;
    else
      v38 = sub_1ABE8BC6C(0, *((_QWORD *)v191 + 2) + 1, 1, v191);
    v113 = *((_QWORD *)v38 + 2);
    v112 = *((_QWORD *)v38 + 3);
    v40 = v113 + 1;
    v198 = v58;
    if (v113 >= v112 >> 1)
      v38 = sub_1ABE8BC6C((char *)(v112 > 1), v113 + 1, 1, v38);
    *((_QWORD *)v38 + 2) = v40;
    v114 = v38 + 32;
    v115 = &v38[16 * v113 + 32];
    v116 = v198;
    *(_QWORD *)v115 = v111;
    *((_QWORD *)v115 + 1) = v116;
    if (v113)
    {
      while (1)
      {
        v117 = v40 - 1;
        if (v40 >= 4)
        {
          v122 = &v114[16 * v40];
          v123 = *((_QWORD *)v122 - 8);
          v124 = *((_QWORD *)v122 - 7);
          v128 = __OFSUB__(v124, v123);
          v125 = v124 - v123;
          if (v128)
            goto LABEL_151;
          v127 = *((_QWORD *)v122 - 6);
          v126 = *((_QWORD *)v122 - 5);
          v128 = __OFSUB__(v126, v127);
          v120 = v126 - v127;
          v121 = v128;
          if (v128)
            goto LABEL_152;
          v129 = v40 - 2;
          v130 = &v114[16 * v40 - 32];
          v132 = *(_QWORD *)v130;
          v131 = *((_QWORD *)v130 + 1);
          v128 = __OFSUB__(v131, v132);
          v133 = v131 - v132;
          if (v128)
            goto LABEL_154;
          v128 = __OFADD__(v120, v133);
          v134 = v120 + v133;
          if (v128)
            goto LABEL_157;
          if (v134 >= v125)
          {
            v152 = &v114[16 * v117];
            v154 = *(_QWORD *)v152;
            v153 = *((_QWORD *)v152 + 1);
            v128 = __OFSUB__(v153, v154);
            v155 = v153 - v154;
            if (v128)
              goto LABEL_161;
            v145 = v120 < v155;
            goto LABEL_119;
          }
        }
        else
        {
          if (v40 != 3)
          {
            v146 = *((_QWORD *)v38 + 4);
            v147 = *((_QWORD *)v38 + 5);
            v128 = __OFSUB__(v147, v146);
            v139 = v147 - v146;
            v140 = v128;
            goto LABEL_113;
          }
          v119 = *((_QWORD *)v38 + 4);
          v118 = *((_QWORD *)v38 + 5);
          v128 = __OFSUB__(v118, v119);
          v120 = v118 - v119;
          v121 = v128;
        }
        if ((v121 & 1) != 0)
          goto LABEL_153;
        v129 = v40 - 2;
        v135 = &v114[16 * v40 - 32];
        v137 = *(_QWORD *)v135;
        v136 = *((_QWORD *)v135 + 1);
        v138 = __OFSUB__(v136, v137);
        v139 = v136 - v137;
        v140 = v138;
        if (v138)
          goto LABEL_156;
        v141 = &v114[16 * v117];
        v143 = *(_QWORD *)v141;
        v142 = *((_QWORD *)v141 + 1);
        v128 = __OFSUB__(v142, v143);
        v144 = v142 - v143;
        if (v128)
          goto LABEL_159;
        if (__OFADD__(v139, v144))
          goto LABEL_160;
        if (v139 + v144 >= v120)
        {
          v145 = v120 < v144;
LABEL_119:
          if (v145)
            v117 = v129;
          goto LABEL_121;
        }
LABEL_113:
        if ((v140 & 1) != 0)
          goto LABEL_155;
        v148 = &v114[16 * v117];
        v150 = *(_QWORD *)v148;
        v149 = *((_QWORD *)v148 + 1);
        v128 = __OFSUB__(v149, v150);
        v151 = v149 - v150;
        if (v128)
          goto LABEL_158;
        if (v151 < v139)
          goto LABEL_15;
LABEL_121:
        v156 = v117 - 1;
        if (v117 - 1 >= v40)
        {
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
          goto LABEL_171;
        }
        if (!v196)
          goto LABEL_173;
        v157 = v38;
        v158 = &v114[16 * v156];
        v159 = *(_QWORD *)v158;
        v160 = &v114[16 * v117];
        v161 = *((_QWORD *)v160 + 1);
        v162 = v192;
        sub_1ABDFA064((char *)(v196 + 144 * *(_QWORD *)v158), (char *)(v196 + 144 * *(_QWORD *)v160), (char *)(v196 + 144 * v161), v190);
        v192 = v162;
        if (v162)
          goto LABEL_144;
        if (v161 < v159)
          goto LABEL_148;
        if (v117 > *((_QWORD *)v157 + 2))
          goto LABEL_149;
        *(_QWORD *)v158 = v159;
        *(_QWORD *)&v114[16 * v156 + 8] = v161;
        v163 = *((_QWORD *)v157 + 2);
        if (v117 >= v163)
          goto LABEL_150;
        v40 = v163 - 1;
        memmove(&v114[16 * v117], v160 + 16, 16 * (v163 - 1 - v117));
        v38 = v157;
        *((_QWORD *)v157 + 2) = v163 - 1;
        if (v163 <= 2)
          goto LABEL_15;
      }
    }
    v40 = 1;
LABEL_15:
    v39 = v188;
    v37 = v198;
    v17 = v178;
    if (v198 >= v188)
    {
      v36 = v173;
      goto LABEL_133;
    }
  }
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  sub_1ABF31FC0();
  __break(1u);
}

uint64_t sub_1ABDF8E48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _OWORD *v16;
  _BYTE v17[144];
  _BYTE v18[144];
  _QWORD v19[18];
  _QWORD v20[18];
  _BYTE v21[144];
  uint64_t v22;
  _BYTE v23[152];
  uint64_t v24;

  if (a3 != a2)
  {
    v4 = a3;
    v24 = *a4;
    v5 = (_OWORD *)(v24 + 144 * a3);
    v14 = result + 1;
LABEL_6:
    v6 = v14;
    v16 = v5;
    while (1)
    {
      sub_1ABD6414C((uint64_t)v5, (uint64_t)v19);
      sub_1ABD6414C((uint64_t)(v5 - 9), (uint64_t)v20);
      sub_1ABD6414C((uint64_t)v19, (uint64_t)v21);
      sub_1ABD6414C((uint64_t)v20, (uint64_t)&v22);
      sub_1ABD6414C((uint64_t)v19, (uint64_t)v23);
      if (sub_1ABD24814((uint64_t)v23) == 1)
      {
        sub_1ABD24804((uint64_t)v23);
        sub_1ABD64188(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD64188(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        result = sub_1ABDFDD28((uint64_t)v21);
LABEL_5:
        ++v4;
        v5 = v16 + 9;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
      v7 = sub_1ABD24804((uint64_t)v23);
      sub_1ABD6414C((uint64_t)v20, (uint64_t)v18);
      v8 = sub_1ABD24814((uint64_t)v18);
      v9 = sub_1ABD24804((uint64_t)v18);
      sub_1ABD64188(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABD64188(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      result = sub_1ABDFDD28((uint64_t)v21);
      if (v8 == 1 || *(double *)(v9 + 88) >= *(double *)(v7 + 88))
        goto LABEL_5;
      if (!v24)
        break;
      sub_1ABD6414C((uint64_t)v5, (uint64_t)v17);
      v10 = *(v5 - 2);
      v5[6] = *(v5 - 3);
      v5[7] = v10;
      v5[8] = *(v5 - 1);
      v11 = *(v5 - 6);
      v5[2] = *(v5 - 7);
      v5[3] = v11;
      v12 = *(v5 - 4);
      v5[4] = *(v5 - 5);
      v5[5] = v12;
      v13 = *(v5 - 8);
      *v5 = *(v5 - 9);
      v5[1] = v13;
      result = sub_1ABD6414C((uint64_t)v17, (uint64_t)(v5 - 9));
      if (v4 == v6)
        goto LABEL_5;
      ++v6;
      v5 -= 9;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1ABDF9028(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _OWORD *v16;
  _BYTE v17[144];
  _BYTE v18[144];
  _QWORD v19[18];
  _QWORD v20[18];
  _BYTE v21[144];
  uint64_t v22;
  _BYTE v23[152];
  uint64_t v24;

  if (a3 != a2)
  {
    v4 = a3;
    v24 = *a4;
    v5 = (_OWORD *)(v24 + 144 * a3);
    v14 = result + 1;
LABEL_6:
    v6 = v14;
    v16 = v5;
    while (1)
    {
      sub_1ABD6414C((uint64_t)v5, (uint64_t)v19);
      sub_1ABD6414C((uint64_t)(v5 - 9), (uint64_t)v20);
      sub_1ABD6414C((uint64_t)v19, (uint64_t)v21);
      sub_1ABD6414C((uint64_t)v20, (uint64_t)&v22);
      sub_1ABD6414C((uint64_t)v19, (uint64_t)v23);
      if (sub_1ABD24814((uint64_t)v23) == 1)
      {
        sub_1ABD24804((uint64_t)v23);
        sub_1ABD64188(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD64188(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        result = sub_1ABDFDD28((uint64_t)v21);
LABEL_5:
        ++v4;
        v5 = v16 + 9;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
      v7 = sub_1ABD24804((uint64_t)v23);
      sub_1ABD6414C((uint64_t)v20, (uint64_t)v18);
      v8 = sub_1ABD24814((uint64_t)v18);
      v9 = sub_1ABD24804((uint64_t)v18);
      sub_1ABD64188(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABD64188(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      result = sub_1ABDFDD28((uint64_t)v21);
      if (v8 == 1 || *(double *)(v9 + 72) >= *(double *)(v7 + 72))
        goto LABEL_5;
      if (!v24)
        break;
      sub_1ABD6414C((uint64_t)v5, (uint64_t)v17);
      v10 = *(v5 - 2);
      v5[6] = *(v5 - 3);
      v5[7] = v10;
      v5[8] = *(v5 - 1);
      v11 = *(v5 - 6);
      v5[2] = *(v5 - 7);
      v5[3] = v11;
      v12 = *(v5 - 4);
      v5[4] = *(v5 - 5);
      v5[5] = v12;
      v13 = *(v5 - 8);
      *v5 = *(v5 - 9);
      v5[1] = v13;
      result = sub_1ABD6414C((uint64_t)v17, (uint64_t)(v5 - 9));
      if (v4 == v6)
        goto LABEL_5;
      ++v6;
      v5 -= 9;
    }
    __break(1u);
  }
  return result;
}

void sub_1ABDF9208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  char **v21;
  uint64_t v22;
  _OWORD *i;
  void *v24;
  id v25;
  void *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  id v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  _BYTE v58[144];
  _BYTE v59[144];
  _QWORD v60[18];
  _QWORD v61[18];
  _BYTE v62[152];
  uint64_t v63;

  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v46 - v12;
  v14 = sub_1ABF30760();
  v63 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v51 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v57 = (char *)&v46 - v17;
  MEMORY[0x1E0C80A78](v18);
  v56 = (char *)&v46 - v19;
  v54 = a3;
  v48 = a2;
  if (a3 != a2)
  {
    v50 = *a4;
    v20 = (_OWORD *)(v50 + 144 * v54);
    v47 = a1 + 1;
    v21 = &selRef_purchaseProvider;
    v52 = v10;
    v53 = v13;
LABEL_7:
    v55 = v47;
    v49 = v20;
    for (i = v20; ; i -= 9)
    {
      sub_1ABD6414C((uint64_t)i, (uint64_t)v60);
      sub_1ABD6414C((uint64_t)(i - 9), (uint64_t)v61);
      sub_1ABD6414C((uint64_t)v60, (uint64_t)v62);
      sub_1ABD24814((uint64_t)v62);
      v24 = *(void **)sub_1ABD24804((uint64_t)v62);
      sub_1ABD64188(v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABD64188(v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      v25 = objc_msgSend(v24, v21[41]);
      if (!v25)
        break;
      v26 = v25;
      v27 = v57;
      sub_1ABF30724();

      v28 = v63;
      v29 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
      v22 = (uint64_t)v53;
      v29(v53, v27, v14);
      v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v30(v22, 0, 1, v14);
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
      if (v31(v22, 1, v14) == 1)
        goto LABEL_5;
      v29(v56, (char *)v22, v14);
      sub_1ABD6414C((uint64_t)v61, (uint64_t)v59);
      sub_1ABD24814((uint64_t)v59);
      v32 = objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v59), v21[41]);
      if (!v32)
      {
        v45 = (uint64_t)v52;
        v30((uint64_t)v52, 1, 1, v14);
        v36 = v45;
LABEL_17:
        (*(void (**)(char *, uint64_t))(v63 + 8))(v56, v14);
        sub_1ABCFC3BC(v36, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        sub_1ABD64188(v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        sub_1ABD64188(v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        v21 = &selRef_purchaseProvider;
LABEL_6:
        v20 = v49 + 9;
        if (++v54 == v48)
          return;
        goto LABEL_7;
      }
      v33 = v32;
      v34 = v57;
      sub_1ABF30724();

      v35 = (uint64_t)v52;
      v29(v52, v34, v14);
      v30(v35, 0, 1, v14);
      v36 = v35;
      if (v31(v35, 1, v14) == 1)
        goto LABEL_17;
      v37 = v51;
      v29(v51, (char *)v35, v14);
      v38 = v56;
      v39 = sub_1ABF306E8();
      v40 = *(void (**)(char *, uint64_t))(v63 + 8);
      v40(v37, v14);
      v40(v38, v14);
      sub_1ABD64188(v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      sub_1ABD64188(v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      if ((v39 & 1) == 0)
      {
        v21 = &selRef_purchaseProvider;
        goto LABEL_6;
      }
      v21 = &selRef_purchaseProvider;
      if (!v50)
      {
        __break(1u);
        return;
      }
      sub_1ABD6414C((uint64_t)i, (uint64_t)v58);
      v41 = *(i - 2);
      i[6] = *(i - 3);
      i[7] = v41;
      i[8] = *(i - 1);
      v42 = *(i - 6);
      i[2] = *(i - 7);
      i[3] = v42;
      v43 = *(i - 4);
      i[4] = *(i - 5);
      i[5] = v43;
      v44 = *(i - 8);
      *i = *(i - 9);
      i[1] = v44;
      sub_1ABD6414C((uint64_t)v58, (uint64_t)(i - 9));
      if (v54 == v55)
        goto LABEL_6;
      ++v55;
    }
    v22 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v53, 1, 1, v14);
LABEL_5:
    sub_1ABCFC3BC(v22, (uint64_t (*)(_QWORD))sub_1ABD226F0);
    sub_1ABD64188(v61, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
    sub_1ABD64188(v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
    goto LABEL_6;
  }
}

uint64_t sub_1ABDF96B4(char *a1, char *__src, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  char *v25;
  uint64_t v26;
  char *v27;
  _BYTE v29[144];
  _QWORD v30[18];
  _QWORD v31[18];
  _BYTE v32[144];
  _BYTE v33[144];
  _BYTE v34[144];
  char *v35;
  char *v36;
  char *v37;

  v4 = __dst;
  v6 = __src;
  v7 = __src - a1;
  v8 = (__src - a1) / 144;
  v9 = a3 - (_QWORD)__src;
  v10 = (uint64_t)(a3 - (_QWORD)__src) / 144;
  v37 = a1;
  v36 = __dst;
  if (v8 >= v10)
  {
    if (v9 < -143)
      goto LABEL_51;
    if (__dst != __src || &__src[144 * v10] <= __dst)
      memmove(__dst, __src, 144 * v10);
    v17 = &v4[144 * v10];
    v35 = v17;
    v37 = v6;
    if (a1 >= v6 || v9 < 144)
      goto LABEL_50;
    v18 = (char *)(a3 - 144);
    v27 = v4;
    while (1)
    {
      v19 = v18 + 144;
      sub_1ABD6414C((uint64_t)(v17 - 144), (uint64_t)v30);
      v20 = v6 - 144;
      sub_1ABD6414C((uint64_t)(v6 - 144), (uint64_t)v31);
      sub_1ABD6414C((uint64_t)v30, (uint64_t)v32);
      sub_1ABD6414C((uint64_t)v31, (uint64_t)v33);
      sub_1ABD6414C((uint64_t)v30, (uint64_t)v34);
      if (sub_1ABD24814((uint64_t)v34) == 1)
      {
        sub_1ABD24804((uint64_t)v34);
        sub_1ABD64188(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD64188(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABDFDD28((uint64_t)v32);
      }
      else
      {
        v26 = sub_1ABD24804((uint64_t)v34);
        sub_1ABD6414C((uint64_t)v31, (uint64_t)v29);
        v21 = sub_1ABD24814((uint64_t)v29);
        v22 = sub_1ABD24804((uint64_t)v29);
        sub_1ABD64188(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD64188(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABDFDD28((uint64_t)v32);
        if (v21 != 1 && *(double *)(v22 + 88) < *(double *)(v26 + 88))
        {
          v23 = v27;
          if (v19 != v6 || v18 >= v6)
            memmove(v18, v6 - 144, 0x90uLL);
          v37 = v6 - 144;
          goto LABEL_45;
        }
      }
      v23 = v27;
      v35 = v17 - 144;
      if (v19 < v17 || v18 >= v17 || v19 != v17)
        memmove(v18, v17 - 144, 0x90uLL);
      v20 = v6;
      v17 -= 144;
LABEL_45:
      if (v17 > v23)
      {
        v18 -= 144;
        v6 = v20;
        if (v20 > a1)
          continue;
      }
      goto LABEL_50;
    }
  }
  if (v7 < -143)
  {
LABEL_51:
    result = sub_1ABF3202C();
    __break(1u);
    return result;
  }
  if (__dst != a1 || &a1[144 * v8] <= __dst)
    memmove(__dst, a1, 144 * v8);
  v11 = &v4[144 * v8];
  v35 = v11;
  if ((unint64_t)v6 >= a3 || v7 < 144)
    goto LABEL_50;
  v12 = a1;
  v25 = &v4[144 * v8];
  while (1)
  {
    sub_1ABD6414C((uint64_t)v6, (uint64_t)v30);
    sub_1ABD6414C((uint64_t)v4, (uint64_t)v31);
    sub_1ABD6414C((uint64_t)v30, (uint64_t)v32);
    sub_1ABD6414C((uint64_t)v31, (uint64_t)v33);
    sub_1ABD6414C((uint64_t)v30, (uint64_t)v34);
    if (sub_1ABD24814((uint64_t)v34) == 1)
    {
      sub_1ABD24804((uint64_t)v34);
      sub_1ABD64188(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABD64188(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABDFDD28((uint64_t)v32);
      goto LABEL_18;
    }
    v13 = sub_1ABD24804((uint64_t)v34);
    sub_1ABD6414C((uint64_t)v31, (uint64_t)v29);
    v14 = sub_1ABD24814((uint64_t)v29);
    v15 = sub_1ABD24804((uint64_t)v29);
    sub_1ABD64188(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABD64188(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABDFDD28((uint64_t)v32);
    if (v14 == 1 || *(double *)(v15 + 88) >= *(double *)(v13 + 88))
    {
      v11 = v25;
LABEL_18:
      if (v12 != v4 || v12 >= v4 + 144)
        memmove(v12, v4, 0x90uLL);
      v36 = v4 + 144;
      v4 += 144;
      goto LABEL_22;
    }
    if (v12 != v6 || v12 >= v6 + 144)
      memmove(v12, v6, 0x90uLL);
    v6 += 144;
    v11 = v25;
LABEL_22:
    v16 = v12 + 144;
    if (v4 >= v11)
      goto LABEL_49;
    if ((unint64_t)v6 >= a3)
      break;
    v12 += 144;
  }
  v16 = v12 + 144;
LABEL_49:
  v37 = v16;
LABEL_50:
  sub_1ABE8BED8((void **)&v37, (const void **)&v36, &v35);
  return 1;
}

uint64_t sub_1ABDF9B8C(char *a1, char *__src, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  char *v25;
  uint64_t v26;
  char *v27;
  _BYTE v29[144];
  _QWORD v30[18];
  _QWORD v31[18];
  _BYTE v32[144];
  _BYTE v33[144];
  _BYTE v34[144];
  char *v35;
  char *v36;
  char *v37;

  v4 = __dst;
  v6 = __src;
  v7 = __src - a1;
  v8 = (__src - a1) / 144;
  v9 = a3 - (_QWORD)__src;
  v10 = (uint64_t)(a3 - (_QWORD)__src) / 144;
  v37 = a1;
  v36 = __dst;
  if (v8 >= v10)
  {
    if (v9 < -143)
      goto LABEL_51;
    if (__dst != __src || &__src[144 * v10] <= __dst)
      memmove(__dst, __src, 144 * v10);
    v17 = &v4[144 * v10];
    v35 = v17;
    v37 = v6;
    if (a1 >= v6 || v9 < 144)
      goto LABEL_50;
    v18 = (char *)(a3 - 144);
    v27 = v4;
    while (1)
    {
      v19 = v18 + 144;
      sub_1ABD6414C((uint64_t)(v17 - 144), (uint64_t)v30);
      v20 = v6 - 144;
      sub_1ABD6414C((uint64_t)(v6 - 144), (uint64_t)v31);
      sub_1ABD6414C((uint64_t)v30, (uint64_t)v32);
      sub_1ABD6414C((uint64_t)v31, (uint64_t)v33);
      sub_1ABD6414C((uint64_t)v30, (uint64_t)v34);
      if (sub_1ABD24814((uint64_t)v34) == 1)
      {
        sub_1ABD24804((uint64_t)v34);
        sub_1ABD64188(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD64188(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABDFDD28((uint64_t)v32);
      }
      else
      {
        v26 = sub_1ABD24804((uint64_t)v34);
        sub_1ABD6414C((uint64_t)v31, (uint64_t)v29);
        v21 = sub_1ABD24814((uint64_t)v29);
        v22 = sub_1ABD24804((uint64_t)v29);
        sub_1ABD64188(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD64188(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABDFDD28((uint64_t)v32);
        if (v21 != 1 && *(double *)(v22 + 72) < *(double *)(v26 + 72))
        {
          v23 = v27;
          if (v19 != v6 || v18 >= v6)
            memmove(v18, v6 - 144, 0x90uLL);
          v37 = v6 - 144;
          goto LABEL_45;
        }
      }
      v23 = v27;
      v35 = v17 - 144;
      if (v19 < v17 || v18 >= v17 || v19 != v17)
        memmove(v18, v17 - 144, 0x90uLL);
      v20 = v6;
      v17 -= 144;
LABEL_45:
      if (v17 > v23)
      {
        v18 -= 144;
        v6 = v20;
        if (v20 > a1)
          continue;
      }
      goto LABEL_50;
    }
  }
  if (v7 < -143)
  {
LABEL_51:
    result = sub_1ABF3202C();
    __break(1u);
    return result;
  }
  if (__dst != a1 || &a1[144 * v8] <= __dst)
    memmove(__dst, a1, 144 * v8);
  v11 = &v4[144 * v8];
  v35 = v11;
  if ((unint64_t)v6 >= a3 || v7 < 144)
    goto LABEL_50;
  v12 = a1;
  v25 = &v4[144 * v8];
  while (1)
  {
    sub_1ABD6414C((uint64_t)v6, (uint64_t)v30);
    sub_1ABD6414C((uint64_t)v4, (uint64_t)v31);
    sub_1ABD6414C((uint64_t)v30, (uint64_t)v32);
    sub_1ABD6414C((uint64_t)v31, (uint64_t)v33);
    sub_1ABD6414C((uint64_t)v30, (uint64_t)v34);
    if (sub_1ABD24814((uint64_t)v34) == 1)
    {
      sub_1ABD24804((uint64_t)v34);
      sub_1ABD64188(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABD64188(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABDFDD28((uint64_t)v32);
      goto LABEL_18;
    }
    v13 = sub_1ABD24804((uint64_t)v34);
    sub_1ABD6414C((uint64_t)v31, (uint64_t)v29);
    v14 = sub_1ABD24814((uint64_t)v29);
    v15 = sub_1ABD24804((uint64_t)v29);
    sub_1ABD64188(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABD64188(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABDFDD28((uint64_t)v32);
    if (v14 == 1 || *(double *)(v15 + 72) >= *(double *)(v13 + 72))
    {
      v11 = v25;
LABEL_18:
      if (v12 != v4 || v12 >= v4 + 144)
        memmove(v12, v4, 0x90uLL);
      v36 = v4 + 144;
      v4 += 144;
      goto LABEL_22;
    }
    if (v12 != v6 || v12 >= v6 + 144)
      memmove(v12, v6, 0x90uLL);
    v6 += 144;
    v11 = v25;
LABEL_22:
    v16 = v12 + 144;
    if (v4 >= v11)
      goto LABEL_49;
    if ((unint64_t)v6 >= a3)
      break;
    v12 += 144;
  }
  v16 = v12 + 144;
LABEL_49:
  v37 = v16;
LABEL_50:
  sub_1ABE8BED8((void **)&v37, (const void **)&v36, &v35);
  return 1;
}

uint64_t sub_1ABDFA064(char *a1, char *a2, char *a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void *v35;
  id v36;
  void *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  id v46;
  void *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  void *v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(void);
  char *v68;
  char *v69;
  char *v70;
  id v71;
  uint64_t v72;
  void *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t result;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  _BYTE v100[144];
  _QWORD v101[18];
  _QWORD v102[18];
  _BYTE v103[144];
  char *v104;
  unint64_t v105;
  char *v106;

  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v8);
  v93 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v92 = (char *)&v84 - v11;
  MEMORY[0x1E0C80A78](v12);
  v87 = (char *)&v84 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v84 - v15;
  v17 = sub_1ABF30760();
  v18 = *(_QWORD *)(v17 - 8);
  v96 = v17;
  v97 = v18;
  MEMORY[0x1E0C80A78](v17);
  v86 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v89 = (char *)&v84 - v21;
  MEMORY[0x1E0C80A78](v22);
  v85 = (char *)&v84 - v23;
  MEMORY[0x1E0C80A78](v24);
  v94 = (char *)&v84 - v25;
  MEMORY[0x1E0C80A78](v26);
  v90 = (char *)&v84 - v27;
  v28 = a2 - a1;
  v29 = (a2 - a1) / 144;
  v30 = a2;
  v88 = a3;
  v31 = a3 - a2;
  v32 = v31 / 144;
  v106 = a1;
  v105 = a4;
  if (v29 >= v31 / 144)
  {
    if (v31 < -143)
      goto LABEL_57;
    v57 = v30;
    if ((char *)a4 != v30 || (unint64_t)&v30[144 * v32] <= a4)
      memmove((void *)a4, v30, 144 * v32);
    v58 = (char *)(a4 + 144 * v32);
    v104 = v58;
    v106 = v30;
    if (v31 < 144 || a1 >= v30)
    {
LABEL_56:
      sub_1ABE8BED8((void **)&v106, (const void **)&v105, &v104);
      return 1;
    }
    v59 = v88 - 144;
    v91 = a1;
    v98 = a4;
    while (1)
    {
      v95 = v59 + 144;
      v60 = v58 - 144;
      sub_1ABD6414C((uint64_t)(v58 - 144), (uint64_t)v101);
      v99 = v57;
      v61 = v57 - 144;
      sub_1ABD6414C((uint64_t)(v57 - 144), (uint64_t)v102);
      sub_1ABD6414C((uint64_t)v101, (uint64_t)v103);
      sub_1ABD24814((uint64_t)v103);
      v62 = *(void **)sub_1ABD24804((uint64_t)v103);
      sub_1ABD64188(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      sub_1ABD64188(v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      v63 = objc_msgSend(v62, sel_publishDate);
      if (!v63)
        break;
      v64 = v63;
      sub_1ABF30724();

      v65 = v96;
      v66 = v97;
      v67 = *(void (**)(void))(v97 + 32);
      v68 = v92;
      v67();
      v90 = *(char **)(v66 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v90)(v68, 0, 1, v65);
      v69 = *(char **)(v66 + 48);
      v70 = v93;
      v88 = v69;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v69)(v68, 1, v65) == 1)
        goto LABEL_46;
      ((void (*)(char *, char *, uint64_t))v67)(v89, v68, v65);
      sub_1ABD6414C((uint64_t)v102, (uint64_t)v100);
      sub_1ABD24814((uint64_t)v100);
      v71 = objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v100), sel_publishDate);
      v72 = v65;
      if (!v71)
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v90)(v70, 1, 1, v65);
LABEL_48:
        (*(void (**)(char *, uint64_t))(v97 + 8))(v89, v72);
        v81 = (uint64_t)v70;
LABEL_49:
        sub_1ABCFC3BC(v81, (uint64_t (*)(_QWORD))sub_1ABD226F0);
        sub_1ABD64188(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        sub_1ABD64188(v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        v79 = (unint64_t)v91;
        goto LABEL_50;
      }
      v73 = v71;
      v74 = v94;
      sub_1ABF30724();

      v75 = v74;
      v70 = v93;
      ((void (*)(char *, char *, uint64_t))v67)(v93, v75, v72);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v90)(v70, 0, 1, v72);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v88)(v70, 1, v72) == 1)
        goto LABEL_48;
      v76 = v86;
      ((void (*)(char *, char *, uint64_t))v67)(v86, v70, v72);
      v77 = v89;
      LODWORD(v90) = sub_1ABF306E8();
      v78 = *(void (**)(char *, uint64_t))(v97 + 8);
      v78(v76, v72);
      v78(v77, v72);
      sub_1ABD64188(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      sub_1ABD64188(v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      v79 = (unint64_t)v91;
      if ((v90 & 1) != 0)
      {
        v80 = v98;
        if (v95 != v99 || v59 >= v99)
          memmove(v59, v61, 0x90uLL);
        v106 = v61;
        if ((unint64_t)v58 <= v80)
          goto LABEL_56;
        goto LABEL_55;
      }
LABEL_50:
      v82 = v98;
      v61 = v99;
      v104 = v58 - 144;
      if (v95 < v58 || v59 >= v58 || v95 != v58)
        memmove(v59, v58 - 144, 0x90uLL);
      v58 -= 144;
      if ((unint64_t)v60 <= v82)
        goto LABEL_56;
LABEL_55:
      v59 -= 144;
      v57 = v61;
      if ((unint64_t)v61 <= v79)
        goto LABEL_56;
    }
    v68 = v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v92, 1, 1, v96);
LABEL_46:
    v81 = (uint64_t)v68;
    goto LABEL_49;
  }
  if (v28 >= -143)
  {
    if ((char *)a4 != a1 || (unint64_t)&a1[144 * v29] <= a4)
      memmove((void *)a4, a1, 144 * v29);
    v95 = (char *)(a4 + 144 * v29);
    v104 = v95;
    v33 = v30;
    v34 = v88;
    if (v28 >= 144)
    {
      while (1)
      {
        if (v33 >= v34)
          goto LABEL_56;
        v99 = v33;
        sub_1ABD6414C((uint64_t)v33, (uint64_t)v101);
        v98 = a4;
        sub_1ABD6414C(a4, (uint64_t)v102);
        sub_1ABD6414C((uint64_t)v101, (uint64_t)v103);
        sub_1ABD24814((uint64_t)v103);
        v35 = *(void **)sub_1ABD24804((uint64_t)v103);
        sub_1ABD64188(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        sub_1ABD64188(v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
        v36 = objc_msgSend(v35, sel_publishDate);
        if (!v36)
          break;
        v37 = v36;
        v38 = v94;
        sub_1ABF30724();

        v39 = v97;
        v40 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
        v41 = v38;
        v42 = v96;
        v40(v16, v41, v96);
        v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
        v43(v16, 0, 1, v42);
        v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
        if (v44(v16, 1, v42) == 1)
          goto LABEL_18;
        v45 = v96;
        v40(v90, v16, v96);
        sub_1ABD6414C((uint64_t)v102, (uint64_t)v100);
        sub_1ABD24814((uint64_t)v100);
        v46 = objc_msgSend(*(id *)sub_1ABD24804((uint64_t)v100), sel_publishDate);
        if (!v46)
        {
          v49 = v87;
          v43(v87, 1, 1, v45);
LABEL_20:
          (*(void (**)(char *, uint64_t))(v97 + 8))(v90, v45);
          v56 = (uint64_t)v49;
          goto LABEL_21;
        }
        v47 = v46;
        v48 = v94;
        sub_1ABF30724();

        v49 = v87;
        v50 = v48;
        v34 = v88;
        v40(v87, v50, v45);
        v43(v49, 0, 1, v45);
        if (v44(v49, 1, v45) == 1)
          goto LABEL_20;
        v51 = v85;
        v40(v85, v49, v45);
        v52 = v90;
        v53 = sub_1ABF306E8();
        v54 = *(void (**)(char *, uint64_t))(v97 + 8);
        v54(v51, v45);
        v54(v52, v45);
        sub_1ABD64188(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        sub_1ABD64188(v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        a4 = v98;
        if ((v53 & 1) == 0)
          goto LABEL_22;
        v55 = v99 + 144;
        if (a1 != v99 || a1 >= v55)
          memmove(a1, v99, 0x90uLL);
        v33 = v55;
LABEL_26:
        a1 += 144;
        v106 = a1;
        if (a4 >= (unint64_t)v95)
          goto LABEL_56;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v16, 1, 1, v96);
LABEL_18:
      v56 = (uint64_t)v16;
LABEL_21:
      sub_1ABCFC3BC(v56, (uint64_t (*)(_QWORD))sub_1ABD226F0);
      sub_1ABD64188(v102, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      sub_1ABD64188(v101, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      a4 = v98;
LABEL_22:
      if (a1 != (char *)a4 || (unint64_t)a1 >= a4 + 144)
        memmove(a1, (const void *)a4, 0x90uLL);
      v105 = a4 + 144;
      a4 += 144;
      v33 = v99;
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_57:
  result = sub_1ABF3202C();
  __break(1u);
  return result;
}

uint64_t sub_1ABDFA988(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v3 = a1;
  if (a1 >> 62)
  {
    sub_1ABF2FF5C();
    v4 = sub_1ABF31FE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v45 = MEMORY[0x1E0DEE9D8];
  sub_1ABD1515C(0, v4 & ~(v4 >> 63), 0);
  if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    v24 = v3;
    v6 = 0;
    v25 = v3 & 0xC000000000000001;
    v5 = v45;
    while (1)
    {
      if (v25)
      {
        v7 = MEMORY[0x1AF4380CC](v6, v3);
      }
      else
      {
        v7 = *(_QWORD *)(v3 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      v9 = sub_1ABF317A4();
      v11 = v10;

      if (!*(_QWORD *)(a2 + 16))
        break;
      v12 = sub_1ABD00F9C(v9, v11);
      if ((v13 & 1) == 0)
        break;
      v14 = *(_QWORD *)(a2 + 56) + 136 * v12;
      v36 = *(_OWORD *)v14;
      v15 = *(_OWORD *)(v14 + 64);
      v17 = *(_OWORD *)(v14 + 16);
      v16 = *(_OWORD *)(v14 + 32);
      v39 = *(_OWORD *)(v14 + 48);
      v40 = v15;
      v37 = v17;
      v38 = v16;
      v19 = *(_OWORD *)(v14 + 96);
      v18 = *(_OWORD *)(v14 + 112);
      v20 = *(_OWORD *)(v14 + 80);
      v44 = *(_QWORD *)(v14 + 128);
      v42 = v19;
      v43 = v18;
      v41 = v20;
      sub_1ABD64450((uint64_t)&v36);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v45 = v5;
      v22 = *(_QWORD *)(v5 + 16);
      v21 = *(_QWORD *)(v5 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1ABD1515C(v21 > 1, v22 + 1, 1);
        v5 = v45;
      }
      ++v6;
      v33 = v42;
      v34 = v43;
      v35 = v44;
      v29 = v38;
      v30 = v39;
      v31 = v40;
      v32 = v41;
      v27 = v36;
      v28 = v37;
      v26 = v7;
      sub_1ABD64440((uint64_t)&v26);
      *(_QWORD *)(v5 + 16) = v22 + 1;
      sub_1ABD6414C((uint64_t)&v26, v5 + 144 * v22 + 32);
      v3 = v24;
      if (v4 == v6)
        return v5;
    }
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1ABDFABD4(uint64_t a1, uint64_t a2)
{
  _BYTE v3[64];
  uint64_t v4;

  sub_1ABDFAE2C(a1, (uint64_t)v3);
  sub_1ABDFAE2C(a2, (uint64_t)&v4);
  __asm { BR              X10 }
}

uint64_t sub_1ABDFAC24()
{
  uint64_t v0;
  char v1;
  _QWORD *v3;

  sub_1ABDFAE2C(v0 - 160, (uint64_t)&v3);
  if (*(_BYTE *)(v0 - 39))
  {
    swift_bridgeObjectRelease();
    sub_1ABCFC3BC(v0 - 160, (uint64_t (*)(_QWORD))sub_1ABDFDEE8);
    v1 = 0;
  }
  else
  {
    v1 = sub_1ABD1C278(v3, *(_QWORD **)(v0 - 96));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABDFAE60(v0 - 160);
  }
  return v1 & 1;
}

_OWORD *sub_1ABDFAE0C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_OWORD *)((char *)a2 + 42) = *(__int128 *)((char *)a1 + 42);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

uint64_t sub_1ABDFAE2C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for NewsFeedFilterOptions.Option(a2, a1);
  return a2;
}

uint64_t sub_1ABDFAE60(uint64_t a1)
{
  destroy for NewsFeedFilterOptions.Option(a1);
  return a1;
}

BOOL sub_1ABDFAE8C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  sub_1ABDFABD4(a1, *(_QWORD *)(v1 + 16));
  return (v2 & 1) == 0;
}

uint64_t type metadata accessor for NewsFeedRequest()
{
  uint64_t result;

  result = qword_1ED34CEF0;
  if (!qword_1ED34CEF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABDFAEF8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1ABDFAF1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ABDF41AC(v1, a1);
}

void sub_1ABDFAF24()
{
  uint64_t (*v0)(_QWORD, uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EEC43228)
  {
    v0 = (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DECEC8];
    sub_1ABD04578(255, &qword_1EEC43230, (uint64_t)&type metadata for Headline, MEMORY[0x1E0DECEC8]);
    sub_1ABDFB210(&qword_1EEC43238, &qword_1EEC43230, v0, MEMORY[0x1E0DECED8]);
    v1 = sub_1ABF31EB8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EEC43228);
  }
}

uint64_t sub_1ABDFAFC4(unint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_1ABDF6264(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1ABDFAFE0(unint64_t *a1, _OWORD *a2)
{
  uint64_t v2;

  return sub_1ABDF6498(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1ABDFAFFC()
{
  unint64_t result;

  result = qword_1EEC43240;
  if (!qword_1EEC43240)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3E34C, &type metadata for NewsFeedSortMethod);
    atomic_store(result, (unint64_t *)&qword_1EEC43240);
  }
  return result;
}

unint64_t sub_1ABDFB044()
{
  unint64_t result;

  result = qword_1ED3468A8;
  if (!qword_1ED3468A8)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for StockNewsFeed, &type metadata for StockNewsFeed);
    atomic_store(result, (unint64_t *)&qword_1ED3468A8);
  }
  return result;
}

uint64_t sub_1ABDFB088()
{
  return MEMORY[0x1E0DEB430];
}

uint64_t sub_1ABDFB094()
{
  return sub_1ABDFB0C8(&qword_1EEC43250, &qword_1EEC43258, MEMORY[0x1E0DEA200], MEMORY[0x1E0DEA228]);
}

uint64_t sub_1ABDFB0C8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1ABDFB180(255, a2, a3);
    result = MEMORY[0x1AF438F30](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABDFB108()
{
  unint64_t result;

  result = qword_1EEC43260;
  if (!qword_1EEC43260)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for StockNewsFeed, &type metadata for StockNewsFeed);
    atomic_store(result, (unint64_t *)&qword_1EEC43260);
  }
  return result;
}

uint64_t sub_1ABDFB14C()
{
  return sub_1ABDFB0C8(&qword_1EEC43268, &qword_1EEC43270, MEMORY[0x1E0DEDE10], MEMORY[0x1E0DEDE48]);
}

void sub_1ABDFB180(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABDFB108();
    v7 = a3(a1, &type metadata for StockNewsFeed, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1ABDFB1DC()
{
  return sub_1ABDFB210(&qword_1EEC43278, &qword_1EEC43280, MEMORY[0x1E0DEC1C0], MEMORY[0x1E0DEC1E8]);
}

uint64_t sub_1ABDFB210(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, a2, (uint64_t)&type metadata for Headline, a3);
    result = MEMORY[0x1AF438F30](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsFeedFilterOptions()
{
  return &type metadata for NewsFeedFilterOptions;
}

uint64_t destroy for NewsFeedFilterOptions.Option(uint64_t result)
{
  uint64_t v1;
  int v2;
  unsigned int v3;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 57);
  while (2)
  {
    switch(v2)
    {
      case 0:
      case 1:
      case 5:
LABEL_4:
        result = swift_bridgeObjectRelease();
        break;
      case 2:
        result += 8;
        switch(*(_BYTE *)(v1 + 56))
        {
          case 0:
            swift_unknownObjectRelease();
            result = v1 + 16;
            goto LABEL_12;
          case 1:
            return swift_unknownObjectRelease();
          case 2:
            goto LABEL_12;
          case 3:
          case 6:
          case 7:
          case 8:
            goto LABEL_4;
          default:
            return result;
        }
      case 3:
        return result;
      case 4:
        v3 = *(unsigned __int8 *)(result + 48);
        if (v3 >= 9)
          v3 = *(_DWORD *)result + 9;
        switch(v3)
        {
          case 0u:
            v1 = result + 8;
            swift_unknownObjectRelease();
            goto LABEL_10;
          case 1u:
            return swift_unknownObjectRelease();
          case 2u:
LABEL_10:
            result = v1;
LABEL_12:
            result = __swift_destroy_boxed_opaque_existential_1(result);
            break;
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            goto LABEL_4;
          default:
            return result;
        }
        break;
      default:
        v2 = *(_DWORD *)result + 6;
        continue;
    }
    return result;
  }
}

uint64_t initializeWithCopy for NewsFeedFilterOptions.Option(uint64_t a1, uint64_t a2)
{
  int v3;
  char v4;
  _OWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  char v11;
  unsigned int v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  __int128 v17;
  char v18;
  __int128 v19;
  __int128 v20;
  char v21;
  __int128 v22;
  char v23;

  v3 = *(unsigned __int8 *)(a2 + 57);
  while (2)
  {
    switch(v3)
    {
      case 0:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 57) = 0;
        goto LABEL_15;
      case 1:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v4 = 1;
        goto LABEL_14;
      case 2:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v5 = (_OWORD *)(a1 + 8);
        v6 = (_QWORD *)(a2 + 8);
        switch(*(_BYTE *)(a2 + 56))
        {
          case 0:
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            v7 = a2 + 16;
            v8 = *(_OWORD *)(a2 + 40);
            *(_OWORD *)(a1 + 40) = v8;
            v9 = v8;
            v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
            swift_unknownObjectRetain();
            v10(a1 + 16, v7, v9);
            *(_BYTE *)(a1 + 56) = 0;
            break;
          case 1:
            *(_QWORD *)(a1 + 8) = *v6;
            *(_BYTE *)(a1 + 56) = 1;
            swift_unknownObjectRetain();
            break;
          case 2:
            v17 = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 32) = v17;
            (**(void (***)(_OWORD *, uint64_t))(v17 - 8))(v5, a2 + 8);
            *(_BYTE *)(a1 + 56) = 2;
            break;
          case 3:
            *(_QWORD *)(a1 + 8) = *v6;
            v18 = 3;
            goto LABEL_23;
          case 6:
            *(_QWORD *)(a1 + 8) = *v6;
            v18 = 6;
            goto LABEL_23;
          case 7:
            *(_QWORD *)(a1 + 8) = *v6;
            v18 = 7;
            goto LABEL_23;
          case 8:
            *(_QWORD *)(a1 + 8) = *v6;
            v18 = 8;
LABEL_23:
            *(_BYTE *)(a1 + 56) = v18;
            sub_1ABF2FF5C();
            break;
          default:
            v19 = *(_OWORD *)(a2 + 24);
            *v5 = *(_OWORD *)v6;
            *(_OWORD *)(a1 + 24) = v19;
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
            break;
        }
        v11 = 2;
        goto LABEL_37;
      case 3:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v11 = 3;
        goto LABEL_37;
      case 4:
        v12 = *(unsigned __int8 *)(a2 + 48);
        if (v12 >= 9)
          v12 = *(_DWORD *)a2 + 9;
        switch(v12)
        {
          case 0u:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v13 = a2 + 8;
            v14 = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 32) = v14;
            v15 = v14;
            v16 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
            swift_unknownObjectRetain();
            v16(a1 + 8, v13, v15);
            *(_BYTE *)(a1 + 48) = 0;
            break;
          case 1u:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_BYTE *)(a1 + 48) = 1;
            swift_unknownObjectRetain();
            break;
          case 2u:
            v22 = *(_OWORD *)(a2 + 24);
            *(_OWORD *)(a1 + 24) = v22;
            (**(void (***)(uint64_t))(v22 - 8))(a1);
            v21 = 2;
            goto LABEL_31;
          case 3u:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v23 = 3;
            goto LABEL_35;
          case 4u:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v21 = 4;
            goto LABEL_31;
          case 5u:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v21 = 5;
            goto LABEL_31;
          case 6u:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v23 = 6;
            goto LABEL_35;
          case 7u:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v23 = 7;
            goto LABEL_35;
          case 8u:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v23 = 8;
LABEL_35:
            *(_BYTE *)(a1 + 48) = v23;
            sub_1ABF2FF5C();
            break;
          default:
            v20 = *(_OWORD *)(a2 + 16);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(_OWORD *)(a1 + 16) = v20;
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            v21 = *(_BYTE *)(a2 + 48);
LABEL_31:
            *(_BYTE *)(a1 + 48) = v21;
            break;
        }
        v11 = 4;
LABEL_37:
        *(_BYTE *)(a1 + 57) = v11;
        break;
      case 5:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v4 = 5;
LABEL_14:
        *(_BYTE *)(a1 + 57) = v4;
LABEL_15:
        sub_1ABF2FF5C();
        break;
      default:
        v3 = *(_DWORD *)a2 + 6;
        continue;
    }
    return a1;
  }
}

uint64_t assignWithCopy for NewsFeedFilterOptions.Option(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  int v4;
  int v5;
  unsigned int v6;
  char v7;
  _OWORD *v8;
  _QWORD *v9;
  __int128 *v10;
  uint64_t v11;
  void (*v12)(uint64_t, __int128 *, uint64_t);
  char v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;

  v2 = a1;
  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 57);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 1:
        case 5:
LABEL_5:
          swift_bridgeObjectRelease();
          break;
        case 2:
          a1 += 8;
          switch(*(_BYTE *)(v2 + 56))
          {
            case 0:
              swift_unknownObjectRelease();
              __swift_destroy_boxed_opaque_existential_1(v2 + 16);
              break;
            case 1:
              goto LABEL_27;
            case 2:
              goto LABEL_28;
            case 3:
            case 6:
            case 7:
            case 8:
              goto LABEL_5;
            default:
              goto LABEL_6;
          }
          break;
        case 3:
          break;
        case 4:
          v6 = *(unsigned __int8 *)(a1 + 48);
          if (v6 >= 9)
            v6 = *(_DWORD *)a1 + 9;
          switch(v6)
          {
            case 0u:
              swift_unknownObjectRelease();
              __swift_destroy_boxed_opaque_existential_1(v2 + 8);
              break;
            case 1u:
LABEL_27:
              swift_unknownObjectRelease();
              break;
            case 2u:
LABEL_28:
              __swift_destroy_boxed_opaque_existential_1(a1);
              break;
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              goto LABEL_5;
            default:
              goto LABEL_6;
          }
          break;
        default:
          v4 = *(_DWORD *)a1 + 6;
          continue;
      }
      break;
    }
LABEL_6:
    v5 = *((unsigned __int8 *)a2 + 57);
    while (2)
    {
      switch(v5)
      {
        case 0:
          *(_QWORD *)v2 = *(_QWORD *)a2;
          *(_BYTE *)(v2 + 57) = 0;
          goto LABEL_25;
        case 1:
          *(_QWORD *)v2 = *(_QWORD *)a2;
          v7 = 1;
          goto LABEL_24;
        case 2:
          *(_QWORD *)v2 = *(_QWORD *)a2;
          v8 = (_OWORD *)(v2 + 8);
          v9 = (_QWORD *)a2 + 1;
          switch(*((_BYTE *)a2 + 56))
          {
            case 0:
              *(_QWORD *)(v2 + 8) = *((_QWORD *)a2 + 1);
              v10 = a2 + 1;
              v11 = *((_QWORD *)a2 + 5);
              *(_QWORD *)(v2 + 40) = v11;
              *(_QWORD *)(v2 + 48) = *((_QWORD *)a2 + 6);
              v12 = **(void (***)(uint64_t, __int128 *, uint64_t))(v11 - 8);
              swift_unknownObjectRetain();
              v12(v2 + 16, v10, v11);
              *(_BYTE *)(v2 + 56) = 0;
              break;
            case 1:
              *(_QWORD *)(v2 + 8) = *v9;
              *(_BYTE *)(v2 + 56) = 1;
              swift_unknownObjectRetain();
              break;
            case 2:
              v18 = *((_QWORD *)a2 + 4);
              *(_QWORD *)(v2 + 32) = v18;
              *(_QWORD *)(v2 + 40) = *((_QWORD *)a2 + 5);
              (**(void (***)(_OWORD *, _QWORD *))(v18 - 8))(v8, v9);
              *(_BYTE *)(v2 + 56) = 2;
              break;
            case 3:
              *(_QWORD *)(v2 + 8) = *v9;
              v19 = 3;
              goto LABEL_36;
            case 6:
              *(_QWORD *)(v2 + 8) = *v9;
              v19 = 6;
              goto LABEL_36;
            case 7:
              *(_QWORD *)(v2 + 8) = *v9;
              v19 = 7;
              goto LABEL_36;
            case 8:
              *(_QWORD *)(v2 + 8) = *v9;
              v19 = 8;
LABEL_36:
              *(_BYTE *)(v2 + 56) = v19;
              sub_1ABF2FF5C();
              break;
            default:
              v20 = *(_OWORD *)v9;
              v21 = *(__int128 *)((char *)a2 + 24);
              v22 = *(__int128 *)((char *)a2 + 40);
              *(_BYTE *)(v2 + 56) = *((_BYTE *)a2 + 56);
              *(_OWORD *)(v2 + 24) = v21;
              *(_OWORD *)(v2 + 40) = v22;
              *v8 = v20;
              break;
          }
          v13 = 2;
          goto LABEL_49;
        case 3:
          *(_OWORD *)v2 = *a2;
          v13 = 3;
          goto LABEL_49;
        case 4:
          v14 = *((unsigned __int8 *)a2 + 48);
          if (v14 >= 9)
            v14 = *(_DWORD *)a2 + 9;
          switch(v14)
          {
            case 0u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v15 = (uint64_t)a2 + 8;
              v16 = *((_QWORD *)a2 + 4);
              *(_QWORD *)(v2 + 32) = v16;
              *(_QWORD *)(v2 + 40) = *((_QWORD *)a2 + 5);
              v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
              swift_unknownObjectRetain();
              v17(v2 + 8, v15, v16);
              *(_BYTE *)(v2 + 48) = 0;
              break;
            case 1u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              *(_BYTE *)(v2 + 48) = 1;
              swift_unknownObjectRetain();
              break;
            case 2u:
              v26 = *((_QWORD *)a2 + 3);
              *(_QWORD *)(v2 + 24) = v26;
              *(_QWORD *)(v2 + 32) = *((_QWORD *)a2 + 4);
              (**(void (***)(uint64_t, __int128 *))(v26 - 8))(v2, a2);
              *(_BYTE *)(v2 + 48) = 2;
              break;
            case 3u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v27 = 3;
              goto LABEL_47;
            case 4u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              *(_BYTE *)(v2 + 48) = 4;
              break;
            case 5u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              *(_BYTE *)(v2 + 48) = 5;
              break;
            case 6u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v27 = 6;
              goto LABEL_47;
            case 7u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v27 = 7;
              goto LABEL_47;
            case 8u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v27 = 8;
LABEL_47:
              *(_BYTE *)(v2 + 48) = v27;
              sub_1ABF2FF5C();
              break;
            default:
              v23 = *a2;
              v24 = a2[1];
              v25 = a2[2];
              *(_BYTE *)(v2 + 48) = *((_BYTE *)a2 + 48);
              *(_OWORD *)(v2 + 16) = v24;
              *(_OWORD *)(v2 + 32) = v25;
              *(_OWORD *)v2 = v23;
              break;
          }
          v13 = 4;
LABEL_49:
          *(_BYTE *)(v2 + 57) = v13;
          break;
        case 5:
          *(_QWORD *)v2 = *(_QWORD *)a2;
          v7 = 5;
LABEL_24:
          *(_BYTE *)(v2 + 57) = v7;
LABEL_25:
          sub_1ABF2FF5C();
          break;
        default:
          v5 = *(_DWORD *)a2 + 6;
          continue;
      }
      break;
    }
  }
  return v2;
}

__n128 __swift_memcpy58_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for NewsFeedFilterOptions.Option(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v4;
  int v5;
  char v6;
  unsigned int v7;
  __int128 v8;
  unsigned int v9;
  __int128 v10;
  __int128 v11;
  char v12;
  __int128 v13;

  v2 = a1;
  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 57);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 1:
        case 5:
LABEL_5:
          swift_bridgeObjectRelease();
          break;
        case 2:
          a1 += 8;
          switch(*(_BYTE *)(v2 + 56))
          {
            case 0:
              swift_unknownObjectRelease();
              __swift_destroy_boxed_opaque_existential_1(v2 + 16);
              break;
            case 1:
              goto LABEL_24;
            case 2:
              goto LABEL_25;
            case 3:
            case 6:
            case 7:
            case 8:
              goto LABEL_5;
            default:
              goto LABEL_6;
          }
          break;
        case 3:
          break;
        case 4:
          v7 = *(unsigned __int8 *)(a1 + 48);
          if (v7 >= 9)
            v7 = *(_DWORD *)a1 + 9;
          switch(v7)
          {
            case 0u:
              swift_unknownObjectRelease();
              __swift_destroy_boxed_opaque_existential_1(v2 + 8);
              break;
            case 1u:
LABEL_24:
              swift_unknownObjectRelease();
              break;
            case 2u:
LABEL_25:
              __swift_destroy_boxed_opaque_existential_1(a1);
              break;
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              goto LABEL_5;
            default:
              goto LABEL_6;
          }
          break;
        default:
          v4 = *(_DWORD *)a1 + 6;
          continue;
      }
      break;
    }
LABEL_6:
    v5 = *(unsigned __int8 *)(a2 + 57);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = 0;
          *(_QWORD *)v2 = *(_QWORD *)a2;
          break;
        case 1:
          *(_QWORD *)v2 = *(_QWORD *)a2;
          v6 = 1;
          break;
        case 2:
          v8 = *(_OWORD *)(a2 + 16);
          *(_OWORD *)v2 = *(_OWORD *)a2;
          *(_OWORD *)(v2 + 16) = v8;
          *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(v2 + 41) = *(_OWORD *)(a2 + 41);
          v6 = 2;
          break;
        case 3:
          *(_OWORD *)v2 = *(_OWORD *)a2;
          v6 = 3;
          break;
        case 4:
          v9 = *(unsigned __int8 *)(a2 + 48);
          if (v9 >= 9)
            v9 = *(_DWORD *)a2 + 9;
          switch(v9)
          {
            case 0u:
              v10 = *(_OWORD *)(a2 + 16);
              *(_OWORD *)v2 = *(_OWORD *)a2;
              *(_OWORD *)(v2 + 16) = v10;
              *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
              *(_BYTE *)(v2 + 48) = 0;
              goto LABEL_36;
            case 1u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v12 = 1;
              goto LABEL_35;
            case 2u:
              v13 = *(_OWORD *)(a2 + 16);
              *(_OWORD *)v2 = *(_OWORD *)a2;
              *(_OWORD *)(v2 + 16) = v13;
              *(_QWORD *)(v2 + 32) = *(_QWORD *)(a2 + 32);
              v12 = 2;
              goto LABEL_35;
            case 3u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v12 = 3;
              goto LABEL_35;
            case 4u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v6 = 4;
              *(_BYTE *)(v2 + 48) = 4;
              goto LABEL_37;
            case 5u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v12 = 5;
              goto LABEL_35;
            case 6u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v12 = 6;
              goto LABEL_35;
            case 7u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v12 = 7;
              goto LABEL_35;
            case 8u:
              *(_QWORD *)v2 = *(_QWORD *)a2;
              v12 = 8;
              goto LABEL_35;
            default:
              v11 = *(_OWORD *)(a2 + 16);
              *(_OWORD *)v2 = *(_OWORD *)a2;
              *(_OWORD *)(v2 + 16) = v11;
              *(_OWORD *)(v2 + 32) = *(_OWORD *)(a2 + 32);
              v12 = *(_BYTE *)(a2 + 48);
LABEL_35:
              *(_BYTE *)(v2 + 48) = v12;
LABEL_36:
              v6 = 4;
              break;
          }
          break;
        case 5:
          *(_QWORD *)v2 = *(_QWORD *)a2;
          v6 = 5;
          break;
        default:
          v5 = *(_DWORD *)a2 + 6;
          continue;
      }
      break;
    }
LABEL_37:
    *(_BYTE *)(v2 + 57) = v6;
  }
  return v2;
}

uint64_t getEnumTagSinglePayload for NewsFeedFilterOptions.Option(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 58))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 57);
  if (v3 >= 6)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NewsFeedFilterOptions.Option(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 42) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 58) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 58) = 0;
    if (a2)
      *(_BYTE *)(result + 57) = -(char)a2;
  }
  return result;
}

uint64_t sub_1ABDFBDF0(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 57);
  if (result >= 6)
    return (*(_DWORD *)a1 + 6);
  return result;
}

uint64_t sub_1ABDFBE0C(uint64_t result, unsigned int a2)
{
  if (a2 > 5)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 6;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 57) = a2;
  return result;
}

ValueMetadata *type metadata accessor for NewsFeedFilterOptions.Option()
{
  return &type metadata for NewsFeedFilterOptions.Option;
}

uint64_t storeEnumTagSinglePayload for NewsFeedSortMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABDFBE94 + 4 * byte_1ABF3E2DA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABDFBEC8 + 4 * byte_1ABF3E2D5[v4]))();
}

uint64_t sub_1ABDFBEC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDFBED0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDFBED8);
  return result;
}

uint64_t sub_1ABDFBEE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDFBEECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABDFBEF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDFBEF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewsFeedSortMethod()
{
  return &type metadata for NewsFeedSortMethod;
}

ValueMetadata *type metadata accessor for NewsFeedType()
{
  return &type metadata for NewsFeedType;
}

char *initializeBufferWithCopyOfBuffer for NewsFeedRequest(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    sub_1ABF2FF68();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
    v8 = a3[6];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1ABF30760();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1ABF2FF5C();
    v12(v9, v10, v11);
    v12(&v4[a3[7]], &a2[a3[7]], v11);
    v13 = a3[8];
    v14 = &v4[v13];
    v15 = &a2[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = *((_QWORD *)v15 + 3);
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 3) = v17;
    v18 = *((_QWORD *)v15 + 5);
    *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
    *((_QWORD *)v14 + 5) = v18;
    v19 = *((_QWORD *)v15 + 7);
    *((_QWORD *)v14 + 6) = *((_QWORD *)v15 + 6);
    *((_QWORD *)v14 + 7) = v19;
    v14[64] = v15[64];
    v20 = *((_QWORD *)v15 + 10);
    *((_QWORD *)v14 + 9) = *((_QWORD *)v15 + 9);
    *((_QWORD *)v14 + 10) = v20;
    v21 = *((_QWORD *)v15 + 12);
    *((_QWORD *)v14 + 11) = *((_QWORD *)v15 + 11);
    *((_QWORD *)v14 + 12) = v21;
    v22 = *((_QWORD *)v15 + 14);
    *((_QWORD *)v14 + 13) = *((_QWORD *)v15 + 13);
    *((_QWORD *)v14 + 14) = v22;
    v23 = *((_QWORD *)v15 + 16);
    *((_QWORD *)v14 + 15) = *((_QWORD *)v15 + 15);
    *((_QWORD *)v14 + 16) = v23;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  return v4;
}

uint64_t destroy for NewsFeedRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1ABF30760();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 28), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for NewsFeedRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  v7 = a3[6];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1ABF30760();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_1ABF2FF5C();
  v11(v8, v9, v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v12 = a3[8];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = *((_QWORD *)v14 + 3);
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = v16;
  v17 = *((_QWORD *)v14 + 5);
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  *((_QWORD *)v13 + 5) = v17;
  v18 = *((_QWORD *)v14 + 7);
  *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
  *((_QWORD *)v13 + 7) = v18;
  v13[64] = v14[64];
  v19 = *((_QWORD *)v14 + 10);
  *((_QWORD *)v13 + 9) = *((_QWORD *)v14 + 9);
  *((_QWORD *)v13 + 10) = v19;
  v20 = *((_QWORD *)v14 + 12);
  *((_QWORD *)v13 + 11) = *((_QWORD *)v14 + 11);
  *((_QWORD *)v13 + 12) = v20;
  v21 = *((_QWORD *)v14 + 14);
  *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
  *((_QWORD *)v13 + 14) = v21;
  v22 = *((_QWORD *)v14 + 16);
  *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
  *((_QWORD *)v13 + 16) = v22;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

char *assignWithCopy for NewsFeedRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1ABF30760();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v11 = a3[8];
  v12 = &a1[v11];
  v13 = &a2[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  *((_QWORD *)v12 + 3) = *((_QWORD *)v13 + 3);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
  *((_QWORD *)v12 + 7) = *((_QWORD *)v13 + 7);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v12[64] = v13[64];
  *((_QWORD *)v12 + 9) = *((_QWORD *)v13 + 9);
  *((_QWORD *)v12 + 10) = *((_QWORD *)v13 + 10);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *((_QWORD *)v12 + 11) = *((_QWORD *)v13 + 11);
  *((_QWORD *)v12 + 12) = *((_QWORD *)v13 + 12);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *((_QWORD *)v12 + 13) = *((_QWORD *)v13 + 13);
  *((_QWORD *)v12 + 14) = *((_QWORD *)v13 + 14);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *((_QWORD *)v12 + 15) = *((_QWORD *)v13 + 15);
  *((_QWORD *)v12 + 16) = *((_QWORD *)v13 + 16);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NewsFeedRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1ABF30760();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(v12 + 112) = v14;
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v13 + 128);
  v15 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v15;
  v16 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(v12 + 80) = v16;
  v17 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v17;
  return a1;
}

char *assignWithTake for NewsFeedRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  v7 = a3[6];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1ABF30760();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v12 = a3[8];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v14 + 3);
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = v16;
  swift_bridgeObjectRelease();
  v17 = *((_QWORD *)v14 + 5);
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  *((_QWORD *)v13 + 5) = v17;
  swift_bridgeObjectRelease();
  v18 = *((_QWORD *)v14 + 7);
  *((_QWORD *)v13 + 6) = *((_QWORD *)v14 + 6);
  *((_QWORD *)v13 + 7) = v18;
  swift_bridgeObjectRelease();
  v13[64] = v14[64];
  v19 = *((_QWORD *)v14 + 10);
  *((_QWORD *)v13 + 9) = *((_QWORD *)v14 + 9);
  *((_QWORD *)v13 + 10) = v19;
  swift_bridgeObjectRelease();
  v20 = *((_QWORD *)v14 + 12);
  *((_QWORD *)v13 + 11) = *((_QWORD *)v14 + 11);
  *((_QWORD *)v13 + 12) = v20;
  swift_bridgeObjectRelease();
  v21 = *((_QWORD *)v14 + 14);
  *((_QWORD *)v13 + 13) = *((_QWORD *)v14 + 13);
  *((_QWORD *)v13 + 14) = v21;
  swift_bridgeObjectRelease();
  v22 = *((_QWORD *)v14 + 16);
  *((_QWORD *)v13 + 15) = *((_QWORD *)v14 + 15);
  *((_QWORD *)v13 + 16) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsFeedRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABDFC620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1ABF30760();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for NewsFeedRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABDFC6A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1ABF30760();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1ABDFC71C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF30760();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for StockNewsFeed()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StockNewsFeed(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for StockNewsFeed(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for StockNewsFeed(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StockNewsFeed(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockNewsFeed(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockNewsFeed()
{
  return &type metadata for StockNewsFeed;
}

uint64_t sub_1ABDFCC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for NewsFeedService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NewsFeedService.__allocating_init(contentContext:headlineScorerFactory:appConfigurationManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1ABDFCC34(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABDFCCE8(uint64_t a1)
{
  if ((*(_QWORD *)(a1 + 104) >> 1) > 0x80000000)
    return -(*(_QWORD *)(a1 + 104) >> 1);
  else
    return 0;
}

uint64_t sub_1ABDFCD00(uint64_t result, void *a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[18];
  _BYTE v22[152];
  uint64_t v23;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = result + 32;
  v6 = MEMORY[0x1E0DEE9D8];
  v19 = result + 32;
  do
  {
    v20 = v6;
    if (v4 <= v2)
      v7 = v2;
    else
      v7 = v4;
    v8 = v5 + 144 * v4;
    v9 = v4;
    while (1)
    {
      if (v7 == v9)
      {
        __break(1u);
        return result;
      }
      sub_1ABD6414C(v8, (uint64_t)v21);
      sub_1ABD6414C((uint64_t)v21, (uint64_t)v22);
      sub_1ABD24814((uint64_t)v22);
      v10 = *(void **)sub_1ABD24804((uint64_t)v22);
      sub_1ABD64188(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      v11 = objc_msgSend(v10, sel_articleID);
      v12 = v11;
      v13 = v11;
      if (!v11)
      {
        sub_1ABF317A4();
        v13 = (void *)sub_1ABF31780();
        swift_bridgeObjectRelease();
        sub_1ABF317A4();
        v12 = (void *)sub_1ABF31780();
        swift_bridgeObjectRelease();
      }
      v14 = v11;
      objc_msgSend(a2, sel_addObject_, v13);

      v15 = (uint64_t)objc_msgSend(a2, sel_countForObject_, v12);
      if (v15 <= 1)
        break;
      ++v9;
      result = (uint64_t)sub_1ABD64188(v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      v8 += 144;
      if (v2 == v9)
        return v20;
    }
    v6 = v20;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ABD1515C(0, *(_QWORD *)(v20 + 16) + 1, 1);
      v6 = v23;
    }
    v18 = *(_QWORD *)(v6 + 16);
    v17 = *(_QWORD *)(v6 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1ABD1515C(v17 > 1, v18 + 1, 1);
      v6 = v23;
    }
    v4 = v9 + 1;
    *(_QWORD *)(v6 + 16) = v18 + 1;
    result = sub_1ABD6414C((uint64_t)v21, v6 + 144 * v18 + 32);
    v5 = v19;
  }
  while (v2 - 1 != v9);
  return v6;
}

uint64_t sub_1ABDFCF34(uint64_t result, void *a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t i;
  void *v9;
  unsigned __int8 v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[18];
  _BYTE v23[152];
  uint64_t v24;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v19 = result + 32;
  v5 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    v20 = v5;
    v21 = v6;
    v7 = v19 + 144 * v4;
    for (i = v4; ; ++i)
    {
      if (v21 == i)
      {
        __break(1u);
        return result;
      }
      sub_1ABD6414C(v7, (uint64_t)v22);
      v4 = i + 1;
      sub_1ABD6414C((uint64_t)v22, (uint64_t)v23);
      sub_1ABD24814((uint64_t)v23);
      v9 = *(void **)sub_1ABD24804((uint64_t)v23);
      v10 = objc_msgSend(v9, sel_respondsToSelector_, sel_stocksFields);
      sub_1ABD64188(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      if ((v10 & 1) == 0)
        break;
      sub_1ABD64188(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
      v11 = objc_msgSend(v9, sel_stocksFields);
      if (!v11
        || (v12 = objc_msgSend(v11, sel_stocksClusterID),
            swift_unknownObjectRelease(),
            !v12))
      {
        sub_1ABD64188(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        break;
      }
      sub_1ABF317A4();

      sub_1ABD64188(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      v13 = (void *)sub_1ABF31780();
      objc_msgSend(a2, sel_addObject_, v13);

      v14 = (void *)sub_1ABF31780();
      swift_bridgeObjectRelease();
      v15 = (uint64_t)objc_msgSend(a2, sel_countForObject_, v14);

      if (v15 <= 1)
        break;
      result = (uint64_t)sub_1ABD64188(v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
      v7 += 144;
      if (v2 == v4)
        return v20;
    }
    v5 = v20;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ABD1515C(0, *(_QWORD *)(v20 + 16) + 1, 1);
      v5 = v24;
    }
    v18 = *(_QWORD *)(v5 + 16);
    v17 = *(_QWORD *)(v5 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1ABD1515C(v17 > 1, v18 + 1, 1);
      v5 = v24;
    }
    *(_QWORD *)(v5 + 16) = v18 + 1;
    result = sub_1ABD6414C((uint64_t)v22, v5 + 144 * v18 + 32);
  }
  while (v2 - 1 != i);
  return v5;
}

uint64_t sub_1ABDFD1FC(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE v15[144];
  _QWORD v16[19];
  uint64_t v17;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = result + 32;
  v6 = MEMORY[0x1E0DEE9D8];
  v14 = a2 + 32;
  do
  {
    if (v4 <= v2)
      v7 = v2;
    else
      v7 = v4;
    while (1)
    {
      if (v4 == v7)
      {
        __break(1u);
        return result;
      }
      result = sub_1ABD6414C(v5 + 144 * v4++, (uint64_t)v16);
      v8 = *(_QWORD *)(a2 + 16);
      if (v8)
        break;
LABEL_6:
      if (v4 == v2)
        return v6;
    }
    sub_1ABD64188(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFD28);
    sub_1ABF2FF5C();
    v9 = v14;
    while (1)
    {
      sub_1ABD6414C((uint64_t)v16, (uint64_t)v15);
      sub_1ABD2189C((uint64_t)v15);
      if ((v10 & 1) == 0)
        break;
      v9 += 56;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        result = (uint64_t)sub_1ABD64188(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABCFFDBC);
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1ABD1515C(0, *(_QWORD *)(v6 + 16) + 1, 1);
      v6 = v17;
    }
    v13 = *(_QWORD *)(v6 + 16);
    v12 = *(_QWORD *)(v6 + 24);
    if (v13 >= v12 >> 1)
    {
      sub_1ABD1515C(v12 > 1, v13 + 1, 1);
      v6 = v17;
    }
    *(_QWORD *)(v6 + 16) = v13 + 1;
    result = sub_1ABD6414C((uint64_t)v16, v6 + 144 * v13 + 32);
  }
  while (v4 != v2);
  return v6;
}

uint64_t sub_1ABDFD390(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1ABF2FF5C();
  for (; v4; v4 = sub_1ABF31FE4())
  {
    for (i = 4; ; ++i)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AF4380CC](i - 4, a1) : *(id *)(a1 + 8 * i);
      v7 = v6;
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v9 = objc_msgSend(a2, sel_objectForKey_, v6);

      if (v9)
      {
        MEMORY[0x1AF437C04]();
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1ABF31A50();
        sub_1ABF31A8C();
        sub_1ABF31A20();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_15:
    sub_1ABF2FF5C();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1ABDFD514(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1))
      v3 = a2 - 1;
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL))
      v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    v4 = v3 + 1;
    if (v4 >= 5)
    {
      v7 = v4 & 3;
      if ((v4 & 3) == 0)
        v7 = 4;
      v5 = v4 - v7;
      v8 = 0uLL;
      v9 = (int64x2_t)(unint64_t)result;
      v10 = vdupq_n_s64(1uLL);
      v11 = v5;
      do
      {
        v9 = vaddq_s64(v9, v10);
        v8 = vaddq_s64(v8, v10);
        v11 -= 4;
      }
      while (v11);
      v6 = vaddvq_s64(vaddq_s64(v8, v9));
    }
    else
    {
      v5 = 0;
      v6 = result;
    }
    v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    v13 = v5 + result - a3;
    v14 = a2 - v5;
    result = v6;
    while (1)
    {
      if (!v13)
        return 0;
      if (!v12)
        break;
      ++result;
      ++v12;
      ++v13;
      if (!--v14)
        return result;
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1ABDFD5E4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABDFD688(uint64_t a1)
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t sub_1ABDFD730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1ABDF4E7C(a1, a2, a3, a4, *(_QWORD **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48));
}

void sub_1ABDFD75C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DD30)
  {
    sub_1ABD04578(255, &qword_1ED34CA98, (uint64_t)&type metadata for StockNewsFeed, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DD30);
  }
}

uint64_t sub_1ABDFD7C8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1ABDFD7EC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1ABDFD840(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_1ABDF52E4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(void))(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(void (**)(uint64_t))(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), *(_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 96));
}

unint64_t sub_1ABDFD87C()
{
  unint64_t result;

  result = qword_1EEC43298;
  if (!qword_1EEC43298)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3E740, &type metadata for NewsFeedServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEC43298);
  }
  return result;
}

uint64_t sub_1ABDFD8C0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1ABDFD904(void *a1, void *a2)
{
  uint64_t v2;

  sub_1ABDF5758(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1ABDFD934(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v32;
  void (*v33)(uint64_t);
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  _OWORD v39[9];
  _BYTE v40[136];
  _QWORD v41[17];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v37 = type metadata accessor for NewsFeedRequest();
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v32 = a3;
    v33 = a2;
    v52 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB5134(0, v9, 0);
    v10 = sub_1ABCF7BCC(0, (unint64_t *)&qword_1ED34FD90);
    v11 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v35 = *(_QWORD *)(v6 + 72);
    v36 = v10;
    v12 = MEMORY[0x1E0DEA968];
    v34 = xmmword_1ABF366E0;
    do
    {
      sub_1ABDEA160(v11, (uint64_t)v8);
      sub_1ABD0F55C();
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = v34;
      sub_1ABDEA124((uint64_t)v8 + *(int *)(v37 + 32), (uint64_t)v40);
      sub_1ABDEA124((uint64_t)v40, (uint64_t)v41);
      v15 = v41[2];
      v14 = v41[3];
      *(_QWORD *)(v13 + 56) = v12;
      v16 = sub_1ABD0F5C0();
      *(_QWORD *)(v13 + 32) = v15;
      *(_QWORD *)(v13 + 40) = v14;
      v18 = *v8;
      v17 = v8[1];
      *(_QWORD *)(v13 + 96) = v12;
      *(_QWORD *)(v13 + 104) = v16;
      *(_QWORD *)(v13 + 64) = v16;
      *(_QWORD *)(v13 + 72) = v18;
      *(_QWORD *)(v13 + 80) = v17;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v19 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();

      *(_QWORD *)&v38 = MEMORY[0x1E0DEE9D8];
      *((_QWORD *)&v38 + 1) = v18;
      *(_QWORD *)&v39[0] = v17;
      sub_1ABDEA124((uint64_t)v40, (uint64_t)v39 + 8);
      sub_1ABF2FF5C();
      sub_1ABD97ECC((uint64_t)v40);
      sub_1ABCFC3BC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for NewsFeedRequest);
      v48 = v39[5];
      v49 = v39[6];
      v50 = v39[7];
      v51 = v39[8];
      v44 = v39[1];
      v45 = v39[2];
      v46 = v39[3];
      v47 = v39[4];
      v42 = v38;
      v43 = v39[0];
      v20 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1ABDB5134(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = v52;
      }
      v22 = *(_QWORD *)(v20 + 16);
      v21 = *(_QWORD *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1ABDB5134(v21 > 1, v22 + 1, 1);
        v20 = v52;
      }
      *(_QWORD *)(v20 + 16) = v22 + 1;
      v23 = (_OWORD *)(v20 + 160 * v22);
      v24 = v43;
      v23[2] = v42;
      v23[3] = v24;
      v25 = v44;
      v26 = v45;
      v27 = v47;
      v23[6] = v46;
      v23[7] = v27;
      v23[4] = v25;
      v23[5] = v26;
      v28 = v48;
      v29 = v49;
      v30 = v51;
      v23[10] = v50;
      v23[11] = v30;
      v23[8] = v28;
      v23[9] = v29;
      v11 += v35;
      --v9;
    }
    while (v9);
    v33(v20);
  }
  else
  {
    a2(MEMORY[0x1E0DEE9D8]);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABDFDC18()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1ABDFDC64(uint64_t a1)
{
  uint64_t v1;

  sub_1ABDF5A4C(a1, *(_QWORD *)(v1 + 16), *(void (**)(void *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void (**)(void))(v1 + 64));
}

uint64_t sub_1ABDFDC94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABDFDCB8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1ABDF5BAC(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD **)(v2 + 32), a2);
}

uint64_t sub_1ABDFDCD4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1ABDFDCEC(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

double sub_1ABDFDD08(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0x1FFFFFFFELL;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  return result;
}

uint64_t sub_1ABDFDD28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 152);
  v13 = *(_QWORD *)(a1 + 144);
  v3 = *(_QWORD *)(a1 + 160);
  v4 = *(_QWORD *)(a1 + 168);
  v5 = *(_QWORD *)(a1 + 176);
  v6 = *(_QWORD *)(a1 + 184);
  v7 = *(_QWORD *)(a1 + 192);
  v8 = *(_QWORD *)(a1 + 200);
  v12 = *(_OWORD *)(a1 + 208);
  v10 = *(_OWORD *)(a1 + 240);
  v11 = *(_OWORD *)(a1 + 224);
  sub_1ABCFFDBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(void **)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_1ABCFFDBC(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), (void *)v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_1ABDFDE18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + 16;
  switch(*(_BYTE *)(v0 + 64))
  {
    case 0:
      swift_unknownObjectRelease();
      v1 = v0 + 24;
      goto LABEL_4;
    case 1:
      swift_unknownObjectRelease();
      break;
    case 2:
LABEL_4:
      __swift_destroy_boxed_opaque_existential_1(v1);
      break;
    case 3:
    case 6:
    case 7:
    case 8:
      swift_bridgeObjectRelease();
      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

uint64_t sub_1ABDFDE84(uint64_t a1, uint64_t a2)
{
  __swift_memcpy49_8(a2, a1);
  return a2;
}

BOOL sub_1ABDFDEC0(uint64_t a1)
{
  return sub_1ABEF0174(a1);
}

uint64_t sub_1ABDFDEC8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  sub_1ABDF66E0(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24));
  return v2 & 1;
}

void sub_1ABDFDEE8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34D648)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34D648);
  }
}

uint64_t storeEnumTagSinglePayload for NewsFeedServiceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABDFDF94 + 4 * byte_1ABF3E2ED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABDFDFC8 + 4 * byte_1ABF3E2E8[v4]))();
}

uint64_t sub_1ABDFDFC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDFDFD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABDFDFD8);
  return result;
}

uint64_t sub_1ABDFDFE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABDFDFECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABDFDFF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABDFDFF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewsFeedServiceError()
{
  return &type metadata for NewsFeedServiceError;
}

unint64_t sub_1ABDFE018()
{
  unint64_t result;

  result = qword_1EEC432A0;
  if (!qword_1EEC432A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3E718, &type metadata for NewsFeedServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEC432A0);
  }
  return result;
}

BOOL sub_1ABDFE074(uint64_t a1)
{
  return sub_1ABDFAE8C(a1);
}

uint64_t type metadata accessor for YahooStockMetadataService()
{
  return objc_opt_self();
}

uint64_t sub_1ABDFE0AC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[24];
  uint64_t v56;

  v52 = a1;
  v47 = a4;
  v50 = a3;
  v7 = sub_1ABF30B38();
  v8 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1ABF30760();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2[1];
  v48 = *a2;
  v16 = v48;
  v17 = a2[2];
  v18 = a2[3];
  v44 = v15;
  v45 = v17;
  v54 = sub_1ABF30BE0();
  v51 = v53 + 16;
  sub_1ABD07E04(v53 + 16, (uint64_t)v55);
  v49 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v49(v14, a3, v11);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v19(v10, a4, v7);
  v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v55, v56);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (uint64_t *)((char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
  v25 = *v23;
  v26 = v52;
  sub_1ABF2FF5C();
  v27 = v44;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v28 = v16;
  v29 = v45;
  v30 = sub_1ABDFED84(v26, v25, v28, v27, v45, v18, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  v53 = sub_1ABF30BBC();

  sub_1ABD07E04(v51, (uint64_t)v55);
  v49(v14, v50, v11);
  v19(v10, v47, v46);
  v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v55, v56);
  v32 = MEMORY[0x1E0C80A78](v31);
  v34 = (uint64_t *)((char *)&v44 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v35 + 16))(v34, v32);
  v36 = *v34;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v37 = sub_1ABDFEBB8(v26, v36, v48, v27, v29, v18, (uint64_t)v14, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  sub_1ABF30BBC();

  v38 = (void *)sub_1ABF31114();
  sub_1ABF31108();
  swift_release();
  swift_release();

  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v26;
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = sub_1ABDFEF74;
  *(_QWORD *)(v40 + 24) = v39;
  sub_1ABF2FF5C();
  v41 = (void *)sub_1ABF31114();
  sub_1ABD3463C();
  v42 = sub_1ABF31180();
  swift_release();
  swift_release();

  return v42;
}

uint64_t sub_1ABDFE428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10[2];
  uint64_t v11;

  result = MEMORY[0x1E0DEE9E0];
  v11 = MEMORY[0x1E0DEE9E0];
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    sub_1ABF2FF5C();
    v8 = (uint64_t *)(a3 + 40);
    do
    {
      v9 = *v8;
      v10[0] = *(v8 - 1);
      v10[1] = v9;
      sub_1ABF2FF5C();
      sub_1ABDFE4F8(&v11, v10, a1, a2);
      v8 += 2;
      swift_bridgeObjectRelease();
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1ABDFE4F8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  _BYTE v67[144];
  uint64_t v68;

  v65 = a1;
  sub_1ABD00308(0, &qword_1ED3511E0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  MEMORY[0x1E0C80A78](v7);
  v62 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v64 = (char *)&v58 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v58 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v58 - v15;
  MEMORY[0x1E0C80A78](v17);
  v66 = (uint64_t)&v58 - v18;
  sub_1ABD00308(0, &qword_1ED3511E8, (void (*)(uint64_t))type metadata accessor for YahooQuoteDetailItem);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v58 - v20;
  v22 = type metadata accessor for YahooQuoteDetailItem(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (uint64_t *)((char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a3 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v23 + 56))(v21, 1, 1, v22, v24);
    return sub_1ABD18510((uint64_t)v21, &qword_1ED3511E8, (void (*)(uint64_t))type metadata accessor for YahooQuoteDetailItem);
  }
  v27 = *a2;
  v28 = a2[1];
  sub_1ABF2FF5C();
  v63 = v27;
  v29 = sub_1ABD00F9C(v27, v28);
  if ((v30 & 1) != 0)
  {
    sub_1ABCFC790(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v23 + 72) * v29, (uint64_t)v21, type metadata accessor for YahooQuoteDetailItem);
    v31 = 0;
  }
  else
  {
    v31 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, v31, 1, v22);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
    return sub_1ABD18510((uint64_t)v21, &qword_1ED3511E8, (void (*)(uint64_t))type metadata accessor for YahooQuoteDetailItem);
  sub_1ABDFEFE0((uint64_t)v21, (uint64_t)v26);
  if (*(_QWORD *)(a4 + 16))
  {
    sub_1ABF2FF5C();
    v33 = sub_1ABD00F9C(v63, v28);
    if ((v34 & 1) != 0)
    {
      v35 = v33;
      v36 = *(_QWORD *)(a4 + 56);
      v37 = type metadata accessor for YahooMultiQuoteItem(0);
      v38 = *(_QWORD *)(v37 - 8);
      v39 = v36 + *(_QWORD *)(v38 + 72) * v35;
      v40 = v66;
      sub_1ABCFC790(v39, v66, type metadata accessor for YahooMultiQuoteItem);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
    }
    else
    {
      v43 = type metadata accessor for YahooMultiQuoteItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v66, 1, 1, v43);
    }
    swift_bridgeObjectRelease();
    v42 = v26[1];
    if (v42)
      goto LABEL_15;
LABEL_12:
    sub_1ABF2FF5C();
    v59 = v63;
    v58 = v28;
    goto LABEL_16;
  }
  v41 = type metadata accessor for YahooMultiQuoteItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v66, 1, 1, v41);
  v42 = v26[1];
  if (!v42)
    goto LABEL_12;
LABEL_15:
  v59 = *v26;
  v58 = v42;
LABEL_16:
  v44 = v26[3];
  v60 = v26[2];
  v45 = *(uint64_t *)((char *)v26 + *(int *)(v22 + 84) + 8);
  sub_1ABDFF024(v66, (uint64_t)v16);
  v61 = v44;
  if (!v45)
  {
    sub_1ABDFF024((uint64_t)v16, (uint64_t)v13);
    v47 = type metadata accessor for YahooMultiQuoteItem(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v13, 1, v47) == 1)
    {
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      swift_bridgeObjectRetain_n();
      sub_1ABD18510((uint64_t)v13, &qword_1ED3511E0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
      v46 = (uint64_t)v64;
    }
    else
    {
      v48 = *(_QWORD *)&v13[*(int *)(v47 + 56) + 8];
      sub_1ABF2FF5C();
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABCFC3BC((uint64_t)v13, type metadata accessor for YahooMultiQuoteItem);
      v46 = (uint64_t)v64;
      if (v48)
      {
        sub_1ABD18510((uint64_t)v16, &qword_1ED3511E0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
        goto LABEL_23;
      }
    }
    sub_1ABD18510((uint64_t)v16, &qword_1ED3511E0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  sub_1ABF2FF5C();
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD18510((uint64_t)v16, &qword_1ED3511E0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  v46 = (uint64_t)v64;
LABEL_23:
  sub_1ABEC8F34((char *)&v68);
  swift_bridgeObjectRelease();
  v49 = (uint64_t *)((char *)v26 + *(int *)(v22 + 80));
  v50 = *v49;
  v51 = v49[1];
  sub_1ABDFF024(v66, v46);
  if (v51)
  {
    sub_1ABF2FF5C();
    sub_1ABD18510(v46, &qword_1ED3511E0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  }
  else
  {
    v52 = v62;
    sub_1ABDFF078(v46, v62);
    v53 = type metadata accessor for YahooMultiQuoteItem(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 1, v53) == 1)
    {
      sub_1ABD18510(v52, &qword_1ED3511E0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
      v50 = 0;
      v51 = 0;
    }
    else
    {
      v54 = (uint64_t *)(v52 + *(int *)(v53 + 52));
      v50 = *v54;
      v51 = v54[1];
      sub_1ABF2FF5C();
      sub_1ABCFC3BC(v52, type metadata accessor for YahooMultiQuoteItem);
    }
  }
  v55 = v65;
  v56 = v63;
  sub_1ABD15B80(v63, v28, v59, v58, v60, v61, (char *)&v68, v50, (uint64_t)v67, v51, 0, 0, 0, 0, 0, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v68 = *v55;
  *v55 = 0x8000000000000000;
  sub_1ABD0E308((uint64_t)v67, v56, v28, isUniquelyReferenced_nonNull_native);
  *v55 = v68;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABD18510(v66, &qword_1ED3511E0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  return sub_1ABCFC3BC((uint64_t)v26, type metadata accessor for YahooQuoteDetailItem);
}

uint64_t sub_1ABDFEB98(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABDFE0AC(a1, a2, a3, a4);
}

id sub_1ABDFEBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  objc_class *v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;
  _QWORD v37[5];
  _QWORD v38[5];

  v34 = a6;
  v35 = a7;
  v14 = type metadata accessor for YahooBaseOperationFactory();
  v38[3] = v14;
  v38[4] = &off_1E5AEEE20;
  v38[0] = a2;
  v15 = (objc_class *)type metadata accessor for YahooMultiQuoteOperation(0);
  v16 = (char *)objc_allocWithZone(v15);
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v14);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  v22 = *v20;
  v37[3] = v14;
  v37[4] = &off_1E5AEEE20;
  v37[0] = v22;
  *(_QWORD *)&v16[qword_1ED351460] = a1;
  sub_1ABD07E04((uint64_t)v37, (uint64_t)&v16[qword_1ED351468]);
  v23 = &v16[qword_1ED351470];
  *(_QWORD *)v23 = a3;
  *((_QWORD *)v23 + 1) = a4;
  v24 = v34;
  *((_QWORD *)v23 + 2) = a5;
  *((_QWORD *)v23 + 3) = v24;
  v25 = &v16[qword_1EEC44980];
  v26 = sub_1ABF30760();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, v35, v26);
  v29 = &v16[qword_1ED351478];
  v30 = sub_1ABF30B38();
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v29, a8, v30);
  v36.receiver = v16;
  v36.super_class = v15;
  v32 = objc_msgSendSuper2(&v36, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a8, v30);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v32;
}

id sub_1ABDFED84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  objc_class *v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;
  _QWORD v37[5];
  _QWORD v38[5];

  v34 = a6;
  v35 = a7;
  v14 = type metadata accessor for YahooBaseOperationFactory();
  v38[3] = v14;
  v38[4] = &off_1E5AEEE20;
  v38[0] = a2;
  v15 = (objc_class *)type metadata accessor for YahooQuoteDetailOperation(0);
  v16 = (char *)objc_allocWithZone(v15);
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v14);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  v22 = *v20;
  v37[3] = v14;
  v37[4] = &off_1E5AEEE20;
  v37[0] = v22;
  *(_QWORD *)&v16[qword_1ED351758] = a1;
  sub_1ABD07E04((uint64_t)v37, (uint64_t)&v16[qword_1ED351760]);
  v23 = &v16[qword_1ED351768];
  *(_QWORD *)v23 = a3;
  *((_QWORD *)v23 + 1) = a4;
  v24 = v34;
  *((_QWORD *)v23 + 2) = a5;
  *((_QWORD *)v23 + 3) = v24;
  v25 = &v16[qword_1EEC45248];
  v26 = sub_1ABF30760();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, v35, v26);
  v29 = &v16[qword_1ED351770];
  v30 = sub_1ABF30B38();
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v29, a8, v30);
  v36.receiver = v16;
  v36.super_class = v15;
  v32 = objc_msgSendSuper2(&v36, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a8, v30);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v32;
}

uint64_t sub_1ABDFEF50()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABDFEF74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABDFE428(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1ABDFEF7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABDFEFA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1ABDFEFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for YahooQuoteDetailItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABDFF024(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD00308(0, &qword_1ED3511E0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABDFF078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABD00308(0, &qword_1ED3511E0, (void (*)(uint64_t))type metadata accessor for YahooMultiQuoteItem);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABDFF0CC(uint64_t a1, __int128 *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  sub_1ABD065C8(a2, v4 + 24);
  return v4;
}

uint64_t sub_1ABDFF11C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1ABDFF124()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  v1 = *v0;
  v2 = sub_1ABF31810();
  if (*(_QWORD *)(v1 + 16) && (v4 = sub_1ABD00F9C(v2, v3), (v5 & 1) != 0))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 16 * v4);
    sub_1ABF2FF5C();
  }
  else
  {
    v6 = 0;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1ABDFF194(uint64_t a1, __int128 *a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  sub_1ABD065C8(a2, v2 + 24);
  return v2;
}

uint64_t sub_1ABDFF1BC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t sub_1ABDFF1E0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABDFF20C()
{
  void *v0;
  uint64_t v1;

  sub_1ABD0EF28();
  sub_1ABF3127C();
  v0 = (void *)sub_1ABF31114();
  v1 = sub_1ABF31174();
  swift_release();

  return v1;
}

ValueMetadata *type metadata accessor for StockEntityTable()
{
  return &type metadata for StockEntityTable;
}

uint64_t sub_1ABDFF29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1ABDFF2A4()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABDFF2B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1ABDFF2B8()
{
  return sub_1ABD08A40();
}

uint64_t SymbolEntity.init(from:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t result;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED350380, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v42 = (char *)&v37 - v5;
  v40 = sub_1ABF30334();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1ABF305D4();
  v43 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1ABF30484();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1ABF3049C();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[7];
  v51 = a1[6];
  v52 = v18;
  v53 = *((_QWORD *)a1 + 16);
  v19 = a1[3];
  v47 = a1[2];
  v48 = v19;
  v20 = a1[5];
  v49 = a1[4];
  v50 = v20;
  v21 = a1[1];
  v45 = *a1;
  v46 = v21;
  sub_1ABD9F6B0();
  sub_1ABF31738();
  sub_1ABF30844();
  v22 = *MEMORY[0x1E0CAF9B8];
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v23(v12, v22, v9);
  sub_1ABF304A8();
  *(_QWORD *)(a2 + 16) = MEMORY[0x1AF435F84](v17);
  sub_1ABF31738();
  sub_1ABF30844();
  v23(v12, v22, v9);
  sub_1ABF304A8();
  *(_QWORD *)(a2 + 24) = MEMORY[0x1AF435F84](v17);
  sub_1ABF31738();
  sub_1ABF30844();
  v23(v12, v22, v9);
  v24 = v41;
  sub_1ABF304A8();
  v25 = MEMORY[0x1AF435F84](v17);
  v26 = v46;
  *(_OWORD *)a2 = v46;
  v27 = *((_QWORD *)&v49 + 1);
  v28 = v50;
  *(_QWORD *)(a2 + 32) = v25;
  *(_QWORD *)(a2 + 40) = v27;
  v29 = *((_QWORD *)&v50 + 1);
  v30 = v51;
  *(_QWORD *)(a2 + 48) = v28;
  *(_QWORD *)(a2 + 56) = v29;
  *(_QWORD *)(a2 + 64) = v30;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v31 = v42;
  sub_1ABF2FF5C();
  sub_1ABD97ECC((uint64_t)&v45);
  sub_1ABF30328();
  sub_1ABF3031C();
  sub_1ABF30304();
  *(_QWORD *)&v44 = 0x2F6C6F626D79732FLL;
  *((_QWORD *)&v44 + 1) = 0xE800000000000000;
  sub_1ABF31870();
  sub_1ABF30310();
  sub_1ABF302F8();
  v32 = v43;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v31, 1, v24);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v40);
    v34 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v35 = v39;
    v34(v39, v31, v24);
    sub_1ABD97F60((uint64_t)&v45);
    v36 = type metadata accessor for SymbolEntity();
    v34((char *)(a2 + *(int *)(v36 + 40)), v35, v24);
    v44 = v26;
    sub_1ABF2FF5C();
    sub_1ABF2FD28();
    v44 = v47;
    sub_1ABF2FF5C();
    sub_1ABF2FD28();
    v44 = v48;
    sub_1ABF2FF5C();
    sub_1ABF2FD28();
    return sub_1ABD97F60((uint64_t)&v45);
  }
  return result;
}

uint64_t SymbolEntity.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t SymbolEntity.symbol.getter()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t SymbolEntity.symbol.setter()
{
  return sub_1ABF2FD28();
}

uint64_t (*SymbolEntity.symbol.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t SymbolEntity.$symbol.getter()
{
  return sub_1ABF2FD34();
}

uint64_t SymbolEntity.name.getter()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t SymbolEntity.name.setter()
{
  return sub_1ABF2FD28();
}

uint64_t (*SymbolEntity.name.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t SymbolEntity.$name.getter()
{
  return sub_1ABF2FD34();
}

uint64_t SymbolEntity.exchange.getter()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t SymbolEntity.exchange.setter()
{
  return sub_1ABF2FD28();
}

uint64_t (*SymbolEntity.exchange.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t SymbolEntity.$exchange.getter()
{
  return sub_1ABF2FD34();
}

uint64_t SymbolEntity.shortName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t SymbolEntity.compactName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t type metadata accessor for SymbolEntity()
{
  uint64_t result;

  result = qword_1ED34C7C0;
  if (!qword_1ED34C7C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1ABDFFAEC@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1ED346628 != -1)
    swift_once();
  *a1 = qword_1ED346620;
  return sub_1ABF2FF68();
}

uint64_t static SymbolEntity.defaultQuery.getter()
{
  if (qword_1ED346628 != -1)
    swift_once();
  return sub_1ABF2FF68();
}

uint64_t sub_1ABDFFB7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40FD0 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC432B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static SymbolEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40FD0 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC432B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABDFFC5C()
{
  sub_1ABCFE1EC(&qword_1ED3467A8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  return sub_1ABF2FC5C();
}

uint64_t SymbolEntity.displayRepresentation.getter()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED346788, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91480], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - v2;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  v7 = sub_1ABF3049C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1ABF31768();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  sub_1ABF3175C();
  sub_1ABF31750();
  sub_1ABF31744();
  sub_1ABF31750();
  sub_1ABF30490();
  sub_1ABF3175C();
  sub_1ABF31750();
  sub_1ABF2FD1C();
  sub_1ABF31744();
  swift_bridgeObjectRelease();
  sub_1ABF31750();
  sub_1ABF30490();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v11 = sub_1ABF2FEFC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
  return sub_1ABF2FF08();
}

uint64_t sub_1ABDFFEF8()
{
  sub_1ABCFE1EC(&qword_1ED34CB38, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  return sub_1ABF300B8();
}

_QWORD *sub_1ABDFFF48()
{
  _QWORD *result;

  type metadata accessor for SymbolQuery();
  swift_allocObject();
  result = SymbolQuery.init()();
  qword_1ED346620 = (uint64_t)result;
  return result;
}

uint64_t sub_1ABDFFF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v12[0] = (char *)v12 - v1;
  v2 = sub_1ABF30484();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF30070();
  __swift_allocate_value_buffer(v10, qword_1EEC432B0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC432B0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v2);
  sub_1ABF304A8();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v9 + 56))(v12[0], 1, 1, v8);
  sub_1ABCF5A54(0, &qword_1EEC421D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF3E850;
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  return sub_1ABF30058();
}

uint64_t static SymbolEntity.transferRepresentation.getter()
{
  uint64_t (*v0)(uint64_t);

  type metadata accessor for SymbolEntity();
  sub_1ABF305D4();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  sub_1ABCFE1EC(&qword_1EEC432C8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
  sub_1ABCFE1EC(&qword_1EEC432D0, v0, MEMORY[0x1E0CA86D0]);
  return sub_1ABF312F4();
}

uint64_t sub_1ABE003E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + *(int *)(type metadata accessor for SymbolEntity() + 40);
  v4 = sub_1ABF305D4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1ABE00444()
{
  sub_1ABF305D4();
  sub_1ABCFE1EC(&qword_1EEC432D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CA86D0]);
  return sub_1ABF312F4();
}

__n128 sub_1ABE004B8@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  char v12;
  _OWORD v13[8];
  uint64_t v14;

  sub_1ABF2FD1C();
  sub_1ABF2FD1C();
  sub_1ABF2FD1C();
  v4 = a1[5];
  v5 = a1[6];
  v7 = a1[7];
  v6 = a1[8];
  v12 = 0;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD15B80(*(uint64_t *)&v13[0], *((uint64_t *)&v13[0] + 1), *(uint64_t *)&v13[0], *((uint64_t *)&v13[0] + 1), *(uint64_t *)&v13[0], *((uint64_t *)&v13[0] + 1), &v12, v4, (uint64_t)v13, v5, v7, v6, 0, 0, 0, 0);
  sub_1ABD64AD4((uint64_t)a1);
  v8 = v13[7];
  *(_OWORD *)(a2 + 96) = v13[6];
  *(_OWORD *)(a2 + 112) = v8;
  *(_QWORD *)(a2 + 128) = v14;
  v9 = v13[3];
  *(_OWORD *)(a2 + 32) = v13[2];
  *(_OWORD *)(a2 + 48) = v9;
  v10 = v13[5];
  *(_OWORD *)(a2 + 64) = v13[4];
  *(_OWORD *)(a2 + 80) = v10;
  result = (__n128)v13[1];
  *(_OWORD *)a2 = v13[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1ABE005BC()
{
  return sub_1ABCFE1EC(&qword_1ED34CB10, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABE005E8()
{
  return sub_1ABCFE1EC(&qword_1ED34CB20, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABE00614()
{
  return sub_1ABCFE1EC(&qword_1ED34CB48, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABE00640()
{
  return sub_1ABCFE1EC(&qword_1ED3467A0, (uint64_t (*)(uint64_t))type metadata accessor for SymbolQuery, (uint64_t)&protocol conformance descriptor for SymbolQuery);
}

uint64_t sub_1ABE0066C()
{
  return sub_1ABCFE1EC(&qword_1ED34CB28, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABE00698()
{
  return sub_1ABCFE1EC(&qword_1ED34CB30, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABE006C4()
{
  return sub_1ABCFE1EC((unint64_t *)&qword_1ED34CB18, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABE006F0()
{
  return sub_1ABCFE1EC(&qword_1ED34CB38, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABE0071C()
{
  return sub_1ABCFE1EC(&qword_1EEC432D8, (uint64_t (*)(uint64_t))sub_1ABE00748, MEMORY[0x1E0C91998]);
}

void sub_1ABE00748()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC432E0)
  {
    type metadata accessor for SymbolEntity();
    sub_1ABCFE1EC((unint64_t *)&qword_1ED34CB18, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    v0 = sub_1ABF3007C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC432E0);
  }
}

uint64_t sub_1ABE007C0()
{
  return sub_1ABCFE1EC(&qword_1ED34CB40, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
}

uint64_t sub_1ABE007EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ABE007FC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1ABF2FD1C();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE00834()
{
  sub_1ABF2FF5C();
  return sub_1ABF2FD28();
}

uint64_t sub_1ABE0086C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1ABF2FD1C();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE008A4()
{
  sub_1ABF2FF5C();
  return sub_1ABF2FD28();
}

uint64_t sub_1ABE008DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1ABF2FD1C();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE00914()
{
  sub_1ABF2FF5C();
  return sub_1ABF2FD28();
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    sub_1ABF2FF68();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = *(int *)(a3 + 40);
    v15 = (char *)a1 + v9;
    v10 = (char *)a2 + v9;
    a1[8] = a2[8];
    v11 = sub_1ABF305D4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    sub_1ABF2FF5C();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v12(v15, v10, v11);
  }
  return v3;
}

uint64_t destroy for SymbolEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1ABF305D4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for SymbolEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  char *v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = *(int *)(a3 + 40);
  v13 = (char *)a1 + v8;
  v9 = (char *)a2 + v8;
  a1[8] = a2[8];
  v10 = sub_1ABF305D4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v11(v13, v9, v10);
  return a1;
}

_QWORD *assignWithCopy for SymbolEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_1ABF2FF68();
  swift_release();
  a1[3] = a2[3];
  sub_1ABF2FF68();
  swift_release();
  a1[4] = a2[4];
  sub_1ABF2FF68();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1ABF305D4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for SymbolEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 40);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1ABF305D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for SymbolEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[8];
  a1[7] = a2[7];
  a1[8] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 40);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1ABF305D4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABE00DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1ABF305D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ABE00E58(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1ABF305D4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1ABE00ECC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1ABF305D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1ABE00F54()
{
  return sub_1ABCFE1EC(&qword_1EEC432E8, (uint64_t (*)(uint64_t))sub_1ABE00F80, MEMORY[0x1E0CA87C8]);
}

void sub_1ABE00F80()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EEC432F0)
  {
    type metadata accessor for SymbolEntity();
    sub_1ABF305D4();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    sub_1ABCFE1EC(&qword_1EEC432C8, (uint64_t (*)(uint64_t))type metadata accessor for SymbolEntity, (uint64_t)&protocol conformance descriptor for SymbolEntity);
    sub_1ABCFE1EC(&qword_1EEC432D0, v0, MEMORY[0x1E0CA86D0]);
    v1 = sub_1ABF31300();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EEC432F0);
  }
}

uint64_t sub_1ABE01048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1ABD37AA0;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1ABE010DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1ABE010E4(unint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1ABF2FF5C();
  sub_1ABDFA988(v1, v2);
  swift_bridgeObjectRelease();
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED34DD40, (uint64_t (*)(uint64_t))sub_1ABD33E04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE0117C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1ABE011E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1ABE01204@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(_QWORD, _QWORD *))(v2 + 16))(*a1, a1 + 1);
  *a2 = result;
  a2[1] = v5;
  return result;
}

void sub_1ABE01244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34DFB0)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34DFB0);
  }
}

uint64_t sub_1ABE01298()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1ABE012C4()
{
  unint64_t result;

  result = qword_1EEC43368;
  if (!qword_1EEC43368)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3EBD8, &type metadata for NewsHeadlineService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEC43368);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NewsHeadlineService.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE01348 + 4 * asc_1ABF3EAF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE01368 + 4 * byte_1ABF3EAF5[v4]))();
}

_BYTE *sub_1ABE01348(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE01368(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE01370(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE01378(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE01380(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE01388(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NewsHeadlineService.Errors()
{
  return &type metadata for NewsHeadlineService.Errors;
}

unint64_t sub_1ABE013A8()
{
  unint64_t result;

  result = qword_1EEC43370;
  if (!qword_1EEC43370)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3EBB0, &type metadata for NewsHeadlineService.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEC43370);
  }
  return result;
}

uint64_t sub_1ABE013F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC43380);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC43380);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABE01564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC43398);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC43398);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABE016D4()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1ABE01708();
  return v0;
}

_QWORD *sub_1ABE01708()
{
  _QWORD *v0;

  sub_1ABDAE5B8(0, &qword_1ED346610, (unint64_t *)&unk_1ED3506E8);
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  v0[2] = sub_1ABF2FC14();
  sub_1ABDAE5B8(0, &qword_1ED346618, &qword_1ED3508C8);
  sub_1ABF2FC38();
  v0[3] = sub_1ABF2FC14();
  sub_1ABDAE5B8(0, (unint64_t *)&qword_1ED34C7B8, (unint64_t *)&qword_1ED350780);
  sub_1ABF2FC38();
  v0[4] = sub_1ABF2FC14();
  return v0;
}

uint64_t sub_1ABE01828(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_1ABF30B38();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v4 = sub_1ABF30760();
  v2[20] = v4;
  v2[21] = *(_QWORD *)(v4 - 8);
  v2[22] = swift_task_alloc();
  v5 = sub_1ABF30C28();
  v2[23] = v5;
  v2[24] = *(_QWORD *)(v5 - 8);
  v2[25] = swift_task_alloc();
  v6 = sub_1ABF30B14();
  v2[26] = v6;
  v2[27] = *(_QWORD *)(v6 - 8);
  v2[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABE01900()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[29] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[15];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v27 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[13] = v5;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v8 = sub_1ABF316E4();
    v0[14] = sub_1ABD1FE2C(v8, v9, &v27);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching stocks for symbol query with identifiers=[%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v7, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v10 = v0[27];
  v11 = v0[28];
  v12 = v0[25];
  v13 = v0[22];
  v26 = v0[23];
  v23 = v0[21];
  v14 = v0[19];
  v24 = v0[20];
  v25 = v0[24];
  v19 = v0[26];
  v20 = v0[18];
  v21 = v0[17];
  v22 = v0[15];
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v15 = v0[5];
  v16 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v11, *MEMORY[0x1E0DB32A8], v19);
  sub_1ABF30C1C();
  sub_1ABF30754();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v14, *MEMORY[0x1E0DB3560], v21);
  v0[30] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v22, v11, v12, v13, v14, v15, v16);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v14, v21);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v24);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v12, v26);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v19);
  v17 = (_QWORD *)swift_task_alloc();
  v0[31] = v17;
  *v17 = v0;
  v17[1] = sub_1ABE01C64;
  return sub_1ABF31150();
}

uint64_t sub_1ABE01C64()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE01CDC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  os_log_type_t type;
  uint64_t v17;
  uint64_t v18[2];

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 120);
    v5 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v18[0] = v17;
    *(_DWORD *)v5 = 136315394;
    type = v3;
    *(_QWORD *)(v0 + 64) = v4;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v6 = sub_1ABF316E4();
    *(_QWORD *)(v0 + 72) = sub_1ABD1FE2C(v6, v7, v18);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    v8 = sub_1ABF2FF5C();
    v9 = sub_1ABDAB2A0(v8);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = v9;
    v10 = sub_1ABF316E4();
    v12 = v11;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 96) = sub_1ABD1FE2C(v10, v12, v18);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, type, "Fetched stocks for symbol query with identifiers=[%s], stocks=[%s]", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v17, -1, -1);
    MEMORY[0x1AF438FFC](v5, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  v13 = *(_QWORD *)(v0 + 120);
  sub_1ABF2FF5C();
  v14 = sub_1ABE0B968(v13, v1);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v14);
}

uint64_t sub_1ABE01FB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = v1;
  return swift_task_switch();
}

uint64_t sub_1ABE01FC8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[12] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching watched stocks for suggested symbol entities.", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v5 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v0[13] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
  v7 = (_QWORD *)swift_task_alloc();
  v0[14] = v7;
  *v7 = v0;
  v7[1] = sub_1ABE0212C;
  return sub_1ABF31150();
}

uint64_t sub_1ABE0212C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE021A4()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE021E4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v6 = v5;
    v26 = v5;
    *(_DWORD *)v4 = 136315138;
    v7 = *(_QWORD *)(v1 + 16);
    v8 = MEMORY[0x1E0DEE9D8];
    if (v7)
    {
      v21 = v5;
      v22 = v3;
      v23 = v4;
      v24 = v2;
      v27 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v7, 0);
      v8 = v27;
      v9 = *(_QWORD *)(v27 + 16);
      v10 = 16 * v9;
      v25 = v1;
      v11 = (uint64_t *)(v1 + 40);
      do
      {
        v12 = *(v11 - 1);
        v13 = *v11;
        v27 = v8;
        v14 = v9 + 1;
        v15 = *(_QWORD *)(v8 + 24);
        sub_1ABF2FF5C();
        if (v9 >= v15 >> 1)
        {
          sub_1ABD16414(v15 > 1, v14, 1);
          v8 = v27;
        }
        *(_QWORD *)(v8 + 16) = v14;
        v16 = v8 + v10;
        *(_QWORD *)(v16 + 32) = v12;
        *(_QWORD *)(v16 + 40) = v13;
        v10 += 16;
        v11 += 17;
        ++v9;
        --v7;
      }
      while (v7);
      v2 = v24;
      v1 = v25;
      v4 = v23;
      v3 = v22;
      v6 = v21;
    }
    *(_QWORD *)(v0 + 64) = v8;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v17 = sub_1ABF316E4();
    v19 = v18;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = sub_1ABD1FE2C(v17, v19, &v26);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetched watched stocks for suggested symbol entities, stocks=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v6, -1, -1);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1ABE0247C(v1, MEMORY[0x1E0DEE9D8], *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE0247C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  unint64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;

  v71 = a3;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v70 = (char *)&v63 - v6;
  v7 = sub_1ABF3049C();
  v68 = *(_QWORD *)(v7 - 8);
  v69 = v7;
  MEMORY[0x1E0C80A78](v7);
  v73 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, &qword_1EEC42148, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C91170]);
  v66 = *(_QWORD *)(v9 - 8);
  v67 = v9;
  MEMORY[0x1E0C80A78](v9);
  v65 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v72 = (char *)&v63 - v12;
  sub_1ABCF4DA8(0, &qword_1EEC425A0, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90720]);
  v74 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v63 - v18;
  v20 = *(_QWORD *)(a1 + 16);
  v21 = MEMORY[0x1E0DEE9D8];
  if (v20)
  {
    v64 = a2;
    v97 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB5150(0, v20, 0);
    v21 = v97;
    v22 = a1 + 32;
    do
    {
      v23 = *(_OWORD *)(v22 + 80);
      v24 = *(_OWORD *)(v22 + 112);
      v94 = *(_OWORD *)(v22 + 96);
      v95 = v24;
      v25 = *(_OWORD *)(v22 + 16);
      v26 = *(_OWORD *)(v22 + 48);
      v90 = *(_OWORD *)(v22 + 32);
      v91 = v26;
      v27 = *(_OWORD *)(v22 + 48);
      v28 = *(_OWORD *)(v22 + 80);
      v92 = *(_OWORD *)(v22 + 64);
      v93 = v28;
      v29 = *(_OWORD *)(v22 + 16);
      v88 = *(_OWORD *)v22;
      v89 = v29;
      v30 = *(_OWORD *)(v22 + 112);
      v81 = v94;
      v82 = v30;
      v77 = v90;
      v78 = v27;
      v79 = v92;
      v80 = v23;
      v96 = *(_QWORD *)(v22 + 128);
      v83 = *(_QWORD *)(v22 + 128);
      v75 = v88;
      v76 = v25;
      sub_1ABD97ECC((uint64_t)&v88);
      sub_1ABD97ECC((uint64_t)&v88);
      sub_1ABE1F5D8(&v75, (uint64_t *)&v84);
      v75 = v84;
      v76 = v85;
      v77 = v86;
      v78 = v87;
      sub_1ABD84154();
      sub_1ABF2FCBC();
      sub_1ABD97F60((uint64_t)&v88);
      v97 = v21;
      v32 = *(_QWORD *)(v21 + 16);
      v31 = *(_QWORD *)(v21 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1ABDB5150(v31 > 1, v32 + 1, 1);
        v21 = v97;
      }
      *(_QWORD *)(v21 + 16) = v32 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v21+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v32, v19, v74);
      v22 += 136;
      --v20;
    }
    while (v20);
    a2 = v64;
  }
  v33 = *(_QWORD *)(a2 + 16);
  v34 = MEMORY[0x1E0DEE9D8];
  if (v33)
  {
    v97 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB5150(0, v33, 0);
    v34 = v97;
    v35 = a2 + 32;
    do
    {
      v36 = *(_OWORD *)(v35 + 80);
      v37 = *(_OWORD *)(v35 + 112);
      v94 = *(_OWORD *)(v35 + 96);
      v95 = v37;
      v38 = *(_OWORD *)(v35 + 16);
      v39 = *(_OWORD *)(v35 + 48);
      v90 = *(_OWORD *)(v35 + 32);
      v91 = v39;
      v40 = *(_OWORD *)(v35 + 48);
      v41 = *(_OWORD *)(v35 + 80);
      v92 = *(_OWORD *)(v35 + 64);
      v93 = v41;
      v42 = *(_OWORD *)(v35 + 16);
      v88 = *(_OWORD *)v35;
      v89 = v42;
      v43 = *(_OWORD *)(v35 + 112);
      v81 = v94;
      v82 = v43;
      v77 = v90;
      v78 = v40;
      v79 = v92;
      v80 = v36;
      v96 = *(_QWORD *)(v35 + 128);
      v83 = *(_QWORD *)(v35 + 128);
      v75 = v88;
      v76 = v38;
      sub_1ABD97ECC((uint64_t)&v88);
      sub_1ABD97ECC((uint64_t)&v88);
      sub_1ABE1F5D8(&v75, (uint64_t *)&v84);
      v75 = v84;
      v76 = v85;
      v77 = v86;
      v78 = v87;
      sub_1ABD84154();
      sub_1ABF2FCBC();
      sub_1ABD97F60((uint64_t)&v88);
      v97 = v34;
      v45 = *(_QWORD *)(v34 + 16);
      v44 = *(_QWORD *)(v34 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_1ABDB5150(v44 > 1, v45 + 1, 1);
        v34 = v97;
      }
      *(_QWORD *)(v34 + 16) = v45 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v34+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v45, v16, v74);
      v35 += 136;
      --v33;
    }
    while (v33);
  }
  v47 = v68;
  v46 = v69;
  v49 = v66;
  v48 = v67;
  if (*(_QWORD *)(v21 + 16))
  {
    if (qword_1EEC40FD8 != -1)
      swift_once();
    v50 = __swift_project_value_buffer(v46, (uint64_t)qword_1EEC43380);
    v51 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v73, v50, v46);
    v52 = sub_1ABD84154();
    MEMORY[0x1AF436098](v51, v21, &type metadata for SymbolWidgetEntity, v52);
    v53 = sub_1ABD82D20(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v55 = *(_QWORD *)(v53 + 16);
    v54 = *(_QWORD *)(v53 + 24);
    if (v55 >= v54 >> 1)
      v53 = sub_1ABD82D20(v54 > 1, v55 + 1, 1, v53);
    v56 = v65;
    *(_QWORD *)(v53 + 16) = v55 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v53+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v55, v72, v48);
    if (*(_QWORD *)(v34 + 16))
      goto LABEL_18;
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  v53 = MEMORY[0x1E0DEE9D8];
  v56 = v65;
  if (!*(_QWORD *)(v34 + 16))
    goto LABEL_26;
LABEL_18:
  if (qword_1EEC40FE0 != -1)
    swift_once();
  v57 = __swift_project_value_buffer(v46, (uint64_t)qword_1EEC43398);
  v58 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v73, v57, v46);
  v59 = sub_1ABD84154();
  MEMORY[0x1AF436098](v58, v34, &type metadata for SymbolWidgetEntity, v59);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v53 = sub_1ABD82D20(0, *(_QWORD *)(v53 + 16) + 1, 1, v53);
  v61 = *(_QWORD *)(v53 + 16);
  v60 = *(_QWORD *)(v53 + 24);
  if (v61 >= v60 >> 1)
    v53 = sub_1ABD82D20(v60 > 1, v61 + 1, 1, v53);
  *(_QWORD *)(v53 + 16) = v61 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v53+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v61, v56, v48);
LABEL_27:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v70, 1, 1, v46);
  sub_1ABD84154();
  return sub_1ABF2FEE4();
}

uint64_t sub_1ABE02B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = v1;
  return swift_task_switch();
}

uint64_t sub_1ABE02B60()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[28] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BD0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Default symbol entity requested", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v5 = v0[22];
  v6 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v5);
  v0[29] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
  v7 = (_QWORD *)swift_task_alloc();
  v0[30] = v7;
  *v7 = v0;
  v7[1] = sub_1ABE02CC4;
  return sub_1ABF31150();
}

uint64_t sub_1ABE02CC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE02D3C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[4];
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;

  v1 = *(_QWORD *)(v0 + 192);
  if (*(_QWORD *)(v1 + 16))
  {
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 32);
    v2 = *(_OWORD *)(v1 + 96);
    v4 = *(_OWORD *)(v1 + 48);
    v3 = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v0 + 80) = v2;
    *(_OWORD *)(v0 + 32) = v4;
    *(_OWORD *)(v0 + 48) = v3;
    v6 = *(_OWORD *)(v1 + 128);
    v5 = *(_OWORD *)(v1 + 144);
    v7 = *(_OWORD *)(v1 + 112);
    *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + 160);
    *(_OWORD *)(v0 + 112) = v6;
    *(_OWORD *)(v0 + 128) = v5;
    *(_OWORD *)(v0 + 96) = v7;
    sub_1ABD97ECC(v0 + 16);
    swift_bridgeObjectRelease();
    v39 = *(_OWORD *)(v0 + 120);
    v40 = *(_OWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 96);
    v11 = *(_BYTE *)(v0 + 80);
    v42 = *(_QWORD *)(v0 + 64);
    v43 = *(_QWORD *)(v0 + 112);
    v37 = *(_QWORD *)(v0 + 72);
    v38 = *(_QWORD *)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 24);
    v35 = *(_QWORD *)(v0 + 56);
    v36 = *(_QWORD *)(v0 + 32);
    v34 = *(_QWORD *)(v0 + 40);
    v41 = *(_QWORD *)(v0 + 16);
    sub_1ABD97ECC(v0 + 16);
    v13 = sub_1ABF31324();
    v14 = sub_1ABF31BD0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v33 = v9;
      v16 = swift_slowAlloc();
      *(_QWORD *)&v45 = v16;
      *(_DWORD *)v15 = 136315138;
      sub_1ABF2FF5C();
      *(_QWORD *)(v0 + 200) = sub_1ABD1FE2C(v41, v12, (uint64_t *)&v45);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      sub_1ABD97F60(v0 + 16);
      _os_log_impl(&dword_1ABCEF000, v13, v14, "Returning first watched stock for default symbol entity, stock=%s", v15, 0xCu);
      swift_arrayDestroy();
      v17 = v16;
      v9 = v33;
      MEMORY[0x1AF438FFC](v17, -1, -1);
      MEMORY[0x1AF438FFC](v15, -1, -1);
    }
    else
    {
      sub_1ABD97F60(v0 + 16);
    }

    v27 = v39;
    v28 = v40;
    v26 = v37;
    v24 = v38;
    v25 = v35;
    v22 = v36;
    v21 = v41;
    v23 = v34;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = sub_1ABF31324();
    v19 = sub_1ABF31BE8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1ABCEF000, v18, v19, "No watched symbols to return as default symbol entity, falling back to AAPL", v20, 2u);
      MEMORY[0x1AF438FFC](v20, -1, -1);
    }

    LOBYTE(v44[0]) = 3;
    sub_1ABD15B80(1280328001, 0xE400000000000000, 0x6E4920656C707041, 0xEA00000000002E63, 0x51414453414ELL, 0xE600000000000000, (char *)v44, 0, (uint64_t)&v45, 0, 0, 0, 0, 0, 0, 0);
    v12 = *((_QWORD *)&v45 + 1);
    v21 = v45;
    v22 = v46;
    v23 = v47;
    v24 = v48;
    v25 = v49;
    v26 = v51;
    v42 = v50;
    v11 = v52;
    v9 = v53;
    v10 = v54;
    v8 = v55;
    v43 = v56;
    v27 = v57;
    v28 = v58;
  }
  v29 = *(_OWORD **)(v0 + 208);
  *(_QWORD *)&v45 = v21;
  *((_QWORD *)&v45 + 1) = v12;
  v46 = v22;
  v47 = v23;
  v48 = v24;
  v49 = v25;
  v50 = v42;
  v51 = v26;
  v52 = v11;
  v53 = v9;
  v54 = v10;
  v55 = v8;
  v56 = v43;
  v57 = v27;
  v58 = v28;
  sub_1ABE1F5D8(&v45, (uint64_t *)v44);
  v30 = v44[1];
  *v29 = v44[0];
  v29[1] = v30;
  v31 = v44[3];
  v29[2] = v44[2];
  v29[3] = v31;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE030CC()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[4];
  __int128 v10;

  v1 = *(void **)(v0 + 248);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);

  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BE8();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "No watched symbols to return as default symbol entity, falling back to AAPL", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }

  LOBYTE(v9[0]) = 3;
  sub_1ABD15B80(1280328001, 0xE400000000000000, 0x6E4920656C707041, 0xEA00000000002E63, 0x51414453414ELL, 0xE600000000000000, (char *)v9, 0, (uint64_t)&v10, 0, 0, 0, 0, 0, 0, 0);
  v5 = *(_OWORD **)(v0 + 208);
  sub_1ABE1F5D8(&v10, (uint64_t *)v9);
  v6 = v9[1];
  *v5 = v9[0];
  v5[1] = v6;
  v7 = v9[3];
  v5[2] = v9[2];
  v5[3] = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE0325C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1ABE03288()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *sub_1ABE032BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  v2 = swift_allocObject();
  result = sub_1ABE01708();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABE032F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1ABD8C690;
  return sub_1ABE01828(a1);
}

uint64_t sub_1ABE03344(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1ABD7E2B8;
  v5[10] = a1;
  v5[11] = v4;
  return swift_task_switch();
}

uint64_t sub_1ABE033A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *v3;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1ABD37AA0;
  v9[14] = a3;
  v9[15] = v8;
  v9[12] = a1;
  v9[13] = a2;
  return swift_task_switch();
}

uint64_t sub_1ABE03420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  return swift_task_switch();
}

uint64_t sub_1ABE0343C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[14];
  if (v4)
  {
    v6 = v0[13];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1ABF2FF5C();
    v0[11] = sub_1ABD1FE2C(v6, v5, &v15);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching stocks for symbol entities matching string='%s'", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = v0[14];
  v10 = v0[13];
  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v11 = v0[5];
  v12 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v11);
  v0[17] = sub_1ABD78990(v10, v9, v11, v12);
  v13 = (_QWORD *)swift_task_alloc();
  v0[18] = v13;
  *v13 = v0;
  v13[1] = sub_1ABE03678;
  return sub_1ABF31150();
}

uint64_t sub_1ABE03678()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE036F0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0[7];
  v0[20] = v1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v5 = v0[13];
    v4 = v0[14];
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v30 = v7;
    *(_DWORD *)v6 = 136315394;
    sub_1ABF2FF5C();
    v0[8] = sub_1ABD1FE2C(v5, v4, &v30);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    v8 = *(_QWORD *)(v1 + 16);
    v9 = MEMORY[0x1E0DEE9D8];
    if (v8)
    {
      v25 = v7;
      v26 = v3;
      v27 = v6;
      v28 = v2;
      v31 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v8, 0);
      v9 = v31;
      v10 = *(_QWORD *)(v31 + 16);
      v11 = 16 * v10;
      v29 = v1;
      v12 = (uint64_t *)(v1 + 40);
      do
      {
        v13 = *(v12 - 1);
        v14 = *v12;
        v31 = v9;
        v15 = v10 + 1;
        v16 = *(_QWORD *)(v9 + 24);
        sub_1ABF2FF5C();
        if (v10 >= v16 >> 1)
        {
          sub_1ABD16414(v16 > 1, v15, 1);
          v9 = v31;
        }
        *(_QWORD *)(v9 + 16) = v15;
        v17 = v9 + v11;
        *(_QWORD *)(v17 + 32) = v13;
        *(_QWORD *)(v17 + 40) = v14;
        v11 += 16;
        v12 += 17;
        ++v10;
        --v8;
      }
      while (v8);
      v2 = v28;
      v1 = v29;
      v6 = v27;
      v3 = v26;
      v7 = v25;
    }
    v0[9] = v9;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v18 = sub_1ABF316E4();
    v20 = v19;
    swift_bridgeObjectRelease();
    v0[10] = sub_1ABD1FE2C(v18, v20, &v30);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetched stocks for symbol entities matching string='%s', stocks=[%s]", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v7, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v21 = (_QWORD *)swift_task_alloc();
  v0[21] = v21;
  *v21 = v0;
  v21[1] = sub_1ABE03A18;
  v22 = v0[15];
  v23 = v0[12];
  v21[40] = v1;
  v21[41] = v22;
  v21[39] = v23;
  return swift_task_switch();
}

uint64_t sub_1ABE03A18()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABE03A6C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE03AAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1ABCFE22C((unint64_t *)&qword_1EEC43438, v2, (uint64_t (*)(uint64_t))type metadata accessor for SymbolWidgetQuery, (uint64_t)&unk_1ABF3EC40);
  *v1 = v0;
  v1[1] = sub_1ABD7E2B8;
  return sub_1ABF2FCC8();
}

uint64_t sub_1ABE03B30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1ABD37AA0;
  v5[26] = a1;
  v5[27] = v4;
  return swift_task_switch();
}

uint64_t sub_1ABE03B94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[40] = a2;
  v3[41] = v2;
  v3[39] = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE03BB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v1 = v0[22];
  v2 = v0[23];
  __swift_project_boxed_opaque_existential_1(v0 + 19, v1);
  v0[42] = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 120))(v1, v2);
  v3 = (_QWORD *)swift_task_alloc();
  v0[43] = v3;
  *v3 = v0;
  v3[1] = sub_1ABE03C64;
  return sub_1ABF31150();
}

uint64_t sub_1ABE03C64()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 152);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE03CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _QWORD *v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  os_log_type_t v87;
  uint64_t v88;
  NSObject *log;
  _DWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;

  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 240) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 248) = v1;
  v92 = (_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v93 = (_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(v0 + 16);
    v6 = v3 + 32;
    sub_1ABF2FF5C();
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v8 = v4;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      *(_OWORD *)v5 = *(_OWORD *)v6;
      v17 = *(_OWORD *)(v6 + 16);
      v18 = *(_OWORD *)(v6 + 32);
      v19 = *(_OWORD *)(v6 + 64);
      *((_OWORD *)v93 - 11) = *(_OWORD *)(v6 + 48);
      *((_OWORD *)v93 - 10) = v19;
      *((_OWORD *)v93 - 13) = v17;
      *((_OWORD *)v93 - 12) = v18;
      v20 = *(_OWORD *)(v6 + 80);
      v21 = *(_OWORD *)(v6 + 96);
      v22 = *(_OWORD *)(v6 + 112);
      *(v93 - 12) = *(_QWORD *)(v6 + 128);
      *((_OWORD *)v93 - 8) = v21;
      *((_OWORD *)v93 - 7) = v22;
      *((_OWORD *)v93 - 9) = v20;
      sub_1ABD97ECC((uint64_t)v5);
      if ((sub_1ABEEFBAC(v5, v2) & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1ABD32E4C(0, v9[2] + 1, 1, v9);
        v24 = v9[2];
        v23 = v9[3];
        if (v24 >= v23 >> 1)
          v9 = sub_1ABD32E4C((_QWORD *)(v23 > 1), v24 + 1, 1, v9);
        v9[2] = v24 + 1;
        v10 = &v9[17 * v24];
        *((_OWORD *)v10 + 2) = *(_OWORD *)v5;
        v11 = *((_OWORD *)v93 - 13);
        v12 = *((_OWORD *)v93 - 12);
        v13 = *((_OWORD *)v93 - 10);
        *((_OWORD *)v10 + 5) = *((_OWORD *)v93 - 11);
        *((_OWORD *)v10 + 6) = v13;
        *((_OWORD *)v10 + 3) = v11;
        *((_OWORD *)v10 + 4) = v12;
        v14 = *((_OWORD *)v93 - 9);
        v15 = *((_OWORD *)v93 - 8);
        v16 = *((_OWORD *)v93 - 7);
        v10[20] = *(v93 - 12);
        *((_OWORD *)v10 + 8) = v15;
        *((_OWORD *)v10 + 9) = v16;
        *((_OWORD *)v10 + 7) = v14;
        *v92 = v9;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v7 = sub_1ABD32E4C(0, v7[2] + 1, 1, v7);
        v26 = v7[2];
        v25 = v7[3];
        if (v26 >= v25 >> 1)
          v7 = sub_1ABD32E4C((_QWORD *)(v25 > 1), v26 + 1, 1, v7);
        v7[2] = v26 + 1;
        v27 = &v7[17 * v26];
        *((_OWORD *)v27 + 2) = *(_OWORD *)v5;
        v28 = *((_OWORD *)v93 - 13);
        v29 = *((_OWORD *)v93 - 12);
        v30 = *((_OWORD *)v93 - 10);
        *((_OWORD *)v27 + 5) = *((_OWORD *)v93 - 11);
        *((_OWORD *)v27 + 6) = v30;
        *((_OWORD *)v27 + 3) = v28;
        *((_OWORD *)v27 + 4) = v29;
        v31 = *((_OWORD *)v93 - 9);
        v32 = *((_OWORD *)v93 - 8);
        v33 = *((_OWORD *)v93 - 7);
        v27[20] = *(v93 - 12);
        *((_OWORD *)v27 + 8) = v32;
        *((_OWORD *)v27 + 9) = v33;
        *((_OWORD *)v27 + 7) = v31;
        *v93 = v7;
      }
      v6 += 136;
      --v8;
    }
    while (v8);
    v0 = v91;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1ED346718 != -1)
    swift_once();
  v34 = sub_1ABF3133C();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED3466E0);
  v35 = *(_QWORD *)(v0 + 240);
  v36 = *(_QWORD *)(v0 + 248);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v37 = sub_1ABF31324();
  v38 = sub_1ABF31BF4();
  if (os_log_type_enabled(v37, v38))
  {
    v87 = v38;
    log = v37;
    v39 = v93 + 5;
    v40 = (_DWORD *)swift_slowAlloc();
    v86 = swift_slowAlloc();
    v94 = v86;
    v90 = v40;
    *v40 = 136315650;
    v41 = MEMORY[0x1E0DEE9D8];
    v88 = v35;
    if (v4)
    {
      v42 = *(_QWORD *)(v0 + 320);
      v95 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v4, 0);
      v41 = v95;
      v43 = *(_QWORD *)(v95 + 16);
      v44 = 16 * v43;
      v45 = (uint64_t *)(v42 + 40);
      do
      {
        v46 = *(v45 - 1);
        v47 = *v45;
        v95 = v41;
        v48 = v43 + 1;
        v49 = *(_QWORD *)(v41 + 24);
        sub_1ABF2FF5C();
        if (v43 >= v49 >> 1)
        {
          sub_1ABD16414(v49 > 1, v48, 1);
          v41 = v95;
        }
        *(_QWORD *)(v41 + 16) = v48;
        v50 = v41 + v44;
        *(_QWORD *)(v50 + 32) = v46;
        *(_QWORD *)(v50 + 40) = v47;
        v44 += 16;
        v45 += 17;
        ++v43;
        --v4;
      }
      while (v4);
      v0 = v91;
      v39 = v93 + 5;
    }
    v51 = v93 + 6;
    *(_QWORD *)(v0 + 264) = v41;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v52 = sub_1ABF316E4();
    v54 = v53;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 272) = sub_1ABD1FE2C(v52, v54, &v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *((_WORD *)v90 + 6) = 2080;
    v55 = *(_QWORD *)(v36 + 16);
    v56 = MEMORY[0x1E0DEE9D8];
    if (v55)
    {
      v95 = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABD16414(0, v55, 0);
      v57 = 0;
      v56 = v95;
      v58 = *(_QWORD *)(v95 + 16);
      v59 = 16 * v58;
      do
      {
        v60 = *(_QWORD *)(v36 + v57 + 32);
        v61 = *(_QWORD *)(v36 + v57 + 40);
        v95 = v56;
        v62 = *(_QWORD *)(v56 + 24);
        v63 = v58 + 1;
        sub_1ABF2FF5C();
        if (v58 >= v62 >> 1)
        {
          sub_1ABD16414(v62 > 1, v63, 1);
          v56 = v95;
        }
        *(_QWORD *)(v56 + 16) = v63;
        v64 = v56 + v59;
        *(_QWORD *)(v64 + 32) = v60;
        *(_QWORD *)(v64 + 40) = v61;
        v59 += 16;
        v57 += 136;
        ++v58;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease();
      v39 = v93 + 5;
      v51 = v93 + 6;
    }
    *v39 = v56;
    v65 = sub_1ABF316E4();
    v67 = v66;
    swift_bridgeObjectRelease();
    *v51 = sub_1ABD1FE2C(v65, v67, &v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *((_WORD *)v90 + 11) = 2080;
    v68 = v88;
    v69 = *(_QWORD *)(v88 + 16);
    v70 = MEMORY[0x1E0DEE9D8];
    v0 = v91;
    if (v69)
    {
      v95 = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABD16414(0, v69, 0);
      v71 = 0;
      v70 = v95;
      v72 = *(_QWORD *)(v95 + 16);
      v73 = 16 * v72;
      do
      {
        v74 = v68;
        v76 = *(_QWORD *)(v68 + v71 + 32);
        v75 = *(_QWORD *)(v68 + v71 + 40);
        v95 = v70;
        v77 = *(_QWORD *)(v70 + 24);
        v78 = v72 + 1;
        sub_1ABF2FF5C();
        if (v72 >= v77 >> 1)
        {
          sub_1ABD16414(v77 > 1, v78, 1);
          v70 = v95;
        }
        *(_QWORD *)(v70 + 16) = v78;
        v79 = v70 + v73;
        *(_QWORD *)(v79 + 32) = v76;
        *(_QWORD *)(v79 + 40) = v75;
        v73 += 16;
        v71 += 136;
        ++v72;
        --v69;
        v68 = v74;
      }
      while (v69);
      swift_bridgeObjectRelease();
      v0 = v91;
    }
    *(_QWORD *)(v0 + 296) = v70;
    v80 = sub_1ABF316E4();
    v82 = v81;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 304) = sub_1ABD1FE2C(v80, v82, &v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v37 = log;
    _os_log_impl(&dword_1ABCEF000, log, v87, "Sectioned stocks=[%s] into watched=[%s], notWatched=[%s]", (uint8_t *)v90, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v86, -1, -1);
    MEMORY[0x1AF438FFC](v90, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v83 = *(_QWORD *)(v0 + 312);
  swift_beginAccess();
  v84 = *(_QWORD *)(v0 + 248);
  swift_beginAccess();
  sub_1ABE0247C(v84, *(_QWORD *)(v0 + 240), v83);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE044D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _QWORD *v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  os_log_type_t v87;
  uint64_t v88;
  NSObject *log;
  _DWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;

  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  v1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 240) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 248) = v1;
  v92 = (_QWORD *)(v0 + 248);
  v93 = (_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v2 + 16);
  v91 = v0;
  if (v3)
  {
    v4 = (uint64_t *)(v0 + 16);
    v5 = v2 + 32;
    sub_1ABF2FF5C();
    v6 = MEMORY[0x1E0DEE9D8];
    v7 = v3;
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      *(_OWORD *)v4 = *(_OWORD *)v5;
      v17 = *(_OWORD *)(v5 + 16);
      v18 = *(_OWORD *)(v5 + 32);
      v19 = *(_OWORD *)(v5 + 64);
      *((_OWORD *)v93 - 11) = *(_OWORD *)(v5 + 48);
      *((_OWORD *)v93 - 10) = v19;
      *((_OWORD *)v93 - 13) = v17;
      *((_OWORD *)v93 - 12) = v18;
      v20 = *(_OWORD *)(v5 + 80);
      v21 = *(_OWORD *)(v5 + 96);
      v22 = *(_OWORD *)(v5 + 112);
      *(v93 - 12) = *(_QWORD *)(v5 + 128);
      *((_OWORD *)v93 - 8) = v21;
      *((_OWORD *)v93 - 7) = v22;
      *((_OWORD *)v93 - 9) = v20;
      sub_1ABD97ECC((uint64_t)v4);
      if ((sub_1ABEEFBAC(v4, v6) & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1ABD32E4C(0, v9[2] + 1, 1, v9);
        v24 = v9[2];
        v23 = v9[3];
        if (v24 >= v23 >> 1)
          v9 = sub_1ABD32E4C((_QWORD *)(v23 > 1), v24 + 1, 1, v9);
        v9[2] = v24 + 1;
        v10 = &v9[17 * v24];
        *((_OWORD *)v10 + 2) = *(_OWORD *)v4;
        v11 = *((_OWORD *)v93 - 13);
        v12 = *((_OWORD *)v93 - 12);
        v13 = *((_OWORD *)v93 - 10);
        *((_OWORD *)v10 + 5) = *((_OWORD *)v93 - 11);
        *((_OWORD *)v10 + 6) = v13;
        *((_OWORD *)v10 + 3) = v11;
        *((_OWORD *)v10 + 4) = v12;
        v14 = *((_OWORD *)v93 - 9);
        v15 = *((_OWORD *)v93 - 8);
        v16 = *((_OWORD *)v93 - 7);
        v10[20] = *(v93 - 12);
        *((_OWORD *)v10 + 8) = v15;
        *((_OWORD *)v10 + 9) = v16;
        *((_OWORD *)v10 + 7) = v14;
        *v92 = v9;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = sub_1ABD32E4C(0, v8[2] + 1, 1, v8);
        v26 = v8[2];
        v25 = v8[3];
        if (v26 >= v25 >> 1)
          v8 = sub_1ABD32E4C((_QWORD *)(v25 > 1), v26 + 1, 1, v8);
        v8[2] = v26 + 1;
        v27 = &v8[17 * v26];
        *((_OWORD *)v27 + 2) = *(_OWORD *)v4;
        v28 = *((_OWORD *)v93 - 13);
        v29 = *((_OWORD *)v93 - 12);
        v30 = *((_OWORD *)v93 - 10);
        *((_OWORD *)v27 + 5) = *((_OWORD *)v93 - 11);
        *((_OWORD *)v27 + 6) = v30;
        *((_OWORD *)v27 + 3) = v28;
        *((_OWORD *)v27 + 4) = v29;
        v31 = *((_OWORD *)v93 - 9);
        v32 = *((_OWORD *)v93 - 8);
        v33 = *((_OWORD *)v93 - 7);
        v27[20] = *(v93 - 12);
        *((_OWORD *)v27 + 8) = v32;
        *((_OWORD *)v27 + 9) = v33;
        *((_OWORD *)v27 + 7) = v31;
        *v93 = v8;
      }
      v5 += 136;
      --v7;
    }
    while (v7);
    v0 = v91;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1ED346718 != -1)
    swift_once();
  v34 = sub_1ABF3133C();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED3466E0);
  v35 = *(_QWORD *)(v0 + 240);
  v36 = *(_QWORD *)(v0 + 248);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v37 = sub_1ABF31324();
  v38 = sub_1ABF31BF4();
  if (os_log_type_enabled(v37, v38))
  {
    v87 = v38;
    log = v37;
    v39 = v93 + 5;
    v40 = (_DWORD *)swift_slowAlloc();
    v86 = swift_slowAlloc();
    v94 = v86;
    v90 = v40;
    *v40 = 136315650;
    v41 = MEMORY[0x1E0DEE9D8];
    v88 = v35;
    if (v3)
    {
      v42 = *(_QWORD *)(v0 + 320);
      v95 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v3, 0);
      v41 = v95;
      v43 = *(_QWORD *)(v95 + 16);
      v44 = 16 * v43;
      v45 = (uint64_t *)(v42 + 40);
      do
      {
        v46 = *(v45 - 1);
        v47 = *v45;
        v95 = v41;
        v48 = v43 + 1;
        v49 = *(_QWORD *)(v41 + 24);
        sub_1ABF2FF5C();
        if (v43 >= v49 >> 1)
        {
          sub_1ABD16414(v49 > 1, v48, 1);
          v41 = v95;
        }
        *(_QWORD *)(v41 + 16) = v48;
        v50 = v41 + v44;
        *(_QWORD *)(v50 + 32) = v46;
        *(_QWORD *)(v50 + 40) = v47;
        v44 += 16;
        v45 += 17;
        ++v43;
        --v3;
      }
      while (v3);
      v0 = v91;
      v39 = v93 + 5;
    }
    v51 = v93 + 6;
    *(_QWORD *)(v0 + 264) = v41;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v52 = sub_1ABF316E4();
    v54 = v53;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 272) = sub_1ABD1FE2C(v52, v54, &v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *((_WORD *)v90 + 6) = 2080;
    v55 = *(_QWORD *)(v36 + 16);
    v56 = MEMORY[0x1E0DEE9D8];
    if (v55)
    {
      v95 = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABD16414(0, v55, 0);
      v57 = 0;
      v56 = v95;
      v58 = *(_QWORD *)(v95 + 16);
      v59 = 16 * v58;
      do
      {
        v60 = *(_QWORD *)(v36 + v57 + 32);
        v61 = *(_QWORD *)(v36 + v57 + 40);
        v95 = v56;
        v62 = *(_QWORD *)(v56 + 24);
        v63 = v58 + 1;
        sub_1ABF2FF5C();
        if (v58 >= v62 >> 1)
        {
          sub_1ABD16414(v62 > 1, v63, 1);
          v56 = v95;
        }
        *(_QWORD *)(v56 + 16) = v63;
        v64 = v56 + v59;
        *(_QWORD *)(v64 + 32) = v60;
        *(_QWORD *)(v64 + 40) = v61;
        v59 += 16;
        v57 += 136;
        ++v58;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease();
      v39 = v93 + 5;
      v51 = v93 + 6;
    }
    *v39 = v56;
    v65 = sub_1ABF316E4();
    v67 = v66;
    swift_bridgeObjectRelease();
    *v51 = sub_1ABD1FE2C(v65, v67, &v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *((_WORD *)v90 + 11) = 2080;
    v68 = v88;
    v69 = *(_QWORD *)(v88 + 16);
    v70 = MEMORY[0x1E0DEE9D8];
    v0 = v91;
    if (v69)
    {
      v95 = MEMORY[0x1E0DEE9D8];
      sub_1ABF2FF5C();
      sub_1ABD16414(0, v69, 0);
      v71 = 0;
      v70 = v95;
      v72 = *(_QWORD *)(v95 + 16);
      v73 = 16 * v72;
      do
      {
        v74 = v68;
        v76 = *(_QWORD *)(v68 + v71 + 32);
        v75 = *(_QWORD *)(v68 + v71 + 40);
        v95 = v70;
        v77 = *(_QWORD *)(v70 + 24);
        v78 = v72 + 1;
        sub_1ABF2FF5C();
        if (v72 >= v77 >> 1)
        {
          sub_1ABD16414(v77 > 1, v78, 1);
          v70 = v95;
        }
        *(_QWORD *)(v70 + 16) = v78;
        v79 = v70 + v73;
        *(_QWORD *)(v79 + 32) = v76;
        *(_QWORD *)(v79 + 40) = v75;
        v73 += 16;
        v71 += 136;
        ++v72;
        --v69;
        v68 = v74;
      }
      while (v69);
      swift_bridgeObjectRelease();
      v0 = v91;
    }
    *(_QWORD *)(v0 + 296) = v70;
    v80 = sub_1ABF316E4();
    v82 = v81;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 304) = sub_1ABD1FE2C(v80, v82, &v94);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v37 = log;
    _os_log_impl(&dword_1ABCEF000, log, v87, "Sectioned stocks=[%s] into watched=[%s], notWatched=[%s]", (uint8_t *)v90, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v86, -1, -1);
    MEMORY[0x1AF438FFC](v90, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v83 = *(_QWORD *)(v0 + 312);
  swift_beginAccess();
  v84 = *(_QWORD *)(v0 + 248);
  swift_beginAccess();
  sub_1ABE0247C(v84, *(_QWORD *)(v0 + 240), v83);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE04CC0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABE0BB4C();
  v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1EEC433B0);
  __swift_project_value_buffer(v1, (uint64_t)qword_1EEC433B0);
  sub_1ABE0BBAC();
  return sub_1ABF2FF20();
}

uint64_t sub_1ABE04D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1ABE0DA38();
  swift_getKeyPath();
  sub_1ABF2FEC0();
  sub_1ABE0BBAC();
  v0 = sub_1ABF2FF68();
  swift_release();
  swift_getKeyPath();
  sub_1ABF2FF68();
  sub_1ABF2FEC0();
  v1 = sub_1ABF2FF68();
  swift_release();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ABF3EC20;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v1;
  sub_1ABF31A20();
  sub_1ABF2FF68();
  v3 = sub_1ABF300A0();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1ABE04E7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  v2 = sub_1ABF2FD34();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABE04F2C()
{
  return sub_1ABE05080();
}

uint64_t sub_1ABE04F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1ABE052DC(a1, a2, (uint64_t)sub_1ABE0DD70, a3);
}

uint64_t sub_1ABE04F54()
{
  sub_1ABD0E288();
  return sub_1ABF31DC8() & 1;
}

uint64_t sub_1ABE04FA8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABE0539C(a1, (uint64_t)sub_1ABE0DD44, a2);
}

uint64_t sub_1ABE04FBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  v2 = sub_1ABF2FD34();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABE0506C()
{
  return sub_1ABE05080();
}

uint64_t sub_1ABE05080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  sub_1ABE0DAF0();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - v6;
  sub_1ABE0DB9C();
  swift_allocObject();
  sub_1ABF2FE84();
  sub_1ABE0BBAC();
  sub_1ABF300D0();
  swift_release();
  sub_1ABE0DC40();
  swift_allocObject();
  sub_1ABF2FE3C();
  sub_1ABF300D0();
  swift_release();
  sub_1ABCF5A54(0, &qword_1EEC434A8, (uint64_t (*)(uint64_t))sub_1ABE0DAF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = *(_QWORD *)(v2 + 72);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1ABF366E0;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 16);
  v12(v11, v7, v1);
  v12(v11 + v8, v4, v1);
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
  sub_1ABD94F2C();
  v13 = sub_1ABF300C4();
  swift_bridgeObjectRelease();
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v4, v1);
  v14(v7, v1);
  return v13;
}

uint64_t sub_1ABE052C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1ABE052DC(a1, a2, (uint64_t)sub_1ABE0DD3C, a3);
}

uint64_t sub_1ABE052DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  a4[3] = v8;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1ABE05334()
{
  sub_1ABD0E288();
  return sub_1ABF31DC8() & 1;
}

uint64_t sub_1ABE05388@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABE0539C(a1, (uint64_t)sub_1ABE0DD10, a2);
}

uint64_t sub_1ABE0539C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  *a3 = v6;
  a3[1] = v5;
  a3[2] = a2;
  a3[3] = v7;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1ABE053F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EEC40FE8 != -1)
    swift_once();
  sub_1ABE0BB4C();
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC433B0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_1ABE05488(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EEC40FE8 != -1)
    swift_once();
  sub_1ABE0BB4C();
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC433B0);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v4, a1, v3);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
}

uint64_t (*sub_1ABE05538())()
{
  uint64_t v0;

  if (qword_1EEC40FE8 != -1)
    swift_once();
  sub_1ABE0BB4C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC433B0);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1ABE055B0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABCF4DA8(0, &qword_1EEC43418, (uint64_t (*)(void))sub_1ABE0BBAC, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C918C8]);
  v1 = v0;
  __swift_allocate_value_buffer(v0, qword_1EEC433C8);
  __swift_project_value_buffer(v1, (uint64_t)qword_1EEC433C8);
  sub_1ABE0BBAC();
  return sub_1ABF30028();
}

uint64_t sub_1ABE05640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(unint64_t, char *, uint64_t);
  char *v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  char *v24;
  char *v25;

  sub_1ABCF4DA8(0, &qword_1EEC43478, (uint64_t (*)(void))sub_1ABE0BBAC, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C91AC0]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - v9;
  MEMORY[0x1E0C80A78](v11);
  v25 = (char *)&v24 - v12;
  swift_getKeyPath();
  sub_1ABE0BBAC();
  sub_1ABD98080();
  sub_1ABF300DC();
  sub_1ABF30118();
  v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  v13(v10, v1);
  swift_getKeyPath();
  sub_1ABF300DC();
  sub_1ABF30118();
  v24 = v7;
  v13(v7, v1);
  swift_getKeyPath();
  sub_1ABF300DC();
  sub_1ABF30118();
  v13(v4, v1);
  sub_1ABE0D9C4();
  v14 = *(_QWORD *)(v2 + 72);
  v15 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1ABF36EA0;
  v17 = v16 + v15;
  v18 = *(void (**)(unint64_t, char *, uint64_t))(v2 + 16);
  v19 = v25;
  v18(v17, v25, v1);
  v18(v17 + v14, v10, v1);
  v20 = v17 + 2 * v14;
  v21 = v24;
  v18(v20, v24, v1);
  v22 = sub_1ABF3010C();
  swift_bridgeObjectRelease();
  v13(v21, v1);
  v13(v10, v1);
  v13(v19, v1);
  return v22;
}

uint64_t sub_1ABE058CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  v2 = sub_1ABF2FD34();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABE0597C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EEC40FF0 != -1)
    swift_once();
  sub_1ABCF4DA8(0, &qword_1EEC43418, (uint64_t (*)(void))sub_1ABE0BBAC, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C918C8]);
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC433C8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_1ABE05A34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_1EEC40FF0 != -1)
    swift_once();
  sub_1ABCF4DA8(0, &qword_1EEC43418, (uint64_t (*)(void))sub_1ABE0BBAC, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C918C8]);
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC433C8);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v4, a1, v3);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
}

uint64_t (*sub_1ABE05B04())()
{
  uint64_t v0;

  if (qword_1EEC40FF0 != -1)
    swift_once();
  sub_1ABCF4DA8(0, &qword_1EEC43418, (uint64_t (*)(void))sub_1ABE0BBAC, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C918C8]);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC433C8);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1ABE05B9C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 576) = v6;
  *(_BYTE *)(v7 + 689) = a6;
  *(_QWORD *)(v7 + 568) = a5;
  *(_QWORD *)(v7 + 560) = a4;
  *(_BYTE *)(v7 + 688) = a3;
  *(_QWORD *)(v7 + 552) = a2;
  *(_QWORD *)(v7 + 544) = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE05BCC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  *(_QWORD *)(v0 + 584) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v27 = *(_BYTE *)(v0 + 689);
    v28 = *(_QWORD *)(v0 + 568);
    v4 = *(_QWORD *)(v0 + 560);
    v5 = *(_QWORD *)(v0 + 552);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v30 = v7;
    *(_DWORD *)v6 = 134218754;
    *(_QWORD *)(v0 + 512) = *(_QWORD *)(v5 + 16);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v8 = sub_1ABF3001C();
    v9 = (v8 & 1) == 0;
    if ((v8 & 1) != 0)
      v10 = 6581857;
    else
      v10 = 29295;
    if (v9)
      v11 = 0xE200000000000000;
    else
      v11 = 0xE300000000000000;
    *(_QWORD *)(v0 + 520) = sub_1ABD1FE2C(v10, v11, &v30);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2048;
    v12 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 528) = v12;
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 32) = 2048;
    v13 = v28;
    if ((v27 & 1) != 0)
      v13 = 0;
    *(_QWORD *)(v0 + 536) = v13;
    sub_1ABF31D80();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Querying stocks for symbol entities matching property queryCount=%ld, comparatorMode=%s, sortCount=%ld, limit=%ld", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v7, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }

  v14 = *(_QWORD **)(v0 + 552);
  v15 = v14[2];
  *(_QWORD *)(v0 + 592) = v15;
  if (v15)
  {
    *(_OWORD *)(v0 + 600) = 0u;
    v16 = v14[4];
    *(_QWORD *)(v0 + 616) = v16;
    v17 = v14[5];
    *(_QWORD *)(v0 + 624) = v17;
    *(_QWORD *)(v0 + 632) = v14[6];
    *(_QWORD *)(v0 + 640) = v14[7];
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    sub_1ABF2FF5C();
    v18 = sub_1ABF31324();
    v19 = sub_1ABF31BDC();
    if (os_log_type_enabled(v18, v19))
    {
      v29 = v16;
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v30 = v21;
      *(_DWORD *)v20 = 136315138;
      sub_1ABF2FF5C();
      *(_QWORD *)(v0 + 504) = sub_1ABD1FE2C(v29, v17, &v30);
      sub_1ABF31D80();
      swift_bridgeObjectRelease_n();
      swift_release();
      _os_log_impl(&dword_1ABCEF000, v18, v19, "Querying stocks for symbol entities matching property query=%s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v21, -1, -1);
      v22 = v20;
      v16 = v29;
      MEMORY[0x1AF438FFC](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
    }

    sub_1ABF2FF68();
    sub_1ABF2FBF0();
    swift_release();
    v24 = *(_QWORD *)(v0 + 312);
    v25 = *(_QWORD *)(v0 + 320);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 288), v24);
    *(_QWORD *)(v0 + 648) = sub_1ABD78990(v16, v17, v24, v25);
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 656) = v26;
    *v26 = v0;
    v26[1] = sub_1ABE060B4;
    return sub_1ABF31150();
  }
  else
  {
    sub_1ABD84154();
    sub_1ABF2FEF0();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1ABE060B4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 664) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 288);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE06154()
{
  int64_t v0;
  int64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  BOOL v23;
  unint64_t v24;
  _QWORD *v25;
  NSObject *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  _BOOL4 v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  os_log_type_t v80;
  _DWORD *v81;
  int64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  uint64_t *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  char v100;
  BOOL v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  os_log_type_t v106;
  uint8_t *v107;
  int64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  _QWORD *v122;
  uint64_t v123;
  unint64_t v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  NSObject *v139;
  os_log_type_t v140;
  uint8_t *v141;
  int64_t isa;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  NSObject *v146;
  Class v147;
  Class v148;
  int64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  NSObject *v159;
  os_log_type_t v160;
  uint64_t v161;
  uint8_t *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  os_log_type_t v168;
  os_log_type_t v169;
  uint64_t v170;
  uint8_t *v171;
  _DWORD *v172;
  os_log_type_t v173;
  os_log_type_t v174;
  NSObject *v175;
  NSObject *v176;
  uint8_t *v177;
  uint64_t v178;
  uint8_t *v179;
  NSObject *log;
  uint64_t *loga;
  os_log_t logb;
  os_log_t logc;
  _QWORD *v184;
  uint64_t *v185;
  uint64_t *v186;
  _QWORD *v187;
  _QWORD *v188;
  _QWORD *v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  char v200;
  char v201;
  char v202;
  os_log_type_t v203;
  _OWORD v204[8];
  uint64_t v205;
  uint64_t v206[3];

  v1 = v0;
  v2 = (uint64_t *)(v0 + 464);
  v3 = *(_QWORD *)(v0 + 336);
  v4 = *(_QWORD *)(v3 + 16);
  sub_1ABD97FF4();
  v5 = sub_1ABF31B34();
  *(_QWORD *)(v0 + 328) = v5;
  if (v4)
  {
    v6 = (_OWORD *)(v0 + 16);
    v7 = (_OWORD *)(v0 + 152);
    v8 = v4 - 1;
    for (i = 32; ; i += 136)
    {
      *v6 = *(_OWORD *)(v3 + i);
      v10 = *(_OWORD *)(v3 + i + 16);
      v11 = *(_OWORD *)(v3 + i + 32);
      v12 = *(_OWORD *)(v3 + i + 64);
      *(_OWORD *)(v1 + 64) = *(_OWORD *)(v3 + i + 48);
      *(_OWORD *)(v1 + 80) = v12;
      *(_OWORD *)(v1 + 32) = v10;
      *(_OWORD *)(v1 + 48) = v11;
      v13 = *(_OWORD *)(v3 + i + 80);
      v14 = *(_OWORD *)(v3 + i + 96);
      v15 = *(_OWORD *)(v3 + i + 112);
      *(_QWORD *)(v1 + 144) = *(_QWORD *)(v3 + i + 128);
      *(_OWORD *)(v1 + 112) = v14;
      *(_OWORD *)(v1 + 128) = v15;
      *(_OWORD *)(v1 + 96) = v13;
      sub_1ABD97ECC(v1 + 16);
      sub_1ABE08788((uint64_t)v204, v1 + 16);
      v16 = v204[7];
      *(_OWORD *)(v1 + 248) = v204[6];
      *(_OWORD *)(v1 + 264) = v16;
      *(_QWORD *)(v1 + 280) = v205;
      v17 = v204[3];
      *(_OWORD *)(v1 + 184) = v204[2];
      *(_OWORD *)(v1 + 200) = v17;
      v18 = v204[5];
      *(_OWORD *)(v1 + 216) = v204[4];
      *(_OWORD *)(v1 + 232) = v18;
      v19 = v204[1];
      *v7 = v204[0];
      *(_OWORD *)(v1 + 168) = v19;
      sub_1ABD97F60(v1 + 152);
      if (!v8)
        break;
      --v8;
    }
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(v1 + 328);
  }
  else
  {
    v20 = v5;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  v21 = sub_1ABF31324();
  v22 = sub_1ABF31BDC();
  v23 = os_log_type_enabled(v21, v22);
  v24 = *(_QWORD *)(v1 + 624);
  v185 = v2;
  v188 = (_QWORD *)v1;
  if (v23)
  {
    v174 = v22;
    log = v21;
    v25 = (_QWORD *)(v1 + 480);
    v26 = *(NSObject **)(v1 + 616);
    v27 = swift_slowAlloc();
    v170 = swift_slowAlloc();
    *(_QWORD *)(v1 + 464) = v170;
    *(_DWORD *)v27 = 136315394;
    sub_1ABF2FF5C();
    *(_QWORD *)(v1 + 472) = sub_1ABD1FE2C((uint64_t)v26, v24, v2);
    v28 = (_QWORD *)(v1 + 480);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_release();
    v177 = (uint8_t *)v27;
    *(_WORD *)(v27 + 12) = 2080;
    v1 = *(_QWORD *)(v20 + 16);
    v29 = MEMORY[0x1E0DEE9D8];
    if (v1)
    {
      *v25 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v1, 0);
      v30 = *v25;
      v31 = sub_1ABD9495C(v20);
      v33 = v32;
      v35 = v34 & 1;
      v189 = v25;
      v194 = v20 + 56;
      while ((v31 & 0x8000000000000000) == 0 && v31 < 1 << *(_BYTE *)(v20 + 32))
      {
        if (((*(_QWORD *)(v194 + (((unint64_t)v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
          goto LABEL_103;
        if (*(_DWORD *)(v20 + 36) != (_DWORD)v33)
          goto LABEL_104;
        v199 = v35;
        v36 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 136 * v31);
        v37 = *v36;
        v26 = v36[1];
        *v28 = v30;
        v38 = v20;
        v39 = *(_QWORD *)(v30 + 16);
        v40 = *(_QWORD *)(v30 + 24);
        sub_1ABF2FF5C();
        if (v39 >= v40 >> 1)
        {
          sub_1ABD16414(v40 > 1, v39 + 1, 1);
          v30 = *v189;
        }
        *(_QWORD *)(v30 + 16) = v39 + 1;
        v41 = v30 + 16 * v39;
        *(_QWORD *)(v41 + 32) = v37;
        *(_QWORD *)(v41 + 40) = v26;
        v42 = sub_1ABD94A00(v31, v33, v199 & 1, v38);
        v31 = v42;
        v33 = v43;
        v35 = v44 & 1;
        --v1;
        v20 = v38;
        v28 = v189;
        if (!v1)
        {
          v29 = v30;
          sub_1ABD97C9C(v42, v43, v35);
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
LABEL_19:
    v1 = (int64_t)v188;
    v188[61] = v29;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v45 = sub_1ABF316E4();
    v47 = v46;
    swift_bridgeObjectRelease();
    v188[62] = sub_1ABD1FE2C(v45, v47, v185);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v21 = log;
    _os_log_impl(&dword_1ABCEF000, log, v174, "Successfully found stocks for symbol entities matching property query=%s, results=[%s]", v177, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v170, -1, -1);
    MEMORY[0x1AF438FFC](v177, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
  }

  v26 = (v1 + 424);
  v48 = *(_QWORD *)(v1 + 664);
  v49 = *(_QWORD *)(v1 + 640);
  v50 = *(_QWORD *)(v1 + 632);
  sub_1ABF2FF68();
  v51 = sub_1ABE0B5AC(v50, v49, v20);
  v178 = v48;
  swift_release();
  swift_retain_n();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  v52 = sub_1ABF31324();
  v20 = sub_1ABF31BDC();
  v53 = os_log_type_enabled(v52, (os_log_type_t)v20);
  v54 = *(_QWORD *)(v1 + 624);
  if (v53)
  {
    v168 = v20;
    v175 = v52;
    v20 = v1 + 440;
    v55 = *(_QWORD *)(v1 + 616);
    v56 = swift_slowAlloc();
    v166 = swift_slowAlloc();
    *(_QWORD *)(v1 + 424) = v166;
    *(_DWORD *)v56 = 136315394;
    sub_1ABF2FF5C();
    loga = (uint64_t *)(v1 + 424);
    *(_QWORD *)(v1 + 432) = sub_1ABD1FE2C(v55, v54, (uint64_t *)(v1 + 424));
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_release();
    v171 = (uint8_t *)v56;
    *(_WORD *)(v56 + 12) = 2080;
    v57 = *(_QWORD *)(v51 + 16);
    v58 = MEMORY[0x1E0DEE9D8];
    if (v57)
    {
      *(_QWORD *)v20 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v57, 0);
      v59 = *(_QWORD *)v20;
      v60 = sub_1ABD9495C(v51);
      v1 = v61;
      v63 = v62 & 1;
      v190 = (uint64_t *)v20;
      v195 = v51 + 56;
      while ((v60 & 0x8000000000000000) == 0 && v60 < 1 << *(_BYTE *)(v51 + 32))
      {
        if (((*(_QWORD *)(v195 + (((unint64_t)v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) == 0)
          goto LABEL_106;
        if (*(_DWORD *)(v51 + 36) != (_DWORD)v1)
          goto LABEL_107;
        v200 = v63;
        v64 = *(_QWORD *)(v51 + 48) + 136 * v60;
        v65 = v51;
        v26 = *(NSObject **)v64;
        v66 = *(_QWORD *)(v64 + 8);
        *(_QWORD *)v20 = v59;
        v67 = *(_QWORD *)(v59 + 16);
        v68 = *(_QWORD *)(v59 + 24);
        sub_1ABF2FF5C();
        if (v67 >= v68 >> 1)
        {
          sub_1ABD16414(v68 > 1, v67 + 1, 1);
          v59 = *v190;
        }
        *(_QWORD *)(v59 + 16) = v67 + 1;
        v69 = v59 + 16 * v67;
        *(_QWORD *)(v69 + 32) = v26;
        *(_QWORD *)(v69 + 40) = v66;
        v70 = sub_1ABD94A00(v60, v1, v200 & 1, v65);
        v60 = v70;
        v1 = v71;
        v63 = v72 & 1;
        --v57;
        v51 = v65;
        v20 = (unint64_t)v190;
        if (!v57)
        {
          v58 = v59;
          sub_1ABD97C9C(v70, v71, v63);
          v1 = (int64_t)v188;
          goto LABEL_32;
        }
      }
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
LABEL_32:
    v26 = v171;
    *(_QWORD *)(v1 + 448) = v58;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABD16600();
    v73 = sub_1ABF316E4();
    v75 = v74;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 456) = sub_1ABD1FE2C(v73, v75, loga);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1ABCEF000, v175, v168, "Filtered stocks for symbol entities matching property query=%s, filtered=[%s]", v171, 0x16u);
    v20 = v166;
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v166, -1, -1);
    MEMORY[0x1AF438FFC](v171, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();

  }
  v186 = (uint64_t *)(v1 + 384);
  v76 = *(_QWORD *)(v1 + 600);
  if (v76)
  {
    if ((*(_BYTE *)(v1 + 688) & 1) != 0)
    {
      v51 = sub_1ABD90470(v51, v76);
    }
    else
    {
      v77 = sub_1ABD91B54(v51, v76);
      swift_release();
      v51 = v77;
    }
    swift_bridgeObjectRetain_n();
    v20 = sub_1ABF31324();
    v80 = sub_1ABF31BDC();
    if (os_log_type_enabled((os_log_t)v20, v80))
    {
      v169 = v80;
      v176 = v20;
      v81 = (_DWORD *)swift_slowAlloc();
      v167 = swift_slowAlloc();
      *v186 = v167;
      v172 = v81;
      *v81 = 136315394;
      v82 = *(_QWORD *)(v51 + 16);
      v83 = MEMORY[0x1E0DEE9D8];
      if (v82)
      {
        v84 = (uint64_t *)(v1 + 392);
        *(_QWORD *)(v1 + 392) = MEMORY[0x1E0DEE9D8];
        sub_1ABF2FF5C();
        sub_1ABD16414(0, v82, 0);
        v83 = *(_QWORD *)(v1 + 392);
        v85 = sub_1ABD9495C(v51);
        v87 = v86;
        v89 = v88 & 1;
        v191 = v51 + 56;
        while ((v85 & 0x8000000000000000) == 0 && v85 < 1 << *(_BYTE *)(v51 + 32))
        {
          if (((*(_QWORD *)(v191 + (((unint64_t)v85 >> 3) & 0xFFFFFFFFFFFFF8)) >> v85) & 1) == 0)
            goto LABEL_109;
          if (*(_DWORD *)(v51 + 36) != (_DWORD)v87)
            goto LABEL_110;
          v201 = v89;
          v90 = (uint64_t *)(*(_QWORD *)(v51 + 48) + 136 * v85);
          v196 = *v90;
          v1 = v51;
          v91 = v90[1];
          *v84 = v83;
          v20 = *(_QWORD *)(v83 + 16);
          v92 = *(_QWORD *)(v83 + 24);
          v26 = (v20 + 1);
          sub_1ABF2FF5C();
          if (v20 >= v92 >> 1)
          {
            sub_1ABD16414(v92 > 1, v20 + 1, 1);
            v83 = *v84;
          }
          *(_QWORD *)(v83 + 16) = v26;
          v93 = v83 + 16 * v20;
          *(_QWORD *)(v93 + 32) = v196;
          *(_QWORD *)(v93 + 40) = v91;
          v94 = sub_1ABD94A00(v85, v87, v201 & 1, v1);
          v85 = v94;
          v87 = v95;
          v89 = v96 & 1;
          --v82;
          v51 = v1;
          if (!v82)
          {
            sub_1ABD97C9C(v94, v95, v89);
            swift_bridgeObjectRelease();
            goto LABEL_52;
          }
        }
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
LABEL_52:
      v188[50] = v83;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v97 = sub_1ABF316E4();
      v99 = v98;
      swift_bridgeObjectRelease();
      v188[51] = sub_1ABD1FE2C(v97, v99, v186);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *((_WORD *)v172 + 6) = 2080;
      v1 = (int64_t)v188;
      v100 = sub_1ABF3001C();
      v101 = (v100 & 1) == 0;
      if ((v100 & 1) != 0)
        v102 = 6581857;
      else
        v102 = 29295;
      if (v101)
        v103 = 0xE200000000000000;
      else
        v103 = 0xE300000000000000;
      v188[52] = sub_1ABD1FE2C(v102, v103, v186);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1ABCEF000, v176, v169, "Combined stock query results into accumulated results=[%s], comparatorMode=%s", (uint8_t *)v172, 0x16u);
      v20 = v167;
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v167, -1, -1);
      MEMORY[0x1AF438FFC](v172, -1, -1);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();

    }
  }
  else
  {
    v78 = sub_1ABF31324();
    v79 = sub_1ABF31BDC();
    if (os_log_type_enabled(v78, v79))
    {
      v20 = swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1ABCEF000, v78, v79, "No existing result for symbol property queries, so storing first results", (uint8_t *)v20, 2u);
      MEMORY[0x1AF438FFC](v20, -1, -1);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();

    }
  }
  v104 = *(_QWORD *)(v1 + 608) + 1;
  if (v104 == *(_QWORD *)(v1 + 592))
  {
    v105 = (_QWORD *)(v1 + 368);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v26 = sub_1ABF31324();
    v106 = sub_1ABF31BF4();
    if (os_log_type_enabled(v26, v106))
    {
      v107 = (uint8_t *)swift_slowAlloc();
      v192 = swift_slowAlloc();
      v206[0] = v192;
      *(_DWORD *)v107 = 136315138;
      v108 = *(_QWORD *)(v51 + 16);
      v109 = MEMORY[0x1E0DEE9D8];
      if (v108)
      {
        v173 = v106;
        logb = v26;
        v184 = (_QWORD *)(v1 + 368);
        *(_QWORD *)&v204[0] = MEMORY[0x1E0DEE9D8];
        sub_1ABD16414(0, v108, 0);
        v109 = *(_QWORD *)&v204[0];
        v110 = sub_1ABD9495C(v51);
        v1 = v111;
        v113 = v112 & 1;
        v197 = v51 + 56;
        while ((v110 & 0x8000000000000000) == 0 && v110 < 1 << *(_BYTE *)(v51 + 32))
        {
          if (((*(_QWORD *)(v197 + (((unint64_t)v110 >> 3) & 0xFFFFFFFFFFFFF8)) >> v110) & 1) == 0)
            goto LABEL_112;
          if (*(_DWORD *)(v51 + 36) != (_DWORD)v1)
            goto LABEL_113;
          v202 = v113;
          v114 = *(_QWORD *)(v51 + 48) + 136 * v110;
          v115 = v51;
          v26 = *(NSObject **)v114;
          v116 = *(_QWORD *)(v114 + 8);
          *(_QWORD *)&v204[0] = v109;
          v20 = *(_QWORD *)(v109 + 16);
          v117 = *(_QWORD *)(v109 + 24);
          sub_1ABF2FF5C();
          if (v20 >= v117 >> 1)
          {
            sub_1ABD16414(v117 > 1, v20 + 1, 1);
            v109 = *(_QWORD *)&v204[0];
          }
          *(_QWORD *)(v109 + 16) = v20 + 1;
          v118 = v109 + 16 * v20;
          *(_QWORD *)(v118 + 32) = v26;
          *(_QWORD *)(v118 + 40) = v116;
          v119 = sub_1ABD94A00(v110, v1, v202 & 1, v115);
          v110 = v119;
          v1 = v120;
          v113 = v121 & 1;
          --v108;
          v51 = v115;
          if (!v108)
          {
            sub_1ABD97C9C(v119, v120, v113);
            v1 = (int64_t)v188;
            v26 = logb;
            v105 = v184;
            v106 = v173;
            goto LABEL_76;
          }
        }
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
        goto LABEL_114;
      }
LABEL_76:
      *v105 = v109;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v133 = sub_1ABF316E4();
      v135 = v134;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v1 + 376) = sub_1ABD1FE2C(v133, v135, v206);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ABCEF000, v26, v106, "Successfully applied all queries, found stocks=[%s]", v107, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v192, -1, -1);
      MEMORY[0x1AF438FFC](v107, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v136 = *(_QWORD *)(v1 + 560);
    v137 = sub_1ABD913F8(v51);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v204[0] = v137;
    sub_1ABF2FF5C();
    sub_1ABF2FF68();
    sub_1ABE0D634((uint64_t *)v204, v136);
    if (v178)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    v138 = (_QWORD *)(v1 + 352);
    swift_bridgeObjectRelease();
    swift_release();
    v26 = *(NSObject **)&v204[0];
    swift_retain_n();
    v139 = sub_1ABF31324();
    v140 = sub_1ABF31BF4();
    if (os_log_type_enabled(v139, v140))
    {
      v203 = v140;
      v193 = (uint64_t *)(v1 + 360);
      v141 = (uint8_t *)swift_slowAlloc();
      v198 = swift_slowAlloc();
      v206[0] = v198;
      *(_DWORD *)v141 = 136315138;
      isa = (int64_t)v26[2].isa;
      v143 = MEMORY[0x1E0DEE9D8];
      if (isa)
      {
        v179 = v141;
        logc = v139;
        v187 = (_QWORD *)(v1 + 352);
        *(_QWORD *)&v204[0] = MEMORY[0x1E0DEE9D8];
        sub_1ABD16414(0, isa, 0);
        v143 = *(_QWORD *)&v204[0];
        v144 = *(_QWORD *)(*(_QWORD *)&v204[0] + 16);
        v145 = 16 * v144;
        v146 = v26 + 5;
        do
        {
          v147 = v146[-1].isa;
          v148 = v146->isa;
          *(_QWORD *)&v204[0] = v143;
          v149 = v144 + 1;
          v150 = *(_QWORD *)(v143 + 24);
          sub_1ABF2FF5C();
          if (v144 >= v150 >> 1)
          {
            sub_1ABD16414(v150 > 1, v149, 1);
            v143 = *(_QWORD *)&v204[0];
          }
          *(_QWORD *)(v143 + 16) = v149;
          v151 = v143 + v145;
          *(_QWORD *)(v151 + 32) = v147;
          *(_QWORD *)(v151 + 40) = v148;
          v145 += 16;
          v146 += 17;
          ++v144;
          --isa;
        }
        while (isa);
        v138 = v187;
        v1 = (int64_t)v188;
        v139 = logc;
        v141 = v179;
      }
      *v138 = v143;
      sub_1ABD04578(0, (unint64_t *)&qword_1ED34FCB0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1ABD16600();
      v152 = sub_1ABF316E4();
      v154 = v153;
      swift_bridgeObjectRelease();
      *v193 = sub_1ABD1FE2C(v152, v154, v206);
      sub_1ABF31D80();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1ABCEF000, v139, v203, "Applied sorts to sortedStocks=[%s]", v141, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF438FFC](v198, -1, -1);
      MEMORY[0x1AF438FFC](v141, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    if ((*(_BYTE *)(v1 + 689) & 1) != 0)
    {
      v157 = (uint64_t)v26;
LABEL_101:
      *(_QWORD *)(v1 + 672) = v157;
      v163 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v1 + 680) = v163;
      *v163 = v1;
      v163[1] = sub_1ABE07764;
      v164 = *(_QWORD *)(v1 + 576);
      v165 = *(_QWORD *)(v1 + 544);
      v163[40] = v157;
      v163[41] = v164;
      v163[39] = v165;
      return swift_task_switch();
    }
    v20 = *(_QWORD *)(v1 + 568);
    if ((v20 & 0x8000000000000000) == 0)
    {
      if (v26[2].isa >= (Class)v20)
      {
        sub_1ABF32254();
        swift_unknownObjectRetain_n();
        v155 = swift_dynamicCastClass();
        if (v155)
        {
          v156 = v20;
        }
        else
        {
          swift_release();
          v156 = *(_QWORD *)(v1 + 568);
          v155 = MEMORY[0x1E0DEE9D8];
        }
        v158 = *(_QWORD *)(v155 + 16);
        swift_release();
        if (v158 == v156)
        {
          v157 = swift_dynamicCastClass();
          if (!v157)
          {
            swift_release();
            v157 = MEMORY[0x1E0DEE9D8];
          }
          goto LABEL_98;
        }
LABEL_116:
        swift_release();
        v157 = sub_1ABD9125C((uint64_t)v26, (uint64_t)&v26[4], 0, (2 * v20) | 1);
LABEL_98:
        swift_release();
        v159 = sub_1ABF31324();
        v160 = sub_1ABF31BF4();
        if (os_log_type_enabled(v159, v160))
        {
          v161 = *(_QWORD *)(v1 + 568);
          v162 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v162 = 134217984;
          *(_QWORD *)(v1 + 344) = v161;
          sub_1ABF31D80();
          _os_log_impl(&dword_1ABCEF000, v159, v160, "Limited results down to limit=%ld", v162, 0xCu);
          MEMORY[0x1AF438FFC](v162, -1, -1);
        }

        goto LABEL_101;
      }
LABEL_115:
      __break(1u);
      goto LABEL_116;
    }
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  *(_QWORD *)(v1 + 608) = v104;
  *(_QWORD *)(v1 + 600) = v51;
  v122 = (_QWORD *)(*(_QWORD *)(v1 + 552) + 32 * v104);
  v123 = v122[4];
  *(_QWORD *)(v1 + 616) = v123;
  v124 = v122[5];
  *(_QWORD *)(v1 + 624) = v124;
  *(_QWORD *)(v1 + 632) = v122[6];
  *(_QWORD *)(v1 + 640) = v122[7];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v125 = sub_1ABF31324();
  v126 = sub_1ABF31BDC();
  if (os_log_type_enabled(v125, v126))
  {
    v127 = (uint8_t *)swift_slowAlloc();
    v128 = swift_slowAlloc();
    *(_QWORD *)&v204[0] = v128;
    *(_DWORD *)v127 = 136315138;
    sub_1ABF2FF5C();
    v188[63] = sub_1ABD1FE2C(v123, v124, (uint64_t *)v204);
    v1 = (int64_t)v188;
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    swift_release();
    _os_log_impl(&dword_1ABCEF000, v125, v126, "Querying stocks for symbol entities matching property query=%s", v127, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v128, -1, -1);
    MEMORY[0x1AF438FFC](v127, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v129 = *(_QWORD *)(v1 + 312);
  v130 = *(_QWORD *)(v1 + 320);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 288), v129);
  *(_QWORD *)(v1 + 648) = sub_1ABD78990(v123, v124, v129, v130);
  v131 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 656) = v131;
  *v131 = v1;
  v131[1] = sub_1ABE060B4;
  return sub_1ABF31150();
}

uint64_t sub_1ABE07764()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABE077BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 288);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE07808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EEC40FE8 != -1)
    swift_once();
  sub_1ABE0BB4C();
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC433B0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_1ABE078A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EEC40FF0 != -1)
    swift_once();
  sub_1ABCF4DA8(0, &qword_1EEC43418, (uint64_t (*)(void))sub_1ABE0BBAC, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C918C8]);
  v3 = v2;
  v4 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC433C8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_1ABE07958()
{
  return sub_1ABF2FEA8();
}

uint64_t sub_1ABE07960(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  v12 = *v6;
  v13 = a3 & 1;
  v14 = a6 & 1;
  v15 = swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *(_QWORD *)v15 = v7;
  *(_QWORD *)(v15 + 8) = sub_1ABD7E2B8;
  *(_QWORD *)(v15 + 576) = v12;
  *(_BYTE *)(v15 + 689) = v14;
  *(_QWORD *)(v15 + 568) = a5;
  *(_QWORD *)(v15 + 560) = a4;
  *(_BYTE *)(v15 + 688) = v13;
  *(_QWORD *)(v15 + 552) = a2;
  *(_QWORD *)(v15 + 544) = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE07A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;

  sub_1ABCF4DA8(0, &qword_1EEC43470, (uint64_t (*)(void))sub_1ABE0BBAC, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C90C58]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v42 - v9;
  v11 = *(_OWORD *)(a1 + 112);
  v78 = *(_OWORD *)(a1 + 96);
  v79 = v11;
  v80 = *(_QWORD *)(a1 + 128);
  v12 = *(_OWORD *)(a1 + 48);
  v74 = *(_OWORD *)(a1 + 32);
  v75 = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v76 = *(_OWORD *)(a1 + 64);
  v77 = v13;
  v14 = *(_OWORD *)(a1 + 16);
  v72 = *(_OWORD *)a1;
  v73 = v14;
  v15 = *(_OWORD *)(a2 + 112);
  v87 = *(_OWORD *)(a2 + 96);
  v88 = v15;
  v89 = *(_QWORD *)(a2 + 128);
  v16 = *(_OWORD *)(a2 + 48);
  v83 = *(_OWORD *)(a2 + 32);
  v84 = v16;
  v17 = *(_OWORD *)(a2 + 80);
  v85 = *(_OWORD *)(a2 + 64);
  v86 = v17;
  v18 = *(_OWORD *)(a2 + 16);
  v81 = *(_OWORD *)a2;
  v82 = v18;
  v19 = *(_QWORD *)(a3 + 16);
  if (v19)
  {
    v20 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v43 = *(_QWORD *)(v8 + 72);
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v42 = a3;
    sub_1ABF2FF5C();
    v44 = v8;
    v45 = MEMORY[0x1E0DEE9B8] + 8;
    v90 = v7;
    while (1)
    {
      v48 = v20;
      v49 = v19;
      v46(v10, v20, v7);
      v61 = v78;
      v62 = v79;
      v63 = v80;
      v57 = v74;
      v58 = v75;
      v59 = v76;
      v60 = v77;
      v55 = v72;
      v56 = v73;
      sub_1ABD97ECC((uint64_t)&v72);
      sub_1ABE1F5D8(&v55, &v64);
      v22 = v64;
      v23 = v65;
      v24 = v66;
      v25 = v67;
      v26 = v69;
      v27 = v71;
      v51 = v70;
      v52 = v68;
      sub_1ABF2FD94();
      *(_QWORD *)&v55 = v22;
      *((_QWORD *)&v55 + 1) = v23;
      *(_QWORD *)&v56 = v24;
      *((_QWORD *)&v56 + 1) = v25;
      *(_QWORD *)&v57 = v52;
      *((_QWORD *)&v57 + 1) = v26;
      *(_QWORD *)&v58 = v51;
      *((_QWORD *)&v58 + 1) = v27;
      swift_getAtPartialKeyPath();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_dynamicCast() & 1) == 0)
      {
        v39 = v90;
        goto LABEL_18;
      }
      v47 = v53;
      v52 = v54;
      v61 = v87;
      v62 = v88;
      v63 = v89;
      v57 = v83;
      v58 = v84;
      v59 = v85;
      v60 = v86;
      v55 = v81;
      v56 = v82;
      sub_1ABD97ECC((uint64_t)&v81);
      sub_1ABE1F5D8(&v55, &v64);
      v28 = v64;
      v29 = v65;
      v30 = v66;
      v31 = v67;
      v32 = v69;
      v33 = v71;
      v50 = v70;
      v51 = v68;
      sub_1ABF2FD94();
      *(_QWORD *)&v55 = v28;
      *((_QWORD *)&v55 + 1) = v29;
      *(_QWORD *)&v56 = v30;
      *((_QWORD *)&v56 + 1) = v31;
      *(_QWORD *)&v57 = v51;
      *((_QWORD *)&v57 + 1) = v32;
      *(_QWORD *)&v58 = v50;
      *((_QWORD *)&v58 + 1) = v33;
      swift_getAtPartialKeyPath();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_dynamicCast() & 1) == 0)
        break;
      v35 = v53;
      v34 = v54;
      v7 = v90;
      v36 = sub_1ABF2FDA0();
      v37 = v44;
      if ((v36 & 1) != 0)
      {
        if (v47 == v35 && v52 == v34)
        {
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v7);
        }
        else
        {
          v21 = sub_1ABF3223C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v7);
          if ((v21 & 1) != 0)
            goto LABEL_15;
        }
      }
      else if (v35 == v47 && v34 == v52)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v7);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v38 = sub_1ABF3223C();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v38 & 1) != 0)
        {
LABEL_15:
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      v20 = v48 + v43;
      v19 = v49 - 1;
      if (v49 == 1)
        goto LABEL_15;
    }
    v39 = v90;
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    v40 = v44;
    MEMORY[0x1AF436E0C]("Encountered a SymbolWidgetEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E0DEE9D8]);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v39);
  }
  return 1;
}

uint64_t sub_1ABE07EB0(char *a1, char *__src, unint64_t a3, char *__dst, uint64_t a5)
{
  uint64_t v5;
  char *v7;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;
  char *v31;
  BOOL v32;
  char *v33;
  char *v34;
  char *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  char *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;
  char v50;
  uint64_t v51;
  char *v52;
  BOOL v53;
  char *v54;
  uint64_t result;
  char *v56;
  _BYTE v58[136];
  _BYTE __dsta[136];
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;

  v7 = __dst;
  v9 = __src;
  v10 = __src - a1;
  v11 = (__src - a1) / 136;
  v12 = a3 - (_QWORD)__src;
  v13 = (uint64_t)(a3 - (_QWORD)__src) / 136;
  v80 = a1;
  v79 = __dst;
  if (v11 >= v13)
  {
    if (v12 < -135)
      goto LABEL_50;
    if (__dst != __src || &__src[136 * v13] <= __dst)
      memmove(__dst, __src, 136 * v13);
    v34 = &v7[136 * v13];
    v78 = v34;
    v80 = v9;
    if (a1 >= v9 || v12 < 136)
      goto LABEL_49;
    v35 = (char *)(a3 - 136);
    v56 = v7;
    while (1)
    {
      v60 = *(_OWORD *)(v34 - 136);
      v36 = *(_OWORD *)(v34 - 120);
      v37 = *(_OWORD *)(v34 - 104);
      v38 = *(_OWORD *)(v34 - 72);
      v63 = *(_OWORD *)(v34 - 88);
      v64 = v38;
      v61 = v36;
      v62 = v37;
      v39 = *(_OWORD *)(v34 - 56);
      v40 = *(_OWORD *)(v34 - 40);
      v41 = *(_OWORD *)(v34 - 24);
      v68 = *((_QWORD *)v34 - 1);
      v66 = v40;
      v67 = v41;
      v65 = v39;
      memmove(__dsta, v34 - 136, 0x88uLL);
      v42 = v9 - 136;
      v69 = *(_OWORD *)(v9 - 136);
      v43 = *(_OWORD *)(v9 - 120);
      v44 = *(_OWORD *)(v9 - 104);
      v45 = *(_OWORD *)(v9 - 72);
      v72 = *(_OWORD *)(v9 - 88);
      v73 = v45;
      v70 = v43;
      v71 = v44;
      v46 = *(_OWORD *)(v9 - 56);
      v47 = *(_OWORD *)(v9 - 40);
      v48 = *(_OWORD *)(v9 - 24);
      v77 = *((_QWORD *)v9 - 1);
      v75 = v47;
      v76 = v48;
      v74 = v46;
      memmove(v58, v9 - 136, 0x88uLL);
      sub_1ABD97ECC((uint64_t)&v60);
      sub_1ABD97ECC((uint64_t)&v69);
      v49 = sub_1ABE07A08((uint64_t)__dsta, (uint64_t)v58, a5);
      if (v5)
      {
        v78 = v34;
        v80 = v9;
LABEL_45:
        sub_1ABD97F60((uint64_t)&v69);
        sub_1ABD97F60((uint64_t)&v60);
        goto LABEL_49;
      }
      v50 = v49;
      v51 = a5;
      v52 = v35 + 136;
      sub_1ABD97F60((uint64_t)&v69);
      sub_1ABD97F60((uint64_t)&v60);
      if ((v50 & 1) != 0)
      {
        if (v52 == v9)
        {
          v53 = v35 >= v9;
          v9 -= 136;
          goto LABEL_32;
        }
        v9 -= 136;
      }
      else
      {
        v42 = v34 - 136;
        if (v52 == v34)
        {
          v53 = v35 >= v34;
          v34 -= 136;
LABEL_32:
          a5 = v51;
          v54 = a1;
          if (!v53)
            goto LABEL_39;
          goto LABEL_38;
        }
        v34 -= 136;
      }
      a5 = v51;
      v54 = a1;
LABEL_38:
      memmove(v35, v42, 0x88uLL);
LABEL_39:
      if (v34 <= v56 || v9 <= v54)
      {
        v78 = v34;
        v80 = v9;
        goto LABEL_49;
      }
      v35 -= 136;
    }
  }
  if (v10 < -135)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    result = sub_1ABF3202C();
    __break(1u);
    return result;
  }
  v14 = a1;
  if (__dst != a1 || &a1[136 * v11] <= __dst)
    memmove(__dst, a1, 136 * v11);
  v15 = &v7[136 * v11];
  v78 = v15;
  if ((unint64_t)v9 >= a3 || v10 < 136)
    goto LABEL_49;
  v16 = v7;
  while (1)
  {
    v60 = *(_OWORD *)v9;
    v17 = *((_OWORD *)v9 + 1);
    v18 = *((_OWORD *)v9 + 2);
    v19 = *((_OWORD *)v9 + 4);
    v63 = *((_OWORD *)v9 + 3);
    v64 = v19;
    v61 = v17;
    v62 = v18;
    v20 = *((_OWORD *)v9 + 5);
    v21 = *((_OWORD *)v9 + 6);
    v22 = *((_OWORD *)v9 + 7);
    v68 = *((_QWORD *)v9 + 16);
    v66 = v21;
    v67 = v22;
    v65 = v20;
    memmove(__dsta, v9, 0x88uLL);
    v69 = *(_OWORD *)v16;
    v23 = *((_OWORD *)v16 + 1);
    v24 = *((_OWORD *)v16 + 2);
    v25 = *((_OWORD *)v16 + 4);
    v72 = *((_OWORD *)v16 + 3);
    v73 = v25;
    v70 = v23;
    v71 = v24;
    v26 = *((_OWORD *)v16 + 5);
    v27 = *((_OWORD *)v16 + 6);
    v28 = *((_OWORD *)v16 + 7);
    v77 = *((_QWORD *)v16 + 16);
    v75 = v27;
    v76 = v28;
    v74 = v26;
    memmove(v58, v16, 0x88uLL);
    sub_1ABD97ECC((uint64_t)&v60);
    sub_1ABD97ECC((uint64_t)&v69);
    v29 = sub_1ABE07A08((uint64_t)__dsta, (uint64_t)v58, a5);
    if (v5)
    {
      v79 = v7;
      v80 = v14;
      goto LABEL_45;
    }
    v30 = v29;
    sub_1ABD97F60((uint64_t)&v69);
    sub_1ABD97F60((uint64_t)&v60);
    if ((v30 & 1) == 0)
    {
      v7 = v16 + 136;
      v31 = v16;
      v32 = v14 == v16;
      v16 += 136;
      if (v32)
        goto LABEL_16;
LABEL_15:
      memmove(v14, v31, 0x88uLL);
      goto LABEL_16;
    }
    v31 = v9;
    v32 = v14 == v9;
    v9 += 136;
    if (!v32)
      goto LABEL_15;
LABEL_16:
    v33 = v14 + 136;
    if (v16 >= v15)
    {
      v79 = v7;
      goto LABEL_48;
    }
    if ((unint64_t)v9 >= a3)
      break;
    v14 += 136;
  }
  v79 = v7;
  v33 = v14 + 136;
LABEL_48:
  v80 = v33;
LABEL_49:
  sub_1ABE8BF98((void **)&v80, (const void **)&v79, &v78);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1ABE0832C(_OWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  BOOL v25;
  char isUniquelyReferenced_nonNull_native;
  __int128 v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v6 = *v2;
  sub_1ABF32308();
  sub_1ABF2FF5C();
  sub_1ABD366B4();
  v7 = sub_1ABF32338();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  v35 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  v29 = v2;
  v33 = ~v8;
  v10 = *(_QWORD *)(a2 + 8);
  v36 = *(_QWORD *)a2;
  v11 = *(_QWORD **)(a2 + 16);
  v31 = *(_QWORD *)(a2 + 32);
  v32 = *(_QWORD *)(a2 + 24);
  sub_1ABDA90A8((_BYTE *)(a2 + 40), &v38);
  v30 = a2;
  v34 = *(_QWORD *)(v6 + 48);
  do
  {
    v12 = v34 + 48 * v9;
    v13 = *(_QWORD **)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 24);
    v15 = *(_QWORD *)(v12 + 32);
    v16 = *(unsigned __int8 *)(v12 + 40);
    v17 = *(_QWORD *)v12 == v36 && *(_QWORD *)(v12 + 8) == v10;
    if (v17 || (sub_1ABF3223C() & 1) != 0)
    {
      v18 = v13[2];
      if (v18 == v11[2])
      {
        if (v18)
          v19 = v13 == v11;
        else
          v19 = 1;
        if (v19)
          goto LABEL_14;
        v20 = v13[4] == v11[4] && v13[5] == v11[5];
        if (!v20 && (sub_1ABF3223C() & 1) == 0)
          goto LABEL_37;
        if (v18 == 1)
          goto LABEL_14;
        v21 = v13[6] == v11[6] && v13[7] == v11[7];
        if (!v21 && (sub_1ABF3223C() & 1) == 0)
          goto LABEL_37;
        v22 = v18 - 2;
        if (!v22)
        {
LABEL_14:
          if (v14 == v32 && v15 == v31 || (sub_1ABF3223C() & 1) != 0)
            __asm { BR              X9 }
        }
        else
        {
          v23 = v13 + 9;
          v24 = v11 + 9;
          while (1)
          {
            v25 = *(v23 - 1) == *(v24 - 1) && *v23 == *v24;
            if (!v25 && (sub_1ABF3223C() & 1) == 0)
              break;
            v24 += 2;
            v23 += 2;
            if (!--v22)
              goto LABEL_14;
          }
        }
      }
    }
LABEL_37:
    v9 = (v9 + 1) & v33;
  }
  while (((*(_QWORD *)(v35 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  swift_bridgeObjectRelease();
  a2 = v30;
  v3 = v29;
LABEL_40:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v37 = *v3;
  *v3 = 0x8000000000000000;
  sub_1ABD04B78(a2);
  sub_1ABE09908(a2, v9, isUniquelyReferenced_nonNull_native);
  *v3 = v37;
  swift_bridgeObjectRelease();
  v27 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v27;
  *(_OWORD *)((char *)a1 + 26) = *(_OWORD *)(a2 + 26);
  return 1;
}

uint64_t sub_1ABE08788(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t result;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  __int128 v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v3 = v2;
  v6 = *v2;
  sub_1ABF32308();
  sub_1ABF2FF5C();
  sub_1ABD99914();
  v7 = sub_1ABF32338();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v24 = v2;
    v25 = a1;
    v10 = ~v8;
    v11 = *(_QWORD *)a2;
    v12 = *(_QWORD *)(a2 + 8);
    v14 = *(_QWORD *)(a2 + 16);
    v13 = *(_QWORD *)(a2 + 24);
    *((_QWORD *)&v26 + 1) = *(_QWORD *)(a2 + 48);
    v27 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)&v26 = *(_QWORD *)(a2 + 56);
    v23 = a2;
    v15 = *(_QWORD *)(a2 + 32);
    do
    {
      v16 = (_OWORD *)(*(_QWORD *)(v6 + 48) + 136 * v9);
      v29 = v16[1];
      v30 = v16[2];
      v31 = v16[3];
      v32 = v16[4];
      if ((*v16 == __PAIR128__(v12, v11) || (sub_1ABF3223C() & 1) != 0)
        && (v29 == __PAIR128__(v13, v14) || (sub_1ABF3223C() & 1) != 0)
        && (v30 == __PAIR128__(v27, v15) || (sub_1ABF3223C() & 1) != 0)
        && (__PAIR128__(v31, *((unint64_t *)&v31 + 1)) == v26 || (sub_1ABF3223C() & 1) != 0))
      {
        __asm { BR              X9 }
      }
      v9 = (v9 + 1) & v10;
    }
    while (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    swift_bridgeObjectRelease();
    v3 = v24;
    a1 = v25;
    a2 = v23;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v28 = *v3;
  *v3 = 0x8000000000000000;
  sub_1ABD97ECC(a2);
  sub_1ABE09CFC(a2, v9, isUniquelyReferenced_nonNull_native);
  *v3 = v28;
  swift_bridgeObjectRelease();
  v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  v21 = *(_OWORD *)(a2 + 16);
  result = 1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  return result;
}

uint64_t sub_1ABE08E40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  _QWORD *v17;
  int v18;

  v1 = *v0;
  sub_1ABCF4DA8(0, &qword_1EEC42248, (uint64_t (*)(void))sub_1ABD98038, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v2 = sub_1ABF31E58();
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_29;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v17 = (_QWORD *)(v1 + 56);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v16 = (unint64_t)(v3 + 63) >> 6;
  sub_1ABF2FF68();
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v16 > 1)
  {
    v7 = *(_QWORD *)(v1 + 64);
    v8 = 1;
    if (v7)
      goto LABEL_19;
    v8 = 2;
    if (v16 > 2)
    {
      v7 = *(_QWORD *)(v1 + 72);
      if (v7)
        goto LABEL_19;
      v8 = 3;
      if (v16 > 3)
      {
        v7 = *(_QWORD *)(v1 + 80);
        if (!v7)
        {
          v9 = 4;
          if (v16 > 4)
          {
            v7 = *(_QWORD *)(v1 + 88);
            if (v7)
            {
              v8 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v8 = v9 + 1;
              if (__OFADD__(v9, 1))
              {
                __break(1u);
                JUMPOUT(0x1ABE0929CLL);
              }
              if (v8 >= v16)
                break;
              v7 = v17[v8];
              ++v9;
              if (v7)
                goto LABEL_19;
            }
          }
          goto LABEL_25;
        }
LABEL_19:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_20:
        v10 = *(_QWORD *)(v1 + 48) + 48 * v6;
        v11 = *(_QWORD *)(v10 + 16);
        v18 = *(unsigned __int8 *)(v10 + 40);
        sub_1ABF32308();
        sub_1ABF2FF5C();
        sub_1ABF31840();
        swift_bridgeObjectRelease();
        sub_1ABF32314();
        v12 = *(_QWORD *)(v11 + 16);
        if (v12)
        {
          sub_1ABF2FF5C();
          v13 = v11 + 40;
          do
          {
            sub_1ABF2FF5C();
            sub_1ABF31840();
            swift_bridgeObjectRelease();
            v13 += 16;
            --v12;
          }
          while (v12);
          swift_bridgeObjectRelease();
        }
        sub_1ABF2FF5C();
        sub_1ABF31840();
        swift_bridgeObjectRelease();
        __asm { BR              X9 }
      }
    }
  }
LABEL_25:
  swift_release();
  v14 = 1 << *(_BYTE *)(v1 + 32);
  if (v14 > 63)
    bzero(v17, ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v17 = -1 << v14;
  *(_QWORD *)(v1 + 16) = 0;
LABEL_29:
  result = swift_release();
  *v0 = v2;
  return result;
}

uint64_t sub_1ABE092B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_1ABF30820();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1ABE0DD78();
  v6 = sub_1ABF31E58();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = sub_1ABF2FF68();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_1ABCFE22C(&qword_1ED34EAC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C60]);
      result = sub_1ABF316C0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

unint64_t sub_1ABE09620()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v1 = *v0;
  sub_1ABCF4DA8(0, &qword_1EEC42240, (uint64_t (*)(void))sub_1ABD97FF4, (uint64_t)&type metadata for Stock, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v2 = sub_1ABF31E58();
  if (*(_QWORD *)(v1 + 16))
  {
    v3 = 1 << *(_BYTE *)(v1 + 32);
    v4 = (_QWORD *)(v1 + 56);
    if (v3 < 64)
      v5 = ~(-1 << v3);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v7 = (unint64_t)(v3 + 63) >> 6;
    result = sub_1ABF2FF68();
    v9 = 0;
    while (1)
    {
      if (v6)
      {
        v10 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v14 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v14 >= v7)
          goto LABEL_23;
        v15 = v4[v14];
        ++v9;
        if (!v15)
        {
          v9 = v14 + 1;
          if (v14 + 1 >= v7)
            goto LABEL_23;
          v15 = v4[v9];
          if (!v15)
          {
            v9 = v14 + 2;
            if (v14 + 2 >= v7)
              goto LABEL_23;
            v15 = v4[v9];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v7)
              {
LABEL_23:
                swift_release();
                v17 = 1 << *(_BYTE *)(v1 + 32);
                if (v17 > 63)
                  bzero((void *)(v1 + 56), ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v4 = -1 << v17;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v15 = v4[v16];
              if (!v15)
              {
                while (1)
                {
                  v9 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_29;
                  if (v9 >= v7)
                    goto LABEL_23;
                  v15 = v4[v9];
                  ++v16;
                  if (v15)
                    goto LABEL_22;
                }
              }
              v9 = v16;
            }
          }
        }
LABEL_22:
        v6 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v9 << 6);
      }
      v12 = *(_QWORD *)(v1 + 48) + 136 * v11;
      v24 = *(_OWORD *)(v12 + 96);
      v25 = *(_OWORD *)(v12 + 112);
      v20 = *(_OWORD *)(v12 + 32);
      v21 = *(_OWORD *)(v12 + 48);
      v22 = *(_OWORD *)(v12 + 64);
      v23 = *(_OWORD *)(v12 + 80);
      v18 = *(_OWORD *)v12;
      v19 = *(_OWORD *)(v12 + 16);
      v26 = *(_QWORD *)(v12 + 128);
      sub_1ABF32308();
      sub_1ABD99914();
      sub_1ABF32338();
      result = sub_1ABF31E1C();
      *(_QWORD *)(v2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v13 = *(_QWORD *)(v2 + 48) + 136 * result;
      *(_OWORD *)(v13 + 96) = v24;
      *(_OWORD *)(v13 + 112) = v25;
      *(_QWORD *)(v13 + 128) = v26;
      *(_OWORD *)(v13 + 32) = v20;
      *(_OWORD *)(v13 + 48) = v21;
      *(_OWORD *)(v13 + 64) = v22;
      *(_OWORD *)(v13 + 80) = v23;
      *(_OWORD *)v13 = v18;
      *(_OWORD *)(v13 + 16) = v19;
      ++*(_QWORD *)(v2 + 16);
    }
  }
  result = swift_release();
  *v0 = v2;
  return result;
}

uint64_t sub_1ABE09908(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t *v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v35 = (__int128 *)result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1ABE08E40();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1ABE0A390();
        goto LABEL_46;
      }
      sub_1ABE0AB68();
    }
    v8 = *v3;
    sub_1ABF32308();
    sub_1ABD366B4();
    result = sub_1ABF32338();
    v9 = -1 << *(_BYTE *)(v8 + 32);
    a2 = result & ~v9;
    v40 = v8 + 56;
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v38 = ~v9;
      v10 = *(_QWORD *)v5;
      v11 = *(_QWORD *)(v5 + 8);
      v12 = *(_QWORD **)(v5 + 16);
      v36 = *(_QWORD *)(v5 + 32);
      v37 = *(_QWORD *)(v5 + 24);
      sub_1ABDA90A8((_BYTE *)(v5 + 40), &v41);
      v39 = *(_QWORD *)(v8 + 48);
      while (1)
      {
        v13 = v39 + 48 * a2;
        result = *(_QWORD *)v13;
        v15 = *(_QWORD **)(v13 + 16);
        v14 = *(_QWORD *)(v13 + 24);
        v16 = *(_QWORD *)(v13 + 32);
        v17 = *(unsigned __int8 *)(v13 + 40);
        v18 = *(_QWORD *)v13 == v10 && *(_QWORD *)(v13 + 8) == v11;
        if (v18 || (result = sub_1ABF3223C(), (result & 1) != 0))
        {
          v19 = v15[2];
          if (v19 == v12[2])
          {
            if (v19)
              v20 = v15 == v12;
            else
              v20 = 1;
            if (v20)
              goto LABEL_22;
            v21 = v15[4] == v12[4] && v15[5] == v12[5];
            if (v21 || (result = sub_1ABF3223C(), (result & 1) != 0))
            {
              if (v19 == 1)
                goto LABEL_22;
              if (v15[6] == v12[6] && v15[7] == v12[7])
                break;
              result = sub_1ABF3223C();
              if ((result & 1) != 0)
                break;
            }
          }
        }
LABEL_10:
        a2 = (a2 + 1) & v38;
        if (((*(_QWORD *)(v40 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_46;
      }
      v23 = v19 - 2;
      if (v23)
      {
        v24 = v15 + 9;
        v25 = v12 + 9;
        do
        {
          if (*(v24 - 1) != *(v25 - 1) || *v24 != *v25)
          {
            result = sub_1ABF3223C();
            if ((result & 1) == 0)
              goto LABEL_10;
          }
          v25 += 2;
          v24 += 2;
        }
        while (--v23);
      }
LABEL_22:
      if (v14 == v37 && v16 == v36 || (result = sub_1ABF3223C(), (result & 1) != 0))
        __asm { BR              X9 }
      goto LABEL_10;
    }
  }
LABEL_46:
  v27 = *v34;
  *(_QWORD *)(*v34 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v28 = (_OWORD *)(*(_QWORD *)(v27 + 48) + 48 * a2);
  v29 = *v35;
  v30 = v35[1];
  *(_OWORD *)((char *)v28 + 26) = *(__int128 *)((char *)v35 + 26);
  *v28 = v29;
  v28[1] = v30;
  v31 = *(_QWORD *)(v27 + 16);
  v32 = __OFADD__(v31, 1);
  v33 = v31 + 1;
  if (v32)
  {
    __break(1u);
    JUMPOUT(0x1ABE09CD4);
  }
  *(_QWORD *)(v27 + 16) = v33;
  return result;
}

uint64_t sub_1ABE09CFC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  __int128 v26;
  __int128 v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v5 = (unint64_t *)result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v24 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1ABE09620();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1ABE0A95C();
        goto LABEL_20;
      }
      sub_1ABE0B2E4();
    }
    v8 = *v3;
    sub_1ABF32308();
    sub_1ABD99914();
    result = sub_1ABF32338();
    v9 = -1 << *(_BYTE *)(v8 + 32);
    a2 = result & ~v9;
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v10 = ~v9;
      v11 = *v5;
      v12 = v5[1];
      v13 = v5[2];
      *((_QWORD *)&v27 + 1) = v5[4];
      v28 = v5[3];
      *((_QWORD *)&v26 + 1) = v5[6];
      *(_QWORD *)&v27 = v5[5];
      *(_QWORD *)&v26 = v5[7];
      do
      {
        v14 = (_OWORD *)(*(_QWORD *)(v8 + 48) + 136 * a2);
        v29 = v14[1];
        v30 = v14[2];
        v32 = v14[4];
        v31 = v14[3];
        if (*v14 == __PAIR128__(v12, v11) || (result = sub_1ABF3223C(), (result & 1) != 0))
        {
          if (v29 == __PAIR128__(v28, v13) || (result = sub_1ABF3223C(), (result & 1) != 0))
          {
            if (__PAIR128__(v30, *((unint64_t *)&v30 + 1)) == v27
              || (result = sub_1ABF3223C(), (result & 1) != 0))
            {
              if (__PAIR128__(v31, *((unint64_t *)&v31 + 1)) == v26
                || (result = sub_1ABF3223C(), (result & 1) != 0))
              {
                __asm { BR              X9 }
              }
            }
          }
        }
        a2 = (a2 + 1) & v10;
      }
      while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_20:
  v15 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v16 = *(_QWORD *)(v15 + 48) + 136 * a2;
  v17 = *(_OWORD *)(v24 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v24 + 32);
  *(_OWORD *)(v16 + 48) = v17;
  *(_QWORD *)(v16 + 128) = *(_QWORD *)(v24 + 128);
  v18 = *(_OWORD *)(v24 + 112);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)(v24 + 96);
  *(_OWORD *)(v16 + 112) = v18;
  v19 = *(_OWORD *)(v24 + 80);
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v24 + 64);
  *(_OWORD *)(v16 + 80) = v19;
  v20 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v24;
  *(_OWORD *)(v16 + 16) = v20;
  v21 = *(_QWORD *)(v15 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
    JUMPOUT(0x1ABE0A338);
  }
  *(_QWORD *)(v15 + 16) = v23;
  return result;
}

void *sub_1ABE0A390()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_1ABCF4DA8(0, &qword_1EEC42248, (uint64_t (*)(void))sub_1ABD98038, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v2 = *v0;
  v3 = sub_1ABF31E4C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_28;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
      {
        v9 = v24 + 2;
        if (v24 + 2 >= v13)
          goto LABEL_28;
        v25 = *(_QWORD *)(v6 + 8 * v9);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 48 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v21 = *(_QWORD *)(v17 + 16);
    v20 = *(_QWORD *)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 32);
    LOWORD(v17) = *(_WORD *)(v17 + 40);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v23 = v19;
    *(_QWORD *)(v23 + 8) = v18;
    *(_QWORD *)(v23 + 16) = v21;
    *(_QWORD *)(v23 + 24) = v20;
    *(_QWORD *)(v23 + 32) = v22;
    *(_WORD *)(v23 + 40) = v17;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    result = (void *)sub_1ABF2FF5C();
  }
  v26 = v24 + 3;
  if (v26 >= v13)
    goto LABEL_28;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ABE0A590()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1ABE0D95C();
  v2 = *v0;
  v3 = sub_1ABF31E4C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)sub_1ABF2FF5C();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1ABE0A73C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_1ABF30820();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE0DD78();
  v6 = *v0;
  v7 = sub_1ABF31E4C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1ABE0A95C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  _OWORD v27[8];
  uint64_t v28;

  v1 = v0;
  sub_1ABCF4DA8(0, &qword_1EEC42240, (uint64_t (*)(void))sub_1ABD97FF4, (uint64_t)&type metadata for Stock, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v2 = *v0;
  v3 = sub_1ABF31E4C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_28;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
      {
        v9 = v24 + 2;
        if (v24 + 2 >= v13)
          goto LABEL_28;
        v25 = *(_QWORD *)(v6 + 8 * v9);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 136 * v15;
    v17 = (_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = v17[1];
    v18 = v17[2];
    v20 = v17[4];
    v27[3] = v17[3];
    v27[4] = v20;
    v21 = v17[5];
    v22 = v17[6];
    v23 = v17[7];
    v28 = *((_QWORD *)v17 + 16);
    v27[6] = v22;
    v27[7] = v23;
    v27[5] = v21;
    v27[0] = *v17;
    v27[1] = v19;
    v27[2] = v18;
    memmove((void *)(*(_QWORD *)(v4 + 48) + v16), v17, 0x88uLL);
    result = (void *)sub_1ABD97ECC((uint64_t)v27);
  }
  v26 = v24 + 3;
  if (v26 >= v13)
    goto LABEL_28;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1ABE0AB68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  int v17;

  v1 = v0;
  v2 = *v0;
  sub_1ABCF4DA8(0, &qword_1EEC42248, (uint64_t (*)(void))sub_1ABD98038, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v3 = sub_1ABF31E58();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_27;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v16 = (unint64_t)(v4 + 63) >> 6;
  sub_1ABF2FF68();
  if (v6)
  {
    v7 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v16 > 1)
  {
    v8 = *(_QWORD *)(v2 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v16 > 2)
    {
      v8 = *(_QWORD *)(v2 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v16 > 3)
      {
        v8 = *(_QWORD *)(v2 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v16 > 4)
          {
            v8 = *(_QWORD *)(v2 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x1ABE0AFA4);
              }
              if (v9 >= v16)
                break;
              v8 = *(_QWORD *)(v2 + 56 + 8 * v9);
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_25;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(_QWORD *)(v2 + 48) + 48 * v7;
        v12 = *(_QWORD *)(v11 + 16);
        v17 = *(unsigned __int8 *)(v11 + 40);
        sub_1ABF32308();
        swift_bridgeObjectRetain_n();
        sub_1ABF2FF5C();
        sub_1ABF2FF5C();
        sub_1ABF31840();
        swift_bridgeObjectRelease();
        sub_1ABF32314();
        v13 = *(_QWORD *)(v12 + 16);
        if (v13)
        {
          sub_1ABF2FF5C();
          v14 = v12 + 40;
          do
          {
            sub_1ABF2FF5C();
            sub_1ABF31840();
            swift_bridgeObjectRelease();
            v14 += 16;
            --v13;
          }
          while (v13);
          swift_bridgeObjectRelease();
        }
        sub_1ABF2FF5C();
        sub_1ABF31840();
        swift_bridgeObjectRelease();
        __asm { BR              X9 }
      }
    }
  }
LABEL_25:
  result = swift_release_n();
  v1 = v0;
LABEL_27:
  *v1 = v3;
  return result;
}

uint64_t sub_1ABE0AFBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_1ABF30820();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_1ABE0DD78();
  v7 = sub_1ABF31E58();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = sub_1ABF2FF68();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_1ABCFE22C(&qword_1ED34EAC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C60]);
    result = sub_1ABF316C0();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1ABE0B2E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v1 = *v0;
  sub_1ABCF4DA8(0, &qword_1EEC42240, (uint64_t (*)(void))sub_1ABD97FF4, (uint64_t)&type metadata for Stock, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEC268]);
  v2 = sub_1ABF31E58();
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_25:
    *v0 = v2;
    return result;
  }
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = v1 + 56;
  if (v3 < 64)
    v5 = ~(-1 << v3);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v7 = (unint64_t)(v3 + 63) >> 6;
  result = sub_1ABF2FF68();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_7;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v7)
      goto LABEL_23;
    v27 = *(_QWORD *)(v4 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v7)
        goto LABEL_23;
      v27 = *(_QWORD *)(v4 + 8 * v9);
      if (!v27)
      {
        v9 = v26 + 2;
        if (v26 + 2 >= v7)
          goto LABEL_23;
        v27 = *(_QWORD *)(v4 + 8 * v9);
        if (!v27)
          break;
      }
    }
LABEL_22:
    v6 = (v27 - 1) & v27;
    v11 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_7:
    v12 = *(_QWORD *)(v1 + 48) + 136 * v11;
    v13 = *(_OWORD *)(v12 + 64);
    v14 = *(_OWORD *)(v12 + 16);
    v15 = *(_OWORD *)(v12 + 32);
    v32 = *(_OWORD *)(v12 + 48);
    v33 = v13;
    v31 = v15;
    v16 = *(_OWORD *)(v12 + 80);
    v17 = *(_OWORD *)(v12 + 96);
    v18 = *(_OWORD *)(v12 + 112);
    v37 = *(_QWORD *)(v12 + 128);
    v35 = v17;
    v36 = v18;
    v34 = v16;
    v29 = *(_OWORD *)v12;
    v30 = v14;
    sub_1ABF32308();
    sub_1ABD97ECC((uint64_t)&v29);
    sub_1ABD99914();
    sub_1ABF32338();
    result = sub_1ABF31E1C();
    *(_QWORD *)(v2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = *(_QWORD *)(v2 + 48) + 136 * result;
    *(_OWORD *)v19 = v29;
    v20 = v33;
    v22 = v30;
    v21 = v31;
    *(_OWORD *)(v19 + 48) = v32;
    *(_OWORD *)(v19 + 64) = v20;
    *(_OWORD *)(v19 + 16) = v22;
    *(_OWORD *)(v19 + 32) = v21;
    v23 = v34;
    v24 = v35;
    v25 = v36;
    *(_QWORD *)(v19 + 128) = v37;
    *(_OWORD *)(v19 + 96) = v24;
    *(_OWORD *)(v19 + 112) = v25;
    *(_OWORD *)(v19 + 80) = v23;
    ++*(_QWORD *)(v2 + 16);
  }
  v28 = v26 + 3;
  if (v28 >= v7)
  {
LABEL_23:
    result = swift_release_n();
    goto LABEL_25;
  }
  v27 = *(_QWORD *)(v4 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v7)
      goto LABEL_23;
    v27 = *(_QWORD *)(v4 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1ABE0B5AC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(_OWORD *);
  char v6;
  unint64_t v7;
  size_t v8;
  unint64_t v9;
  void *v10;
  _QWORD v12[2];

  v5 = (uint64_t (*)(_OWORD *))isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a3 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_1ABE0B728((unint64_t)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a3, v5);
    swift_release();
    if (v3)
      swift_willThrow();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v9 = sub_1ABE0B728((unint64_t)v10, v7, a3, v5);
    swift_release();
    MEMORY[0x1AF438FFC](v10, -1, -1);
  }
  return v9;
}

unint64_t sub_1ABE0B728(unint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  unint64_t *v30;
  uint64_t v31;
  _OWORD v32[8];
  uint64_t v33;
  _OWORD v34[8];
  uint64_t v35;
  int64_t v36;

  v30 = (unint64_t *)result;
  v31 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v36 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v13 = v12 | (v7 << 6);
LABEL_17:
    v17 = *(_QWORD *)(a3 + 48) + 136 * v13;
    v34[0] = *(_OWORD *)v17;
    v18 = *(_OWORD *)(v17 + 64);
    v20 = *(_OWORD *)(v17 + 16);
    v19 = *(_OWORD *)(v17 + 32);
    v34[3] = *(_OWORD *)(v17 + 48);
    v34[4] = v18;
    v34[1] = v20;
    v34[2] = v19;
    v22 = *(_OWORD *)(v17 + 96);
    v21 = *(_OWORD *)(v17 + 112);
    v23 = *(_OWORD *)(v17 + 80);
    v35 = *(_QWORD *)(v17 + 128);
    v34[6] = v22;
    v34[7] = v21;
    v34[5] = v23;
    v24 = *(_OWORD *)(v17 + 112);
    v32[6] = *(_OWORD *)(v17 + 96);
    v32[7] = v24;
    v33 = *(_QWORD *)(v17 + 128);
    v25 = *(_OWORD *)(v17 + 48);
    v32[2] = *(_OWORD *)(v17 + 32);
    v32[3] = v25;
    v26 = *(_OWORD *)(v17 + 80);
    v32[4] = *(_OWORD *)(v17 + 64);
    v32[5] = v26;
    v27 = *(_OWORD *)(v17 + 16);
    v32[0] = *(_OWORD *)v17;
    v32[1] = v27;
    sub_1ABD97ECC((uint64_t)v34);
    v28 = a4(v32);
    result = sub_1ABD97F60((uint64_t)v34);
    if (v4)
      return result;
    if ((v28 & 1) != 0)
    {
      *(unint64_t *)((char *)v30 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v31, 1))
        goto LABEL_29;
      ++v31;
    }
  }
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v7 >= v36)
    goto LABEL_26;
  v15 = *(_QWORD *)(v8 + 8 * v7);
  if (v15)
  {
LABEL_16:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_17;
  }
  v16 = v7 + 1;
  if (v7 + 1 >= v36)
    goto LABEL_26;
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v16 = v7 + 2;
  if (v7 + 2 >= v36)
    goto LABEL_26;
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v16 = v7 + 3;
  if (v7 + 3 >= v36)
  {
LABEL_26:
    sub_1ABF2FF68();
    return sub_1ABD93CD8(v30, a2, v31, a3);
  }
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
  {
LABEL_15:
    v7 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v36)
      goto LABEL_26;
    v15 = *(_QWORD *)(v8 + 8 * v7);
    ++v16;
    if (v15)
      goto LABEL_16;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

_QWORD *sub_1ABE0B968(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __int128 v25;
  __int128 v26;
  __int128 v27[8];
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = (uint64_t *)(sub_1ABF2FF5C() + 40);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v7 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain_n();
      v8 = sub_1ABD00F9C(v7, v6);
      if ((v9 & 1) != 0)
      {
        v10 = *(_QWORD *)(a2 + 56) + 136 * v8;
        v34 = *(_OWORD *)v10;
        v11 = *(_OWORD *)(v10 + 64);
        v13 = *(_OWORD *)(v10 + 16);
        v12 = *(_OWORD *)(v10 + 32);
        v37 = *(_OWORD *)(v10 + 48);
        v38 = v11;
        v35 = v13;
        v36 = v12;
        v15 = *(_OWORD *)(v10 + 96);
        v14 = *(_OWORD *)(v10 + 112);
        v16 = *(_OWORD *)(v10 + 80);
        v42 = *(_QWORD *)(v10 + 128);
        v40 = v15;
        v41 = v14;
        v39 = v16;
        sub_1ABD97ECC((uint64_t)&v34);
        swift_bridgeObjectRelease();
        v27[6] = v40;
        v27[7] = v41;
        v28 = v42;
        v27[2] = v36;
        v27[3] = v37;
        v27[4] = v38;
        v27[5] = v39;
        v27[0] = v34;
        v27[1] = v35;
        sub_1ABE1F5D8(v27, (uint64_t *)v29);
        swift_bridgeObjectRelease();
        v25 = v29[1];
        v26 = v29[0];
        v17 = v30;
        v43 = v31;
        v19 = v32;
        v18 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_1ABD82C00(0, v5[2] + 1, 1, v5);
        v21 = v5[2];
        v20 = v5[3];
        if (v21 >= v20 >> 1)
          v5 = sub_1ABD82C00((_QWORD *)(v20 > 1), v21 + 1, 1, v5);
        v5[2] = v21 + 1;
        v22 = &v5[8 * v21];
        *((_OWORD *)v22 + 2) = v26;
        *((_OWORD *)v22 + 3) = v25;
        v23 = v43;
        v22[8] = v17;
        v22[9] = v23;
        v22[10] = v19;
        v22[11] = v18;
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

void sub_1ABE0BB4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43408)
  {
    sub_1ABE0BBAC();
    v0 = sub_1ABF2FF2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43408);
  }
}

unint64_t sub_1ABE0BBAC()
{
  unint64_t result;

  result = qword_1EEC43410;
  if (!qword_1EEC43410)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40310, &type metadata for SymbolWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1EEC43410);
  }
  return result;
}

void sub_1ABE0BBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;

  v59 = a1;
  sub_1ABCF4DA8(0, &qword_1EEC43470, (uint64_t (*)(void))sub_1ABE0BBAC, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C90C58]);
  v66 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v54 - v11;
  v55 = a2;
  if (a3 != a2)
  {
    v13 = v10;
    v14 = *a4;
    v62 = *(_QWORD *)(a5 + 16);
    v63 = MEMORY[0x1E0DEE9B8] + 8;
    v71 = v10;
    v57 = a5;
    v58 = v14;
    while (2)
    {
      v56 = a3;
      do
      {
        v15 = v14 + 136 * a3;
        v92 = *(_OWORD *)v15;
        v16 = *(_OWORD *)(v15 + 16);
        v17 = *(_OWORD *)(v15 + 32);
        v18 = *(_OWORD *)(v15 + 64);
        v95 = *(_OWORD *)(v15 + 48);
        v96 = v18;
        v93 = v16;
        v94 = v17;
        v19 = *(_OWORD *)(v15 + 80);
        v20 = *(_OWORD *)(v15 + 96);
        v21 = *(_OWORD *)(v15 + 112);
        v100 = *(_QWORD *)(v15 + 128);
        v98 = v20;
        v99 = v21;
        v97 = v19;
        v101 = *(_OWORD *)(v15 - 136);
        v22 = *(_OWORD *)(v15 - 120);
        v23 = *(_OWORD *)(v15 - 104);
        v24 = *(_OWORD *)(v15 - 72);
        v104 = *(_OWORD *)(v15 - 88);
        v105 = v24;
        v102 = v22;
        v103 = v23;
        v25 = *(_OWORD *)(v15 - 56);
        v26 = *(_OWORD *)(v15 - 40);
        v27 = *(_OWORD *)(v15 - 24);
        v109 = *(_QWORD *)(v15 - 8);
        v107 = v26;
        v108 = v27;
        v106 = v25;
        if (v62)
        {
          v60 = v14 + 136 * a3;
          v61 = a3;
          v28 = v66;
          v29 = a5 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
          sub_1ABD97ECC((uint64_t)&v92);
          sub_1ABD97ECC((uint64_t)&v101);
          sub_1ABF2FF5C();
          v30 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
          v64 = *(_QWORD *)(v28 + 72);
          v65 = v30;
          v31 = v62;
          while (1)
          {
            v68 = v31;
            v70 = v29;
            v65(v12, v29, v13);
            v81 = v98;
            v82 = v99;
            v83 = v100;
            v77 = v94;
            v78 = v95;
            v79 = v96;
            v80 = v97;
            v75 = v92;
            v76 = v93;
            sub_1ABD97ECC((uint64_t)&v92);
            sub_1ABE1F5D8(&v75, &v84);
            v33 = v84;
            v34 = v85;
            v35 = v86;
            v36 = v87;
            v37 = v89;
            v110 = v88;
            v38 = v91;
            v72 = v90;
            sub_1ABF2FD94();
            *(_QWORD *)&v75 = v33;
            *((_QWORD *)&v75 + 1) = v34;
            *(_QWORD *)&v76 = v35;
            *((_QWORD *)&v76 + 1) = v36;
            *(_QWORD *)&v77 = v110;
            *((_QWORD *)&v77 + 1) = v37;
            *(_QWORD *)&v78 = v72;
            *((_QWORD *)&v78 + 1) = v38;
            swift_getAtPartialKeyPath();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!swift_dynamicCast())
            {
              a5 = v57;
              goto LABEL_21;
            }
            v67 = v73;
            v110 = v74;
            v81 = v107;
            v82 = v108;
            v83 = v109;
            v77 = v103;
            v78 = v104;
            v79 = v105;
            v80 = v106;
            v75 = v101;
            v76 = v102;
            sub_1ABD97ECC((uint64_t)&v101);
            sub_1ABE1F5D8(&v75, &v84);
            v39 = v84;
            v40 = v85;
            v41 = v86;
            v42 = v87;
            v43 = v89;
            v72 = v88;
            v44 = v91;
            v69 = v90;
            sub_1ABF2FD94();
            *(_QWORD *)&v75 = v39;
            *((_QWORD *)&v75 + 1) = v40;
            *(_QWORD *)&v76 = v41;
            *((_QWORD *)&v76 + 1) = v42;
            *(_QWORD *)&v77 = v72;
            *((_QWORD *)&v77 + 1) = v43;
            *(_QWORD *)&v78 = v69;
            *((_QWORD *)&v78 + 1) = v44;
            swift_getAtPartialKeyPath();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_dynamicCast() & 1) == 0)
              break;
            v45 = v73;
            v46 = v74;
            v13 = v71;
            if ((sub_1ABF2FDA0() & 1) != 0)
            {
              v47 = v70;
              if (v67 == v45 && v110 == v46)
              {
                swift_bridgeObjectRelease_n();
                (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v13);
              }
              else
              {
                v32 = sub_1ABF3223C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v13);
                if ((v32 & 1) != 0)
                  goto LABEL_18;
              }
            }
            else
            {
              v47 = v70;
              if (v45 == v67 && v46 == v110)
              {
                (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v13);
                swift_bridgeObjectRelease_n();
              }
              else
              {
                v48 = sub_1ABF3223C();
                (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v13);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v48 & 1) != 0)
                {
LABEL_18:
                  a5 = v57;
                  swift_bridgeObjectRelease();
                  goto LABEL_22;
                }
              }
            }
            v29 = v47 + v64;
            v31 = v68 - 1;
            if (v68 == 1)
              goto LABEL_18;
          }
          a5 = v57;
          swift_bridgeObjectRelease();
LABEL_21:
          swift_bridgeObjectRelease();
          MEMORY[0x1AF436E0C]("Encountered a SymbolWidgetEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E0DEE9D8]);
          v13 = v71;
          (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v71);
LABEL_22:
          sub_1ABD97F60((uint64_t)&v101);
          sub_1ABD97F60((uint64_t)&v92);
          v14 = v58;
          v15 = v60;
          a3 = v61;
        }
        if (!v14)
        {
          __break(1u);
          return;
        }
        --a3;
        v49 = v15 - 136;
        v80 = *(_OWORD *)(v15 + 80);
        v81 = *(_OWORD *)(v15 + 96);
        v82 = *(_OWORD *)(v15 + 112);
        v83 = *(_QWORD *)(v15 + 128);
        v76 = *(_OWORD *)(v15 + 16);
        v77 = *(_OWORD *)(v15 + 32);
        v78 = *(_OWORD *)(v15 + 48);
        v79 = *(_OWORD *)(v15 + 64);
        v75 = *(_OWORD *)v15;
        v50 = *(_OWORD *)(v15 - 56);
        *(_OWORD *)(v15 + 64) = *(_OWORD *)(v15 - 72);
        *(_OWORD *)(v15 + 80) = v50;
        v51 = *(_OWORD *)(v15 - 24);
        *(_OWORD *)(v15 + 96) = *(_OWORD *)(v15 - 40);
        *(_OWORD *)(v15 + 112) = v51;
        *(_QWORD *)(v15 + 128) = *(_QWORD *)(v15 - 8);
        v52 = *(_OWORD *)(v15 - 88);
        *(_OWORD *)(v15 + 32) = *(_OWORD *)(v15 - 104);
        *(_OWORD *)(v15 + 48) = v52;
        v53 = *(_OWORD *)(v15 - 120);
        *(_OWORD *)v15 = *(_OWORD *)(v15 - 136);
        *(_OWORD *)(v15 + 16) = v53;
        *(_OWORD *)(v49 + 64) = v79;
        *(_OWORD *)(v49 + 80) = v80;
        *(_OWORD *)(v49 + 96) = v81;
        *(_OWORD *)(v49 + 112) = v82;
        *(_QWORD *)(v49 + 128) = v83;
        *(_OWORD *)(v49 + 16) = v76;
        *(_OWORD *)(v49 + 32) = v77;
        *(_OWORD *)(v49 + 48) = v78;
        *(_OWORD *)v49 = v75;
      }
      while (a3 != v59);
      a3 = v56 + 1;
      if (v56 + 1 != v55)
        continue;
      break;
    }
  }
}

uint64_t sub_1ABE0C220(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t i;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  uint64_t v82;
  _OWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  __int128 v111;
  char *v112;
  char *v113;
  char v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  char *v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  char *v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  BOOL v137;
  unint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  BOOL v147;
  uint64_t v148;
  char v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  unint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  unint64_t v179;
  unint64_t v180;
  char *v181;
  unint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  unint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  char *v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  uint64_t v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  uint64_t v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  uint64_t v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  uint64_t v279;
  char *v280;

  sub_1ABCF4DA8(0, &qword_1EEC43470, (uint64_t (*)(void))sub_1ABE0BBAC, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C90C58]);
  v6 = v5;
  v216 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v207 = (char *)&v195 - v10;
  v198 = a1;
  v11 = a1[1];
  v213 = a2;
  swift_bridgeObjectRetain_n();
  v12 = sub_1ABF321E8();
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_178;
    if (v11)
    {
      v16 = v213;
      sub_1ABF2FF5C();
      sub_1ABE0BBF0(0, v11, 1, v198, v16);
    }
    return swift_bridgeObjectRelease_n();
  }
  v197 = v12;
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_186;
  v199 = v11;
  v204 = v2;
  if (v11 < 2)
  {
    v202 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v196 = MEMORY[0x1E0DEE9D8];
    if (v11 != 1)
    {
      v123 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v21 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_143:
      if (v123 >= 2)
      {
        v181 = (char *)*v198;
        v224 = (char *)*v198;
        while (1)
        {
          v182 = v123 - 2;
          if (v123 < 2)
            goto LABEL_172;
          if (!v181)
            goto LABEL_185;
          v183 = v21;
          v184 = *(_QWORD *)&v21[16 * v182 + 32];
          v185 = *(_QWORD *)&v21[16 * v123 + 24];
          v186 = &v181[136 * v184];
          v280 = &v181[136 * *(_QWORD *)&v21[16 * v123 + 16]];
          v187 = (unint64_t)&v181[136 * v185];
          v188 = v213;
          sub_1ABF2FF5C();
          v189 = v186;
          v190 = v204;
          sub_1ABE07EB0(v189, v280, v187, v202, v188);
          v204 = v190;
          if (v190)
            goto LABEL_154;
          if (v185 < v184)
            goto LABEL_174;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v183 = sub_1ABE8C050((uint64_t)v183);
          if (v182 >= *((_QWORD *)v183 + 2))
            goto LABEL_175;
          v191 = v183;
          v192 = v183 + 32;
          v193 = &v183[16 * v182 + 32];
          *(_QWORD *)v193 = v184;
          *((_QWORD *)v193 + 1) = v185;
          v194 = *((_QWORD *)v183 + 2);
          if (v123 > v194)
            goto LABEL_176;
          memmove(&v192[16 * v123 - 16], &v192[16 * v123], 16 * (v194 - v123));
          *((_QWORD *)v191 + 2) = v194 - 1;
          v123 = v194 - 1;
          v21 = v191;
          v181 = v224;
          if (v194 <= 2)
            goto LABEL_154;
        }
      }
      goto LABEL_154;
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = sub_1ABF31A74();
    *(_QWORD *)(v15 + 16) = v14;
    v196 = v15;
    v202 = (char *)(v15 + 32);
  }
  v18 = 0;
  v19 = *v198;
  v20 = v199;
  v201 = v199 - 1;
  v195 = v19 - 136;
  v21 = (char *)MEMORY[0x1E0DEE9D8];
  v206 = MEMORY[0x1E0DEE9B8] + 8;
  v280 = v6;
  v222 = v8;
  v210 = v19;
  while (1)
  {
    v22 = v18;
    v23 = v18 + 1;
    v205 = v21;
    v209 = v18;
    if (v18 + 1 >= v20)
      goto LABEL_44;
    v24 = v19 + 136 * v23;
    v262 = *(_OWORD *)v24;
    v25 = *(_OWORD *)(v24 + 16);
    v26 = *(_OWORD *)(v24 + 32);
    v27 = *(_OWORD *)(v24 + 64);
    v265 = *(_OWORD *)(v24 + 48);
    v266 = v27;
    v263 = v25;
    v264 = v26;
    v28 = *(_OWORD *)(v24 + 80);
    v29 = *(_OWORD *)(v24 + 96);
    v30 = *(_OWORD *)(v24 + 112);
    v270 = *(_QWORD *)(v24 + 128);
    v268 = v29;
    v269 = v30;
    v267 = v28;
    v258 = *(_OWORD *)(v24 + 80);
    v259 = *(_OWORD *)(v24 + 96);
    v260 = *(_OWORD *)(v24 + 112);
    v261 = *(_QWORD *)(v24 + 128);
    v254 = *(_OWORD *)(v24 + 16);
    v255 = *(_OWORD *)(v24 + 32);
    v256 = *(_OWORD *)(v24 + 48);
    v257 = *(_OWORD *)(v24 + 64);
    v253 = *(_OWORD *)v24;
    v31 = v19 + 136 * v18;
    v271 = *(_OWORD *)v31;
    v32 = *(_OWORD *)(v31 + 16);
    v33 = *(_OWORD *)(v31 + 32);
    v34 = *(_OWORD *)(v31 + 64);
    v274 = *(_OWORD *)(v31 + 48);
    v275 = v34;
    v272 = v32;
    v273 = v33;
    v35 = *(_OWORD *)(v31 + 80);
    v36 = *(_OWORD *)(v31 + 96);
    v37 = *(_OWORD *)(v31 + 112);
    v279 = *(_QWORD *)(v31 + 128);
    v277 = v36;
    v278 = v37;
    v276 = v35;
    v249 = *(_OWORD *)(v31 + 80);
    v250 = *(_OWORD *)(v31 + 96);
    v251 = *(_OWORD *)(v31 + 112);
    v252 = *(_QWORD *)(v31 + 128);
    v245 = *(_OWORD *)(v31 + 16);
    v246 = *(_OWORD *)(v31 + 32);
    v247 = *(_OWORD *)(v31 + 48);
    v248 = *(_OWORD *)(v31 + 64);
    v244 = *(_OWORD *)v31;
    sub_1ABD97ECC((uint64_t)&v262);
    sub_1ABD97ECC((uint64_t)&v271);
    v38 = v204;
    LODWORD(v211) = sub_1ABE07A08((uint64_t)&v253, (uint64_t)&v244, v213);
    v204 = v38;
    if (v38)
    {
      sub_1ABD97F60((uint64_t)&v271);
      sub_1ABD97F60((uint64_t)&v262);
LABEL_154:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v196 + 16) = 0;
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    sub_1ABD97F60((uint64_t)&v271);
    sub_1ABD97F60((uint64_t)&v262);
    v39 = v22 + 2;
    if (v22 + 2 < v199)
    {
      v214 = *(_QWORD *)(v213 + 16);
      v203 = v22 + 2;
      for (i = v22 + 2; ; ++i)
      {
        v41 = v19 + 136 * i;
        v244 = *(_OWORD *)v41;
        v42 = *(_OWORD *)(v41 + 16);
        v43 = *(_OWORD *)(v41 + 32);
        v44 = *(_OWORD *)(v41 + 64);
        v247 = *(_OWORD *)(v41 + 48);
        v248 = v44;
        v245 = v42;
        v246 = v43;
        v45 = *(_OWORD *)(v41 + 80);
        v46 = *(_OWORD *)(v41 + 96);
        v47 = *(_OWORD *)(v41 + 112);
        v252 = *(_QWORD *)(v41 + 128);
        v250 = v46;
        v251 = v47;
        v249 = v45;
        v48 = v19 + 136 * v23;
        v253 = *(_OWORD *)v48;
        v49 = *(_OWORD *)(v48 + 16);
        v50 = *(_OWORD *)(v48 + 32);
        v51 = *(_OWORD *)(v48 + 64);
        v256 = *(_OWORD *)(v48 + 48);
        v257 = v51;
        v254 = v49;
        v255 = v50;
        v52 = *(_OWORD *)(v48 + 80);
        v53 = *(_OWORD *)(v48 + 96);
        v54 = *(_OWORD *)(v48 + 112);
        v261 = *(_QWORD *)(v48 + 128);
        v259 = v53;
        v260 = v54;
        v258 = v52;
        if (v214)
        {
          v212 = i;
          v55 = v216;
          v56 = (char *)(v213
                       + ((*(unsigned __int8 *)(v216 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v216 + 80)));
          sub_1ABF2FF5C();
          sub_1ABD97ECC((uint64_t)&v244);
          sub_1ABD97ECC((uint64_t)&v253);
          v215 = *(char **)(v55 + 72);
          v217 = *(char **)(v55 + 16);
          v57 = v214;
          v58 = v207;
          while (1)
          {
            v219 = v57;
            v220 = v56;
            ((void (*)(char *, char *, char *))v217)(v58, v56, v6);
            v233 = v250;
            v234 = v251;
            v235 = v252;
            v229 = v246;
            v230 = v247;
            v231 = v248;
            v232 = v249;
            v227 = v244;
            v228 = v245;
            sub_1ABD97ECC((uint64_t)&v244);
            sub_1ABE1F5D8(&v227, (uint64_t *)&v236);
            v61 = v236;
            v60 = v237;
            v62 = v238;
            v63 = v239;
            v64 = v241;
            v223 = v240;
            v224 = v236;
            v66 = v242;
            v65 = v243;
            sub_1ABF2FD94();
            *(_QWORD *)&v227 = v61;
            *((_QWORD *)&v227 + 1) = v60;
            *(_QWORD *)&v228 = v62;
            *((_QWORD *)&v228 + 1) = v63;
            *(_QWORD *)&v229 = v223;
            *((_QWORD *)&v229 + 1) = v64;
            *(_QWORD *)&v230 = v66;
            *((_QWORD *)&v230 + 1) = v65;
            swift_getAtPartialKeyPath();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!swift_dynamicCast())
              break;
            v218 = v225;
            v224 = v226;
            v233 = v259;
            v234 = v260;
            v235 = v261;
            v229 = v255;
            v230 = v256;
            v231 = v257;
            v232 = v258;
            v227 = v253;
            v228 = v254;
            sub_1ABD97ECC((uint64_t)&v253);
            sub_1ABE1F5D8(&v227, (uint64_t *)&v236);
            v68 = v236;
            v67 = v237;
            v223 = (uint64_t)v236;
            v70 = v238;
            v69 = v239;
            v71 = v241;
            v221 = v240;
            v73 = v242;
            v72 = v243;
            sub_1ABF2FD94();
            *(_QWORD *)&v227 = v68;
            *((_QWORD *)&v227 + 1) = v67;
            *(_QWORD *)&v228 = v70;
            *((_QWORD *)&v228 + 1) = v69;
            *(_QWORD *)&v229 = v221;
            *((_QWORD *)&v229 + 1) = v71;
            *(_QWORD *)&v230 = v73;
            *((_QWORD *)&v230 + 1) = v72;
            swift_getAtPartialKeyPath();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((swift_dynamicCast() & 1) == 0)
            {
              swift_bridgeObjectRelease();
              break;
            }
            v75 = v225;
            v74 = v226;
            v6 = v280;
            v58 = v207;
            if ((sub_1ABF2FDA0() & 1) != 0)
            {
              if (v218 == v75 && v224 == v74)
              {
                swift_bridgeObjectRelease_n();
                (*(void (**)(char *, char *))(v216 + 8))(v58, v6);
              }
              else
              {
                v59 = sub_1ABF3223C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*(void (**)(char *, char *))(v216 + 8))(v58, v6);
                if ((v59 & 1) != 0)
                  goto LABEL_32;
              }
            }
            else if (v75 == v218 && v74 == v224)
            {
              (*(void (**)(char *, char *))(v216 + 8))(v58, v6);
              swift_bridgeObjectRelease_n();
            }
            else
            {
              v76 = sub_1ABF3223C();
              (*(void (**)(char *, char *))(v216 + 8))(v58, v6);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v76 & 1) != 0)
              {
LABEL_32:
                swift_bridgeObjectRelease();
                v8 = v222;
                v22 = v209;
                v19 = v210;
                goto LABEL_36;
              }
            }
            v56 = &v215[(_QWORD)v220];
            v57 = v219 - 1;
            if (v219 == 1)
              goto LABEL_32;
          }
          swift_bridgeObjectRelease();
          v8 = v222;
          v19 = v210;
          MEMORY[0x1AF436E0C]("Encountered a SymbolWidgetEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E0DEE9D8]);
          v6 = v280;
          (*(void (**)(char *, char *))(v216 + 8))(v207, v280);
          v22 = v209;
LABEL_36:
          sub_1ABD97F60((uint64_t)&v253);
          sub_1ABD97F60((uint64_t)&v244);
          i = v212;
        }
        if ((v211 & 1) == 0)
          break;
        if (i == v201)
        {
          v39 = v199;
          if (v199 < v22)
            goto LABEL_179;
          goto LABEL_55;
        }
        v23 = i;
      }
      v39 = v203;
      goto LABEL_45;
    }
    if ((v211 & 1) != 0)
    {
LABEL_55:
      if (v22 < v39)
      {
        v80 = v39;
        v81 = (_OWORD *)(v195 + 136 * v39);
        v82 = v39;
        v83 = (_OWORD *)(v19 + 136 * v22);
        do
        {
          if (v22 != --v82)
          {
            if (!v19)
              goto LABEL_184;
            v258 = v83[5];
            v259 = v83[6];
            v260 = v83[7];
            v261 = *((_QWORD *)v83 + 16);
            v254 = v83[1];
            v255 = v83[2];
            v256 = v83[3];
            v257 = v83[4];
            v253 = *v83;
            memmove(v83, v81, 0x88uLL);
            v81[5] = v258;
            v81[6] = v259;
            v81[7] = v260;
            *((_QWORD *)v81 + 16) = v261;
            v81[1] = v254;
            v81[2] = v255;
            v81[3] = v256;
            v81[4] = v257;
            *v81 = v253;
            v39 = v80;
          }
          ++v22;
          v81 = (_OWORD *)((char *)v81 - 136);
          v83 = (_OWORD *)((char *)v83 + 136);
        }
        while (v22 < v82);
        v22 = v209;
      }
      goto LABEL_88;
    }
    v23 = v22 + 2;
LABEL_44:
    v39 = v23;
    if (v23 >= v199)
      goto LABEL_88;
LABEL_45:
    v77 = v39;
    v137 = __OFSUB__(v39, v22);
    v78 = v39 - v22;
    if (v137)
      goto LABEL_177;
    if (v78 >= v197)
    {
      v39 = v77;
      goto LABEL_88;
    }
    v79 = v22 + v197;
    if (__OFADD__(v22, v197))
      goto LABEL_180;
    if (v79 >= v199)
      v79 = v199;
    if (v79 < v22)
      break;
    v200 = v79;
    if (v77 == v79)
    {
      v39 = v77;
    }
    else
    {
      v84 = *(_QWORD *)(v213 + 16);
      v208 = v84;
      do
      {
        v203 = v77;
        v85 = v77;
        do
        {
          v86 = v19 + 136 * v85;
          v262 = *(_OWORD *)v86;
          v87 = *(_OWORD *)(v86 + 16);
          v88 = *(_OWORD *)(v86 + 32);
          v89 = *(_OWORD *)(v86 + 64);
          v265 = *(_OWORD *)(v86 + 48);
          v266 = v89;
          v263 = v87;
          v264 = v88;
          v90 = *(_OWORD *)(v86 + 80);
          v91 = *(_OWORD *)(v86 + 96);
          v92 = *(_OWORD *)(v86 + 112);
          v270 = *(_QWORD *)(v86 + 128);
          v268 = v91;
          v269 = v92;
          v267 = v90;
          v271 = *(_OWORD *)(v86 - 136);
          v93 = *(_OWORD *)(v86 - 120);
          v94 = *(_OWORD *)(v86 - 104);
          v95 = *(_OWORD *)(v86 - 72);
          v274 = *(_OWORD *)(v86 - 88);
          v275 = v95;
          v272 = v93;
          v273 = v94;
          v96 = *(_OWORD *)(v86 - 56);
          v97 = *(_OWORD *)(v86 - 40);
          v98 = *(_OWORD *)(v86 - 24);
          v279 = *(_QWORD *)(v86 - 8);
          v277 = v97;
          v278 = v98;
          v276 = v96;
          if (v84)
          {
            v211 = v19 + 136 * v85;
            v212 = v85;
            v99 = v216;
            v100 = v213
                 + ((*(unsigned __int8 *)(v216 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v216 + 80));
            sub_1ABF2FF5C();
            sub_1ABD97ECC((uint64_t)&v262);
            sub_1ABD97ECC((uint64_t)&v271);
            v101 = *(char **)(v99 + 16);
            v214 = *(_QWORD *)(v99 + 72);
            v215 = v101;
            while (1)
            {
              v218 = v84;
              v219 = v100;
              ((void (*)(char *, uint64_t, char *))v215)(v8, v100, v6);
              v259 = v268;
              v260 = v269;
              v261 = v270;
              v255 = v264;
              v256 = v265;
              v257 = v266;
              v258 = v267;
              v253 = v262;
              v254 = v263;
              sub_1ABD97ECC((uint64_t)&v262);
              sub_1ABE1F5D8(&v253, (uint64_t *)&v244);
              v103 = v244;
              v104 = v245;
              v223 = v246;
              v224 = (char *)v244;
              v105 = *((_QWORD *)&v246 + 1);
              v106 = v247;
              sub_1ABF2FD94();
              v253 = v103;
              v254 = v104;
              *(_QWORD *)&v255 = v223;
              *((_QWORD *)&v255 + 1) = v105;
              v256 = v106;
              swift_getAtPartialKeyPath();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v107 = MEMORY[0x1E0DEE9B8] + 8;
              if (!swift_dynamicCast())
                break;
              v217 = v236;
              v224 = v237;
              v259 = v277;
              v260 = v278;
              v261 = v279;
              v255 = v273;
              v256 = v274;
              v257 = v275;
              v258 = v276;
              v253 = v271;
              v254 = v272;
              sub_1ABD97ECC((uint64_t)&v271);
              sub_1ABE1F5D8(&v253, (uint64_t *)&v244);
              v108 = v244;
              v109 = v245;
              v220 = (char *)v246;
              v221 = v244;
              v110 = *((_QWORD *)&v246 + 1);
              v111 = v247;
              v223 = v107;
              sub_1ABF2FD94();
              v253 = v108;
              v254 = v109;
              *(_QWORD *)&v255 = v220;
              *((_QWORD *)&v255 + 1) = v110;
              v256 = v111;
              swift_getAtPartialKeyPath();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((swift_dynamicCast() & 1) == 0)
              {
                swift_bridgeObjectRelease();
                break;
              }
              v113 = v236;
              v112 = v237;
              v6 = v280;
              v8 = v222;
              if ((sub_1ABF2FDA0() & 1) != 0)
              {
                if (v217 == v113 && v224 == v112)
                {
                  swift_bridgeObjectRelease_n();
                  (*(void (**)(char *, char *))(v216 + 8))(v8, v6);
                }
                else
                {
                  v102 = sub_1ABF3223C();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  (*(void (**)(char *, char *))(v216 + 8))(v8, v6);
                  if ((v102 & 1) != 0)
                    goto LABEL_79;
                }
              }
              else if (v113 == v217 && v112 == v224)
              {
                (*(void (**)(char *, char *))(v216 + 8))(v8, v6);
                swift_bridgeObjectRelease_n();
              }
              else
              {
                v114 = sub_1ABF3223C();
                (*(void (**)(char *, char *))(v216 + 8))(v8, v6);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v114 & 1) != 0)
                {
LABEL_79:
                  swift_bridgeObjectRelease();
                  v19 = v210;
                  goto LABEL_83;
                }
              }
              v100 = v219 + v214;
              v84 = v218 - 1;
              if (v218 == 1)
                goto LABEL_79;
            }
            swift_bridgeObjectRelease();
            v19 = v210;
            MEMORY[0x1AF436E0C]("Encountered a SymbolWidgetEntity value in SymbolQuery which is not a String. We need to add explicit support for this in the property queries.", 142, 2, MEMORY[0x1E0DEE9D8]);
            v8 = v222;
            v6 = v280;
            (*(void (**)(char *, char *))(v216 + 8))(v222, v280);
LABEL_83:
            v84 = v208;
            v22 = v209;
            v85 = v212;
            sub_1ABD97F60((uint64_t)&v271);
            sub_1ABD97F60((uint64_t)&v262);
            v86 = v211;
          }
          if (!v19)
            goto LABEL_182;
          --v85;
          v115 = v86 - 136;
          v258 = *(_OWORD *)(v86 + 80);
          v259 = *(_OWORD *)(v86 + 96);
          v260 = *(_OWORD *)(v86 + 112);
          v261 = *(_QWORD *)(v86 + 128);
          v254 = *(_OWORD *)(v86 + 16);
          v255 = *(_OWORD *)(v86 + 32);
          v256 = *(_OWORD *)(v86 + 48);
          v257 = *(_OWORD *)(v86 + 64);
          v253 = *(_OWORD *)v86;
          v116 = *(_OWORD *)(v86 - 56);
          *(_OWORD *)(v86 + 64) = *(_OWORD *)(v86 - 72);
          *(_OWORD *)(v86 + 80) = v116;
          v117 = *(_OWORD *)(v86 - 24);
          *(_OWORD *)(v86 + 96) = *(_OWORD *)(v86 - 40);
          *(_OWORD *)(v86 + 112) = v117;
          *(_QWORD *)(v86 + 128) = *(_QWORD *)(v86 - 8);
          v118 = *(_OWORD *)(v86 - 88);
          *(_OWORD *)(v86 + 32) = *(_OWORD *)(v86 - 104);
          *(_OWORD *)(v86 + 48) = v118;
          v119 = *(_OWORD *)(v86 - 120);
          *(_OWORD *)v86 = *(_OWORD *)(v86 - 136);
          *(_OWORD *)(v86 + 16) = v119;
          *(_OWORD *)(v115 + 64) = v257;
          *(_OWORD *)(v115 + 80) = v258;
          *(_OWORD *)(v115 + 96) = v259;
          *(_OWORD *)(v115 + 112) = v260;
          *(_QWORD *)(v115 + 128) = v261;
          *(_OWORD *)(v115 + 16) = v254;
          *(_OWORD *)(v115 + 32) = v255;
          *(_OWORD *)(v115 + 48) = v256;
          *(_OWORD *)v115 = v253;
        }
        while (v85 != v22);
        v77 = v203 + 1;
      }
      while (v203 + 1 != v200);
      v39 = v200;
    }
LABEL_88:
    if (v39 < v22)
      goto LABEL_173;
    v203 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v120 = v205;
    else
      v120 = sub_1ABE8BC6C(0, *((_QWORD *)v205 + 2) + 1, 1, v205);
    v122 = *((_QWORD *)v120 + 2);
    v121 = *((_QWORD *)v120 + 3);
    v123 = v122 + 1;
    if (v122 >= v121 >> 1)
      v120 = sub_1ABE8BC6C((char *)(v121 > 1), v122 + 1, 1, v120);
    *((_QWORD *)v120 + 2) = v123;
    v205 = v120;
    v124 = v120 + 32;
    v125 = &v120[16 * v122 + 32];
    v18 = v203;
    *(_QWORD *)v125 = v22;
    *((_QWORD *)v125 + 1) = v18;
    if (v122)
    {
      v21 = v205;
      while (1)
      {
        v126 = v123 - 1;
        if (v123 >= 4)
        {
          v131 = &v124[16 * v123];
          v132 = *((_QWORD *)v131 - 8);
          v133 = *((_QWORD *)v131 - 7);
          v137 = __OFSUB__(v133, v132);
          v134 = v133 - v132;
          if (v137)
            goto LABEL_161;
          v136 = *((_QWORD *)v131 - 6);
          v135 = *((_QWORD *)v131 - 5);
          v137 = __OFSUB__(v135, v136);
          v129 = v135 - v136;
          v130 = v137;
          if (v137)
            goto LABEL_162;
          v138 = v123 - 2;
          v139 = &v124[16 * v123 - 32];
          v141 = *(_QWORD *)v139;
          v140 = *((_QWORD *)v139 + 1);
          v137 = __OFSUB__(v140, v141);
          v142 = v140 - v141;
          if (v137)
            goto LABEL_164;
          v137 = __OFADD__(v129, v142);
          v143 = v129 + v142;
          if (v137)
            goto LABEL_167;
          if (v143 >= v134)
          {
            v161 = &v124[16 * v126];
            v163 = *(_QWORD *)v161;
            v162 = *((_QWORD *)v161 + 1);
            v137 = __OFSUB__(v162, v163);
            v164 = v162 - v163;
            if (v137)
              goto LABEL_171;
            v154 = v129 < v164;
            goto LABEL_126;
          }
        }
        else
        {
          if (v123 != 3)
          {
            v155 = *((_QWORD *)v21 + 4);
            v156 = *((_QWORD *)v21 + 5);
            v137 = __OFSUB__(v156, v155);
            v148 = v156 - v155;
            v149 = v137;
            goto LABEL_120;
          }
          v128 = *((_QWORD *)v21 + 4);
          v127 = *((_QWORD *)v21 + 5);
          v137 = __OFSUB__(v127, v128);
          v129 = v127 - v128;
          v130 = v137;
        }
        if ((v130 & 1) != 0)
          goto LABEL_163;
        v138 = v123 - 2;
        v144 = &v124[16 * v123 - 32];
        v146 = *(_QWORD *)v144;
        v145 = *((_QWORD *)v144 + 1);
        v147 = __OFSUB__(v145, v146);
        v148 = v145 - v146;
        v149 = v147;
        if (v147)
          goto LABEL_166;
        v150 = &v124[16 * v126];
        v152 = *(_QWORD *)v150;
        v151 = *((_QWORD *)v150 + 1);
        v137 = __OFSUB__(v151, v152);
        v153 = v151 - v152;
        if (v137)
          goto LABEL_169;
        if (__OFADD__(v148, v153))
          goto LABEL_170;
        if (v148 + v153 >= v129)
        {
          v154 = v129 < v153;
LABEL_126:
          if (v154)
            v126 = v138;
          goto LABEL_128;
        }
LABEL_120:
        if ((v149 & 1) != 0)
          goto LABEL_165;
        v157 = &v124[16 * v126];
        v159 = *(_QWORD *)v157;
        v158 = *((_QWORD *)v157 + 1);
        v137 = __OFSUB__(v158, v159);
        v160 = v158 - v159;
        if (v137)
          goto LABEL_168;
        if (v160 < v148)
        {
          v21 = v205;
          v18 = v203;
          goto LABEL_137;
        }
LABEL_128:
        v165 = v126 - 1;
        if (v126 - 1 >= v123)
        {
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
          goto LABEL_181;
        }
        if (!v19)
          goto LABEL_183;
        v166 = &v124[16 * v165];
        v167 = v124;
        v168 = *(_QWORD *)v166;
        v169 = v167;
        v170 = v126;
        v171 = &v167[16 * v126];
        v172 = *((_QWORD *)v171 + 1);
        v173 = (char *)(v19 + 136 * *(_QWORD *)v166);
        v174 = (char *)(v19 + 136 * *(_QWORD *)v171);
        v223 = v19 + 136 * v172;
        v224 = v174;
        v175 = v213;
        sub_1ABF2FF5C();
        v176 = v173;
        v177 = v204;
        sub_1ABE07EB0(v176, v224, v223, v202, v175);
        if (v177)
          goto LABEL_154;
        v178 = v205;
        if (v172 < v168)
          goto LABEL_158;
        if (v170 > *((_QWORD *)v205 + 2))
          goto LABEL_159;
        v179 = v170;
        *(_QWORD *)v166 = v168;
        *(_QWORD *)&v169[16 * v165 + 8] = v172;
        v180 = *((_QWORD *)v178 + 2);
        if (v179 >= v180)
          goto LABEL_160;
        v124 = v169;
        v204 = 0;
        v123 = v180 - 1;
        memmove(v171, v171 + 16, 16 * (v180 - 1 - v179));
        v21 = v205;
        *((_QWORD *)v205 + 2) = v180 - 1;
        v6 = v280;
        v8 = v222;
        v19 = v210;
        v18 = v203;
        if (v180 <= 2)
          goto LABEL_137;
      }
    }
    v123 = 1;
    v21 = v205;
LABEL_137:
    v20 = v199;
    if (v18 >= v199)
      goto LABEL_143;
  }
LABEL_181:
  __break(1u);
LABEL_182:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_183:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_185:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_186:
  swift_bridgeObjectRelease_n();
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

uint64_t sub_1ABE0D634(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1ABE8C0A0(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  sub_1ABF2FF5C();
  sub_1ABE0C220(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1ABE0D6D4(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED34C5D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for SymbolWidgetQuery, (uint64_t)&unk_1ABF3ECC8);
}

uint64_t type metadata accessor for SymbolWidgetQuery()
{
  return objc_opt_self();
}

uint64_t sub_1ABE0D720(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED34C5D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for SymbolWidgetQuery, (uint64_t)&unk_1ABF3ED28);
}

uint64_t sub_1ABE0D750(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C((unint64_t *)&qword_1EEC43438, a2, (uint64_t (*)(uint64_t))type metadata accessor for SymbolWidgetQuery, (uint64_t)&unk_1ABF3EC40);
}

uint64_t sub_1ABE0D77C(uint64_t a1, uint64_t a2)
{
  return sub_1ABCFE22C(&qword_1ED34C5C8, a2, (uint64_t (*)(uint64_t))type metadata accessor for SymbolWidgetQuery, (uint64_t)&unk_1ABF3ED50);
}

unint64_t sub_1ABE0D7B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC43448;
  if (!qword_1EEC43448)
  {
    sub_1ABCF4DA8(255, qword_1EEC43450, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C91380]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91390], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC43448);
  }
  return result;
}

uint64_t sub_1ABE0D818()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABE0D824()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t destroy for SymbolWidgetQuery.FilteredStockQuery()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SymbolWidgetQuery.FilteredStockQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  return a1;
}

_QWORD *assignWithCopy for SymbolWidgetQuery.FilteredStockQuery(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1ABF2FF68();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SymbolWidgetQuery.FilteredStockQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SymbolWidgetQuery.FilteredStockQuery()
{
  return &type metadata for SymbolWidgetQuery.FilteredStockQuery;
}

void sub_1ABE0D95C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C8F0)
  {
    v0 = sub_1ABF31E70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C8F0);
  }
}

void sub_1ABE0D9C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43480)
  {
    sub_1ABCF4DA8(255, &qword_1EEC43478, (uint64_t (*)(void))sub_1ABE0BBAC, (uint64_t)&type metadata for SymbolWidgetEntity, MEMORY[0x1E0C91AC0]);
    v0 = sub_1ABF32200();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43480);
  }
}

void sub_1ABE0DA38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43488)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
    sub_1ABE0BBAC();
    sub_1ABD94F2C();
    v0 = sub_1ABF2FEB4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43488);
  }
}

void sub_1ABE0DAF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43490)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
    sub_1ABD94F2C();
    v0 = sub_1ABF2FFF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43490);
  }
}

void sub_1ABE0DB9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43498)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
    sub_1ABD94F2C();
    v0 = sub_1ABF2FE90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43498);
  }
}

void sub_1ABE0DC40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC434A0)
  {
    sub_1ABCF4DA8(255, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
    sub_1ABD94F2C();
    v0 = sub_1ABF2FE48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC434A0);
  }
}

uint64_t sub_1ABE0DCEC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE0DD10(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(v1 + 16) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(v1 + 24))
    return 1;
  else
    return sub_1ABF3223C();
}

uint64_t sub_1ABE0DD3C()
{
  return sub_1ABE05334();
}

uint64_t sub_1ABE0DD44(uint64_t a1)
{
  uint64_t v1;

  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(v1 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(v1 + 24))
    return 1;
  else
    return sub_1ABF3223C();
}

uint64_t sub_1ABE0DD70()
{
  return sub_1ABE04F54();
}

void sub_1ABE0DD78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC434B0)
  {
    sub_1ABF30820();
    sub_1ABCFE22C(&qword_1ED34EAC0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], MEMORY[0x1E0CB0C60]);
    v0 = sub_1ABF31E70();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC434B0);
  }
}

uint64_t dispatch thunk of ArticleCohort.tag.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ArticleCohort.clicks.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ArticleCohort.impressions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ArticleCohort.updatedDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1ABE0DE20()
{
  uint64_t v0;

  sub_1ABE0DE58(v0 + OBJC_IVAR____TtC10StocksCore18UserRegionProvider_currentRegion);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE0DE50()
{
  return type metadata accessor for UserRegionProvider();
}

uint64_t sub_1ABE0DE58(uint64_t a1)
{
  uint64_t v2;

  sub_1ABD47E08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1ABE0DE94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD v21[5];
  __int16 v22;

  v3 = v2;
  v6 = sub_1ABF30790();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABF2FF5C();
  sub_1ABF2FBD8();
  v10 = sub_1ABF30778();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = (_QWORD *)(v3 + 72);
  swift_beginAccess();
  v14 = *(_QWORD **)(v3 + 72);
  sub_1ABF2FF5C();
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 72) = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v14 = sub_1ABD124D4(0, v14[2] + 1, 1, v14);
    *v13 = v14;
  }
  v18 = v14[2];
  v17 = v14[3];
  if (v18 >= v17 >> 1)
  {
    v14 = sub_1ABD124D4((_QWORD *)(v17 > 1), v18 + 1, 1, v14);
    *v13 = v14;
  }
  v14[2] = v18 + 1;
  v19 = &v14[6 * v18];
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = v15;
  v19[7] = v10;
  v19[8] = v12;
  *((_WORD *)v19 + 36) = 160;
  swift_endAccess();
  v21[0] = a1;
  v21[1] = a2;
  v21[2] = v15;
  v21[3] = v10;
  v21[4] = v12;
  v22 = 160;
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE0E05C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  uint64_t v14;
  _BYTE v15[16];
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = *((_BYTE *)a1 + 40);
  v8 = *((_BYTE *)a1 + 41);
  swift_beginAccess();
  v9 = *(_QWORD *)(v1 + 72);
  v14 = v2;
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v16 = &v17;
  sub_1ABF2FF5C();
  v10 = sub_1ABE0E5F8(sub_1ABE0E768, (uint64_t)v15, v9);
  v12 = v11;
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    swift_beginAccess();
    sub_1ABF12CF4(v10, (uint64_t)&v17);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = v14;
  v18 = v3;
  v19 = v4;
  v20 = v5;
  v21 = v6;
  v22 = v7;
  v23 = v8;
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE0E1D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StubWatchlistManager()
{
  return objc_opt_self();
}

uint64_t sub_1ABE0E248()
{
  return sub_1ABF2FF68();
}

uint64_t sub_1ABE0E254@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v3 = *(_QWORD *)(*v1 + 24);
  v6 = *(_QWORD *)(*v1 + 32);
  v5 = *(_QWORD *)(*v1 + 40);
  v7 = *(_QWORD *)(*v1 + 48);
  LOWORD(v2) = *(_WORD *)(v2 + 56);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v7;
  *(_WORD *)(a1 + 40) = v2;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE0E2A0()
{
  swift_beginAccess();
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE0E2E0()
{
  sub_1ABD04518(0, (unint64_t *)&unk_1ED34DD50, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE0E344()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;

  v1 = *v0;
  sub_1ABD04578(0, &qword_1ED34E328, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ABF366C0;
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_WORD *)(v1 + 56);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = v5;
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = v6;
  *(_WORD *)(v2 + 72) = v7;
  sub_1ABD04518(0, (unint64_t *)&unk_1ED34DD50, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist);
  swift_allocObject();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE0E428(uint64_t a1, uint64_t a2)
{
  return sub_1ABE0DE94(a1, a2);
}

uint64_t sub_1ABE0E448(uint64_t *a1)
{
  return sub_1ABE0E05C(a1);
}

uint64_t sub_1ABE0E468()
{
  sub_1ABD04518(0, &qword_1ED34DD38, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE0E4CC(uint64_t a1, uint64_t a2)
{
  return sub_1ABE0E504(a1, a2, &qword_1ED34DD38, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock);
}

uint64_t sub_1ABE0E4E8(uint64_t a1, uint64_t a2)
{
  return sub_1ABE0E504(a1, a2, (unint64_t *)&unk_1ED34DD50, &qword_1ED34DFB8, (uint64_t)&type metadata for Watchlist);
}

uint64_t sub_1ABE0E504(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1ABD04518(0, a3, a4, a5);
  swift_allocObject();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE0E55C()
{
  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE0E5F8(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  char v12;
  _QWORD v14[5];
  __int16 v15;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v6 = (uint64_t *)(a3 + 48 * v4);
    do
    {
      v7 = *(v6 - 1);
      v9 = *v6;
      v8 = v6[1];
      v10 = v6[2];
      v11 = *((_WORD *)v6 + 12);
      v14[0] = *(v6 - 2);
      v14[1] = v7;
      v14[2] = v9;
      v14[3] = v8;
      v14[4] = v10;
      v15 = v11;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v12 = a1(v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v3)
        break;
      --v4;
      v6 -= 6;
    }
    while (!(v12 & 1 | (v4 == 0)));
  }
  return v4;
}

uint64_t sub_1ABE0E6F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;

  v2 = a1[3];
  v3 = a1[4];
  v4 = *((_WORD *)a1 + 20);
  v5 = *a2;
  v6 = a2[3];
  v7 = a2[4];
  v8 = *((_WORD *)a2 + 20);
  v15 = *a1;
  v16 = *(_OWORD *)(a1 + 1);
  v17 = v2;
  v18 = v3;
  v19 = v4;
  v10 = v5;
  v11 = *(_OWORD *)(a2 + 1);
  v12 = v6;
  v13 = v7;
  v14 = v8;
  return sub_1ABD36800((uint64_t)&v15, &v10) & 1;
}

uint64_t sub_1ABE0E768(uint64_t *a1)
{
  uint64_t v1;

  return sub_1ABE0E6F0(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1ABE0E784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 8)
                                                                                     + *(_QWORD *)(a6 + 8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1ABD7E2B8;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1ABE0E824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE0E8B8(a1, type metadata accessor for Chart, a2);
}

uint64_t sub_1ABE0E830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE0E8B8(a1, (uint64_t (*)(_QWORD))type metadata accessor for Quote, a2);
}

uint64_t sub_1ABE0E83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE0E8B8(a1, (uint64_t (*)(_QWORD))type metadata accessor for SDSAuthToken, a2);
}

uint64_t sub_1ABE0E848(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;

  result = sub_1ABE0FAE0(a1);
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  sub_1ABE1000C(result, v3, 0, a1);
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE0E8AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE0E8B8(a1, (uint64_t (*)(_QWORD))type metadata accessor for QuoteDetail, a2);
}

uint64_t sub_1ABE0E8B8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  result = sub_1ABE0FAE0(a1);
  if ((v8 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v7)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v9 = a2(0);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v11 = a3;
    v12 = 1;
  }
  else
  {
    sub_1ABE0FB68(result, v7, a1, a2, a3);
    v9 = a2(0);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v11 = a3;
    v12 = 0;
  }
  return v10(v11, v12, 1, v9);
}

uint64_t sub_1ABE0E968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a1;
  v29 = sub_1ABF30C28();
  v26 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v28 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30B38();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = sub_1ABF30760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE0FC64(0, &qword_1ED34C4C0, MEMORY[0x1E0DB4B98]);
  v27 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v11 + *(unsigned __int8 *)(v7 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v25[1];
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v14, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868];
  sub_1ABCF5A54(0, &qword_1ED34C598, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v18 = v26;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1ABF366C0;
  swift_retain_n();
  sub_1ABF30C10();
  v31 = v19;
  sub_1ABE0F958();
  sub_1ABCF5A54(0, &qword_1ED350B68, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABE0F9A0();
  v20 = v28;
  v21 = v29;
  sub_1ABF31E04();
  sub_1ABF31138();
  swift_release();
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v21);
  v22 = (void *)sub_1ABF31114();
  type metadata accessor for CurrencyResponse();
  v23 = sub_1ABF31180();
  swift_release();

  return v23;
}

uint64_t sub_1ABE0EC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v19 = a2;
  v6 = sub_1ABF30B38();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = sub_1ABF30760();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE0FC00();
  v18 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v6);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v11 + *(unsigned __int8 *)(v7 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v14, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1ABF2FF68();
  return sub_1ABF31168();
}

uint64_t sub_1ABE0EE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  sub_1ABCF5A54(0, &qword_1ED34C378, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4[9] = swift_task_alloc();
  v5 = type metadata accessor for CurrencyResponse();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1ABE0EEAC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[6];
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v6 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v3 + 8) + *(_QWORD *)(v3 + 8));
  v4 = (_QWORD *)swift_task_alloc();
  v0[13] = v4;
  *v4 = v0;
  v4[1] = sub_1ABE0EF34;
  return v6(v0[12], v0[7], v0[8], v2, v3);
}

uint64_t sub_1ABE0EF34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1ABE0EF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(unint64_t **)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  sub_1ABCFC790(v1, v3, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v4);
  v7 = v6 + OBJC_IVAR____TtC10StocksCore15CurrencyManager_inMemory;
  swift_beginAccess();
  sub_1ABE0FFB0(v3, v7);
  swift_endAccess();
  sub_1ABCF5A54(0, &qword_1ED34C590, (uint64_t (*)(uint64_t))sub_1ABE0FEA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1ABE0FEA0();
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1ABF366C0;
  sub_1ABCFC790(v1, v11 + v10, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
  v12 = sub_1ABDF1C64(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1ABE0FE64(v1);
  *v5 = v12;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE0F118()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE0F158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1ABF30B08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  sub_1ABE0FC00();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_1ABF2FF68();
  return sub_1ABF311A4();
}

uint64_t sub_1ABE0F244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  _QWORD v24[2];
  unint64_t *v25;

  v24[1] = a2;
  v25 = a3;
  v4 = sub_1ABF30760();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, &qword_1ED34C378, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v24 - v9;
  v11 = type metadata accessor for CurrencyResponse();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1 + OBJC_IVAR____TtC10StocksCore15CurrencyManager_inMemory;
  swift_beginAccess();
  sub_1ABE0FE08(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1ABE0FA00((uint64_t)v10);
LABEL_6:
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 80));
    (*(void (**)(void))(a1 + 104))();
    v22 = sub_1ABF0E5A8();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_7;
  }
  v16 = sub_1ABE0FA98((uint64_t)v10, (uint64_t)v14);
  (*(void (**)(uint64_t))(a1 + 104))(v16);
  v17 = sub_1ABF0DF08((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v17 & 1) == 0)
  {
    sub_1ABE0FE64((uint64_t)v14);
    goto LABEL_6;
  }
  sub_1ABCF5A54(0, &qword_1ED34C590, (uint64_t (*)(uint64_t))sub_1ABE0FEA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1ABE0FEA0();
  v19 = *(unsigned __int8 *)(*(_QWORD *)(v18 - 8) + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1ABF366C0;
  sub_1ABCFC790((uint64_t)v14, v21 + v20, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse);
  v22 = sub_1ABDF1C64(v21);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  result = sub_1ABE0FE64((uint64_t)v14);
LABEL_7:
  *v25 = v22;
  return result;
}

uint64_t sub_1ABE0F4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABE0FC00();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  return sub_1ABF311A4();
}

uint64_t sub_1ABE0F568@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  sub_1ABCF5A54(0, &qword_1ED34C378, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v9 - v5;
  sub_1ABE0E8B8(*a1, (uint64_t (*)(_QWORD))type metadata accessor for CurrencyResponse, (uint64_t)v9 - v5);
  v7 = type metadata accessor for CurrencyResponse();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7) != 1)
    return sub_1ABE0FA98((uint64_t)v6, a2);
  sub_1ABE0FA00((uint64_t)v6);
  sub_1ABE0FA54();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1ABE0F668()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  sub_1ABE0FA00(v0 + OBJC_IVAR____TtC10StocksCore15CurrencyManager_inMemory);
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE0F6B8()
{
  return type metadata accessor for CurrencyManager();
}

uint64_t type metadata accessor for CurrencyManager()
{
  uint64_t result;

  result = qword_1ED34C330;
  if (!qword_1ED34C330)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1ABE0F6FC()
{
  unint64_t v0;

  sub_1ABCF5A54(319, &qword_1ED34C378, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_1ABE0F7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;

  v5[4] = a3;
  v5[5] = a4;
  v5[2] = a1;
  v5[3] = a2;
  v5[6] = *v4;
  return swift_task_switch();
}

uint64_t sub_1ABE0F7CC()
{
  uint64_t *v0;
  _QWORD *v1;

  v0[7] = sub_1ABE0E968(v0[3], v0[4], v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1ABE0F830;
  return sub_1ABF31150();
}

uint64_t sub_1ABE0F830()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1ABE0F8A4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE0F8DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_1ABF30760() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF30B38() - 8) + 80);
  return sub_1ABE0EC9C(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_1ABE0F948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1ABE0F158(a1, a2, v2);
}

uint64_t sub_1ABE0F950(uint64_t a1)
{
  uint64_t v1;

  return sub_1ABE0F4F4(a1, v1);
}

unint64_t sub_1ABE0F958()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED350AF8;
  if (!qword_1ED350AF8)
  {
    v1 = sub_1ABF30C28();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DB3870], v1);
    atomic_store(result, (unint64_t *)&qword_1ED350AF8);
  }
  return result;
}

unint64_t sub_1ABE0F9A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED350B70;
  if (!qword_1ED350B70)
  {
    sub_1ABCF5A54(255, &qword_1ED350B68, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED350B70);
  }
  return result;
}

uint64_t sub_1ABE0FA00(uint64_t a1)
{
  uint64_t v2;

  sub_1ABCF5A54(0, &qword_1ED34C378, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1ABE0FA54()
{
  unint64_t result;

  result = qword_1ED34C320;
  if (!qword_1ED34C320)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F040, &type metadata for CurrencyManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED34C320);
  }
  return result;
}

uint64_t sub_1ABE0FA98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CurrencyResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABE0FAE0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1ABE0FB68@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t (*a4)(_QWORD)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  if (result < 0 || (v5 = result, 1 << *(_BYTE *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v8 = *(_QWORD *)(a3 + 56);
    v9 = a4(0);
    return sub_1ABCFC790(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v5, a5, a4);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1ABE0FC00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C4D0)
  {
    sub_1ABE0FC64(255, (unint64_t *)&qword_1ED34C4F0, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))MEMORY[0x1E0DEA048]);
    v0 = sub_1ABF3124C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C4D0);
  }
}

void sub_1ABE0FC64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, unint64_t))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for CurrencyResponse();
    v7 = sub_1ABDF1DF0();
    v8 = a3(a1, &type metadata for CurrencyManagerCacheKey, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1ABE0FCD0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE0FCFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 80));
  result = sub_1ABF0E3E4(v4);
  *a1 = result;
  return result;
}

uint64_t sub_1ABE0FD48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1ABF30B08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1ABE0FDBC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF30B08() - 8) + 80);
  return sub_1ABE0F244(*(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), a1);
}

uint64_t sub_1ABE0FE08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5A54(0, &qword_1ED34C378, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABE0FE64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CurrencyResponse();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1ABE0FEA0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED34C420)
  {
    type metadata accessor for CurrencyResponse();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED34C420);
  }
}

uint64_t sub_1ABE0FF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_1ABF30760() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1ABF30B38() - 8) + 80);
  v8 = v5 + v6 + v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = v1 + v5;
  v11 = v1 + (v8 & ~v7);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1ABD37AA0;
  return sub_1ABE0EE10(a1, v9, v10, v11);
}

uint64_t sub_1ABE0FFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABCF5A54(0, &qword_1ED34C378, (uint64_t (*)(uint64_t))type metadata accessor for CurrencyResponse, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ABE1000C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for CurrencyManager.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE100A0 + 4 * byte_1ABF3EF50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE100C0 + 4 * byte_1ABF3EF55[v4]))();
}

_BYTE *sub_1ABE100A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE100C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE100C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE100D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE100D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE100E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CurrencyManager.Errors()
{
  return &type metadata for CurrencyManager.Errors;
}

unint64_t sub_1ABE10100()
{
  unint64_t result;

  result = qword_1EEC434D8;
  if (!qword_1EEC434D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F018, &type metadata for CurrencyManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEC434D8);
  }
  return result;
}

uint64_t sub_1ABE10144()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1ABE10150()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1ABE1015C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1ABE10164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1ABE1016C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1ABE10214@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v15[136];
  _OWORD v16[8];
  uint64_t v17;
  _BYTE v18[144];
  uint64_t v19;

  v19 = a2;
  sub_1ABCF56D4(0, &qword_1ED34E270, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = &v15[-v7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABCF5774();
  sub_1ABF3235C();
  if (!v2)
  {
    v9 = v19;
    sub_1ABE11A48();
    sub_1ABF320C8();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    sub_1ABE11254((uint64_t)v18, (uint64_t)v15);
    sub_1ABE11254((uint64_t)v15, (uint64_t)v16);
    v10 = v16[7];
    *(_OWORD *)(v9 + 96) = v16[6];
    *(_OWORD *)(v9 + 112) = v10;
    *(_QWORD *)(v9 + 128) = v17;
    v11 = v16[3];
    *(_OWORD *)(v9 + 32) = v16[2];
    *(_OWORD *)(v9 + 48) = v11;
    v12 = v16[5];
    *(_OWORD *)(v9 + 64) = v16[4];
    *(_OWORD *)(v9 + 80) = v12;
    v13 = v16[1];
    *(_OWORD *)v9 = v16[0];
    *(_OWORD *)(v9 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ABE10394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6B636F7473 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABE10420()
{
  sub_1ABCF5774();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE10448()
{
  sub_1ABCF5774();
  return sub_1ABF32398();
}

uint64_t sub_1ABE10470@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ABE10214(a1, a2);
}

uint64_t sub_1ABE10484()
{
  uint64_t v0;
  uint64_t v2;
  _QWORD v3[17];

  sub_1ABE11254(v0, (uint64_t)v3);
  sub_1ABE11254((uint64_t)v3, (uint64_t)&v2);
  sub_1ABE11A8C(v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1ABD0DF08);
  sub_1ABE112A8(0, &qword_1ED34DAB0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEB940]);
  return sub_1ABF317F8();
}

_QWORD *sub_1ABE104F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t v13;

  v12[2] = a2;
  v12[0] = a1;
  v3 = sub_1ABF30B2C();
  MEMORY[0x1E0C80A78](v3);
  v12[1] = (uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF30EE0();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4198];
  MEMORY[0x1E0C80A78](v5);
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350B00, v6, MEMORY[0x1E0DB41A8]);
  sub_1ABCF5A54(0, &qword_1ED350B80, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B88, &qword_1ED350B80, v6);
  sub_1ABF31E04();
  sub_1ABD35204();
  swift_allocObject();
  v2[7] = sub_1ABF30C34();
  v13 = MEMORY[0x1E0DEE9E8];
  sub_1ABCF5A54(0, &qword_1ED34DD88, (uint64_t (*)(uint64_t))sub_1ABD33A8C, MEMORY[0x1E0DB50C0]);
  swift_allocObject();
  v2[8] = sub_1ABF312DC();
  v7 = v12[0];
  sub_1ABD07E04(v12[0], (uint64_t)(v2 + 2));
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8];
  sub_1ABCF5A54(0, &qword_1ED350340, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB33C8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1ABF366C0;
  sub_1ABF30B20();
  v13 = v9;
  sub_1ABCFE1EC((unint64_t *)&unk_1ED350AE0, v8, MEMORY[0x1E0DB33D8]);
  sub_1ABCF5A54(0, (unint64_t *)&unk_1ED350B50, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABD0223C((unint64_t *)&qword_1ED350B60, (unint64_t *)&unk_1ED350B50, v8);
  sub_1ABF31E04();
  sub_1ABD02E10(0, &qword_1ED34CC50, (unint64_t *)&unk_1ED34DDD0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB2AB0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v10 = sub_1ABF31078();
  __swift_destroy_boxed_opaque_existential_1(v7);
  v2[9] = v10;
  return v2;
}

uint64_t sub_1ABE107EC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for StockMetadataManager.StoreDescriptor()
{
  return &type metadata for StockMetadataManager.StoreDescriptor;
}

uint64_t assignWithCopy for StockMetadataManager.CacheEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABE10AC4(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v5 = *(_OWORD *)(a2 + 64);
      v7 = *(_OWORD *)(a2 + 16);
      v6 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v5;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = v6;
      v9 = *(_OWORD *)(a2 + 96);
      v8 = *(_OWORD *)(a2 + 112);
      v10 = *(_OWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 112) = v8;
      *(_OWORD *)(a1 + 80) = v10;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v11 = *(_OWORD *)(a2 + 16);
    v12 = *(_OWORD *)(a2 + 32);
    v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
    v14 = *(_OWORD *)(a2 + 80);
    v15 = *(_OWORD *)(a2 + 96);
    v16 = *(_OWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v15;
    *(_OWORD *)(a1 + 112) = v16;
    *(_OWORD *)(a1 + 80) = v14;
  }
  return a1;
}

uint64_t sub_1ABE10AC4(uint64_t a1)
{
  destroy for Stock();
  return a1;
}

uint64_t assignWithTake for StockMetadataManager.CacheEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    sub_1ABE10AC4(a1);
LABEL_5:
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StockMetadataManager.CacheEntry()
{
  return &type metadata for StockMetadataManager.CacheEntry;
}

uint64_t sub_1ABE10BF4()
{
  return sub_1ABE10C14();
}

uint64_t sub_1ABE10C04()
{
  return sub_1ABE10C14();
}

uint64_t sub_1ABE10C14()
{
  id v0;
  uint64_t v1;

  if (qword_1ED34D5E8 != -1)
    swift_once();
  v0 = (id)qword_1ED3683F0;
  sub_1ABF31BE8();
  sub_1ABD0F55C();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1ABF366C0;
  sub_1ABD0F510(0, (unint64_t *)&qword_1ED350000);
  sub_1ABF31F6C();
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 64) = sub_1ABD0F5C0();
  *(_QWORD *)(v1 + 32) = 0;
  *(_QWORD *)(v1 + 40) = 0xE000000000000000;
  sub_1ABF31318();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE10D4C(__int128 *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t inited;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v21[8];
  uint64_t v22;
  _OWORD v23[8];
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v1 = a1[7];
  v31 = a1[6];
  v32 = v1;
  v33 = *((_QWORD *)a1 + 16);
  v2 = a1[3];
  v27 = a1[2];
  v28 = v2;
  v3 = a1[5];
  v29 = a1[4];
  v30 = v3;
  v4 = a1[1];
  v25 = *a1;
  v26 = v4;
  v5 = v4;
  v6 = (void *)objc_opt_self();
  sub_1ABF2FF5C();
  v7 = objc_msgSend(v6, sel_sharedPreferences);
  v8 = v7;
  if (!v7)
    goto LABEL_7;
  v9 = objc_msgSend(v7, sel_stocksLanguageCode);
  if (v9)
  {
    v10 = v9;
    sub_1ABF317A4();

  }
  v11 = objc_msgSend(v8, sel_stocksCountryCode);
  if (v11)
  {
    v12 = v11;
    sub_1ABF317A4();

  }
  else
  {
LABEL_7:

  }
  v23[0] = v5;
  sub_1ABF2FF5C();
  sub_1ABF31870();
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  sub_1ABF31870();
  sub_1ABF2FF5C();
  sub_1ABF31870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_1ABF31060();
  sub_1ABCF5A54(0, &qword_1EEC434E0, (uint64_t (*)(uint64_t))sub_1ABE111F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1ABF366C0;
  *(_OWORD *)(inited + 32) = v5;
  v21[0] = v25;
  v21[1] = v26;
  v21[2] = v27;
  v21[3] = v28;
  v21[4] = v29;
  v21[5] = v30;
  v21[6] = v31;
  v21[7] = v32;
  v22 = v33;
  nullsub_2(v21);
  sub_1ABE11254((uint64_t)v21, (uint64_t)v23);
  v14 = v23[4];
  v15 = v23[0];
  *(_OWORD *)(inited + 64) = v23[1];
  v16 = v24;
  v17 = v23[5];
  v18 = v23[7];
  *(_OWORD *)(inited + 144) = v23[6];
  *(_OWORD *)(inited + 160) = v18;
  v19 = v23[3];
  *(_OWORD *)(inited + 80) = v23[2];
  *(_OWORD *)(inited + 96) = v19;
  *(_QWORD *)(inited + 176) = v16;
  *(_OWORD *)(inited + 112) = v14;
  *(_OWORD *)(inited + 128) = v17;
  *(_OWORD *)(inited + 48) = v15;
  sub_1ABD97ECC((uint64_t)&v25);
  sub_1ABDEA3D0(inited);
  sub_1ABF313A8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABE112A8(0, &qword_1EEC45230, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1ABD97ECC((uint64_t)&v25);
  return sub_1ABF311E0();
}

uint64_t sub_1ABE11078(__int128 *a1)
{
  return sub_1ABE10D4C(a1);
}

uint64_t sub_1ABE11098(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1ABF318E8();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_1ABD11E44(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1ABD11E44((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1ABF31FC0();
  __break(1u);
  return result;
}

void sub_1ABE111F0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEC434E8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEC434E8);
  }
}

uint64_t sub_1ABE11254(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1ABE112A8(0, &qword_1ED34DAB0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1ABE112A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for Stock);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1ABE112F0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1ABF32308();
  sub_1ABF2FF5C();
  sub_1ABF31840();
  v6 = sub_1ABF32338();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1ABF3223C() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1ABF3223C() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1ABE0A590();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1ABE1147C(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1ABE1147C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    sub_1ABF2FF68();
    v8 = sub_1ABF31E10();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1ABF32308();
        sub_1ABF2FF5C();
        sub_1ABF31840();
        v10 = sub_1ABF32338();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1ABE11640(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1ABF3223C() & 1;
}

uint64_t sub_1ABE11694(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1ABD16414(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v9 = *(v4 - 1);
      v10 = *v4;
      swift_bridgeObjectRetain_n();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF31870();
      sub_1ABF2FF5C();
      sub_1ABF31870();
      swift_bridgeObjectRelease();
      sub_1ABF31870();
      sub_1ABF2FF5C();
      sub_1ABF31870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v6 = *(_QWORD *)(v11 + 16);
      v5 = *(_QWORD *)(v11 + 24);
      if (v6 >= v5 >> 1)
        sub_1ABD16414(v5 > 1, v6 + 1, 1);
      v4 += 2;
      *(_QWORD *)(v11 + 16) = v6 + 1;
      v7 = v11 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1ABE11814()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1ABE11838()
{
  return swift_deallocObject();
}

uint64_t sub_1ABE11848(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_1ABD0DF98(v2, v3);
  return a1;
}

uint64_t sub_1ABE1190C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1ABF30760();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1ABF30B38();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1ABE119D8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1ABD02E70(0, &qword_1ED34DDA8, MEMORY[0x1E0DB2A80]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

unint64_t sub_1ABE11A48()
{
  unint64_t result;

  result = qword_1ED34DAA8;
  if (!qword_1ED34DAA8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF39250, &type metadata for Stock);
    atomic_store(result, (unint64_t *)&qword_1ED34DAA8);
  }
  return result;
}

_QWORD *sub_1ABE11A8C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16]);
  return a1;
}

ValueMetadata *type metadata accessor for StockMetadataManager.CacheEntry.CodingKeys()
{
  return &type metadata for StockMetadataManager.CacheEntry.CodingKeys;
}

ValueMetadata *type metadata accessor for StockMetadataManager.CacheKey()
{
  return &type metadata for StockMetadataManager.CacheKey;
}

unint64_t sub_1ABE11B0C()
{
  unint64_t result;

  result = qword_1EEC434F0;
  if (!qword_1EEC434F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F284, &type metadata for StockMetadataManager.CacheEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC434F0);
  }
  return result;
}

void sub_1ABE11B54(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;

  v2 = v1;
  v4 = (void *)sub_1ABF31780();
  v5 = (void *)sub_1ABF31780();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  v6 = (void *)sub_1ABF306D0();
  v7 = (void *)sub_1ABF31780();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  v8 = *(unsigned __int8 *)(v2 + OBJC_IVAR___SCUpdateAdsUserIDCommand_overwrite);
  v9 = (id)sub_1ABF31780();
  objc_msgSend(a1, sel_encodeBool_forKey_, v8, v9);

}

id sub_1ABE11CC8(void *a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  void (*v18)();
  char *v19;
  objc_class *v20;
  int v21;
  char *v22;
  void *v23;
  unsigned __int8 v24;
  id v25;
  uint64_t v27;
  objc_class *v28;
  objc_super v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[24];
  uint64_t v35;

  v2 = v1;
  ObjectType = swift_getObjectType();
  sub_1ABD226F0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30760();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2;
  v13 = (void *)sub_1ABF31780();
  v14 = objc_msgSend(a1, sel_decodeObjectForKey_, v13);

  if (v14)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }
  sub_1ABD22B10((uint64_t)&v32, (uint64_t)v34);
  if (!v35)
  {

    v18 = sub_1ABD22B54;
    v19 = v34;
LABEL_16:
    sub_1ABCFC3BC((uint64_t)v19, (uint64_t (*)(_QWORD))v18);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_17:
    swift_deallocPartialClassInstance();
    return 0;
  }
  v15 = v31;
  v27 = v30;
  v28 = (objc_class *)ObjectType;
  v16 = (void *)sub_1ABF31780();
  v17 = objc_msgSend(a1, sel_decodeObjectForKey_, v16);

  if (v17)
  {
    sub_1ABF31DD4();
    swift_unknownObjectRelease();
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }
  v20 = v28;
  sub_1ABD22B10((uint64_t)&v32, (uint64_t)v34);
  if (!v35)
  {
    sub_1ABCFC3BC((uint64_t)v34, (uint64_t (*)(_QWORD))sub_1ABD22B54);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_15;
  }
  v21 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, v21 ^ 1u, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_15:

    swift_bridgeObjectRelease();
    v18 = sub_1ABD226F0;
    v19 = v7;
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v22 = &v12[OBJC_IVAR___SCUpdateAdsUserIDCommand_userID];
  *(_QWORD *)v22 = v27;
  *((_QWORD *)v22 + 1) = v15;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v12[OBJC_IVAR___SCUpdateAdsUserIDCommand_userIDCreatedDate], v11, v8);
  v23 = (void *)sub_1ABF31780();
  v24 = objc_msgSend(a1, sel_decodeBoolForKey_, v23);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v12[OBJC_IVAR___SCUpdateAdsUserIDCommand_overwrite] = v24;

  v29.receiver = v12;
  v29.super_class = v20;
  v25 = objc_msgSendSuper2(&v29, sel_init);

  return v25;
}

uint64_t sub_1ABE12110()
{
  return type metadata accessor for UpdateAdsUserIDCommand();
}

uint64_t sub_1ABE12118(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;

  v4 = objc_msgSend(a1, sel_encryptedValues);
  v5 = (void *)sub_1ABF31780();
  v6 = objc_msgSend(v4, sel_objectForKeyedSubscript_, v5);

  swift_unknownObjectRelease();
  if ((*(_BYTE *)(a2 + OBJC_IVAR___SCUpdateAdsUserIDCommand_overwrite) & 1) != 0 || !v6)
  {
    v7 = objc_msgSend(a1, sel_encryptedValues);
    v8 = (void *)sub_1ABF31780();
    v9 = (void *)sub_1ABF31780();
    objc_msgSend(v7, sel_setObject_forKeyedSubscript_, v8, v9);
    swift_unknownObjectRelease();

    v10 = objc_msgSend(a1, sel_encryptedValues);
    v11 = (void *)sub_1ABF306D0();
    v12 = (void *)sub_1ABF31780();
    objc_msgSend(v10, sel_setObject_forKeyedSubscript_, v11, v12);
    swift_unknownObjectRelease();

  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1ABE123E0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1ABE12404(void *a1)
{
  uint64_t v1;

  return sub_1ABE12118(a1, *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for BlankAllowListProvider()
{
  return objc_opt_self();
}

uint64_t sub_1ABE124A0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1ABCF4DA8(0, &qword_1EEC43538, (uint64_t (*)(void))sub_1ABE131A0, (uint64_t)&type metadata for TestWatchlistService.TestData.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE131A0();
  sub_1ABF32368();
  v10[1] = a2;
  sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABE131E4(&qword_1EEC43540, (uint64_t (*)(void))sub_1ABCF5730, MEMORY[0x1E0DEAF10]);
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1ABE125EC()
{
  return 0x736B636F7473;
}

uint64_t sub_1ABE12600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736B636F7473 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1ABF3223C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1ABE1268C()
{
  sub_1ABE131A0();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE126B4()
{
  sub_1ABE131A0();
  return sub_1ABF32398();
}

_QWORD *sub_1ABE126DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1ABE13018(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE12704(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABE124A0(a1, *v1);
}

uint64_t sub_1ABE1271C()
{
  void *v0;
  uint64_t v1;

  sub_1ABE12EE0();
  sub_1ABF30CAC();
  v0 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v1 = sub_1ABF31180();
  swift_release();

  return v1;
}

uint64_t sub_1ABE127B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v3 = a2;
  v5 = *a1;
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(*a1 + 16);
  if (v8)
  {
    v20 = *(_QWORD *)(a2 + 40);
    v22 = MEMORY[0x1E0DEE9D8];
    v19 = *(_QWORD *)(a2 + 48);
    sub_1ABF2FF5C();
    sub_1ABD16414(0, v8, 0);
    v9 = v22;
    v10 = (uint64_t *)(v5 + 56);
    do
    {
      v12 = *(v10 - 1);
      v11 = *v10;
      v14 = *(_QWORD *)(v22 + 16);
      v13 = *(_QWORD *)(v22 + 24);
      sub_1ABF2FF5C();
      if (v14 >= v13 >> 1)
        sub_1ABD16414(v13 > 1, v14 + 1, 1);
      *(_QWORD *)(v22 + 16) = v14 + 1;
      v15 = v22 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v12;
      *(_QWORD *)(v15 + 40) = v11;
      v10 += 17;
      --v8;
    }
    while (v8);
    v3 = a2;
    v7 = v19;
    v6 = v20;
  }
  else
  {
    sub_1ABF2FF5C();
    v9 = MEMORY[0x1E0DEE9D8];
  }
  v17 = *(_QWORD *)(v3 + 24);
  v16 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v7;
  *(_QWORD *)(a3 + 16) = v9;
  *(_QWORD *)(a3 + 24) = v17;
  *(_QWORD *)(a3 + 32) = v16;
  *(_WORD *)(a3 + 40) = 160;
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE128E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  sub_1ABD04578(0, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1ABF38ED0;
  sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABF3127C();
  sub_1ABF2FF68();
  v1 = (void *)sub_1ABF31114();
  v2 = sub_1ABF31180();
  swift_release();
  swift_release();

  *(_QWORD *)(v0 + 32) = v2;
  sub_1ABF31A20();
  v3 = (void *)sub_1ABF31114();
  sub_1ABE12F54();
  sub_1ABE12FC0();
  v4 = sub_1ABF3115C();
  swift_bridgeObjectRelease();

  return v4;
}

uint64_t sub_1ABE12A50()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TestWatchlistService()
{
  return objc_opt_self();
}

_QWORD *sub_1ABE12AA4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[32];

  v1 = v0;
  v2 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1ABF31774();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v16[-v8];
  v16[31] = 0;
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1EEC42788, (uint64_t (*)(void))sub_1ABDC247C, (uint64_t)&type metadata for StockTestDataLocator, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB3968]);
  swift_allocObject();
  v0[2] = sub_1ABF30CC4();
  v0[3] = sub_1ABF317A4();
  v0[4] = v10;
  sub_1ABF31738();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_1ED34FD78 != -1)
    swift_once();
  v11 = (id)qword_1ED368428;
  sub_1ABF30844();
  v12 = sub_1ABF317EC();
  v14 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
  v1[5] = v12;
  v1[6] = v14;
  return v1;
}

uint64_t sub_1ABE12CAC()
{
  sub_1ABD34D3C();
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

uint64_t sub_1ABE12CFC()
{
  void *v0;
  uint64_t v1;

  sub_1ABE12EE0();
  sub_1ABF30CAC();
  v0 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v1 = sub_1ABF31180();
  swift_release();

  return v1;
}

uint64_t sub_1ABE12D98()
{
  return sub_1ABE128E0();
}

uint64_t sub_1ABE12DB8()
{
  void *v0;
  uint64_t v1;

  sub_1ABE12EE0();
  sub_1ABF30CAC();
  v0 = (void *)sub_1ABF31114();
  sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v1 = sub_1ABF31180();
  swift_release();

  return v1;
}

uint64_t sub_1ABE12E50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FFD0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ABF366C0;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  sub_1ABD34D3C();
  swift_allocObject();
  sub_1ABF2FF5C();
  return sub_1ABF311E0();
}

unint64_t sub_1ABE12EE0()
{
  unint64_t result;

  result = qword_1EEC43508;
  if (!qword_1EEC43508)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F43C, &type metadata for TestWatchlistService.TestData);
    atomic_store(result, (unint64_t *)&qword_1EEC43508);
  }
  return result;
}

uint64_t sub_1ABE12F24()
{
  return sub_1ABE1271C();
}

uint64_t sub_1ABE12F3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1ABE127B8(a1, v2, a2);
}

void sub_1ABE12F54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43510)
  {
    sub_1ABD04578(255, &qword_1ED34E4D0, (uint64_t)&type metadata for Watchlist, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43510);
  }
}

unint64_t sub_1ABE12FC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC43518;
  if (!qword_1EEC43518)
  {
    sub_1ABE12F54();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC43518);
  }
  return result;
}

ValueMetadata *type metadata accessor for TestWatchlistService.TestData()
{
  return &type metadata for TestWatchlistService.TestData;
}

_QWORD *sub_1ABE13018(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD v11[2];

  sub_1ABCF4DA8(0, &qword_1EEC43520, (uint64_t (*)(void))sub_1ABE131A0, (uint64_t)&type metadata for TestWatchlistService.TestData.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE131A0();
  v9 = v8;
  sub_1ABF3235C();
  if (!v1)
  {
    sub_1ABD04578(0, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABE131E4(&qword_1EEC43530, (uint64_t (*)(void))sub_1ABE11A48, MEMORY[0x1E0DEAF40]);
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = (_QWORD *)v11[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1ABE131A0()
{
  unint64_t result;

  result = qword_1EEC43528;
  if (!qword_1EEC43528)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F528, &type metadata for TestWatchlistService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43528);
  }
  return result;
}

uint64_t sub_1ABE131E4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, (unint64_t *)&unk_1ED34DF90, (uint64_t)&type metadata for Stock, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1AF438F30](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TestWatchlistService.TestData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE132A0 + 4 * asc_1ABF3F3B0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE132C0 + 4 * byte_1ABF3F3B5[v4]))();
}

_BYTE *sub_1ABE132A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE132C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE132C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE132D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE132D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE132E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TestWatchlistService.TestData.CodingKeys()
{
  return &type metadata for TestWatchlistService.TestData.CodingKeys;
}

unint64_t sub_1ABE13300()
{
  unint64_t result;

  result = qword_1EEC43548;
  if (!qword_1EEC43548)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F500, &type metadata for TestWatchlistService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43548);
  }
  return result;
}

unint64_t sub_1ABE13348()
{
  unint64_t result;

  result = qword_1EEC43550;
  if (!qword_1EEC43550)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F470, &type metadata for TestWatchlistService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43550);
  }
  return result;
}

unint64_t sub_1ABE13390()
{
  unint64_t result;

  result = qword_1EEC43558;
  if (!qword_1EEC43558)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F498, &type metadata for TestWatchlistService.TestData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43558);
  }
  return result;
}

uint64_t sub_1ABE133D4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1ABD40E78(a1, a2);
}

_OWORD *sub_1ABE133E8@<X0>(_OWORD *result@<X0>, __int128 *a2@<X1>, _OWORD *a3@<X2>, __int128 *a4@<X3>, _OWORD *a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, double a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,unint64_t a28)
{
  unint64_t v31;
  unint64_t v33;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v31 = a26;
  v33 = a22;
  v35 = a20;
  v36 = a18;
  if (a7)
    v37 = a6;
  else
    v37 = 0;
  v38 = 0xE000000000000000;
  if (a7)
    v38 = a7;
  v39 = 0x46464646464623;
  if (a18)
    v40 = a17;
  else
    v40 = 0x46464646464623;
  v41 = 0xE700000000000000;
  if (!a18)
    v36 = 0xE700000000000000;
  if (!a20)
  {
    a19 = 0x30303030303023;
    v35 = 0xE700000000000000;
  }
  if (!a22)
  {
    a21 = 0x46464646464623;
    v33 = 0xE700000000000000;
  }
  if (a24)
    v42 = a23;
  else
    v42 = 0x46464646464623;
  if (a24)
    v43 = a24;
  else
    v43 = 0xE700000000000000;
  if (!a26)
  {
    a25 = 0x46464646464623;
    v31 = 0xE700000000000000;
  }
  if (a28)
  {
    v39 = a27;
    v41 = a28;
  }
  if ((a16 & 1) != 0)
    a15 = 0;
  if ((a14 & 1) != 0)
    a13 = 0;
  if ((a12 & 1) != 0)
    a11 = 0.0;
  v45 = result[1];
  v46 = a8;
  if ((a10 & 1) != 0)
    v46 = 0;
  *(_OWORD *)a9 = *result;
  *(_OWORD *)(a9 + 16) = v45;
  v47 = *a2;
  v48 = a2[1];
  *(_OWORD *)(a9 + 32) = result[2];
  *(_OWORD *)(a9 + 48) = v47;
  v49 = a2[2];
  *(_OWORD *)(a9 + 64) = v48;
  *(_OWORD *)(a9 + 80) = v49;
  v50 = a3[1];
  *(_OWORD *)(a9 + 96) = *a3;
  *(_OWORD *)(a9 + 112) = v50;
  v51 = *a4;
  v52 = a4[1];
  *(_OWORD *)(a9 + 128) = a3[2];
  *(_OWORD *)(a9 + 144) = v51;
  v53 = a4[2];
  *(_OWORD *)(a9 + 160) = v52;
  *(_OWORD *)(a9 + 176) = v53;
  v54 = a5[1];
  *(_OWORD *)(a9 + 192) = *a5;
  *(_OWORD *)(a9 + 208) = v54;
  *(_QWORD *)(a9 + 224) = v37;
  *(_QWORD *)(a9 + 232) = v38;
  *(_QWORD *)(a9 + 240) = v46;
  *(double *)(a9 + 248) = a11;
  *(_QWORD *)(a9 + 256) = a13;
  *(_QWORD *)(a9 + 264) = a15;
  *(_QWORD *)(a9 + 272) = v40;
  *(_QWORD *)(a9 + 280) = v36;
  *(_QWORD *)(a9 + 288) = a19;
  *(_QWORD *)(a9 + 296) = v35;
  *(_QWORD *)(a9 + 304) = a21;
  *(_QWORD *)(a9 + 312) = v33;
  *(_QWORD *)(a9 + 320) = v42;
  *(_QWORD *)(a9 + 328) = v43;
  *(_QWORD *)(a9 + 336) = a25;
  *(_QWORD *)(a9 + 344) = v31;
  *(_QWORD *)(a9 + 352) = v39;
  *(_QWORD *)(a9 + 360) = v41;
  return result;
}

uint64_t sub_1ABE13564(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE1359C + 4 * byte_1ABF3F580[a1]))(0x616D496567646162, 0xEA00000000006567);
}

unint64_t sub_1ABE1359C()
{
  return 0xD000000000000013;
}

uint64_t sub_1ABE1367C()
{
  return 0x756F72676B636162;
}

void sub_1ABE136A0()
{
  JUMPOUT(0x1ABE136B4);
}

uint64_t sub_1ABE136C0()
{
  return 0x646165687473616DLL;
}

uint64_t sub_1ABE136E4()
{
  return 0x786554656772616CLL;
}

uint64_t sub_1ABE13718()
{
  return 0x655473726566666FLL;
}

uint64_t sub_1ABE1373C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE13774 + 4 * byte_1ABF3F590[a1]))(0x616D496567646162, 0xEA00000000006567);
}

unint64_t sub_1ABE13774()
{
  return 0xD000000000000013;
}

uint64_t sub_1ABE13854()
{
  return 0x756F72676B636162;
}

void sub_1ABE13878()
{
  JUMPOUT(0x1ABE1388CLL);
}

uint64_t sub_1ABE13898()
{
  return 0x646165687473616DLL;
}

uint64_t sub_1ABE138BC()
{
  return 0x786554656772616CLL;
}

uint64_t sub_1ABE138F0()
{
  return 0x655473726566666FLL;
}

uint64_t sub_1ABE13914(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1ABE13564(*a1);
  v5 = v4;
  if (v3 == sub_1ABE13564(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1ABE1399C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABE13564(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE139FC()
{
  unsigned __int8 *v0;

  sub_1ABE13564(*v0);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE13A3C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1ABF32308();
  sub_1ABE13564(v1);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE13A98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE17550();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE13AC4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABE13564(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE13AEC()
{
  unsigned __int8 *v0;

  return sub_1ABE1373C(*v0);
}

uint64_t sub_1ABE13AF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE17550();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE13B18()
{
  sub_1ABE154FC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE13B40()
{
  sub_1ABE154FC();
  return sub_1ABF32398();
}

uint64_t sub_1ABE13B68@<X0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  double v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  double v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  char *v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  char *v76;
  unint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  char *v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  char *v84;
  unint64_t v85;
  int64_t v86;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  double v104;
  double v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  double *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  double v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  double v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  int v146;
  double v147;
  int v148;
  int v149;
  int v150;
  double v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  double v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  double v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  double v175;
  uint64_t v176;
  double *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  double v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  double v190;
  char v191;
  _QWORD *v192;

  sub_1ABE166BC(0, &qword_1ED34FE68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v132 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE154FC();
  sub_1ABF3235C();
  if (!v2)
  {
    v192 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v191 = 0;
    sub_1ABE15540();
    sub_1ABF320C8();
    v177 = a2;
    v178 = v185;
    v10 = v189;
    v180 = v187;
    v181 = v188;
    v11 = *(_QWORD *)&v190;
    v179 = v186;
    if (v186)
    {
      v182 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v176 = v7;
      v12 = v189;
      swift_beginAccess();
      v182 = v192;
      v13 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v15 = v182[2];
      v14 = v182[3];
      if (v15 >= v14 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v14 > 1), v15 + 1, 1, v182);
      v16 = v182;
      v182[2] = v15 + 1;
      v17 = &v16[2 * v15];
      v17[4] = 0x616D496567646162;
      v17[5] = 0xEA00000000006567;
      v192 = v16;
      swift_endAccess();
      v11 = v13;
      v10 = v12;
      v7 = v176;
    }
    v191 = 1;
    sub_1ABF320C8();
    v170 = v185;
    v172 = v187;
    v173 = v188;
    v174 = v189;
    v175 = v190;
    v171 = v186;
    if (!v186)
    {
      swift_beginAccess();
      v182 = v192;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v169 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v20 = v182[2];
      v19 = v182[3];
      if (v20 >= v19 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v19 > 1), v20 + 1, 1, v182);
      v21 = v182;
      v182[2] = v20 + 1;
      v22 = &v21[2 * v20];
      v22[4] = 0xD000000000000013;
      v22[5] = 0x80000001ABF53970;
      v192 = v21;
      swift_endAccess();
      v11 = v169;
    }
    v191 = 2;
    sub_1ABF320C8();
    v163 = v185;
    v165 = v187;
    v166 = v188;
    v167 = v189;
    v168 = v190;
    v164 = v186;
    if (!v186)
    {
      v176 = v7;
      v23 = v10;
      swift_beginAccess();
      v182 = v192;
      v24 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v26 = v182[2];
      v25 = v182[3];
      if (v26 >= v25 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v25 > 1), v26 + 1, 1, v182);
      v27 = v182;
      v182[2] = v26 + 1;
      v28 = &v27[2 * v26];
      v28[4] = 0x6567616D69;
      v28[5] = 0xE500000000000000;
      v192 = v27;
      swift_endAccess();
      v11 = v24;
      v10 = v23;
      v7 = v176;
    }
    v191 = 3;
    sub_1ABF320C8();
    v159 = v185;
    v161 = v187;
    v162 = v188;
    v29 = v190;
    v176 = v189;
    v160 = v186;
    if (!v186)
    {
      v158 = v190;
      swift_beginAccess();
      v182 = v192;
      v30 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v32 = v182[2];
      v31 = v182[3];
      if (v32 >= v31 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v31 > 1), v32 + 1, 1, v182);
      v33 = v182;
      v182[2] = v32 + 1;
      v34 = (char *)&v33[2 * v32];
      strcpy(v34 + 32, "alternateImage");
      v34[47] = -18;
      v192 = v33;
      swift_endAccess();
      v11 = v30;
      v29 = v158;
    }
    v191 = 4;
    sub_1ABE15C34();
    sub_1ABF320C8();
    v154 = v185;
    v156 = v187;
    v157 = v188;
    v155 = v186;
    if (!v186)
    {
      v158 = v29;
      swift_beginAccess();
      v182 = v192;
      v35 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v37 = v182[2];
      v36 = v182[3];
      if (v37 >= v36 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v36 > 1), v37 + 1, 1, v182);
      v38 = v182;
      v182[2] = v37 + 1;
      v39 = &v38[2 * v37];
      v39[4] = 0x6F65646976;
      v39[5] = 0xE500000000000000;
      v192 = v38;
      swift_endAccess();
      v11 = v35;
      v29 = v158;
    }
    v191 = 5;
    sub_1ABF320C8();
    v152 = *(_QWORD *)&v183;
    v153 = v184;
    if (!v184)
    {
      v158 = v29;
      swift_beginAccess();
      v182 = v192;
      v40 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v42 = v182[2];
      v41 = v182[3];
      if (v42 >= v41 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v41 > 1), v42 + 1, 1, v182);
      v43 = v182;
      v182[2] = v42 + 1;
      v44 = &v43[2 * v42];
      v44[4] = 0x4C52556F65646976;
      v44[5] = 0xE800000000000000;
      v192 = v43;
      swift_endAccess();
      v11 = v40;
      v29 = v158;
    }
    v191 = 6;
    sub_1ABF320C8();
    v151 = v183;
    v150 = v184;
    if ((v184 & 1) != 0)
    {
      v158 = v29;
      swift_beginAccess();
      v182 = v192;
      v45 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v47 = v182[2];
      v46 = v182[3];
      if (v47 >= v46 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v46 > 1), v47 + 1, 1, v182);
      v48 = v182;
      v182[2] = v47 + 1;
      v49 = &v48[2 * v47];
      v49[4] = 0x6469576F65646976;
      v49[5] = 0xEA00000000006874;
      v192 = v48;
      swift_endAccess();
      v11 = v45;
      v29 = v158;
    }
    v191 = 7;
    sub_1ABF320C8();
    v50 = v183;
    v149 = v184;
    if ((v184 & 1) != 0)
    {
      v158 = v29;
      v51 = v11;
      swift_beginAccess();
      v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v53 = v182[2];
      v52 = v182[3];
      if (v53 >= v52 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v52 > 1), v53 + 1, 1, v182);
      v54 = v182;
      v182[2] = v53 + 1;
      v55 = &v54[2 * v53];
      v55[4] = 0xD000000000000015;
      v55[5] = 0x80000001ABF539C0;
      v192 = v54;
      swift_endAccess();
      v11 = v51;
      v29 = v158;
    }
    v191 = 8;
    sub_1ABF320C8();
    v169 = v11;
    v158 = v183;
    v148 = v184;
    if ((v184 & 1) != 0)
    {
      swift_beginAccess();
      v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v58 = v182[2];
      v57 = v182[3];
      if (v58 >= v57 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v57 > 1), v58 + 1, 1, v182);
      v59 = v182;
      v182[2] = v58 + 1;
      v60 = (char *)&v59[2 * v58];
      strcpy(v60 + 32, "textTopPadding");
      v60[47] = -18;
      v192 = v59;
      swift_endAccess();
    }
    v191 = 9;
    sub_1ABF320C8();
    v147 = v183;
    v146 = v184;
    if ((v184 & 1) != 0)
    {
      swift_beginAccess();
      v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v62 = v182[2];
      v61 = v182[3];
      if (v62 >= v61 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v61 > 1), v62 + 1, 1, v182);
      v63 = v182;
      v182[2] = v62 + 1;
      v64 = &v63[2 * v62];
      v64[4] = 0xD000000000000013;
      v64[5] = 0x80000001ABF539F0;
      v192 = v63;
      swift_endAccess();
    }
    v191 = 10;
    sub_1ABF320C8();
    v144 = *(_QWORD *)&v183;
    v145 = v184;
    if (!v184)
    {
      swift_beginAccess();
      v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v66 = v182[2];
      v65 = v182[3];
      if (v66 >= v65 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v65 > 1), v66 + 1, 1, v182);
      v67 = v182;
      v182[2] = v66 + 1;
      v68 = &v67[2 * v66];
      v68[4] = 0x756F72676B636162;
      v68[5] = 0xEF726F6C6F43646ELL;
      v192 = v67;
      swift_endAccess();
    }
    v191 = 11;
    sub_1ABF320C8();
    v142 = *(_QWORD *)&v183;
    v143 = v184;
    if (!v184)
    {
      swift_beginAccess();
      v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v70 = v182[2];
      v69 = v182[3];
      if (v70 >= v69 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v69 > 1), v70 + 1, 1, v182);
      v71 = v182;
      v182[2] = v70 + 1;
      v72 = &v71[2 * v70];
      v72[4] = 0xD000000000000018;
      v72[5] = 0x80000001ABF53A20;
      v192 = v71;
      swift_endAccess();
    }
    v191 = 12;
    sub_1ABF320C8();
    v140 = *(_QWORD *)&v183;
    v141 = v184;
    if (!v184)
    {
      swift_beginAccess();
      v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v74 = v182[2];
      v73 = v182[3];
      if (v74 >= v73 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v73 > 1), v74 + 1, 1, v182);
      v75 = v182;
      v182[2] = v74 + 1;
      v76 = (char *)&v75[2 * v74];
      strcpy(v76 + 32, "mastheadColor");
      *((_WORD *)v76 + 23) = -4864;
      v192 = v75;
      swift_endAccess();
    }
    v191 = 13;
    sub_1ABF320C8();
    v138 = *(_QWORD *)&v183;
    v139 = v184;
    if (!v184)
    {
      swift_beginAccess();
      v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v78 = v182[2];
      v77 = v182[3];
      if (v78 >= v77 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v77 > 1), v78 + 1, 1, v182);
      v79 = v182;
      v182[2] = v78 + 1;
      v80 = (char *)&v79[2 * v78];
      strcpy(v80 + 32, "largeTextColor");
      v80[47] = -18;
      v192 = v79;
      swift_endAccess();
    }
    v191 = 14;
    sub_1ABF320C8();
    v136 = *(_QWORD *)&v183;
    v137 = v184;
    if (!v184)
    {
      swift_beginAccess();
      v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v82 = v182[2];
      v81 = v182[3];
      if (v82 >= v81 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v81 > 1), v82 + 1, 1, v182);
      v83 = v182;
      v182[2] = v82 + 1;
      v84 = (char *)&v83[2 * v82];
      strcpy(v84 + 32, "smallTextColor");
      v84[47] = -18;
      v192 = v83;
      swift_endAccess();
    }
    v191 = 15;
    sub_1ABF320C8();
    v85 = v184;
    if (v184)
    {
      v86 = *(_QWORD *)&v183;
    }
    else
    {
      swift_beginAccess();
      v182 = v192;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v182 = sub_1ABD12054(0, v182[2] + 1, 1, v182);
      v88 = v182[2];
      v87 = v182[3];
      v135 = v88 + 1;
      if (v88 >= v87 >> 1)
        v182 = sub_1ABD12054((_QWORD *)(v87 > 1), v135, 1, v182);
      v89 = v182;
      v182[2] = v135;
      v90 = &v89[2 * v88];
      v90[4] = 0x655473726566666FLL;
      v90[5] = 0xEF726F6C6F437478;
      v192 = v89;
      swift_endAccess();
      v86 = 0x46464646464623;
    }
    v135 = v86;
    v91 = v152;
    if (!v153)
      v91 = 0;
    v134 = v91;
    v92 = 0xE000000000000000;
    if (v153)
      v92 = v153;
    v133 = v92;
    v93 = v145;
    v94 = v144;
    if (!v145)
      v94 = 0x46464646464623;
    v153 = v94;
    v95 = 0xE700000000000000;
    if (!v145)
      v93 = 0xE700000000000000;
    v152 = v93;
    v96 = 0x30303030303023;
    if (v143)
      v96 = v142;
    v145 = v96;
    if (v143)
      v97 = v143;
    else
      v97 = 0xE700000000000000;
    v144 = v97;
    v98 = v141;
    v99 = v140;
    if (!v141)
      v99 = 0x46464646464623;
    v143 = v99;
    if (!v141)
      v98 = 0xE700000000000000;
    v142 = v98;
    v100 = v139;
    v101 = v138;
    if (!v139)
      v101 = 0x46464646464623;
    v141 = v101;
    if (!v139)
      v100 = 0xE700000000000000;
    v140 = v100;
    v102 = v137;
    v103 = v136;
    if (!v137)
      v103 = 0x46464646464623;
    v139 = v103;
    if (!v137)
      v102 = 0xE700000000000000;
    v138 = v102;
    if (v85)
      v95 = v85;
    v137 = v95;
    v104 = v147;
    if (v146)
      v104 = 0.0;
    v147 = v104;
    v105 = v158;
    if (v148)
      v105 = 0.0;
    v158 = v105;
    if (v149)
      v50 = 0.0;
    v106 = v151;
    if (v150)
      v106 = 0.0;
    v151 = v106;
    if (v182[2])
    {
      sub_1ABD0F55C();
      v107 = swift_allocObject();
      *(_OWORD *)(v107 + 16) = xmmword_1ABF366C0;
      sub_1ABD165AC();
      *(_QWORD *)(v107 + 56) = v108;
      *(_QWORD *)(v107 + 64) = sub_1ABD82448();
      *(_QWORD *)(v107 + 32) = v182;
      sub_1ABD19560();
      sub_1ABF2FF5C();
      v109 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD19560();
      v109 = (void *)sub_1ABF31D44();
      sub_1ABF31BF4();
      sub_1ABF31318();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    v110 = v177;
    v111 = v179;
    *(_QWORD *)v177 = v178;
    *((_QWORD *)v110 + 1) = v111;
    v112 = v181;
    *((_QWORD *)v110 + 2) = v180;
    *((_QWORD *)v110 + 3) = v112;
    v113 = v169;
    *((_QWORD *)v110 + 4) = v10;
    *((_QWORD *)v110 + 5) = v113;
    v114 = v171;
    *((_QWORD *)v110 + 6) = v170;
    *((_QWORD *)v110 + 7) = v114;
    v115 = v173;
    *((_QWORD *)v110 + 8) = v172;
    *((_QWORD *)v110 + 9) = v115;
    v116 = v175;
    *((_QWORD *)v110 + 10) = v174;
    v110[11] = v116;
    v117 = v164;
    *((_QWORD *)v110 + 12) = v163;
    *((_QWORD *)v110 + 13) = v117;
    v118 = v166;
    *((_QWORD *)v110 + 14) = v165;
    *((_QWORD *)v110 + 15) = v118;
    v119 = v168;
    *((_QWORD *)v110 + 16) = v167;
    v110[17] = v119;
    v120 = v160;
    *((_QWORD *)v110 + 18) = v159;
    *((_QWORD *)v110 + 19) = v120;
    v121 = v162;
    *((_QWORD *)v110 + 20) = v161;
    *((_QWORD *)v110 + 21) = v121;
    *((_QWORD *)v110 + 22) = v176;
    v110[23] = v29;
    v122 = v155;
    *((_QWORD *)v110 + 24) = v154;
    *((_QWORD *)v110 + 25) = v122;
    v123 = v157;
    *((_QWORD *)v110 + 26) = v156;
    *((_QWORD *)v110 + 27) = v123;
    v124 = v133;
    *((_QWORD *)v110 + 28) = v134;
    *((_QWORD *)v110 + 29) = v124;
    v110[30] = v151;
    v110[31] = v50;
    v125 = v147;
    v110[32] = v158;
    v110[33] = v125;
    v126 = v152;
    *((_QWORD *)v110 + 34) = v153;
    *((_QWORD *)v110 + 35) = v126;
    v127 = v144;
    *((_QWORD *)v110 + 36) = v145;
    *((_QWORD *)v110 + 37) = v127;
    v128 = v142;
    *((_QWORD *)v110 + 38) = v143;
    *((_QWORD *)v110 + 39) = v128;
    v129 = v140;
    *((_QWORD *)v110 + 40) = v141;
    *((_QWORD *)v110 + 41) = v129;
    v130 = v138;
    *((_QWORD *)v110 + 42) = v139;
    *((_QWORD *)v110 + 43) = v130;
    v131 = v137;
    *((_QWORD *)v110 + 44) = v135;
    *((_QWORD *)v110 + 45) = v131;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1ABE154FC()
{
  unint64_t result;

  result = qword_1ED34F080;
  if (!qword_1ED34F080)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F740, &type metadata for PaywallVisualSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F080);
  }
  return result;
}

unint64_t sub_1ABE15540()
{
  unint64_t result;

  result = qword_1ED34F2C8;
  if (!qword_1ED34F2C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A1DC, &type metadata for MultiResolutionImage);
    atomic_store(result, (unint64_t *)&qword_1ED34F2C8);
  }
  return result;
}

uint64_t sub_1ABE15588(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[18];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;

  sub_1ABE166BC(0, &qword_1ED34FF20, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v22 - v6;
  v8 = *v1;
  v41 = v1[1];
  v42 = v8;
  v10 = *((_QWORD *)v1 + 4);
  v9 = *((_QWORD *)v1 + 5);
  v11 = *((_QWORD *)v1 + 6);
  v39 = *((_QWORD *)v1 + 7);
  v40 = v11;
  v12 = *((_QWORD *)v1 + 8);
  v37 = *((_QWORD *)v1 + 9);
  v38 = v12;
  v13 = *((_QWORD *)v1 + 10);
  v35 = *((_QWORD *)v1 + 11);
  v36 = v13;
  v14 = *((_QWORD *)v1 + 12);
  v33 = *((_QWORD *)v1 + 13);
  v34 = v14;
  v32 = *((_QWORD *)v1 + 14);
  v31 = *((_QWORD *)v1 + 15);
  v30 = *((_QWORD *)v1 + 16);
  v29 = *((_QWORD *)v1 + 17);
  v25 = v1[9];
  v26 = v1[10];
  v28 = *((_QWORD *)v1 + 22);
  v27 = *((_QWORD *)v1 + 23);
  v23 = v1[12];
  v24 = v1[13];
  v22[16] = *((_QWORD *)v1 + 28);
  v22[17] = *((_QWORD *)v1 + 29);
  v22[15] = *((_QWORD *)v1 + 30);
  v22[14] = *((_QWORD *)v1 + 32);
  v22[13] = *((_QWORD *)v1 + 33);
  v22[12] = *((_QWORD *)v1 + 34);
  v22[11] = *((_QWORD *)v1 + 35);
  v22[10] = *((_QWORD *)v1 + 36);
  v22[9] = *((_QWORD *)v1 + 37);
  v22[8] = *((_QWORD *)v1 + 38);
  v22[7] = *((_QWORD *)v1 + 39);
  v22[6] = *((_QWORD *)v1 + 40);
  v22[5] = *((_QWORD *)v1 + 41);
  v22[3] = *((_QWORD *)v1 + 42);
  v22[4] = *((_QWORD *)v1 + 43);
  v22[2] = *((_QWORD *)v1 + 44);
  v22[1] = *((_QWORD *)v1 + 45);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE154FC();
  sub_1ABF32368();
  v45 = v42;
  v46 = v41;
  v47 = v10;
  v48 = v9;
  v15 = v7;
  v44 = 0;
  sub_1ABE16718();
  v16 = v43;
  sub_1ABF3217C();
  if (v16)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v17 = v31;
  v18 = v32;
  v19 = v33;
  v20 = v34;
  *(_QWORD *)&v45 = v40;
  *((_QWORD *)&v45 + 1) = v39;
  *(_QWORD *)&v46 = v38;
  *((_QWORD *)&v46 + 1) = v37;
  v47 = v36;
  v48 = v35;
  v44 = 1;
  sub_1ABF3217C();
  *(_QWORD *)&v45 = v20;
  *((_QWORD *)&v45 + 1) = v19;
  *(_QWORD *)&v46 = v18;
  *((_QWORD *)&v46 + 1) = v17;
  v47 = v30;
  v48 = v29;
  v44 = 2;
  sub_1ABF3217C();
  v45 = v25;
  v46 = v26;
  v47 = v28;
  v48 = v27;
  v44 = 3;
  sub_1ABF3217C();
  v45 = v23;
  v46 = v24;
  v44 = 4;
  sub_1ABE1675C();
  sub_1ABF3217C();
  LOBYTE(v45) = 5;
  sub_1ABF32194();
  LOBYTE(v45) = 6;
  sub_1ABF321B8();
  LOBYTE(v45) = 7;
  sub_1ABF321AC();
  LOBYTE(v45) = 8;
  sub_1ABF321B8();
  LOBYTE(v45) = 9;
  sub_1ABF321B8();
  LOBYTE(v45) = 10;
  sub_1ABF32194();
  LOBYTE(v45) = 11;
  sub_1ABF32194();
  LOBYTE(v45) = 12;
  sub_1ABF32194();
  LOBYTE(v45) = 13;
  sub_1ABF32194();
  LOBYTE(v45) = 14;
  sub_1ABF32194();
  LOBYTE(v45) = 15;
  sub_1ABF32194();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v15, v4);
}

uint64_t sub_1ABE15C08@<X0>(_QWORD *a1@<X0>, double *a2@<X8>)
{
  return sub_1ABE13B68(a1, a2);
}

uint64_t sub_1ABE15C1C(_QWORD *a1)
{
  return sub_1ABE15588(a1);
}

unint64_t sub_1ABE15C34()
{
  unint64_t result;

  result = qword_1ED34ED80;
  if (!qword_1ED34ED80)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for MultiSizeVideo, &type metadata for MultiSizeVideo);
    atomic_store(result, (unint64_t *)&qword_1ED34ED80);
  }
  return result;
}

uint64_t sub_1ABE15C78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v136 = *(_QWORD *)(a1 + 32);
  v137 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 56);
  v134 = *(_QWORD *)(a1 + 48);
  v135 = *(_QWORD *)(a1 + 72);
  v129 = *(_QWORD *)(a1 + 80);
  v132 = *(_QWORD *)(a1 + 64);
  v133 = *(_QWORD *)(a1 + 88);
  v126 = *(_QWORD *)(a1 + 104);
  v120 = *(_QWORD *)(a1 + 112);
  v123 = *(_QWORD *)(a1 + 96);
  v124 = *(_QWORD *)(a1 + 120);
  v117 = *(_QWORD *)(a1 + 128);
  v121 = *(_QWORD *)(a1 + 136);
  v114 = *(_QWORD *)(a1 + 152);
  v111 = *(_QWORD *)(a1 + 144);
  v112 = *(_QWORD *)(a1 + 168);
  v105 = *(_QWORD *)(a1 + 176);
  v108 = *(_QWORD *)(a1 + 160);
  v109 = *(_QWORD *)(a1 + 184);
  v102 = *(_QWORD *)(a1 + 200);
  v97 = *(_QWORD *)(a1 + 208);
  v99 = *(_QWORD *)(a1 + 192);
  v100 = *(_QWORD *)(a1 + 216);
  v7 = *(double *)(a1 + 248);
  v93 = *(_QWORD *)(a1 + 224);
  v94 = *(_QWORD *)(a1 + 232);
  v90 = *(_QWORD *)(a1 + 240);
  v88 = *(_QWORD *)(a1 + 256);
  v85 = *(_QWORD *)(a1 + 264);
  v86 = *(_QWORD *)(a1 + 272);
  v82 = *(_QWORD *)(a1 + 280);
  v80 = *(_QWORD *)(a1 + 288);
  v77 = *(_QWORD *)(a1 + 304);
  v78 = *(_QWORD *)(a1 + 296);
  v75 = *(_QWORD *)(a1 + 320);
  v76 = *(_QWORD *)(a1 + 312);
  v73 = *(_QWORD *)(a1 + 336);
  v74 = *(_QWORD *)(a1 + 328);
  v72 = *(_QWORD *)(a1 + 344);
  v8 = *(double *)(a2 + 248);
  v9 = *(_QWORD *)a2;
  v10 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v16 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v130 = *(_QWORD *)(a2 + 72);
  v131 = *(_QWORD *)(a2 + 64);
  v127 = *(_QWORD *)(a2 + 88);
  v128 = *(_QWORD *)(a2 + 80);
  v122 = *(_QWORD *)(a2 + 96);
  v125 = *(_QWORD *)(a2 + 104);
  v119 = *(_QWORD *)(a2 + 112);
  v118 = *(_QWORD *)(a2 + 120);
  v115 = *(_QWORD *)(a2 + 136);
  v116 = *(_QWORD *)(a2 + 128);
  v110 = *(_QWORD *)(a2 + 144);
  v113 = *(_QWORD *)(a2 + 152);
  v106 = *(_QWORD *)(a2 + 168);
  v107 = *(_QWORD *)(a2 + 160);
  v103 = *(_QWORD *)(a2 + 184);
  v104 = *(_QWORD *)(a2 + 176);
  v98 = *(_QWORD *)(a2 + 192);
  v101 = *(_QWORD *)(a2 + 200);
  v95 = *(_QWORD *)(a2 + 216);
  v96 = *(_QWORD *)(a2 + 208);
  v91 = *(_QWORD *)(a2 + 224);
  v92 = *(_QWORD *)(a2 + 232);
  v89 = *(_QWORD *)(a2 + 240);
  v87 = *(_QWORD *)(a2 + 256);
  v83 = *(_QWORD *)(a2 + 264);
  v84 = *(_QWORD *)(a2 + 272);
  v81 = *(_QWORD *)(a2 + 280);
  v79 = *(_QWORD *)(a2 + 288);
  if (!v3)
  {
    v70 = *(_QWORD *)(a2 + 304);
    v71 = *(_QWORD *)(a2 + 296);
    v68 = *(_QWORD *)(a2 + 320);
    v69 = *(_QWORD *)(a2 + 312);
    v66 = *(_QWORD *)(a2 + 336);
    v67 = *(_QWORD *)(a2 + 328);
    v64 = *(_QWORD *)(a2 + 352);
    v65 = *(_QWORD *)(a2 + 344);
    v62 = *(_QWORD *)(a2 + 360);
    v63 = *(_QWORD *)(a1 + 360);
    v61 = *(_QWORD *)(a1 + 352);
    if (!v10)
      goto LABEL_14;
LABEL_27:
    sub_1ABD887B8(v9, v10);
    sub_1ABD0E2CC(v2, v3);
    v36 = v9;
    v37 = v10;
LABEL_71:
    sub_1ABD0E2CC(v36, v37);
    return 0;
  }
  if (!v10)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    goto LABEL_27;
  }
  v70 = *(_QWORD *)(a2 + 304);
  v71 = *(_QWORD *)(a2 + 296);
  v68 = *(_QWORD *)(a2 + 320);
  v69 = *(_QWORD *)(a2 + 312);
  v66 = *(_QWORD *)(a2 + 336);
  v67 = *(_QWORD *)(a2 + 328);
  v64 = *(_QWORD *)(a2 + 352);
  v65 = *(_QWORD *)(a2 + 344);
  v62 = *(_QWORD *)(a2 + 360);
  v63 = *(_QWORD *)(a1 + 360);
  v61 = *(_QWORD *)(a1 + 352);
  if (v2 != v9 || v3 != v10)
  {
    v17 = *(_QWORD *)(a1 + 56);
    v18 = *(_QWORD *)(a2 + 56);
    v19 = *(_QWORD *)(a2 + 48);
    v20 = sub_1ABF3223C();
    v16 = v19;
    v15 = v18;
    v6 = v17;
    v21 = v20;
    result = 0;
    if ((v21 & 1) == 0)
      return result;
  }
  if (v5 != v12 || v4 != v11)
  {
    v23 = v6;
    v24 = v15;
    v25 = v16;
    v26 = sub_1ABF3223C();
    v16 = v25;
    v15 = v24;
    v6 = v23;
    v27 = v26;
    result = 0;
    if ((v27 & 1) == 0)
      return result;
  }
  if (v136 != v14 || v137 != v13)
  {
    v28 = v6;
    v29 = v15;
    v30 = v16;
    v31 = sub_1ABF3223C();
    v16 = v30;
    v15 = v29;
    v6 = v28;
    v32 = v31;
    result = 0;
    if ((v32 & 1) == 0)
      return result;
  }
LABEL_14:
  if (!v6)
  {
    if (!v15)
      goto LABEL_29;
    goto LABEL_42;
  }
  if (!v15)
  {
    v41 = v6;
    v42 = v16;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v16 = v42;
    v15 = 0;
    v6 = v41;
LABEL_42:
    v43 = v6;
    v44 = v15;
    v45 = v16;
    sub_1ABD887B8(v16, v15);
    sub_1ABD0E2CC(v134, v43);
    v36 = v45;
    v37 = v44;
    goto LABEL_71;
  }
  if (v134 != v16 || v6 != v15)
  {
    v33 = sub_1ABF3223C();
    result = 0;
    if ((v33 & 1) == 0)
      return result;
  }
  if (v132 != v131 || v135 != v130)
  {
    v34 = sub_1ABF3223C();
    result = 0;
    if ((v34 & 1) == 0)
      return result;
  }
  if (v129 != v128 || v133 != v127)
  {
    v35 = sub_1ABF3223C();
    result = 0;
    if ((v35 & 1) == 0)
      return result;
  }
LABEL_29:
  if (!v126)
  {
    if (!v125)
      goto LABEL_44;
LABEL_57:
    v49 = v122;
    v50 = v125;
    sub_1ABD887B8(v122, v125);
    v51 = v123;
    v52 = v126;
LABEL_70:
    sub_1ABD0E2CC(v51, v52);
    v36 = v49;
    v37 = v50;
    goto LABEL_71;
  }
  if (!v125)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    goto LABEL_57;
  }
  if (v123 != v122 || v126 != v125)
  {
    v38 = sub_1ABF3223C();
    result = 0;
    if ((v38 & 1) == 0)
      return result;
  }
  if (v120 != v119 || v124 != v118)
  {
    v39 = sub_1ABF3223C();
    result = 0;
    if ((v39 & 1) == 0)
      return result;
  }
  if (v117 != v116 || v121 != v115)
  {
    v40 = sub_1ABF3223C();
    result = 0;
    if ((v40 & 1) == 0)
      return result;
  }
LABEL_44:
  if (!v114)
  {
    if (!v113)
      goto LABEL_59;
    goto LABEL_69;
  }
  if (!v113)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
LABEL_69:
    v49 = v110;
    v50 = v113;
    sub_1ABD887B8(v110, v113);
    v51 = v111;
    v52 = v114;
    goto LABEL_70;
  }
  if (v111 != v110 || v114 != v113)
  {
    v46 = sub_1ABF3223C();
    result = 0;
    if ((v46 & 1) == 0)
      return result;
  }
  if (v108 != v107 || v112 != v106)
  {
    v47 = sub_1ABF3223C();
    result = 0;
    if ((v47 & 1) == 0)
      return result;
  }
  if (v105 != v104 || v109 != v103)
  {
    v48 = sub_1ABF3223C();
    result = 0;
    if ((v48 & 1) == 0)
      return result;
  }
LABEL_59:
  if (v102)
  {
    if (v101)
    {
      if (v99 != v98 || v102 != v101)
      {
        v53 = sub_1ABF3223C();
        result = 0;
        if ((v53 & 1) == 0)
          return result;
      }
      if (v97 != v96 || v100 != v95)
      {
        v54 = sub_1ABF3223C();
        result = 0;
        if ((v54 & 1) == 0)
          return result;
      }
      goto LABEL_75;
    }
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    goto LABEL_79;
  }
  if (v101)
  {
LABEL_79:
    sub_1ABD887F4(v98, v101);
    sub_1ABD86184(v99, v102);
    sub_1ABD86184(v98, v101);
    return 0;
  }
LABEL_75:
  if (v93 == v91 && v94 == v92)
  {
    result = 0;
  }
  else
  {
    v55 = sub_1ABF3223C();
    result = 0;
    if ((v55 & 1) == 0)
      return result;
  }
  if (v90 == v89 && v7 == v8 && v88 == v87 && v85 == v83)
  {
    if (v86 == v84 && v82 == v81 || (v56 = sub_1ABF3223C(), result = 0, (v56 & 1) != 0))
    {
      if (v80 == v79 && v78 == v71 || (v57 = sub_1ABF3223C(), result = 0, (v57 & 1) != 0))
      {
        if (v77 == v70 && v76 == v69 || (v58 = sub_1ABF3223C(), result = 0, (v58 & 1) != 0))
        {
          if (v75 == v68 && v74 == v67 || (v59 = sub_1ABF3223C(), result = 0, (v59 & 1) != 0))
          {
            if (v73 == v66 && v72 == v65 || (v60 = sub_1ABF3223C(), result = 0, (v60 & 1) != 0))
            {
              if (v61 == v64 && v63 == v62)
                return 1;
              else
                return sub_1ABF3223C();
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1ABE166BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE154FC();
    v7 = a3(a1, &type metadata for PaywallVisualSpec.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1ABE16718()
{
  unint64_t result;

  result = qword_1ED34F2C0;
  if (!qword_1ED34F2C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3A204, &type metadata for MultiResolutionImage);
    atomic_store(result, (unint64_t *)&qword_1ED34F2C0);
  }
  return result;
}

unint64_t sub_1ABE1675C()
{
  unint64_t result;

  result = qword_1ED34E938;
  if (!qword_1ED34E938)
  {
    result = MEMORY[0x1AF438F30](&protocol conformance descriptor for MultiSizeVideo, &type metadata for MultiSizeVideo);
    atomic_store(result, (unint64_t *)&qword_1ED34E938);
  }
  return result;
}

uint64_t destroy for PaywallVisualSpec(_QWORD *a1)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[13])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[19])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[25])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaywallVisualSpec(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v7 = *(_QWORD *)(a2 + 56);
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v18;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 56);
    if (v7)
    {
LABEL_3:
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      v9 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v9;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      v10 = *(_QWORD *)(a2 + 104);
      if (v10)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  v19 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v19;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 104);
  if (v10)
  {
LABEL_4:
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v10;
    v11 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v11;
    v12 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v12;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    v13 = *(_QWORD *)(a2 + 152);
    if (v13)
      goto LABEL_5;
LABEL_10:
    v21 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v21;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    v16 = *(_QWORD *)(a2 + 200);
    if (v16)
      goto LABEL_6;
LABEL_11:
    v22 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v22;
    goto LABEL_12;
  }
LABEL_9:
  v20 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v20;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  v13 = *(_QWORD *)(a2 + 152);
  if (!v13)
    goto LABEL_10;
LABEL_5:
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v13;
  v14 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v14;
  v15 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v15;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  v16 = *(_QWORD *)(a2 + 200);
  if (!v16)
    goto LABEL_11;
LABEL_6:
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v16;
  v17 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v17;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
LABEL_12:
  v23 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v23;
  v24 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v24;
  v25 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v25;
  v26 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v26;
  v27 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v27;
  v28 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v28;
  v29 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v29;
  v30 = *(_QWORD *)(a2 + 352);
  v31 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = v30;
  *(_QWORD *)(a1 + 360) = v31;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for PaywallVisualSpec(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD *v30;
  _OWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;

  v4 = a2[1];
  if (a1[1])
  {
    if (v4)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      a1[3] = a2[3];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      a1[5] = a2[5];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87AE8((uint64_t)a1);
      v6 = *((_OWORD *)a2 + 1);
      v5 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v6;
      *((_OWORD *)a1 + 2) = v5;
    }
  }
  else if (v4)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v7 = *(_OWORD *)a2;
    v8 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v8;
    *(_OWORD *)a1 = v7;
  }
  v9 = a1 + 6;
  v10 = a2 + 6;
  v11 = a2[7];
  if (a1[7])
  {
    if (v11)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      a1[9] = a2[9];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[10] = a2[10];
      a1[11] = a2[11];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87AE8((uint64_t)(a1 + 6));
      v13 = *((_OWORD *)a2 + 4);
      v12 = *((_OWORD *)a2 + 5);
      *v9 = *v10;
      *((_OWORD *)a1 + 4) = v13;
      *((_OWORD *)a1 + 5) = v12;
    }
  }
  else if (v11)
  {
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    a1[10] = a2[10];
    a1[11] = a2[11];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v14 = *v10;
    v15 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v15;
    *v9 = v14;
  }
  v16 = a1 + 12;
  v17 = a2 + 12;
  v18 = a2[13];
  if (a1[13])
  {
    if (v18)
    {
      a1[12] = a2[12];
      a1[13] = a2[13];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[14] = a2[14];
      a1[15] = a2[15];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[16] = a2[16];
      a1[17] = a2[17];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87AE8((uint64_t)(a1 + 12));
      v20 = *((_OWORD *)a2 + 7);
      v19 = *((_OWORD *)a2 + 8);
      *v16 = *v17;
      *((_OWORD *)a1 + 7) = v20;
      *((_OWORD *)a1 + 8) = v19;
    }
  }
  else if (v18)
  {
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    a1[15] = a2[15];
    a1[16] = a2[16];
    a1[17] = a2[17];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v21 = *v17;
    v22 = *((_OWORD *)a2 + 8);
    *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
    *((_OWORD *)a1 + 8) = v22;
    *v16 = v21;
  }
  v23 = a1 + 18;
  v24 = a2 + 18;
  v25 = a2[19];
  if (a1[19])
  {
    if (v25)
    {
      a1[18] = a2[18];
      a1[19] = a2[19];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[20] = a2[20];
      a1[21] = a2[21];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[22] = a2[22];
      a1[23] = a2[23];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87AE8((uint64_t)(a1 + 18));
      v27 = *((_OWORD *)a2 + 10);
      v26 = *((_OWORD *)a2 + 11);
      *v23 = *v24;
      *((_OWORD *)a1 + 10) = v27;
      *((_OWORD *)a1 + 11) = v26;
    }
  }
  else if (v25)
  {
    a1[18] = a2[18];
    a1[19] = a2[19];
    a1[20] = a2[20];
    a1[21] = a2[21];
    a1[22] = a2[22];
    a1[23] = a2[23];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v28 = *v24;
    v29 = *((_OWORD *)a2 + 11);
    *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
    *((_OWORD *)a1 + 11) = v29;
    *v23 = v28;
  }
  v30 = a1 + 24;
  v31 = a2 + 24;
  v32 = a2[25];
  if (a1[25])
  {
    if (v32)
    {
      a1[24] = a2[24];
      a1[25] = a2[25];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      a1[26] = a2[26];
      a1[27] = a2[27];
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1ABD87B1C((uint64_t)(a1 + 24));
      v33 = *((_OWORD *)a2 + 13);
      *v30 = *v31;
      *((_OWORD *)a1 + 13) = v33;
    }
  }
  else if (v32)
  {
    a1[24] = a2[24];
    a1[25] = a2[25];
    a1[26] = a2[26];
    a1[27] = a2[27];
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    v34 = *((_OWORD *)a2 + 13);
    *v30 = *v31;
    *((_OWORD *)a1 + 13) = v34;
  }
  a1[28] = a2[28];
  a1[29] = a2[29];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  a1[32] = a2[32];
  a1[33] = a2[33];
  a1[34] = a2[34];
  a1[35] = a2[35];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[36] = a2[36];
  a1[37] = a2[37];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[38] = a2[38];
  a1[39] = a2[39];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[40] = a2[40];
  a1[41] = a2[41];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[42] = a2[42];
  a1[43] = a2[43];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[44] = a2[44];
  a1[45] = a2[45];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy368_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x170uLL);
}

uint64_t assignWithTake for PaywallVisualSpec(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (*(_QWORD *)(a1 + 8))
  {
    v4 = *(_QWORD *)(a2 + 8);
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1ABD87AE8(a1);
  }
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_6:
  if (*(_QWORD *)(a1 + 56))
  {
    v8 = *(_QWORD *)(a2 + 56);
    if (v8)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1ABD87AE8(a1 + 48);
  }
  v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
LABEL_11:
  if (*(_QWORD *)(a1 + 104))
  {
    v12 = *(_QWORD *)(a2 + 104);
    if (v12)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v12;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v13;
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1ABD87AE8(a1 + 96);
  }
  v15 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v15;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_16:
  if (*(_QWORD *)(a1 + 152))
  {
    v16 = *(_QWORD *)(a2 + 152);
    if (v16)
    {
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v17;
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v18;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1ABD87AE8(a1 + 144);
  }
  v19 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v19;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
LABEL_21:
  if (!*(_QWORD *)(a1 + 200))
  {
LABEL_25:
    v22 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v22;
    goto LABEL_26;
  }
  v20 = *(_QWORD *)(a2 + 200);
  if (!v20)
  {
    sub_1ABD87B1C(a1 + 192);
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v21;
  swift_bridgeObjectRelease();
LABEL_26:
  v23 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  v24 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v24;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v25;
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v26;
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v27;
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v28;
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PaywallVisualSpec(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 368))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 232);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaywallVisualSpec(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 360) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 368) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 232) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 368) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallVisualSpec()
{
  return &type metadata for PaywallVisualSpec;
}

uint64_t storeEnumTagSinglePayload for PaywallVisualSpec.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1ABE173F8 + 4 * byte_1ABF3F5A5[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1ABE1742C + 4 * byte_1ABF3F5A0[v4]))();
}

uint64_t sub_1ABE1742C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE17434(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE1743CLL);
  return result;
}

uint64_t sub_1ABE17448(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE17450);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1ABE17454(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE1745C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallVisualSpec.CodingKeys()
{
  return &type metadata for PaywallVisualSpec.CodingKeys;
}

unint64_t sub_1ABE1747C()
{
  unint64_t result;

  result = qword_1EEC43560;
  if (!qword_1EEC43560)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F718, &type metadata for PaywallVisualSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43560);
  }
  return result;
}

unint64_t sub_1ABE174C4()
{
  unint64_t result;

  result = qword_1ED34F090;
  if (!qword_1ED34F090)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F650, &type metadata for PaywallVisualSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F090);
  }
  return result;
}

unint64_t sub_1ABE1750C()
{
  unint64_t result;

  result = qword_1ED34F088;
  if (!qword_1ED34F088)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F678, &type metadata for PaywallVisualSpec.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F088);
  }
  return result;
}

uint64_t sub_1ABE17550()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10)
    return 16;
  else
    return v0;
}

uint64_t sub_1ABE17598()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE175C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE175F4()
{
  _BYTE *v0;

  if (*v0)
    return 0x74754179786F7270;
  else
    return 0x736F4879786F7270;
}

uint64_t sub_1ABE17640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE17D70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE17664()
{
  sub_1ABE17A6C();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE1768C()
{
  sub_1ABE17A6C();
  return sub_1ABF32398();
}

uint64_t sub_1ABE176B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  char v12;
  char v13;

  sub_1ABE17AB0(0, &qword_1ED34FF40, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v11[1] = *(_QWORD *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE17A6C();
  sub_1ABF32368();
  v13 = 0;
  v9 = v11[3];
  sub_1ABF32140();
  if (!v9)
  {
    v12 = 1;
    sub_1ABF32140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABE177E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  char v20;
  char v21;

  sub_1ABE17AB0(0, &qword_1ED34FE88, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE17A6C();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v21 = 0;
  v10 = sub_1ABF3208C();
  v12 = v11;
  v20 = 1;
  sub_1ABF2FF5C();
  v13 = sub_1ABF3208C();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v17;
  a2[3] = v15;
  sub_1ABF2FF5C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE17990@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1ABE177E8(a1, a2);
}

uint64_t sub_1ABE179A4(_QWORD *a1)
{
  return sub_1ABE176B4(a1);
}

uint64_t sub_1ABE179BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1ABF3223C(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_1ABF3223C() & 1) != 0))
        return 1;
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1ABE17A6C()
{
  unint64_t result;

  result = qword_1ED34F468;
  if (!qword_1ED34F468)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F8FC, &type metadata for EmbedProxyConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F468);
  }
  return result;
}

void sub_1ABE17AB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE17A6C();
    v7 = a3(a1, &type metadata for EmbedProxyConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t getEnumTagSinglePayload for EmbedProxyConfiguration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EmbedProxyConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmbedProxyConfiguration()
{
  return &type metadata for EmbedProxyConfiguration;
}

uint64_t storeEnumTagSinglePayload for EmbedProxyConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ABE17C18 + 4 * byte_1ABF3F795[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ABE17C4C + 4 * byte_1ABF3F790[v4]))();
}

uint64_t sub_1ABE17C4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE17C54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE17C5CLL);
  return result;
}

uint64_t sub_1ABE17C68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE17C70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ABE17C74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE17C7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmbedProxyConfiguration.CodingKeys()
{
  return &type metadata for EmbedProxyConfiguration.CodingKeys;
}

unint64_t sub_1ABE17C9C()
{
  unint64_t result;

  result = qword_1EEC43568;
  if (!qword_1EEC43568)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F8D4, &type metadata for EmbedProxyConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43568);
  }
  return result;
}

unint64_t sub_1ABE17CE4()
{
  unint64_t result;

  result = qword_1ED34F478;
  if (!qword_1ED34F478)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F844, &type metadata for EmbedProxyConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F478);
  }
  return result;
}

unint64_t sub_1ABE17D2C()
{
  unint64_t result;

  result = qword_1ED34F470;
  if (!qword_1ED34F470)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F86C, &type metadata for EmbedProxyConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34F470);
  }
  return result;
}

uint64_t sub_1ABE17D70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736F4879786F7270 && a2 == 0xE900000000000074;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74754179786F7270 && a2 == 0xEF6769666E6F436FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1ABE17E90()
{
  return sub_1ABF30478();
}

uint64_t sub_1ABE17EAC()
{
  return 0x746E496B636F7453;
}

uint64_t sub_1ABE17ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC43570);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC43570);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABE18040@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC40FF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1EEC43570, a1);
}

uint64_t sub_1ABE18064()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v12[0] = sub_1ABF30484();
  v3 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF2FE54();
  __swift_allocate_value_buffer(v10, qword_1EEC43588);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC43588);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v12[0]);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1ABF2FE60();
}

uint64_t sub_1ABE18290@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC41000, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1EEC43588, a1);
}

uint64_t sub_1ABE182B4()
{
  return 1;
}

uint64_t sub_1ABE182BC()
{
  swift_beginAccess();
  return byte_1EEC435A0;
}

uint64_t sub_1ABE182FC(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EEC435A0 = a1;
  return result;
}

uint64_t (*sub_1ABE18340())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1ABE18380()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, _QWORD, uint64_t);
  uint64_t v12;

  v0 = sub_1ABF2FFD4();
  v1 = MEMORY[0x1E0C80A78](v0);
  (*(void (**)(char *, _QWORD, double))(v3 + 104))((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0C91758], v1);
  sub_1ABCF5A54(0, &qword_1EEC435A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91258], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = sub_1ABF2FE9C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1ABF366D0;
  v9 = v8 + v7;
  v10 = *(void (**)(unint64_t, _QWORD, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x1E0C91240], v4);
  v10(v9 + v6, *MEMORY[0x1E0C91248], v4);
  v10(v9 + 2 * v6, *MEMORY[0x1E0C91238], v4);
  v10(v9 + 3 * v6, *MEMORY[0x1E0C91250], v4);
  sub_1ABE1A014(0, &qword_1EEC435B0, MEMORY[0x1E0C91678]);
  sub_1ABE18A40();
  sub_1ABE18A84();
  return sub_1ABF300E8();
}

uint64_t sub_1ABE18548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  sub_1ABE1A014(0, &qword_1EEC435B0, MEMORY[0x1E0C91678]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  sub_1ABE18A40();
  sub_1ABF2FF8C();
  sub_1ABE18A84();
  sub_1ABF2FFE0();
  v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v4, v1);
  sub_1ABF2FFE0();
  return ((uint64_t (*)(char *, uint64_t))v8)(v7, v1);
}

uint64_t sub_1ABE18660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  sub_1ABE18A40();
  v0 = sub_1ABF2FF68();
  swift_release();
  swift_getKeyPath();
  sub_1ABF2FF68();
  v1 = sub_1ABF2FF68();
  swift_release();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1ABF3EC20;
  *(_QWORD *)(v2 + 32) = v0;
  *(_QWORD *)(v2 + 40) = v1;
  sub_1ABF31A20();
  sub_1ABF2FF68();
  v3 = sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1ABE18774()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABE18794()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABE187B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FDD0();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABE18808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  _QWORD v13[2];

  v13[1] = a1;
  sub_1ABE1A014(0, &qword_1EEC43618, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABE1A014(0, &qword_1EEC43620, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v2);
  sub_1ABE1A014(0, &qword_1EEC435B0, MEMORY[0x1E0C91678]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v13 - v9;
  sub_1ABE18A40();
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABE1A074();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  sub_1ABF2FF74();
  sub_1ABE18A84();
  sub_1ABF2FFE0();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  sub_1ABF2FFE0();
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v4);
}

unint64_t sub_1ABE18A40()
{
  unint64_t result;

  result = qword_1ED34C6C8;
  if (!qword_1ED34C6C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F9BC, &type metadata for SymbolWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_1ED34C6C8);
  }
  return result;
}

unint64_t sub_1ABE18A84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC435B8;
  if (!qword_1EEC435B8)
  {
    sub_1ABE1A014(255, &qword_1EEC435B0, MEMORY[0x1E0C91678]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C916B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC435B8);
  }
  return result;
}

uint64_t sub_1ABE18ADC()
{
  return sub_1ABF2FDB8();
}

double sub_1ABE18AFC@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  *a1 = v3;
  a1[1] = v4;
  result = *(double *)&v5;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_1ABE18B64(uint64_t *a1)
{
  sub_1ABE19F60(*a1);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE18BDC()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABE18C18(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE18C60()
{
  return sub_1ABF2FDB8();
}

uint64_t sub_1ABE18C80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1ABE18CE0()
{
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE18D34()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABE18D68(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE18DB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t result;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  unsigned int v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  unsigned int v37;
  void (*v38)(char *);
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;

  v43 = a1;
  v47 = sub_1ABF2FFC8();
  v42 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v46 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED34CAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C907D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v44 = (char *)&v31 - v6;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v2);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - v8;
  v10 = sub_1ABF30484();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v15);
  v16 = sub_1ABF3049C();
  v17 = *(_QWORD *)(v16 - 8);
  v40 = v16;
  MEMORY[0x1E0C80A78](v16);
  v35 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE1932C();
  v41 = v19;
  sub_1ABF31738();
  sub_1ABF30844();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v33 = *MEMORY[0x1E0CAF9B8];
  v20 = v33;
  v36 = v10;
  v21(v13, v33, v10);
  v34 = v21;
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v21(v13, v20, v10);
  sub_1ABF304A8();
  v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
  v32 = v9;
  v39(v9, 0, 1, v16);
  v22 = sub_1ABF2FCD4();
  v48 = 0u;
  v49 = 0u;
  v50 = 0u;
  v51 = 0u;
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v44, 1, 1, v22);
  v23(v45, 1, 1, v22);
  v37 = *MEMORY[0x1E0C91738];
  v38 = *(void (**)(char *))(v42 + 104);
  v38(v46);
  sub_1ABE0BBAC();
  v42 = sub_1ABF2FE00();
  sub_1ABE193CC();
  v41 = v24;
  sub_1ABF31738();
  sub_1ABF30844();
  v25 = v33;
  v26 = v36;
  v27 = v34;
  v34(v13, v33, v36);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v27(v13, v25, v26);
  v28 = v32;
  sub_1ABF304A8();
  v39(v28, 0, 1, v40);
  LOBYTE(v48) = 0;
  v23(v44, 1, 1, v22);
  v23(v45, 1, 1, v22);
  ((void (*)(char *, _QWORD, uint64_t))v38)(v46, v37, v47);
  sub_1ABE19AF0();
  result = sub_1ABF2FDDC();
  v30 = v43;
  *v43 = v42;
  v30[1] = result;
  return result;
}

void sub_1ABE1932C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC435C0)
  {
    sub_1ABD04578(255, &qword_1EEC435C8, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABE1946C(&qword_1EEC435D0, &qword_1EEC435C8, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(void))sub_1ABD84154);
    v0 = sub_1ABF2FE24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC435C0);
  }
}

void sub_1ABE193CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C5A8)
  {
    sub_1ABD04578(255, &qword_1ED34C690, (uint64_t)&type metadata for NewsDisplayConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABE1946C(&qword_1ED34C698, &qword_1ED34C690, (uint64_t)&type metadata for NewsDisplayConfiguration, (uint64_t (*)(void))sub_1ABE194D8);
    v0 = sub_1ABF2FE24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C5A8);
  }
}

uint64_t sub_1ABE1946C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v8 = v7;
    v9 = a4();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91D78], v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABE194D8()
{
  unint64_t result;

  result = qword_1ED34C7E8;
  if (!qword_1ED34C7E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF401E4, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34C7E8);
  }
  return result;
}

uint64_t sub_1ABE1951C(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = a1;
  type metadata accessor for SymbolEntity();
  *(_QWORD *)(v2 + 152) = swift_task_alloc();
  *(_OWORD *)(v2 + 160) = *v1;
  return swift_task_switch();
}

uint64_t sub_1ABE1957C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16[9];

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 56);
    v13 = *(_QWORD *)(v0 + 48);
    v14 = *(_QWORD *)(v0 + 152);
    sub_1ABF2FF5C();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF5C();
    sub_1ABF2FD1C();
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD *)(v0 + 80);
    sub_1ABF2FD1C();
    v9 = *(_QWORD *)(v0 + 104);
    v10 = *(_QWORD *)(v0 + 96);
    sub_1ABF2FD1C();
    v5 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 120);
    v15 = 0;
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABD15B80(v12, v11, v10, v9, v5, v6, &v15, v13, (uint64_t)v16, v4, v3, v2, 0, 0, 0, 0);
    sub_1ABE19B78(v1);
    SymbolEntity.init(from:)(v16, v14);
    sub_1ABEC5648(v14, (uint64_t *)v16);
    v7 = *((_QWORD *)&v16[0] + 1);
    *(_QWORD *)(v0 + 128) = *(_QWORD *)&v16[0];
    *(_QWORD *)(v0 + 136) = v7;
    sub_1ABE19BE4();
    sub_1ABF2FCE0();
    sub_1ABE19B78(v1);
    swift_release();
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    sub_1ABE19B34();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE197D8()
{
  return 0x746E496B636F7453;
}

uint64_t sub_1ABE197F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC40FF8 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC43570);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE19868()
{
  swift_beginAccess();
  return byte_1EEC435A0;
}

uint64_t sub_1ABE198A8()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, _QWORD, uint64_t);
  uint64_t v12;

  v0 = sub_1ABF2FFD4();
  v1 = MEMORY[0x1E0C80A78](v0);
  (*(void (**)(char *, _QWORD, double))(v3 + 104))((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0C91758], v1);
  sub_1ABCF5A54(0, &qword_1EEC435A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91258], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = sub_1ABF2FE9C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1ABF366D0;
  v9 = v8 + v7;
  v10 = *(void (**)(unint64_t, _QWORD, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x1E0C91240], v4);
  v10(v9 + v6, *MEMORY[0x1E0C91248], v4);
  v10(v9 + 2 * v6, *MEMORY[0x1E0C91238], v4);
  v10(v9 + 3 * v6, *MEMORY[0x1E0C91250], v4);
  sub_1ABE1A014(0, &qword_1EEC435B0, MEMORY[0x1E0C91678]);
  sub_1ABE18A84();
  return sub_1ABF300E8();
}

uint64_t sub_1ABE19A74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1ABD37AA0;
  return sub_1ABE1951C(a1);
}

void sub_1ABE19AC8()
{
  sub_1ABE19FD0();
  JUMPOUT(0x1AF435DE0);
}

unint64_t sub_1ABE19AF0()
{
  unint64_t result;

  result = qword_1ED34CBD0;
  if (!qword_1ED34CBD0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF400EC, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CBD0);
  }
  return result;
}

unint64_t sub_1ABE19B34()
{
  unint64_t result;

  result = qword_1EEC435E0;
  if (!qword_1EEC435E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FB58, &type metadata for SymbolWidgetConfigurationIntent._Error);
    atomic_store(result, (unint64_t *)&qword_1EEC435E0);
  }
  return result;
}

uint64_t sub_1ABE19B78(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1ABE19BE4()
{
  unint64_t result;

  result = qword_1ED34CB78;
  if (!qword_1ED34CB78)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4C30C, &type metadata for OpenSymbolIntent);
    atomic_store(result, (unint64_t *)&qword_1ED34CB78);
  }
  return result;
}

unint64_t sub_1ABE19C30()
{
  unint64_t result;

  result = qword_1ED347388;
  if (!qword_1ED347388)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FA4C, &type metadata for SymbolWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_1ED347388);
  }
  return result;
}

unint64_t sub_1ABE19C78()
{
  unint64_t result;

  result = qword_1ED34C6C0;
  if (!qword_1ED34C6C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FA74, &type metadata for SymbolWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_1ED34C6C0);
  }
  return result;
}

uint64_t sub_1ABE19CBC()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1ABE19CE0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SymbolWidgetConfigurationIntent()
{
  return &type metadata for SymbolWidgetConfigurationIntent;
}

uint64_t sub_1ABE19D10()
{
  return sub_1ABCFE1EC(&qword_1EEC435F0, (uint64_t (*)(uint64_t))sub_1ABE19D3C, MEMORY[0x1E0C91B78]);
}

void sub_1ABE19D3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC435F8)
  {
    sub_1ABE1A014(255, &qword_1EEC435B0, MEMORY[0x1E0C91678]);
    sub_1ABE18A40();
    sub_1ABE18A84();
    v0 = sub_1ABF30100();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC435F8);
  }
}

uint64_t sub_1ABE19DD4()
{
  return sub_1ABCFE1EC(&qword_1EEC43600, (uint64_t (*)(uint64_t))sub_1ABE19E00, MEMORY[0x1E0C91580]);
}

void sub_1ABE19E00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43608)
  {
    sub_1ABD69948();
    sub_1ABE19BE4();
    v0 = sub_1ABF2FF38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43608);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolWidgetConfigurationIntent._Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE19EBC + 4 * byte_1ABF3F950[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE19EDC + 4 * byte_1ABF3F955[v4]))();
}

_BYTE *sub_1ABE19EBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE19EDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE19EE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE19EEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE19EF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE19EFC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SymbolWidgetConfigurationIntent._Error()
{
  return &type metadata for SymbolWidgetConfigurationIntent._Error;
}

unint64_t sub_1ABE19F1C()
{
  unint64_t result;

  result = qword_1EEC43610;
  if (!qword_1EEC43610)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FB30, &type metadata for SymbolWidgetConfigurationIntent._Error);
    atomic_store(result, (unint64_t *)&qword_1EEC43610);
  }
  return result;
}

uint64_t sub_1ABE19F60(uint64_t result)
{
  if (result)
  {
    sub_1ABF2FF5C();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    return sub_1ABF2FF5C();
  }
  return result;
}

unint64_t sub_1ABE19FD0()
{
  unint64_t result;

  result = qword_1ED34C6B8;
  if (!qword_1ED34C6B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3F98C, &type metadata for SymbolWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_1ED34C6B8);
  }
  return result;
}

void sub_1ABE1A014(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE18A40();
    v7 = a3(a1, &type metadata for SymbolWidgetConfigurationIntent, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1ABE1A074()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43628)
  {
    sub_1ABE1932C();
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43628);
  }
}

uint64_t sub_1ABE1A0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v0 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1ABF31774();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v16[-v6];
  v8 = sub_1ABF317A4();
  v10 = v9;
  sub_1ABF31738();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1ED34FD78 != -1)
    swift_once();
  v11 = (id)qword_1ED368428;
  sub_1ABF30844();
  v12 = sub_1ABF317EC();
  v14 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v7, v1);
  return sub_1ABE1A278(v8, v10, v12, v14, &qword_1EEC43630);
}

uint64_t sub_1ABE1A278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a3;
  v24 = a4;
  v21 = a1;
  v22 = a2;
  v6 = sub_1ABF30484();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1ABF3049C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
  sub_1ABF31738();
  sub_1ABF30844();
  v15 = *MEMORY[0x1E0CAF9B8];
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v16(v9, v15, v6);
  sub_1ABF304A8();
  v17 = MEMORY[0x1AF435F84](v14);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v16(v9, v15, v6);
  sub_1ABF304A8();
  v18 = MEMORY[0x1AF435F84](v14);
  v25 = v21;
  v26 = v22;
  swift_retain_n();
  sub_1ABF2FF68();
  sub_1ABF2FD28();
  swift_release();
  swift_release();
  v25 = v23;
  v26 = v24;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FD28();
  swift_release_n();
  result = swift_release_n();
  *a5 = v17;
  a5[1] = v18;
  return result;
}

uint64_t sub_1ABE1A528@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1EEC41008 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EEC43638;
  *a1 = qword_1EEC43630;
  a1[1] = v2;
  sub_1ABF2FF68();
  return sub_1ABF2FF68();
}

uint64_t sub_1ABE1A584()
{
  uint64_t v1;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FD1C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1ABE1A5E0()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE1A610@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FD1C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE1A670()
{
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FD28();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE1A6C8()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE1A6F8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE1A740()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE1A760()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE1A790@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FD1C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE1A7F0()
{
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FD28();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE1A848()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE1A878(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE1A8C0()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE1A8E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;

  v29 = a2;
  v3 = sub_1ABF30484();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1ABF3049C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v25 = *(_QWORD *)(a1 + 16);
  v26 = v12;
  v13 = *(_QWORD *)(a1 + 32);
  v24 = *(_QWORD *)(a1 + 24);
  v27 = *(unsigned __int16 *)(a1 + 40);
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
  sub_1ABF31738();
  sub_1ABF30844();
  v14 = *MEMORY[0x1E0CAF9B8];
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v15(v6, v14, v3);
  sub_1ABF304A8();
  v16 = MEMORY[0x1AF435F84](v11);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v15(v6, v14, v3);
  sub_1ABF304A8();
  v17 = MEMORY[0x1AF435F84](v11);
  v18 = v24;
  v30 = v24;
  v31 = v13;
  swift_retain_n();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD28();
  swift_release();
  swift_release();
  v30 = v28;
  v31 = v26;
  v32 = v25;
  v33 = v18;
  v34 = v13;
  v35 = v27;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v19 = sub_1ABD254E4();
  v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v19;
  v31 = v21;
  sub_1ABF2FD28();
  swift_release_n();
  result = swift_release_n();
  v23 = v29;
  *v29 = v16;
  v23[1] = v17;
  return result;
}

uint64_t sub_1ABE1ABF4@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1ED347370 != -1)
    swift_once();
  *a1 = qword_1ED34C640;
  return sub_1ABF2FF68();
}

uint64_t sub_1ABE1AC44()
{
  if (qword_1ED347370 != -1)
    swift_once();
  return sub_1ABF2FF68();
}

uint64_t sub_1ABE1AC84@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FD1C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE1ACE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41018 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC43640);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE1AD58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41018 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC43640);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE1ADC8()
{
  sub_1ABE1B76C();
  return sub_1ABF2FC5C();
}

uint64_t sub_1ABE1AE04()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED346788, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91480], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - v2;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - v5;
  v7 = sub_1ABF3049C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1ABF31768();
  MEMORY[0x1E0C80A78](v9);
  sub_1ABF3175C();
  sub_1ABF31750();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FD1C();
  swift_release();
  swift_release();
  sub_1ABF31744();
  swift_bridgeObjectRelease();
  sub_1ABF31750();
  sub_1ABF30490();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  v10 = sub_1ABF2FEFC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  return sub_1ABF2FF08();
}

uint64_t sub_1ABE1B014()
{
  sub_1ABE1B654();
  return sub_1ABF300B8();
}

uint64_t sub_1ABE1B04C()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WatchlistWidgetQuery();
  v0 = swift_allocObject();
  sub_1ABCF5A54(0, (unint64_t *)&qword_1ED34C7B8, (uint64_t (*)(uint64_t))sub_1ABD68798, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C90390]);
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ED34C640 = v0;
  return result;
}

uint64_t sub_1ABE1B0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v12[0] = (char *)v12 - v1;
  v2 = sub_1ABF30484();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF30070();
  __swift_allocate_value_buffer(v10, qword_1EEC43640);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC43640);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v2);
  sub_1ABF304A8();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v9 + 56))(v12[0], 1, 1, v8);
  sub_1ABCF5A54(0, &qword_1EEC421D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF38EC0;
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  return sub_1ABF30058();
}

unint64_t sub_1ABE1B458()
{
  unint64_t result;

  result = qword_1ED34C648;
  if (!qword_1ED34C648)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FC48, &type metadata for WatchlistWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C648);
  }
  return result;
}

unint64_t sub_1ABE1B4A0()
{
  unint64_t result;

  result = qword_1ED34C660;
  if (!qword_1ED34C660)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FC80, &type metadata for WatchlistWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C660);
  }
  return result;
}

unint64_t sub_1ABE1B4E8()
{
  unint64_t result;

  result = qword_1ED34C680;
  if (!qword_1ED34C680)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FCB0, &type metadata for WatchlistWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C680);
  }
  return result;
}

unint64_t sub_1ABE1B530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34C620;
  if (!qword_1ED34C620)
  {
    v1 = type metadata accessor for WatchlistWidgetQuery();
    result = MEMORY[0x1AF438F30](&unk_1ABF40540, v1);
    atomic_store(result, (unint64_t *)&qword_1ED34C620);
  }
  return result;
}

unint64_t sub_1ABE1B57C()
{
  unint64_t result;

  result = qword_1ED347378;
  if (!qword_1ED347378)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FCE8, &type metadata for WatchlistWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED347378);
  }
  return result;
}

unint64_t sub_1ABE1B5C4()
{
  unint64_t result;

  result = qword_1ED34C668;
  if (!qword_1ED34C668)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FD10, &type metadata for WatchlistWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C668);
  }
  return result;
}

unint64_t sub_1ABE1B60C()
{
  unint64_t result;

  result = qword_1ED34C658;
  if (!qword_1ED34C658)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FD38, &type metadata for WatchlistWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C658);
  }
  return result;
}

unint64_t sub_1ABE1B654()
{
  unint64_t result;

  result = qword_1ED34C670;
  if (!qword_1ED34C670)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FD90, &type metadata for WatchlistWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C670);
  }
  return result;
}

unint64_t sub_1ABE1B69C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED34C5B8;
  if (!qword_1ED34C5B8)
  {
    sub_1ABCF4DA8(255, &qword_1ED34C5C0, (uint64_t (*)(void))sub_1ABE1B60C, (uint64_t)&type metadata for WatchlistWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C91980]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91998], v1);
    atomic_store(result, (unint64_t *)&qword_1ED34C5B8);
  }
  return result;
}

unint64_t sub_1ABE1B708()
{
  unint64_t result;

  result = qword_1ED34C678;
  if (!qword_1ED34C678)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FDC0, &type metadata for WatchlistWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C678);
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistWidgetEntity()
{
  return &type metadata for WatchlistWidgetEntity;
}

unint64_t sub_1ABE1B76C()
{
  unint64_t result;

  result = qword_1ED34C650;
  if (!qword_1ED34C650)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FBF0, &type metadata for WatchlistWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C650);
  }
  return result;
}

unint64_t sub_1ABE1B7B0()
{
  return 0xD000000000000014;
}

uint64_t sub_1ABE1B7CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1ABF30484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1ABF3049C();
  __swift_allocate_value_buffer(v6, qword_1EEC43658);
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEC43658);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAF9B8], v0);
  return sub_1ABF304A8();
}

uint64_t sub_1ABE1B948@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC41020, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAF9F8], (uint64_t)qword_1EEC43658, a1);
}

uint64_t sub_1ABE1B96C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v12[0] = sub_1ABF30484();
  v3 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF2FE54();
  __swift_allocate_value_buffer(v10, qword_1EEC43670);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC43670);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v12[0]);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1ABF2FE60();
}

uint64_t sub_1ABE1BB98@<X0>(uint64_t a1@<X8>)
{
  return sub_1ABD67C48(&qword_1EEC41028, (uint64_t (*)(_QWORD))MEMORY[0x1E0C91128], (uint64_t)qword_1EEC43670, a1);
}

uint64_t sub_1ABE1BBBC()
{
  return 1;
}

uint64_t sub_1ABE1BBC4()
{
  return 0;
}

uint64_t sub_1ABE1BBCC()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, _QWORD, uint64_t);
  uint64_t v12;

  v0 = sub_1ABF2FFD4();
  v1 = MEMORY[0x1E0C80A78](v0);
  (*(void (**)(char *, _QWORD, double))(v3 + 104))((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0C91758], v1);
  sub_1ABCF5A54(0, &qword_1EEC435A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91258], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = sub_1ABF2FE9C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1ABF366E0;
  v9 = v8 + v7;
  v10 = *(void (**)(unint64_t, _QWORD, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x1E0C91248], v4);
  v10(v9 + v6, *MEMORY[0x1E0C91238], v4);
  sub_1ABE1E1FC(0, &qword_1EEC43688, MEMORY[0x1E0C91678]);
  sub_1ABE1C408();
  sub_1ABE1C3C4();
  sub_1ABE1C4A0();
  sub_1ABCFE1EC(&qword_1EEC436A0, (uint64_t (*)(uint64_t))sub_1ABE1C408, MEMORY[0x1E0C91B78]);
  return sub_1ABF300E8();
}

uint64_t sub_1ABE1BD8C()
{
  return sub_1ABE1C504();
}

uint64_t sub_1ABE1BD98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_getKeyPath();
  sub_1ABE1C3C4();
  v0 = sub_1ABF2FF68();
  swift_release();
  swift_getKeyPath();
  sub_1ABF2FF68();
  v1 = sub_1ABF2FF68();
  swift_release();
  swift_getKeyPath();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FF68();
  swift_release();
  swift_getKeyPath();
  sub_1ABF2FF68();
  v3 = sub_1ABF2FF68();
  swift_release();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1ABF3FE10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  *(_QWORD *)(v4 + 56) = v3;
  sub_1ABF31A20();
  sub_1ABF2FF68();
  v5 = sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v5;
}

uint64_t sub_1ABE1BF28()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABE1BF48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FDD0();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABE1BFC8()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABE1BFE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FDD0();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABE1C068()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABE1C088@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FDD0();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABE1C108()
{
  return sub_1ABF2FDD0();
}

uint64_t sub_1ABE1C128@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FDD0();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1ABE1C1A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  _QWORD v20[2];

  v20[1] = a1;
  v1 = sub_1ABF2FE9C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1ABF30094();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE1C408();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v20 - v16;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v6 + 104))(v8, *MEMORY[0x1E0C919E0], v5, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0C91240], v1);
  sub_1ABE1E1FC(0, &qword_1EEC43688, MEMORY[0x1E0C91678]);
  sub_1ABE1C3C4();
  sub_1ABE1C4A0();
  sub_1ABF300F4();
  sub_1ABCFE1EC(&qword_1EEC436A0, (uint64_t (*)(uint64_t))sub_1ABE1C408, MEMORY[0x1E0C91B78]);
  sub_1ABF2FFE0();
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  sub_1ABF2FFE0();
  return ((uint64_t (*)(char *, uint64_t))v18)(v17, v10);
}

unint64_t sub_1ABE1C3C4()
{
  unint64_t result;

  result = qword_1ED34C6E0;
  if (!qword_1ED34C6E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FE90, &type metadata for WatchlistWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_1ED34C6E0);
  }
  return result;
}

void sub_1ABE1C408()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43690)
  {
    sub_1ABE1E1FC(255, &qword_1EEC43688, MEMORY[0x1E0C91678]);
    sub_1ABE1C3C4();
    sub_1ABE1C4A0();
    v0 = sub_1ABF30100();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43690);
  }
}

unint64_t sub_1ABE1C4A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC43698;
  if (!qword_1EEC43698)
  {
    sub_1ABE1E1FC(255, &qword_1EEC43688, MEMORY[0x1E0C91678]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C916B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC43698);
  }
  return result;
}

uint64_t sub_1ABE1C4F8()
{
  return sub_1ABE1C504();
}

uint64_t sub_1ABE1C504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  sub_1ABE1E1FC(0, &qword_1EEC43688, MEMORY[0x1E0C91678]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  sub_1ABE1C3C4();
  sub_1ABF2FF8C();
  sub_1ABE1C4A0();
  sub_1ABF2FFE0();
  v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v4, v1);
  sub_1ABF2FFE0();
  return ((uint64_t (*)(char *, uint64_t))v8)(v7, v1);
}

uint64_t sub_1ABE1C61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  sub_1ABE1C3C4();
  v0 = sub_1ABF2FF68();
  swift_release();
  swift_getKeyPath();
  sub_1ABF2FF68();
  v1 = sub_1ABF2FF68();
  swift_release();
  swift_getKeyPath();
  sub_1ABF2FF68();
  v2 = sub_1ABF2FF68();
  swift_release();
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34E370, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1ABF3FE20;
  *(_QWORD *)(v3 + 32) = v0;
  *(_QWORD *)(v3 + 40) = v1;
  *(_QWORD *)(v3 + 48) = v2;
  sub_1ABF31A20();
  sub_1ABF2FF68();
  v4 = sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1ABE1C774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  _QWORD v13[2];

  v13[1] = a1;
  sub_1ABE1E1FC(0, &qword_1EEC436C8, MEMORY[0x1E0C91700]);
  MEMORY[0x1E0C80A78](v1);
  sub_1ABE1E1FC(0, &qword_1EEC436D0, MEMORY[0x1E0C916D8]);
  MEMORY[0x1E0C80A78](v2);
  sub_1ABE1E1FC(0, &qword_1EEC43688, MEMORY[0x1E0C91678]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v13 - v9;
  sub_1ABE1C3C4();
  sub_1ABF2FFB0();
  sub_1ABF2FFA4();
  swift_getKeyPath();
  sub_1ABE1E25C();
  sub_1ABF2FF98();
  swift_release();
  sub_1ABF2FFA4();
  sub_1ABF2FFBC();
  sub_1ABF2FF74();
  sub_1ABE1C4A0();
  sub_1ABF2FFE0();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v7, v4);
  sub_1ABF2FFE0();
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v4);
}

uint64_t sub_1ABE1C9A4()
{
  return sub_1ABF2FDB8();
}

double sub_1ABE1C9C4@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1ABE1CA50(uint64_t *a1)
{
  sub_1ABE1E18C(*a1);
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE1CADC()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABE1CB10(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE1CB58()
{
  return sub_1ABF2FDB8();
}

uint64_t sub_1ABE1CB78@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1ABE1CC04()
{
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE1CC84()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABE1CCB8(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE1CD00()
{
  unsigned __int8 v1;

  sub_1ABF2FDB8();
  return v1;
}

uint64_t sub_1ABE1CD30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1ABE1CDBC()
{
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE1CE3C()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABE1CE6C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE1CEB4()
{
  unsigned __int8 v1;

  sub_1ABF2FDB8();
  return v1;
}

uint64_t sub_1ABE1CEE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1ABE1CF70()
{
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDC4();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE1CFF0()
{
  return sub_1ABF2FDC4();
}

uint64_t (*sub_1ABE1D020(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FDAC();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE1D068@<X0>(uint64_t *a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  void (*v52)(char *, uint64_t, uint64_t);
  unsigned int v53;
  char *v54;
  unsigned int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, _QWORD, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v51 = a1;
  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED347140, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91CF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v59 = (char *)&v46 - v3;
  v66 = sub_1ABF2FFC8();
  v63 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v65 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABCF5A54(0, &qword_1ED34CAD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C907D0], v1);
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v57 = (char *)&v46 - v8;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v1);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v46 - v10;
  v12 = sub_1ABF30484();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1ABF3049C();
  v19 = *(_QWORD *)(v18 - 8);
  v56 = v18;
  MEMORY[0x1E0C80A78](v18);
  v54 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ABE1D93C();
  v50 = v21;
  sub_1ABF31738();
  sub_1ABF30844();
  v22 = *MEMORY[0x1E0CAF9B8];
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v60 = v12;
  v23(v15, v22, v12);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v23(v15, v22, v12);
  sub_1ABF304A8();
  v64 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v46 = v11;
  v64(v11, 0, 1, v18);
  v24 = sub_1ABF2FCD4();
  v67 = 0;
  v68 = 0;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v61 = v25;
  v62 = v24;
  v26 = v57;
  v25(v57, 1, 1, v24);
  v25(v58, 1, 1, v24);
  v55 = *MEMORY[0x1E0C91738];
  v63 = *(_QWORD *)(v63 + 104);
  ((void (*)(char *))v63)(v65);
  sub_1ABE1B76C();
  v50 = sub_1ABF2FE00();
  sub_1ABE193CC();
  v49 = v27;
  sub_1ABF31738();
  sub_1ABF30844();
  v53 = v22;
  v28 = v60;
  v52 = v23;
  v23(v15, v22, v60);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v23(v15, v22, v28);
  v29 = v46;
  sub_1ABF304A8();
  v30 = v56;
  v64(v29, 0, 1, v56);
  LOBYTE(v67) = 0;
  v32 = v61;
  v31 = v62;
  v61(v26, 1, 1, v62);
  v32(v58, 1, 1, v31);
  v33 = v55;
  ((void (*)(char *, _QWORD, uint64_t))v63)(v65, v55, v66);
  sub_1ABE19AF0();
  v49 = sub_1ABF2FDDC();
  sub_1ABE1DE88();
  v58 = v34;
  sub_1ABF31738();
  sub_1ABF30844();
  v35 = v53;
  v36 = v60;
  v37 = v52;
  v52(v15, v53, v60);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v37(v15, v35, v36);
  sub_1ABF304A8();
  v64(v29, 0, 1, v30);
  LOBYTE(v67) = 0;
  v38 = sub_1ABF31AA4();
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
  v47(v59, 1, 1, v38);
  v39 = v57;
  v61(v57, 1, 1, v62);
  ((void (*)(char *, uint64_t, uint64_t))v63)(v65, v33, v66);
  v48 = sub_1ABF2FE18();
  sub_1ABF31738();
  sub_1ABF30844();
  v40 = v53;
  v41 = v60;
  v42 = v52;
  v52(v15, v53, v60);
  sub_1ABF304A8();
  sub_1ABF31738();
  sub_1ABF30844();
  v42(v15, v40, v41);
  sub_1ABF304A8();
  v64(v29, 0, 1, v56);
  LOBYTE(v67) = 0;
  v47(v59, 1, 1, v38);
  v61(v39, 1, 1, v62);
  ((void (*)(char *, _QWORD, uint64_t))v63)(v65, v55, v66);
  result = sub_1ABF2FE18();
  v44 = v51;
  v45 = v49;
  *v51 = v50;
  v44[1] = v45;
  v44[2] = v48;
  v44[3] = result;
  return result;
}

void sub_1ABE1D93C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C5A0)
  {
    sub_1ABD04578(255, &qword_1ED347380, (uint64_t)&type metadata for WatchlistWidgetEntity, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABE1946C(&qword_1ED34C688, &qword_1ED347380, (uint64_t)&type metadata for WatchlistWidgetEntity, (uint64_t (*)(void))sub_1ABE1B60C);
    v0 = sub_1ABF2FE24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C5A0);
  }
}

uint64_t sub_1ABE1D9DC(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 32) = a1;
  v3 = v1[1];
  *(_OWORD *)(v2 + 40) = *v1;
  *(_OWORD *)(v2 + 56) = v3;
  return swift_task_switch();
}

uint64_t sub_1ABE1DA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[2];
  uint64_t v6;

  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FDB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!*(_QWORD *)(v0 + 16))
  {
    if (qword_1EEC41008 != -1)
      swift_once();
    sub_1ABF2FF68();
    sub_1ABF2FF68();
  }
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FD1C();
  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  sub_1ABF2FD1C();
  swift_release();
  swift_release();
  WatchlistEntity.init(id:name:)(v1, v2, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &v6);
  sub_1ABD80E60(&v6, v5);
  v3 = v5[1];
  *(_QWORD *)(v0 + 16) = v5[0];
  *(_QWORD *)(v0 + 24) = v3;
  sub_1ABD80748();
  sub_1ABF2FCE0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1ABE1DBA0()
{
  return 0xD000000000000014;
}

uint64_t sub_1ABE1DBBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41020 != -1)
    swift_once();
  v2 = sub_1ABF3049C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC43658);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE1DC2C()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, _QWORD, uint64_t);
  uint64_t v12;

  v0 = sub_1ABF2FFD4();
  v1 = MEMORY[0x1E0C80A78](v0);
  (*(void (**)(char *, _QWORD, double))(v3 + 104))((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0C91758], v1);
  sub_1ABCF5A54(0, &qword_1EEC435A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91258], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = sub_1ABF2FE9C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1ABF366E0;
  v9 = v8 + v7;
  v10 = *(void (**)(unint64_t, _QWORD, uint64_t))(v5 + 104);
  v10(v9, *MEMORY[0x1E0C91248], v4);
  v10(v9 + v6, *MEMORY[0x1E0C91238], v4);
  sub_1ABE1E1FC(0, &qword_1EEC43688, MEMORY[0x1E0C91678]);
  sub_1ABE1C408();
  sub_1ABE1C4A0();
  sub_1ABCFE1EC(&qword_1EEC436A0, (uint64_t (*)(uint64_t))sub_1ABE1C408, MEMORY[0x1E0C91B78]);
  return sub_1ABF300E8();
}

uint64_t sub_1ABE1DDF0(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1ABD37AA0;
  *(_QWORD *)(v4 + 32) = a1;
  v5 = v1[1];
  *(_OWORD *)(v4 + 40) = *v1;
  *(_OWORD *)(v4 + 56) = v5;
  return swift_task_switch();
}

void sub_1ABE1DE60()
{
  sub_1ABE1E1B8();
  JUMPOUT(0x1AF435DE0);
}

void sub_1ABE1DE88()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED34C5B0)
  {
    v0 = MEMORY[0x1E0DEAFA0];
    sub_1ABD04578(255, &qword_1ED34C710, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABE1946C(&qword_1ED34C718, &qword_1ED34C710, v0, (uint64_t (*)(void))sub_1ABE1DF28);
    v1 = sub_1ABF2FE24();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED34C5B0);
  }
}

unint64_t sub_1ABE1DF28()
{
  unint64_t result;

  result = qword_1ED347138;
  if (!qword_1ED347138)
  {
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91CF0], MEMORY[0x1E0DEAFA0]);
    atomic_store(result, (unint64_t *)&qword_1ED347138);
  }
  return result;
}

unint64_t sub_1ABE1DF74()
{
  unint64_t result;

  result = qword_1ED347390;
  if (!qword_1ED347390)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FF20, &type metadata for WatchlistWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_1ED347390);
  }
  return result;
}

unint64_t sub_1ABE1DFBC()
{
  unint64_t result;

  result = qword_1ED34C6D8;
  if (!qword_1ED34C6D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FF48, &type metadata for WatchlistWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_1ED34C6D8);
  }
  return result;
}

uint64_t sub_1ABE1E000()
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1ABE1E024()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for WatchlistWidgetConfigurationIntent()
{
  return &type metadata for WatchlistWidgetConfigurationIntent;
}

uint64_t sub_1ABE1E064()
{
  return sub_1ABCFE1EC(&qword_1EEC436B8, (uint64_t (*)(uint64_t))sub_1ABE1E090, MEMORY[0x1E0C91B78]);
}

void sub_1ABE1E090()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC436C0)
  {
    sub_1ABE1E1FC(255, &qword_1EEC43688, MEMORY[0x1E0C91678]);
    sub_1ABE1C408();
    sub_1ABE1C3C4();
    sub_1ABE1C4A0();
    sub_1ABCFE1EC(&qword_1EEC436A0, (uint64_t (*)(uint64_t))sub_1ABE1C408, MEMORY[0x1E0C91B78]);
    v0 = sub_1ABF30100();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC436C0);
  }
}

uint64_t sub_1ABE1E160()
{
  return sub_1ABCFE1EC(&qword_1EEC42640, (uint64_t (*)(uint64_t))sub_1ABDBC0F8, MEMORY[0x1E0C91580]);
}

uint64_t sub_1ABE1E18C(uint64_t result)
{
  if (result)
  {
    sub_1ABF2FF68();
    return sub_1ABF2FF68();
  }
  return result;
}

unint64_t sub_1ABE1E1B8()
{
  unint64_t result;

  result = qword_1ED34C6D0;
  if (!qword_1ED34C6D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF3FE60, &type metadata for WatchlistWidgetConfigurationIntent);
    atomic_store(result, (unint64_t *)&qword_1ED34C6D0);
  }
  return result;
}

void sub_1ABE1E1FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1ABE1C3C4();
    v7 = a3(a1, &type metadata for WatchlistWidgetConfigurationIntent, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1ABE1E25C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC436D8)
  {
    sub_1ABE1D93C();
    v0 = sub_1ABF32374();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC436D8);
  }
}

uint64_t sub_1ABE1E2C4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v12 - v1;
  v12[0] = sub_1ABF30484();
  v3 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF30070();
  __swift_allocate_value_buffer(v10, qword_1EEC436E0);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC436E0);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v12[0]);
  sub_1ABF304A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1ABF30064();
}

uint64_t sub_1ABE1E4EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41030 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC436E0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE1E584(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1EEC41030 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC436E0);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*sub_1ABE1E634())()
{
  uint64_t v0;

  if (qword_1EEC41030 != -1)
    swift_once();
  v0 = sub_1ABF30070();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEC436E0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1ABE1E6AC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(char *);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  char *v24;
  unint64_t result;
  _QWORD v26[2];
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v28;
  void (*v29)(char *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  char *v38;
  char *v39;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED346788, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91480], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v39 = (char *)v26 - v2;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v0);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)v26 - v4;
  v5 = sub_1ABF30484();
  v35 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v9);
  v33 = sub_1ABF3049C();
  v10 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  sub_1ABCF5A54(0, &qword_1EEC43710, (uint64_t (*)(uint64_t))sub_1ABE1F574, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1ABE1F574();
  v12 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v31 = 2 * v13;
  v15 = swift_allocObject();
  v32 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_1ABF36EA0;
  v28 = v15 + v14;
  *(_BYTE *)(v15 + v14) = 0;
  sub_1ABF31738();
  sub_1ABF30844();
  v36 = *MEMORY[0x1E0CAF9B8];
  v29 = *(void (**)(char *))(v35 + 104);
  v29(v7);
  sub_1ABF304A8();
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v16 = v33;
  v27(v38, 1, 1, v33);
  v17 = sub_1ABF2FEFC();
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v35 = v17;
  v34(v39, 1, 1, v17);
  sub_1ABF2FF08();
  v18 = v28;
  v26[1] = v28 + v13 + *(int *)(v37 + 48);
  *(_BYTE *)(v28 + v13) = 1;
  sub_1ABF31738();
  sub_1ABF30844();
  v19 = v29;
  v20 = v30;
  ((void (*)(char *, _QWORD, uint64_t))v29)(v7, v36, v30);
  sub_1ABF304A8();
  v21 = v38;
  v22 = v16;
  v23 = v27;
  v27(v38, 1, 1, v22);
  v24 = v39;
  v34(v39, 1, 1, v35);
  sub_1ABF2FF08();
  *(_BYTE *)(v18 + v31) = 2;
  sub_1ABF31738();
  sub_1ABF30844();
  ((void (*)(char *, _QWORD, uint64_t))v19)(v7, v36, v20);
  sub_1ABF304A8();
  v23(v21, 1, 1, v33);
  v34(v24, 1, 1, v35);
  sub_1ABF2FF08();
  result = sub_1ABDEA714(v32);
  qword_1EEC436F8 = result;
  return result;
}

uint64_t sub_1ABE1EB80()
{
  if (qword_1EEC41038 != -1)
    swift_once();
  swift_beginAccess();
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE1EBEC(uint64_t a1)
{
  if (qword_1EEC41038 != -1)
    swift_once();
  swift_beginAccess();
  qword_1EEC436F8 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1ABE1EC60())()
{
  if (qword_1EEC41038 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1ABE1ECCC@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *sub_1ABE1ED24()
{
  return &unk_1E5AED998;
}

uint64_t sub_1ABE1ED30()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x737961776C61;
  if (*v0 != 1)
    v1 = 0x726576656ELL;
  if (*v0)
    return v1;
  else
    return 0x756F487265746661;
}

uint64_t sub_1ABE1ED88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE15A4(*a1, *a2);
}

unint64_t sub_1ABE1ED98()
{
  unint64_t result;

  result = qword_1ED34CC00;
  if (!qword_1ED34CC00)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4004C, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CC00);
  }
  return result;
}

uint64_t sub_1ABE1EDDC()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE1EE78()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE1EEF0()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE1EF88@<X0>(char *a1@<X8>)
{
  return sub_1ABE1ECCC(a1);
}

void sub_1ABE1EF94(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA00000000007372;
  v4 = 0xE600000000000000;
  v5 = 0x737961776C61;
  if (v2 != 1)
  {
    v5 = 0x726576656ELL;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x756F487265746661;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1ABE1EFF4()
{
  unint64_t result;

  result = qword_1ED34CBD8;
  if (!qword_1ED34CBD8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4012C, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CBD8);
  }
  return result;
}

unint64_t sub_1ABE1F03C()
{
  unint64_t result;

  result = qword_1ED34CBC8;
  if (!qword_1ED34CBC8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40164, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CBC8);
  }
  return result;
}

unint64_t sub_1ABE1F084()
{
  unint64_t result;

  result = qword_1ED34CC08;
  if (!qword_1ED34CC08)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF400B4, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CC08);
  }
  return result;
}

uint64_t sub_1ABE1F0C8()
{
  return MEMORY[0x1E0DEA9E0];
}

unint64_t sub_1ABE1F0D8()
{
  unint64_t result;

  result = qword_1ED34CBE0;
  if (!qword_1ED34CBE0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40194, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CBE0);
  }
  return result;
}

unint64_t sub_1ABE1F120()
{
  unint64_t result;

  result = qword_1ED34CBC0;
  if (!qword_1ED34CBC0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF401BC, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CBC0);
  }
  return result;
}

unint64_t sub_1ABE1F16C()
{
  unint64_t result;

  result = qword_1ED34CBB8;
  if (!qword_1ED34CBB8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4023C, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CBB8);
  }
  return result;
}

uint64_t sub_1ABE1F1B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41030 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC436E0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE1F248()
{
  sub_1ABE19AF0();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1ABE1F288()
{
  sub_1ABE19AF0();
  return sub_1ABF2FC50();
}

unint64_t sub_1ABE1F2C4()
{
  unint64_t result;

  result = qword_1ED34CBE8;
  if (!qword_1ED34CBE8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4027C, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CBE8);
  }
  return result;
}

unint64_t sub_1ABE1F30C()
{
  unint64_t result;

  result = qword_1ED34CC10;
  if (!qword_1ED34CC10)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF402A4, &type metadata for NewsDisplayConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED34CC10);
  }
  return result;
}

uint64_t sub_1ABE1F354()
{
  if (qword_1EEC41038 != -1)
    swift_once();
  swift_beginAccess();
  return sub_1ABF2FF5C();
}

uint64_t sub_1ABE1F3C0()
{
  sub_1ABE1F16C();
  return sub_1ABF30004();
}

unint64_t sub_1ABE1F3FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC43700;
  if (!qword_1EEC43700)
  {
    sub_1ABE1F444();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC43700);
  }
  return result;
}

void sub_1ABE1F444()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEC43708)
  {
    v0 = sub_1ABF31A98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEC43708);
  }
}

void sub_1ABE1F498(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5AEDAB8;
}

uint64_t storeEnumTagSinglePayload for NewsDisplayConfiguration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ABE1F4F4 + 4 * byte_1ABF40045[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ABE1F528 + 4 * byte_1ABF40040[v4]))();
}

uint64_t sub_1ABE1F528(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE1F530(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE1F538);
  return result;
}

uint64_t sub_1ABE1F544(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE1F54CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ABE1F550(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE1F558(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NewsDisplayConfiguration()
{
  return &type metadata for NewsDisplayConfiguration;
}

void sub_1ABE1F574()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EEC431F8)
  {
    sub_1ABF2FF14();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EEC431F8);
  }
}

uint64_t sub_1ABE1F5D8@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t result;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v30 = a2;
  v3 = sub_1ABF30484();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1ABF3049C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[7];
  v38 = a1[6];
  v39 = v12;
  v40 = *((_QWORD *)a1 + 16);
  v13 = a1[3];
  v34 = a1[2];
  v35 = v13;
  v14 = a1[5];
  v36 = a1[4];
  v37 = v14;
  v15 = a1[1];
  v32 = *a1;
  v33 = v15;
  sub_1ABCF4DA8(0, (unint64_t *)&qword_1ED34CAD8, (uint64_t (*)(void))sub_1ABD94F2C, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C90BC0]);
  sub_1ABF31738();
  sub_1ABF30844();
  v16 = *MEMORY[0x1E0CAF9B8];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v17(v6, v16, v3);
  sub_1ABF304A8();
  v18 = MEMORY[0x1AF435F84](v11);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v29 = v3;
  v17(v6, v16, v3);
  sub_1ABF304A8();
  v19 = MEMORY[0x1AF435F84](v11);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v17(v6, v16, v3);
  sub_1ABF304A8();
  v20 = MEMORY[0x1AF435F84](v11);
  sub_1ABF2FF68();
  sub_1ABF31738();
  sub_1ABF30844();
  v17(v6, v16, v29);
  sub_1ABF304A8();
  v21 = MEMORY[0x1AF435F84](v11);
  v22 = v37;
  v29 = *((_QWORD *)&v36 + 1);
  v24 = *((_QWORD *)&v37 + 1);
  v23 = v38;
  v25 = v33;
  v31 = v33;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v31 = v25;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v31 = v34;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v31 = v35;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FD28();
  sub_1ABD97F60((uint64_t)&v32);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release();
  result = swift_release();
  v27 = v30;
  *v30 = v18;
  v27[1] = v19;
  v27[2] = v20;
  v27[3] = v21;
  v27[4] = v29;
  v27[5] = v22;
  v27[6] = v24;
  v27[7] = v23;
  return result;
}

uint64_t sub_1ABE1FB60()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE1FB80()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE1FBA0()
{
  return sub_1ABF2FD34();
}

__n128 sub_1ABE1FBC0@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _OWORD v12[8];
  uint64_t v13;

  v3 = a1[5];
  v4 = a1[7];
  v9 = a1[6];
  v10 = a1[4];
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD1C();
  sub_1ABF2FD1C();
  sub_1ABF2FD1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v11 = 0;
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABD15B80(*(uint64_t *)&v12[0], *((uint64_t *)&v12[0] + 1), *(uint64_t *)&v12[0], *((uint64_t *)&v12[0] + 1), *(uint64_t *)&v12[0], *((uint64_t *)&v12[0] + 1), &v11, v10, (uint64_t)v12, v3, v9, v4, 0, 0, 0, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v5 = v12[7];
  *(_OWORD *)(a2 + 96) = v12[6];
  *(_OWORD *)(a2 + 112) = v5;
  *(_QWORD *)(a2 + 128) = v13;
  v6 = v12[3];
  *(_OWORD *)(a2 + 32) = v12[2];
  *(_OWORD *)(a2 + 48) = v6;
  v7 = v12[5];
  *(_OWORD *)(a2 + 64) = v12[4];
  *(_OWORD *)(a2 + 80) = v7;
  result = (__n128)v12[1];
  *(_OWORD *)a2 = v12[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1ABE1FD58()
{
  uint64_t v1;

  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1ABE1FE10()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE1FE40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE1FEFC()
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE1FFBC()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE1FFEC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE20034()
{
  return sub_1ABF2FD34();
}

uint64_t sub_1ABE20054()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE20084@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE20140()
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE20204()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE20234(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE2027C()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE202AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE20368()
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE2042C()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE2045C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE204A4()
{
  uint64_t v1;

  sub_1ABF2FD1C();
  return v1;
}

uint64_t sub_1ABE204D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE20590()
{
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1ABE20654()
{
  return sub_1ABF2FD28();
}

uint64_t (*sub_1ABE20684(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1ABF2FD10();
  return sub_1ABD6817C;
}

uint64_t sub_1ABE206CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE206F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1ABF2FF5C();
  return v1;
}

uint64_t sub_1ABE20724@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1EEC41040 != -1)
    swift_once();
  *a1 = qword_1EEC43718;
  return sub_1ABF2FF68();
}

uint64_t sub_1ABE20774()
{
  if (qword_1EEC41040 != -1)
    swift_once();
  return sub_1ABF2FF68();
}

uint64_t sub_1ABE207B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1ABF2FF5C();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FD1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE20874@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41048 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC43720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE208E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EEC41048 != -1)
    swift_once();
  v2 = sub_1ABF30070();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EEC43720);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1ABE20954()
{
  sub_1ABE0BBAC();
  return sub_1ABF2FC5C();
}

uint64_t sub_1ABE20990@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1ABCF5A54(0, &qword_1ED346788, (uint64_t (*)(uint64_t))MEMORY[0x1E0C91480], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v21 = (char *)&v17 - v4;
  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], v2);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - v6;
  v8 = sub_1ABF3049C();
  v18 = *(_QWORD *)(v8 - 8);
  v19 = v8;
  MEMORY[0x1E0C80A78](v8);
  v20 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1ABF31768();
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v12 = *v1;
  v23 = v1[1];
  v24 = v12;
  v13 = v1[5];
  v14 = v1[7];
  sub_1ABF3175C();
  sub_1ABF31750();
  if (!v13)
  {
    if (!v14)
    {
      sub_1ABF2FF68();
      sub_1ABF2FF68();
      sub_1ABF2FF68();
      sub_1ABF2FF68();
      sub_1ABF2FD1C();
      swift_bridgeObjectRelease_n();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    sub_1ABF2FF5C();
  }
  sub_1ABF2FF5C();
  sub_1ABF31744();
  swift_bridgeObjectRelease();
  sub_1ABF31750();
  sub_1ABF30490();
  sub_1ABF3175C();
  sub_1ABF31750();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FD1C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1ABF31744();
  swift_bridgeObjectRelease();
  sub_1ABF31750();
  sub_1ABF30490();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v7, 0, 1, v19);
  v15 = sub_1ABF2FEFC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v21, 1, 1, v15);
  return sub_1ABF2FF08();
}

uint64_t sub_1ABE20D0C()
{
  sub_1ABE212F0();
  return sub_1ABF300B8();
}

_QWORD *sub_1ABE20D44()
{
  _QWORD *result;

  type metadata accessor for SymbolWidgetQuery();
  swift_allocObject();
  result = sub_1ABE01708();
  qword_1EEC43718 = (uint64_t)result;
  return result;
}

uint64_t sub_1ABE20D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  sub_1ABCF5A54(0, &qword_1ED34CAE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v12[0] = (char *)v12 - v1;
  v2 = sub_1ABF30484();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1ABF30880();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1ABF31774();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1ABF3049C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1ABF30070();
  __swift_allocate_value_buffer(v10, qword_1EEC43720);
  __swift_project_value_buffer(v10, (uint64_t)qword_1EEC43720);
  sub_1ABF31738();
  sub_1ABF30844();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0CAF9B8], v2);
  sub_1ABF304A8();
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v9 + 56))(v12[0], 1, 1, v8);
  sub_1ABCF5A54(0, &qword_1EEC421D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF9F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1ABF3E850;
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  sub_1ABF30478();
  return sub_1ABF30058();
}

unint64_t sub_1ABE2113C()
{
  unint64_t result;

  result = qword_1ED34C5E0;
  if (!qword_1ED34C5E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40368, &type metadata for SymbolWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C5E0);
  }
  return result;
}

unint64_t sub_1ABE21184()
{
  unint64_t result;

  result = qword_1ED34C5F0;
  if (!qword_1ED34C5F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF403A0, &type metadata for SymbolWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C5F0);
  }
  return result;
}

unint64_t sub_1ABE211CC()
{
  unint64_t result;

  result = qword_1ED34C618;
  if (!qword_1ED34C618)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF403D0, &type metadata for SymbolWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C618);
  }
  return result;
}

unint64_t sub_1ABE21214()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC43438;
  if (!qword_1EEC43438)
  {
    v1 = type metadata accessor for SymbolWidgetQuery();
    result = MEMORY[0x1AF438F30](&unk_1ABF3EC40, v1);
    atomic_store(result, (unint64_t *)&qword_1EEC43438);
  }
  return result;
}

unint64_t sub_1ABE21260()
{
  unint64_t result;

  result = qword_1ED34C5F8;
  if (!qword_1ED34C5F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40408, &type metadata for SymbolWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C5F8);
  }
  return result;
}

unint64_t sub_1ABE212A8()
{
  unint64_t result;

  result = qword_1ED34C600;
  if (!qword_1ED34C600)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40430, &type metadata for SymbolWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C600);
  }
  return result;
}

unint64_t sub_1ABE212F0()
{
  unint64_t result;

  result = qword_1ED34C608;
  if (!qword_1ED34C608)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF404B0, &type metadata for SymbolWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C608);
  }
  return result;
}

unint64_t sub_1ABE21338()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEC43738;
  if (!qword_1EEC43738)
  {
    sub_1ABCF4DA8(255, &qword_1EEC43740, (uint64_t (*)(void))sub_1ABD84154, (uint64_t)&type metadata for SymbolWidgetEntity, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C91980]);
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91998], v1);
    atomic_store(result, (unint64_t *)&qword_1EEC43738);
  }
  return result;
}

unint64_t sub_1ABE213A4()
{
  unint64_t result;

  result = qword_1ED34C610;
  if (!qword_1ED34C610)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF404E0, &type metadata for SymbolWidgetEntity);
    atomic_store(result, (unint64_t *)&qword_1ED34C610);
  }
  return result;
}

uint64_t destroy for SymbolWidgetEntity()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SymbolWidgetEntity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

_QWORD *assignWithCopy for SymbolWidgetEntity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF68();
  swift_release();
  a1[1] = a2[1];
  sub_1ABF2FF68();
  swift_release();
  a1[2] = a2[2];
  sub_1ABF2FF68();
  swift_release();
  a1[3] = a2[3];
  sub_1ABF2FF68();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SymbolWidgetEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolWidgetEntity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolWidgetEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolWidgetEntity()
{
  return &type metadata for SymbolWidgetEntity;
}

uint64_t sub_1ABE216C8()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1ABE217B0();
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  *(_QWORD *)(v0 + 16) = sub_1ABF2FC14();
  return v0;
}

uint64_t sub_1ABE21744()
{
  uint64_t v0;

  sub_1ABE217B0();
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  *(_QWORD *)(v0 + 16) = sub_1ABF2FC14();
  return v0;
}

void sub_1ABE217B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED34C7B8)
  {
    sub_1ABD68798();
    v0 = sub_1ABF2FC20();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED34C7B8);
  }
}

uint64_t sub_1ABE21804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = v1;
  return swift_task_switch();
}

uint64_t sub_1ABE2181C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[16] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[14];
  if (v4)
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    v0[12] = v5;
    sub_1ABD12448(0, (unint64_t *)&qword_1ED34FCB0);
    sub_1ABD16600();
    v8 = sub_1ABF316E4();
    v0[13] = sub_1ABD1FE2C(v8, v9, &v14);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching watchlists for entities with identifiers=[%s]", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v7, -1, -1);
    MEMORY[0x1AF438FFC](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v10 = v0[5];
  v11 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v10);
  v0[17] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(1, v10, v11);
  v12 = (_QWORD *)swift_task_alloc();
  v0[18] = v12;
  *v12 = v0;
  v12[1] = sub_1ABE21A90;
  return sub_1ABF31150();
}

uint64_t sub_1ABE21A90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE21B08()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 112);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v30 = v6;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 64) = v4;
    sub_1ABD12448(0, (unint64_t *)&qword_1ED34FCB0);
    sub_1ABD16600();
    v7 = sub_1ABF316E4();
    *(_QWORD *)(v0 + 72) = sub_1ABD1FE2C(v7, v8, &v30);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    v9 = *(_QWORD *)(v1 + 16);
    v10 = MEMORY[0x1E0DEE9D8];
    if (v9)
    {
      v25 = v6;
      v26 = v3;
      v27 = v5;
      v28 = v2;
      v31 = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v9, 0);
      v10 = v31;
      v11 = *(_QWORD *)(v31 + 16);
      v12 = 16 * v11;
      v29 = v1;
      v13 = (uint64_t *)(v1 + 40);
      do
      {
        v14 = *(v13 - 1);
        v15 = *v13;
        v31 = v10;
        v16 = v11 + 1;
        v17 = *(_QWORD *)(v10 + 24);
        sub_1ABF2FF5C();
        if (v11 >= v17 >> 1)
        {
          sub_1ABD16414(v17 > 1, v16, 1);
          v10 = v31;
        }
        *(_QWORD *)(v10 + 16) = v16;
        v18 = v10 + v12;
        *(_QWORD *)(v18 + 32) = v14;
        *(_QWORD *)(v18 + 40) = v15;
        v12 += 16;
        v13 += 6;
        ++v11;
        --v9;
      }
      while (v9);
      v2 = v28;
      v1 = v29;
      v5 = v27;
      v3 = v26;
      v6 = v25;
    }
    *(_QWORD *)(v0 + 80) = v10;
    v19 = sub_1ABF316E4();
    v21 = v20;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 88) = sub_1ABD1FE2C(v19, v21, &v30);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching watchlists for entities with identifiers=[%s], watchlists=[%s]", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v6, -1, -1);
    MEMORY[0x1AF438FFC](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v22 = *(_QWORD *)(v0 + 112);
  sub_1ABF2FF5C();
  v23 = sub_1ABE23264(v22, v1);
  swift_bridgeObjectRelease_n();
  return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v23);
}

uint64_t sub_1ABE21E34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_1ABE21E4C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[11] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetching watchlists for suggested entities.", v4, 2u);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v5 = v0[5];
  v6 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v5);
  v0[12] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(1, v5, v6);
  v7 = (_QWORD *)swift_task_alloc();
  v0[13] = v7;
  *v7 = v0;
  v7[1] = sub_1ABE21FB4;
  return sub_1ABF31150();
}

uint64_t sub_1ABE21FB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE2202C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  __int128 v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  NSObject *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39[3];
  _QWORD v40[5];
  __int16 v41;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v6 = v5;
    v39[0] = v5;
    *(_DWORD *)v4 = 136315138;
    v7 = *(_QWORD *)(v1 + 16);
    v8 = MEMORY[0x1E0DEE9D8];
    if (v7)
    {
      v32 = v5;
      v33 = v3;
      v34 = v4;
      v35 = v2;
      v40[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v7, 0);
      v8 = v40[0];
      v9 = *(_QWORD *)(v40[0] + 16);
      v10 = 16 * v9;
      v36 = v1;
      v11 = (uint64_t *)(v1 + 40);
      do
      {
        v12 = *(v11 - 1);
        v13 = *v11;
        v40[0] = v8;
        v14 = v9 + 1;
        v15 = *(_QWORD *)(v8 + 24);
        sub_1ABF2FF5C();
        if (v9 >= v15 >> 1)
        {
          sub_1ABD16414(v15 > 1, v14, 1);
          v8 = v40[0];
        }
        *(_QWORD *)(v8 + 16) = v14;
        v16 = v8 + v10;
        *(_QWORD *)(v16 + 32) = v12;
        *(_QWORD *)(v16 + 40) = v13;
        v10 += 16;
        v11 += 6;
        ++v9;
        --v7;
      }
      while (v7);
      v2 = v35;
      v1 = v36;
      v4 = v34;
      v3 = v33;
      v6 = v32;
    }
    *(_QWORD *)(v0 + 64) = v8;
    sub_1ABD12448(0, (unint64_t *)&qword_1ED34FCB0);
    sub_1ABD16600();
    v17 = sub_1ABF316E4();
    v19 = v18;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = sub_1ABD1FE2C(v17, v19, v39);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Fetched watchlists for suggested entities, watchlists=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v6, -1, -1);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v20 = *(_QWORD *)(v1 + 16);
  if (v20)
  {
    v38 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB5188(0, v20, 0);
    v21 = v38;
    v22 = v1 + 73;
    do
    {
      v23 = *(_QWORD *)(v22 - 33);
      v24 = *(_QWORD *)(v22 - 25);
      v25 = *(_QWORD *)(v22 - 17);
      v26 = *(_QWORD *)(v22 - 9);
      v27 = *(_WORD *)(v22 - 1);
      v40[0] = *(_QWORD *)(v22 - 41);
      v40[1] = v23;
      v40[2] = v24;
      v40[3] = v25;
      v40[4] = v26;
      v41 = v27;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABE1A8E0((uint64_t)v40, v39);
      v28 = *(_OWORD *)v39;
      v30 = *(_QWORD *)(v38 + 16);
      v29 = *(_QWORD *)(v38 + 24);
      if (v30 >= v29 >> 1)
      {
        v37 = *(_OWORD *)v39;
        sub_1ABDB5188(v29 > 1, v30 + 1, 1);
        v28 = v37;
      }
      v22 += 48;
      *(_QWORD *)(v38 + 16) = v30 + 1;
      *(_OWORD *)(v38 + 16 * v30 + 32) = v28;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x1E0DEE9D8];
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v21);
}

uint64_t sub_1ABE22394()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE223D4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE223EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;

  if (qword_1EEC41008 != -1)
    swift_once();
  v1 = qword_1EEC43630;
  v2 = *(_QWORD *)algn_1EEC43638;
  v3 = qword_1ED346718;
  sub_1ABF2FF68();
  sub_1ABF2FF68();
  if (v3 != -1)
    swift_once();
  v4 = sub_1ABF3133C();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED3466E0);
  swift_retain_n();
  swift_retain_n();
  v5 = sub_1ABF31324();
  v6 = sub_1ABF31BF4();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v11 = v10;
    *(_DWORD *)v7 = 136315138;
    sub_1ABF2FF68();
    sub_1ABF2FF68();
    sub_1ABF2FD1C();
    swift_release();
    swift_release();
    *(_QWORD *)(v0 + 16) = sub_1ABD1FE2C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &v11);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_1ABCEF000, v5, v6, "Default watchlist entity requested, returning '%s' watchlist", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v10, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_release_n();
  }

  v8 = *(uint64_t **)(v0 + 32);
  *v8 = v1;
  v8[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE22634()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1ABE22650()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1ABE22674@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = swift_allocObject();
  sub_1ABE217B0();
  sub_1ABF2FC44();
  sub_1ABF2FC38();
  result = sub_1ABF2FC14();
  *(_QWORD *)(v2 + 16) = result;
  *a1 = v2;
  return result;
}

uint64_t sub_1ABE226F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1ABD8C690;
  v5[14] = a1;
  v5[15] = v4;
  return swift_task_switch();
}

uint64_t sub_1ABE22758(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1ABD98460;
  v4[10] = v3;
  return swift_task_switch();
}

uint64_t sub_1ABE227BC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_1ABE23480((unint64_t *)&qword_1ED34C620, (uint64_t)&unk_1ABF40540);
  *v1 = v0;
  v1[1] = sub_1ABD37AA0;
  return sub_1ABF2FCC8();
}

uint64_t sub_1ABE22838(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1ABD37AA0;
  v3[4] = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE22898(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  return swift_task_switch();
}

uint64_t sub_1ABE228B4()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  if (qword_1ED346718 != -1)
    swift_once();
  v1 = sub_1ABF3133C();
  v0[17] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED3466E0);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[15];
  if (v4)
  {
    v6 = v0[14];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1ABF2FF5C();
    v0[13] = sub_1ABD1FE2C(v6, v5, &v13);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v3, "Querying watchlists matching string=%s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v8, -1, -1);
    MEMORY[0x1AF438FFC](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1ABF2FF68();
  sub_1ABF2FBF0();
  swift_release();
  v9 = v0[5];
  v10 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v9);
  v0[18] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(1, v9, v10);
  v11 = (_QWORD *)swift_task_alloc();
  v0[19] = v11;
  *v11 = v0;
  v11[1] = sub_1ABE22AF0;
  return sub_1ABF31150();
}

uint64_t sub_1ABE22AF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_1ABE22B68()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  __int128 v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v51;
  uint8_t *v52;
  NSObject *v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  os_log_type_t v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  _QWORD v64[5];
  __int16 v65;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain_n();
  v2 = sub_1ABF31324();
  v3 = sub_1ABF31BF4();
  if (os_log_type_enabled(v2, v3))
  {
    v59 = v3;
    v4 = (uint8_t *)swift_slowAlloc();
    v57 = swift_slowAlloc();
    *(_QWORD *)&v63 = v57;
    *(_DWORD *)v4 = 136315138;
    v5 = *(_QWORD *)(v1 + 16);
    v6 = MEMORY[0x1E0DEE9D8];
    if (v5)
    {
      v52 = v4;
      v54 = v2;
      v64[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v5, 0);
      v6 = v64[0];
      v7 = *(_QWORD *)(v64[0] + 16);
      v8 = 16 * v7;
      v56 = v1;
      v9 = (uint64_t *)(v1 + 40);
      do
      {
        v10 = *(v9 - 1);
        v11 = *v9;
        v64[0] = v6;
        v12 = v7 + 1;
        v13 = *(_QWORD *)(v6 + 24);
        sub_1ABF2FF5C();
        if (v7 >= v13 >> 1)
        {
          sub_1ABD16414(v13 > 1, v12, 1);
          v6 = v64[0];
        }
        *(_QWORD *)(v6 + 16) = v12;
        v14 = v6 + v8;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v11;
        v8 += 16;
        v9 += 6;
        ++v7;
        --v5;
      }
      while (v5);
      v2 = v54;
      v1 = v56;
      v4 = v52;
    }
    *(_QWORD *)(v0 + 88) = v6;
    sub_1ABD12448(0, (unint64_t *)&qword_1ED34FCB0);
    sub_1ABD16600();
    v15 = sub_1ABF316E4();
    v17 = v16;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 96) = sub_1ABD1FE2C(v15, v17, (uint64_t *)&v63);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v2, v59, "Fetched all watchlists for property query, watchlists=[%s]", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v57, -1, -1);
    MEMORY[0x1AF438FFC](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1ABF2FF5C();
  v18 = sub_1ABD94AE8(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v19 = sub_1ABF31324();
  v20 = sub_1ABF31BF4();
  v21 = os_log_type_enabled(v19, v20);
  v22 = *(_QWORD *)(v0 + 120);
  if (v21)
  {
    v60 = v20;
    v23 = *(_QWORD *)(v0 + 112);
    v24 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    *(_QWORD *)&v63 = v58;
    *(_DWORD *)v24 = 136315394;
    sub_1ABF2FF5C();
    *(_QWORD *)(v0 + 64) = sub_1ABD1FE2C(v23, v22, (uint64_t *)&v63);
    sub_1ABF31D80();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2080;
    v25 = *(_QWORD *)(v18 + 16);
    v26 = MEMORY[0x1E0DEE9D8];
    if (v25)
    {
      v51 = v24;
      v53 = v19;
      v64[0] = MEMORY[0x1E0DEE9D8];
      sub_1ABD16414(0, v25, 0);
      v26 = v64[0];
      v27 = *(_QWORD *)(v64[0] + 16);
      v28 = v18;
      v29 = 16 * v27;
      v55 = v28;
      v30 = (uint64_t *)(v28 + 40);
      do
      {
        v31 = *(v30 - 1);
        v32 = *v30;
        v64[0] = v26;
        v33 = v27 + 1;
        v34 = *(_QWORD *)(v26 + 24);
        sub_1ABF2FF5C();
        if (v27 >= v34 >> 1)
        {
          sub_1ABD16414(v34 > 1, v33, 1);
          v26 = v64[0];
        }
        *(_QWORD *)(v26 + 16) = v33;
        v35 = v26 + v29;
        *(_QWORD *)(v35 + 32) = v31;
        *(_QWORD *)(v35 + 40) = v32;
        v29 += 16;
        v30 += 6;
        ++v27;
        --v25;
      }
      while (v25);
      v19 = v53;
      v18 = v55;
      v24 = v51;
    }
    *(_QWORD *)(v0 + 72) = v26;
    sub_1ABD12448(0, (unint64_t *)&qword_1ED34FCB0);
    sub_1ABD16600();
    v36 = sub_1ABF316E4();
    v38 = v37;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 80) = sub_1ABD1FE2C(v36, v38, (uint64_t *)&v63);
    sub_1ABF31D80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1ABCEF000, v19, v60, "Filtered down watchlists matching string=%s, watchlists=[%s]", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF438FFC](v58, -1, -1);
    MEMORY[0x1AF438FFC](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v39 = *(_QWORD *)(v18 + 16);
  if (v39)
  {
    v62 = MEMORY[0x1E0DEE9D8];
    sub_1ABDB5188(0, v39, 0);
    v40 = v62;
    v41 = v18 + 73;
    do
    {
      v42 = *(_QWORD *)(v41 - 33);
      v43 = *(_QWORD *)(v41 - 25);
      v44 = *(_QWORD *)(v41 - 17);
      v45 = *(_QWORD *)(v41 - 9);
      v46 = *(_WORD *)(v41 - 1);
      v64[0] = *(_QWORD *)(v41 - 41);
      v64[1] = v42;
      v64[2] = v43;
      v64[3] = v44;
      v64[4] = v45;
      v65 = v46;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABE1A8E0((uint64_t)v64, (uint64_t *)&v63);
      v47 = v63;
      v49 = *(_QWORD *)(v62 + 16);
      v48 = *(_QWORD *)(v62 + 24);
      if (v49 >= v48 >> 1)
      {
        v61 = v63;
        sub_1ABDB5188(v48 > 1, v49 + 1, 1);
        v47 = v61;
      }
      v41 += 48;
      *(_QWORD *)(v62 + 16) = v49 + 1;
      *(_OWORD *)(v62 + 16 * v49 + 32) = v47;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v40 = MEMORY[0x1E0DEE9D8];
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v40);
}

uint64_t sub_1ABE231AC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ABE231EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;

  *(_QWORD *)(v4 + 16) = a1;
  v7 = *v3;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v8;
  *v8 = v4;
  v8[1] = sub_1ABD8D5B0;
  v8[15] = a3;
  v8[16] = v7;
  v8[14] = a2;
  return swift_task_switch();
}

_QWORD *sub_1ABE23264(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  _QWORD v29[5];
  char v30;
  char v31;
  __int128 v32;
  int v33;

  v24 = *(_QWORD *)(a1 + 16);
  if (!v24)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v23 = a1 + 32;
  v3 = *(_QWORD *)(a2 + 16);
  sub_1ABF2FF5C();
  v4 = 0;
  v21 = (char *)(a2 + 73);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v22 = v3;
  do
  {
    if (v3)
    {
      v25 = v4;
      v26 = v5;
      v6 = (uint64_t *)(v23 + 16 * v4);
      v7 = *v6;
      v8 = v6[1];
      v9 = v21;
      while (1)
      {
        v27 = *(_QWORD *)(v9 - 41);
        v10 = *(_QWORD *)(v9 - 33);
        v11 = *(_QWORD *)(v9 - 25);
        v12 = *(_QWORD *)(v9 - 17);
        v13 = *(_QWORD *)(v9 - 9);
        v33 = *(v9 - 1);
        v14 = *v9;
        if (v12 == v7 && v13 == v8)
          break;
        v16 = v7;
        v17 = v8;
        if ((sub_1ABF3223C() & 1) != 0)
          goto LABEL_16;
        v9 += 48;
        --v3;
        v7 = v16;
        v8 = v17;
        if (!v3)
        {
          v3 = v22;
          v5 = v26;
          goto LABEL_4;
        }
      }
      v12 = v7;
      v13 = v8;
LABEL_16:
      v29[0] = v27;
      v29[1] = v10;
      v29[2] = v11;
      v29[3] = v12;
      v29[4] = v13;
      v30 = v33;
      v31 = v14;
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      sub_1ABE1A8E0((uint64_t)v29, (uint64_t *)&v32);
      v28 = v32;
      v5 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1ABD82F84(0, v26[2] + 1, 1, v26);
      v3 = v22;
      v19 = v5[2];
      v18 = v5[3];
      if (v19 >= v18 >> 1)
        v5 = sub_1ABD82F84((_QWORD *)(v18 > 1), v19 + 1, 1, v5);
      v5[2] = v19 + 1;
      *(_OWORD *)&v5[2 * v19 + 4] = v28;
LABEL_4:
      v4 = v25;
    }
    ++v4;
  }
  while (v4 != v24);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1ABE2345C()
{
  return sub_1ABE23480(&qword_1ED34C630, (uint64_t)&unk_1ABF40598);
}

uint64_t sub_1ABE23480(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WatchlistWidgetQuery();
    result = MEMORY[0x1AF438F30](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for WatchlistWidgetQuery()
{
  return objc_opt_self();
}

uint64_t sub_1ABE234DC()
{
  return sub_1ABE23480(&qword_1ED34C638, (uint64_t)&unk_1ABF405F8);
}

uint64_t sub_1ABE23504()
{
  return sub_1ABE23480(&qword_1ED34C628, (uint64_t)&unk_1ABF40620);
}

unint64_t sub_1ABE2352C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC43778;
  if (!qword_1EEC43778)
  {
    sub_1ABD12448(255, qword_1EEC43780);
    v2 = v1;
    v3 = sub_1ABE1B60C();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0C91CE0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC43778);
  }
  return result;
}

uint64_t sub_1ABE2359C()
{
  return sub_1ABE23480((unint64_t *)&qword_1ED34C620, (uint64_t)&unk_1ABF40540);
}

uint64_t sub_1ABE235C0()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1ABE235CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteSource()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteSource;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus;
}

uint64_t destroy for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 536))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v4 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v4;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v5 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v5;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v6 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v6;
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v7 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v7;
  v8 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v8;
  v9 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v9;
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  v10 = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v10;
  v11 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v11;
  v12 = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v12;
  v13 = *(_QWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = v13;
  v14 = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = v14;
  v15 = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v15;
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(a2 + 353);
  v16 = *(_QWORD *)(a2 + 360);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = v16;
  v17 = *(_QWORD *)(a2 + 376);
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = v17;
  v18 = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = v18;
  v19 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v19;
  v20 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v20;
  v21 = *(_QWORD *)(a2 + 440);
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = v21;
  v22 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v22;
  v23 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = v23;
  v24 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v24;
  v25 = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = v25;
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  v26 = *(_QWORD *)(a2 + 536);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v26)
  {
    *(_QWORD *)(a1 + 536) = v26;
    *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  }
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
  v6 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 57) = *((_BYTE *)a2 + 57);
  v8 = a2[8];
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = a2[10];
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = a2[13];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v10 = a2[14];
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_QWORD *)(a1 + 112) = v10;
  v11 = a2[16];
  *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
  *(_QWORD *)(a1 + 128) = v11;
  v12 = a2[18];
  *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
  *(_QWORD *)(a1 + 144) = v12;
  *(_QWORD *)(a1 + 160) = a2[20];
  *(_QWORD *)(a1 + 168) = a2[21];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v13 = a2[22];
  *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
  *(_QWORD *)(a1 + 176) = v13;
  v14 = a2[24];
  *(_BYTE *)(a1 + 200) = *((_BYTE *)a2 + 200);
  *(_QWORD *)(a1 + 192) = v14;
  *(_QWORD *)(a1 + 208) = a2[26];
  *(_QWORD *)(a1 + 216) = a2[27];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = a2[28];
  *(_QWORD *)(a1 + 232) = a2[29];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = a2[30];
  *(_QWORD *)(a1 + 248) = a2[31];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *((_BYTE *)a2 + 256);
  v15 = a2[33];
  *(_BYTE *)(a1 + 272) = *((_BYTE *)a2 + 272);
  *(_QWORD *)(a1 + 264) = v15;
  *(_QWORD *)(a1 + 280) = a2[35];
  *(_QWORD *)(a1 + 288) = a2[36];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v16 = a2[37];
  *(_BYTE *)(a1 + 304) = *((_BYTE *)a2 + 304);
  *(_QWORD *)(a1 + 296) = v16;
  v17 = a2[39];
  *(_BYTE *)(a1 + 320) = *((_BYTE *)a2 + 320);
  *(_QWORD *)(a1 + 312) = v17;
  v18 = a2[41];
  *(_BYTE *)(a1 + 336) = *((_BYTE *)a2 + 336);
  *(_QWORD *)(a1 + 328) = v18;
  v19 = a2[43];
  *(_BYTE *)(a1 + 352) = *((_BYTE *)a2 + 352);
  *(_QWORD *)(a1 + 344) = v19;
  *(_BYTE *)(a1 + 353) = *((_BYTE *)a2 + 353);
  v20 = a2[45];
  *(_BYTE *)(a1 + 368) = *((_BYTE *)a2 + 368);
  *(_QWORD *)(a1 + 360) = v20;
  v21 = a2[47];
  *(_BYTE *)(a1 + 384) = *((_BYTE *)a2 + 384);
  *(_QWORD *)(a1 + 376) = v21;
  v22 = a2[49];
  *(_BYTE *)(a1 + 400) = *((_BYTE *)a2 + 400);
  *(_QWORD *)(a1 + 392) = v22;
  *(_QWORD *)(a1 + 408) = a2[51];
  *(_QWORD *)(a1 + 416) = a2[52];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 424) = a2[53];
  *(_QWORD *)(a1 + 432) = a2[54];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v23 = a2[55];
  *(_WORD *)(a1 + 448) = *((_WORD *)a2 + 224);
  *(_QWORD *)(a1 + 440) = v23;
  *(_QWORD *)(a1 + 456) = a2[57];
  *(_QWORD *)(a1 + 464) = a2[58];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 472) = a2[59];
  *(_QWORD *)(a1 + 480) = a2[60];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 488) = a2[61];
  *(_QWORD *)(a1 + 496) = a2[62];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 504) = a2[63];
  *(_QWORD *)(a1 + 512) = a2[64];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 520) = a2[65];
  *(_QWORD *)(a1 + 528) = a2[66];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v24 = a2[67];
  if (!*(_QWORD *)(a1 + 536))
  {
    if (v24)
    {
      *(_QWORD *)(a1 + 536) = v24;
      *(_QWORD *)(a1 + 544) = a2[68];
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 67);
    goto LABEL_8;
  }
  if (!v24)
  {
    sub_1ABE23DEC(a1 + 536);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 536) = v24;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 544) = a2[68];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
LABEL_8:
  *(_QWORD *)(a1 + 552) = a2[69];
  *(_QWORD *)(a1 + 560) = a2[70];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 568) = a2[71];
  *(_QWORD *)(a1 + 576) = a2[72];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABE23DEC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy584_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x248uLL);
}

uint64_t assignWithTake for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v4 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v5 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  v6 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  v9 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  v10 = *(_QWORD *)(a2 + 360);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = v10;
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  v11 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 432) = v12;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_WORD *)(a1 + 448) = *(_WORD *)(a2 + 448);
  v13 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 512) = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 536))
    goto LABEL_5;
  v17 = *(_QWORD *)(a2 + 536);
  if (!v17)
  {
    sub_1ABE23DEC(a1 + 536);
LABEL_5:
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 536) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 584))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 104);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 584) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 584) = 0;
    if (a2)
      *(_QWORD *)(result + 104) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem;
}

_QWORD *assignWithCopy for SDSQuoteResponse.SDSFundComposition(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SDSQuoteResponse.SDSFundComposition(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition;
}

uint64_t destroy for SDSQuoteResponse.SDSQuoteResponseItem(_QWORD *a1)
{
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    if (a1[4] != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[26] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[80])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SDSQuoteResponse.SDSQuoteResponseItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = v4;
    v5 = *(_QWORD *)(a2 + 32);
    sub_1ABF2FF5C();
    if (v5 == 1)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
    }
    else
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v5;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      sub_1ABF2FF5C();
    }
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  v10 = *(_QWORD *)(a2 + 208);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v10 == 1)
  {
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x248uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
    *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v10;
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    v11 = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = v11;
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    v12 = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = v12;
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    v13 = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = v13;
    v14 = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = v14;
    v15 = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = v15;
    *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
    v16 = *(_QWORD *)(a2 + 368);
    *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
    *(_QWORD *)(a1 + 368) = v16;
    v17 = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = v17;
    v18 = *(_QWORD *)(a2 + 400);
    *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
    *(_QWORD *)(a1 + 400) = v18;
    v19 = *(_QWORD *)(a2 + 416);
    *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
    *(_QWORD *)(a1 + 416) = v19;
    v20 = *(_QWORD *)(a2 + 432);
    *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
    *(_QWORD *)(a1 + 432) = v20;
    v21 = *(_QWORD *)(a2 + 448);
    *(_BYTE *)(a1 + 456) = *(_BYTE *)(a2 + 456);
    *(_QWORD *)(a1 + 448) = v21;
    *(_BYTE *)(a1 + 457) = *(_BYTE *)(a2 + 457);
    v22 = *(_QWORD *)(a2 + 464);
    *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
    *(_QWORD *)(a1 + 464) = v22;
    v23 = *(_QWORD *)(a2 + 480);
    *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
    *(_QWORD *)(a1 + 480) = v23;
    v24 = *(_QWORD *)(a2 + 496);
    *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
    *(_QWORD *)(a1 + 496) = v24;
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
    v25 = *(_QWORD *)(a2 + 544);
    *(_WORD *)(a1 + 552) = *(_WORD *)(a2 + 552);
    *(_QWORD *)(a1 + 544) = v25;
    *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
    *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
    *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
    *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
    *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
    *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
    *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
    *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
    *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
    v26 = *(_QWORD *)(a2 + 640);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
    if (v26)
    {
      *(_QWORD *)(a1 + 640) = v26;
      *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
    }
    else
    {
      *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
    }
    *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
    *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
    *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
    *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for SDSQuoteResponse.SDSQuoteResponseItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v4)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v16 = *(_OWORD *)(a2 + 16);
      v17 = *(_OWORD *)(a2 + 32);
      v18 = *(_OWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v17;
      *(_OWORD *)(a1 + 48) = v18;
      *(_OWORD *)(a1 + 16) = v16;
      goto LABEL_16;
    }
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 32);
    sub_1ABF2FF5C();
    if (v9 == 1)
    {
      v10 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
      *(_OWORD *)(a1 + 24) = v10;
      goto LABEL_15;
    }
LABEL_10:
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v14 = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v14;
    sub_1ABF2FF5C();
    goto LABEL_15;
  }
  if (!v4)
  {
    sub_1ABE25214(a1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v12 = *(_OWORD *)(a2 + 32);
    v11 = *(_OWORD *)(a2 + 48);
    v13 = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v12;
    *(_OWORD *)(a1 + 48) = v11;
    *(_OWORD *)(a1 + 16) = v13;
    goto LABEL_16;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a1 + 24);
  v6 = (_OWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    if (v7 == 1)
    {
      sub_1ABDE55E4(a1 + 24);
      v15 = *(_OWORD *)(a2 + 33);
      *v5 = *v6;
      *(_OWORD *)(a1 + 33) = v15;
    }
    else
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      sub_1ABF2FF5C();
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v19;
    }
    goto LABEL_15;
  }
  if (v7 != 1)
    goto LABEL_10;
  v8 = *v6;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  *v5 = v8;
LABEL_15:
  v20 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v20;
LABEL_16:
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v21 = (_QWORD *)(a1 + 104);
  v22 = (uint64_t *)(a2 + 104);
  v23 = *(_QWORD *)(a2 + 208);
  if (*(_QWORD *)(a1 + 208) != 1)
  {
    if (v23 == 1)
    {
      sub_1ABE25240(a1 + 104);
      goto LABEL_22;
    }
    v45 = *v22;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *v21 = v45;
    v46 = *(_QWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = v46;
    *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
    v47 = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v47;
    v48 = *(_QWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
    *(_QWORD *)(a1 + 152) = v48;
    *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
    v49 = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = v49;
    v50 = *(_QWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = v50;
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    v51 = *(_QWORD *)(a2 + 216);
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    *(_QWORD *)(a1 + 216) = v51;
    v52 = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = v52;
    v53 = *(_QWORD *)(a2 + 248);
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    *(_QWORD *)(a1 + 248) = v53;
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    v54 = *(_QWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    *(_QWORD *)(a1 + 280) = v54;
    v55 = *(_QWORD *)(a2 + 296);
    *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
    *(_QWORD *)(a1 + 296) = v55;
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
    v56 = *(_QWORD *)(a2 + 368);
    *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
    *(_QWORD *)(a1 + 368) = v56;
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    v57 = *(_QWORD *)(a2 + 400);
    *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
    *(_QWORD *)(a1 + 400) = v57;
    v58 = *(_QWORD *)(a2 + 416);
    *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
    *(_QWORD *)(a1 + 416) = v58;
    v59 = *(_QWORD *)(a2 + 432);
    *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
    *(_QWORD *)(a1 + 432) = v59;
    v60 = *(_QWORD *)(a2 + 448);
    *(_BYTE *)(a1 + 456) = *(_BYTE *)(a2 + 456);
    *(_QWORD *)(a1 + 448) = v60;
    *(_BYTE *)(a1 + 457) = *(_BYTE *)(a2 + 457);
    v61 = *(_QWORD *)(a2 + 464);
    *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
    *(_QWORD *)(a1 + 464) = v61;
    v62 = *(_QWORD *)(a2 + 480);
    *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
    *(_QWORD *)(a1 + 480) = v62;
    v63 = *(_QWORD *)(a2 + 496);
    *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
    *(_QWORD *)(a1 + 496) = v63;
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    v64 = *(_QWORD *)(a2 + 544);
    *(_WORD *)(a1 + 552) = *(_WORD *)(a2 + 552);
    *(_QWORD *)(a1 + 544) = v64;
    *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
    *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
    *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
    *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
    *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    v65 = *(_QWORD *)(a2 + 640);
    if (*(_QWORD *)(a1 + 640))
    {
      if (v65)
      {
        *(_QWORD *)(a1 + 640) = v65;
        sub_1ABF2FF5C();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
        sub_1ABF2FF5C();
        swift_bridgeObjectRelease();
LABEL_32:
        *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
        *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
        sub_1ABF2FF5C();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
        *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
        sub_1ABF2FF5C();
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      sub_1ABE23DEC(a1 + 640);
    }
    else if (v65)
    {
      *(_QWORD *)(a1 + 640) = v65;
      *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
      sub_1ABF2FF5C();
      sub_1ABF2FF5C();
      goto LABEL_32;
    }
    *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
    goto LABEL_32;
  }
  if (v23 == 1)
  {
LABEL_22:
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x248uLL);
    goto LABEL_33;
  }
  v24 = *v22;
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *v21 = v24;
  v25 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v25;
  *(_BYTE *)(a1 + 129) = *(_BYTE *)(a2 + 129);
  v26 = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v26;
  v27 = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v27;
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  v28 = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v28;
  v29 = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v29;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v30 = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v30;
  v31 = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v31;
  v32 = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v32;
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  v33 = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = v33;
  v34 = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v34;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
  v35 = *(_QWORD *)(a2 + 368);
  *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = v35;
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  v36 = *(_QWORD *)(a2 + 400);
  *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = v36;
  v37 = *(_QWORD *)(a2 + 416);
  *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = v37;
  v38 = *(_QWORD *)(a2 + 432);
  *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
  *(_QWORD *)(a1 + 432) = v38;
  v39 = *(_QWORD *)(a2 + 448);
  *(_BYTE *)(a1 + 456) = *(_BYTE *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = v39;
  *(_BYTE *)(a1 + 457) = *(_BYTE *)(a2 + 457);
  v40 = *(_QWORD *)(a2 + 464);
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = v40;
  v41 = *(_QWORD *)(a2 + 480);
  *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = v41;
  v42 = *(_QWORD *)(a2 + 496);
  *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = v42;
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  v43 = *(_QWORD *)(a2 + 544);
  *(_WORD *)(a1 + 552) = *(_WORD *)(a2 + 552);
  *(_QWORD *)(a1 + 544) = v43;
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  v44 = *(_QWORD *)(a2 + 640);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
  if (v44)
  {
    *(_QWORD *)(a1 + 640) = v44;
    *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
    sub_1ABF2FF5C();
    sub_1ABF2FF5C();
  }
  else
  {
    *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  }
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
  sub_1ABF2FF5C();
  sub_1ABF2FF5C();
LABEL_33:
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1ABE25214(uint64_t a1)
{
  destroy for SDSQuoteResponse.SDSQuoteResponseChartItem(a1);
  return a1;
}

uint64_t sub_1ABE25240(uint64_t a1)
{
  destroy for SDSQuoteResponse.SDSQuoteResponseQuoteItem(a1);
  return a1;
}

void *__swift_memcpy776_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x308uLL);
}

uint64_t assignWithTake for SDSQuoteResponse.SDSQuoteResponseItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_8;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    sub_1ABE25214(a1);
LABEL_8:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    goto LABEL_11;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    v5 = *(_QWORD *)(a2 + 32);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      goto LABEL_10;
    }
    sub_1ABDE55E4(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
LABEL_10:
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
LABEL_11:
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 208) != 1)
  {
    v10 = *(_QWORD *)(a2 + 208);
    if (v10 == 1)
    {
      sub_1ABE25240(a1 + 104);
      goto LABEL_14;
    }
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
    *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v10;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    v11 = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 272) = v11;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
    *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
    v12 = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 320) = v12;
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 336) = v13;
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 352) = v14;
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
    v15 = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = v15;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_BYTE *)(a1 + 408) = *(_BYTE *)(a2 + 408);
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    *(_BYTE *)(a1 + 424) = *(_BYTE *)(a2 + 424);
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
    *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
    *(_WORD *)(a1 + 456) = *(_WORD *)(a2 + 456);
    v16 = *(_QWORD *)(a2 + 464);
    *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
    *(_QWORD *)(a1 + 464) = v16;
    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
    *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
    *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
    *(_BYTE *)(a1 + 504) = *(_BYTE *)(a2 + 504);
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
    *(_WORD *)(a1 + 552) = *(_WORD *)(a2 + 552);
    *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
    *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
    *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
    *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
    *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 640))
    {
      v17 = *(_QWORD *)(a2 + 640);
      if (v17)
      {
        *(_QWORD *)(a1 + 640) = v17;
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
        swift_bridgeObjectRelease();
LABEL_20:
        *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
        *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
        *(_QWORD *)(a1 + 680) = *(_QWORD *)(a2 + 680);
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      sub_1ABE23DEC(a1 + 640);
    }
    *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
    goto LABEL_20;
  }
LABEL_14:
  memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0x248uLL);
LABEL_21:
  *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
  *(_QWORD *)(a1 + 744) = *(_QWORD *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 776))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 728);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 776) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 728) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 776) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseItem()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseItem;
}

uint64_t destroy for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 32);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  sub_1ABF2FF5C();
  if (v4 == 1)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  }
  else
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v4;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    sub_1ABF2FF5C();
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 24);
  v5 = (__int128 *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
      *v4 = v7;
    }
    else
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      v9 = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      sub_1ABF2FF5C();
    }
  }
  else if (v6 == 1)
  {
    sub_1ABDE55E4(a1 + 24);
    v8 = *(_OWORD *)(a2 + 33);
    *v4 = *v5;
    *(_OWORD *)(a1 + 33) = v8;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    sub_1ABF2FF5C();
    swift_bridgeObjectRelease();
    v10 = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v10;
  }
  v11 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v11;
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    v4 = *(_QWORD *)(a2 + 32);
    if (v4 != 1)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v4;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      goto LABEL_6;
    }
    sub_1ABDE55E4(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
LABEL_6:
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseChartItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseChartItem()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem;
}

uint64_t initializeWithCopy for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  sub_1ABF2FF5C();
  return a1;
}

uint64_t assignWithCopy for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_1ABF2FF5C();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse()
{
  return &type metadata for SDSQuoteResponse;
}

uint64_t sub_1ABE25D7C(char *a1, char *a2)
{
  return sub_1ABDE2D9C(*a1, *a2);
}

uint64_t sub_1ABE25D88()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE25E0C()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE25E6C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE25EEC@<X0>(char *a1@<X8>)
{
  return sub_1ABDE74C0(a1);
}

void sub_1ABE25EF8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7365746F7571;
  if (*v1)
    v2 = 0x646174654D736473;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xEB00000000617461;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABE25F3C()
{
  _BYTE *v0;

  if (*v0)
    return 0x646174654D736473;
  else
    return 0x7365746F7571;
}

uint64_t sub_1ABE25F7C@<X0>(char *a1@<X8>)
{
  return sub_1ABDE75A0(a1);
}

uint64_t sub_1ABE25F88()
{
  sub_1ABE2BAC4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE25FB0()
{
  sub_1ABE2BAC4();
  return sub_1ABF32398();
}

uint64_t sub_1ABE25FD8(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[5];
  _BYTE v12[40];
  char v13;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1EEC438D8, (uint64_t (*)(void))sub_1ABE2BAC4, (uint64_t)&type metadata for SDSQuoteResponse.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2BAC4();
  sub_1ABF32368();
  v11[0] = *v3;
  v13 = 0;
  sub_1ABD04578(0, &qword_1ED34DF18, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABE2FA88();
  sub_1ABF321D0();
  if (!v2)
  {
    sub_1ABD843F0((uint64_t)(v3 + 1), (uint64_t)v12, &qword_1ED34EBB0, (uint64_t)&type metadata for SDSMetadata);
    sub_1ABD843F0((uint64_t)v12, (uint64_t)v11, &qword_1ED34EBB0, (uint64_t)&type metadata for SDSMetadata);
    v13 = 1;
    sub_1ABD46480();
    sub_1ABF3217C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1ABE26188(char *a1)
{
  sub_1ABDE3124(*a1);
}

void sub_1ABE26194()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABE261E4()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABE2626C()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABE262AC()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABE26320()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABE2636C()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE263F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2E440();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE26428()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABE2645C + 4 * byte_1ABF406DC[*v0]))();
}

void sub_1ABE2645C(_QWORD *a1@<X8>)
{
  *a1 = 0x73656972746E65;
  a1[1] = 0xE700000000000000;
}

void sub_1ABE26478(char *a1@<X8>)
{
  strcpy(a1, "marketTimeZone");
  a1[15] = -18;
}

void sub_1ABE264A0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "previousClose");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1ABE264C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE264FC + 4 * byte_1ABF406E0[*v0]))(0x676E615265746164, 0xE900000000000065);
}

uint64_t sub_1ABE264FC()
{
  return 0x73656972746E65;
}

uint64_t sub_1ABE26514()
{
  return 0x695474656B72616DLL;
}

uint64_t sub_1ABE26538()
{
  return 0x73756F6976657270;
}

uint64_t sub_1ABE2655C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2E440();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE26588()
{
  sub_1ABE2F700();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE265B0()
{
  sub_1ABE2F700();
  return sub_1ABF32398();
}

uint64_t sub_1ABE265D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _OWORD v11[2];
  _BYTE v12[32];
  char v13;

  v3 = v1;
  sub_1ABCF4DA8(0, &qword_1EEC43898, (uint64_t (*)(void))sub_1ABE2F700, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2F700();
  sub_1ABF32368();
  v11[0] = *(_OWORD *)v3;
  v13 = 0;
  sub_1ABE2F888();
  sub_1ABF321D0();
  if (!v2)
  {
    *(_QWORD *)&v11[0] = *(_QWORD *)(v3 + 16);
    v13 = 1;
    sub_1ABD04578(0, &qword_1ED346F18, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABE2F8CC();
    sub_1ABF321D0();
    sub_1ABD843F0(v3 + 24, (uint64_t)v12, &qword_1EEC438B8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset);
    sub_1ABD843F0((uint64_t)v12, (uint64_t)v11, &qword_1EEC438B8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset);
    v13 = 2;
    sub_1ABD04578(0, &qword_1EEC438B8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABE2F988();
    sub_1ABF321D0();
    LOBYTE(v11[0]) = 3;
    sub_1ABF32158();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ABE26810(char *a1, char *a2)
{
  return sub_1ABDE308C(*a1, *a2);
}

uint64_t sub_1ABE2681C()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE26890()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE268E0()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE26950@<X0>(char *a1@<X8>)
{
  return sub_1ABDE74C0(a1);
}

void sub_1ABE2695C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701080931;
  if (*v1)
    v2 = 0x74657366666FLL;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABE26990()
{
  _BYTE *v0;

  if (*v0)
    return 0x74657366666FLL;
  else
    return 1701080931;
}

uint64_t sub_1ABE269C0@<X0>(char *a1@<X8>)
{
  return sub_1ABDE75A0(a1);
}

uint64_t sub_1ABE269CC()
{
  sub_1ABE2FA44();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE269F4()
{
  sub_1ABE2FA44();
  return sub_1ABF32398();
}

uint64_t sub_1ABE26A1C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;

  v17[0] = a4;
  v20 = a5;
  sub_1ABCF4DA8(0, &qword_1EEC438D0, (uint64_t (*)(void))sub_1ABE2FA44, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys, MEMORY[0x1E0DED170]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v17 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2FA44();
  sub_1ABF32368();
  v18 = a2;
  v19 = a3;
  v21 = 0;
  v13 = MEMORY[0x1E0DEA968];
  sub_1ABD04578(0, (unint64_t *)&qword_1ED34FB80, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1ABE2F174((unint64_t *)&qword_1EEC43878, (unint64_t *)&qword_1ED34FB80, v13, MEMORY[0x1E0DEA970]);
  v14 = v17[1];
  sub_1ABF321D0();
  if (!v14)
  {
    v18 = v17[0];
    LOBYTE(v19) = v20 & 1;
    v21 = 1;
    v15 = MEMORY[0x1E0DEB418];
    sub_1ABD04578(0, &qword_1ED34E000, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABE2F174(&qword_1EEC437B8, &qword_1ED34E000, v15, MEMORY[0x1E0DEB420]);
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1ABE26C10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char v7;

  result = sub_1ABE2BEC8(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 24) = v7 & 1;
  }
  return result;
}

uint64_t sub_1ABE26C44(_QWORD *a1)
{
  uint64_t v1;

  return sub_1ABE26A1C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1ABE26C64(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_1ABF3223C() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

__n128 sub_1ABE26CBC@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  char v7;

  sub_1ABE2BC08(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_BYTE *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1ABE26D0C(_QWORD *a1)
{
  return sub_1ABE265D8(a1);
}

uint64_t sub_1ABE26D4C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  char v8;
  _OWORD v9[4];
  char v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_BYTE *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_BYTE *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1ABE2B560((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1ABE26DA4(char *a1, char *a2)
{
  return sub_1ABDE2FE4(*a1, *a2);
}

uint64_t sub_1ABE26DB0()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE26E34()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE26E94()
{
  sub_1ABF32308();
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE26F14@<X0>(char *a1@<X8>)
{
  return sub_1ABDE74C0(a1);
}

void sub_1ABE26F20(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65746144646E65;
  if (*v1)
    v2 = 0x7461447472617473;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE900000000000065;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1ABE26F64()
{
  _BYTE *v0;

  if (*v0)
    return 0x7461447472617473;
  else
    return 0x65746144646E65;
}

uint64_t sub_1ABE26FA4@<X0>(char *a1@<X8>)
{
  return sub_1ABDE75A0(a1);
}

uint64_t sub_1ABE26FB0()
{
  sub_1ABE30880();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE26FD8()
{
  sub_1ABE30880();
  return sub_1ABF32398();
}

uint64_t sub_1ABE27000(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v11[1] = a3;
  sub_1ABCF4DA8(0, &qword_1EEC43978, (uint64_t (*)(void))sub_1ABE30880, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys, MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE30880();
  sub_1ABF32368();
  v13 = 0;
  sub_1ABF321B8();
  if (!v3)
  {
    v12 = 1;
    sub_1ABF321B8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1ABE27138@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1ABE2C060(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1ABE27160(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABE27000(a1, *v1, v1[1]);
}

BOOL sub_1ABE27178(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void sub_1ABE27190(char *a1)
{
  sub_1ABDE2E44(*a1);
}

void sub_1ABE2719C()
{
  char *v0;

  sub_1ABF0F684(*v0);
}

void sub_1ABE271A4()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABE271DC()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABE27258(uint64_t a1)
{
  char *v1;

  sub_1ABF10350(a1, *v1);
}

uint64_t sub_1ABE27260@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2E484();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE27294()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABE272C0 + 4 * byte_1ABF406EA[*v0]))();
}

void sub_1ABE272C0(_QWORD *a1@<X8>)
{
  *a1 = 1751607656;
  a1[1] = 0xE400000000000000;
}

void sub_1ABE272D4(_QWORD *a1@<X8>)
{
  *a1 = 7827308;
  a1[1] = 0xE300000000000000;
}

void sub_1ABE272E8(_QWORD *a1@<X8>)
{
  *a1 = 1852141679;
  a1[1] = 0xE400000000000000;
}

void sub_1ABE272FC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "referenceDate");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1ABE27324(_QWORD *a1@<X8>)
{
  *a1 = 0x656D756C6F76;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1ABE2733C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE27368 + 4 * byte_1ABF406F0[*v0]))(0x65736F6C63, 0xE500000000000000);
}

uint64_t sub_1ABE27368()
{
  return 1751607656;
}

uint64_t sub_1ABE27378()
{
  return 7827308;
}

uint64_t sub_1ABE27388()
{
  return 1852141679;
}

uint64_t sub_1ABE27398()
{
  return 0x636E657265666572;
}

uint64_t sub_1ABE273BC()
{
  return 0x656D756C6F76;
}

uint64_t sub_1ABE273D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2E484();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE273FC()
{
  sub_1ABE308C4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE27424()
{
  sub_1ABE308C4();
  return sub_1ABF32398();
}

uint64_t sub_1ABE2744C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;

  sub_1ABCF4DA8(0, &qword_1EEC43980, (uint64_t (*)(void))sub_1ABE308C4, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE308C4();
  sub_1ABF32368();
  v15 = 0;
  sub_1ABF32158();
  if (!v1)
  {
    v14 = 1;
    sub_1ABF32158();
    v13 = 2;
    sub_1ABF32158();
    v12 = 3;
    sub_1ABF32158();
    v11 = 4;
    sub_1ABF321B8();
    v10 = 5;
    sub_1ABF32158();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1ABE27630(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE27660 + 4 * byte_1ABF406F6[a1]))(0x7472616863, 0xE500000000000000);
}

uint64_t sub_1ABE27660()
{
  return 0x65676E6168637865;
}

uint64_t sub_1ABE27678()
{
  return 1701667182;
}

uint64_t sub_1ABE27688()
{
  return 0x74654465746F7571;
}

uint64_t sub_1ABE276A8()
{
  return 0x6D614E74726F6873;
}

uint64_t sub_1ABE276C4()
{
  return 0x4E746361706D6F63;
}

uint64_t sub_1ABE276E4()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1ABE276F8()
{
  return 0x79546C6F626D7973;
}

uint64_t sub_1ABE27714()
{
  return 0x4164657461657263;
}

uint64_t sub_1ABE27734()
{
  return 0x7243656372756F73;
}

uint64_t sub_1ABE27758(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE27788 + 4 * byte_1ABF40700[a1]))(0x7472616863, 0xE500000000000000);
}

uint64_t sub_1ABE27788()
{
  return 0x65676E6168637865;
}

uint64_t sub_1ABE277A0()
{
  return 1701667182;
}

uint64_t sub_1ABE277B0()
{
  return 0x74654465746F7571;
}

uint64_t sub_1ABE277D0()
{
  return 0x6D614E74726F6873;
}

uint64_t sub_1ABE277EC()
{
  return 0x4E746361706D6F63;
}

uint64_t sub_1ABE2780C()
{
  return 0x6C6F626D7973;
}

uint64_t sub_1ABE27820()
{
  return 0x79546C6F626D7973;
}

uint64_t sub_1ABE2783C()
{
  return 0x4164657461657263;
}

uint64_t sub_1ABE2785C()
{
  return 0x7243656372756F73;
}

double sub_1ABE27880@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  char v8;

  sub_1ABE2C1CC(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_BYTE *)(a2 + 80) = v8;
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1ABE278D8(_QWORD *a1)
{
  return sub_1ABE2744C(a1);
}

uint64_t sub_1ABE278EC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  char v8;
  _OWORD v9[5];
  char v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_BYTE *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_BYTE *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1ABE2B638((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1ABE27954(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABE28538(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1ABE27630);
}

uint64_t sub_1ABE27960(uint64_t a1, uint64_t a2)
{
  return sub_1ABE285D0(a1, a2, (void (*)(uint64_t))sub_1ABE27630);
}

uint64_t sub_1ABE2796C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABE28640(a1, a2, a3, (void (*)(_QWORD))sub_1ABE27630);
}

uint64_t sub_1ABE27978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABE2868C(a1, a2, a3, (void (*)(uint64_t))sub_1ABE27630);
}

uint64_t sub_1ABE27984@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2C450();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE279B0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABE27630(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE279D8()
{
  unsigned __int8 *v0;

  return sub_1ABE27758(*v0);
}

uint64_t sub_1ABE279E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2C450();
  *a1 = result;
  return result;
}

void sub_1ABE27A04(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1ABE27A10()
{
  sub_1ABE2F020();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE27A38()
{
  sub_1ABE2F020();
  return sub_1ABF32398();
}

uint64_t sub_1ABE27A60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _BYTE v13[584];
  _BYTE v14[584];
  _BYTE v15[16];
  _BYTE v16[80];
  char v17;
  char v18;

  v2 = v1;
  sub_1ABCF4DA8(0, &qword_1EEC43860, (uint64_t (*)(void))sub_1ABE2F020, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys, MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2F020();
  sub_1ABF32368();
  sub_1ABD843F0(v2, (uint64_t)v16, &qword_1EEC43868, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem);
  sub_1ABD843F0((uint64_t)v16, (uint64_t)v13, &qword_1EEC43868, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem);
  v17 = 0;
  sub_1ABE2F130();
  v9 = v12[1];
  sub_1ABF3217C();
  if (!v9)
  {
    v10 = MEMORY[0x1E0DEA968];
    sub_1ABD843F0(v2 + 72, (uint64_t)v15, (unint64_t *)&qword_1ED34FB80, MEMORY[0x1E0DEA968]);
    sub_1ABD843F0((uint64_t)v15, (uint64_t)v13, (unint64_t *)&qword_1ED34FB80, v10);
    v17 = 1;
    sub_1ABD04578(0, (unint64_t *)&qword_1ED34FB80, v10, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1ABE2F174((unint64_t *)&qword_1EEC43878, (unint64_t *)&qword_1ED34FB80, v10, MEMORY[0x1E0DEA970]);
    sub_1ABF321D0();
    v13[0] = 2;
    sub_1ABF32140();
    sub_1ABD843F0(v2 + 104, (uint64_t)v14, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1ABD843F0((uint64_t)v14, (uint64_t)v13, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    v17 = 3;
    sub_1ABE2F1D0();
    sub_1ABF3217C();
    v13[0] = 4;
    sub_1ABF32140();
    v13[0] = 5;
    sub_1ABF32140();
    v13[0] = 6;
    sub_1ABF32194();
    sub_1ABD843F0(v2 + 736, (uint64_t)&v18, &qword_1EEC43888, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItemType);
    sub_1ABD843F0((uint64_t)&v18, (uint64_t)v13, &qword_1EEC43888, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItemType);
    v17 = 7;
    sub_1ABE2F214();
    sub_1ABF3217C();
    v13[0] = 8;
    sub_1ABF32140();
    v13[0] = 9;
    sub_1ABF32140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_1ABE27E34@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _BYTE __src[776];

  result = sub_1ABE2C498(a1, __src);
  if (!v2)
    return memcpy(a2, __src, 0x308uLL);
  return result;
}

uint64_t sub_1ABE27E84(_QWORD *a1)
{
  const void *v1;
  _BYTE __dst[776];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_1ABE27A60(a1);
}

uint64_t sub_1ABE27ED4(void *__src, const void *a2)
{
  _BYTE v4[776];
  _BYTE __dst[776];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_1ABE2AFB8((uint64_t)v4) & 1;
}

uint64_t sub_1ABE27F28(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE27F68 + 4 * word_1ABF4070A[a1]))(0x756F487265746661, 0xEF65636972507372);
}

unint64_t sub_1ABE27F68()
{
  return 0xD000000000000015;
}

uint64_t sub_1ABE2834C()
{
  return 0x7372756F48657270;
}

uint64_t sub_1ABE28370(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1ABDE2A64(*a1, *a2);
}

uint64_t sub_1ABE2837C()
{
  unsigned __int8 *v0;

  return sub_1ABF1034C(0, *v0);
}

uint64_t sub_1ABE28388(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1ABD9912C(a1, *v1);
}

uint64_t sub_1ABE28390(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1ABF1034C(a1, *v1);
}

uint64_t sub_1ABE28398@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2CB9C();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE283C4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABE283F4 + 4 * byte_1ABF4075A[*v0]))();
}

void sub_1ABE283F4(_QWORD *a1@<X8>)
{
  *a1 = 0x59434E4552525543;
  a1[1] = 0xE800000000000000;
}

void sub_1ABE28410(_QWORD *a1@<X8>)
{
  *a1 = 0x435F4F5450595243;
  a1[1] = 0xEF59434E45525255;
}

void sub_1ABE28438(_QWORD *a1@<X8>)
{
  *a1 = 0x595449555145;
  a1[1] = 0xE600000000000000;
}

void sub_1ABE28450(_QWORD *a1@<X8>)
{
  *a1 = 4609093;
  a1[1] = 0xE300000000000000;
}

void sub_1ABE28464(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x53455255545546;
  a1[1] = v1;
}

void sub_1ABE2847C(_QWORD *a1@<X8>)
{
  *a1 = 0x5845444E49;
  a1[1] = 0xE500000000000000;
}

void sub_1ABE28494(_QWORD *a1@<X8>)
{
  *a1 = 0x465F4C415554554DLL;
  a1[1] = 0xEB00000000444E55;
}

unint64_t sub_1ABE284B8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_1ABE2CBE4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1ABE284E0()
{
  sub_1ABE3083C();
  return sub_1ABF31990();
}

uint64_t sub_1ABE2852C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1ABE28538(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1ABE27F28);
}

uint64_t sub_1ABE28538(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v6 = *a2;
  v7 = a5(*a1);
  v9 = v8;
  if (v7 == a5(v6) && v9 == v10)
    v12 = 1;
  else
    v12 = sub_1ABF3223C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1ABE285C4(uint64_t a1, uint64_t a2)
{
  return sub_1ABE285D0(a1, a2, (void (*)(uint64_t))sub_1ABE27F28);
}

uint64_t sub_1ABE285D0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;

  v5 = *v3;
  sub_1ABF32308();
  a3(v5);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE28634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABE28640(a1, a2, a3, (void (*)(_QWORD))sub_1ABE27F28);
}

uint64_t sub_1ABE28640(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  unsigned __int8 *v4;

  a4(*v4);
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ABE28680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1ABE2868C(a1, a2, a3, (void (*)(uint64_t))sub_1ABE27F28);
}

uint64_t sub_1ABE2868C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;

  v6 = *v4;
  sub_1ABF32308();
  a4(v6);
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE286EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2CCB4();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE28718@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABE27F28(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE28740()
{
  unsigned __int8 *v0;

  return sub_1ABE27F28(*v0);
}

uint64_t sub_1ABE28748@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2CCB4();
  *a1 = result;
  return result;
}

void sub_1ABE2876C(_BYTE *a1@<X8>)
{
  *a1 = 40;
}

uint64_t sub_1ABE28778()
{
  sub_1ABE2E550();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE287A0()
{
  sub_1ABE2E550();
  return sub_1ABF32398();
}

uint64_t sub_1ABE287C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char *v4;

  v1 = v0;
  sub_1ABCF4DA8(0, &qword_1ED34E210, (uint64_t (*)(void))sub_1ABE2E550, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v2 = sub_1ABF320D4();
  if (!v0)
  {
    v1 = v2;
    if ((v3 & 1) == 0 && v2 < 0)
    {
      sub_1ABF31E94();
      sub_1ABF31870();
      sub_1ABF321F4();
      sub_1ABF31870();
      swift_bridgeObjectRelease();
      sub_1ABF31870();
      v1 = 0;
      sub_1ABE2E6A4();
      swift_allocError();
      strcpy(v4, "averageVolume");
      *((_WORD *)v4 + 7) = -4864;
      *((_QWORD *)v4 + 2) = 0;
      *((_QWORD *)v4 + 3) = 0xE000000000000000;
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_1ABE2893C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;

  v1 = v0;
  sub_1ABCF4DA8(0, &qword_1ED34E210, (uint64_t (*)(void))sub_1ABE2E550, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v2 = sub_1ABF320D4();
  if (!v0)
  {
    v1 = v2;
    if ((v3 & 1) == 0 && v2 < 0)
    {
      sub_1ABF31E94();
      sub_1ABF31870();
      sub_1ABF321F4();
      sub_1ABF31870();
      swift_bridgeObjectRelease();
      sub_1ABF31870();
      v1 = 0;
      sub_1ABE2E6A4();
      swift_allocError();
      *v4 = 0x656D756C6F76;
      v4[1] = 0xE600000000000000;
      v4[2] = 0;
      v4[3] = 0xE000000000000000;
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_1ABE28AA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t);
  char *v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _BYTE v21[16];
  _BYTE v22[16];
  _BYTE v23[16];
  char v24;
  char v25;
  char v26;
  char v27;

  sub_1ABCF4DA8(0, &qword_1EEC437C8, (uint64_t (*)(void))sub_1ABE2E550, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys, MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2E550();
  sub_1ABF32368();
  v21[0] = 0;
  v20 = v7;
  v8 = v19;
  sub_1ABF32158();
  if (v8)
  {
    v9 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v10 = v20;
    v11 = v4;
  }
  else
  {
    v21[0] = 1;
    sub_1ABF32158();
    v17 = 0;
    v18 = v5;
    sub_1ABD843F0(v1 + 25, (uint64_t)&v27, &qword_1ED34CF30, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
    sub_1ABD843F0((uint64_t)&v27, (uint64_t)v21, &qword_1ED34CF30, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
    v24 = 2;
    v13 = sub_1ABE2E6E8();
    v19 = v4;
    v14 = v17;
    sub_1ABF3217C();
    if (!v14)
    {
      v16 = v1;
      v17 = v13;
      v21[0] = 37;
      sub_1ABF32158();
      v21[0] = 38;
      sub_1ABF32158();
      sub_1ABD843F0((uint64_t)&v27, (uint64_t)v21, &qword_1ED34CF30, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
      v24 = 39;
      sub_1ABF3217C();
      v21[0] = 3;
      sub_1ABF32188();
      v21[0] = 4;
      sub_1ABF32158();
      v21[0] = 5;
      sub_1ABF32140();
      v21[0] = 6;
      sub_1ABF32158();
      v21[0] = 7;
      sub_1ABF32158();
      v21[0] = 8;
      sub_1ABF32158();
      v21[0] = 9;
      sub_1ABF32140();
      v21[0] = 10;
      sub_1ABF32158();
      v21[0] = 11;
      sub_1ABF32158();
      v21[0] = 12;
      sub_1ABF32140();
      v21[0] = 13;
      sub_1ABF32140();
      v21[0] = 14;
      sub_1ABF32140();
      sub_1ABD843F0(v16 + 256, (uint64_t)&v26, &qword_1ED34CF78, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
      sub_1ABD843F0((uint64_t)&v26, (uint64_t)v21, &qword_1ED34CF78, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
      v24 = 15;
      sub_1ABE2E72C();
      sub_1ABF3217C();
      v21[0] = 16;
      sub_1ABF32158();
      v21[0] = 17;
      sub_1ABF32140();
      v21[0] = 18;
      sub_1ABF32158();
      v21[0] = 19;
      sub_1ABF32158();
      v21[0] = 20;
      sub_1ABF32158();
      v21[0] = 21;
      sub_1ABF32158();
      sub_1ABD843F0(v16 + 353, (uint64_t)&v25, &qword_1ED34CF30, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
      sub_1ABD843F0((uint64_t)&v25, (uint64_t)v21, &qword_1ED34CF30, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteSource);
      v24 = 22;
      sub_1ABF3217C();
      v21[0] = 23;
      sub_1ABF32188();
      v21[0] = 24;
      sub_1ABF32158();
      v21[0] = 25;
      sub_1ABF32158();
      v21[0] = 26;
      sub_1ABF32140();
      v21[0] = 27;
      sub_1ABF32140();
      sub_1ABD843F0(v16 + 440, (uint64_t)v23, &qword_1ED34CFB8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
      sub_1ABD843F0((uint64_t)v23, (uint64_t)v21, &qword_1ED34CFB8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
      v24 = 28;
      sub_1ABE2E770();
      sub_1ABF3217C();
      v21[0] = 29;
      sub_1ABF32140();
      v21[0] = 30;
      sub_1ABF32140();
      v21[0] = 31;
      sub_1ABF32140();
      v21[0] = 32;
      sub_1ABF32140();
      v21[0] = 33;
      sub_1ABF32140();
      sub_1ABD843F0(v16 + 536, (uint64_t)v22, &qword_1EEC437E8, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition);
      sub_1ABD843F0((uint64_t)v22, (uint64_t)v21, &qword_1EEC437E8, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition);
      v24 = 34;
      sub_1ABE2E7B4();
      sub_1ABF3217C();
      v21[0] = 35;
      sub_1ABF32140();
      v21[0] = 36;
      sub_1ABF32140();
    }
    v9 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
    v11 = v19;
    v10 = v20;
  }
  return v9(v10, v11);
}

void sub_1ABE2941C(char *a1)
{
  sub_1ABDE34F0(*a1);
}

void sub_1ABE29428()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABE2946C()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

void sub_1ABE294E4()
{
  __asm { BR              X10 }
}

uint64_t sub_1ABE29518()
{
  sub_1ABF31840();
  return swift_bridgeObjectRelease();
}

void sub_1ABE2957C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1ABF32308();
  __asm { BR              X9 }
}

uint64_t sub_1ABE295BC()
{
  sub_1ABF31840();
  swift_bridgeObjectRelease();
  return sub_1ABF32338();
}

uint64_t sub_1ABE29634@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2E440();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE29668()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1ABE29690 + 4 * byte_1ABF4076E[*v0]))();
}

void sub_1ABE29690(_QWORD *a1@<X8>)
{
  *a1 = 0x4445534F4C43;
  a1[1] = 0xE600000000000000;
}

void sub_1ABE296A8(_QWORD *a1@<X8>)
{
  *a1 = 0x4B52414D5F455250;
  a1[1] = 0xEA00000000005445;
}

void sub_1ABE296C8(_QWORD *a1@<X8>)
{
  *a1 = 0x4F485F5245544641;
  a1[1] = 0xEB00000000535255;
}

uint64_t sub_1ABE296EC()
{
  sub_1ABE2E50C();
  return sub_1ABF319CC();
}

uint64_t sub_1ABE29748()
{
  sub_1ABE2E50C();
  return sub_1ABF31990();
}

uint64_t sub_1ABE29794()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABE297E0()
{
  return sub_1ABF31840();
}

uint64_t sub_1ABE297F4()
{
  sub_1ABF32308();
  sub_1ABF31840();
  return sub_1ABF32338();
}

uint64_t sub_1ABE2983C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1ABE2988C(_QWORD *a1@<X8>)
{
  *a1 = 0x74657366666FLL;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1ABE298A4()
{
  return 0x74657366666FLL;
}

uint64_t sub_1ABE298B8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1ABF32068();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1ABE2990C()
{
  sub_1ABE2BBC4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE29934()
{
  sub_1ABE2BBC4();
  return sub_1ABF32398();
}

uint64_t sub_1ABE2995C(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  sub_1ABCF4DA8(0, &qword_1EEC437B0, (uint64_t (*)(void))sub_1ABE2BBC4, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys, MEMORY[0x1E0DED170]);
  v7 = v6;
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2BBC4();
  sub_1ABF32368();
  v12 = a2;
  v13 = a3 & 1;
  v10 = MEMORY[0x1E0DEB418];
  sub_1ABD04578(0, &qword_1ED34E000, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1ABE2F174(&qword_1EEC437B8, &qword_1ED34E000, v10, MEMORY[0x1E0DEB420]);
  sub_1ABF321D0();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v9, v7);
}

uint64_t sub_1ABE29AC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1ABE29B08 + 4 * byte_1ABF40772[a1]))(0x5F434952454E4547, 0xEF444559414C4544);
}

uint64_t sub_1ABE29B08()
{
  return 0x525F51414453414ELL;
}

uint64_t sub_1ABE29B2C()
{
  return 0x4145525F4553594ELL;
}

unint64_t sub_1ABE29B50()
{
  return 0xD000000000000012;
}

unint64_t sub_1ABE29B88()
{
  return 0xD000000000000010;
}

uint64_t sub_1ABE29BA4(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[3];
  char v16;
  char v17;

  v15[1] = a3;
  sub_1ABCF4DA8(0, a4, a5, a6, MEMORY[0x1E0DED170]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v15 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_1ABF32368();
  v17 = 0;
  v13 = v15[2];
  sub_1ABF32194();
  if (!v13)
  {
    v16 = 1;
    sub_1ABF321AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1ABE29CE0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v12 = a3;
  sub_1ABCF4DA8(0, &qword_1EEC43838, (uint64_t (*)(void))sub_1ABE2ECEC, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.CodingKeys, MEMORY[0x1E0DED170]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v12 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2ECEC();
  sub_1ABF32368();
  v14 = a2;
  v13 = 0;
  sub_1ABD04578(0, &qword_1EEC43808, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1ABE2EEA8();
  sub_1ABF321D0();
  if (!v3)
  {
    v14 = v12;
    v13 = 1;
    sub_1ABD04578(0, &qword_1EEC43820, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1ABE2EF64();
    sub_1ABF321D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1ABE29E84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v15 = a2;
  sub_1ABCF4DA8(0, &qword_1ED34E218, (uint64_t (*)(void))sub_1ABE2BBC4, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2BBC4();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  v10 = sub_1ABF320B0();
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)v9 = v10;
  *(_BYTE *)(v9 + 8) = v12 & 1;
  return result;
}

uint64_t sub_1ABE29FD0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1ABE2995C(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

void *sub_1ABE29FEC@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _BYTE __src[584];

  result = (void *)sub_1ABE2CD04(a1, (uint64_t)__src);
  if (!v2)
    return memcpy(a2, __src, 0x248uLL);
  return result;
}

uint64_t sub_1ABE2A03C(_QWORD *a1)
{
  const void *v1;
  _BYTE __dst[584];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_1ABE28AA0(a1);
}

uint64_t sub_1ABE2A08C(void *__src, const void *a2)
{
  _BYTE v4[584];
  _BYTE __dst[584];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_1ABE2A630((uint64_t)v4, (uint64_t)__dst) & 1;
}

void sub_1ABE2A0E0(char *a1)
{
  sub_1ABDE364C(*a1);
}

void sub_1ABE2A0EC()
{
  char *v0;

  sub_1ABF0F760(*v0);
}

void sub_1ABE2A0F4(uint64_t a1)
{
  char *v1;

  sub_1ABD9922C(a1, *v1);
}

void sub_1ABE2A0FC(uint64_t a1)
{
  char *v1;

  sub_1ABF10230(a1, *v1);
}

uint64_t sub_1ABE2A104@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1ABE2E484();
  *a1 = result;
  return result;
}

uint64_t sub_1ABE2A138@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1ABE29AC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1ABE2A160()
{
  sub_1ABE2E4C8();
  return sub_1ABF319CC();
}

uint64_t sub_1ABE2A1BC()
{
  sub_1ABE2E4C8();
  return sub_1ABF31990();
}

uint64_t sub_1ABE2A208()
{
  sub_1ABE307B4();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE2A230()
{
  sub_1ABE307B4();
  return sub_1ABF32398();
}

void sub_1ABE2A258(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ABE2A334(a1, &qword_1EEC43940, (uint64_t (*)(void))sub_1ABE307B4, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys, a2);
}

uint64_t sub_1ABE2A284(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABE29BA4(a1, *v1, v1[1], &qword_1EEC43960, (uint64_t (*)(void))sub_1ABE307B4, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys);
}

uint64_t sub_1ABE2A2B8()
{
  sub_1ABE307F8();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE2A2E0()
{
  sub_1ABE307F8();
  return sub_1ABF32398();
}

void sub_1ABE2A308(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1ABE2A334(a1, &qword_1EEC43950, (uint64_t (*)(void))sub_1ABE307F8, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys, a2);
}

void sub_1ABE2A334(_QWORD *a1@<X0>, unint64_t *a2@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  double v9;

  v9 = sub_1ABE2E7F8(a1, a2, a3, a4);
  if (!v5)
  {
    *(_QWORD *)a5 = v7;
    *(_QWORD *)(a5 + 8) = v8;
    *(double *)(a5 + 16) = v9;
  }
}

uint64_t sub_1ABE2A36C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABE29BA4(a1, *v1, v1[1], &qword_1EEC43968, (uint64_t (*)(void))sub_1ABE307F8, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys);
}

uint64_t sub_1ABE2A3A0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F74636553706F74;
  else
    return 0x69646C6F48706F74;
}

uint64_t sub_1ABE2A3E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ABE2E9A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1ABE2A40C()
{
  sub_1ABE2ECEC();
  return sub_1ABF3238C();
}

uint64_t sub_1ABE2A434()
{
  sub_1ABE2ECEC();
  return sub_1ABF32398();
}

uint64_t sub_1ABE2A45C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1ABE2EABC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1ABE2A484(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1ABE29CE0(a1, *v1, v1[1]);
}

uint64_t sub_1ABE2A49C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1ABDE053C(*a1, *a2) & 1) != 0)
    return sub_1ABDE053C(v2, v3);
  else
    return 0;
}

double sub_1ABE2A4E4@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1ABE2B8C4(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1ABE2A524(_QWORD *a1)
{
  return sub_1ABE25FD8(a1);
}

uint64_t sub_1ABE2A55C(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_1ABE2B720((uint64_t *)v7, (uint64_t *)v8) & 1;
}

unint64_t sub_1ABE2A5A4()
{
  unint64_t result;

  result = qword_1EEC437A0;
  if (!qword_1EEC437A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40C14, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
    atomic_store(result, (unint64_t *)&qword_1EEC437A0);
  }
  return result;
}

unint64_t sub_1ABE2A5EC()
{
  unint64_t result;

  result = qword_1EEC437A8;
  if (!qword_1EEC437A8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40D04, &type metadata for SDSQuoteResponse.SDSQuoteSource);
    atomic_store(result, (unint64_t *)&qword_1EEC437A8);
  }
  return result;
}

uint64_t sub_1ABE2A630(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  int v6;
  int v7;
  char v8;
  char v9;
  char v10;
  int v11;
  int v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  int v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  int v48;
  int v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE v86[16];
  _BYTE v87[16];
  _BYTE v88[16];
  _BYTE v89[9];
  char v90;

  v4 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v4 = 1;
    if ((v4 & 1) != 0)
      goto LABEL_236;
  }
  v5 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
      v5 = 1;
    if ((v5 & 1) != 0)
      goto LABEL_236;
  }
  v6 = *(unsigned __int8 *)(a1 + 25);
  v7 = *(unsigned __int8 *)(a2 + 25);
  if (v6 == 6)
  {
    if (v7 != 6)
      goto LABEL_236;
  }
  else
  {
    if (v7 == 6)
      goto LABEL_236;
    sub_1ABDE364C(v6);
    if ((v8 & 1) == 0)
      goto LABEL_236;
  }
  v9 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
      v9 = 1;
    if ((v9 & 1) != 0)
      goto LABEL_236;
  }
  v10 = *(_BYTE *)(a2 + 56);
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 48) != *(double *)(a2 + 48))
      v10 = 1;
    if ((v10 & 1) != 0)
      goto LABEL_236;
  }
  v11 = *(unsigned __int8 *)(a1 + 57);
  v12 = *(unsigned __int8 *)(a2 + 57);
  if (v11 == 6)
  {
    if (v12 != 6)
      goto LABEL_236;
  }
  else
  {
    if (v12 == 6)
      goto LABEL_236;
    sub_1ABDE364C(v11);
    if ((v13 & 1) == 0)
      goto LABEL_236;
  }
  v14 = *(_BYTE *)(a2 + 72);
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 72))
      goto LABEL_236;
  }
  else
  {
    if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
      v14 = 1;
    if ((v14 & 1) != 0)
      goto LABEL_236;
  }
  v15 = *(_BYTE *)(a2 + 88);
  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 88))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 80) != *(double *)(a2 + 80))
      v15 = 1;
    if ((v15 & 1) != 0)
      goto LABEL_236;
  }
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a2 + 104);
  if (v16)
  {
    if (!v17)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 96) != *(_QWORD *)(a2 + 96) || v16 != v17)
    {
      v18 = sub_1ABF3223C();
      v19 = 0;
      if ((v18 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v17)
  {
    goto LABEL_236;
  }
  v20 = *(_BYTE *)(a2 + 120);
  if ((*(_BYTE *)(a1 + 120) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 120))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 112) != *(double *)(a2 + 112))
      v20 = 1;
    if ((v20 & 1) != 0)
      goto LABEL_236;
  }
  v21 = *(_BYTE *)(a2 + 136);
  if ((*(_BYTE *)(a1 + 136) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 136))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 128) != *(double *)(a2 + 128))
      v21 = 1;
    if ((v21 & 1) != 0)
      goto LABEL_236;
  }
  v22 = *(_BYTE *)(a2 + 152);
  if ((*(_BYTE *)(a1 + 152) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 152))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 144) != *(double *)(a2 + 144))
      v22 = 1;
    if ((v22 & 1) != 0)
      goto LABEL_236;
  }
  v23 = *(_QWORD *)(a1 + 168);
  v24 = *(_QWORD *)(a2 + 168);
  if (v23)
  {
    if (!v24)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 160) != *(_QWORD *)(a2 + 160) || v23 != v24)
    {
      v25 = sub_1ABF3223C();
      v19 = 0;
      if ((v25 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v24)
  {
    goto LABEL_236;
  }
  v26 = *(_BYTE *)(a2 + 184);
  if ((*(_BYTE *)(a1 + 184) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 184))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 176) != *(double *)(a2 + 176))
      v26 = 1;
    if ((v26 & 1) != 0)
      goto LABEL_236;
  }
  v27 = *(_BYTE *)(a2 + 200);
  if ((*(_BYTE *)(a1 + 200) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 200))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 192) != *(double *)(a2 + 192))
      v27 = 1;
    if ((v27 & 1) != 0)
      goto LABEL_236;
  }
  v28 = *(_QWORD *)(a1 + 216);
  v29 = *(_QWORD *)(a2 + 216);
  if (v28)
  {
    if (!v29)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208) || v28 != v29)
    {
      v30 = sub_1ABF3223C();
      v19 = 0;
      if ((v30 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v29)
  {
    goto LABEL_236;
  }
  v31 = *(_QWORD *)(a1 + 232);
  v32 = *(_QWORD *)(a2 + 232);
  if (v31)
  {
    if (!v32)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 224) != *(_QWORD *)(a2 + 224) || v31 != v32)
    {
      v33 = sub_1ABF3223C();
      v19 = 0;
      if ((v33 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v32)
  {
    goto LABEL_236;
  }
  v34 = *(_QWORD *)(a1 + 248);
  v35 = *(_QWORD *)(a2 + 248);
  if (v34)
  {
    if (!v35)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 240) != *(_QWORD *)(a2 + 240) || v34 != v35)
    {
      v36 = sub_1ABF3223C();
      v19 = 0;
      if ((v36 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v35)
  {
    goto LABEL_236;
  }
  v37 = *(unsigned __int8 *)(a1 + 256);
  v38 = *(unsigned __int8 *)(a2 + 256);
  if (v37 == 4)
  {
    if (v38 != 4)
      goto LABEL_236;
  }
  else
  {
    if (v38 == 4)
      goto LABEL_236;
    sub_1ABDE34F0(v37);
    if ((v39 & 1) == 0)
      goto LABEL_236;
  }
  v40 = *(_BYTE *)(a2 + 272);
  if ((*(_BYTE *)(a1 + 272) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 272))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 264) != *(double *)(a2 + 264))
      v40 = 1;
    if ((v40 & 1) != 0)
      goto LABEL_236;
  }
  v41 = *(_QWORD *)(a1 + 288);
  v42 = *(_QWORD *)(a2 + 288);
  if (v41)
  {
    if (!v42)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 280) != *(_QWORD *)(a2 + 280) || v41 != v42)
    {
      v43 = sub_1ABF3223C();
      v19 = 0;
      if ((v43 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v42)
  {
    goto LABEL_236;
  }
  v44 = *(_BYTE *)(a2 + 304);
  if ((*(_BYTE *)(a1 + 304) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 304))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 296) != *(double *)(a2 + 296))
      v44 = 1;
    if ((v44 & 1) != 0)
      goto LABEL_236;
  }
  v45 = *(_BYTE *)(a2 + 320);
  if ((*(_BYTE *)(a1 + 320) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 320))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 312) != *(double *)(a2 + 312))
      v45 = 1;
    if ((v45 & 1) != 0)
      goto LABEL_236;
  }
  v46 = *(_BYTE *)(a2 + 336);
  if ((*(_BYTE *)(a1 + 336) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 336))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 328) != *(double *)(a2 + 328))
      v46 = 1;
    if ((v46 & 1) != 0)
      goto LABEL_236;
  }
  v47 = *(_BYTE *)(a2 + 352);
  if ((*(_BYTE *)(a1 + 352) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 352))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 344) != *(double *)(a2 + 344))
      v47 = 1;
    if ((v47 & 1) != 0)
      goto LABEL_236;
  }
  v48 = *(unsigned __int8 *)(a1 + 353);
  v49 = *(unsigned __int8 *)(a2 + 353);
  if (v48 == 6)
  {
    if (v49 != 6)
      goto LABEL_236;
  }
  else
  {
    if (v49 == 6)
      goto LABEL_236;
    sub_1ABDE364C(v48);
    if ((v50 & 1) == 0)
      goto LABEL_236;
  }
  v51 = *(_BYTE *)(a2 + 368);
  if ((*(_BYTE *)(a1 + 368) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 368))
      goto LABEL_236;
  }
  else
  {
    if (*(_QWORD *)(a1 + 360) != *(_QWORD *)(a2 + 360))
      v51 = 1;
    if ((v51 & 1) != 0)
      goto LABEL_236;
  }
  v52 = *(_BYTE *)(a2 + 384);
  if ((*(_BYTE *)(a1 + 384) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 384))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 376) != *(double *)(a2 + 376))
      v52 = 1;
    if ((v52 & 1) != 0)
      goto LABEL_236;
  }
  v53 = *(_BYTE *)(a2 + 400);
  if ((*(_BYTE *)(a1 + 400) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 400))
      goto LABEL_236;
  }
  else
  {
    if (*(double *)(a1 + 392) != *(double *)(a2 + 392))
      v53 = 1;
    if ((v53 & 1) != 0)
      goto LABEL_236;
  }
  v54 = *(_QWORD *)(a1 + 416);
  v55 = *(_QWORD *)(a2 + 416);
  if (v54)
  {
    if (!v55)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 408) != *(_QWORD *)(a2 + 408) || v54 != v55)
    {
      v56 = sub_1ABF3223C();
      v19 = 0;
      if ((v56 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v55)
  {
    goto LABEL_236;
  }
  v57 = *(_QWORD *)(a1 + 432);
  v58 = *(_QWORD *)(a2 + 432);
  if (v57)
  {
    if (!v58)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 424) != *(_QWORD *)(a2 + 424) || v57 != v58)
    {
      v59 = sub_1ABF3223C();
      v19 = 0;
      if ((v59 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v58)
  {
    goto LABEL_236;
  }
  sub_1ABD843F0(a1 + 440, (uint64_t)v87, &qword_1ED34CFB8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
  sub_1ABD843F0(a2 + 440, (uint64_t)v86, &qword_1ED34CFB8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
  sub_1ABD843F0((uint64_t)v87, (uint64_t)v88, &qword_1ED34CFB8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
  if ((v88[9] & 1) != 0)
  {
    sub_1ABD843F0((uint64_t)v86, (uint64_t)v89, &qword_1ED34CFB8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
    if (v90 != 1)
      goto LABEL_236;
  }
  else
  {
    sub_1ABD843F0((uint64_t)v86, (uint64_t)v89, &qword_1ED34CFB8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
    if ((v90 & 1) != 0)
      goto LABEL_236;
  }
  v60 = *(_QWORD *)(a1 + 464);
  v61 = *(_QWORD *)(a2 + 464);
  if (v60)
  {
    if (!v61)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 456) != *(_QWORD *)(a2 + 456) || v60 != v61)
    {
      v62 = sub_1ABF3223C();
      v19 = 0;
      if ((v62 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v61)
  {
    goto LABEL_236;
  }
  v63 = *(_QWORD *)(a1 + 480);
  v64 = *(_QWORD *)(a2 + 480);
  if (v63)
  {
    if (!v64)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 472) != *(_QWORD *)(a2 + 472) || v63 != v64)
    {
      v65 = sub_1ABF3223C();
      v19 = 0;
      if ((v65 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v64)
  {
    goto LABEL_236;
  }
  v66 = *(_QWORD *)(a1 + 496);
  v67 = *(_QWORD *)(a2 + 496);
  if (v66)
  {
    if (!v67)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 488) != *(_QWORD *)(a2 + 488) || v66 != v67)
    {
      v68 = sub_1ABF3223C();
      v19 = 0;
      if ((v68 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v67)
  {
    goto LABEL_236;
  }
  v69 = *(_QWORD *)(a1 + 512);
  v70 = *(_QWORD *)(a2 + 512);
  if (v69)
  {
    if (!v70)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 504) != *(_QWORD *)(a2 + 504) || v69 != v70)
    {
      v71 = sub_1ABF3223C();
      v19 = 0;
      if ((v71 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v70)
  {
    goto LABEL_236;
  }
  v72 = *(_QWORD *)(a1 + 528);
  v73 = *(_QWORD *)(a2 + 528);
  if (v72)
  {
    if (!v73)
      goto LABEL_236;
    if (*(_QWORD *)(a1 + 520) != *(_QWORD *)(a2 + 520) || v72 != v73)
    {
      v74 = sub_1ABF3223C();
      v19 = 0;
      if ((v74 & 1) == 0)
        return v19 & 1;
    }
  }
  else if (v73)
  {
    goto LABEL_236;
  }
  v75 = *(_QWORD *)(a1 + 536);
  v76 = *(_QWORD *)(a2 + 536);
  if (v75)
  {
    if (!v76)
      goto LABEL_236;
    v77 = *(_QWORD *)(a1 + 544);
    v78 = *(_QWORD *)(a2 + 544);
    if ((sub_1ABDE053C(*(_QWORD *)(a1 + 536), *(_QWORD *)(a2 + 536)) & 1) == 0)
    {
      sub_1ABD74D40(v75);
      sub_1ABD74D40(v75);
      sub_1ABD74D40(v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1ABD75148(v75);
      v19 = 0;
      return v19 & 1;
    }
    v79 = sub_1ABDE053C(v77, v78);
    sub_1ABD74D40(v75);
    sub_1ABD74D40(v75);
    sub_1ABD74D40(v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1ABD75148(v75);
    if ((v79 & 1) == 0)
      goto LABEL_236;
  }
  else if (v76)
  {
    goto LABEL_236;
  }
  v81 = *(_QWORD *)(a1 + 560);
  v82 = *(_QWORD *)(a2 + 560);
  if (v81)
  {
    if (v82)
    {
      if (*(_QWORD *)(a1 + 552) != *(_QWORD *)(a2 + 552) || v81 != v82)
      {
        v83 = sub_1ABF3223C();
        v19 = 0;
        if ((v83 & 1) == 0)
          return v19 & 1;
      }
      goto LABEL_246;
    }
LABEL_236:
    v19 = 0;
    return v19 & 1;
  }
  if (v82)
    goto LABEL_236;
LABEL_246:
  v84 = *(_QWORD *)(a1 + 576);
  v85 = *(_QWORD *)(a2 + 576);
  v19 = (v84 | v85) == 0;
  if (v84 && v85)
  {
    if (*(_QWORD *)(a1 + 568) == *(_QWORD *)(a2 + 568) && v84 == v85)
      v19 = 1;
    else
      v19 = sub_1ABF3223C();
  }
  return v19 & 1;
}

uint64_t sub_1ABE2AFB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  double v26;
  double v27;
  double v28;
  double v29;
  char v30;
  char v31;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _BYTE __src[584];
  _BYTE v54[584];
  _BYTE v55[584];
  uint64_t __dst[73];
  uint64_t v57;
  _BYTE v58[584];
  _BYTE v59[584];
  _BYTE v60[584];
  _BYTE v61[592];

  MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = v1;
  v6 = *(_QWORD *)v1;
  v5 = *(_QWORD *)(v1 + 8);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v10 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  v11 = *(_QWORD *)(v1 + 48);
  v12 = *(_QWORD *)(v1 + 56);
  v13 = *(_BYTE *)(v1 + 64);
  v14 = *(_QWORD *)v3;
  v15 = *(_QWORD *)(v3 + 8);
  v17 = *(_QWORD *)(v3 + 16);
  v16 = *(_QWORD *)(v3 + 24);
  v19 = *(_QWORD *)(v3 + 32);
  v18 = *(_QWORD *)(v3 + 40);
  v21 = *(_QWORD *)(v3 + 48);
  v20 = *(_QWORD *)(v3 + 56);
  v22 = *(_BYTE *)(v3 + 64);
  if (!v7)
  {
    if (!v17)
      goto LABEL_24;
LABEL_13:
    __dst[0] = *(_QWORD *)v1;
    __dst[1] = v5;
    __dst[2] = v7;
    __dst[3] = v8;
    __dst[4] = v10;
    __dst[5] = v9;
    __dst[6] = v11;
    __dst[7] = v12;
    LOBYTE(__dst[8]) = v13;
    __dst[9] = v14;
    __dst[10] = v15;
    __dst[11] = v17;
    __dst[12] = v16;
    __dst[13] = v19;
    __dst[14] = v18;
    __dst[15] = v21;
    __dst[16] = v20;
    LOBYTE(__dst[17]) = v22;
    sub_1ABD74BB4(v6, v5, v7, v8, v10);
    sub_1ABD74BB4(v14, v15, v17, v16, v19);
    sub_1ABE2F258(__dst);
    goto LABEL_14;
  }
  if (!v17)
    goto LABEL_13;
  v23 = 0;
  if (v6 != v14 || v5 != v15)
    return v23 & 1;
  v24 = v8;
  v52 = v13;
  v25 = *(_BYTE *)(v3 + 64);
  v26 = *(double *)&v12;
  v27 = *(double *)(v3 + 56);
  if ((sub_1ABDE0650(v7, v17) & 1) == 0)
    goto LABEL_14;
  if (v10 == 1)
  {
    v28 = v27;
    v29 = v26;
    v30 = v25;
    v31 = v52;
    if (v19 != 1)
      goto LABEL_14;
  }
  else
  {
    if (v19 == 1)
      goto LABEL_14;
    v28 = v27;
    v29 = v26;
    v30 = v25;
    v31 = v52;
    if (v10)
    {
      if (!v19)
        goto LABEL_14;
      if (v24 != v16 || v10 != v19)
      {
        v33 = sub_1ABF3223C();
        v31 = v52;
        v30 = v25;
        v29 = v26;
        v28 = v27;
        v34 = v33;
        v23 = 0;
        if ((v34 & 1) == 0)
          return v23 & 1;
      }
    }
    else if (v19)
    {
      goto LABEL_14;
    }
  }
  if ((v31 & 1) != 0)
  {
    if ((v30 & 1) == 0)
      goto LABEL_14;
  }
  else if ((v30 & 1) != 0 || v29 != v28)
  {
    goto LABEL_14;
  }
LABEL_24:
  v35 = *(_QWORD *)(v4 + 80);
  v36 = *(_QWORD *)(v3 + 80);
  if (v35)
  {
    if (!v36)
      goto LABEL_14;
    if (*(_QWORD *)(v4 + 72) != *(_QWORD *)(v3 + 72) || v35 != v36)
    {
      v37 = sub_1ABF3223C();
      v23 = 0;
      if ((v37 & 1) == 0)
        return v23 & 1;
    }
  }
  else if (v36)
  {
    goto LABEL_14;
  }
  v38 = *(_QWORD *)(v4 + 96);
  v39 = *(_QWORD *)(v3 + 96);
  if (!v38)
  {
    if (v39)
      goto LABEL_14;
    goto LABEL_38;
  }
  if (!v39)
    goto LABEL_14;
  if (*(_QWORD *)(v4 + 88) == *(_QWORD *)(v3 + 88) && v38 == v39 || (v40 = sub_1ABF3223C(), v23 = 0, (v40 & 1) != 0))
  {
LABEL_38:
    sub_1ABD843F0(v4 + 104, (uint64_t)v58, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1ABD843F0(v3 + 104, (uint64_t)v59, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1ABD843F0((uint64_t)v58, (uint64_t)v60, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    if (sub_1ABD7520C((uint64_t)v60) == 1)
    {
      sub_1ABD843F0((uint64_t)v59, (uint64_t)__dst, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
      if (sub_1ABD7520C((uint64_t)__dst) == 1)
      {
LABEL_46:
        v42 = *(_QWORD *)(v4 + 696);
        v43 = *(_QWORD *)(v3 + 696);
        if (v42)
        {
          if (!v43)
            goto LABEL_14;
          v44 = *(_QWORD *)(v3 + 688);
          if ((*(_QWORD *)(v4 + 688) != v44 || v42 != v43) && (sub_1ABF3223C() & 1) == 0)
            goto LABEL_14;
          v45 = *(_QWORD *)(v4 + 712);
          if (!v45 || (*(_QWORD *)(v4 + 704) != v44 || v45 != v43) && (sub_1ABF3223C() & 1) == 0)
            goto LABEL_14;
        }
        else if (v43 || *(_QWORD *)(v4 + 712))
        {
          goto LABEL_14;
        }
        if ((*(_QWORD *)(v4 + 720) != *(_QWORD *)(v3 + 720) || *(_QWORD *)(v4 + 728) != *(_QWORD *)(v3 + 728))
          && (sub_1ABF3223C() & 1) == 0)
        {
          goto LABEL_14;
        }
        v46 = *(unsigned __int8 *)(v4 + 736);
        v47 = *(unsigned __int8 *)(v3 + 736);
        if ((_DWORD)v46 == 8)
        {
          if ((_DWORD)v47 != 8)
            goto LABEL_14;
        }
        else if ((_DWORD)v47 == 8 || (sub_1ABDE2A64(v46, v47) & 1) == 0)
        {
          goto LABEL_14;
        }
        v48 = *(_QWORD *)(v4 + 752);
        v49 = *(_QWORD *)(v3 + 752);
        if (v48)
        {
          if (!v49 || (*(_QWORD *)(v4 + 744) != *(_QWORD *)(v3 + 744) || v48 != v49) && (sub_1ABF3223C() & 1) == 0)
            goto LABEL_14;
        }
        else if (v49)
        {
          goto LABEL_14;
        }
        v50 = *(_QWORD *)(v4 + 768);
        v51 = *(_QWORD *)(v3 + 768);
        if (v50)
        {
          if (v51)
          {
            if (*(_QWORD *)(v4 + 760) != *(_QWORD *)(v3 + 760) || v50 != v51)
            {
              v23 = sub_1ABF3223C();
              return v23 & 1;
            }
LABEL_79:
            v23 = 1;
            return v23 & 1;
          }
        }
        else if (!v51)
        {
          goto LABEL_79;
        }
LABEL_14:
        v23 = 0;
        return v23 & 1;
      }
    }
    else
    {
      sub_1ABD843F0((uint64_t)v59, (uint64_t)v55, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
      if (sub_1ABD7520C((uint64_t)v55) != 1)
      {
        sub_1ABD843F0((uint64_t)v58, (uint64_t)__src, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
        memcpy(v61, __src, 0x248uLL);
        sub_1ABD843F0((uint64_t)v59, (uint64_t)v54, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
        memcpy(__dst, v54, sizeof(__dst));
        sub_1ABE2F2FC(v58, sub_1ABD74C04);
        sub_1ABE2F2FC(v59, sub_1ABD74C04);
        v41 = sub_1ABE2A630((uint64_t)v61, (uint64_t)__dst);
        sub_1ABE2F2FC(v59, sub_1ABD7500C);
        sub_1ABE2F2FC(v58, sub_1ABD7500C);
        if ((v41 & 1) == 0)
          goto LABEL_14;
        goto LABEL_46;
      }
    }
    sub_1ABD843F0((uint64_t)v58, (uint64_t)__dst, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1ABD843F0((uint64_t)v59, (uint64_t)&v57, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    sub_1ABE2F2FC(v58, sub_1ABD74C04);
    sub_1ABE2F2FC(v59, sub_1ABD74C04);
    sub_1ABE2F3E8((uint64_t)__dst);
    goto LABEL_14;
  }
  return v23 & 1;
}

uint64_t sub_1ABE2B560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;

  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)
    || (sub_1ABDE0650(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) == 0)
  {
    return 0;
  }
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a2 + 32);
  if (v4 == 1)
  {
    if (v5 == 1)
      goto LABEL_6;
    return 0;
  }
  if (v5 == 1)
    return 0;
  if (!v4)
  {
    if (!v5)
    {
LABEL_6:
      result = *(unsigned __int8 *)(a2 + 64);
      if ((*(_BYTE *)(a1 + 64) & 1) == 0)
        return (*(double *)(a1 + 56) == *(double *)(a2 + 56)) & ~(_DWORD)result;
      return result;
    }
    return 0;
  }
  if (!v5)
    return 0;
  if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && v4 == v5)
    goto LABEL_6;
  v7 = sub_1ABF3223C();
  result = 0;
  if ((v7 & 1) != 0)
    goto LABEL_6;
  return result;
}

uint64_t sub_1ABE2B638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned __int8 *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return v2;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      LOBYTE(v2) = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  v2 = *(unsigned __int8 *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return v2;
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
      LOBYTE(v2) = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  v2 = *(unsigned __int8 *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return v2;
  }
  else
  {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
      LOBYTE(v2) = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  v2 = *(unsigned __int8 *)(a2 + 56);
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 56))
      goto LABEL_25;
    return v2;
  }
  if (*(double *)(a1 + 48) != *(double *)(a2 + 48))
    LOBYTE(v2) = 1;
  if ((v2 & 1) != 0)
    return 0;
LABEL_25:
  if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
    return 0;
  v2 = *(unsigned __int8 *)(a2 + 80);
  if ((*(_BYTE *)(a1 + 80) & 1) != 0)
    return v2;
  return (*(double *)(a1 + 72) == *(double *)(a2 + 72)) & ~(_DWORD)v2;
}

uint64_t sub_1ABE2B720(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[5];
  _QWORD v17[5];

  if ((sub_1ABDE0468(*a1, *a2) & 1) == 0)
    goto LABEL_7;
  v5 = a1[1];
  v4 = a1[2];
  v7 = a1[3];
  v6 = a1[4];
  v8 = a1[5];
  v10 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v12 = a2[4];
  v13 = a2[5];
  if (!v4)
  {
    if (!v9)
    {
      v14 = 1;
      return v14 & 1;
    }
    goto LABEL_6;
  }
  if (!v9)
  {
LABEL_6:
    sub_1ABD7F874(v5, v4);
    sub_1ABD7F874(v10, v9);
    sub_1ABD365D4(v5, v4);
    sub_1ABD365D4(v10, v9);
LABEL_7:
    v14 = 0;
    return v14 & 1;
  }
  v16[0] = v5;
  v16[1] = v4;
  v16[2] = v7;
  v16[3] = v6;
  v16[4] = v8;
  v17[0] = v10;
  v17[1] = v9;
  v17[2] = v11;
  v17[3] = v12;
  v17[4] = v13;
  sub_1ABD7F874(v5, v4);
  sub_1ABD7F874(v5, v4);
  sub_1ABD7F874(v10, v9);
  v14 = sub_1ABEBC628(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1ABD365D4(v5, v4);
  return v14 & 1;
}

uint64_t sub_1ABE2B8C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v15 = a2;
  sub_1ABCF4DA8(0, &qword_1ED34E220, (uint64_t (*)(void))sub_1ABE2BAC4, (uint64_t)&type metadata for SDSQuoteResponse.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2BAC4();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v15;
  sub_1ABD04578(0, &qword_1ED34DF18, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v17) = 0;
  sub_1ABE2BB08();
  sub_1ABF32110();
  v10 = v20;
  v16 = 1;
  sub_1ABD4643C();
  sub_1ABF320C8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v18;
  v14 = v17;
  v11 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)v9 = v10;
  *(_OWORD *)(v9 + 8) = v14;
  *(_OWORD *)(v9 + 24) = v13;
  *(_QWORD *)(v9 + 40) = v11;
  return result;
}

unint64_t sub_1ABE2BAC4()
{
  unint64_t result;

  result = qword_1ED34CFC8;
  if (!qword_1ED34CFC8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41994, &type metadata for SDSQuoteResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CFC8);
  }
  return result;
}

unint64_t sub_1ABE2BB08()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED34DF20;
  if (!qword_1ED34DF20)
  {
    sub_1ABD04578(255, &qword_1ED34DF18, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE2BB80();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED34DF20);
  }
  return result;
}

unint64_t sub_1ABE2BB80()
{
  unint64_t result;

  result = qword_1ED34CF50;
  if (!qword_1ED34CF50)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40A34, &type metadata for SDSQuoteResponse.SDSQuoteResponseItem);
    atomic_store(result, (unint64_t *)&qword_1ED34CF50);
  }
  return result;
}

unint64_t sub_1ABE2BBC4()
{
  unint64_t result;

  result = qword_1ED34CF98;
  if (!qword_1ED34CF98)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41944, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CF98);
  }
  return result;
}

uint64_t sub_1ABE2BC08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1ABCF4DA8(0, &qword_1ED346FE0, (uint64_t (*)(void))sub_1ABE2F700, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2F700();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  LOBYTE(v30) = 0;
  sub_1ABE2F744();
  v10 = v28;
  sub_1ABF32110();
  v12 = v34;
  v11 = v35;
  sub_1ABD04578(0, &qword_1ED346F18, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  LOBYTE(v30) = 1;
  sub_1ABE2F788();
  sub_1ABF32110();
  v27 = v11;
  v13 = v36;
  v29 = 2;
  sub_1ABE2F844();
  sub_1ABF320C8();
  v23 = v30;
  v24 = v31;
  v25 = v32;
  v26 = v13;
  LOBYTE(v13) = v33;
  v29 = 3;
  v14 = sub_1ABF320A4();
  v15 = v8;
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v10);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = v27;
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v19;
  v20 = v23;
  *(_QWORD *)(a2 + 16) = v26;
  *(_QWORD *)(a2 + 24) = v20;
  v21 = v25;
  *(_QWORD *)(a2 + 32) = v24;
  *(_QWORD *)(a2 + 40) = v21;
  *(_BYTE *)(a2 + 48) = v13;
  *(_QWORD *)(a2 + 56) = v14;
  *(_BYTE *)(a2 + 64) = v17 & 1;
  return result;
}

uint64_t sub_1ABE2BEC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1ABCF4DA8(0, &qword_1ED346FE8, (uint64_t (*)(void))sub_1ABE2FA44, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE2FA44();
  sub_1ABF3235C();
  if (!v1)
  {
    v12 = 0;
    v8 = sub_1ABF3208C();
    v11 = 1;
    sub_1ABF320B0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

uint64_t sub_1ABE2C060(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1ABCF4DA8(0, &qword_1ED346FF0, (uint64_t (*)(void))sub_1ABE30880, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ABE30880();
  sub_1ABF3235C();
  if (!v1)
  {
    v12 = 0;
    v8 = sub_1ABF32104();
    v11 = 1;
    sub_1ABF32104();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

uint64_t sub_1ABE2C1CC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t *v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;

  v34 = a2;
  sub_1ABCF4DA8(0, &qword_1ED346FF8, (uint64_t (*)(void))sub_1ABE308C4, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABE308C4();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v40 = 0;
  v10 = v5;
  v11 = sub_1ABF320A4();
  v13 = v12;
  v39 = 1;
  v14 = sub_1ABF320A4();
  v33 = v15;
  v38 = 2;
  v16 = sub_1ABF320A4();
  v31 = v17;
  v32 = v16;
  v37 = 3;
  v18 = sub_1ABF320A4();
  v29 = v19;
  v30 = v18;
  v36 = 4;
  v28 = sub_1ABF32104();
  v35 = 5;
  v20 = sub_1ABF320A4();
  v21 = v8;
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v21, v10);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = v14;
  v26 = v34;
  *v34 = v11;
  *((_BYTE *)v26 + 8) = v13 & 1;
  v26[2] = v25;
  *((_BYTE *)v26 + 24) = v33 & 1;
  v26[4] = v32;
  *((_BYTE *)v26 + 40) = v31 & 1;
  v26[6] = v30;
  *((_BYTE *)v26 + 56) = v29 & 1;
  v26[8] = v28;
  v26[9] = v20;
  *((_BYTE *)v26 + 80) = v23 & 1;
  return result;
}

uint64_t sub_1ABE2C450()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

void *sub_1ABE2C498@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD v51[97];
  _BYTE v52[584];
  _QWORD v53[81];
  unsigned __int8 v54;
  int v55;
  char v56;
  unsigned __int8 v57;
  char v58;

  sub_1ABCF4DA8(0, &qword_1ED34E208, (uint64_t (*)(void))sub_1ABE2F020, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v49 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - v7;
  v9 = a1[3];
  v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1ABE2F020();
  sub_1ABF3235C();
  if (v2)
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  v47 = a2;
  v48 = v6;
  LOBYTE(v51[0]) = 0;
  sub_1ABE2F064();
  sub_1ABF320C8();
  v10 = v53[74];
  v42 = v53[73];
  v43 = v53[75];
  v11 = v53[78];
  v45 = v53[76];
  v46 = v53[77];
  v12 = v53[80];
  v44 = v53[79];
  v13 = v54;
  LOBYTE(v51[0]) = 1;
  v37 = sub_1ABF3208C();
  v55 = v13;
  v38 = v10;
  v39 = v12;
  v40 = v14;
  v41 = v11;
  LOBYTE(v51[0]) = 2;
  v15 = sub_1ABF3208C();
  v17 = v16;
  v36 = v15;
  v58 = 3;
  sub_1ABE2F0A8();
  sub_1ABF320C8();
  sub_1ABD843F0((uint64_t)v53, (uint64_t)v52, &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
  LOBYTE(v51[0]) = 4;
  v34 = sub_1ABF3208C();
  v35 = v18;
  LOBYTE(v51[0]) = 5;
  v32 = sub_1ABF3208C();
  v33 = v19;
  LOBYTE(v51[0]) = 6;
  v30 = sub_1ABF320E0();
  v31 = v20;
  LOBYTE(v51[0]) = 7;
  sub_1ABE2F0EC();
  sub_1ABF320C8();
  v28 = v57;
  LOBYTE(v51[0]) = 8;
  v27 = sub_1ABF3208C();
  v29 = v21;
  v56 = 9;
  v22 = sub_1ABF3208C();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v49);
  v51[0] = v42;
  v51[1] = v38;
  v51[2] = v43;
  v51[3] = v45;
  v51[4] = v46;
  v51[5] = v41;
  v51[6] = v44;
  v51[7] = v39;
  LOBYTE(v51[8]) = v55;
  v51[9] = v37;
  v51[10] = v40;
  v51[11] = v36;
  v51[12] = v17;
  sub_1ABD843F0((uint64_t)v52, (uint64_t)&v51[13], &qword_1ED34C910, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
  v51[86] = v34;
  v51[87] = v35;
  v51[88] = v32;
  v51[89] = v33;
  v51[90] = v30;
  v51[91] = v31;
  LOBYTE(v51[92]) = v28;
  v51[93] = v27;
  v51[94] = v29;
  v51[95] = v22;
  v51[96] = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  return memcpy(v47, v51, 0x308uLL);
}

uint64_t sub_1ABE2CB9C()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

unint64_t sub_1ABE2CBE4(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD v5[4];

  v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ABF32344();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1ABF32248();
    LODWORD(v3) = sub_1ABE2CB9C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    if (v3 == 8)
      v3 = 0;
    else
      v3 = v3;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1ABE2CCB4()
{
  unint64_t v0;

  v0 = sub_1ABF3226C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x28)
    return 40;
  else
    return v0;
}

uint64_t sub_1ABE2CD04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  int v41;
  char v42;
  char v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  int v137;
  int v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  __int16 v143;
  char v144;
  _BYTE v145[7];
  char v146;
  _BYTE v147[7];
  char v148;
  _BYTE v149[7];
  char v150;
  int v151;
  __int16 v152;
  char v153;
  _BYTE v154[7];
  char v155;
  _BYTE v156[7];
  char v157;
  _BYTE v158[7];
  char v159;
  _BYTE v160[7];
  char v161;
  _BYTE v162[7];
  _BYTE v163[7];
  char v164;
  _BYTE v165[7];
  char v166;
  _BYTE v167[7];
  char v168;
  _BYTE v169[7];
  char v170;
  _BYTE v171[7];
  char v172;
  _BYTE v173[7];
  char v174;
  _BYTE v175[7];
  char v176;
  int v177;
  __int16 v178;
  char v179;
  _BYTE v180[7];
  char v181;
  int v182;
  __int16 v183;
  char v184;
  _BYTE v185[7];
  char v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unsigned __int8 v191;
  unsigned __int8 v192;
  unsigned __int8 v193;
  char v194;
  unsigned __int8 v195;
  _QWORD *v196;

  sub_1ABCF4DA8(0, &qword_1ED34E210, (uint64_t (*)(void))sub_1ABE2E550, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v73 - v8;
  v10 = a1[3];
  v196 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1ABE2E550();
  sub_1ABF3235C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v196);
  LOBYTE(v188) = 0;
  v11 = sub_1ABF320A4();
  v13 = v12;
  LOBYTE(v188) = 1;
  v14 = sub_1ABF320A4();
  v16 = v15;
  v140 = v11;
  v141 = v14;
  LOBYTE(v188) = 2;
  v17 = sub_1ABE2E594();
  sub_1ABF320C8();
  v139 = v17;
  v138 = v16;
  v18 = v195;
  LOBYTE(v188) = 37;
  sub_1ABF320A4();
  v137 = v18;
  LOBYTE(v188) = 38;
  sub_1ABF320A4();
  LOBYTE(v188) = 39;
  sub_1ABF320C8();
  v19 = sub_1ABE287C8();
  v136 = v20;
  LOBYTE(v188) = 4;
  v21 = sub_1ABF320A4();
  v132 = v22;
  v134 = v21;
  LOBYTE(v188) = 5;
  v133 = sub_1ABF3208C();
  v135 = v23;
  LOBYTE(v188) = 6;
  v131 = v6;
  v130 = v9;
  v129 = sub_1ABF320A4();
  v128 = v24;
  LOBYTE(v188) = 7;
  v127 = sub_1ABF320A4();
  v126 = v25;
  LOBYTE(v188) = 8;
  v125 = sub_1ABF320A4();
  v124 = v26;
  LOBYTE(v188) = 9;
  v122 = sub_1ABF3208C();
  v123 = v27;
  LOBYTE(v188) = 10;
  v121 = sub_1ABF320A4();
  v120 = v28;
  LOBYTE(v188) = 11;
  v119 = sub_1ABF320A4();
  v118 = v29;
  LOBYTE(v188) = 12;
  v116 = sub_1ABF3208C();
  v117 = v30;
  LOBYTE(v188) = 13;
  v114 = sub_1ABF3208C();
  v115 = v31;
  LOBYTE(v188) = 14;
  v112 = sub_1ABF3208C();
  v113 = v32;
  LOBYTE(v188) = 15;
  sub_1ABE2E5D8();
  sub_1ABF320C8();
  v33 = v194;
  LOBYTE(v188) = 16;
  v111 = sub_1ABF320A4();
  v110 = v34;
  LOBYTE(v188) = 17;
  v108 = sub_1ABF3208C();
  v109 = v35;
  LOBYTE(v188) = 18;
  v107 = sub_1ABF320A4();
  v106 = v36;
  LOBYTE(v188) = 19;
  v37 = sub_1ABF320A4();
  v105 = v38;
  v39 = v37;
  LOBYTE(v188) = 20;
  v104 = sub_1ABF320A4();
  v103 = v40;
  LOBYTE(v188) = 21;
  v102 = sub_1ABF320A4();
  v101 = v41;
  LOBYTE(v188) = 22;
  sub_1ABF320C8();
  LODWORD(v139) = v193;
  v100 = sub_1ABE2893C();
  v43 = v42;
  LOBYTE(v188) = 24;
  v99 = sub_1ABF320A4();
  v98 = v44;
  LOBYTE(v188) = 25;
  v97 = sub_1ABF320A4();
  v96 = v45;
  LOBYTE(v188) = 26;
  v94 = sub_1ABF3208C();
  v95 = v46;
  LOBYTE(v188) = 27;
  v92 = sub_1ABF3208C();
  v93 = v47;
  LOBYTE(v188) = 28;
  sub_1ABE2E61C();
  sub_1ABF320C8();
  v90 = v190;
  v89 = v191;
  v87 = v192;
  LOBYTE(v188) = 29;
  v88 = sub_1ABF3208C();
  v91 = v48;
  LOBYTE(v188) = 30;
  v85 = sub_1ABF3208C();
  v86 = v49;
  LOBYTE(v188) = 31;
  v83 = sub_1ABF3208C();
  v84 = v50;
  LOBYTE(v188) = 32;
  v81 = sub_1ABF3208C();
  v82 = v51;
  LOBYTE(v188) = 33;
  v79 = sub_1ABF3208C();
  v80 = v52;
  v185[0] = 34;
  sub_1ABE2E660();
  sub_1ABF320C8();
  v77 = v188;
  v78 = v189;
  v185[0] = 35;
  v75 = sub_1ABF3208C();
  v76 = v53;
  v187 = 36;
  v54 = sub_1ABF3208C();
  v74 = v55;
  v56 = v54;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v130, v131);
  v186 = v13 & 1;
  v184 = v138 & 1;
  v181 = v13 & 1;
  v179 = v138 & 1;
  v176 = v136 & 1;
  v174 = v132 & 1;
  v172 = v128 & 1;
  v170 = v126 & 1;
  v168 = v124 & 1;
  v166 = v120 & 1;
  v164 = v118 & 1;
  v161 = v110 & 1;
  v159 = v106 & 1;
  v157 = v105 & 1;
  v155 = v103 & 1;
  v153 = v101 & 1;
  v150 = v43 & 1;
  v148 = v98 & 1;
  v146 = v96 & 1;
  v144 = v87;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v196);
  *(_QWORD *)(a2 + 64) = v19;
  *(_QWORD *)(a2 + 80) = v134;
  v58 = v135;
  *(_QWORD *)(a2 + 96) = v133;
  *(_QWORD *)(a2 + 104) = v58;
  *(_QWORD *)(a2 + 112) = v129;
  *(_QWORD *)(a2 + 128) = v127;
  *(_QWORD *)(a2 + 144) = v125;
  v59 = v123;
  *(_QWORD *)(a2 + 160) = v122;
  *(_QWORD *)(a2 + 168) = v59;
  *(_QWORD *)(a2 + 176) = v121;
  *(_QWORD *)(a2 + 192) = v119;
  v60 = v117;
  *(_QWORD *)(a2 + 208) = v116;
  *(_QWORD *)(a2 + 216) = v60;
  v61 = v115;
  *(_QWORD *)(a2 + 224) = v114;
  *(_QWORD *)(a2 + 232) = v61;
  v62 = v113;
  *(_QWORD *)(a2 + 240) = v112;
  *(_QWORD *)(a2 + 248) = v62;
  *(_BYTE *)(a2 + 256) = v33;
  *(_QWORD *)(a2 + 264) = v111;
  v63 = v109;
  *(_QWORD *)(a2 + 280) = v108;
  *(_QWORD *)(a2 + 288) = v63;
  *(_QWORD *)(a2 + 296) = v107;
  *(_QWORD *)(a2 + 312) = v39;
  *(_QWORD *)(a2 + 328) = v104;
  *(_QWORD *)(a2 + 344) = v102;
  *(_BYTE *)(a2 + 8) = v186;
  *(_DWORD *)(a2 + 9) = *(_DWORD *)v185;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)&v185[3];
  *(_BYTE *)(a2 + 24) = v184;
  *(_DWORD *)(a2 + 26) = v182;
  *(_WORD *)(a2 + 30) = v183;
  v64 = v140;
  *(_QWORD *)a2 = v140;
  v65 = v141;
  *(_QWORD *)(a2 + 16) = v141;
  v66 = v137;
  *(_BYTE *)(a2 + 25) = v137;
  *(_QWORD *)(a2 + 32) = v64;
  *(_BYTE *)(a2 + 40) = v181;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v180[3];
  *(_DWORD *)(a2 + 41) = *(_DWORD *)v180;
  *(_QWORD *)(a2 + 48) = v65;
  *(_BYTE *)(a2 + 56) = v179;
  *(_BYTE *)(a2 + 57) = v66;
  *(_DWORD *)(a2 + 58) = v177;
  *(_WORD *)(a2 + 62) = v178;
  *(_BYTE *)(a2 + 72) = v176;
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v175;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v175[3];
  *(_BYTE *)(a2 + 88) = v174;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v173[3];
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v173;
  *(_BYTE *)(a2 + 120) = v172;
  *(_DWORD *)(a2 + 124) = *(_DWORD *)&v171[3];
  *(_DWORD *)(a2 + 121) = *(_DWORD *)v171;
  *(_BYTE *)(a2 + 136) = v170;
  LODWORD(v64) = *(_DWORD *)v169;
  *(_DWORD *)(a2 + 140) = *(_DWORD *)&v169[3];
  *(_DWORD *)(a2 + 137) = v64;
  *(_BYTE *)(a2 + 152) = v168;
  LODWORD(v64) = *(_DWORD *)v167;
  *(_DWORD *)(a2 + 156) = *(_DWORD *)&v167[3];
  *(_DWORD *)(a2 + 153) = v64;
  *(_BYTE *)(a2 + 184) = v166;
  LODWORD(v64) = *(_DWORD *)v165;
  *(_DWORD *)(a2 + 188) = *(_DWORD *)&v165[3];
  *(_DWORD *)(a2 + 185) = v64;
  *(_BYTE *)(a2 + 200) = v164;
  LODWORD(v64) = *(_DWORD *)v163;
  *(_DWORD *)(a2 + 204) = *(_DWORD *)&v163[3];
  *(_DWORD *)(a2 + 201) = v64;
  LODWORD(v65) = *(_DWORD *)v162;
  *(_DWORD *)(a2 + 260) = *(_DWORD *)&v162[3];
  *(_DWORD *)(a2 + 257) = v65;
  *(_BYTE *)(a2 + 272) = v161;
  LODWORD(v65) = *(_DWORD *)v160;
  *(_DWORD *)(a2 + 276) = *(_DWORD *)&v160[3];
  *(_DWORD *)(a2 + 273) = v65;
  *(_BYTE *)(a2 + 304) = v159;
  LODWORD(v65) = *(_DWORD *)v158;
  *(_DWORD *)(a2 + 308) = *(_DWORD *)&v158[3];
  *(_DWORD *)(a2 + 305) = v65;
  *(_BYTE *)(a2 + 320) = v157;
  LODWORD(v65) = *(_DWORD *)v156;
  *(_DWORD *)(a2 + 324) = *(_DWORD *)&v156[3];
  *(_DWORD *)(a2 + 321) = v65;
  *(_BYTE *)(a2 + 336) = v155;
  LODWORD(v65) = *(_DWORD *)v154;
  *(_DWORD *)(a2 + 340) = *(_DWORD *)&v154[3];
  *(_DWORD *)(a2 + 337) = v65;
  *(_BYTE *)(a2 + 352) = v153;
  *(_BYTE *)(a2 + 353) = v139;
  LODWORD(v65) = v151;
  *(_WORD *)(a2 + 358) = v152;
  *(_DWORD *)(a2 + 354) = v65;
  *(_QWORD *)(a2 + 360) = v100;
  *(_BYTE *)(a2 + 368) = v150;
  LODWORD(v65) = *(_DWORD *)v149;
  *(_DWORD *)(a2 + 372) = *(_DWORD *)&v149[3];
  *(_DWORD *)(a2 + 369) = v65;
  *(_QWORD *)(a2 + 376) = v99;
  *(_BYTE *)(a2 + 384) = v148;
  LODWORD(v65) = *(_DWORD *)v147;
  *(_DWORD *)(a2 + 388) = *(_DWORD *)&v147[3];
  *(_DWORD *)(a2 + 385) = v65;
  *(_QWORD *)(a2 + 392) = v97;
  *(_BYTE *)(a2 + 400) = v146;
  LODWORD(v65) = *(_DWORD *)v145;
  *(_DWORD *)(a2 + 404) = *(_DWORD *)&v145[3];
  *(_DWORD *)(a2 + 401) = v65;
  v67 = v95;
  *(_QWORD *)(a2 + 408) = v94;
  *(_QWORD *)(a2 + 416) = v67;
  v68 = v93;
  *(_QWORD *)(a2 + 424) = v92;
  *(_QWORD *)(a2 + 432) = v68;
  *(_QWORD *)(a2 + 440) = v90;
  *(_BYTE *)(a2 + 448) = v89;
  *(_BYTE *)(a2 + 449) = v144;
  LODWORD(v65) = v142;
  *(_WORD *)(a2 + 454) = v143;
  *(_DWORD *)(a2 + 450) = v65;
  v69 = v91;
  *(_QWORD *)(a2 + 456) = v88;
  *(_QWORD *)(a2 + 464) = v69;
  v70 = v86;
  *(_QWORD *)(a2 + 472) = v85;
  *(_QWORD *)(a2 + 480) = v70;
  v71 = v84;
  *(_QWORD *)(a2 + 488) = v83;
  *(_QWORD *)(a2 + 496) = v71;
  v72 = v82;
  *(_QWORD *)(a2 + 504) = v81;
  *(_QWORD *)(a2 + 512) = v72;
  *(_QWORD *)(a2 + 520) = v79;
  *(_QWORD *)(a2 + 528) = v80;
  *(_QWORD *)(a2 + 536) = v77;
  *(_QWORD *)(a2 + 544) = v78;
  *(_QWORD *)(a2 + 552) = v75;
  *(_QWORD *)(a2 + 560) = v76;
  *(_QWORD *)(a2 + 568) = v56;
  *(_QWORD *)(a2 + 576) = v74;
  return result;
}

uint64_t sub_1ABE2E440()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1ABE2E484()
{
  unint64_t v0;

  v0 = sub_1ABF32068();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_1ABE2E4C8()
{
  unint64_t result;

  result = qword_1ED34CF20;
  if (!qword_1ED34CF20)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40C8C, &type metadata for SDSQuoteResponse.SDSQuoteSource);
    atomic_store(result, (unint64_t *)&qword_1ED34CF20);
  }
  return result;
}

unint64_t sub_1ABE2E50C()
{
  unint64_t result;

  result = qword_1ED34CF68;
  if (!qword_1ED34CF68)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40B9C, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
    atomic_store(result, (unint64_t *)&qword_1ED34CF68);
  }
  return result;
}

unint64_t sub_1ABE2E550()
{
  unint64_t result;

  result = qword_1ED34CF80;
  if (!qword_1ED34CF80)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF418F4, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CF80);
  }
  return result;
}

unint64_t sub_1ABE2E594()
{
  unint64_t result;

  result = qword_1ED34CF28;
  if (!qword_1ED34CF28)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40C64, &type metadata for SDSQuoteResponse.SDSQuoteSource);
    atomic_store(result, (unint64_t *)&qword_1ED34CF28);
  }
  return result;
}

unint64_t sub_1ABE2E5D8()
{
  unint64_t result;

  result = qword_1ED34CF70;
  if (!qword_1ED34CF70)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40B74, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
    atomic_store(result, (unint64_t *)&qword_1ED34CF70);
  }
  return result;
}

unint64_t sub_1ABE2E61C()
{
  unint64_t result;

  result = qword_1ED34CFB0;
  if (!qword_1ED34CFB0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40D7C, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
    atomic_store(result, (unint64_t *)&qword_1ED34CFB0);
  }
  return result;
}

unint64_t sub_1ABE2E660()
{
  unint64_t result;

  result = qword_1ED34CFE0;
  if (!qword_1ED34CFE0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40AAC, &type metadata for SDSQuoteResponse.SDSFundComposition);
    atomic_store(result, (unint64_t *)&qword_1ED34CFE0);
  }
  return result;
}

unint64_t sub_1ABE2E6A4()
{
  unint64_t result;

  result = qword_1EEC437C0;
  if (!qword_1EEC437C0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF418B4, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEC437C0);
  }
  return result;
}

unint64_t sub_1ABE2E6E8()
{
  unint64_t result;

  result = qword_1EEC437D0;
  if (!qword_1EEC437D0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40C3C, &type metadata for SDSQuoteResponse.SDSQuoteSource);
    atomic_store(result, (unint64_t *)&qword_1EEC437D0);
  }
  return result;
}

unint64_t sub_1ABE2E72C()
{
  unint64_t result;

  result = qword_1EEC437D8;
  if (!qword_1EEC437D8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40B4C, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.SDSQuoteResponseQuoteItemExchangeStatus);
    atomic_store(result, (unint64_t *)&qword_1EEC437D8);
  }
  return result;
}

unint64_t sub_1ABE2E770()
{
  unint64_t result;

  result = qword_1EEC437E0;
  if (!qword_1EEC437E0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40D54, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset);
    atomic_store(result, (unint64_t *)&qword_1EEC437E0);
  }
  return result;
}

unint64_t sub_1ABE2E7B4()
{
  unint64_t result;

  result = qword_1EEC437F0;
  if (!qword_1EEC437F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40A84, &type metadata for SDSQuoteResponse.SDSFundComposition);
    atomic_store(result, (unint64_t *)&qword_1EEC437F0);
  }
  return result;
}

double sub_1ABE2E7F8(_QWORD *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v4;
  double v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v15;
  uint64_t v16;
  char v17;
  char v18;

  sub_1ABCF4DA8(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v16 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1ABF3235C();
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = v9;
    v18 = 0;
    v13 = v16;
    sub_1ABF320E0();
    v17 = 1;
    sub_1ABF2FF5C();
    sub_1ABF320F8();
    v5 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1ABE2E9A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69646C6F48706F74 && a2 == 0xEB0000000073676ELL;
  if (v2 || (sub_1ABF3223C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F74636553706F74 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1ABF3223C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1ABE2EABC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  sub_1ABCF4DA8(0, &qword_1EEC437F8, (uint64_t (*)(void))sub_1ABE2ECEC, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1ABE2ECEC();
  sub_1ABF3235C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_1ABD04578(0, &qword_1EEC43808, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v11 = 0;
    sub_1ABE2ED30();
    sub_1ABF32110();
    v8 = v12;
    sub_1ABD04578(0, &qword_1EEC43820, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v11 = 1;
    sub_1ABE2EDEC();
    sub_1ABF2FF5C();
    sub_1ABF32110();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1ABF2FF5C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1ABE2ECEC()
{
  unint64_t result;

  result = qword_1EEC43800;
  if (!qword_1EEC43800)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41864, &type metadata for SDSQuoteResponse.SDSFundComposition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43800);
  }
  return result;
}

unint64_t sub_1ABE2ED30()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC43810;
  if (!qword_1EEC43810)
  {
    sub_1ABD04578(255, &qword_1EEC43808, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE2EDA8();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC43810);
  }
  return result;
}

unint64_t sub_1ABE2EDA8()
{
  unint64_t result;

  result = qword_1EEC43818;
  if (!qword_1EEC43818)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4183C, &type metadata for SDSQuoteResponse.SDSFundComposition.Holding);
    atomic_store(result, (unint64_t *)&qword_1EEC43818);
  }
  return result;
}

unint64_t sub_1ABE2EDEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC43828;
  if (!qword_1EEC43828)
  {
    sub_1ABD04578(255, &qword_1EEC43820, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE2EE64();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC43828);
  }
  return result;
}

unint64_t sub_1ABE2EE64()
{
  unint64_t result;

  result = qword_1EEC43830;
  if (!qword_1EEC43830)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41814, &type metadata for SDSQuoteResponse.SDSFundComposition.Sector);
    atomic_store(result, (unint64_t *)&qword_1EEC43830);
  }
  return result;
}

unint64_t sub_1ABE2EEA8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC43840;
  if (!qword_1EEC43840)
  {
    sub_1ABD04578(255, &qword_1EEC43808, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Holding, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE2EF20();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC43840);
  }
  return result;
}

unint64_t sub_1ABE2EF20()
{
  unint64_t result;

  result = qword_1EEC43848;
  if (!qword_1EEC43848)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF417EC, &type metadata for SDSQuoteResponse.SDSFundComposition.Holding);
    atomic_store(result, (unint64_t *)&qword_1EEC43848);
  }
  return result;
}

unint64_t sub_1ABE2EF64()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC43850;
  if (!qword_1EEC43850)
  {
    sub_1ABD04578(255, &qword_1EEC43820, (uint64_t)&type metadata for SDSQuoteResponse.SDSFundComposition.Sector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE2EFDC();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC43850);
  }
  return result;
}

unint64_t sub_1ABE2EFDC()
{
  unint64_t result;

  result = qword_1EEC43858;
  if (!qword_1EEC43858)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF417C4, &type metadata for SDSQuoteResponse.SDSFundComposition.Sector);
    atomic_store(result, (unint64_t *)&qword_1EEC43858);
  }
  return result;
}

unint64_t sub_1ABE2F020()
{
  unint64_t result;

  result = qword_1ED34CF38;
  if (!qword_1ED34CF38)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41774, &type metadata for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CF38);
  }
  return result;
}

unint64_t sub_1ABE2F064()
{
  unint64_t result;

  result = qword_1ED34CF60;
  if (!qword_1ED34CF60)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF409BC, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem);
    atomic_store(result, (unint64_t *)&qword_1ED34CF60);
  }
  return result;
}

unint64_t sub_1ABE2F0A8()
{
  unint64_t result;

  result = qword_1ED34CFC0;
  if (!qword_1ED34CFC0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40B24, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    atomic_store(result, (unint64_t *)&qword_1ED34CFC0);
  }
  return result;
}

unint64_t sub_1ABE2F0EC()
{
  unint64_t result;

  result = qword_1ED34CF58;
  if (!qword_1ED34CF58)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4174C, &type metadata for SDSQuoteResponse.SDSQuoteResponseItemType);
    atomic_store(result, (unint64_t *)&qword_1ED34CF58);
  }
  return result;
}

unint64_t sub_1ABE2F130()
{
  unint64_t result;

  result = qword_1EEC43870;
  if (!qword_1EEC43870)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40994, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem);
    atomic_store(result, (unint64_t *)&qword_1EEC43870);
  }
  return result;
}

uint64_t sub_1ABE2F174(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1ABD04578(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v8 = a4;
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEE988], v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ABE2F1D0()
{
  unint64_t result;

  result = qword_1EEC43880;
  if (!qword_1EEC43880)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40AFC, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem);
    atomic_store(result, (unint64_t *)&qword_1EEC43880);
  }
  return result;
}

unint64_t sub_1ABE2F214()
{
  unint64_t result;

  result = qword_1EEC43890;
  if (!qword_1EEC43890)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41724, &type metadata for SDSQuoteResponse.SDSQuoteResponseItemType);
    atomic_store(result, (unint64_t *)&qword_1EEC43890);
  }
  return result;
}

uint64_t *sub_1ABE2F258(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[9];
  v3 = a1[10];
  v4 = a1[11];
  v5 = a1[12];
  v6 = a1[13];
  sub_1ABD66BAC(*a1, a1[1], a1[2], a1[3], a1[4]);
  sub_1ABD66BAC(v2, v3, v4, v5, v6);
  return a1;
}

#error "1ABE2F3C0: call analysis failed (funcsize=59)"

uint64_t sub_1ABE2F3E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;

  v2 = *(_QWORD *)(a1 + 584);
  v3 = *(_QWORD *)(a1 + 592);
  v4 = *(_QWORD *)(a1 + 600);
  v5 = *(_QWORD *)(a1 + 608);
  v6 = *(_QWORD *)(a1 + 616);
  v7 = *(_QWORD *)(a1 + 624);
  v8 = *(_QWORD *)(a1 + 632);
  v9 = *(_QWORD *)(a1 + 640);
  v53 = *(_OWORD *)(a1 + 664);
  v54 = *(_OWORD *)(a1 + 648);
  v51 = *(_OWORD *)(a1 + 696);
  v52 = *(_OWORD *)(a1 + 680);
  v49 = *(_OWORD *)(a1 + 728);
  v50 = *(_OWORD *)(a1 + 712);
  v47 = *(_OWORD *)(a1 + 760);
  v48 = *(_OWORD *)(a1 + 744);
  v45 = *(_OWORD *)(a1 + 792);
  v46 = *(_OWORD *)(a1 + 776);
  v43 = *(_OWORD *)(a1 + 824);
  v44 = *(_OWORD *)(a1 + 808);
  v41 = *(_OWORD *)(a1 + 856);
  v42 = *(_OWORD *)(a1 + 840);
  v39 = *(_OWORD *)(a1 + 888);
  v40 = *(_OWORD *)(a1 + 872);
  v37 = *(_OWORD *)(a1 + 920);
  v38 = *(_OWORD *)(a1 + 904);
  v35 = *(_OWORD *)(a1 + 952);
  v36 = *(_OWORD *)(a1 + 936);
  v33 = *(_OWORD *)(a1 + 984);
  v34 = *(_OWORD *)(a1 + 968);
  v31 = *(_OWORD *)(a1 + 1016);
  v32 = *(_OWORD *)(a1 + 1000);
  v29 = *(_OWORD *)(a1 + 1048);
  v30 = *(_OWORD *)(a1 + 1032);
  v27 = *(_OWORD *)(a1 + 1080);
  v28 = *(_OWORD *)(a1 + 1064);
  v26 = *(_OWORD *)(a1 + 480);
  v24 = *(_OWORD *)(a1 + 448);
  v25 = *(_OWORD *)(a1 + 464);
  v22 = *(_OWORD *)(a1 + 416);
  v23 = *(_OWORD *)(a1 + 432);
  v20 = *(_OWORD *)(a1 + 384);
  v21 = *(_OWORD *)(a1 + 400);
  v18 = *(_OWORD *)(a1 + 352);
  v19 = *(_OWORD *)(a1 + 368);
  v16 = *(_OWORD *)(a1 + 320);
  v17 = *(_OWORD *)(a1 + 336);
  v14 = *(_OWORD *)(a1 + 288);
  v15 = *(_OWORD *)(a1 + 304);
  v12 = *(_OWORD *)(a1 + 256);
  v13 = *(_OWORD *)(a1 + 272);
  v11 = *(_OWORD *)(a1 + 224);
  sub_1ABD7500C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v11,
    *((uint64_t *)&v11 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    *(_QWORD *)(a1 + 496));
  sub_1ABD7500C(v2, v3, v4, v5, v6, v7, v8, v9, v54, *((uint64_t *)&v54 + 1), v53, *((uint64_t *)&v53 + 1), v52, *((uint64_t *)&v52 + 1), v51, *((uint64_t *)&v51 + 1), v50, *((uint64_t *)&v50 + 1), v49,
    *((uint64_t *)&v49 + 1),
    v48,
    *((uint64_t *)&v48 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v27);
  return a1;
}

unint64_t sub_1ABE2F700()
{
  unint64_t result;

  result = qword_1ED346948;
  if (!qword_1ED346948)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF416D4, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346948);
  }
  return result;
}

unint64_t sub_1ABE2F744()
{
  unint64_t result;

  result = qword_1ED346998;
  if (!qword_1ED346998)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF416AC, &type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange);
    atomic_store(result, (unint64_t *)&qword_1ED346998);
  }
  return result;
}

unint64_t sub_1ABE2F788()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED346F20;
  if (!qword_1ED346F20)
  {
    sub_1ABD04578(255, &qword_1ED346F18, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE2F800();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED346F20);
  }
  return result;
}

unint64_t sub_1ABE2F800()
{
  unint64_t result;

  result = qword_1ED3469B8;
  if (!qword_1ED3469B8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41684, &type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem);
    atomic_store(result, (unint64_t *)&qword_1ED3469B8);
  }
  return result;
}

unint64_t sub_1ABE2F844()
{
  unint64_t result;

  result = qword_1ED346978;
  if (!qword_1ED346978)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40944, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset);
    atomic_store(result, (unint64_t *)&qword_1ED346978);
  }
  return result;
}

unint64_t sub_1ABE2F888()
{
  unint64_t result;

  result = qword_1EEC438A0;
  if (!qword_1EEC438A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4165C, &type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange);
    atomic_store(result, (unint64_t *)&qword_1EEC438A0);
  }
  return result;
}

unint64_t sub_1ABE2F8CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC438A8;
  if (!qword_1EEC438A8)
  {
    sub_1ABD04578(255, &qword_1ED346F18, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE2F944();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC438A8);
  }
  return result;
}

unint64_t sub_1ABE2F944()
{
  unint64_t result;

  result = qword_1EEC438B0;
  if (!qword_1EEC438B0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41634, &type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem);
    atomic_store(result, (unint64_t *)&qword_1EEC438B0);
  }
  return result;
}

unint64_t sub_1ABE2F988()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC438C0;
  if (!qword_1EEC438C0)
  {
    sub_1ABD04578(255, &qword_1EEC438B8, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v2 = v1;
    v3 = sub_1ABE2FA00();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC438C0);
  }
  return result;
}

unint64_t sub_1ABE2FA00()
{
  unint64_t result;

  result = qword_1EEC438C8;
  if (!qword_1EEC438C8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4091C, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset);
    atomic_store(result, (unint64_t *)&qword_1EEC438C8);
  }
  return result;
}

unint64_t sub_1ABE2FA44()
{
  unint64_t result;

  result = qword_1ED346960;
  if (!qword_1ED346960)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF415E4, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346960);
  }
  return result;
}

unint64_t sub_1ABE2FA88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EEC438E0;
  if (!qword_1EEC438E0)
  {
    sub_1ABD04578(255, &qword_1ED34DF18, (uint64_t)&type metadata for SDSQuoteResponse.SDSQuoteResponseItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1ABE2FB00();
    result = MEMORY[0x1AF438F30](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEC438E0);
  }
  return result;
}

unint64_t sub_1ABE2FB00()
{
  unint64_t result;

  result = qword_1EEC438E8;
  if (!qword_1EEC438E8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40A0C, &type metadata for SDSQuoteResponse.SDSQuoteResponseItem);
    atomic_store(result, (unint64_t *)&qword_1EEC438E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys;
}

uint64_t _s10StocksCore16SDSQuoteResponseV25SDSQuoteResponseQuoteItemV39SDSQuoteResponseQuoteItemExchangeStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1ABE2FBA4 + 4 * byte_1ABF4077D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1ABE2FBD8 + 4 * byte_1ABF40778[v4]))();
}

uint64_t sub_1ABE2FBD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE2FBE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE2FBE8);
  return result;
}

uint64_t sub_1ABE2FBF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE2FBFCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1ABE2FC00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE2FC08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1ABE2FD00 + 4 * byte_1ABF40787[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1ABE2FD34 + 4 * byte_1ABF40782[v4]))();
}

uint64_t sub_1ABE2FD34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE2FD3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE2FD44);
  return result;
}

uint64_t sub_1ABE2FD50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE2FD58);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1ABE2FD5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE2FD64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem.Errors()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.Errors;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD9)
    goto LABEL_17;
  if (a2 + 39 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 39) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 39;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 39;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 39;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x28;
  v8 = v6 - 40;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 39 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 39) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD8)
    return ((uint64_t (*)(void))((char *)&loc_1ABE2FE7C + 4 * byte_1ABF40791[v4]))();
  *a1 = a2 + 39;
  return ((uint64_t (*)(void))((char *)sub_1ABE2FEB0 + 4 * byte_1ABF4078C[v4]))();
}

uint64_t sub_1ABE2FEB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE2FEB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE2FEC0);
  return result;
}

uint64_t sub_1ABE2FECC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE2FED4);
  *(_BYTE *)result = a2 + 39;
  return result;
}

uint64_t sub_1ABE2FED8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE2FEE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ABE2FF3C + 4 * byte_1ABF40796[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ABE2FF5C + 4 * byte_1ABF4079B[v4]))();
}

_BYTE *sub_1ABE2FF3C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ABE2FF5C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE2FF64(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE2FF6C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ABE2FF74(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ABE2FF7C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.CodingKeys()
{
  return &type metadata for SDSQuoteResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition.Sector()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition.Sector;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSFundComposition.Holding()
{
  return &type metadata for SDSQuoteResponse.SDSFundComposition.Holding;
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseItemType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1ABE30014 + 4 * byte_1ABF407A5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1ABE30048 + 4 * byte_1ABF407A0[v4]))();
}

uint64_t sub_1ABE30048(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE30050(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ABE30058);
  return result;
}

uint64_t sub_1ABE30064(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ABE3006CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1ABE30070(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ABE30078(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseItemType()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseItemType;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseEntryItem(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseEntryItem(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 81) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseEntryItem()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem;
}

uint64_t getEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseDateRange(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SDSQuoteResponse.SDSQuoteResponseDateRange(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SDSQuoteResponse.SDSQuoteResponseDateRange()
{
  return &type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange;
}

unint64_t sub_1ABE30188()
{
  unint64_t result;

  result = qword_1EEC438F0;
  if (!qword_1EEC438F0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40F14, &type metadata for SDSQuoteResponse.SDSQuoteResponseItemType);
    atomic_store(result, (unint64_t *)&qword_1EEC438F0);
  }
  return result;
}

unint64_t sub_1ABE301D0()
{
  unint64_t result;

  result = qword_1EEC438F8;
  if (!qword_1EEC438F8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41054, &type metadata for SDSQuoteResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC438F8);
  }
  return result;
}

unint64_t sub_1ABE30218()
{
  unint64_t result;

  result = qword_1EEC43900;
  if (!qword_1EEC43900)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41144, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43900);
  }
  return result;
}

unint64_t sub_1ABE30260()
{
  unint64_t result;

  result = qword_1EEC43908;
  if (!qword_1EEC43908)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41234, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43908);
  }
  return result;
}

unint64_t sub_1ABE302A8()
{
  unint64_t result;

  result = qword_1EEC43910;
  if (!qword_1EEC43910)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF412EC, &type metadata for SDSQuoteResponse.SDSFundComposition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43910);
  }
  return result;
}

unint64_t sub_1ABE302F0()
{
  unint64_t result;

  result = qword_1EEC43918;
  if (!qword_1EEC43918)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF413DC, &type metadata for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43918);
  }
  return result;
}

unint64_t sub_1ABE30338()
{
  unint64_t result;

  result = qword_1EEC43920;
  if (!qword_1EEC43920)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF414CC, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43920);
  }
  return result;
}

unint64_t sub_1ABE30380()
{
  unint64_t result;

  result = qword_1EEC43928;
  if (!qword_1EEC43928)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF415BC, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43928);
  }
  return result;
}

unint64_t sub_1ABE303C8()
{
  unint64_t result;

  result = qword_1ED346970;
  if (!qword_1ED346970)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF414F4, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346970);
  }
  return result;
}

unint64_t sub_1ABE30410()
{
  unint64_t result;

  result = qword_1ED346968;
  if (!qword_1ED346968)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4151C, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.TimeZoneOffset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346968);
  }
  return result;
}

unint64_t sub_1ABE30458()
{
  unint64_t result;

  result = qword_1ED346958;
  if (!qword_1ED346958)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41404, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346958);
  }
  return result;
}

unint64_t sub_1ABE304A0()
{
  unint64_t result;

  result = qword_1ED346950;
  if (!qword_1ED346950)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4142C, &type metadata for SDSQuoteResponse.SDSQuoteResponseChartItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346950);
  }
  return result;
}

unint64_t sub_1ABE304E8()
{
  unint64_t result;

  result = qword_1ED34CF48;
  if (!qword_1ED34CF48)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41314, &type metadata for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CF48);
  }
  return result;
}

unint64_t sub_1ABE30530()
{
  unint64_t result;

  result = qword_1ED34CF40;
  if (!qword_1ED34CF40)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4133C, &type metadata for SDSQuoteResponse.SDSQuoteResponseItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CF40);
  }
  return result;
}

unint64_t sub_1ABE30578()
{
  unint64_t result;

  result = qword_1EEC43930;
  if (!qword_1EEC43930)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4125C, &type metadata for SDSQuoteResponse.SDSFundComposition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43930);
  }
  return result;
}

unint64_t sub_1ABE305C0()
{
  unint64_t result;

  result = qword_1EEC43938;
  if (!qword_1EEC43938)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41284, &type metadata for SDSQuoteResponse.SDSFundComposition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43938);
  }
  return result;
}

unint64_t sub_1ABE30608()
{
  unint64_t result;

  result = qword_1ED34CF90;
  if (!qword_1ED34CF90)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4116C, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CF90);
  }
  return result;
}

unint64_t sub_1ABE30650()
{
  unint64_t result;

  result = qword_1ED34CF88;
  if (!qword_1ED34CF88)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41194, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CF88);
  }
  return result;
}

unint64_t sub_1ABE30698()
{
  unint64_t result;

  result = qword_1ED34CFA8;
  if (!qword_1ED34CFA8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF4107C, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CFA8);
  }
  return result;
}

unint64_t sub_1ABE306E0()
{
  unint64_t result;

  result = qword_1ED34CFA0;
  if (!qword_1ED34CFA0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF410A4, &type metadata for SDSQuoteResponse.SDSQuoteResponseQuoteItem.TimeZoneOffset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CFA0);
  }
  return result;
}

unint64_t sub_1ABE30728()
{
  unint64_t result;

  result = qword_1ED34CFD8;
  if (!qword_1ED34CFD8)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40F8C, &type metadata for SDSQuoteResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CFD8);
  }
  return result;
}

unint64_t sub_1ABE30770()
{
  unint64_t result;

  result = qword_1ED34CFD0;
  if (!qword_1ED34CFD0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40FB4, &type metadata for SDSQuoteResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED34CFD0);
  }
  return result;
}

unint64_t sub_1ABE307B4()
{
  unint64_t result;

  result = qword_1EEC43948;
  if (!qword_1EEC43948)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41E24, &type metadata for SDSQuoteResponse.SDSFundComposition.Holding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43948);
  }
  return result;
}

unint64_t sub_1ABE307F8()
{
  unint64_t result;

  result = qword_1EEC43958;
  if (!qword_1EEC43958)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41DD4, &type metadata for SDSQuoteResponse.SDSFundComposition.Sector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEC43958);
  }
  return result;
}

unint64_t sub_1ABE3083C()
{
  unint64_t result;

  result = qword_1EEC43970;
  if (!qword_1EEC43970)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF40E9C, &type metadata for SDSQuoteResponse.SDSQuoteResponseItemType);
    atomic_store(result, (unint64_t *)&qword_1EEC43970);
  }
  return result;
}

unint64_t sub_1ABE30880()
{
  unint64_t result;

  result = qword_1ED346980;
  if (!qword_1ED346980)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41D84, &type metadata for SDSQuoteResponse.SDSQuoteResponseDateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED346980);
  }
  return result;
}

unint64_t sub_1ABE308C4()
{
  unint64_t result;

  result = qword_1ED3469A0;
  if (!qword_1ED3469A0)
  {
    result = MEMORY[0x1AF438F30](&unk_1ABF41D34, &type metadata for SDSQuoteResponse.SDSQuoteResponseEntryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3469A0);
  }
  return result;
}

uint64_t _s10StocksCore16SDSQuoteResponseV14SDSQuoteSourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1ABE30954 + 4 * byte_1ABF407AF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1ABE30988 + 4 * byte_1ABF407AA[v4]))();
}

